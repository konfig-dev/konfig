{
  "providerName": "visma.net",
  "openApiRaw": "https://integration.visma.net/API-index/doc/swagger",
  "securitySchemes": {
    "oauth2": {
      "description": "OAuth2 Authorization Code Grant",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://connect.visma.com/connect/authorize",
          "scopes": {
            "vismanet_erp_interactive_api:create": "vismanet_erp_interactive_api:create",
            "vismanet_erp_interactive_api:delete": "vismanet_erp_interactive_api:delete",
            "vismanet_erp_interactive_api:read": "vismanet_erp_interactive_api:read",
            "vismanet_erp_interactive_api:update": "vismanet_erp_interactive_api:update"
          },
          "tokenUrl": "https://connect.visma.com/connect/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "visma.net",
  "apiVersion": "9.66.02.1023",
  "methods": [
    {
      "url": "/controller/api/v1/GeneralLedgerTransactions",
      "method": "generalLedgerTransactionsGetAll",
      "httpMethod": "get",
      "tag": "GeneralLedgerTransactions",
      "description": "Get a range of General Ledger Transactions - ScreenId=GL404000\r\nPlease use a page size lower or equal to the allowed max page size which is returned under metadata. \r\nIf pagesize is greater than the max page size, it will be limited to max page size.",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "The branch CD"
        },
        {
          "name": "ledger",
          "schema": "string",
          "required": true,
          "description": "Mandatory. The ledger in which you want to view the account balances."
        },
        {
          "name": "fromPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period that begins the date range of the batches you want to view. Format YYYYPP"
        },
        {
          "name": "toPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period that ends the date range of the batches you want to view. Format YYYYPP"
        },
        {
          "name": "account",
          "schema": "string",
          "required": false,
          "description": "The account CD for which you want to view activities in the selected financial period."
        },
        {
          "name": "subaccountId",
          "schema": "string",
          "required": false,
          "description": "The Subaccount"
        },
        {
          "name": "fromDate",
          "schema": "string",
          "required": false,
          "description": "The first date of the interval within the period. Format YYYY-MM-DD"
        },
        {
          "name": "toDate",
          "schema": "string",
          "required": false,
          "description": "The last date of the interval within the selected period. Format YYYY-MM-DD"
        },
        {
          "name": "includeUnposted",
          "schema": "boolean",
          "required": false,
          "description": "Checkmark indicating if unposted batches are included."
        },
        {
          "name": "includeUnreleased",
          "schema": "boolean",
          "required": false,
          "description": "Checkmark indicating if unreleased (balanced) batches are included."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "expandAccountInfo",
          "schema": "boolean",
          "required": false,
          "description": "By default, if no value is provided, False and the account information will include only Number, Description, Type and GlConsolAccountCD.\r\nIf True, each transaction returned will include extended information about account."
        },
        {
          "name": "expandBranchInfo",
          "schema": "boolean",
          "required": false,
          "description": "By default, if no value is provided, False and branch information will include only branch number.\r\nIf True, each transaction returned will include extended information about Branch (number and name)."
        },
        {
          "name": "includeTransactionBalance",
          "schema": "boolean",
          "required": false,
          "description": "By default, if no value is provided, False and the transactions returned will not include their balances (fields BegBalance, EndingBalance, CurrBegBalance, CurrEndingBalance)\r\nIf True, each transaction returned will include its balance."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/KitSpecifications",
      "method": "kitSpecificationsGetAll",
      "httpMethod": "get",
      "tag": "KitSpecifications",
      "description": "Get a range of Kit Specifications - ScreenId = IN209500",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "kitInventoryId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "revisionId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/KitSpecifications",
      "method": "kitSpecificationsPost",
      "httpMethod": "post",
      "tag": "KitSpecifications",
      "description": "Creates a KitSpecification",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "allowCompAddition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "descr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isNonStock",
          "schema": "object",
          "description": ""
        },
        {
          "name": "kitInventoryID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nonStockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "operation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revisionID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "stockComponentLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/KitSpecifications/{kitInventoryID}",
      "method": "kitSpecificationsGetBykitInventoryId",
      "httpMethod": "get",
      "tag": "KitSpecifications",
      "description": "Get all revisions for a specific KitSpecification",
      "parameters": [
        {
          "name": "kitInventoryId",
          "schema": "string",
          "required": true,
          "description": "kitInventoryID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/KitSpecifications/{kitInventoryID}/{revisionID}",
      "method": "kitSpecificationsGetBykitInventoryIDrevisionId",
      "httpMethod": "get",
      "tag": "KitSpecifications",
      "description": "Get a specific KitSpecification",
      "parameters": [
        {
          "name": "kitInventoryId",
          "schema": "string",
          "required": true,
          "description": "kitInventoryID"
        },
        {
          "name": "revisionId",
          "schema": "string",
          "required": true,
          "description": "revisionID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/KitSpecifications/{kitInventoryID}/{revisionID}",
      "method": "kitSpecificationsPutBykitInventoryIDrevisionId",
      "httpMethod": "put",
      "tag": "KitSpecifications",
      "description": "Updates a specific KitSpecification",
      "parameters": [
        {
          "name": "kitInventoryId",
          "schema": "string",
          "required": true,
          "description": "kitInventoryID"
        },
        {
          "name": "revisionId",
          "schema": "string",
          "required": true,
          "description": "revisionID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "allowCompAddition",
          "schema": "object",
          "description": ""
        },
        {
          "name": "descr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isNonStock",
          "schema": "object",
          "description": ""
        },
        {
          "name": "kitInventoryID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nonStockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "operation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revisionID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "stockComponentLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt",
      "method": "purchaseReceiptGetAllReceiptBasic",
      "httpMethod": "get",
      "tag": "PurchaseReceipt",
      "description": "Get a range of Purchase Receipts - ScreenId=PO302000\r\nPlease use a page size lower or equal to the allowed max page size which is 500",
      "parameters": [
        {
          "name": "receiptType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poOrderNbr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt",
      "method": "purchaseReceiptPost",
      "httpMethod": "post",
      "tag": "PurchaseReceipt",
      "description": "Create a Purchase Receipt",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createBill",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "landedCost",
          "schema": "array",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}",
      "method": "purchaseReceiptGetPurchaseReceiptBasicByreceiptNumber",
      "httpMethod": "get",
      "tag": "PurchaseReceipt",
      "description": "Get a specific Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Receipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}",
      "method": "purchaseReceiptPutByreceiptNumber",
      "httpMethod": "put",
      "tag": "PurchaseReceipt",
      "description": "Update a specific Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the  Purchase Receipt  to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createBill",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "landedCost",
          "schema": "array",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorder",
      "method": "purchaseReceiptAddPurchaseOrdersByreceiptNumber",
      "httpMethod": "post",
      "tag": "PurchaseReceipt",
      "description": "Add purchase orders to receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the receipt to which to add the orders"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "purchaseOrders",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/addpurchaseorderlines",
      "method": "purchaseReceiptAddPurchaseOrderLinesByreceiptNumber",
      "httpMethod": "post",
      "tag": "PurchaseReceipt",
      "description": "Add purchase order lines to receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the receipt to which to add the orders"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "purchaseOrderLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}/action/release",
      "method": "purchaseReceiptReleaseInvoiceByreceiptNumber",
      "httpMethod": "post",
      "tag": "PurchaseReceipt",
      "description": "Release purchase receipt operation",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the receipt to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceipt/{receiptNumber}/print",
      "method": "purchaseReceiptPrintPurchaseReceiptByreceiptNumber",
      "httpMethod": "get",
      "tag": "PurchaseReceipt",
      "description": "Get the print report of a Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the receipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceiptBasic",
      "method": "purchaseReceiptBasicGetAllReceiptBasic",
      "httpMethod": "get",
      "tag": "PurchaseReceiptBasic",
      "description": "Get a range with purchase receipts, ScreenId=PO302000\r\nPlease use a page size lower or equal to the allowed max page size which is 500",
      "parameters": [
        {
          "name": "receiptType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poOrderNbr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceiptBasic",
      "method": "purchaseReceiptBasicPost",
      "httpMethod": "post",
      "tag": "PurchaseReceiptBasic",
      "description": "Create a Purchase Receipt",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createBill",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceiptBasic/{receiptNumber}",
      "method": "purchaseReceiptBasicGetPurchaseReceiptBasicByreceiptNumber",
      "httpMethod": "get",
      "tag": "PurchaseReceiptBasic",
      "description": "Get a specific Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Receipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceiptBasic/{receiptNumber}",
      "method": "purchaseReceiptBasicPutByreceiptNumber",
      "httpMethod": "put",
      "tag": "PurchaseReceiptBasic",
      "description": "Update a specific Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the  Purchase Receipt  to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createBill",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "receiptType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/PurchaseReceiptBasic/{receiptNumber}/action/release",
      "method": "purchaseReceiptBasicReleaseInvoiceByreceiptNumber",
      "httpMethod": "post",
      "tag": "PurchaseReceiptBasic",
      "description": "Release purchase receipt operation",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the receipt to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/account",
      "method": "accountGetAll",
      "httpMethod": "get",
      "tag": "Account",
      "description": "Get a range of General ledger accounts - ScreenId=GL202500",
      "parameters": [
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Set to True to select active accounts."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Enter the from-value for Account no."
        },
        {
          "name": "publicCode",
          "schema": "integer",
          "required": false,
          "description": "Filter by the Public code 1, authorities mapped code to the account."
        },
        {
          "name": "externalCode1",
          "schema": "string",
          "required": false,
          "description": "Filter by External code 1 (field used for sorting and inquiries.)"
        },
        {
          "name": "externalCode2",
          "schema": "string",
          "required": false,
          "description": "Filter by External code 2 (field used for sorting and inquiries.)"
        },
        {
          "name": "analysisCode",
          "schema": "string",
          "required": false,
          "description": "Filter by Analysis code (field used for sorting and inquiries.)"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/account",
      "method": "accountPost",
      "httpMethod": "post",
      "tag": "Account",
      "description": "Creates an account",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountCD",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountClass",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountGroupCD",
          "schema": "object",
          "description": ""
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "analysisCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "extenalCode1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalCode2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postOption",
          "schema": "object",
          "description": ""
        },
        {
          "name": "publicCode1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCategory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        },
        {
          "name": "useDefaultSub",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/account/{accountCd}",
      "method": "accountGetByaccountCd",
      "httpMethod": "get",
      "tag": "Account",
      "description": "Get a specific Account - ScreenId=GL202500",
      "parameters": [
        {
          "name": "accountCd",
          "schema": "string",
          "required": true,
          "description": "Return the Information from Chart of account for the specified AccountCD"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/account/{accountCd}",
      "method": "accountPutByaccountCd",
      "httpMethod": "put",
      "tag": "Account",
      "description": "Updates an account",
      "parameters": [
        {
          "name": "accountCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the account to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountCD",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountClass",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountGroupCD",
          "schema": "object",
          "description": ""
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "analysisCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "extenalCode1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalCode2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postOption",
          "schema": "object",
          "description": ""
        },
        {
          "name": "publicCode1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCategory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        },
        {
          "name": "useDefaultSub",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attachment/{attachmentId}",
      "method": "attachmentGetByattachmentId",
      "httpMethod": "get",
      "tag": "Attachment",
      "description": "Get latest revision of a specific Attachment",
      "parameters": [
        {
          "name": "attachmentId",
          "schema": "string",
          "required": true,
          "description": "Identifies the attachment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attachment/{attachmentId}",
      "method": "attachmentPutByattachmentId",
      "httpMethod": "put",
      "tag": "Attachment",
      "description": "Update a specific Attachment",
      "parameters": [
        {
          "name": "attachmentId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Attachment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "sendToAutoinvoice",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attribute",
      "method": "attributeGetAttributes",
      "httpMethod": "get",
      "tag": "Attribute",
      "description": "Get a range of General ledger attributes - screen ID: CS205000.\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "attributeId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "controlType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "internal",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attribute",
      "method": "attributePost",
      "httpMethod": "post",
      "tag": "Attribute",
      "description": "Creates an attribute",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "attributeID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryMask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "regExp",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attribute/{attributeId}",
      "method": "attributeDeleteByattributeId",
      "httpMethod": "delete",
      "tag": "Attribute",
      "description": "Deletes an attribute",
      "parameters": [
        {
          "name": "attributeId",
          "schema": "string",
          "required": true,
          "description": "Identifies the attribute to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attribute/{attributeId}",
      "method": "attributeGetAttributeByattributeId",
      "httpMethod": "get",
      "tag": "Attribute",
      "description": "Get specific Attribute",
      "parameters": [
        {
          "name": "attributeId",
          "schema": "string",
          "required": true,
          "description": "Identifies the attribute"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an attribute in AttributeController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/attribute/{attributeId}",
      "method": "attributePutByattributeId",
      "httpMethod": "put",
      "tag": "Attribute",
      "description": "Updates an attribute",
      "parameters": [
        {
          "name": "attributeId",
          "schema": "string",
          "required": true,
          "description": "Identifies the attribute to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "attributeID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "entryMask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "internal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "regExp",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/background/{requestId}",
      "method": "backgroundGetBackgroundApiOperationByrequestId",
      "httpMethod": "get",
      "tag": "Background",
      "description": "Gets the state of a previously started background API operation",
      "parameters": [
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/background/{requestId}/content",
      "method": "backgroundGetBackgroundApiOperationContentByrequestId",
      "httpMethod": "get",
      "tag": "Background",
      "description": "Gets the response content, if any, of a previously started background API operation that has finished",
      "parameters": [
        {
          "name": "requestId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/branch",
      "method": "branchGetAllBranches",
      "httpMethod": "get",
      "tag": "Branch",
      "description": "Get a range of Branches - ScreenId=CS101500",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter by branch ID (number) greater than."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Order by Branch ID"
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "expandAddress",
          "schema": "boolean",
          "required": false,
          "description": "True to get main address for branch."
        },
        {
          "name": "expandContact",
          "schema": "boolean",
          "required": false,
          "description": "True to get main contact for a branch."
        },
        {
          "name": "expandCurrency",
          "schema": "boolean",
          "required": false,
          "description": "True to get base currency for a branch."
        },
        {
          "name": "expandVatZone",
          "schema": "boolean",
          "required": false,
          "description": "True to get vat zone for a branch."
        },
        {
          "name": "expandLedger",
          "schema": "boolean",
          "required": false,
          "description": "True to get ledger for a branch."
        },
        {
          "name": "expandIndustryCode",
          "schema": "boolean",
          "required": false,
          "description": "True to get industry code for a branch."
        },
        {
          "name": "expandDeliveryAddress",
          "schema": "boolean",
          "required": false,
          "description": "True to get delivery address for a branch."
        },
        {
          "name": "expandDeliveryContact",
          "schema": "boolean",
          "required": false,
          "description": "True to get delivery contact for a branch."
        },
        {
          "name": "expandDefaultCountry",
          "schema": "boolean",
          "required": false,
          "description": "True to get default country for a branch."
        },
        {
          "name": "expandBankSettings",
          "schema": "boolean",
          "required": false,
          "description": "True to get payment settings for Branch."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/branch/{branchNumber}",
      "method": "branchGetSpecificBranchBybranchNumber",
      "httpMethod": "get",
      "tag": "Branch",
      "description": "Get a specific branch",
      "parameters": [
        {
          "name": "branchNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the branch"
        },
        {
          "name": "expandAddress",
          "schema": "boolean",
          "required": false,
          "description": "True to get main address for branch."
        },
        {
          "name": "expandContact",
          "schema": "boolean",
          "required": false,
          "description": "True to get main contact for a branch."
        },
        {
          "name": "expandCurrency",
          "schema": "boolean",
          "required": false,
          "description": "True to get base currency for a branch."
        },
        {
          "name": "expandVatZone",
          "schema": "boolean",
          "required": false,
          "description": "True to get vat zone for a branch."
        },
        {
          "name": "expandLedger",
          "schema": "boolean",
          "required": false,
          "description": "True to get ledger for a branch."
        },
        {
          "name": "expandIndustryCode",
          "schema": "boolean",
          "required": false,
          "description": "True to get industry code for a branch."
        },
        {
          "name": "expandDeliveryAddress",
          "schema": "boolean",
          "required": false,
          "description": "True to get delivery address for a branch."
        },
        {
          "name": "expandDeliveryContact",
          "schema": "boolean",
          "required": false,
          "description": "True to get delivery contact for a branch."
        },
        {
          "name": "expandDefaultCountry",
          "schema": "boolean",
          "required": false,
          "description": "True to get default country for a branch."
        },
        {
          "name": "expandBankSettings",
          "schema": "boolean",
          "required": false,
          "description": "True to get payment settings for Branch."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/branch/{branchNumber}/BankSettings",
      "method": "branchPutBankSettingsForBranchBybranchNumber",
      "httpMethod": "put",
      "tag": "Branch",
      "description": "Update bank settings for branch.",
      "parameters": [
        {
          "name": "branchNumber",
          "schema": "string",
          "required": true,
          "description": "branch number to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "bankAddress1",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankAddress2",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankAddress3",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankCountry",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankName",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bbaN2",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bbaN3",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bban",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bic",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "creditorId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "iban",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/budget",
      "method": "budgetGetAll",
      "httpMethod": "get",
      "tag": "Budget",
      "description": "Get a range of General Ledger Budget Figures - ScreenId=GL302010",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter by from date."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Order by Last modified date and time."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "Mandatory. Filter by budgets Branch."
        },
        {
          "name": "ledger",
          "schema": "string",
          "required": false,
          "description": "Mandatory. The budgets Ledger"
        },
        {
          "name": "financialYear",
          "schema": "string",
          "required": false,
          "description": "The budgets financial year."
        },
        {
          "name": "subaccount",
          "schema": "string",
          "required": false,
          "description": "The Subaccount of the budget article."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/budget",
      "method": "budgetCreateBudget",
      "httpMethod": "post",
      "tag": "Budget",
      "description": "Create a Budget",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialYear",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "object",
          "description": ""
        },
        {
          "name": "periods",
          "schema": "array",
          "description": ""
        },
        {
          "name": "subaccount",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/budget",
      "method": "budgetPut",
      "httpMethod": "put",
      "tag": "Budget",
      "description": "Update a specific Budget",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "account",
          "schema": "object",
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialYear",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "object",
          "description": ""
        },
        {
          "name": "periods",
          "schema": "array",
          "description": ""
        },
        {
          "name": "subaccount",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/carrier",
      "method": "carrierGetAllCarriers",
      "httpMethod": "get",
      "tag": "Carrier",
      "description": "Get a range of Carriers - ScreeId=CS207500",
      "parameters": [
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "Enter the number of records to read."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "Enter the number of records to skip."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/carrier/{carrierName}",
      "method": "carrierGetCarrierBycarrierName",
      "httpMethod": "get",
      "tag": "Carrier",
      "description": "Get a specific Carrier",
      "parameters": [
        {
          "name": "carrierName",
          "schema": "string",
          "required": true,
          "description": "Identifies the Carrier"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Carrier in CarrierController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction",
      "method": "cashTransactionGetAll",
      "httpMethod": "get",
      "tag": "CashTransaction",
      "description": "Get all Transaction - ScreenID=CA304000",
      "parameters": [
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction",
      "method": "cashTransactionCreateCashTransaction",
      "httpMethod": "post",
      "tag": "CashTransaction",
      "description": "Create a Cash Transaction- ScreenID=CA304000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashTransactionDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cashTransactionTaxDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "entryType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "finanacialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCalculationMode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tranDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction/{referenceNbr}",
      "method": "cashTransactionGetByreferenceNbr",
      "httpMethod": "get",
      "tag": "CashTransaction",
      "description": "Get a specific Transaction - ScreenID=CA304000",
      "parameters": [
        {
          "name": "referenceNbr",
          "schema": "string",
          "required": true,
          "description": "Returns data for the selected Cash transaction"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction/{referenceNbr}",
      "method": "cashTransactionPutByreferenceNbr",
      "httpMethod": "put",
      "tag": "CashTransaction",
      "description": "Update a specific CashTransaction - ScreenID=CA304000",
      "parameters": [
        {
          "name": "referenceNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Cash Transaction to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashTransactionDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cashTransactionTaxDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "entryType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "finanacialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCalculationMode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tranDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction/{referenceNbr}/action/release",
      "method": "cashTransactionReleaseByreferenceNbr",
      "httpMethod": "post",
      "tag": "CashTransaction",
      "description": "Release cash transaction - ScreenID=CA304000",
      "parameters": [
        {
          "name": "referenceNbr",
          "schema": "string",
          "required": true,
          "description": "Reference number of the cash transaction to be released."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashTransaction/{referenceNbr}/action/reverse",
      "method": "cashTransactionReverseByreferenceNbr",
      "httpMethod": "post",
      "tag": "CashTransaction",
      "description": "Reverse a Cash Transaction- ScreenID=CA304000",
      "parameters": [
        {
          "name": "referenceNbr",
          "schema": "string",
          "required": true,
          "description": "Reference number of the cash transaction to be reversed."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "returnCashTransaction",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashaccount",
      "method": "cashAccountGetAll",
      "httpMethod": "get",
      "tag": "CashAccount",
      "description": "Get all Cash Accounts - ScreenId=CA202000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter Cass account identifier greater than."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashaccount/{accountNumber}",
      "method": "cashAccountGetByaccountNumber",
      "httpMethod": "get",
      "tag": "CashAccount",
      "description": "Get a specific cash account",
      "parameters": [
        {
          "name": "accountNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the cash account"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashsale",
      "method": "cashSaleGetAllCashSales",
      "httpMethod": "get",
      "tag": "CashSale",
      "description": "Get a range of Cash Sales - ScreenId=AR304000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2021-October:Added forced pagination",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashsale",
      "method": "cashSalePost",
      "httpMethod": "post",
      "tag": "CashSale",
      "description": "Create a Cash Sale",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashSaleLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashsale/{documentNumber}",
      "method": "cashSaleGetBydocumentNumber",
      "httpMethod": "get",
      "tag": "CashSale",
      "description": "Get a specific Cash Sale",
      "parameters": [
        {
          "name": "documentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Cash Sale Document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a invoice in InvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/cashsale/{documentNumber}",
      "method": "cashSalePutBydocumentNumber",
      "httpMethod": "put",
      "tag": "CashSale",
      "description": "Update a specific Cash Sale",
      "parameters": [
        {
          "name": "documentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Cash Sale to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashSaleLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contact",
      "method": "contactGetAllContacts",
      "httpMethod": "get",
      "tag": "Contact",
      "description": "Get a range of Contacts - ScreenId=CR302000",
      "parameters": [
        {
          "name": "displayName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "active",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "businessAccount",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contact",
      "method": "contactCreateContact",
      "httpMethod": "post",
      "tag": "Contact",
      "description": "Create a Contact",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotCall",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotFax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotMail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "email",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "noMarketing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "noMassMail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "position",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sameAsAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "title",
          "schema": "object",
          "description": ""
        },
        {
          "name": "web",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contact/{contactId}",
      "method": "contactGetBycontactId",
      "httpMethod": "get",
      "tag": "Contact",
      "description": "Get a specific Contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Contact"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a contact in ContactController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contact/{contactId}",
      "method": "contactPutBycontactId",
      "httpMethod": "put",
      "tag": "Contact",
      "description": "Update a specific Contact",
      "parameters": [
        {
          "name": "contactId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Contact to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotCall",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotFax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "doNotMail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "email",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fax",
          "schema": "object",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "noMarketing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "noMassMail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "position",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sameAsAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "title",
          "schema": "object",
          "description": ""
        },
        {
          "name": "web",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contractTemplate",
      "method": "contractTemplateGetAll",
      "httpMethod": "get",
      "tag": "ContractTemplate",
      "description": "Get a range of Contract Templates - ScreenId=CT202000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttributes",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contractUsage",
      "method": "contractUsageGetAll",
      "httpMethod": "get",
      "tag": "ContractUsage",
      "description": "Get a range of Contract Usage - ScreenId=CT303000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contractUsage/{contractId}",
      "method": "contractUsageGetSpecificBycontractId",
      "httpMethod": "get",
      "tag": "ContractUsage",
      "description": "Get a specific Contract Usage",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identify the Contract Usage"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/contractUsage/{contractId}",
      "method": "contractUsagePutBycontractId",
      "httpMethod": "put",
      "tag": "ContractUsage",
      "description": "Update a specific Contract Usage",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Contract Usage to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/country",
      "method": "countryGetCountries",
      "httpMethod": "get",
      "tag": "Country",
      "description": "Get a range of Countries - ScreenId=CS20400S\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/country/{countryId}",
      "method": "countryGetCountryBycountryId",
      "httpMethod": "get",
      "tag": "Country",
      "description": "Get a specific Country",
      "parameters": [
        {
          "name": "countryId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Country"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote",
      "method": "creditNoteGetAllCreditNotesDto",
      "httpMethod": "get",
      "tag": "CreditNote",
      "description": "Get a range of Credit Notes - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote",
      "method": "creditNoteCreateCreditNote",
      "httpMethod": "post",
      "tag": "CreditNote",
      "description": "Create a Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote/{creditNoteNumber}",
      "method": "creditNoteGetBycreditNoteNumber",
      "httpMethod": "get",
      "tag": "CreditNote",
      "description": "Get a specific Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Credit Note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a invoice in InvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote/{creditNoteNumber}",
      "method": "creditNotePutBycreditNoteNumber",
      "httpMethod": "put",
      "tag": "CreditNote",
      "description": "Update a specific Credit Note - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Credit Note to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote/{creditNoteNumber}/action/release",
      "method": "creditNoteReleaseInvoiceBycreditNoteNumber",
      "httpMethod": "post",
      "tag": "CreditNote",
      "description": "Release credit note operation - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the credit note to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote/{creditNoteNumber}/attachment",
      "method": "creditNoteCreateHeaderAttachmentBycreditNoteNumber",
      "httpMethod": "post",
      "tag": "CreditNote",
      "description": "Creates an attachment and associates it with a Credit Note. If the file already exists, a new revision is created.\r\n - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Credit Note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditNote/{creditNoteNumber}/{lineNumber}/attachment",
      "method": "creditNoteCreateLineAttachmentBycreditNoteNumberlineNumber",
      "httpMethod": "post",
      "tag": "CreditNote",
      "description": "Creates an attachment and associates it with a certain Credit Note line. If the file already exists, a new revision is created.\r\n - Method is deprecated start using the new method in endpoint Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Credit Note"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/creditTerm",
      "method": "creditTermGetCreditTerms",
      "httpMethod": "get",
      "tag": "CreditTerm",
      "description": "Get a range of credit terms - ScreenId=CS206500",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "termsId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/currency",
      "method": "currencyGetAll",
      "httpMethod": "get",
      "tag": "Currency",
      "description": "Get all available Currencies - ScreenId=CM202000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/currency/{curyId}",
      "method": "currencyGetSpecificCurrencyBycuryId",
      "httpMethod": "get",
      "tag": "Currency",
      "description": "Get a specific Currency - ScreenId=CM202000",
      "parameters": [
        {
          "name": "curyId",
          "schema": "string",
          "required": true,
          "description": "Returns data for the selected CurrencyId"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer",
      "method": "customerGetAll",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of customers - ScreenId=AR303000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "This field does not work and has been deprecated. It will be removed in future versions."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r\nTells the service to return only {numberToRead} number of records."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "[This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.]\r\nTells the service to return only records after the first {skipRecords} number of records."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": "Equals Customer name."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Drop down and select Status."
        },
        {
          "name": "corporateId",
          "schema": "string",
          "required": false,
          "description": "Equals Corporate ID from Delivery settings tab."
        },
        {
          "name": "vatRegistrationId",
          "schema": "string",
          "required": false,
          "description": "Equals VAT registration ID from Delivery settings tab."
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": "Equals Email for customer."
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": "Equals Phone 1 for customer."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAccountInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandPaymentMethods",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandDirectDebit",
          "schema": "boolean",
          "required": false,
          "description": "Expand direct debit info"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": " Attributes (additional information) connected to the entity.\r\n Examples:\r\n{{base}}/customer?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r\n{{base}}/customer?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer",
      "method": "customerPost",
      "httpMethod": "post",
      "tag": "Customer",
      "description": "Creates a customer",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "acceptAutoInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditDaysPastDue",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditLimit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditVerification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "defaultPaymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "directDebitLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "eInvoiceContract",
          "schema": "object",
          "description": ""
        },
        {
          "name": "glAccounts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceToDefaultLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideWithClassValues",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parentRecordNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priceClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printMultiCurrencyStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendInvoicesByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendStatementsByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "statementType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZoneId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/action/changeCustomerCd/{internalId}",
      "method": "customerChangeCustomerNrActionByinternalId",
      "httpMethod": "post",
      "tag": "Customer",
      "description": "Updates the CustomerNr for the specified Customer",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Internal identifier of the Customer for which the Customer Nr will be changed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "customerCd",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/balance",
      "method": "customerGetAllCustomerBalance",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get the balance for a range of customers",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/customerClass",
      "method": "customerGetCustomerClasses",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get Customer Classes - ScreenId=AR201000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/customerClass/{customerClassId}",
      "method": "customerGetSpecificCustomerClassBycustomerClassId",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a specific customer class - ScreenId=AR201000",
      "parameters": [
        {
          "name": "customerClassId",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer class"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/internal/{internalID}",
      "method": "customerGetByinternalId",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a specific customer by internalID",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the customer"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a customer in CustomerController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/internal/{internalID}",
      "method": "customerPutByinternalId",
      "httpMethod": "put",
      "tag": "Customer",
      "description": "Updates a specific customer using the internalID",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the customer to update by its internalID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "acceptAutoInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditDaysPastDue",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditLimit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditVerification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "defaultPaymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "directDebitLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "eInvoiceContract",
          "schema": "object",
          "description": ""
        },
        {
          "name": "glAccounts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceToDefaultLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideWithClassValues",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parentRecordNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priceClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printMultiCurrencyStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendInvoicesByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendStatementsByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "statementType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZoneId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}",
      "method": "customerGetBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a customer in CustomerController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}",
      "method": "customerPutBycustomerCd",
      "httpMethod": "put",
      "tag": "Customer",
      "description": "Updates a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "acceptAutoInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditDaysPastDue",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditLimit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditVerification",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "defaultPaymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "deliveryContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "directDebitLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "eInvoiceContract",
          "schema": "object",
          "description": ""
        },
        {
          "name": "glAccounts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceToDefaultLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideWithClassValues",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parentRecordNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "priceClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printInvoices",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printMultiCurrencyStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "printStatements",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendInvoicesByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sendStatementsByEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "statementType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZoneId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/balance",
      "method": "customerGetCustomerBalanceBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a specific customer's balance - ScreenId=AR303000",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/contact",
      "method": "customerGetAllContactsForCustomerBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of Contacts of a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "displayName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "active",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "businessAccount",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/directdebit",
      "method": "customerGetCustomerDirectDebitBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get direct debit information for a specific customer(only for Netherlands)",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/note",
      "method": "customerGetCustomerNoteBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a specific customer's note",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/salesorder",
      "method": "customerGetAllOrderForCustomerBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of SO Orders of a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Filter by Order type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select to filter on status on order."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on Order no. greater than value."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "showNotes",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include notes."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/salesorderbasic",
      "method": "customerGetAllSalesOrderBasicForCustomerBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of SO Orders Basic of a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Filter by Order type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select to filter on status on order."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on Order no. greater than value."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "showNotes",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include notes."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerCd}/salespersons",
      "method": "customerGetSalesPersonsForCustomerBycustomerCd",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of Sales Persons of a specific customer",
      "parameters": [
        {
          "name": "customerCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerNumber}/cashSale",
      "method": "customerGetAllCashSalesForCustomerBycustomerNumber",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of cash sales for a specific customer",
      "parameters": [
        {
          "name": "customerNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerNumber}/document",
      "method": "customerGetAllDocumentsForCustomerBycustomerNumber",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Gets a range of documents for a specific customer",
      "parameters": [
        {
          "name": "customerNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customerNumber}/invoice",
      "method": "customerGetAllInvoicesForCustomerBycustomerNumber",
      "httpMethod": "get",
      "tag": "Customer",
      "description": "Get a range of invoices for a specific customer",
      "parameters": [
        {
          "name": "customerNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer for which to return data"
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customer/{customer}/action/createDunningLetter",
      "method": "customerCreateDunningLetterActionBycustomer",
      "httpMethod": "post",
      "tag": "Customer",
      "description": "Creates dunning letters for a specific customer",
      "parameters": [
        {
          "name": "customer",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer for which the dunning letters will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "dunningLetterDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "levelFrom",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "levelTo",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract",
      "method": "customerContractGetAll",
      "httpMethod": "get",
      "tag": "CustomerContract",
      "description": "Get a range of Customer Contracts, a filter needs to be specified - ScreenId=CT301000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "contractTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expandSummary",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandDetails",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": " Attributes (additional information) connected to the entity.\r\n Examples:\r\n{{base}}/customerContract?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r\n{{base}}/customerContract?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
        },
        {
          "name": "expandAttributes",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract",
      "method": "customerContractCreateCustomerContract",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Create a CustomerContract",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "activationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "contractId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contractTemplate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "expirationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gracePeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceTo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "massRenewal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "renewalPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPerson",
          "schema": "object",
          "description": ""
        },
        {
          "name": "setupDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}",
      "method": "customerContractGetCustomerContractBycontractId",
      "httpMethod": "get",
      "tag": "CustomerContract",
      "description": "Get a specific Customer Contract",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer contract"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a CustomerContract in CustomerContractController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}",
      "method": "customerContractPutBycontractId",
      "httpMethod": "put",
      "tag": "CustomerContract",
      "description": "Update a specific CustomerContract",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the CustomerContract to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "activationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "contractId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contractTemplate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "expirationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gracePeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceTo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "massRenewal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "renewalPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPerson",
          "schema": "object",
          "description": ""
        },
        {
          "name": "setupDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/activateContract",
      "method": "customerContractActivateContractBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Activate contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be activated"
        },
        {
          "name": "activationDate",
          "schema": "string",
          "required": false,
          "description": "Optional Activation Date"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/activateUpgrade",
      "method": "customerContractActivateUpgradeBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Activate upgrade contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be activated"
        },
        {
          "name": "activationDate",
          "schema": "string",
          "required": false,
          "description": "Optional Activation Date"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/setupAndActivateContract",
      "method": "customerContractSetupAndActivateContractBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Setup and Activate contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be setup and activated"
        },
        {
          "name": "activationDate",
          "schema": "string",
          "required": false,
          "description": "Optional Activation Date"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/setupContract",
      "method": "customerContractSetupContractBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Setup contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be set up"
        },
        {
          "name": "setupDate",
          "schema": "string",
          "required": false,
          "description": "Optional Setup Date"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/terminateContract",
      "method": "customerContractTerminateContractBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Terminate contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be terminated"
        },
        {
          "name": "terminationDate",
          "schema": "string",
          "required": false,
          "description": "Optional Termination Date"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/action/upgradeContract",
      "method": "customerContractUpgradeContractBycontractId",
      "httpMethod": "post",
      "tag": "CustomerContract",
      "description": "Upgrade contract operation",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Reference number of the customer contract to be upgraded"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/details",
      "method": "customerContractGetCustomerContractDetailsBycontractId",
      "httpMethod": "get",
      "tag": "CustomerContract",
      "description": "Get a specific Customer Contract Details",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer contract"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents the CustomerContractDetails in CustomerContractController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/recurringSummary",
      "method": "customerContractGetCustomerContractRecurringSummaryBycontractId",
      "httpMethod": "get",
      "tag": "CustomerContract",
      "description": "Get a specific Customer Contract Recurring Summary",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer contract"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents the CustomerContractRecurringSummary in CustomerContractController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerContract/{contractId}/summary",
      "method": "customerContractGetCustomerContractSummaryBycontractId",
      "httpMethod": "get",
      "tag": "CustomerContract",
      "description": "Get a specific Customer Contract Summary",
      "parameters": [
        {
          "name": "contractId",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer contract"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents the CustomerContractSummary in CustomerContractController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote",
      "method": "customerCreditNoteGetAll",
      "httpMethod": "get",
      "tag": "CustomerCreditNote",
      "description": "Get a range of Customer Credit Notes - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote",
      "method": "customerCreditNoteCreate",
      "httpMethod": "post",
      "tag": "CustomerCreditNote",
      "description": "Create a Credit Note. Method is deprecated and will be removed starting May 2021 - start using new method CustomerCreditNoteV2 endpoint.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}",
      "method": "customerCreditNoteDeleteBycreditNoteNumber",
      "httpMethod": "delete",
      "tag": "CustomerCreditNote",
      "description": "Deletes a specific Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Credit Note to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}",
      "method": "customerCreditNoteGetBycreditNoteNumber",
      "httpMethod": "get",
      "tag": "CustomerCreditNote",
      "description": "Get a specific Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Credit Note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}",
      "method": "customerCreditNoteUpdateBycreditNoteNumber",
      "httpMethod": "put",
      "tag": "CustomerCreditNote",
      "description": "Update a specific Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Credit Note to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}/action/release",
      "method": "customerCreditNoteReleaseDocumentBycreditNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerCreditNote",
      "description": "Release credit note operation",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the credit note to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}/action/sendToAutoInvoice",
      "method": "customerCreditNoteSendToAutoInvoiceBycreditNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerCreditNote",
      "description": "SendToAutoInvoice credit note operation",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the credit note to be send to AutoInvoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}/attachment",
      "method": "customerCreditNoteCreateHeaderAttachmentBycreditNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerCreditNote",
      "description": "Creates an attachment and associates it with a credit note. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the credit note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}/print",
      "method": "customerCreditNotePrintBycreditNoteNumber",
      "httpMethod": "get",
      "tag": "CustomerCreditNote",
      "description": "Get the print report of a Customer Credit Note",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer credit note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditNote/{creditNoteNumber}/{lineNumber}/attachment",
      "method": "customerCreditNoteCreateLineAttachmentBycreditNoteNumberlineNumber",
      "httpMethod": "post",
      "tag": "CustomerCreditNote",
      "description": "Creates an attachment and associates it with a certain credit note line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "creditNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the credit note"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditWriteOff",
      "method": "customerCreditWriteOffGetAll",
      "httpMethod": "get",
      "tag": "CustomerCreditWriteOff",
      "description": "Get a range of Customer Credit WriteOffs - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerCreditWriteOff/{creditWriteOffNumber}",
      "method": "customerCreditWriteOffGetBycreditWriteOffNumber",
      "httpMethod": "get",
      "tag": "CustomerCreditWriteOff",
      "description": "Get a specific Customer Credit WriteOff",
      "parameters": [
        {
          "name": "creditWriteOffNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Credit WriteOff"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote",
      "method": "customerDebitNoteGetAll",
      "httpMethod": "get",
      "tag": "CustomerDebitNote",
      "description": "Get a range of Customer Debit Notes - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote",
      "method": "customerDebitNoteCreate",
      "httpMethod": "post",
      "tag": "CustomerDebitNote",
      "description": "Create a Debit Note. Method is deprecated and will be removed starting May 2021 - start using new method CustomerDebitNoteV2 endpoint.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}",
      "method": "customerDebitNoteGetBydebitNoteNumber",
      "httpMethod": "get",
      "tag": "CustomerDebitNote",
      "description": "Get a specific Customer Debit Note",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Debit Note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Customer Debit Note. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}",
      "method": "customerDebitNoteUpdateBydebitNoteNumber",
      "httpMethod": "put",
      "tag": "CustomerDebitNote",
      "description": "Update a specific Debit Note",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Debit Note to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}/action/release",
      "method": "customerDebitNoteReleaseDocumentBydebitNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerDebitNote",
      "description": "Release debit note operation",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the debit note to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}/action/sendToAutoInvoice",
      "method": "customerDebitNoteSendToAutoInvoiceBydebitNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerDebitNote",
      "description": "SendToAutoInvoice debit note operation",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the debit note to be send to AutoInvoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}/attachment",
      "method": "customerDebitNoteCreateHeaderAttachmentBydebitNoteNumber",
      "httpMethod": "post",
      "tag": "CustomerDebitNote",
      "description": "Creates an attachment and associates it with a debit note. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the debit note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}/print",
      "method": "customerDebitNotePrintBydebitNoteNumber",
      "httpMethod": "get",
      "tag": "CustomerDebitNote",
      "description": "Get the print report of a Customer Debit Note",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer debit note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerDebitNote/{debitNoteNumber}/{lineNumber}/attachment",
      "method": "customerDebitNoteCreateLineAttachmentBydebitNoteNumberlineNumber",
      "httpMethod": "post",
      "tag": "CustomerDebitNote",
      "description": "Creates an attachment and associates it with a certain debit note line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "debitNoteNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the debit note"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge",
      "method": "customerOverdueChargeGetAll",
      "httpMethod": "get",
      "tag": "CustomerOverdueCharge",
      "description": "Get a range of Customer Overdue Charges - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}",
      "method": "customerOverdueChargeGetByoverdueChargeNumber",
      "httpMethod": "get",
      "tag": "CustomerOverdueCharge",
      "description": "Get a specific Customer Overdue Charge",
      "parameters": [
        {
          "name": "overdueChargeNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Overdue Charge"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a invoice in CustomerOverdueChargeController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}",
      "method": "customerOverdueChargeUpdateByoverdueChargeNumber",
      "httpMethod": "put",
      "tag": "CustomerOverdueCharge",
      "description": "Update a specific Overdue Charge",
      "parameters": [
        {
          "name": "overdueChargeNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Overdue Charge to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/action/release",
      "method": "customerOverdueChargeReleaseDocumentByoverdueChargeNumber",
      "httpMethod": "post",
      "tag": "CustomerOverdueCharge",
      "description": "Release overdue charge operation",
      "parameters": [
        {
          "name": "overdueChargeNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the overdue charge to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/attachment",
      "method": "customerOverdueChargeCreateHeaderAttachmentByoverdueChargeNumber",
      "httpMethod": "post",
      "tag": "CustomerOverdueCharge",
      "description": "Creates an attachment and associates it with an overdue charge. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "overdueChargeNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the overdue charge"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerOverdueCharge/{overdueChargeNumber}/{lineNumber}/attachment",
      "method": "customerOverdueChargeCreateLineAttachmentByoverdueChargeNumberlineNumber",
      "httpMethod": "post",
      "tag": "CustomerOverdueCharge",
      "description": "Creates an attachment and associates it with a certain overdue charge line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "overdueChargeNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the overdue charge"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment",
      "method": "customerPaymentGetAllPayments",
      "httpMethod": "get",
      "tag": "CustomerPayment",
      "description": "Get a range of Payments. - SceenId=AR302000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "paymentNbr",
          "schema": "string",
          "required": false,
          "description": "Payment number"
        },
        {
          "name": "paymentType",
          "schema": "string",
          "required": false,
          "description": "Select Type"
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "Enter Customer"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Enter the from-value for Ref. no."
        },
        {
          "name": "invoiceRefNbr",
          "schema": "string",
          "required": false,
          "description": "Enter Invoice Ref Nbr"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Enter field to order your records by."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment",
      "method": "customerPaymentCreatePayment",
      "httpMethod": "post",
      "tag": "CustomerPayment",
      "description": "Create a Payment",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "ordersToApply",
          "schema": "array",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment/{paymentNumber}",
      "method": "customerPaymentGetBypaymentNumber",
      "httpMethod": "get",
      "tag": "CustomerPayment",
      "description": "Get a specific Payment",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Payment in PaymentController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment/{paymentNumber}",
      "method": "customerPaymentPutBypaymentNumber",
      "httpMethod": "put",
      "tag": "CustomerPayment",
      "description": "Update a specific Payment",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "ordersToApply",
          "schema": "array",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment/{paymentNumber}/action/release",
      "method": "customerPaymentReleasePaymentBypaymentNumber",
      "httpMethod": "post",
      "tag": "CustomerPayment",
      "description": "Release payment operation",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the payment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerPayment/{paymentNumber}/action/void",
      "method": "customerPaymentVoidPaymentBypaymentNumber",
      "httpMethod": "post",
      "tag": "CustomerPayment",
      "description": "Void payment operation",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the payment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "returnVoidPayment",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerSalesPrice",
      "method": "customerSalesPriceGetCustomerSalesPrices",
      "httpMethod": "get",
      "tag": "CustomerSalesPrice",
      "description": "Get a range of Customer Sales Prices - ScreenId=AR202000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "priceType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "priceCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inventoryId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "effectiveAsOf",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerdocument",
      "method": "customerDocumentGetAllDocuments",
      "httpMethod": "get",
      "tag": "CustomerDocument",
      "description": "Gets a range of Customer Documents - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice",
      "method": "customerInvoiceGetAll",
      "httpMethod": "get",
      "tag": "CustomerInvoice",
      "description": "Get a range of Invoices - ScreenId=AR301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "The field is deprecated for specific customer document endpoints. It will only be usable from customer document endpoint."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "dunningLevel",
          "schema": "integer",
          "required": false,
          "description": "The dunning level of the document."
        },
        {
          "name": "closedFinancialPeriod",
          "schema": "string",
          "required": false,
          "description": "The date of the closing of the financial period."
        },
        {
          "name": "dunningLetterDateTime",
          "schema": "string",
          "required": false,
          "description": "The date and time for when the document last released a dunning letter."
        },
        {
          "name": "dunningLetterDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Set time/date as before (&lt;), after (&gt;), before and including (=&lt;) OR after and including (=&gt;) to filter on time frame."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "The project with which the document is associated."
        },
        {
          "name": "expandApplications",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all dunning information regarding this document."
        },
        {
          "name": "expandDunningInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all attachments regarding this document."
        },
        {
          "name": "expandTaxDetails",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all VAT details regarding this document."
        },
        {
          "name": "expandInvoiceAddress",
          "schema": "boolean",
          "required": false,
          "description": "True if you want to see all information regarding the invoice address for this document."
        },
        {
          "name": "financialPeriod",
          "schema": "string",
          "required": false,
          "description": "The financial period to which the transactions recorded in the document is posted. Format YYYYMM."
        },
        {
          "name": "documentDueDate",
          "schema": "string",
          "required": false,
          "description": "The date when payment for the document is due, in accordance with the credit terms."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document. Use the dropdown to select status."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "externalReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "paymentReference",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; Payment ref. &gt; The reference number of the document, as automatically generated by the system in accordance with the number series assigned to cash sales in the Customer ledger preferences window.."
        },
        {
          "name": "customerRefNumber",
          "schema": "string",
          "required": false,
          "description": "The top part &gt; External reference &gt; The external reference used in AutoInvoice."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice",
      "method": "customerInvoiceCreate",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Create an Invoice. Method is deprecated and will be removed starting May 2021 - start using new method CustomerInvoiceV2 endpoint.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountingCostRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contractDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerProject",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originatorDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/worktypes",
      "method": "customerInvoiceGetWorkTypes",
      "httpMethod": "get",
      "tag": "CustomerInvoice",
      "description": "Get all Work Types",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}",
      "method": "customerInvoiceDeleteByinvoiceNumber",
      "httpMethod": "delete",
      "tag": "CustomerInvoice",
      "description": "Deletes a specific Customer Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer Invoice to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}",
      "method": "customerInvoiceGetByinvoiceNumber",
      "httpMethod": "get",
      "tag": "CustomerInvoice",
      "description": "Get a specific Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an invoice in InvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}",
      "method": "customerInvoiceUpdateByinvoiceNumber",
      "httpMethod": "put",
      "tag": "CustomerInvoice",
      "description": "Update a specific Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountingCostRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contractDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerProject",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originatorDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/action/correct",
      "method": "customerInvoiceCorrectInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Create a correction document for a released document",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/action/release",
      "method": "customerInvoiceReleaseInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Release invoice operation",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the invoice to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/action/reverse",
      "method": "customerInvoiceReverseInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Reverse an Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released invoice to be reversed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "returnCreditNote",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/action/reverseandapplytonote",
      "method": "customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Reverse and Apply to Note",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released invoice to be reversed and applied to Memo"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "returnCreditNote",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/action/sendToAutoInvoice",
      "method": "customerInvoiceSendToAutoInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "SendToAutoInvoice invoice operation",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the invoice to be send to AutoInvoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/attachment",
      "method": "customerInvoiceCreateHeaderAttachmentByinvoiceNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Creates an attachment and associates it with an invoice. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{invoiceNumber}/{lineNumber}/attachment",
      "method": "customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumber",
      "httpMethod": "post",
      "tag": "CustomerInvoice",
      "description": "Creates an attachment and associates it with a certain invoice line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the invoice"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{refNbr}/print",
      "method": "customerInvoicePrintInvoiceByrefNbr",
      "httpMethod": "get",
      "tag": "CustomerInvoice",
      "description": "Get the print report of a Customer Invoice",
      "parameters": [
        {
          "name": "refNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the customer invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerinvoice/{refNbr}/rotrut",
      "method": "customerInvoiceGetRotRutByrefNbr",
      "httpMethod": "get",
      "tag": "CustomerInvoice",
      "description": "Get Rot Rut informations for a Customer Invoice",
      "parameters": [
        {
          "name": "refNbr",
          "schema": "string",
          "required": true,
          "description": "Identify the customer invoice for which to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a RutRot in RutRotController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerpaymentmethod",
      "method": "customerPaymentMethodGetCustomerPaymentMethods",
      "httpMethod": "get",
      "tag": "CustomerPaymentMethod",
      "description": "Get Customer payment methods",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerpaymentmethod",
      "method": "customerPaymentMethodCreateCustomerPaymentMethod",
      "httpMethod": "post",
      "tag": "CustomerPaymentMethod",
      "description": "Create a Customer payment method",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccountId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerpaymentmethod/{customerId}",
      "method": "customerPaymentMethodGetCustomerPaymentMethodsBycustomerId",
      "httpMethod": "get",
      "tag": "CustomerPaymentMethod",
      "description": "Get all Customer payment methods for one specific customer. ScreenId=AR303010 and AR303000",
      "parameters": [
        {
          "name": "customerId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerpaymentmethod/{customerId}/{customerPaymentMethodId}",
      "method": "customerPaymentMethodGetCustomerPaymentMethodBycustomerIdcustomerPaymentMethodId",
      "httpMethod": "get",
      "tag": "CustomerPaymentMethod",
      "description": "Get one specific Customer payment method for one specific customer. ScreenId=AR303010",
      "parameters": [
        {
          "name": "customerId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer"
        },
        {
          "name": "customerPaymentMethodId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer payment method"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/customerpaymentmethod/{customerId}/{customerPaymentMethodId}",
      "method": "customerPaymentMethodUpdateCustomerPaymentMethodBycustomerIdcustomerPaymentMethodId",
      "httpMethod": "put",
      "tag": "CustomerPaymentMethod",
      "description": "Update a specific Customer payment method",
      "parameters": [
        {
          "name": "customerId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer"
        },
        {
          "name": "customerPaymentMethodId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Customer payment method to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccountId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodDetails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/deferralCode",
      "method": "deferralCodeGetDeferralCodes",
      "httpMethod": "get",
      "tag": "DeferralCode",
      "description": "Get a range of DeferralCodes - ScreenId=DR2020PL\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/deferralCode/{deferralCodeId}",
      "method": "deferralCodeGetDeferralCodeBydeferralCodeId",
      "httpMethod": "get",
      "tag": "DeferralCode",
      "description": "Get a specific DeferralCode",
      "parameters": [
        {
          "name": "deferralCodeId",
          "schema": "string",
          "required": true,
          "description": "Identifies the DeferralCode"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/department",
      "method": "departmentGetAllDepartmentDtos",
      "httpMethod": "get",
      "tag": "Department",
      "description": "Get a range of departments - ScreenId=EP201500",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/department",
      "method": "departmentCreateDepartment",
      "httpMethod": "post",
      "tag": "Department",
      "description": "Creates a department",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "departmentId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSubaccount",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/department/{departmentId}",
      "method": "departmentGetDepartmentBydepartmentId",
      "httpMethod": "get",
      "tag": "Department",
      "description": "Get a specific department",
      "parameters": [
        {
          "name": "departmentId",
          "schema": "string",
          "required": true,
          "description": "Identifies the department"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/department/{departmentId}",
      "method": "departmentUpdateDepartmentBydepartmentId",
      "httpMethod": "put",
      "tag": "Department",
      "description": "Updates a specific department",
      "parameters": [
        {
          "name": "departmentId",
          "schema": "string",
          "required": true,
          "description": "Identifies the department to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "departmentId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSubaccount",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension",
      "method": "dimensionGetDimensionList",
      "httpMethod": "get",
      "tag": "Dimension",
      "description": "Get a list of all Dimension names/IDs ScreenId=CS202000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension/{dimensionId}",
      "method": "dimensionGetDimensionBydimensionId",
      "httpMethod": "get",
      "tag": "Dimension",
      "description": "Get a specific Dimension",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "Identifies the dimension"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords.        ///"
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "expandSegmentsValues",
          "schema": "boolean",
          "required": false,
          "description": "Flag can be used to return data without the segment values."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension/{dimensionId}/{segmentId}",
      "method": "dimensionGetSegmentBydimensionIdsegmentId",
      "httpMethod": "get",
      "tag": "Dimension",
      "description": "Get a specific Segment for a specific Dimension",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Dimension"
        },
        {
          "name": "segmentId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Segment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension/{dimensionId}/{segmentId}",
      "method": "dimensionUpdateSegmentBydimensionIdsegmentId",
      "httpMethod": "put",
      "tag": "Dimension",
      "description": "Update a Segment",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Dimension for which the Segment is defined"
        },
        {
          "name": "segmentId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Segment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dimensionId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "segementId",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "segmentValues",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension/{dimensionId}/{segmentId}/publicid/{publicId}",
      "method": "dimensionGetSegmentValueBydimensionIdsegmentIdpublicId",
      "httpMethod": "get",
      "tag": "Dimension",
      "description": "Get a specific SegmentValue for a specific Segment for a specific Dimension",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Dimension"
        },
        {
          "name": "segmentId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Segment"
        },
        {
          "name": "publicId",
          "schema": "string",
          "required": true,
          "description": "Identifies the SegmentValue by its publicId"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/dimension/{dimensionId}/{segmentId}/{valueId}",
      "method": "dimensionGetSegmentValueBydimensionIdsegmentIdvalueId",
      "httpMethod": "get",
      "tag": "Dimension",
      "description": "Get a specific SegmentValue for a specific Segment for a specific Dimension",
      "parameters": [
        {
          "name": "dimensionId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Dimension"
        },
        {
          "name": "segmentId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Segment"
        },
        {
          "name": "valueId",
          "schema": "string",
          "required": true,
          "description": "Identifies the SegmentValue by Id. Must be Base64 encoded."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount",
      "method": "discountGetDiscounts",
      "httpMethod": "get",
      "tag": "Discount",
      "description": "Get a range of discounts - ScreenId=AR209500",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "discountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount",
      "method": "discountPost",
      "httpMethod": "post",
      "tag": "Discount",
      "description": "",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "breakBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountBreakpoints",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discountBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "effectiveDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expirationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promotional",
          "schema": "object",
          "description": ""
        },
        {
          "name": "prorateDiscount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "series",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount/{discountCode}/{series}",
      "method": "discountDeleteBydiscountCodeseries",
      "httpMethod": "delete",
      "tag": "Discount",
      "description": "",
      "parameters": [
        {
          "name": "discountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount/{discountCode}/{series}",
      "method": "discountPutBydiscountCodeseries",
      "httpMethod": "put",
      "tag": "Discount",
      "description": "",
      "parameters": [
        {
          "name": "discountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "breakBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountBreakpoints",
          "schema": "array",
          "description": ""
        },
        {
          "name": "discountBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "effectiveDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expirationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promotional",
          "schema": "object",
          "description": ""
        },
        {
          "name": "prorateDiscount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "series",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount/{discountCode}/{series}/action/updateDiscounts",
      "method": "discountUpdateDiscountsBydiscountCodeseries",
      "httpMethod": "post",
      "tag": "Discount",
      "description": "",
      "parameters": [
        {
          "name": "discountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discount/{discountCode}/{series}/{filerDate}/action/updateDiscounts",
      "method": "discountUpdateDiscountsBydiscountCodeseriesfilerDate",
      "httpMethod": "post",
      "tag": "Discount",
      "description": "",
      "parameters": [
        {
          "name": "discountCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "filterDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "filerDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/discountCode",
      "method": "discountCodeGetDiscountCodes",
      "httpMethod": "get",
      "tag": "DiscountCode",
      "description": "Get a range of discount codes - ScreenId=AR209000",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "discountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/earningtype",
      "method": "earningTypeGetAllEarningTypeDtos",
      "httpMethod": "get",
      "tag": "EarningType",
      "description": "Get a range of earningtypes - ScreenId=EP102000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/earningtype/{typeCd}",
      "method": "earningTypeGetEarningTypeBytypeCd",
      "httpMethod": "get",
      "tag": "EarningType",
      "description": "Get a specific earning type",
      "parameters": [
        {
          "name": "typeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the earning type"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee",
      "method": "employeeGetAllEmployees",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get a range of employees - ScreenId=EP203000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2021-October:Added forced pagination",
      "parameters": [
        {
          "name": "linkedToUser",
          "schema": "boolean",
          "required": false,
          "description": "If the employee is linked to a user."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee",
      "method": "employeeCreateEmployee",
      "httpMethod": "post",
      "tag": "Employee",
      "description": "",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "address",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "calendar",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "department",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "employeeCd",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "employeeClass",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/action/changeEmployeeCd/{internalId}",
      "method": "employeeChangeEmployeeNrActionByinternalId",
      "httpMethod": "post",
      "tag": "Employee",
      "description": "Updates the EmployeeNr for the specified employee",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Internal identifier of the employee for which the employee Nr will be changed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "employeeNr",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/{employeeCd}",
      "method": "employeeGetEmployeeByemployeeCd",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get a specific employee",
      "parameters": [
        {
          "name": "employeeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the employee"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an Employee in EmployeeController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/{employeeCd}",
      "method": "employeePutByemployeeCd",
      "httpMethod": "put",
      "tag": "Employee",
      "description": "Updates a specific employee",
      "parameters": [
        {
          "name": "employeeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the employee to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "address",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "calendar",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "companyTreeInfo",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "contact",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "department",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "employeeClass",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/{employeeCd}/expenseClaim",
      "method": "employeeGetEmployeeExpenseClaimsByemployeeCd",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get expense claims for a specific employee",
      "parameters": [
        {
          "name": "employeeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the employee"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "The date of the document"
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "The customer from the document"
        },
        {
          "name": "departmentId",
          "schema": "string",
          "required": false,
          "description": "Identifies the department"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/{employeeCd}/expenseReceipt",
      "method": "employeeGetEmployeeExpenseReceiptsByemployeeCd",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get expense receipts for a specific employee",
      "parameters": [
        {
          "name": "employeeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the employee"
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "The date of the document"
        },
        {
          "name": "dateCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inventory",
          "schema": "string",
          "required": false,
          "description": "Identifies the inventory item from the document"
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Identifies the project from the document"
        },
        {
          "name": "claimedBy",
          "schema": "string",
          "required": false,
          "description": "Identifies the employee from the document"
        },
        {
          "name": "projectTask",
          "schema": "string",
          "required": false,
          "description": "Filter on Task ID."
        },
        {
          "name": "invoiceable",
          "schema": "boolean",
          "required": false,
          "description": "If the document is invoiceable"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "Identifies the customer from the document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/employee/{employeeCd}/timecards",
      "method": "employeeGetEmployeeTimeCardsByemployeeCd",
      "httpMethod": "get",
      "tag": "Employee",
      "description": "Get a specific employee time cards",
      "parameters": [
        {
          "name": "employeeCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the employee"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "week",
          "schema": "string",
          "required": false,
          "description": "Identifies the week number of the time card"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Identifies the type of the time card (Normal, Corrected, NormalCorrected)"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim",
      "method": "expenseClaimGetAll",
      "httpMethod": "get",
      "tag": "ExpenseClaim",
      "description": "Get a range of Expense Claims, a filter needs to be specified. ScreenId=EP301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2021-October:Added forced pagination",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "The date of the document"
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "The customer from the document"
        },
        {
          "name": "departmentId",
          "schema": "string",
          "required": false,
          "description": "Identifies the department"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim",
      "method": "expenseClaimCreateExpenseClaim",
      "httpMethod": "post",
      "tag": "ExpenseClaim",
      "description": "Create an ExpenseClaim",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "claimedBy",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customerUpdateAnswer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaimNbr}",
      "method": "expenseClaimDeleteByexpenseClaimNbr",
      "httpMethod": "delete",
      "tag": "ExpenseClaim",
      "description": "Deletes a specific ExpenseClaim",
      "parameters": [
        {
          "name": "expenseClaimNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the ExpenseClaim to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaimNbr}",
      "method": "expenseClaimGetExpenseClaimByexpenseClaimNbr",
      "httpMethod": "get",
      "tag": "ExpenseClaim",
      "description": "Get a specific Expense Claim",
      "parameters": [
        {
          "name": "expenseClaimNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the expense claim"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Expense Claim in ExpenseClaimController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaimNbr}",
      "method": "expenseClaimPutByexpenseClaimNbr",
      "httpMethod": "put",
      "tag": "ExpenseClaim",
      "description": "Update a specific ExpenseClaim",
      "parameters": [
        {
          "name": "expenseClaimNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the ExpenseClaim to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "claimedBy",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customerUpdateAnswer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "details",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaim}/action/approval",
      "method": "expenseClaimSendExpenseClaimToApprovalByexpenseClaim",
      "httpMethod": "post",
      "tag": "ExpenseClaim",
      "description": "Send Expense Claim to approval",
      "parameters": [
        {
          "name": "expenseClaim",
          "schema": "string",
          "required": true,
          "description": "Reference number of the Expense Claim to be sent to approval"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaim}/action/hold",
      "method": "expenseClaimPutExpenseClaimOnHoldByexpenseClaim",
      "httpMethod": "post",
      "tag": "ExpenseClaim",
      "description": "Put ExpenseClaim on hold",
      "parameters": [
        {
          "name": "expenseClaim",
          "schema": "string",
          "required": true,
          "description": "Reference number of the ExpenseClaim to be put on hold"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseClaim/{expenseClaim}/action/submit",
      "method": "expenseClaimSubmitExpenseClaimByexpenseClaim",
      "httpMethod": "post",
      "tag": "ExpenseClaim",
      "description": "Submit Expense Claim operation",
      "parameters": [
        {
          "name": "expenseClaim",
          "schema": "string",
          "required": true,
          "description": "Reference number of the Expense Claim to be submitted"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt",
      "method": "expenseReceiptGetAll",
      "httpMethod": "get",
      "tag": "ExpenseReceipt",
      "description": "Get a range of Expense Receipts, a filter needs to be specified. ScreenId=EP301020",
      "parameters": [
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "The date of the document"
        },
        {
          "name": "dateCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "inventory",
          "schema": "string",
          "required": false,
          "description": "Identifies the inventory item from the document"
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Identifies the project from the document"
        },
        {
          "name": "claimedBy",
          "schema": "string",
          "required": false,
          "description": "Identifies the employee from the document"
        },
        {
          "name": "projectTask",
          "schema": "string",
          "required": false,
          "description": "Filter on Task ID."
        },
        {
          "name": "invoiceable",
          "schema": "boolean",
          "required": false,
          "description": "If the document is invoiceable"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "Identifies the customer from the document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt",
      "method": "expenseReceiptPost",
      "httpMethod": "post",
      "tag": "ExpenseReceipt",
      "description": "Create a Expense Receipt",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "claimedBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "employeePart",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseClaim",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectTask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCategory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "totalAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "unitCost",
          "schema": "object",
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt/{receiptNumber}",
      "method": "expenseReceiptDeleteByreceiptNumber",
      "httpMethod": "delete",
      "tag": "ExpenseReceipt",
      "description": "Deletes a specific Expense Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Expense Receipt to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt/{receiptNumber}",
      "method": "expenseReceiptGetByreceiptNumber",
      "httpMethod": "get",
      "tag": "ExpenseReceipt",
      "description": "Get a specific ExpenseReceipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the ExpenseReceipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Expense Receipt in ExpenseReceiptController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt/{receiptNumber}",
      "method": "expenseReceiptPutByreceiptNumber",
      "httpMethod": "put",
      "tag": "ExpenseReceipt",
      "description": "Update a Expense Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the ExpenseReceipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "claimedBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "employeePart",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseClaim",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectTask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCategory",
          "schema": "object",
          "description": ""
        },
        {
          "name": "totalAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "unitCost",
          "schema": "object",
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/expenseReceipt/{receiptNumber}/attachment",
      "method": "expenseReceiptCreateAttachmentByreceiptNumber",
      "httpMethod": "post",
      "tag": "ExpenseReceipt",
      "description": "Creates an attachment and associates it with an expense receipt. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the credit note"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/financialPeriod",
      "method": "financialPeriodGetAll",
      "httpMethod": "get",
      "tag": "FinancialPeriod",
      "description": "Get a range of Financial Periods - ScreenId=GL201000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Enter the year or year-period lower than the first period or year you want, format YYYY or YYYYPP"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/financialPeriod/{financialPeriodId}",
      "method": "financialPeriodGetByfinancialPeriodId",
      "httpMethod": "get",
      "tag": "FinancialPeriod",
      "description": "Get a specific Financial Period - ScreenId=GL201000",
      "parameters": [
        {
          "name": "financialPeriodId",
          "schema": "string",
          "required": true,
          "description": "Returns the financial period for the specified FinancialPeriodId, format YYYYPP"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Financial Period in FinancialPeriodController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAsset",
      "method": "fixedAssetGetAll",
      "httpMethod": "get",
      "tag": "FixedAsset",
      "description": "Get a range of Fixed Assets - Screen ID:FA303000",
      "parameters": [
        {
          "name": "assetId",
          "schema": "string",
          "required": false,
          "description": "Fixed Asset ID that identifies the asset."
        },
        {
          "name": "classId",
          "schema": "string",
          "required": false,
          "description": "View all fixed assets with this Fixed Asset Class ID."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "View all fixed assets with this Status. Available statuses are: Active, Disposed, FullyDepriciated, Hold, Reversed, Suspended."
        },
        {
          "name": "fromDate",
          "schema": "string",
          "required": false,
          "description": "From 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
        },
        {
          "name": "toDate",
          "schema": "string",
          "required": false,
          "description": "To 'Placed in service date' inclusive. Date format: YYYY-MM-DD."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "expandAccounts",
          "schema": "boolean",
          "required": false,
          "description": "Set to True to include accounts and subaccounts. Default value is False"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAsset/{FixedAssetID}",
      "method": "fixedAssetGetByFixedAssetId",
      "httpMethod": "get",
      "tag": "FixedAsset",
      "description": "Get a specific Fixed Asset - Screen ID:FA303000",
      "parameters": [
        {
          "name": "fixedAssetId",
          "schema": "string",
          "required": true,
          "description": "Identifies the fixed asset"
        },
        {
          "name": "expandAccounts",
          "schema": "boolean",
          "required": false,
          "description": "Set to True to include accounts and subaccounts. Default value is False"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an attribute in FixedAssetController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetClass",
      "method": "fixedAssetClassGetAll",
      "httpMethod": "get",
      "tag": "FixedAssetClass",
      "description": "Get a range of Fixed Asset Classes - Screen ID:FA201000",
      "parameters": [
        {
          "name": "classId",
          "schema": "string",
          "required": false,
          "description": "Fixed Asset Class ID that identifies the fixed asset class."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetClass/{ClassID}",
      "method": "fixedAssetClassGetByClassId",
      "httpMethod": "get",
      "tag": "FixedAssetClass",
      "description": "Get a specific Fixed Asset Class - Screen ID:FA201000",
      "parameters": [
        {
          "name": "classId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an attribute in FixedAssetClass. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetPropertyTaxGroup",
      "method": "fixedAssetPropertyTaxGroupGetAll",
      "httpMethod": "get",
      "tag": "FixedAssetPropertyTaxGroup",
      "description": "Get a range of Fixed Asset Property Tax Groups - Screen ID: FA209000",
      "parameters": [
        {
          "name": "propertyTaxId",
          "schema": "string",
          "required": false,
          "description": "Property Tax ID that identifies the property tax group."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "Set to True to select active fixed asset property tax groups."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetPropertyTaxGroup/{PropertyTaxID}",
      "method": "fixedAssetPropertyTaxGroupGetByPropertyTaxId",
      "httpMethod": "get",
      "tag": "FixedAssetPropertyTaxGroup",
      "description": "Get a specific Fixed Asset Property Tax Group - Screen ID: FA209000",
      "parameters": [
        {
          "name": "propertyTaxId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents an attribute in FixedAssetPropertyTaxGroup. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetTransaction",
      "method": "fixedAssetTransactionGetAll",
      "httpMethod": "get",
      "tag": "FixedAssetTransaction",
      "description": "Get a range of transactions - Screen ID:FA301000",
      "parameters": [
        {
          "name": "refNo",
          "schema": "string",
          "required": false,
          "description": "View all transactions connected to this Reference number."
        },
        {
          "name": "assetId",
          "schema": "string",
          "required": false,
          "description": "View all transactions connected to this Asset ID."
        },
        {
          "name": "bookId",
          "schema": "string",
          "required": false,
          "description": "View all transactions in this Book ID."
        },
        {
          "name": "fromPeriod",
          "schema": "string",
          "required": false,
          "description": "View all transactions from and including this Period. Format: YYYYMM."
        },
        {
          "name": "toPeriod",
          "schema": "string",
          "required": false,
          "description": "View all transactions to and including this Period. Format: YYYYMM."
        },
        {
          "name": "accountId",
          "schema": "string",
          "required": false,
          "description": "View all transactions for this Account ID."
        },
        {
          "name": "subAccountId",
          "schema": "string",
          "required": false,
          "description": "View all transactions for this Sub Account ID."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "View all transactions with this Status. Available statuses: Balanced, OnHold, Posted and UnPosted."
        },
        {
          "name": "transactionType",
          "schema": "string",
          "required": false,
          "description": "View all transactions with this Transaction Type. Available types: PurchasingPlus, PurchasingMinus, DepreciationPlus, DepreciationMinus, CalculatedPlus, CalculatedMinu,SalePlus, SaleMinus,TransferPurchasing, TransferDepreciation, ReconciliationPlus, ReconciliationMinus, PurchasingDisposal, PurchasingReversal, AdjustingDeprPlus and AdjustingDeprMinus."
        },
        {
          "name": "transactionFromDate",
          "schema": "string",
          "required": false,
          "description": "View all transactions from and including this Transaction Date. Date format: YYYY-MM-DD."
        },
        {
          "name": "transactionToDate",
          "schema": "string",
          "required": false,
          "description": "View all transactions to and including this Transaction Date inclusive. Date format: YYYY-MM-DD ."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/fixedAssetTransaction/{RefNo}",
      "method": "fixedAssetTransactionGetByRefNo",
      "httpMethod": "get",
      "tag": "FixedAssetTransaction",
      "description": "Get transactions for a specific Asset - Screen ID:FA301000",
      "parameters": [
        {
          "name": "refNo",
          "schema": "string",
          "required": true,
          "description": "Identifies the fixed asset by reference number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory",
      "method": "inventoryGetAll",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of Inventory items - ScreenId=IN202000 and IN202500",
      "parameters": [
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size.\r\nMaxPageSize will be set to 5000 from 1. April 2022"
        },
        {
          "name": "alternateId",
          "schema": "string",
          "required": false,
          "description": "Applies for both Stock and Non-stock items.  Some fields in this filter applies only for one of these."
        },
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": false,
          "description": "The Item ID."
        },
        {
          "name": "salesCategory",
          "schema": "integer",
          "required": false,
          "description": "The Category ID for the sales category, found on the Attributes tab."
        },
        {
          "name": "addCostPriceStatistics",
          "schema": "boolean",
          "required": false,
          "description": "This filter can be used only for stock items, from the Price/cost information tab."
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": " Attributes (additional information) connected to the entity.\r\n Examples:\r\n{{base}}/inventory?attributes={\"AttributeID\":\"ValueID\",\"AttributeID\":\"ValueID\"}\r\n{{base}}/inventory?attributes={\"AttributeID\":\"ValueID1,ValueID2\"}"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "A brief description of the stock item from the Top part of the window."
        },
        {
          "name": "availabilityLastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information."
        },
        {
          "name": "availabilityLastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "inventoryTypes",
          "schema": "array",
          "required": false,
          "description": "Filter on one or more inventory types: NonStockItem, LaborItem, ServiceItem, ChargeItem, ExpenseItem, FinishedGoodItem, ComponentPartItem or SubassemblyItem"
        },
        {
          "name": "expandCrossReference",
          "schema": "boolean",
          "required": false,
          "description": "These expand fields are by default set to true, but will be changed in the future. \r\nSet to true to retrieve information about the cross-references (item ID and suppliers/customers ID for the item connected to the item."
        },
        {
          "name": "expandAttachment",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve information about the attachments connected to the item."
        },
        {
          "name": "expandAttribute",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve the attribute descriptions used for the item."
        },
        {
          "name": "expandWarehouseDetail",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve information about the warehouse connected to the item."
        },
        {
          "name": "expandAccountInformation",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve information about the account information connected to the item."
        },
        {
          "name": "expandInventoryUnits",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve information about the units of measure connected to the item."
        },
        {
          "name": "expandSupplierDetails",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve details about the supplier connected to the item."
        },
        {
          "name": "expandSalesCategories",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve details about the sales categories connected to the item."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to retrieve the note value connected to the item."
        },
        {
          "name": "attachmentLastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for last modified date and time for attachment."
        },
        {
          "name": "attachmentLastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition for attachment."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory",
      "method": "inventoryPost",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "Create an inventory item",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "baseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cogsAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "cogsSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "defaultIssueFrom",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultPrice",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultReceiptTo",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultWarehouse",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseAccrualAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseImportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "intrastat",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventoryAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "inventoryNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "itemClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "kitItem",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "packaging",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postingClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "purchaseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesExportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "salesUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatCode",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/action/changeInventoryNbr/{internalId}",
      "method": "inventoryChangeInventoryNbrActionByinternalId",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "Updates the InventoryNbr for the specified Inventory",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Internal identifier of the Inventory for which the Inventory Nbr will be changed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "inventoryNbr",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/barcode/purchasereceipt/{receiptNbr}",
      "method": "inventoryGetInventoryPoReceiptTakeBarCodesByreceiptNbr",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of barcodes for a specific purchase receipt",
      "parameters": [
        {
          "name": "receiptNbr",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/barcode/salesorder/{orderNbr}",
      "method": "inventoryGetInventorySalesOrderBarCodesByorderNbr",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of barcodes for a specific sales order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/barcode/shipment/{shipmentNbr}",
      "method": "inventoryGetInventoryShipmentBarCodesByshipmentNbr",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of barcodes for a specific shipment",
      "parameters": [
        {
          "name": "shipmentNbr",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/barcode/stocktake/{referenceNumber}",
      "method": "inventoryGetInventoryStockTakeBarCodesByreferenceNumber",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of barcodes for a specific stock count",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/internal/{inventoryID}",
      "method": "inventoryPutByinventoryId",
      "httpMethod": "put",
      "tag": "Inventory",
      "description": "Update a specific inventory item",
      "parameters": [
        {
          "name": "inventoryId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the inventory item to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "baseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cogsAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "cogsSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "defaultIssueFrom",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultPrice",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultReceiptTo",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultWarehouse",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseAccrualAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseImportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "intrastat",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventoryAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "inventoryNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "itemClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "kitItem",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "packaging",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postingClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "purchaseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesExportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "salesUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatCode",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/internal/{inventoryId}",
      "method": "inventoryGetByinventoryId",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a specific Inventory item by its internal ID",
      "parameters": [
        {
          "name": "inventoryId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Inventory item"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/itemClass",
      "method": "inventoryGetItemClasses",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get Inventory Item Classes",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/itemPostClass",
      "method": "inventoryGetItemPostClasses",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get Inventory Item Post Classes",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/itemclass/{itemClassNumber}",
      "method": "inventoryGetSpecificItemClassByitemClassNumber",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get Specific Inventory Item Class",
      "parameters": [
        {
          "name": "itemClassNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryCd}/action/updateCost",
      "method": "inventoryUpdateCostNonStockItemByinventoryCd",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "Update Cost action on Non-Stock Item",
      "parameters": [
        {
          "name": "inventoryCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory item to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}",
      "method": "inventoryGetByinventoryNumber",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a specific Inventory item",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory item"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}",
      "method": "inventoryPutByinventoryNumber",
      "httpMethod": "put",
      "tag": "Inventory",
      "description": "Update a specific inventory item",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory item to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "baseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "body",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cogsAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "cogsSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "defaultIssueFrom",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultPrice",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultReceiptTo",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "defaultWarehouse",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseAccrualAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "expenseEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseImportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "expenseSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "intrastat",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventoryAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "inventoryNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "itemClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "kitItem",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "packaging",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postingClass",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "purchaseUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesEuAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesExportAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesNonTaxableAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSubaccount",
          "schema": "array",
          "description": ""
        },
        {
          "name": "salesUnit",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatCode",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}/attachment",
      "method": "inventoryCreateInventoryAttachmentByinventoryNumber",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "Creates an attachment and associates it with a Inventory Item. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory Item"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}/crossReferences",
      "method": "inventoryGetInventoryCrossReferencesByinventoryNumber",
      "httpMethod": "get",
      "tag": "Inventory",
      "description": "Get a range of cross-reference for a specific inventory",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}/crossReferences",
      "method": "inventoryCreateInventoryCrossReferencesByinventoryNumber",
      "httpMethod": "post",
      "tag": "Inventory",
      "description": "Creates a cross reference for a specific inventory",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "alternateID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "alternateType",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventory/{inventoryNumber}/crossReferences/{alternateType}/{alternateId}",
      "method": "inventoryUpdateInventoryCrossReferencesByinventoryNumberalternateTypealternateId",
      "httpMethod": "put",
      "tag": "Inventory",
      "description": "Updates a specific cross reference for a specific inventory",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alternateType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "alternateId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "alternateID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "alternateType",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryReceipt",
      "method": "inventoryReceiptGetAll",
      "httpMethod": "get",
      "tag": "InventoryReceipt",
      "description": "Get a range of Inventory Receipts - ScreenId=IN301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryReceipt",
      "method": "inventoryReceiptPost",
      "httpMethod": "post",
      "tag": "InventoryReceipt",
      "description": "Create an inventory item",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlCost",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "transferNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryReceipt/{inventoryReceiptNumber}",
      "method": "inventoryReceiptGetByinventoryReceiptNumber",
      "httpMethod": "get",
      "tag": "InventoryReceipt",
      "description": "Get a specific Inventory Receipt document",
      "parameters": [
        {
          "name": "inventoryReceiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory Issue document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryReceipt/{inventoryReceiptNumber}",
      "method": "inventoryReceiptPutByinventoryReceiptNumber",
      "httpMethod": "put",
      "tag": "InventoryReceipt",
      "description": "Update a specific inventory item",
      "parameters": [
        {
          "name": "inventoryReceiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory receipt to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlCost",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "transferNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryReceipt/{invoiceNumber}/action/release",
      "method": "inventoryReceiptReleaseDocumentByinvoiceNumber",
      "httpMethod": "post",
      "tag": "InventoryReceipt",
      "description": "Release inventory operation",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released issue to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryTransfer",
      "method": "inventoryTransferGetAll",
      "httpMethod": "get",
      "tag": "InventoryTransfer",
      "description": "Get a range of Inventory Transfers - ScreenId=IN304000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "warehouse",
          "schema": "string",
          "required": false,
          "description": "Inventory transfer's source warehouse"
        },
        {
          "name": "toWarehouse",
          "schema": "string",
          "required": false,
          "description": "Inventory transfer's target warehouse"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryTransfer",
      "method": "inventoryTransferPost",
      "httpMethod": "post",
      "tag": "InventoryTransfer",
      "description": "Create an inventory transfer",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "toWarehouseId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transferLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryTransfer/{inventoryTransferNumber}",
      "method": "inventoryTransferGetByinventoryTransferNumber",
      "httpMethod": "get",
      "tag": "InventoryTransfer",
      "description": "Get a specific Inventory Transfer document",
      "parameters": [
        {
          "name": "inventoryTransferNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory Transfer document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryTransfer/{inventoryTransferNumber}",
      "method": "inventoryTransferPutByinventoryTransferNumber",
      "httpMethod": "put",
      "tag": "InventoryTransfer",
      "description": "Update a specific inventory transfer",
      "parameters": [
        {
          "name": "inventoryTransferNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory transfer to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "toWarehouseId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transferLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "warehouseId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryTransfer/{transferNumber}/action/release",
      "method": "inventoryTransferReleaseDocumentBytransferNumber",
      "httpMethod": "post",
      "tag": "InventoryTransfer",
      "description": "Release inventory operation",
      "parameters": [
        {
          "name": "transferNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released transfer to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryadjustment",
      "method": "inventoryAdjustmentGetAll",
      "httpMethod": "get",
      "tag": "InventoryAdjustment",
      "description": "Get a range of Inventory Adjustment Dto - ScreenId=IN303000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryadjustment",
      "method": "inventoryAdjustmentPost",
      "httpMethod": "post",
      "tag": "InventoryAdjustment",
      "description": "Create an inventory item",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "adjustmentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlCost",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryadjustment/{adjRefNumber}/action/release",
      "method": "inventoryAdjustmentReleaseDocumentByadjRefNumber",
      "httpMethod": "post",
      "tag": "InventoryAdjustment",
      "description": "Release inventory document action",
      "parameters": [
        {
          "name": "adjRefNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released adjustment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryadjustment/{inventoryAdjustmentNumber}",
      "method": "inventoryAdjustmentGetByinventoryAdjustmentNumber",
      "httpMethod": "get",
      "tag": "InventoryAdjustment",
      "description": "Get a specific Inventory Adjustment document",
      "parameters": [
        {
          "name": "inventoryAdjustmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory Adjustment document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryadjustment/{inventoryAdjustmentNumber}",
      "method": "inventoryAdjustmentPutByinventoryAdjustmentNumber",
      "httpMethod": "put",
      "tag": "InventoryAdjustment",
      "description": "Update a specific inventory item",
      "parameters": [
        {
          "name": "inventoryAdjustmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory item to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "adjustmentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlCost",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryissue",
      "method": "inventoryIssueGetAll",
      "httpMethod": "get",
      "tag": "InventoryIssue",
      "description": "Get a range of Inventory items - ScreenId=IN302000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryissue",
      "method": "inventoryIssuePost",
      "httpMethod": "post",
      "tag": "InventoryIssue",
      "description": "Create an inventory item",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "issueLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryissue/{inventoryIssueNumber}",
      "method": "inventoryIssueGetByinventoryIssueNumber",
      "httpMethod": "get",
      "tag": "InventoryIssue",
      "description": "Get a specific Inventory Issue document",
      "parameters": [
        {
          "name": "inventoryIssueNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Inventory Issue document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a inventory issue in InventoryIssueController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryissue/{inventoryIssueNumber}",
      "method": "inventoryIssuePutByinventoryIssueNumber",
      "httpMethod": "put",
      "tag": "InventoryIssue",
      "description": "Update a specific inventory item",
      "parameters": [
        {
          "name": "inventoryIssueNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory item to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "date",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "issueLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventoryissue/{invoiceNumber}/action/release",
      "method": "inventoryIssueReleaseDocumentByinvoiceNumber",
      "httpMethod": "post",
      "tag": "InventoryIssue",
      "description": "Release inventory operation",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the released issue to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/inventorysummary/{inventoryNumber}",
      "method": "inventorySummaryGetAllInventorySummaryByinventoryNumber",
      "httpMethod": "get",
      "tag": "InventorySummary",
      "description": "Get a range of InventorySummary - ScreenId=IN401000",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "warehouse",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly",
      "method": "kitAssemblyGetKitAssemblies",
      "httpMethod": "get",
      "tag": "KitAssembly",
      "description": "Get a range of Kit Assemblies - ScreenId = IN307000",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "refNo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly",
      "method": "kitAssemblyPost",
      "httpMethod": "post",
      "tag": "KitAssembly",
      "description": "Creates a Kit Assembly",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "itemId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "kitAllocations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nonStockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "reasonCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revision",
          "schema": "object",
          "description": ""
        },
        {
          "name": "stockComponentAllocations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "stockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uoM",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouse",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly/{type}/{refNo}",
      "method": "kitAssemblyDeleteBytyperefNo",
      "httpMethod": "delete",
      "tag": "KitAssembly",
      "description": "Delete a specific Kit Assembly Document",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Type"
        },
        {
          "name": "refNo",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Ref No"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly/{type}/{refNo}",
      "method": "kitAssemblyGetKitAssemblyBytyperefNo",
      "httpMethod": "get",
      "tag": "KitAssembly",
      "description": "Get a Kit Assembly - ScreenId = IN307000",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Type"
        },
        {
          "name": "refNo",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Ref No"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly/{type}/{refNo}",
      "method": "kitAssemblyPutBytyperefNo",
      "httpMethod": "put",
      "tag": "KitAssembly",
      "description": "Updates a specific Kit Assembly document",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Type"
        },
        {
          "name": "refNo",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Ref No"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "itemId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "kitAllocations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "nonStockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "reasonCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNo",
          "schema": "string",
          "description": ""
        },
        {
          "name": "revision",
          "schema": "object",
          "description": ""
        },
        {
          "name": "stockComponentAllocations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "stockComponentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uoM",
          "schema": "object",
          "description": ""
        },
        {
          "name": "warehouse",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/kitassembly/{type}/{refNo}/action/release",
      "method": "kitAssemblyReleaseKitAssemblyBytyperefNo",
      "httpMethod": "post",
      "tag": "KitAssembly",
      "description": "Release Kit Assembly",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Type"
        },
        {
          "name": "refNo",
          "schema": "string",
          "required": true,
          "description": "Kit Assembly Ref No"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/ledger",
      "method": "ledgerGetAllLedgers",
      "httpMethod": "get",
      "tag": "Ledger",
      "description": "Get a range of Ledgers - ScreenId=GL201500",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Excludes ledgers with value lower than entry"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/location",
      "method": "locationGetLocations",
      "httpMethod": "get",
      "tag": "Location",
      "description": "Get a range of Locations - ScreenId=CR303010\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/location",
      "method": "locationCreate",
      "httpMethod": "post",
      "tag": "Location",
      "description": "Create a Location",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "baccountId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ediCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "peppolScheme",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/location/{bAccountId}",
      "method": "locationGetLocationsForBaccountBybAccountId",
      "httpMethod": "get",
      "tag": "Location",
      "description": "Get a range of Locations for a BAccount\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/location/{bAccountId}/{locationId}",
      "method": "locationGetLocationBybAccountIdlocationId",
      "httpMethod": "get",
      "tag": "Location",
      "description": "Get a specific Location of a Baccount",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Location"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Location in LocationController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/location/{bAccountId}/{locationId}",
      "method": "locationUpdateBybAccountIdlocationId",
      "httpMethod": "put",
      "tag": "Location",
      "description": "Update a specific Location",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Location"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "baccountId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ediCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "peppolScheme",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/lotserialclass",
      "method": "lotSerialClassGetAllLotSerialClass",
      "httpMethod": "get",
      "tag": "LotSerialClass",
      "description": "Get a range of lot serial classes - ScreenId=IN207000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information. If requested page size is greater than allowed max page size, request will be limited to max page size.",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "trackingMethod",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "trackExpirationDate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "requiredForDropShip",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "assignmentMethod",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issueMethod",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "autoIncrementalValueBetweenClasses",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "autoIncrementalValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "autoGenerateNextNumber",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/lotserialclass/{id}",
      "method": "lotSerialClassGetByid",
      "httpMethod": "get",
      "tag": "LotSerialClass",
      "description": "Get a specific",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Identifies the LotSerialClass"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/defaultlanguage",
      "method": "multilanguageAddDefaultLanguage",
      "httpMethod": "put",
      "tag": "Multilanguage",
      "description": "Set default language (screenId:SM200550). We recommend to activate multilanguage for the first time using the System Locale screen (Screenid SM200550). Please use API only to switch default",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "languageISO",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/inventory/{inventoryNumber}",
      "method": "multilanguageGetInventoryTranslationsByinventoryNumber",
      "httpMethod": "get",
      "tag": "Multilanguage",
      "description": "Get all translations for a given item (screenId:IN202500 and IN202000)",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/inventory/{inventoryNumber}/{languageISO}",
      "method": "multilanguageDeleteSpecificInventoryDescrTranslationByinventoryNumberlanguageIso",
      "httpMethod": "delete",
      "tag": "Multilanguage",
      "description": "Deletes the description of an item with the specific language ISO code (screenId:IN202500 and IN202000)",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory to update"
        },
        {
          "name": "languageIso",
          "schema": "string",
          "required": true,
          "description": "Identifies the description language to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/inventory/{inventoryNumber}/{languageISO}",
      "method": "multilanguageGetSpecificInventoryDescrTranslationByinventoryNumberlanguageIso",
      "httpMethod": "get",
      "tag": "Multilanguage",
      "description": "Get a specific translation of the description for a given item and language ISO code (screenId:IN202500 and IN202000)",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "languageIso",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/inventory/{inventoryNumber}/{languageISO}",
      "method": "multilanguagePostSpecificInventoryDescrTranslationByinventoryNumberlanguageIso",
      "httpMethod": "post",
      "tag": "Multilanguage",
      "description": "Creates item description for given item and language ISO code (screenId:IN202500 and IN202000)",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory"
        },
        {
          "name": "languageIso",
          "schema": "string",
          "required": true,
          "description": "Identifies the description language"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "translation",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/inventory/{inventoryNumber}/{languageISO}",
      "method": "multilanguagePutSpecificInventoryDescrTranslationByinventoryNumberlanguageIso",
      "httpMethod": "put",
      "tag": "Multilanguage",
      "description": "Updates item description for given item and language ISO code (screenId:IN202500 and IN202000)",
      "parameters": [
        {
          "name": "inventoryNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the inventory to update"
        },
        {
          "name": "languageIso",
          "schema": "string",
          "required": true,
          "description": "Identifies the description language to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "translation",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/multilanguage/languages",
      "method": "multilanguageGetAllActiveLanguages",
      "httpMethod": "get",
      "tag": "Multilanguage",
      "description": "Get all languages (screenId:SM200550)",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/numberSequence",
      "method": "numberSequenceGetAll",
      "httpMethod": "get",
      "tag": "NumberSequence",
      "description": "Get a specific Numbering - ScreenId=CS201010",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/numberSequence/{numberingId}",
      "method": "numberSequenceGetBynumberingId",
      "httpMethod": "get",
      "tag": "NumberSequence",
      "description": "Get a specific Numbering",
      "parameters": [
        {
          "name": "numberingId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Numbering"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/organization",
      "method": "organizationGetAll",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "Get all organisations",
      "parameters": [
        {
          "name": "expandBranches",
          "schema": "boolean",
          "required": false,
          "description": "True to expand all Branches related to this Organization."
        },
        {
          "name": "expandBankSettings",
          "schema": "boolean",
          "required": false,
          "description": "True to expand payment settings for organization."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/organization/{organizationNumber}",
      "method": "organizationGetByOrganizationCdByorganizationNumber",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "Get organisation information by organization number.",
      "parameters": [
        {
          "name": "organizationNumber",
          "schema": "string",
          "required": true,
          "description": "The organisation code."
        },
        {
          "name": "expandBranches",
          "schema": "boolean",
          "required": false,
          "description": "True to expand all Branches related to this Organization."
        },
        {
          "name": "expandBankSettings",
          "schema": "boolean",
          "required": false,
          "description": "True to expand payment settings for organization."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ExtendedOrganizationDto"
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/organization/{organizationNumber}/BankSettings",
      "method": "organizationPutBankSettingsForOrganizationByorganizationNumber",
      "httpMethod": "put",
      "tag": "Organization",
      "description": "Update bank settings for organization",
      "parameters": [
        {
          "name": "organizationNumber",
          "schema": "string",
          "required": true,
          "description": "organization number to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "bankAddress1",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankAddress2",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankAddress3",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankCountry",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bankName",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bbaN2",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bbaN3",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bban",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "bic",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "creditorId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "iban",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/packagingType",
      "method": "packagingTypeGetAllPackagingTypes",
      "httpMethod": "get",
      "tag": "PackagingType",
      "description": "Get a range of SO PackagingTypes - ScreenId=CS207600",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/packagingType/{boxId}",
      "method": "packagingTypeGetByboxId",
      "httpMethod": "get",
      "tag": "PackagingType",
      "description": "Get a specific PackagingType",
      "parameters": [
        {
          "name": "boxId",
          "schema": "string",
          "required": true,
          "description": "Identifies the PackagingType"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a PackagingType in PackagingTypeController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment",
      "method": "paymentGetAllPayments",
      "httpMethod": "get",
      "tag": "Payment",
      "description": "Get a range of Payments - ScreenId=AP302000\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "paymentNbr",
          "schema": "string",
          "required": false,
          "description": "Payment number"
        },
        {
          "name": "paymentType",
          "schema": "string",
          "required": false,
          "description": "Select Type"
        },
        {
          "name": "customer",
          "schema": "string",
          "required": false,
          "description": "Enter Customer"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Enter the from-value for Ref. no."
        },
        {
          "name": "invoiceRefNbr",
          "schema": "string",
          "required": false,
          "description": "Enter Invoice Ref Nbr"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "Enter field to order your records by."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment",
      "method": "paymentCreatePayment",
      "httpMethod": "post",
      "tag": "Payment",
      "description": "Create a Payment\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "ordersToApply",
          "schema": "array",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment/{paymentNumber}",
      "method": "paymentGetBypaymentNumber",
      "httpMethod": "get",
      "tag": "Payment",
      "description": "Get a specific Payment\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Payment in PaymentController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment/{paymentNumber}",
      "method": "paymentPutBypaymentNumber",
      "httpMethod": "put",
      "tag": "Payment",
      "description": "Update a specific Payment\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "location",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "ordersToApply",
          "schema": "array",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment/{paymentNumber}/action/release",
      "method": "paymentReleasePaymentBypaymentNumber",
      "httpMethod": "post",
      "tag": "Payment",
      "description": "Release payment operation\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the payment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/payment/{paymentNumber}/action/void",
      "method": "paymentVoidPaymentBypaymentNumber",
      "httpMethod": "post",
      "tag": "Payment",
      "description": "Void payment operation\r\nPayment is deprecated, please use CustomerPayment instead.",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the payment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "returnVoidPayment",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/paymentmethod",
      "method": "paymentMethodGetAllPaymentMethod",
      "httpMethod": "get",
      "tag": "PaymentMethod",
      "description": "Get a range of Payment Method - ScreenId=CA204000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/paymentmethod/{paymentMethodNumber}",
      "method": "paymentMethodGetBypaymentMethodNumber",
      "httpMethod": "get",
      "tag": "PaymentMethod",
      "description": "Get a specific Payment Method",
      "parameters": [
        {
          "name": "paymentMethodNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment Method"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Payment Method in PaymentMethodController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project",
      "method": "projectGetAll",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Get a range of Projects - ScreenId=PM301000\r\nIf AccModules_MaxPagination Feature Toggle is ON then request page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Use drop down and select Status."
        },
        {
          "name": "systemTemplate",
          "schema": "boolean",
          "required": false,
          "description": "If the project is a template"
        },
        {
          "name": "visibleInAp",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in AP"
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": "Project’s start date"
        },
        {
          "name": "expandAttribute",
          "schema": "boolean",
          "required": false,
          "description": "Expands project atributes"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "Identifies the attributes"
        },
        {
          "name": "taskStatus",
          "schema": "string",
          "required": false,
          "description": "Use drop down and select Status."
        },
        {
          "name": "taskVisibleInAp",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Supplier ledger"
        },
        {
          "name": "taskVisibleInAr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Customer ledger"
        },
        {
          "name": "taskVisibleInCa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Cash management workspace"
        },
        {
          "name": "taskVisibleInCr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the CRM workspace"
        },
        {
          "name": "taskVisibleInEa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Expense workspace"
        },
        {
          "name": "taskVisibleInGl",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the General ledger workspace"
        },
        {
          "name": "taskVisibleInIn",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Inventory workspace"
        },
        {
          "name": "taskVisibleInPo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Purchases workspace"
        },
        {
          "name": "taskVisibleInSo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Sales workspace"
        },
        {
          "name": "taskVisibleInTa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Time entities workspace"
        },
        {
          "name": "nonProject",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to return the non-project."
        },
        {
          "name": "publicId",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project by its publicId"
        },
        {
          "name": "restrictedEmployee",
          "schema": "string",
          "required": false,
          "description": "ID of the employee where access restrictions apply"
        },
        {
          "name": "restrictedUser",
          "schema": "integer",
          "required": false,
          "description": "Id of the odp user where access restrictions apply"
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project",
      "method": "projectPost",
      "httpMethod": "post",
      "tag": "Project",
      "description": "Create an project",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "allocationRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "autoAllocate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "automaticReleaseArDoc",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingPeriod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerLocation",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "defSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "employees",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "internalID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManagerInternalId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManger",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateTable",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEmployees",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEquipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tasks",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "template",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/action/changeProjectId/{internalId}",
      "method": "projectChangeProjectIdActionByinternalId",
      "httpMethod": "post",
      "tag": "Project",
      "description": "Updates the ProjectID for the specified project",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Internal identifier of the project for which the project ID will be changed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "projectId",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/internal/{internalID}",
      "method": "projectGetByinternalId",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Get a specific Project by internal ID",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Project"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Project in ProjectController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/internal/{internalId}",
      "method": "projectPutByinternalId",
      "httpMethod": "put",
      "tag": "Project",
      "description": "Update a specific Project",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Project by its internalID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "allocationRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "autoAllocate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "automaticReleaseArDoc",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingPeriod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerLocation",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "defSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "employees",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "internalID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManagerInternalId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManger",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateTable",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEmployees",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEquipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tasks",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "template",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/tasks",
      "method": "projectGetTasks",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Get all tasks for a project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project"
        },
        {
          "name": "publicId",
          "schema": "string",
          "required": false,
          "description": "Identifies the project by publicId"
        },
        {
          "name": "projectInternalId",
          "schema": "integer",
          "required": false,
          "description": "Identifies the project by internal id"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task description"
        },
        {
          "name": "taskCd",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task ID"
        },
        {
          "name": "taskCdDesc",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task ID and description"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "visibleInAp",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Supplier ledger"
        },
        {
          "name": "visibleInAr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Customer ledger"
        },
        {
          "name": "visibleInCa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Cash management workspace"
        },
        {
          "name": "visibleInCr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the CRM workspace"
        },
        {
          "name": "visibleInEa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Expense workspace"
        },
        {
          "name": "visibleInGl",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the General ledger workspace"
        },
        {
          "name": "visibleInIn",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Inventory workspace"
        },
        {
          "name": "visibleInPo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Purchases workspace"
        },
        {
          "name": "visibleInSo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Sales workspace"
        },
        {
          "name": "visibleInTa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Time entities workspace"
        },
        {
          "name": "restrictedEmployee",
          "schema": "string",
          "required": false,
          "description": "Id of the employee where access restrictions apply"
        },
        {
          "name": "restrictedUser",
          "schema": "integer",
          "required": false,
          "description": "Id of the Odp User where access restrictions apply"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/{projectID}",
      "method": "projectGetByprojectId",
      "httpMethod": "get",
      "tag": "Project",
      "description": "Get a specific Project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Project"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Project in ProjectController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/project/{projectId}",
      "method": "projectPutByprojectId",
      "httpMethod": "put",
      "tag": "Project",
      "description": "Update a specific Project",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Project"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "allocationRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "autoAllocate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "automaticReleaseArDoc",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingPeriod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "billingRule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerLocation",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "defAccrualSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "defSub",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "employees",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "internalID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectID",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManagerInternalId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "projectManger",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateTable",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEmployees",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "restricEquipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tasks",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "template",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projectaccountgroup",
      "method": "projectAccountGroupGetAll",
      "httpMethod": "get",
      "tag": "ProjectAccountGroup",
      "description": "Get a range of Project Account Groups - ScreenId=PM2010PL",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projectaccountgroup/{accountGroupId}",
      "method": "projectAccountGroupGetByaccountGroupId",
      "httpMethod": "get",
      "tag": "ProjectAccountGroup",
      "description": "Get spesific Project Account Group - ScreenId=PM201000",
      "parameters": [
        {
          "name": "accountGroupId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projectbasic",
      "method": "projectBasicGetAll",
      "httpMethod": "get",
      "tag": "ProjectBasic",
      "description": "Get a range of Projects - ScreenId=PM301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select project status."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "Project name/description"
        },
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project"
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": false,
          "description": "Project's start date"
        },
        {
          "name": "nonProject",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to return the non-project."
        },
        {
          "name": "projectIdDesc",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project by ID and description"
        },
        {
          "name": "publicId",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project by its publicId"
        },
        {
          "name": "restrictedEmployee",
          "schema": "string",
          "required": false,
          "description": "Id of the employee where access restrictions apply"
        },
        {
          "name": "restrictedUser",
          "schema": "integer",
          "required": false,
          "description": "Id of the odp user where access restrictions apply"
        },
        {
          "name": "visibleInAp",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Supplier ledger"
        },
        {
          "name": "visibleInAr",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Customer ledger"
        },
        {
          "name": "visibleInCa",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Cash management workspace"
        },
        {
          "name": "visibleInCr",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the CRM workspace"
        },
        {
          "name": "visibleInEa",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Expense workspace"
        },
        {
          "name": "visibleInGl",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the General ledger workspace"
        },
        {
          "name": "visibleInIn",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Inventory workspace"
        },
        {
          "name": "visibleInPo",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Purchases workspace"
        },
        {
          "name": "visibleInSo",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Sales workspace"
        },
        {
          "name": "visibleInTa",
          "schema": "boolean",
          "required": false,
          "description": "If the project is visible in the Time entities workspace"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projectbudget",
      "method": "projectBudgetGetAll",
      "httpMethod": "get",
      "tag": "ProjectBudget",
      "description": "Get a range of Project Budgets - ScreenId=PM309000",
      "parameters": [
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project"
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projectbudget",
      "method": "projectBudgetPost",
      "httpMethod": "post",
      "tag": "ProjectBudget",
      "description": "Creates a Project Budget",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountGroupID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "inventoryNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originalBudgetAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originalBudgetQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "projectTaskID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "revisedBudgetAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "revisedBudgetQty",
          "schema": "object",
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttask",
      "method": "projectTaskGetAllTasks",
      "httpMethod": "get",
      "tag": "ProjectTask",
      "description": "",
      "parameters": [
        {
          "name": "projectId",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project"
        },
        {
          "name": "publicId",
          "schema": "string",
          "required": false,
          "description": "Identifies the project by publicId"
        },
        {
          "name": "projectInternalId",
          "schema": "integer",
          "required": false,
          "description": "Identifies the project by internal id"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task description"
        },
        {
          "name": "taskCd",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task ID"
        },
        {
          "name": "taskCdDesc",
          "schema": "string",
          "required": false,
          "description": "Identifies the Project task ID and description"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "visibleInAp",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Supplier ledger"
        },
        {
          "name": "visibleInAr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Customer ledger"
        },
        {
          "name": "visibleInCa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Cash management workspace"
        },
        {
          "name": "visibleInCr",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the CRM workspace"
        },
        {
          "name": "visibleInEa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Expense workspace"
        },
        {
          "name": "visibleInGl",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the General ledger workspace"
        },
        {
          "name": "visibleInIn",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Inventory workspace"
        },
        {
          "name": "visibleInPo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Purchases workspace"
        },
        {
          "name": "visibleInSo",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Sales workspace"
        },
        {
          "name": "visibleInTa",
          "schema": "boolean",
          "required": false,
          "description": "If the project task is visible in the Time entities workspace"
        },
        {
          "name": "restrictedEmployee",
          "schema": "string",
          "required": false,
          "description": "Id of the employee where access restrictions apply"
        },
        {
          "name": "restrictedUser",
          "schema": "integer",
          "required": false,
          "description": "Id of the Odp User where access restrictions apply"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttask/{internalId}",
      "method": "projectTaskGetTaskByinternalId",
      "httpMethod": "get",
      "tag": "ProjectTask",
      "description": "",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttask/{internalId}",
      "method": "projectTaskPostByinternalId",
      "httpMethod": "post",
      "tag": "ProjectTask",
      "description": "Create a Task",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the project by its internalID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "employees",
          "schema": "array",
          "description": ""
        },
        {
          "name": "plannedEnd",
          "schema": "object",
          "description": ""
        },
        {
          "name": "plannedStart",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rateTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "restrictEmployees",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttask/{internalId}",
      "method": "projectTaskPutByinternalId",
      "httpMethod": "put",
      "tag": "ProjectTask",
      "description": "Update a specific Task",
      "parameters": [
        {
          "name": "internalId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the task by its internalID"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "employees",
          "schema": "array",
          "description": ""
        },
        {
          "name": "plannedEnd",
          "schema": "object",
          "description": ""
        },
        {
          "name": "plannedStart",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rateTable",
          "schema": "object",
          "description": ""
        },
        {
          "name": "restrictEmployees",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taskId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttransaction",
      "method": "projectTransactionGetAll",
      "httpMethod": "get",
      "tag": "ProjectTransaction",
      "description": "Get a range of Project transaction documents - ScreenId=PM304000",
      "parameters": [
        {
          "name": "module",
          "schema": "string",
          "required": false,
          "description": "Select to filter on module; e.g. AR, AP, IN etc."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Filter on project ID."
        },
        {
          "name": "projectTask",
          "schema": "string",
          "required": false,
          "description": "Filter on Task ID."
        },
        {
          "name": "billable",
          "schema": "boolean",
          "required": false,
          "description": "Filter invoiceable project tasks."
        },
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "Filter on branch for the project transation."
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Filter on the registration date for the project transaction."
        },
        {
          "name": "fromPeriod",
          "schema": "string",
          "required": false,
          "description": "Mandatory. Start date for the task."
        },
        {
          "name": "toPeriod",
          "schema": "string",
          "required": false,
          "description": "Mandatory. End date for the task."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Expands project transaction notes"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttransaction",
      "method": "projectTransactionPost",
      "httpMethod": "post",
      "tag": "ProjectTransaction",
      "description": "Create a project transaction document and lines",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "module",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttransaction/{refNbr}",
      "method": "projectTransactionGetByrefNbr",
      "httpMethod": "get",
      "tag": "ProjectTransaction",
      "description": "Get a specific Project transaction document",
      "parameters": [
        {
          "name": "refNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the project transaction document"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/projecttransaction/{refNbr}",
      "method": "projectTransactionPutByrefNbr",
      "httpMethod": "put",
      "tag": "ProjectTransaction",
      "description": "Update a specific Project transaction document",
      "parameters": [
        {
          "name": "refNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Project transaction document to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "module",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorder",
      "method": "purchaseOrderGetAllOrder",
      "httpMethod": "get",
      "tag": "PurchaseOrder",
      "description": "Get a range of Purchase Order - ScreenId=PO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on order no. and forward"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Select and filter on Type."
        },
        {
          "name": "orderStatus",
          "schema": "string",
          "required": false,
          "description": "Select and filter on Status."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": "Filter on Supplier."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorder",
      "method": "purchaseOrderPost",
      "httpMethod": "post",
      "tag": "PurchaseOrder",
      "description": "Create a Purchase Order",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "changeDatesOnLines",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promisedOn",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipTerms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipTo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingDestinationType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierVatZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorder/{purchaseOrderNumber}",
      "method": "purchaseOrderGetOrderBypurchaseOrderNumber",
      "httpMethod": "get",
      "tag": "PurchaseOrder",
      "description": "Get a specific Purchase Order",
      "parameters": [
        {
          "name": "purchaseOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Purchase Order in PurchaseOrderController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorder/{purchaseOrderNumber}",
      "method": "purchaseOrderPutBypurchaseOrderNumber",
      "httpMethod": "put",
      "tag": "PurchaseOrder",
      "description": "Update a Purchase Order",
      "parameters": [
        {
          "name": "purchaseOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Order to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "changeDatesOnLines",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "discountDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promisedOn",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipTerms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipTo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingDestinationType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingLocation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierVatZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "terms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorderbasic",
      "method": "purchaseOrderBasicGetAllOrderBasic",
      "httpMethod": "get",
      "tag": "PurchaseOrderBasic",
      "description": "Get a range of Purchase Order - ScreenId=PO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on order no. and forward"
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Select and filter on Type."
        },
        {
          "name": "orderStatus",
          "schema": "string",
          "required": false,
          "description": "Select and filter on Status."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": "Filter on Supplier."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorderbasic",
      "method": "purchaseOrderBasicPost",
      "httpMethod": "post",
      "tag": "PurchaseOrderBasic",
      "description": "Create a Purchase Order Basic",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "changeDatesOnLines",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promisedOn",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorderbasic/{purchaseOrderNumber}",
      "method": "purchaseOrderBasicGetPurchaseOrderBasicBypurchaseOrderNumber",
      "httpMethod": "get",
      "tag": "PurchaseOrderBasic",
      "description": "Get a specific Purchase Order",
      "parameters": [
        {
          "name": "purchaseOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Purchase Order in PurchaseOrderController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/purchaseorderbasic/{purchaseOrderNumber}",
      "method": "purchaseOrderBasicPutBypurchaseOrderNumber",
      "httpMethod": "put",
      "tag": "PurchaseOrderBasic",
      "description": "Update a Purchase Order Basic",
      "parameters": [
        {
          "name": "purchaseOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Order to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "changeDatesOnLines",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "controlTotal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "promisedOn",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "supplierRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salescategory",
      "method": "salesCategoryGet",
      "httpMethod": "get",
      "tag": "SalesCategory",
      "description": "Get Sales Categories - ScreenId=IN204060",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salescategory/{categoryId}",
      "method": "salesCategoryGetCategoryBycategoryId",
      "httpMethod": "get",
      "tag": "SalesCategory",
      "description": "Get a Sales Category",
      "parameters": [
        {
          "name": "categoryId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Sales Category"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Sales Category in SalesCategoryController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salescategory/{categoryId}/item",
      "method": "salesCategoryGetItemsForCategoryBycategoryId",
      "httpMethod": "get",
      "tag": "SalesCategory",
      "description": "Get a range of Inventory Items from a specific Sales Category",
      "parameters": [
        {
          "name": "categoryId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Sales Category"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder",
      "method": "salesOrderGetAllOrders",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get a range of SO Orders - ScreenId=SO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added force pagination",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Filter by Order type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select to filter on status on order."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on Order no. greater than value."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "showNotes",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include notes."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder",
      "method": "salesOrderPost",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Create a Sale Order",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cancelBy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "canceled",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerVATZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "emailed",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "insurance",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "invoiceSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "isRotRutDeductible",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "origOrderNbr",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "origOrderType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredWarehouse",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printDescriptionOnInvoice",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnExternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnInternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "residentialDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "salesPerson",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "saturdayDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipComplete",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingTerms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "transactionType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/orderType/{orderType}/{orderNumber}/attachment",
      "method": "salesOrderCreateHeaderAttachmentByorderNumberorderType",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderCreateLineAttachmentByorderNumberorderTypelineNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderNbr}",
      "method": "salesOrderGetByorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get a specific SO Order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderNbr}",
      "method": "salesOrderPutByorderNbr",
      "httpMethod": "put",
      "tag": "SalesOrder",
      "description": "Update a specific Sale Order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sale Order to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cancelBy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "canceled",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerVATZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "emailed",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "insurance",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "invoiceSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "isRotRutDeductible",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "origOrderNbr",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "origOrderType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredWarehouse",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printDescriptionOnInvoice",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnExternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnInternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "residentialDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "salesPerson",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "saturdayDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipComplete",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingTerms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "transactionType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderNumber}/attachment",
      "method": "salesOrderCreateHeaderAttachmentByorderNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderCreateLineAttachmentByorderNumberlineNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderType}/{orderNbr}",
      "method": "salesOrderGetOrderByTypeByorderTypeorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get a specific type of Order",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Type"
        },
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderType}/{orderNbr}/commissions",
      "method": "salesOrderGetCommissionsByorderTypeorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get Sales Order Commissions - ScreenId=SO301000, tab Commissions",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderType}/{orderNbr}/rotrut",
      "method": "salesOrderGetRotrutByorderTypeorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get ROT/RUT details for a specific type of order",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{orderType}/{orderNumber}/printOrder",
      "method": "salesOrderPrintOrderByorderNumberorderType",
      "httpMethod": "get",
      "tag": "SalesOrder",
      "description": "Get the print report of the Sales Order Quote",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Type"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{saleOrderNumber}/action/cancelSalesOrder",
      "method": "salesOrderCancelSalesOrderBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Cancel Order action",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder that will be cancelled"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{saleOrderNumber}/action/createShipment",
      "method": "salesOrderCreateShipmentActionBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Create shipment operation",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder from which the shipment will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "operation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "returnShipmentDto",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shipmentWarehouse",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorder/{salesOrderNumber}/action/reopenSalesOrder",
      "method": "salesOrderReopenSalesOrderBysalesOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrder",
      "description": "Reopen and update a specific Sales Order. This method requires a sales order update dto where the order type is initialised.",
      "parameters": [
        {
          "name": "salesOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sale Order to reopen"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "saleOrderUpdateDto",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic",
      "method": "salesOrderBasicGetAllOrders",
      "httpMethod": "get",
      "tag": "SalesOrderBasic",
      "description": "Get a range of Sale Orders - ScreenId=SO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Filter by Order type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select to filter on status on order."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on Order no. greater than value."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "showNotes",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include notes."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic",
      "method": "salesOrderBasicPost",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Create a Sale Order",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/orderType/{orderType}/{orderNumber}/attachment",
      "method": "salesOrderBasicCreateHeaderAttachmentByorderNumberorderType",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order type"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderBasicCreateLineAttachmentByorderNumberorderTypelineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order type"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{orderNbr}",
      "method": "salesOrderBasicGetByorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrderBasic",
      "description": "Get a specific SO Order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{orderNbr}",
      "method": "salesOrderBasicPutByorderNbr",
      "httpMethod": "put",
      "tag": "SalesOrderBasic",
      "description": "Update a specific Sale Order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sale Order to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{orderNumber}/attachment",
      "method": "salesOrderBasicCreateHeaderAttachmentByorderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderBasicCreateLineAttachmentByorderNumberlineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{orderType}/{orderNbr}",
      "method": "salesOrderBasicGetOrderByTypeByorderTypeorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrderBasic",
      "description": "Get a specific type of Order",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Type"
        },
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesorderbasic/{saleOrderNumber}/action/createShipment",
      "method": "salesOrderBasicCreateShipmentActionBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasic",
      "description": "Crete shipment operation",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder from which the shipment will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "operation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "returnShipmentDto",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shipmentWarehouse",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesordertype",
      "method": "salesOrderTypeGetAllSalesOrderTypes",
      "httpMethod": "get",
      "tag": "SalesOrderType",
      "description": "Get a range of SO OrderTypes - ScreenId=SO201000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesordertype/{orderType}",
      "method": "salesOrderTypeGetSalesOrderTypeByorderType",
      "httpMethod": "get",
      "tag": "SalesOrderType",
      "description": "Get a specific SO OrderType",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the SO OrderType"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrderType in SalesOrderTypeController. Used to get data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesperson",
      "method": "salesPersonGetSalespersons",
      "httpMethod": "get",
      "tag": "SalesPerson",
      "description": "Get all or a range of Salespersons - screen ID: AR205000\r\nPlease use a page size lower or equal to the allowed max page size which is returned under metadata. \r\nIf pagesize is greater than the max page size, it will be limited to max page size.",
      "parameters": [
        {
          "name": "salespersonCd",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "commissionPct",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesperson",
      "method": "salesPersonCreateSalesperson",
      "httpMethod": "post",
      "tag": "SalesPerson",
      "description": "Create a Salesperson",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "commissionPct",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salespersonID",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesperson/{salespersonCd}",
      "method": "salesPersonGetSalespersonBysalespersonCd",
      "httpMethod": "get",
      "tag": "SalesPerson",
      "description": "Get a specific Salesperson - screen ID: AR205000",
      "parameters": [
        {
          "name": "salespersonCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the Salesperson"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a salesperson in SalesPersonController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/salesperson/{salespersonCd}",
      "method": "salesPersonUpdateSalespersonBysalespersonCd",
      "httpMethod": "put",
      "tag": "SalesPerson",
      "description": "Update a specific Salesperson",
      "parameters": [
        {
          "name": "salespersonCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the Salesperson to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "commissionPct",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salespersonID",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment",
      "method": "shipmentGetAllShipments",
      "httpMethod": "get",
      "tag": "Shipment",
      "description": "Get a range of SO Shipments - ScreenId=SO302000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The GreaterThanValue parameter has no effect on the result."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment",
      "method": "shipmentPost",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Create a Shipment",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "addressLine1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressLine2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attention",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "city",
          "schema": "object",
          "description": ""
        },
        {
          "name": "container",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "country",
          "schema": "object",
          "description": ""
        },
        {
          "name": "county",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "email",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "freightAmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "freightCost",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fromWarehouse",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "insurance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modeOfTrasport",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "operation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "residentialDelivery",
          "schema": "object",
          "description": ""
        },
        {
          "name": "saturdayDelivery",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipmentDetailLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shipmentPackageLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shipmentType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingTerms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "toWarehouse",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "useCustomerAccount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNbr}",
      "method": "shipmentGetByshipmentNbr",
      "httpMethod": "get",
      "tag": "Shipment",
      "description": "Get a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Shipment in ShipmentController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNbr}",
      "method": "shipmentPutByshipmentNbr",
      "httpMethod": "put",
      "tag": "Shipment",
      "description": "Update a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "addressLine1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressLine2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attention",
          "schema": "object",
          "description": ""
        },
        {
          "name": "businessName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "city",
          "schema": "object",
          "description": ""
        },
        {
          "name": "container",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlQuantity",
          "schema": "object",
          "description": ""
        },
        {
          "name": "country",
          "schema": "object",
          "description": ""
        },
        {
          "name": "county",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "email",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "freightAmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "freightCost",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fromWarehouse",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "insurance",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modeOfTrasport",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "operation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "residentialDelivery",
          "schema": "object",
          "description": ""
        },
        {
          "name": "saturdayDelivery",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shipmentDetailLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shipmentPackageLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "shipmentType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingTerms",
          "schema": "object",
          "description": ""
        },
        {
          "name": "shippingZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "toWarehouse",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "useCustomerAccount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNbr}/printPickList",
      "method": "shipmentPrintPickListByshipmentNbr",
      "httpMethod": "get",
      "tag": "Shipment",
      "description": "Get the pick list report",
      "parameters": [
        {
          "name": "shipmentNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the shipment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNbr}/printShipmentConfirmation",
      "method": "shipmentPrintShipmentConfirmationByshipmentNbr",
      "httpMethod": "get",
      "tag": "Shipment",
      "description": "Get the shipment confirmation report",
      "parameters": [
        {
          "name": "shipmentNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the shipment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/addLine",
      "method": "/controller/api/v1/shipment/{shipmentNumber}/action/addLinePost",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Adds a new Shipment Line to a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "inventoryNumber",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "operation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "shippedQty",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "uom",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "warehouse",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/addSOLine",
      "method": "shipmentPostByshipmentNumber",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Adds a Sales Order Line to a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "inventoryId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orderLineNumber",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/addSOOrder",
      "method": "/controller/api/v1/shipment/{shipmentNumber}/action/addSoOrderPost",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Adds a Sales Order to a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "orderNumber",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/confirmShipment",
      "method": "shipmentConfirmShipmentByshipmentNumber",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Confirm shipment operation",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the shipment to be confirmed"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/correctShipment",
      "method": "shipmentCorrectShipmentByshipmentNumber",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Correct shipment operation",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the shipment to be corrected"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/shipment/{shipmentNumber}/action/deleteLine/{lineNumber}",
      "method": "shipmentPostByshipmentNumberlineNumber",
      "httpMethod": "post",
      "tag": "Shipment",
      "description": "Deletes a Shipment Line from a specific Shipment",
      "parameters": [
        {
          "name": "shipmentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Shipment to update"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Identifies the Shipment line to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "deleteSOLine",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/stocktake",
      "method": "stocktakeGetAllStocktakes",
      "httpMethod": "get",
      "tag": "Stocktake",
      "description": "Get a range of stocktakes - ScreenId=IN305000\r\n- Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method.",
      "parameters": [
        {
          "name": "warehouse",
          "schema": "string",
          "required": false,
          "description": "Filter by Warehouse."
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Filter by Location."
        },
        {
          "name": "inventory",
          "schema": "string",
          "required": false,
          "description": "Filter by Inventory."
        },
        {
          "name": "lotSerialNumber",
          "schema": "string",
          "required": false,
          "description": "Filter by LotSerialNumber."
        },
        {
          "name": "summaryStatus",
          "schema": "string",
          "required": false,
          "description": "Filter by SummaryStatus."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords"
        },
        {
          "name": "startWithLine",
          "schema": "integer",
          "required": false,
          "description": "Filter by LineNumber GreaterEqual StartWithLine."
        },
        {
          "name": "endWithLine",
          "schema": "integer",
          "required": false,
          "description": "Filter by by LineNumber LessEqual EndWithLine."
        },
        {
          "name": "freezeDateTime",
          "schema": "string",
          "required": false,
          "description": "Filter by FreezeDateTime."
        },
        {
          "name": "freezeDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Filter by FreezeDateTimeCondition."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "expirationDateTime",
          "schema": "string",
          "required": false,
          "description": "Filter by ExpirationDateTime."
        },
        {
          "name": "expirationDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Filter by ExpirationDateTimeCondition."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter by StocktakeLineStatus."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/stocktake/{referenceNumber}",
      "method": "stocktakeGetByreferenceNumber",
      "httpMethod": "get",
      "tag": "Stocktake",
      "description": "Get a specific \r\n- Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method.",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Stocktake"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/stocktake/{referenceNumber}",
      "method": "stocktakePutByreferenceNumber",
      "httpMethod": "put",
      "tag": "Stocktake",
      "description": "Update a specific stocktake\r\n- Method is deprecated and will be removed from 1'st of December 2021. Start using V2 for this method.",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the stocktake to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/subaccount",
      "method": "subaccountGetAllSubaccounts",
      "httpMethod": "get",
      "tag": "Subaccount",
      "description": "Get all SubAccounts - ScreenId=GL203000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added force pagination.",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "active",
          "schema": "boolean",
          "required": false,
          "description": "If the SubAccount is active"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/subaccount",
      "method": "subaccountPost",
      "httpMethod": "post",
      "tag": "Subaccount",
      "description": "Create a Subaccount",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "subaccountId",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "subaccountNumber",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/subaccount/{subAccountNumber}",
      "method": "subaccountGetSubaccountBysubAccountNumber",
      "httpMethod": "get",
      "tag": "Subaccount",
      "description": "Get a specific SubAccount",
      "parameters": [
        {
          "name": "subAccountNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the SubAccount"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/subaccount/{subAccountNumber}",
      "method": "subaccountPutBysubAccountNumber",
      "httpMethod": "put",
      "tag": "Subaccount",
      "description": "Update a specific Subaccount",
      "parameters": [
        {
          "name": "subAccountNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Subaccount to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "subaccountId",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "subaccountNumber",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier",
      "method": "supplierGetAll",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a range of suppliers - ScreenId=AP303000",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expandAccountInformation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier",
      "method": "supplierPost",
      "httpMethod": "post",
      "tag": "Supplier",
      "description": "Create a supplier",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountUsedForPayment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "chargeBearer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyOverride",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyRateOverride",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentLanguage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "glAccounts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideWithClassValues",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parentRecordNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paySeparately",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentLeadTime",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRefDisplayMask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainageApply",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainageCashAccountID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainagePct",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierPaymentMethodDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZoneId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/POBalance",
      "method": "supplierGetAllSupplierPoBalance",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get the PO balance of a range of suppliers",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/balance",
      "method": "supplierGetAllSupplierBalance",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get the balance of a range of suppliers",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/supplierClass",
      "method": "supplierGetAllSupplierClasses",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get supplier classes",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/supplierClass/{supplierClassId}",
      "method": "supplierGetSpecificSupplierClassBysupplierClassId",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a specific supplier class",
      "parameters": [
        {
          "name": "supplierClassId",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier class"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierCd}",
      "method": "supplierGetBysupplierCd",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a specific supplier",
      "parameters": [
        {
          "name": "supplierCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a supplier in SupplierController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierCd}",
      "method": "supplierPutBysupplierCd",
      "httpMethod": "put",
      "tag": "Supplier",
      "description": "Update a specific supplier",
      "parameters": [
        {
          "name": "supplierCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "accountUsedForPayment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "attributeLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "chargeBearer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyOverride",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyRateOverride",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentLanguage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "glAccounts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mainContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "number",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideWithClassValues",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "parentRecordNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paySeparately",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentBy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentLeadTime",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRefDisplayMask",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remitContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainageApply",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainageCashAccountID",
          "schema": "object",
          "description": ""
        },
        {
          "name": "retainagePct",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierClassId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierPaymentMethodDetails",
          "schema": "array",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZoneId",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierCd}/POBalance",
      "method": "supplierGetSupplierPoBalanceBysupplierCd",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a specific supplier's PO balance",
      "parameters": [
        {
          "name": "supplierCd",
          "schema": "string",
          "required": true,
          "description": "Indentifies the supplier for witch to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierCd}/balance",
      "method": "supplierGetSupplierBalanceBysupplierCd",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a specific supplier's PO balance",
      "parameters": [
        {
          "name": "supplierCd",
          "schema": "string",
          "required": true,
          "description": "Indentifies the supplier for witch to return data"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierCd}/contact",
      "method": "supplierGetAllContactForSupplierBysupplierCd",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a range of a Supplier of a specific supplier",
      "parameters": [
        {
          "name": "supplierCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "displayName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "active",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "businessAccount",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierNumber}/document",
      "method": "supplierGetAllDocumentsForSupplierBysupplierNumber",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Gets a range of documents for a specific supplier",
      "parameters": [
        {
          "name": "supplierNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier for which to return data"
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "By type of document."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Filter by the project with which the document is associated."
        },
        {
          "name": "expandApproval",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include approval information."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include description."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplier/{supplierNumber}/invoice",
      "method": "supplierGetAllInvoicesForSupplierBysupplierNumber",
      "httpMethod": "get",
      "tag": "Supplier",
      "description": "Get a range of invoices for a specific supplier\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "supplierNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier for which to return data"
        },
        {
          "name": "expandAttachment",
          "schema": "boolean",
          "required": false,
          "description": "Set to true if you want to see all attachments regarding this document."
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "By type of document."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Filter by the project with which the document is associated."
        },
        {
          "name": "expandApproval",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include approval information."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include description."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice",
      "method": "supplierInvoiceGetAllInvoices",
      "httpMethod": "get",
      "tag": "SupplierInvoice",
      "description": "Get a range of Invoices - ScreenId=AP301000. \r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "expandAttachment",
          "schema": "boolean",
          "required": false,
          "description": "Set to true if you want to see all attachments regarding this document."
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "By type of document."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Filter by the project with which the document is associated."
        },
        {
          "name": "expandApproval",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include approval information."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include description."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice",
      "method": "supplierInvoicePost",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Create an SupplierInvoice",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "addPOReceiptLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "addPurchaseOrders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "applyRetainage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "approvalDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paySelected",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMessage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRefNo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "roundingDiffInCurrency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierTaxZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCalculationMode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "validateLineDetails",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "vatAmount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/approval",
      "method": "supplierInvoiceGetByApprovalDocumentId",
      "httpMethod": "get",
      "tag": "SupplierInvoice",
      "description": "Get an invoice based on the systemId. SystemID is used for approving supplier invoices",
      "parameters": [
        {
          "name": "systemId",
          "schema": "string",
          "required": true,
          "description": "SystemID referes to the approval document id created when the document is sent to approval"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a ApInvoice in SupplierInvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/documentType/{documentType}/{invoiceNumber}/attachment",
      "method": "supplierInvoiceCreateHeaderAttachmentByTypeBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Creates an attachment and associates it with a supplier invoice. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/documentType/{documentType}/{invoiceNumber}/{lineNumber}/attachment",
      "method": "supplierInvoiceCreateLineAttachmentByTypeBydocumentTypeinvoiceNumberlineNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Creates an attachment and associates it with a certain supplier invoice line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier invoice"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Identifies the supplier invoice line"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}",
      "method": "supplierInvoiceDeleteBydocumentTypeinvoiceNumber",
      "httpMethod": "delete",
      "tag": "SupplierInvoice",
      "description": "Deletes a specific Supplier Invoice",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Identifies the docType of Supplier Invoice to delete"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Supplier Invoice to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}",
      "method": "supplierInvoiceGetByTypeBydocumentTypeinvoiceNumber",
      "httpMethod": "get",
      "tag": "SupplierInvoice",
      "description": "Get a specific Invoice",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a ApInvoice in SupplierInvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}",
      "method": "supplierInvoicePutByTypeBydocumentTypeinvoiceNumber",
      "httpMethod": "put",
      "tag": "SupplierInvoice",
      "description": "Update a specific SupplierInvoice",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Identifies the SupplierInvoice to update"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the SupplierInvoice to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "addPOReceiptLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "addPurchaseOrders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "applyRetainage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "approvalDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paySelected",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMessage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRefNo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "roundingDiffInCurrency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierTaxZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCalculationMode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "validateLineDetails",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "vatAmount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/prebook",
      "method": "supplierInvoicePrebookInvoiceBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Pre-Book invoice operation",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Document type of the document to be Pre-Booked"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the document to be Pre-Booked"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/release",
      "method": "supplierInvoiceReleaseInvoiceByTypeBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Release invoice operation",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Document type of the released document to be reversed"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the document to be release"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/reverse",
      "method": "supplierInvoiceReverseInvoiceBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Provides an action for reversing a supplier invoice/adjustment",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/sendtoapproval",
      "method": "supplierInvoiceSendToApprovalBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Send invoice to approval",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Document type"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Document number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{documentType}/{invoiceNumber}/action/voidinvoice",
      "method": "supplierInvoiceVoidInvoiceBydocumentTypeinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Void invoice operation",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": "Document type of the document to be Voided"
        },
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the document to be Voided"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}",
      "method": "supplierInvoiceDeleteByinvoiceNumber",
      "httpMethod": "delete",
      "tag": "SupplierInvoice",
      "description": "Deletes a specific Supplier Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Supplier Invoice to delete"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}",
      "method": "supplierInvoiceGetByinvoiceNumber",
      "httpMethod": "get",
      "tag": "SupplierInvoice",
      "description": "Get a specific Invoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a ApInvoice in SupplierInvoiceController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}",
      "method": "supplierInvoicePutByinvoiceNumber",
      "httpMethod": "put",
      "tag": "SupplierInvoice",
      "description": "Update a specific SupplierInvoice",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the SupplierInvoice to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "addPOReceiptLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "addPurchaseOrders",
          "schema": "array",
          "description": ""
        },
        {
          "name": "amount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "applyRetainage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "approvalDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "payDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paySelected",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMessage",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRefNo",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "roundingDiffInCurrency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplierTaxZone",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxCalculationMode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "validateLineDetails",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "vatAmount",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}/action/correct",
      "method": "supplierInvoiceCorrectInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}/action/release",
      "method": "supplierInvoiceReleaseInvoiceByinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Release invoice operation",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the document to be release"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}/attachment",
      "method": "supplierInvoiceCreateHeaderAttachmentByinvoiceNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Creates an attachment and associates it with a supplier invoice. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier invoice"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierInvoice/{invoiceNumber}/{lineNumber}/attachment",
      "method": "supplierInvoiceCreateLineAttachmentByinvoiceNumberlineNumber",
      "httpMethod": "post",
      "tag": "SupplierInvoice",
      "description": "Creates an attachment and associates it with a certain supplier invoice line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "invoiceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the supplier invoice"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment",
      "method": "supplierPaymentGetAllPayments",
      "httpMethod": "get",
      "tag": "SupplierPayment",
      "description": "Get all SupplierPayments.\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nScreenId=AP302000",
      "parameters": [
        {
          "name": "invoiceRefNbr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Enter the from-value for Ref. no."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": "Filter by Supplier"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment",
      "method": "supplierPaymentCreateSupplierPayment",
      "httpMethod": "post",
      "tag": "SupplierPayment",
      "description": "Create a SupplierPayment",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment/{paymentNumber}",
      "method": "supplierPaymentGetBypaymentNumber",
      "httpMethod": "get",
      "tag": "SupplierPayment",
      "description": "Get a specific SupplierPayment",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the SupplierPayment"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment/{paymentNumber}",
      "method": "supplierPaymentPutBypaymentNumber",
      "httpMethod": "put",
      "tag": "SupplierPayment",
      "description": "Update a specific SupplierPayment",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Payment to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "applicationPeriod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentAmount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "supplier",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment/{paymentNumber}/action/release",
      "method": "supplierPaymentReleasePaymentBypaymentNumber",
      "httpMethod": "post",
      "tag": "SupplierPayment",
      "description": "Release payment operation",
      "parameters": [
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the payment to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "type",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierPayment/{paymentType}/{paymentNumber}",
      "method": "supplierPaymentGetByTypeBypaymentTypepaymentNumber",
      "httpMethod": "get",
      "tag": "SupplierPayment",
      "description": "Get a specific SupplierPayment by type and number",
      "parameters": [
        {
          "name": "paymentType",
          "schema": "string",
          "required": true,
          "description": "Identifies the Supplier document type"
        },
        {
          "name": "paymentNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Supplier document number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierdocument",
      "method": "supplierDocumentGetAllDocumentsForSupplier",
      "httpMethod": "get",
      "tag": "SupplierDocument",
      "description": "Gets a range of supplier documents - ScreenId=AP301000\r\nGet a range of Purchase Order - ScreenId=PO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size\r\nChange log:\r\n2020-May:Added forced pagination",
      "parameters": [
        {
          "name": "documentType",
          "schema": "string",
          "required": false,
          "description": "By type of document."
        },
        {
          "name": "released",
          "schema": "integer",
          "required": false,
          "description": "Parameter for showing if invoice has been released or not."
        },
        {
          "name": "project",
          "schema": "string",
          "required": false,
          "description": "Filter by the project with which the document is associated."
        },
        {
          "name": "expandApproval",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include approval information."
        },
        {
          "name": "expandNote",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include description."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierlocation",
      "method": "supplierLocationGetLocations",
      "httpMethod": "get",
      "tag": "SupplierLocation",
      "description": "Get a range of Locations - List screen=AP3030P1, Entry screen=AP303010\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierlocation",
      "method": "supplierLocationCreate",
      "httpMethod": "post",
      "tag": "SupplierLocation",
      "description": "Create a Location",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "baccountId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ediCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierlocation/{bAccountId}",
      "method": "supplierLocationGetLocationsForBaccountBybAccountId",
      "httpMethod": "get",
      "tag": "SupplierLocation",
      "description": "Get a range of Locations for a BAccount\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierlocation/{bAccountId}/{locationId}",
      "method": "supplierLocationGetLocationBybAccountIdlocationId",
      "httpMethod": "get",
      "tag": "SupplierLocation",
      "description": "Get a specific Location of a Baccount",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Location"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Location in LocationController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/supplierlocation/{bAccountId}/{locationId}",
      "method": "supplierLocationUpdateBybAccountIdlocationId",
      "httpMethod": "put",
      "tag": "SupplierLocation",
      "description": "Update a specific Location",
      "parameters": [
        {
          "name": "bAccountId",
          "schema": "string",
          "required": true,
          "description": "Identifies the BAccount"
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Location"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "object",
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "description": ""
        },
        {
          "name": "addressIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "baccountId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contactIsSameAsMain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "corporateId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ediCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "gln",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationName",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vatZone",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard",
      "method": "timeCardGetAllEmployeeTimeCards",
      "httpMethod": "get",
      "tag": "TimeCard",
      "description": "Get all employee time cards, a filter needs to be specified - ScreenId=EP305000",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "The status of the document."
        },
        {
          "name": "week",
          "schema": "string",
          "required": false,
          "description": "Identifies the week number of the time card"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Identifies the type of the time card (Normal, Corrected, NormalCorrected)"
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater-than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "orderBy",
          "schema": "string",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. The OrderBy parameter has no effect on the result."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard",
      "method": "timeCardCreateTimeCard",
      "httpMethod": "post",
      "tag": "TimeCard",
      "description": "Creates a time card",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "employee",
          "schema": "object",
          "description": ""
        },
        {
          "name": "materials",
          "schema": "array",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "summary",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard/{referenceNumber}",
      "method": "timeCardGetEmployeeTimeCardByreferenceNumber",
      "httpMethod": "get",
      "tag": "TimeCard",
      "description": "Get a specific employee time cards",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the time card"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard/{referenceNumber}",
      "method": "timeCardUpdateTimeCardByreferenceNumber",
      "httpMethod": "put",
      "tag": "TimeCard",
      "description": "Updates a specific time card",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the time card to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "employee",
          "schema": "object",
          "description": ""
        },
        {
          "name": "materials",
          "schema": "array",
          "description": ""
        },
        {
          "name": "refNbr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "summary",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard/{timeCardCd}/action/approval",
      "method": "timeCardSendTimeCardToApprovalBytimeCardCd",
      "httpMethod": "post",
      "tag": "TimeCard",
      "description": "Send time card to approval",
      "parameters": [
        {
          "name": "timeCardCd",
          "schema": "string",
          "required": true,
          "description": "Reference number of the time card to be sent to approval"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard/{timeCardCd}/action/hold",
      "method": "timeCardPutTimeCardOnHoldBytimeCardCd",
      "httpMethod": "post",
      "tag": "TimeCard",
      "description": "Put timecard on hold",
      "parameters": [
        {
          "name": "timeCardCd",
          "schema": "string",
          "required": true,
          "description": "Reference number of the time card to be put on hold"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/timeCard/{timeCardCd}/action/submit",
      "method": "timeCardSubmitTimeCardBytimeCardCd",
      "httpMethod": "post",
      "tag": "TimeCard",
      "description": "Submit time card operation",
      "parameters": [
        {
          "name": "timeCardCd",
          "schema": "string",
          "required": true,
          "description": "Reference number of the time card to be submitted"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/unitofmeasure",
      "method": "unitOfMeasureGetAllUnitsOfMeasure",
      "httpMethod": "get",
      "tag": "UnitOfMeasure",
      "description": "Get a range of Units of Measure - ScreenId=CS203100",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vat",
      "method": "vatGetAllVats",
      "httpMethod": "get",
      "tag": "Vat",
      "description": "Get a range of Vats - ScreenId=TX205000",
      "parameters": [
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vat/{vatId}",
      "method": "vatGetVatByvatId",
      "httpMethod": "get",
      "tag": "Vat",
      "description": "Get a specific Vat - TX205000",
      "parameters": [
        {
          "name": "vatId",
          "schema": "string",
          "required": true,
          "description": "Mandatory. Value for VatID to be looked for."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vat/{vendorCd}/{taxPeriodId}/{revisionId}",
      "method": "vatPutVatHeaderNoteByvendorCdtaxPeriodIdrevisionId",
      "httpMethod": "put",
      "tag": "Vat",
      "description": "Update vat header note.",
      "parameters": [
        {
          "name": "vendorCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the tax agency."
        },
        {
          "name": "taxPeriodId",
          "schema": "string",
          "required": true,
          "description": "Identifies the tax period."
        },
        {
          "name": "revisionId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the tax revision."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "note",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vat/{vendorCd}/{taxPeriodId}/{revisionId}/{lineNumber}",
      "method": "vatPutVatLineNoteByvendorCdtaxPeriodIdrevisionIdlineNumber",
      "httpMethod": "put",
      "tag": "Vat",
      "description": "",
      "parameters": [
        {
          "name": "vendorCd",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "taxPeriodId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "revisionId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "note",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vatCategory",
      "method": "vatCategoryGetAllVatCategories",
      "httpMethod": "get",
      "tag": "VatCategory",
      "description": "Get a range of VatCategories - ScreenId=TX205500",
      "parameters": [
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vatCategory/{taxCategoryId}",
      "method": "vatCategoryGetVatCategoryBytaxCategoryId",
      "httpMethod": "get",
      "tag": "VatCategory",
      "description": "Get a specific VatCategory",
      "parameters": [
        {
          "name": "taxCategoryId",
          "schema": "string",
          "required": true,
          "description": "Identifies the VatCategory"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vatZone",
      "method": "vatZoneGetVatZones",
      "httpMethod": "get",
      "tag": "VatZone",
      "description": "Get Tax Zones - ScreenId=TX206000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/vatZone/{vatZoneId}",
      "method": "vatZoneGetVatZoneByvatZoneId",
      "httpMethod": "get",
      "tag": "VatZone",
      "description": "Get a specific Vat Zone",
      "parameters": [
        {
          "name": "vatZoneId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Vat Zone"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/warehouse",
      "method": "warehouseGetAll",
      "httpMethod": "get",
      "tag": "Warehouse",
      "description": "Get a range of Warehouses - ScreenId=IN204000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/warehouse/{warehouseID}",
      "method": "warehouseGetBywarehouseId",
      "httpMethod": "get",
      "tag": "Warehouse",
      "description": "Get a specific Warehouse",
      "parameters": [
        {
          "name": "warehouseId",
          "schema": "string",
          "required": true,
          "description": "Identifies the Warehouse"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Warehouse in WarehouseController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/warehouse/{warehouseID}/location",
      "method": "warehousePostBywarehouseId",
      "httpMethod": "post",
      "tag": "Warehouse",
      "description": "Post new location - ScreenId=IN204000",
      "parameters": [
        {
          "name": "warehouseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "assemblyValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "inclQtyAvail",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "isCosted",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "pickPriority",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemClassId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "projectTaskId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptsValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "transfersValid",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/warehouse/{warehouseID}/location/{locationID}",
      "method": "warehousePutBywarehouseIDlocationId",
      "httpMethod": "put",
      "tag": "Warehouse",
      "description": "Update location - ScreenId=IN204000",
      "parameters": [
        {
          "name": "warehouseId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "active",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "assemblyValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "inclQtyAvail",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "isCosted",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "pickPriority",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemClassId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "primaryItemValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "projectId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "projectTaskId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "receiptsValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesValid",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "transfersValid",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v1/webhooknotificationfeedback",
      "method": "webhookNotificationFeedbackPost",
      "httpMethod": "post",
      "tag": "WebhookNotificationFeedback",
      "description": "Creates/Inserts a WebhookNotificationFeedback",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isSuccess",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notificationId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/PurchaseReceipt",
      "method": "purchaseReceiptV2GetAllReceipts",
      "httpMethod": "get",
      "tag": "PurchaseReceiptV2",
      "description": "Get a range of Purchase Receipts - ScreenId=PO302000\r\nPlease use a page size lower or equal to the allowed max page size which is 500",
      "parameters": [
        {
          "name": "receiptType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "supplier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poOrderNbr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/PurchaseReceipt/{receiptNumber}",
      "method": "purchaseReceiptV2GetPurchaseReceiptByreceiptNumber",
      "httpMethod": "get",
      "tag": "PurchaseReceiptV2",
      "description": "Get a specific Purchase Receipt",
      "parameters": [
        {
          "name": "receiptNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Purchase Receipt"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/currencyrate",
      "method": "currencyRateGetAll",
      "httpMethod": "get",
      "tag": "CurrencyRate",
      "description": "Get all currency rates.",
      "parameters": [
        {
          "name": "fromDate",
          "schema": "string",
          "required": false,
          "description": "From effective date."
        },
        {
          "name": "toDate",
          "schema": "string",
          "required": false,
          "description": "To effective date."
        },
        {
          "name": "fromCurrency",
          "schema": "string",
          "required": false,
          "description": "Identifies from currency."
        },
        {
          "name": "toCurrency",
          "schema": "string",
          "required": false,
          "description": "Identifies to currency."
        },
        {
          "name": "rateType",
          "schema": "string",
          "required": false,
          "description": "Identifies rate type."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/currencyrate",
      "method": "currencyRatePostCurrencyRate",
      "httpMethod": "post",
      "tag": "CurrencyRate",
      "description": "Create currency rate.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "effectiveDate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "fromCurrencyId",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "multDiv",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "rateType",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "toCurrencyId",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/currencyrate/{currencyRateId}",
      "method": "currencyRatePutCurrencyRateBycurrencyRateId",
      "httpMethod": "put",
      "tag": "CurrencyRate",
      "description": "Update Currency rate.",
      "parameters": [
        {
          "name": "currencyRateId",
          "schema": "integer",
          "required": true,
          "description": "Identifies the currency rate id."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "multDiv",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "rate",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/currencyratetype",
      "method": "currencyRateTypeGetAll",
      "httpMethod": "get",
      "tag": "CurrencyRateType",
      "description": "Get currency rate types.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/currencyratetype",
      "method": "currencyRateTypePost",
      "httpMethod": "post",
      "tag": "CurrencyRateType",
      "description": "Create currency rate type.",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "daysEffective",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "description",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "id",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/customerCreditNote",
      "method": "customerCreditNoteV2Create",
      "httpMethod": "post",
      "tag": "CustomerCreditNoteV2",
      "description": "Create a Customer Credit Note. ScreenID=AR301000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "applicationLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/customerDebitNote",
      "method": "customerDebitNoteV2Create",
      "httpMethod": "post",
      "tag": "CustomerDebitNoteV2",
      "description": "Create a Customer Debit Note. ScreenID=AR301000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/customerinvoice",
      "method": "customerInvoiceV2Create",
      "httpMethod": "post",
      "tag": "CustomerInvoiceV2",
      "description": "Create an Invoice. ScreenID=AR301000",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "accountingCostRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "billingAddress",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cashDiscountDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "contractDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "creditTermsId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerProject",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerRefNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "customerVatZoneId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "documentDueDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "domesticServicesDeductibleDocument",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontEmail",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dontPrint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "endDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "externalReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceContact",
          "schema": "object",
          "description": ""
        },
        {
          "name": "invoiceLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "invoiceText",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locationId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "description": ""
        },
        {
          "name": "origInvoiceDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "originatorDocRef",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "paymentMethodId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "paymentReference",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "description": ""
        },
        {
          "name": "referenceNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "salesPersonID",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "salesperson",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "sendToAutoInvoice",
          "schema": "object",
          "description": ""
        },
        {
          "name": "startDate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "taxDetailLines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/discount",
      "method": "discountV2GetDiscounts",
      "httpMethod": "get",
      "tag": "DiscountV2",
      "description": "Get a range of discounts - ScreenId=AR209500",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "discountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "series",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/discountCode",
      "method": "discountCodeV2GetDiscountCodes",
      "httpMethod": "get",
      "tag": "DiscountCodeV2",
      "description": "Get a range of discount codes - ScreenId=AR209000",
      "parameters": [
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for created date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "discountCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/generalLedgerBalance",
      "method": "generalLedgerBalanceV2GetGeneralLedgerBalances",
      "httpMethod": "get",
      "tag": "GeneralLedgerBalanceV2",
      "description": "Get a range of General Ledger Balances. Complete documentation can be found under 8.21  release notes. \r\nPlease use a page size lower or equal to the allowed max page size which is returned under metadata. \r\nIf pagesize is greater than the max page size, it will be limited to max page size.",
      "parameters": [
        {
          "name": "periodId",
          "schema": "string",
          "required": false,
          "description": "Period to retrieve balance for. Mandatory if 'LastModifiedDateTime' not provided. Format: 'yyyyMM'"
        },
        {
          "name": "account",
          "schema": "string",
          "required": false,
          "description": "Account to retrieve balance for"
        },
        {
          "name": "ledger",
          "schema": "string",
          "required": false,
          "description": "Ledger to retrieve balance for"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "Branch to retrieve balance for"
        },
        {
          "name": "balanceType",
          "schema": "string",
          "required": false,
          "description": "Balance Type of the ledger to be exported"
        },
        {
          "name": "toggleBalanceSigns",
          "schema": "boolean",
          "required": false,
          "description": "Parameter can be used in order to change the balance sign for liability and income accounts"
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\nMandatory if 'PeriodId' is not provided.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction",
      "method": "journalTransactionV2GetAllJournalTransactions",
      "httpMethod": "get",
      "tag": "JournalTransactionV2",
      "description": "Get a range of Journal Transactions - ScreenId=GL301000. \r\nOn this particular endpoint, pagesize and totalcount denotes number of journaltransaction lines. \r\nWhen using pagination, the transactions for one specific batch can be split into several responses. \r\nPlease use a page size lower or equal to the allowed max page size which is returned under metadata. \r\nIf pagesize is greater than the max page size, it will be limited to max page size.",
      "parameters": [
        {
          "name": "periodId",
          "schema": "string",
          "required": false,
          "description": "Financial Period to query data for. Mandatory if 'LastModifiedDateTime' not provided. Format: YYYYPP"
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\nMandatory if 'PeriodId' is not provided. \r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```"
        },
        {
          "name": "module",
          "schema": "string",
          "required": false,
          "description": "Module to query data for. Allowed values: GL, AP, AR, CM, CA, IN, DR, FA, PM"
        },
        {
          "name": "releasedBatch",
          "schema": "boolean",
          "required": false,
          "description": "If true there will be exported the batches having Released flag on true. \r\nIf false there will be exported the batches having Released flag on false. \r\nIf not set no filtering based on Released flag is applied"
        },
        {
          "name": "expandAttachments",
          "schema": "boolean",
          "required": false,
          "description": "If true there will be included all attachments regarding batch. Default on false"
        },
        {
          "name": "branch",
          "schema": "string",
          "required": false,
          "description": "Branch to query data for."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction",
      "method": "journalTransactionV2Post",
      "httpMethod": "post",
      "tag": "JournalTransactionV2",
      "description": "Create a Journal Transaction",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "autoReversing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "batchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlTotalInCurrency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createVatTransaction",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "journalTransactionLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "skipVatAmountValidation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction/module/{module}/{journalTransactionNumber}/attachment",
      "method": "journalTransactionV2AddHeaderAttachmentBymodulejournalTransactionNumber",
      "httpMethod": "post",
      "tag": "JournalTransactionV2",
      "description": "Creates an attachment and associates it with an journalTransaction. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "module",
          "schema": "string",
          "required": true,
          "description": "Identifies journal transaction module allowed values are: GL, AP, AR, CM, CA, IN, DR, FA, PM, TX, SO, PO."
        },
        {
          "name": "journalTransactionNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the journal transaction number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction/module/{module}/{journalTransactionNumber}/{lineNumber}/attachment",
      "method": "journalTransactionV2AddLineAttachmentBymodulejournalTransactionNumberlineNumber",
      "httpMethod": "post",
      "tag": "JournalTransactionV2",
      "description": "Creates an attachment and associates it with a certain journalTransaction line. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "module",
          "schema": "string",
          "required": true,
          "description": "Identifies journal transaction module allowed values are: GL, AP, AR, CM, CA, IN, DR, FA, PM, TX, SO, PO."
        },
        {
          "name": "journalTransactionNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the journalTransaction"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Identifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction/{journalTransactionNumber}",
      "method": "journalTransactionV2GetSpecificJournalTransactionsByjournalTransactionNumber",
      "httpMethod": "get",
      "tag": "JournalTransactionV2",
      "description": "Get a specific Journal Transaction",
      "parameters": [
        {
          "name": "journalTransactionNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Journal Transaction"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a journal transaction in JournalTransactionController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction/{journalTransactionNumber}",
      "method": "journalTransactionV2PutByjournalTransactionNumber",
      "httpMethod": "put",
      "tag": "JournalTransactionV2",
      "description": "Update a Journal Transaction",
      "parameters": [
        {
          "name": "journalTransactionNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Journal Transaction to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "autoReversing",
          "schema": "object",
          "description": ""
        },
        {
          "name": "batchNumber",
          "schema": "object",
          "description": ""
        },
        {
          "name": "branch",
          "schema": "object",
          "description": ""
        },
        {
          "name": "controlTotalInCurrency",
          "schema": "object",
          "description": ""
        },
        {
          "name": "createVatTransaction",
          "schema": "object",
          "description": ""
        },
        {
          "name": "currencyId",
          "schema": "object",
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "description": ""
        },
        {
          "name": "exchangeRate",
          "schema": "object",
          "description": ""
        },
        {
          "name": "financialPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "description": ""
        },
        {
          "name": "journalTransactionLines",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ledger",
          "schema": "object",
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "description": ""
        },
        {
          "name": "postPeriod",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "skipVatAmountValidation",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionCode",
          "schema": "object",
          "description": ""
        },
        {
          "name": "transactionDate",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/journaltransaction/{journalTransactionNumber}/action/release",
      "method": "journalTransactionV2ReleaseJournalTransactionByjournalTransactionNumber",
      "httpMethod": "post",
      "tag": "JournalTransactionV2",
      "description": "Release journal transaction operation",
      "parameters": [
        {
          "name": "journalTransactionNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the journal transaction to be released"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder",
      "method": "salesOrderV2GetAllOrdersV2",
      "httpMethod": "get",
      "tag": "SalesOrderV2",
      "description": "Get a range of SO Orders - ScreenId=SO301000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size",
      "parameters": [
        {
          "name": "orderType",
          "schema": "string",
          "required": false,
          "description": "Filter by Order type."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Select to filter on status on order."
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Filter on Order no. greater than value."
        },
        {
          "name": "showNotes",
          "schema": "boolean",
          "required": false,
          "description": "Set to true to include notes."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder",
      "method": "salesOrderV2Post",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Create a Sale Order",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cancelBy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "canceled",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cashAccount",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerVATZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "emailed",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "fobPoint",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "insurance",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "invoiceSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "isRotRutDeductible",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "origOrderNbr",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "origOrderType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentMethod",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentRef",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "preferredWarehouse",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printDescriptionOnInvoice",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnExternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "printNoteOnInternalDocuments",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "priority",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "project",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "residentialDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rotRutDetails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "salesPerson",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "saturdayDelivery",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "schedShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipComplete",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipSeparately",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shipVia",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingTerms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingZone",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soBillingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingAddress",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "soShippingContact",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "terms",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "transactionType",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/orderType/{orderType}/{orderNumber}/attachment",
      "method": "salesOrderV2CreateHeaderAttachmentByorderNumberorderType",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderV2CreateLineAttachmentByorderNumberorderTypelineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{orderNbr}",
      "method": "salesOrderV2GetByorderNbr",
      "httpMethod": "get",
      "tag": "SalesOrderV2",
      "description": "Get a specific SO Order",
      "parameters": [
        {
          "name": "orderNbr",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sales Order Number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a SOOrder in SOOrderController. Used by getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{orderNumber}/attachment",
      "method": "salesOrderV2CreateHeaderAttachmentByorderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderV2CreateLineAttachmentByorderNumberlineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{saleOrderNumber}/action/cancelSalesOrder",
      "method": "salesOrderV2CancelSalesOrderBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Cancel Order action",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder that will be cancelled"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{saleOrderNumber}/action/createPurchaseOrders",
      "method": "salesOrderV2CreatePurchaseOrdersActionBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "This will create 0..n PO based on SO according to the following rules for the lines on the SO\r\n- Only issue lines\r\n- Only create PO based on lines with supplier\r\n- Create PO (0..n) for each supplier on the SO lines\r\n- Create PO type purchase/drop shipment based on PO Source on SO line\r\n- If no supplier on inventory item exist the SO line will not have a corresponding PO line (response should point to lines with no supplier in either SO line or inventory item)\r\n- If 'createPurchaseOrderActionDto.preferSupplierFromSOLine' is false then the default supplier for SOLine inventory item will be used if any\r\n- If 'createPurchaseOrderActionDto.preferSupplierFromSOLine' is true then the supplier from the SOLine inventory item will be used; if there is no supplier on SOLine then the default supplier for SOLine inventory item will be used if any",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder from which the purchase order will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "preferSupplierFromSOLine",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "207",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{saleOrderNumber}/action/createShipment",
      "method": "salesOrderV2CreateShipmentActionBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Create shipment operation",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder from which the shipment will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "operation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "returnShipmentDto",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shipmentWarehouse",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorder/{salesOrderNumber}/action/reopenSalesOrder",
      "method": "salesOrderV2ReopenSalesOrderBysalesOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderV2",
      "description": "Reopen and update a specific Sales Order. This method requires a sales order update dto where the order type is initialised.",
      "parameters": [
        {
          "name": "salesOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Sale Order to reopen"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "saleOrderUpdateDto",
          "schema": "undefined",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic",
      "method": "salesOrderBasicV2Post",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Create a Sale Order",
      "parameters": [
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "branchNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "contactId",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customer",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "customerOrder",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerRefNo",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "date",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gln",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "hold",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "lines",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "note",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderNumber",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "overrideNumberSeries",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "recalculateShipment",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "requestOn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "vatRegistrationId",
          "schema": "undefined",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic/orderType/{orderType}/{orderNumber}/attachment",
      "method": "salesOrderBasicV2CreateHeaderAttachmentByorderNumberorderType",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Creates an attachment and associates it with a sales order on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order type"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic/orderType/{orderType}/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderBasicV2CreateLineAttachmentByorderNumberorderTypelineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Creates an attachment and associates it with a certain sales order line on a specific order type. If the file already exists, a new revision is created.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order type"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic/{orderNumber}/attachment",
      "method": "salesOrderBasicV2CreateHeaderAttachmentByorderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Creates an attachment and associates it with a sales order. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic/{orderNumber}/{lineNumber}/attachment",
      "method": "salesOrderBasicV2CreateLineAttachmentByorderNumberlineNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Creates an attachment and associates it with a certain sales order line. If the file already exists, a new revision is created.\r\n- Method is deprecated and will be removed in a future version. Please start using the new method with order type.",
      "parameters": [
        {
          "name": "orderNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the sales order"
        },
        {
          "name": "lineNumber",
          "schema": "integer",
          "required": true,
          "description": "Specifies line number"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesorderbasic/{saleOrderNumber}/action/createShipment",
      "method": "salesOrderBasicV2CreateShipmentActionBysaleOrderNumber",
      "httpMethod": "post",
      "tag": "SalesOrderBasicV2",
      "description": "Crete shipment operation",
      "parameters": [
        {
          "name": "saleOrderNumber",
          "schema": "string",
          "required": true,
          "description": "Reference number of the sale oreder from which the shipment will be created"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "operation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "orderType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "returnShipmentDto",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "shipmentDate",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "shipmentWarehouse",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesperson",
      "method": "salesPersonV2GetSalespersons",
      "httpMethod": "get",
      "tag": "SalesPersonV2",
      "description": "Get all or a range of Salespersons - screen ID: AR205000\r\nPlease use a page size lower or equal to the allowed max page size which is returned under metadata. \r\nIf pagesize is greater than the max page size, it will be limited to max page size.",
      "parameters": [
        {
          "name": "salespersonCd",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isActive",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "commissionPct",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "salesSub",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "greaterThanValue",
          "schema": "string",
          "required": false,
          "description": "Greater than value. The item which is the object for this, varies from API to API."
        },
        {
          "name": "numberToRead",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "skipRecords",
          "schema": "integer",
          "required": false,
          "description": "This field has been deprecated and will be removed in future versions. Use pagenumber and pagesize for pagination purposes. Pagenumber and pagesize does not work with NumberToRead and SkipRecords."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "This value, generated by the system, indicates the last time the record was modified. Use it to retrieve all records that have been modified since that time, up to the present.\r\n\r\nAccepted format:\r\n* ```yyyy-MM-dd```\r\n* ```yyyy-MM-dd HH:mm:ss```\r\n* ```yyyy-MM-dd HH:mm:ss.FFF```\r\n* ```yyyy-MM-ddTHH:mm:ss```\r\n* ```yyyy-MM-ddTHH:mm:ss.FFF```\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "This value represents the condition to be applied when retrieving records.\r\n\r\nAccepted values (without the single quotes):\r\n* '&gt;' for greater than\r\n* '&lt;' for less than\r\n* '&gt;=' for greater than or equal\r\n* '&lt;=' for less than or equal\r\n\r\n_Note:_ __LastModifiedDateTime__ and __LastModifiedDateTimeCondition__ are __mutually inclusive__."
        },
        {
          "name": "createdDateTime",
          "schema": "string",
          "required": false,
          "description": "Creation date and time."
        },
        {
          "name": "createdDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System-retrieved information for state/condition"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/salesperson/{salespersonCd}",
      "method": "salesPersonV2GetSalespersonBysalespersonCd",
      "httpMethod": "get",
      "tag": "SalesPersonV2",
      "description": "Get a specific Salesperson - screen ID: AR205000",
      "parameters": [
        {
          "name": "salespersonCd",
          "schema": "string",
          "required": true,
          "description": "Identifies the Salesperson"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This class represents a salesperson in SalesPersonController. Used for getting data."
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/stocktake",
      "method": "stocktakeV2GetAllStocktakes",
      "httpMethod": "get",
      "tag": "StocktakeV2",
      "description": "Get a range of stocktakes - ScreenId=IN305000\r\nRequest page size must be lower or equal to the allowed max page size which is returned as part of the metadata information. If requested page size is greater than allowed max page size, request will be limited to max page size.",
      "parameters": [
        {
          "name": "warehouse",
          "schema": "string",
          "required": false,
          "description": "Filter by Warehouse."
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": "Filter by Location."
        },
        {
          "name": "inventory",
          "schema": "string",
          "required": false,
          "description": "Filter by Inventory."
        },
        {
          "name": "lotSerialNumber",
          "schema": "string",
          "required": false,
          "description": "Filter by LotSerialNumber."
        },
        {
          "name": "summaryStatus",
          "schema": "string",
          "required": false,
          "description": "Filter by SummaryStatus."
        },
        {
          "name": "startWithLine",
          "schema": "integer",
          "required": false,
          "description": "Filter by LineNumber GreaterEqual StartWithLine."
        },
        {
          "name": "endWithLine",
          "schema": "integer",
          "required": false,
          "description": "Filter by by LineNumber LessEqual EndWithLine."
        },
        {
          "name": "freezeDateTime",
          "schema": "string",
          "required": false,
          "description": "Filter by FreezeDateTime."
        },
        {
          "name": "freezeDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Filter by FreezeDateTimeCondition."
        },
        {
          "name": "lastModifiedDateTime",
          "schema": "string",
          "required": false,
          "description": "System generated value for last modification of transaction/record. Use format: YYYY-MM-DD HH:MM (date and time) to filter from date to present.."
        },
        {
          "name": "lastModifiedDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "System retrieved information for state/condition."
        },
        {
          "name": "expirationDateTime",
          "schema": "string",
          "required": false,
          "description": "Filter by ExpirationDateTime."
        },
        {
          "name": "expirationDateTimeCondition",
          "schema": "string",
          "required": false,
          "description": "Filter by ExpirationDateTimeCondition."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter by StocktakeLineStatus."
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Page number."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Pagination parameter. Number of items to be collected.\r\nPlease use a page size lower or equal to the allowed max page size which is returned as part of the metadata information.\r\nIf requested page size is greater than allowed max page size, request will be limited to max page size."
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/stocktake/{referenceNumber}",
      "method": "stocktakeV2GetByreferenceNumber",
      "httpMethod": "get",
      "tag": "StocktakeV2",
      "description": "Get a specific",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the Stocktake"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        }
      ]
    },
    {
      "url": "/controller/api/v2/stocktake/{referenceNumber}",
      "method": "stocktakeV2PutByreferenceNumber",
      "httpMethod": "put",
      "tag": "StocktakeV2",
      "description": "Update a specific stocktake",
      "parameters": [
        {
          "name": "referenceNumber",
          "schema": "string",
          "required": true,
          "description": "Identifies the stocktake to update"
        },
        {
          "name": "erpApiBackground",
          "schema": "string",
          "required": false,
          "description": "If a URL value is provided, then API endpoint will be queued and executed in background. When the execution of the background operation is finished, the system will POST the response to the specified URL. The endpoint itself responds in this case with a 202-Accepted status and a reference to a state document for the background operation."
        },
        {
          "name": "lines",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/event",
      "method": "getAllEvents",
      "httpMethod": "get",
      "tag": "Event",
      "description": "Get all events",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/notification",
      "method": "findByNotificationDateOrEventType",
      "httpMethod": "get",
      "tag": "Notification",
      "description": "Get notifications filtered by event type and/or date.",
      "parameters": [
        {
          "name": "eventType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "required": false,
          "description": "Use format: YYYY-MM-DD HH:mm:ss"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": false,
          "description": "Use format: YYYY-MM-DD HH:mm:ss"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/notification/failed",
      "method": "getRetryNotificationList",
      "httpMethod": "get",
      "tag": "Notification",
      "description": "Get failed notifications filtered by event type and/or date.",
      "parameters": [
        {
          "name": "eventType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dateFrom",
          "schema": "string",
          "required": false,
          "description": "Use format: YYYY-MM-DD HH:mm:ss"
        },
        {
          "name": "dateTo",
          "schema": "string",
          "required": false,
          "description": "Use format: YYYY-MM-DD HH:mm:ss"
        },
        {
          "name": "pageNumber",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/notification/{notificationId}",
      "method": "getNotificationInfo",
      "httpMethod": "get",
      "tag": "Notification",
      "description": "Get notification details by notification ID.",
      "parameters": [
        {
          "name": "notificationId",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/serviceStatus",
      "method": "allServiceStatus",
      "httpMethod": "get",
      "tag": "ServiceStatus",
      "description": "Get the list of all available services",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/subscription",
      "method": "getAllSubscriptions",
      "httpMethod": "get",
      "tag": "Subscription",
      "description": "Get all subscriptions made by the current user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/subscription",
      "method": "createSubscription",
      "httpMethod": "post",
      "tag": "Subscription",
      "description": "Create a new subscription for the current user",
      "parameters": [
        {
          "name": "event",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hookUri",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/subscription/{id}",
      "method": "deleteSubscription",
      "httpMethod": "delete",
      "tag": "Subscription",
      "description": "Delete a specific subscription",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/resources/v1/subscription/{id}",
      "method": "findSubscriptionById",
      "httpMethod": "get",
      "tag": "Subscription",
      "description": "Get a specific subscription",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/resources/v1/subscription/{id}",
      "method": "updateSubscription",
      "httpMethod": "put",
      "tag": "Subscription",
      "description": "Update a specific subscription",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "event",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hookUri",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "/API",
  "apiTitle": "Visma Net API",
  "endpoints": 372,
  "sdkMethods": 490,
  "schemas": 1508,
  "parameters": 4397,
  "difficultyScore": 2343.25,
  "difficulty": "Very Hard"
}