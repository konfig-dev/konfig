{
  "providerName": "letmc.com",
  "openApiRaw": "https://live-api.letmc.com/swagger/docs/v3-diary",
  "homepage": "letmc.com",
  "serviceName": "diary",
  "apiVersion": "v3-diary",
  "methods": [
    {
      "url": "/v3/diary/{shortName}/allocations",
      "method": "diaryControllerGetAllocations",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "Get a list of all available allocations for a date + 7 days for a specified appointment type",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "preferredDate",
          "schema": "string",
          "required": true,
          "description": "The date to search from"
        },
        {
          "name": "appointmentType",
          "schema": "string",
          "required": true,
          "description": "The unique appointment type identifier"
        },
        {
          "name": "lettings",
          "schema": "boolean",
          "required": false,
          "description": "Sales or Lettings property?"
        },
        {
          "name": "propertyIdentifier",
          "schema": "string",
          "required": false,
          "description": "The unique property identifier (Sales or Lettings) determines branch and property type"
        },
        {
          "name": "branchID",
          "schema": "string",
          "required": false,
          "description": "Branch ID to check appointments (required if no property submitted)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment",
      "method": "diaryControllerDeleteAppointment",
      "httpMethod": "delete",
      "tag": "DiaryController",
      "description": "Delete an existing appointment using its unique identifier",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "appointmentID",
          "schema": "string",
          "required": true,
          "description": "The unique appointment id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment",
      "method": "diaryControllerGetAppointment",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "Get an appointment by ID",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "Company short name"
        },
        {
          "name": "appointmentID",
          "schema": "string",
          "required": true,
          "description": "Appointment ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents a single diary appointment for a staff member."
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment",
      "method": "diaryControllerPostAppointment",
      "httpMethod": "post",
      "tag": "DiaryController",
      "description": "Post an appointment into a valid diary allocation",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "propertyIdentifier",
          "schema": "array",
          "required": true,
          "description": "The unique property identifier (Sales or Lettings)"
        },
        {
          "name": "lettings",
          "schema": "boolean",
          "required": false,
          "description": "Sales or Lettings property?"
        },
        {
          "name": "AllocationDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "AppointmentType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExtraComments",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Guests",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment",
      "method": "diaryControllerPutAppointment",
      "httpMethod": "put",
      "tag": "DiaryController",
      "description": "Update an existing appointment using its unique identifier",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "appointmentID",
          "schema": "string",
          "required": true,
          "description": "The unique appointment id"
        },
        {
          "name": "lettings",
          "schema": "boolean",
          "required": false,
          "description": "Sales or Lettings property?"
        },
        {
          "name": "AllowMarketingCorrespondence",
          "schema": "boolean",
          "required": false,
          "description": "Sales or Lettings property?"
        },
        {
          "name": "AllocationDetails",
          "schema": "object",
          "description": ""
        },
        {
          "name": "AppointmentType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ExtraComments",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Guests",
          "schema": "array",
          "description": ""
        },
        {
          "name": "Subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment/feedback",
      "method": "diaryControllerAddFeedback",
      "httpMethod": "post",
      "tag": "DiaryController",
      "description": "Submit appointment feedback",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "AppointmentID",
          "schema": "string",
          "description": ""
        },
        {
          "name": "Feedback",
          "schema": "string",
          "description": ""
        },
        {
          "name": "PropertyID",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointment/{appointmentID}/cancel",
      "method": "diaryControllerCancelAppointment",
      "httpMethod": "patch",
      "tag": "DiaryController",
      "description": "Cancel an existing appointment using its unique identifier",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "appointmentID",
          "schema": "string",
          "required": true,
          "description": "The unique appointment id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointmentsbetweendates",
      "method": "diaryControllerGetAppointmentsBetweenDates",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "A collection of diary appointments linked to a company filtered between specific dates and by appointment type",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "branchID",
          "schema": "string",
          "required": true,
          "description": "The unique ID of the Branch"
        },
        {
          "name": "startDate",
          "schema": "string",
          "required": true,
          "description": "The search from date"
        },
        {
          "name": "endDate",
          "schema": "string",
          "required": true,
          "description": "The search to date"
        },
        {
          "name": "appointmentTypesToSearch",
          "schema": "array",
          "required": true,
          "description": "The appointment IDs to search for"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "The index of the first item to return"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "The maximum number of items to return (up to 1000 per request)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Holds results from a paged query returning DiaryAppointmentModel values"
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/appointmenttypes",
      "method": "diaryControllerGetAppointmentTypes",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "A collection of all diary appointment types",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "The index of the first item to return"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "The maximum number of items to return (up to 1000 per request)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Holds results from a paged query returning DiaryAppointmentTypeModel values"
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/company/branches",
      "method": "companyControllerGetBranches",
      "httpMethod": "get",
      "tag": "CompanyController",
      "description": "All branches defined for a company",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "The index of the first item to return"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "The maximum number of items to return (up to 1000 per request)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Holds results from a paged query returning BranchModel values"
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/company/branches/{branchID}",
      "method": "/v3/diary/{shortName}/company/branches/{branchId}Get",
      "httpMethod": "get",
      "tag": "CompanyController",
      "description": "Get a specific branch given its unique Object ID (OID)",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "branchID",
          "schema": "string",
          "required": true,
          "description": "The unique ID of the Branch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Defines a single branch of a client."
        }
      ]
    },
    {
      "url": "/v3/diary/{shortName}/recurringappointment",
      "method": "diaryControllerGetRecurringAppointments",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "Retrieves all recurring appointments:-",
      "parameters": [
        {
          "name": "shortName",
          "schema": "string",
          "required": true,
          "description": "The unique client short-name"
        },
        {
          "name": "branchID",
          "schema": "string",
          "required": true,
          "description": "The unique ID of the Branch"
        },
        {
          "name": "appointmentTypesToSearch",
          "schema": "array",
          "required": true,
          "description": "The appointment IDs to search for"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": "The index of the first item to return"
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": "The maximum number of items to return (up to 1000 per request)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Holds results from a paged query returning DiaryAppointmentModel values"
        }
      ]
    },
    {
      "url": "/v3/diary/{shortname}/{branchID}/guest/search",
      "method": "diaryControllerSearchGuest",
      "httpMethod": "get",
      "tag": "DiaryController",
      "description": "Match Guest Parameters with existing applicants",
      "parameters": [
        {
          "name": "shortname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "branchID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "forename",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "emailaddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "surname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contacts Person Model Results:-"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://live-api.letmc.com",
  "apiTitle": "agentOS API V3, Diary Call Group",
  "endpoints": 10,
  "sdkMethods": 13,
  "schemas": 18,
  "parameters": 60,
  "difficultyScore": 37,
  "difficulty": "Easy"
}