{
  "providerName": "runscope.com",
  "openApiRaw": "https://raw.githubusercontent.com/Runscope/runscope-api-examples/master/schemas/runscope-swagger-v2.json",
  "securitySchemes": {
    "runscope_auth": {
      "type": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://www.runscope.com/signin/oauth/authorize",
          "tokenUrl": "https://www.runscope.com/signin/oauth/access_token",
          "scopes": {
            "account:email": "Allows you to read the email addresses of user accounts.",
            "api:read": "Default read access.",
            "bucket:auth_token": "Allows you to read all bucket information, including Authenticated Buckets.",
            "bucket:write": "Allows you to create new buckets on behalf of the user (up to their plan limit).",
            "message:write": "Allows you to create new messages on behalf of the user (up to their plan limit).",
            "team:read": "Allows you to read team details such as lists of team members and external service integrations.",
            "test:read": "Allows you to read the details of API tests.",
            "test:write": "Allows you to create, update and delete details of API tests."
          }
        }
      }
    }
  },
  "homepage": "runscope.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/account",
      "method": "/accountGet",
      "httpMethod": "get",
      "tag": "Account",
      "typeScriptTag": "account",
      "description": "Account Resource",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets",
      "method": "/bucketsGet",
      "httpMethod": "get",
      "tag": "Buckets",
      "typeScriptTag": "buckets",
      "description": "Returns a list of buckets.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets",
      "method": "/bucketsPost",
      "httpMethod": "post",
      "tag": "Buckets",
      "typeScriptTag": "buckets",
      "description": "Create a new bucket",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "team_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}",
      "method": "/buckets/{bucketKey}Delete",
      "httpMethod": "delete",
      "tag": "Buckets",
      "typeScriptTag": "buckets",
      "description": "Delete a single bucket resource.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}",
      "method": "/buckets/{bucketKey}Get",
      "httpMethod": "get",
      "tag": "Buckets",
      "typeScriptTag": "buckets",
      "description": "Returns a single bucket resource.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/environments",
      "method": "/buckets/{bucketKey}/environmentsGet",
      "httpMethod": "get",
      "tag": "Shared Environments",
      "typeScriptTag": "sharedEnvironments",
      "description": "Returns list of shared environments for a specified bucket.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/environments",
      "method": "/buckets/{bucketKey}/environmentsPost",
      "httpMethod": "post",
      "tag": "Shared Environments",
      "typeScriptTag": "sharedEnvironments",
      "description": "Create new shared environment.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "exported_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_script_hash",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_variables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "integrations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_environment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preserve_cookies",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "regions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "remote_agents",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "retry_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "script",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "script_library",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "stop_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "test_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_ssl",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhooks",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/environments/{environmentId}",
      "method": "/buckets/{bucketKey}/environments/{environmentId}Put",
      "httpMethod": "put",
      "tag": "Shared Environments",
      "typeScriptTag": "sharedEnvironments",
      "description": "Update the details of a shared environment.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "environmentId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test environment"
        },
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "exported_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_script_hash",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_variables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "integrations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_environment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preserve_cookies",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "regions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "remote_agents",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "retry_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "script",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "script_library",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "stop_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "test_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_ssl",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhooks",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/errors",
      "method": "/buckets/{bucketKey}/errorsGet",
      "httpMethod": "get",
      "tag": "Messages",
      "typeScriptTag": "messages",
      "description": "Retrieve a list of error messages in a bucket",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Maxiumum number of messages to return. Default 50, max 1000."
        },
        {
          "name": "since",
          "schema": "integer",
          "description": "Only return messages after the given Unix timestamp"
        },
        {
          "name": "before",
          "schema": "integer",
          "description": "Only return messages before the given Unix timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/messages",
      "method": "/buckets/{bucketKey}/messagesDelete",
      "httpMethod": "delete",
      "tag": "Messages",
      "typeScriptTag": "messages",
      "description": "Clear a bucket (remove all messages).",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/messages",
      "method": "/buckets/{bucketKey}/messagesGet",
      "httpMethod": "get",
      "tag": "Messages",
      "typeScriptTag": "messages",
      "description": "Retrieve a list of messages in a bucket",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Maxiumum number of messages to return. Default 50, max 1000."
        },
        {
          "name": "since",
          "schema": "integer",
          "description": "Only return messages after the given Unix timestamp"
        },
        {
          "name": "before",
          "schema": "integer",
          "description": "Only return messages before the given Unix timestamp"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/messages",
      "method": "/buckets/{bucketKey}/messagesPost",
      "httpMethod": "post",
      "tag": "Messages",
      "typeScriptTag": "messages",
      "description": "Create a message",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "request",
          "schema": "object",
          "description": ""
        },
        {
          "name": "response",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/messages/{messageId}",
      "method": "/buckets/{bucketKey}/messages/{messageId}Get",
      "httpMethod": "get",
      "tag": "Messages",
      "typeScriptTag": "messages",
      "description": "Retrieve the details for a single message.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "messageId",
          "schema": "string",
          "required": true,
          "description": "The unique identifier for this message"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests",
      "method": "/buckets/{bucketKey}/testsGet",
      "httpMethod": "get",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Returns a list of tests.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests",
      "method": "/buckets/{bucketKey}/testsPost",
      "httpMethod": "post",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Create a test.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "created_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "created_by",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "default_environment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_run",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "trigger_url",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}",
      "method": "/buckets/{bucketKey}/tests/{testId}Delete",
      "httpMethod": "delete",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Delete a test, including all steps, schedules, test-specific environments and results.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}",
      "method": "/buckets/{bucketKey}/tests/{testId}Get",
      "httpMethod": "get",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Retrieve the details of a given test by ID.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}",
      "method": "/buckets/{bucketKey}/tests/{testId}Put",
      "httpMethod": "put",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Modify a test's name, description, default environment and its steps. To modify other individual properties of a test, make requests to the steps, environments, and schedules subresources of the test.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/environments",
      "method": "/buckets/{bucketKey}/tests/{testId}/environmentsGet",
      "httpMethod": "get",
      "tag": "Test Environments",
      "typeScriptTag": "testEnvironments",
      "description": "Return details of the test's environments (only those that belong to the specified test)",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/environments",
      "method": "/buckets/{bucketKey}/tests/{testId}/environmentsPost",
      "httpMethod": "post",
      "tag": "Test Environments",
      "typeScriptTag": "testEnvironments",
      "description": "Create new test environment.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        },
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "exported_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_script_hash",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_variables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "integrations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_environment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preserve_cookies",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "regions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "remote_agents",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "retry_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "script",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "script_library",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "stop_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "test_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_ssl",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhooks",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/environments/{environmentId}",
      "method": "/buckets/{bucketKey}/tests/{testId}/environments/{environmentId}Put",
      "httpMethod": "put",
      "tag": "Test Environments",
      "typeScriptTag": "testEnvironments",
      "description": "Update the details of a test environment.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        },
        {
          "name": "environmentId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test environment"
        },
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "exported_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_script_hash",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "initial_variables",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "integrations",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parent_environment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "preserve_cookies",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "regions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "remote_agents",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "retry_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "script",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "script_library",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "stop_on_failure",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "test_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "verify_ssl",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "webhooks",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/metrics",
      "method": "/buckets/{bucketKey}/tests/{testId}/metricsGet",
      "httpMethod": "get",
      "tag": "Tests",
      "typeScriptTag": "tests",
      "description": "Return details of the test metrics for the specified timeframe.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/steps",
      "method": "/buckets/{bucketKey}/tests/{testId}/stepsGet",
      "httpMethod": "get",
      "tag": "Test Steps",
      "typeScriptTag": "testSteps",
      "description": "List test steps for a test.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/steps",
      "method": "/buckets/{bucketKey}/tests/{testId}/stepsPost",
      "httpMethod": "post",
      "tag": "Test Steps",
      "typeScriptTag": "testSteps",
      "description": "Add new test step.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        },
        {
          "name": "step_type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/steps/{stepId}",
      "method": "/buckets/{bucketKey}/tests/{testId}/steps/{stepId}Delete",
      "httpMethod": "delete",
      "tag": "Test Steps",
      "typeScriptTag": "testSteps",
      "description": "Delete a step from a test.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        },
        {
          "name": "stepId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test step"
        }
      ],
      "responses": []
    },
    {
      "url": "/buckets/{bucketKey}/tests/{testId}/steps/{stepId}",
      "method": "/buckets/{bucketKey}/tests/{testId}/steps/{stepId}Put",
      "httpMethod": "put",
      "tag": "Test Steps",
      "typeScriptTag": "testSteps",
      "description": "Update the details of a single test step.",
      "parameters": [
        {
          "name": "bucketKey",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a bucket"
        },
        {
          "name": "testId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test"
        },
        {
          "name": "stepId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for a test step"
        },
        {
          "name": "step_type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{teamId}/agents",
      "method": "/teams/{teamId}/agentsGet",
      "httpMethod": "get",
      "tag": "Account",
      "typeScriptTag": "account",
      "description": "Team agents list",
      "parameters": [
        {
          "name": "teamId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for team"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{teamId}/integrations",
      "method": "/teams/{teamId}/integrationsGet",
      "httpMethod": "get",
      "tag": "Account",
      "typeScriptTag": "account",
      "description": "Team integrations list",
      "parameters": [
        {
          "name": "teamId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for team"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/teams/{teamId}/people",
      "method": "/teams/{teamId}/peopleGet",
      "httpMethod": "get",
      "tag": "Account",
      "typeScriptTag": "account",
      "description": "Teams Resource",
      "parameters": [
        {
          "name": "teamId",
          "schema": "string",
          "required": true,
          "description": "Unique identifier for team"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.runscope.com",
  "apiDescription": "Manage Runscope programmatically.",
  "apiTitle": "Runscope API",
  "endpoints": 18,
  "sdkMethods": 29,
  "schemas": 20,
  "parameters": 150,
  "difficultyScore": 76.5,
  "difficulty": "Easy"
}