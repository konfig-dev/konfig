{
  "providerName": "mbus.local",
  "openApiRaw": "https://raw.githubusercontent.com/packom/mbus-api/master/api/openapi.yaml",
  "securitySchemes": {},
  "categories": [
    "iot"
  ],
  "homepage": "mbus.local",
  "apiVersion": "0.3.5",
  "methods": [
    {
      "url": "/mbus/api",
      "method": "mbusApi",
      "httpMethod": "get",
      "description": "Returns this API specification",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "A YAML file"
        },
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/get/{device}/{baudrate}/{address}",
      "method": "get",
      "httpMethod": "post",
      "description": "Gets data from the slave identified by {address}",
      "parameters": [
        {
          "name": "device",
          "schema": "string",
          "required": true,
          "description": "The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning"
        },
        {
          "name": "baudrate",
          "schema": "integer",
          "required": true,
          "description": "Baudrate to communicate with M-Bus devices"
        },
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "The slave device to get data from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "M-Bus device data as an XML document"
        },
        {
          "statusCode": "400",
          "description": "Some error text"
        },
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/getMulti/{device}/{baudrate}/{address}/{maxframes}",
      "method": "getMulti",
      "httpMethod": "post",
      "description": "Gets data from the slave identified by {address}, and supports multiple responses from the slave",
      "parameters": [
        {
          "name": "device",
          "schema": "string",
          "required": true,
          "description": "The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning"
        },
        {
          "name": "baudrate",
          "schema": "integer",
          "required": true,
          "description": "Baudrate to communicate with M-Bus devices"
        },
        {
          "name": "address",
          "schema": "string",
          "required": true,
          "description": "The slave device to get data from"
        },
        {
          "name": "maxframes",
          "schema": "integer",
          "required": true,
          "description": "The slave device to get data from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "M-Bus device data as an XML document"
        },
        {
          "statusCode": "400",
          "description": "Some error text"
        },
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/hat",
      "method": "hat",
      "httpMethod": "get",
      "description": "Gets Raspberry Pi Hat information",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Raspberry Pi Hat Information"
        },
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/hat/off",
      "method": "hatOff",
      "httpMethod": "post",
      "description": "Turns off power to the M-Bus",
      "parameters": [],
      "responses": [
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/hat/on",
      "method": "hatOn",
      "httpMethod": "post",
      "description": "Turns on power to the M-Bus",
      "parameters": [],
      "responses": [
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    },
    {
      "url": "/mbus/scan/{device}/{baudrate}",
      "method": "scan",
      "httpMethod": "post",
      "description": "Scan the specified device for slaves",
      "parameters": [
        {
          "name": "device",
          "schema": "string",
          "required": true,
          "description": "The serial device to scan - /dev/ is pre-pended to {device} by M-Bus HTTPD before scanning"
        },
        {
          "name": "baudrate",
          "schema": "integer",
          "required": true,
          "description": "Baudrate to communicate with M-Bus devices"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Output of libmbus scan command"
        },
        {
          "statusCode": "400",
          "description": "Some error text"
        },
        {
          "statusCode": "404",
          "description": "Some error text"
        }
      ]
    }
  ],
  "apiBaseUrl": "http://mbus.local",
  "apiTitle": "M-Bus HTTPD API",
  "endpoints": 7,
  "sdkMethods": 7,
  "schemas": 9,
  "parameters": 9,
  "difficultyScore": 13.75,
  "difficulty": "Easy"
}