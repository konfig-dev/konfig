{
  "providerName": "clearblade.com",
  "openApiRaw": "https://docs.clearblade.com/v/4/static/api/openapi.yaml",
  "securitySchemes": {},
  "homepage": "clearblade.com",
  "apiVersion": "3.0",
  "methods": [
    {
      "url": "/admin/allapps",
      "method": "devGetAssets",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get platform assets",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/allcollections",
      "method": "devGetCollections",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get collections",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "appid",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the collections belong to."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/allsystems",
      "method": "getSystems",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get systems",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/audit",
      "method": "getAudit",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "AUDIT  - Get Audit Info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/audit/count",
      "method": "getCounts",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "Audit - Get counts",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/audit/{systemKey}",
      "method": "getAuditDev",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "AUDIT  - Get Audit Info",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/audit/{systemKey}/count",
      "method": "getCountsDev",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "AUDIT - Get counts",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/auth",
      "method": "authDev",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Authenticate dev",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/checkauth",
      "method": "verifyAuth",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Verifies access to the system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/collectionmanagement",
      "method": "devDeleteCollection",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete collection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID that identifies the collection to be deleted."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/collectionmanagement",
      "method": "devCreateCollection",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create collection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through authentication."
        },
        {
          "name": "appID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "collectionID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/collectionmanagement",
      "method": "devUpdateCollection",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update collection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": false,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "addColumn",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/count/developers",
      "method": "getAdminDevCount",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get number of admin developers",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/count/systems",
      "method": "getSystemCount",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get number of systems available",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/database/status",
      "method": "getDatabaseStatus",
      "httpMethod": "get",
      "tag": "Databases",
      "description": "DATABASES - Retrieves all internal and external database statuses",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/admin/developers/{systemKey}",
      "method": "adminOwnerChange",
      "httpMethod": "put",
      "tag": "Admin",
      "description": "ADMIN - Add/Remove/Change owner",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "change",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "owner",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/keys/{systemKey}/{deviceName}",
      "method": "deleteDeviceKeys",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete rotating keys for a device",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through developer authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device currently belongs to."
        },
        {
          "name": "deviceName",
          "schema": "string",
          "required": true,
          "description": "Name of the device whose keys are being deleted."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/keys/{systemKey}/{deviceName}",
      "method": "createRotatingKeys",
      "httpMethod": "post",
      "tag": "Device",
      "description": "DEVICE -Creates rotating keys for a device.",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through developer authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device you're updating belongs to."
        },
        {
          "name": "deviceName",
          "schema": "string",
          "required": true,
          "description": "Name of the device you are adding keys to ."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of rotating keys."
        }
      ]
    },
    {
      "url": "/admin/devices/{systemKey}",
      "method": "deleteDevicesAdmin",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete devices using a query",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Tags to filter devices by. See the query model below for an example."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/{systemKey}",
      "method": "getSystemDevices",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get devices with or without a query",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the devices in question belong to."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Tags to filter devices by. See the query model below for an example. All devices are returned if a query is not specified."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/{systemKey}",
      "method": "updateDevicesAdmin",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update devices using a query",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "$set",
          "schema": "object",
          "description": ""
        },
        {
          "name": "query",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An object representing a SQL query result set."
        }
      ]
    },
    {
      "url": "/admin/devices/{systemKey}/{name}",
      "method": "deleteSystemDevice",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete device",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device currently belongs to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the device you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/{systemKey}/{name}",
      "method": "getSystemDevice",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get device",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device in question belongs to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the device you're getting info about."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/{systemKey}/{name}",
      "method": "createSystemDevice",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create device",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the new device will belong to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the device you're creating."
        },
        {
          "name": "active_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_certificate_auth",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "allow_key_auth",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "certificate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "custom",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "keys",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/devices/{systemKey}/{name}",
      "method": "updateSystemDevice",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update device",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device you're updating belongs to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the device you're updating."
        },
        {
          "name": "active_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "allow_certificate_auth",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_key_auth",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "custom",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "keys",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/template/{systemKey}",
      "method": "getEdgeTemplate",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get edge template",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge template belongs to."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/template/{systemKey}/{edgeName}",
      "method": "updateEdgeTemplate",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update edge template",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge template belongs to."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're modifying the template for."
        },
        {
          "name": "def_module",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "def_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}",
      "method": "getEdges",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get edges",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edges in question belong to."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}/control",
      "method": "getAdapterEdges",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get edges for the adapter",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edges in question belong to."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}/{edgeName}",
      "method": "deleteEdge",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete edge",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge currently belongs to."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}/{edgeName}",
      "method": "getEdge",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get edge",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge in question belongs to."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're getting info about."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}/{edgeName}",
      "method": "createEdge",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create edge",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the new edge will belong to."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're creating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "system_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "system_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/edges/{systemKey}/{edgeName}",
      "method": "updateEdge",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update edge",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge you're updating belongs to."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're updating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "system_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "system_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/logout",
      "method": "devLogout",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Log out dev",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/pkey",
      "method": "getLicenseKey",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get platform license key.",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/platform/developer",
      "method": "getDev",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get developer",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "developer",
          "schema": "string",
          "required": true,
          "description": "Email of the developer in question."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/platform/developer",
      "method": "disableDev",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Disable developer",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "admin",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/platform/developers",
      "method": "getDevs",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get developers",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "pagesize",
          "schema": "string",
          "required": false,
          "description": "Response page size."
        },
        {
          "name": "pagenum",
          "schema": "string",
          "required": false,
          "description": "Response page number."
        },
        {
          "name": "total",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter response."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/platform/systems",
      "method": "getSystemUpdates",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "AUDIT - Get list of systems that have been updated",
      "parameters": [
        {
          "name": "clearbladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/platform/systems/{systemKey}",
      "method": "getSystemUpdatesDev",
      "httpMethod": "get",
      "tag": "Audit",
      "description": "AUDIT - Get list of systems that have been updated",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "clearbladeDevtoken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/platform/{systemKey}",
      "method": "getSystemStatus",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "ADMIN - Get system status",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're requesting information about."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/portals/{systemKey}",
      "method": "getPortalInfo",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Gets the information for a portal",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through developer authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the specified system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/putpass",
      "method": "changeDevPassword",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Change dev password",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "new_password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "old_password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/reg",
      "method": "regDev",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Register new dev",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/regensystemsecret",
      "method": "regenSecret",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Regen secret",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/resetpassword",
      "method": "resetPassword",
      "httpMethod": "post",
      "tag": "Admin",
      "description": "ADMIN - Change dev password (Admin)",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "new_password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/settings/email-service",
      "method": "deleteEmailSettings",
      "httpMethod": "delete",
      "tag": "2FA",
      "description": "2FA - Delete email settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/email-service",
      "method": "emailSettings",
      "httpMethod": "get",
      "tag": "2FA",
      "description": "2FA - Get Email Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "2FA email communication settings"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/email-service",
      "method": "createEmailCommunication",
      "httpMethod": "post",
      "tag": "2FA",
      "description": "2FA - Create Email Communication",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "encryption_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "host",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_subject",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/email-service",
      "method": "updateEmailSettings",
      "httpMethod": "put",
      "tag": "2FA",
      "description": "2FA - Update Email Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "encryption_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "host",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_subject",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_subject",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/email-service/test",
      "method": "testEmail",
      "httpMethod": "post",
      "tag": "2FA",
      "description": "2FA - Test Email Service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "recipient",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/security",
      "method": "viewSecurity",
      "httpMethod": "get",
      "tag": "2FA",
      "description": "2FA - View Security Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Security Settings for 2FA"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/security",
      "method": "updateSecurity",
      "httpMethod": "put",
      "tag": "2FA",
      "description": "2FA - Update Security Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "developer_token_ttl",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "two_factor_auth",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Security Settings for 2FA"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/sms-service",
      "method": "deleteSmsSettings",
      "httpMethod": "delete",
      "tag": "2FA",
      "description": "2FA - Delete SMS settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/sms-service",
      "method": "smsSettings",
      "httpMethod": "get",
      "tag": "2FA",
      "description": "2FA - Get SMS Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "2FA SMS communication settings"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/sms-service",
      "method": "createSmsCommunication",
      "httpMethod": "post",
      "tag": "2FA",
      "description": "2FA - Create SMS Communication",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_message",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/sms-service",
      "method": "updateSmsSettings",
      "httpMethod": "put",
      "tag": "2FA",
      "description": "2FA - Update SMS Settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "from",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "validation_message",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/settings/sms-service/test",
      "method": "testSms",
      "httpMethod": "post",
      "tag": "2FA",
      "description": "2FA - Test SMS Service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "recipient",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/systems/{devEmail}",
      "method": "getSystemsForDev",
      "httpMethod": "get",
      "tag": "Admin",
      "description": "Get Systems for a developer",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "devEmail",
          "schema": "string",
          "required": true,
          "description": "Email of the Developer. Should be in the format `name@orgname.com`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/triggers/definitions",
      "method": "getTriggers",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get trigger definitions",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/handlers/{systemKey}",
      "method": "getTriggerHandlers",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get trigger handlers",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handlers are in."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/handlers/{systemKey}/{name}",
      "method": "deleteTriggerHandler",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete trigger handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/handlers/{systemKey}/{name}",
      "method": "getTriggerHandler",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get trigger handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you want."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/handlers/{systemKey}/{name}",
      "method": "createTrigger",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create trigger handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're creating."
        },
        {
          "name": "def_module",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "def_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "key_value_pairs",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/handlers/{systemKey}/{name}",
      "method": "updateTriggerHandler",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update trigger handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're updating."
        },
        {
          "name": "def_module",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "def_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "key_value_pairs",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/timers/{systemKey}",
      "method": "getTimerHandlers",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get timer handlers",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/timers/{systemKey}/{name}",
      "method": "deleteTimerHandler",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete trigger handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/timers/{systemKey}/{name}",
      "method": "getTimerHandler",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get timer handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you want."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/timers/{systemKey}/{name}",
      "method": "createTimerHandler",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create time handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you're creating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "frequency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repeats",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/triggers/timers/{systemKey}/{name}",
      "method": "updateTimerHandler",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update timer handler",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you're updating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "frequency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repeats",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}",
      "method": "deleteUser",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete user",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "user",
          "schema": "string",
          "description": "UserId of the user to delete"
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}",
      "method": "getUserList",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get list of users and information",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "Tags to filter users. Check 'users' model at the bottom of this page."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}",
      "method": "addUser",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Add user",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}",
      "method": "userChangeUserInfo",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Change user information and permissions",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "changes",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/columns",
      "method": "getUserColumnData",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get users column info.",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/columns",
      "method": "addColumn",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Add new column",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "column_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/roles",
      "method": "deleteRoles",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete roles",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Role identification key."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/roles",
      "method": "getRoles",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get list of roles",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "Refer to the example query above."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/roles",
      "method": "addRole",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Add new role",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "collections",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "topics",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/roles",
      "method": "settingsChanges",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Changes roles settings",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "changes",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/user/{systemKey}/roles/count",
      "method": "getRolesCount",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get number of roles",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": "Identifies page size and page number for roles list."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/userinfo",
      "method": "getDevInfo",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get dev info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/userinfo",
      "method": "updateDev2Fa",
      "httpMethod": "put",
      "tag": "2FA",
      "description": "2FA - Update developer 2FA information.",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "two_factor_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "two_factor_method",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/service_caches/{systemKey}",
      "method": "getSharedCache",
      "httpMethod": "get",
      "tag": "Shared Cache",
      "description": "SHARED CACHE - Gets shared caches for a system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "list of caches"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/service_caches/{systemKey}/{cacheName}",
      "method": "deleteSharedCache",
      "httpMethod": "delete",
      "tag": "Shared Cache",
      "description": "SHARED CACHE - Delete a shared cache",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "cacheName",
          "schema": "string",
          "required": true,
          "description": "Name of the shared cache to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/service_caches/{systemKey}/{cacheName}",
      "method": "addSharedCache",
      "httpMethod": "post",
      "tag": "Shared Cache",
      "description": "SHARED CACHE - Add a shared cache",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the shared cache."
        },
        {
          "name": "cacheName",
          "schema": "string",
          "required": true,
          "description": "Name of the shared cache to add"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ttl",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/service_caches/{systemKey}/{cacheName}",
      "method": "updateSharedCache",
      "httpMethod": "put",
      "tag": "Shared Cache",
      "description": "SHARED CACHE - Update a shared cache",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the shared cache."
        },
        {
          "name": "cacheName",
          "schema": "string",
          "required": true,
          "description": "Name of the shared cache to update"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ttl",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/device",
      "method": "deleteDeviceSession",
      "httpMethod": "delete",
      "tag": "Session",
      "description": "SESSION  - Delete device session",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/device",
      "method": "getDeviceSession",
      "httpMethod": "get",
      "tag": "Session",
      "description": "SESSION  - Get device session info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/device/count",
      "method": "getDeviceSessionCount",
      "httpMethod": "get",
      "tag": "Session",
      "description": "SESSION  - Get device session count",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/user",
      "method": "deleteUserSession",
      "httpMethod": "delete",
      "tag": "Session",
      "description": "SESSION  - Delete user session",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/user",
      "method": "getUserSession",
      "httpMethod": "get",
      "tag": "Session",
      "description": "SESSION  - Get user session info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/session/{systemKey}/user/count",
      "method": "getUserSessionCount",
      "httpMethod": "get",
      "tag": "Session",
      "description": "SESSION  - Get user session count",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/admin/v/4/systemmanagement",
      "method": "deleteSystem",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you want to delete."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/v/4/systemmanagement",
      "method": "getSystemInfo",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get system info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you want the info about."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System info"
        }
      ]
    },
    {
      "url": "/admin/v/4/systemmanagement",
      "method": "createSystem",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through developer authentication."
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System info"
        }
      ]
    },
    {
      "url": "/admin/v/4/systemmanagement",
      "method": "updateSystem",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update system info",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "Dev",
          "schema": "string",
          "description": ""
        },
        {
          "name": "appId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "appSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "auth_service",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "reg_service",
          "schema": "string",
          "description": ""
        },
        {
          "name": "registration",
          "schema": "string",
          "description": ""
        },
        {
          "name": "token_ttl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "token_ttl_anon",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "token_ttl_device",
          "schema": "string",
          "description": ""
        },
        {
          "name": "token_ttl_user",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/v/4/webhook/{systemKey}",
      "method": "getWebhooks",
      "httpMethod": "get",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Returns webhooks in the system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "list of webhooks and properties"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/webhook/{systemKey}/{name}",
      "method": "deleteWebhook",
      "httpMethod": "delete",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Delete a webhook",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name that identifies the webhook"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/webhook/{systemKey}/{name}",
      "method": "createWebhook",
      "httpMethod": "post",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Creates a webhook",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name that identifies the webhook"
        },
        {
          "name": "auth_method",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/v/4/webhook/{systemKey}/{name}",
      "method": "updateWebhook",
      "httpMethod": "put",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Update a webhook",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name that identifies the webhook"
        },
        {
          "name": "auth_method",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/validate",
      "method": "sendValidation",
      "httpMethod": "post",
      "tag": "2FA",
      "description": "2FA - Send validation link",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/{systemKey}/sync/alledges/status",
      "method": "allEdgeSyncStatus",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "EDGE - Gets sync status for all edges",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the edges."
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/{systemKey}/sync/deployment/status/{deploymentName}",
      "method": "getSyncStatus",
      "httpMethod": "get",
      "tag": "Deployments",
      "description": "DEPLOYMENTS - Gets sync status for a deployment",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/admin/{systemKey}/sync/edge/status/{edgeName}",
      "method": "edgeSyncStatus",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "EDGE - Gets sync status for an edge",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the edges."
        },
        {
          "name": "edgeName",
          "schema": "string",
          "required": true,
          "description": "Name of the edge"
        }
      ],
      "responses": []
    },
    {
      "url": "/admin/{systemKey}/sync/retry",
      "method": "retrySync",
      "httpMethod": "post",
      "tag": "Deployments",
      "description": "DEPLOYMENTS - Retries sync for an asset",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "asset_class",
          "schema": "string",
          "description": ""
        },
        {
          "name": "asset_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "edge",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_collection",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sync_event",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/about",
      "method": "apiInfo",
      "httpMethod": "get",
      "description": "DEVELOPER - Gets the information for the platform",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/1/code/{systemKey}/{serviceName}",
      "method": "getService",
      "httpMethod": "get",
      "tag": "Code",
      "description": "CODE - Retrieve information about service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code Service's name"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/1/code/{systemKey}/{serviceName}",
      "method": "executeService",
      "httpMethod": "post",
      "tag": "Code",
      "description": "CODE - Call/Execute code service",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the code service."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code Service's name"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/1/collection/{systemKey}/{collectionName}",
      "method": "deleteCollectionData",
      "httpMethod": "delete",
      "tag": "Data",
      "description": "DATA(name) - Delete items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query to limit scope of deletion."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/collection/{systemKey}/{collectionName}",
      "method": "getCollectionData",
      "httpMethod": "get",
      "tag": "Data",
      "description": "DATA(name) - Get items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model below for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collection success response body"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/collection/{systemKey}/{collectionName}",
      "method": "createCollectionData",
      "httpMethod": "post",
      "tag": "Data",
      "description": "DATA(name) - Create items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/collection/{systemKey}/{collectionName}",
      "method": "updateCollectionData",
      "httpMethod": "put",
      "tag": "Data",
      "description": "DATA(name) - Update items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "$set",
          "schema": "object",
          "description": ""
        },
        {
          "name": "query",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/data/{collectionID}",
      "method": "deleteCollectionDataAlt",
      "httpMethod": "delete",
      "tag": "Data",
      "description": "DATA(id) - Delete items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of the collection."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Query to limit scope of deletion."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/data/{collectionID}",
      "method": "getCollectionDataAlt",
      "httpMethod": "get",
      "tag": "Data",
      "description": "DATA(id) - Get items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of the collection."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model below for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Collection success response body"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/data/{collectionID}",
      "method": "createCollectionDataAlt",
      "httpMethod": "post",
      "tag": "Data",
      "description": "DATA(id) - Create items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of the collection."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/data/{collectionID}",
      "method": "updateCollectionDataAlt",
      "httpMethod": "put",
      "tag": "Data",
      "description": "DATA(id) - Update items",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of the collection."
        },
        {
          "name": "$set",
          "schema": "object",
          "description": ""
        },
        {
          "name": "query",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/data/{collectionID}/columns",
      "method": "getColumns",
      "httpMethod": "get",
      "tag": "Data",
      "description": "DATA(id) - Get columns",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "collectionId",
          "schema": "string",
          "required": true,
          "description": "ID of the collection."
        },
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "clearBladeSystemSecret",
          "schema": "string",
          "required": true,
          "description": "header parameter for ensuring authenticity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/message/{systemKey}",
      "method": "deleteMessageHistory",
      "httpMethod": "delete",
      "tag": "Messaging",
      "description": "MESSAGING - Delete history",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": "Messaging topic to delete the history for."
        },
        {
          "name": "count",
          "schema": "string",
          "required": true,
          "description": "Number of messages to delete. 0 deletes all messages."
        },
        {
          "name": "last",
          "schema": "string",
          "required": false,
          "description": "Point in time to start deleting. (epoch timestamp)"
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "Start time for deleting within a timeframe. (epoch timestamp)"
        },
        {
          "name": "stop",
          "schema": "string",
          "required": false,
          "description": "End time for deleting within a timeframe. (epoch timestamp)"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/1/message/{systemKey}",
      "method": "getMessageHistory",
      "httpMethod": "get",
      "tag": "Messaging",
      "description": "MESSAGING - Get history",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": "Messaging topic to retrieve the history for."
        },
        {
          "name": "count",
          "schema": "string",
          "required": true,
          "description": "Number of messages to retrieve. 0 retrieves all messages."
        },
        {
          "name": "last",
          "schema": "string",
          "required": false,
          "description": "Point in time to start search. (epoch timestamp)"
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "Start time for searching within a timeframe. (epoch timestamp)"
        },
        {
          "name": "stop",
          "schema": "string",
          "required": false,
          "description": "End time for searching within a timeframe. (epoch timestamp)"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/1/message/{systemKey}/publish",
      "method": "publishMessage",
      "httpMethod": "post",
      "tag": "Messaging",
      "description": "MESSAGING - Publish message",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "body",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "qos",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/1/user",
      "method": "getUsers",
      "httpMethod": "get",
      "tag": "User",
      "description": "USERS - Get all users",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the user list. See the query model below for an example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "403",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/anon",
      "method": "authAnon",
      "httpMethod": "post",
      "tag": "User",
      "description": "USERS - Authenticate anonymous user",
      "parameters": [
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're logging the user into."
        },
        {
          "name": "clearBladeSystemSecret",
          "schema": "string",
          "required": true,
          "description": "System Secret that ensures authenticity."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/auth",
      "method": "authUser",
      "httpMethod": "post",
      "tag": "User",
      "description": "USERS - Authenticate user",
      "parameters": [
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're logging the user into."
        },
        {
          "name": "clearBladeSystemSecret",
          "schema": "string",
          "required": true,
          "description": "System Secret that ensures authenticity."
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/checkauth",
      "method": "userCheckAuth",
      "httpMethod": "post",
      "tag": "User",
      "description": "USERS - Check user auth",
      "parameters": [
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the user might be logged into."
        },
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through previous authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/1/user/info",
      "method": "deleteUserAsUser",
      "httpMethod": "delete",
      "tag": "User",
      "description": "Allows an user with adequate permissions to delete another user",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clearBladeSystemSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "user_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/info",
      "method": "getUserInfo",
      "httpMethod": "get",
      "tag": "User",
      "description": "USERS - Get user info",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/info",
      "method": "updateUserInfo",
      "httpMethod": "put",
      "tag": "User",
      "description": "USERS - Update user info",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "column_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/logout",
      "method": "userLogout",
      "httpMethod": "post",
      "tag": "User",
      "description": "USERS - Log out user",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/pass",
      "method": "updateUserPass",
      "httpMethod": "put",
      "tag": "User",
      "description": "USERS - Change user password",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "new_password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "old_password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/1/user/reg",
      "method": "regUser",
      "httpMethod": "post",
      "tag": "User",
      "description": "USERS - Register new user",
      "parameters": [
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "clearBladeSystemSecret",
          "schema": "string",
          "required": true,
          "description": "System Secret that ensures authenticity."
        },
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{SystemKey}",
      "method": "deleteDevices",
      "httpMethod": "delete",
      "tag": "Device",
      "description": "DEVICES - Delete devices using a query",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": true,
          "description": "Tags to filter devices by. See the query model below for an example."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{SystemKey}",
      "method": "getDevices",
      "httpMethod": "get",
      "tag": "Device",
      "description": "DEVICES - Get all devices",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Tags to filter devices by. See the query model below for an example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{SystemKey}",
      "method": "updateDevices",
      "httpMethod": "put",
      "tag": "Device",
      "description": "DEVICES - Update devices using a query",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "$set",
          "schema": "object",
          "description": ""
        },
        {
          "name": "query",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An object representing a SQL query result set."
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{SystemKey}/auth",
      "method": "authDevice",
      "httpMethod": "post",
      "tag": "Device",
      "description": "DEVICES - Authenticate device",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "activeKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "deviceName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        },
        {
          "statusCode": "500",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{systemKey}/{name}",
      "method": "addDevice",
      "httpMethod": "post",
      "tag": "Device",
      "description": "DEVICES - Adds a device",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of device."
        },
        {
          "name": "active_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "allow_certificate_auth",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "allow_key_auth",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "certificate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/devices/{systemKey}/{name}",
      "method": "updateDeviceInfo",
      "httpMethod": "put",
      "tag": "Device",
      "description": "DEVICES - Update info",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of device."
        },
        {
          "name": "custom_attribute",
          "schema": "string",
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/2/edges/{systemKey}",
      "method": "getAllEdges",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "EDGE - Fetch all edges",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the edge."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you want the info about."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/allcollections/{systemKey}",
      "method": "getCollections",
      "httpMethod": "get",
      "tag": "Data",
      "description": "DATA - Get collections",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/3/code/codemeta/{systemKey}",
      "method": "returnServiceSettings",
      "httpMethod": "get",
      "tag": "Code",
      "description": "CODE - Returns code services and settings",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/timer/{name}",
      "method": "deleteTimerByName",
      "httpMethod": "delete",
      "tag": "Handlers",
      "description": "HANDLERS - Delete trigger handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer you're deleting."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/timer/{name}",
      "method": "getTimerByName",
      "httpMethod": "get",
      "tag": "Handlers",
      "description": "HANDLERS - Get timer handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you want."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/timer/{name}",
      "method": "createNewTimer",
      "httpMethod": "post",
      "tag": "Handlers",
      "description": "HANDLERS - Create timer handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you're creating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "frequency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repeats",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/timer/{name}",
      "method": "updateTimerByName",
      "httpMethod": "put",
      "tag": "Handlers",
      "description": "HANDLERS - Update timer handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the timer handler you're updating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "frequency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "repeats",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/timers",
      "method": "getAllTimers",
      "httpMethod": "get",
      "tag": "Handlers",
      "description": "HANDLERS - Get timer handlers",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/trigger/{name}",
      "method": "deleteTriggerByName",
      "httpMethod": "delete",
      "tag": "Handlers",
      "description": "HANDLERS - Delete trigger handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/code/{systemKey}/trigger/{name}",
      "method": "getTriggerByName",
      "httpMethod": "get",
      "tag": "Handlers",
      "description": "HANDLERS - Get trigger handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you want."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/trigger/{name}",
      "method": "createNewTrigger",
      "httpMethod": "post",
      "tag": "Handlers",
      "description": "HANDLERS - Create trigger handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're creating."
        },
        {
          "name": "def_module",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "def_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "key_value_pairs",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/trigger/{name}",
      "method": "updateTriggerByName",
      "httpMethod": "put",
      "tag": "Handlers",
      "description": "HANDLERS - Update trigger handler",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handler is in."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the trigger handler you're updating."
        },
        {
          "name": "def_module",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "def_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "key_value_pairs",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/code/{systemKey}/triggers",
      "method": "getAllTrigger",
      "httpMethod": "get",
      "tag": "Handlers",
      "description": "HANDLERS - Get trigger handlers",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the handlers are in."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/collectionmanagement",
      "method": "deleteCollection",
      "httpMethod": "delete",
      "tag": "Data",
      "description": "DATA - Delete collection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "ID that identifies the collection to be deleted."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/collectionmanagement",
      "method": "createCollection",
      "httpMethod": "post",
      "tag": "Data",
      "description": "DATA - Create collection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "appID",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "collectionID",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The information necessary to create a new collection"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/collectionmanagement",
      "method": "updateCollection",
      "httpMethod": "put",
      "tag": "Data",
      "description": "DATA - Update collection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "clearBladeSystemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "addColumn",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/devices/{systemKey}/columns",
      "method": "getDeviceTableSchema",
      "httpMethod": "get",
      "tag": "Device",
      "description": "EDGE - Get device columns",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the devices."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/devices/{systemKey}/count",
      "method": "getDeviceCount",
      "httpMethod": "get",
      "tag": "Device",
      "description": "DEVICES - Get count",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the devices."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/3/edges/{systemKey}/columns",
      "method": "getEdgeTableSchema",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "EDGE - Get columns",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the edges."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/edges/{systemKey}/count",
      "method": "getEdgeCount",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "EDGE - Get count",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the edges."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/edges/{systemKey}/{name}",
      "method": "deleteEdgeByName",
      "httpMethod": "delete",
      "tag": "Edge",
      "description": "Edge - Delete edge",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge currently belongs to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're deleting."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/edges/{systemKey}/{name}",
      "method": "getEdgeDataByName",
      "httpMethod": "get",
      "tag": "Edge",
      "description": "Edge(name) - Get edge info",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the collection."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the edge."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/edges/{systemKey}/{name}",
      "method": "createNewEdge",
      "httpMethod": "post",
      "tag": "Edge",
      "description": "EDGE - Create edge",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the new edge will belong to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're creating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "system_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "system_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/edges/{systemKey}/{name}",
      "method": "updateEdgeByName",
      "httpMethod": "put",
      "tag": "Edge",
      "description": "EDGE - Update edge",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the edge you're updating belongs to."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the edge you're updating."
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "local_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "location",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac_address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_addr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "public_port",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "system_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "system_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/{systemKey}/deployments",
      "method": "getAllDeployments",
      "httpMethod": "get",
      "tag": "Deployments",
      "description": "DEPLOYMENTS - Gets all deployment names and descriptions for a system",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through user authentication."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Tags to filter deployments by. See the query model above for an example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/3/{systemKey}/deployments",
      "method": "createDeployment",
      "httpMethod": "post",
      "tag": "Deployments",
      "description": "DEPLOYMENTS - Creates a deployment",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "assets",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "edges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/{systemKey}/deployments/{deploymentName}",
      "method": "deleteDeployment",
      "httpMethod": "delete",
      "tag": "Deployments",
      "description": "DEPLOYMENT - Delete a deployment",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to delete"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/{systemKey}/deployments/{deploymentName}",
      "method": "getADeployment",
      "httpMethod": "get",
      "tag": "Deployments",
      "description": "DEPLOYMENTS - Gets a deloyment for a system",
      "parameters": [
        {
          "name": "clearbladeUsertoken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/3/{systemKey}/deployments/{deploymentName}",
      "method": "updateDeployment",
      "httpMethod": "put",
      "tag": "Deployments",
      "description": "DEPLOYMENT - Update deployment",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the deployment."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to update"
        },
        {
          "name": "assets",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "edges",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}",
      "method": "getBucketsData",
      "httpMethod": "get",
      "tag": "Files",
      "description": "FILES  - Returns a list of metadata for buckets in system",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}",
      "method": "getSingleBucketData",
      "httpMethod": "get",
      "tag": "Files",
      "description": "FILES  - Returns metadata for specified bucket",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/file/copy",
      "method": "copyBucketFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "FILES  - Copies a file to a new location within buckets",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        },
        {
          "name": "from_box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from_path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_path",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/file/create",
      "method": "createBucketFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "FILES  - Creates a new file in a bucket",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        },
        {
          "name": "box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "contents",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/file/delete",
      "method": "deleteBucketFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "FILES  - Deletes a file from the bucket.",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        },
        {
          "name": "box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "path",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/file/meta",
      "method": "getBoxFilesMeta",
      "httpMethod": "get",
      "tag": "Files",
      "description": "FILES  - Get a file's metadata in a box",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "box",
          "schema": "string",
          "required": false,
          "description": "one of inbox, outbox or sandbox, defaults to 'inbox' if empty."
        },
        {
          "name": "path",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/file/move",
      "method": "moveBucketFile",
      "httpMethod": "post",
      "tag": "Files",
      "description": "FILES  - Moves a file to a new location within buckets.",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        },
        {
          "name": "from_box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "from_path",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_box",
          "schema": "string",
          "description": ""
        },
        {
          "name": "to_path",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/bucket_sets/{systemKey}/{deploymentName}/files",
      "method": "getBoxFiles",
      "httpMethod": "get",
      "tag": "Files",
      "description": "FILES  - Get all files metadata in a box",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "box",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model at in the description for example."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "deploymentName",
          "schema": "string",
          "required": true,
          "description": "Name of the deployment to retrieve"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/index",
      "method": "deleteNonUniqueIndex",
      "httpMethod": "delete",
      "tag": "Data",
      "description": "DATA - Delete collection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "<COLUMN TO INDEX>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/index",
      "method": "createNonUniqueIndex",
      "httpMethod": "post",
      "tag": "Data",
      "description": "DATA - Create collection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "<COLUMN TO INDEX>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/listindexes",
      "method": "getIndexes",
      "httpMethod": "get",
      "tag": "Data",
      "description": "DATA - Get list of indexes",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/uniqueindex",
      "method": "deleteUniqueIndex",
      "httpMethod": "delete",
      "tag": "Data",
      "description": "DATA - Delete unique index",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "<COLUMN TO INDEX>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/uniqueindex",
      "method": "createUniqueIndex",
      "httpMethod": "post",
      "tag": "Data",
      "description": "DATA - Create Unique Index",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "columnName",
          "schema": "string",
          "required": true,
          "description": "<COLUMN TO INDEX>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/data/{systemKey}/{collectionName}/upsert",
      "method": "updateUpsert",
      "httpMethod": "put",
      "tag": "Data",
      "description": "DATA - Update upsert values",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through dev authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system you're adding the user to."
        },
        {
          "name": "collectionName",
          "schema": "string",
          "required": true,
          "description": "Name of the collection."
        },
        {
          "name": "conflictColumn",
          "schema": "string",
          "required": true,
          "description": "A column in your table that has a unique constraint. `columnName` can be used."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/devices/{systemKey}/connectioncount",
      "method": "connectedDeviceCount",
      "httpMethod": "get",
      "tag": "Device",
      "description": "DEVICES - Get total of connected devices",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the devices."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/devices/{systemKey}/connections",
      "method": "getConnectedDeviceList",
      "httpMethod": "get",
      "tag": "Device",
      "description": "DEVICES - Get connected device list",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the devices."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/devices/{systemKey}/connections/{name}",
      "method": "getConnectedDeviceInfo",
      "httpMethod": "get",
      "tag": "Device",
      "description": "DEVICES - Get information for a connected device",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the devices."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of the connected device."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}",
      "method": "getAllExternalDb",
      "httpMethod": "get",
      "tag": "Databases",
      "description": "DATABASES - Retrieves all external database connections",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}",
      "method": "createExternalDb",
      "httpMethod": "post",
      "tag": "Databases",
      "description": "DATABASES - Create a external database connection",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "credentials",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "dbtype",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}/{name}",
      "method": "deleteExternalDb",
      "httpMethod": "delete",
      "tag": "Databases",
      "description": "DATABASES - Delete a external database connection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of external database connection."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Success responses"
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}/{name}",
      "method": "getExternalDb",
      "httpMethod": "get",
      "tag": "Databases",
      "description": "DATABASES - Retrieve a specific external database connection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of external database connection."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}/{name}",
      "method": "updateDatabaseCredentials",
      "httpMethod": "put",
      "tag": "Databases",
      "description": "DATABASES - Update external database credentials",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of external database connection."
        },
        {
          "name": "address",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dbname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/external-db/{systemKey}/{name}/data",
      "method": "performDbOperation",
      "httpMethod": "post",
      "tag": "Databases",
      "description": "DATABASES - Create a external database connection",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "User Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system."
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Name of external database connection."
        },
        {
          "name": "operation",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/message/{systemKey}/topics",
      "method": "getTopics",
      "httpMethod": "get",
      "tag": "Messaging",
      "description": "MESSAGING - Gets list of topics",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Query object used to filter the items. See query model in the description for example."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/message/{systemKey}/topics/count",
      "method": "getTopicCount",
      "httpMethod": "get",
      "tag": "Messaging",
      "description": "MESSAGING - Gets number of topics",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the topics belong to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error responses"
        }
      ]
    },
    {
      "url": "/api/v/4/user/manage",
      "method": "changeUserInfo",
      "httpMethod": "put",
      "tag": "User",
      "description": "USER - Users change roles and passwords for other users",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "changes",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/webhook/execute/{systemKey}/{webhookName}",
      "method": "payloadWebhookQuery",
      "httpMethod": "get",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Executes query string payload webhook",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "webhookName",
          "schema": "string",
          "required": true,
          "description": "Name that identifies the webhook"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "User authentication and data pushed through webhook"
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/webhook/execute/{systemKey}/{webhookName}",
      "method": "executeWebhook",
      "httpMethod": "post",
      "tag": "Webhooks",
      "description": "WEBHOOKS - Executing a webhook",
      "parameters": [
        {
          "name": "clearBladeUserToken",
          "schema": "string",
          "required": true,
          "description": "Token obtained through user authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the messages belong to."
        },
        {
          "name": "webhookName",
          "schema": "string",
          "required": true,
          "description": "Name that identifies the webhook"
        },
        {
          "name": "data",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters",
      "method": "getAdapters",
      "httpMethod": "get",
      "tag": "Adapter",
      "description": "ADAPTERS - Get all adapters",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters",
      "method": "addAdapter",
      "httpMethod": "post",
      "tag": "Adapter",
      "description": "ADAPTERS - Add an adapter",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication.."
        },
        {
          "name": "architecture",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "deploy_command",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "logs_command",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start_command",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status_command",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stop_command",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "undeploy_command",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}",
      "method": "deleteAdapter",
      "httpMethod": "delete",
      "tag": "Adapter",
      "description": "ADAPTERS - Delete adapter",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through authentication."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}",
      "method": "mapAdapterCommand",
      "httpMethod": "put",
      "tag": "Adapter",
      "description": "ADAPTERS - Map Adapter command to execute a file",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "architecture",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deploy_command",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logs_command",
          "schema": "string",
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "description": ""
        },
        {
          "name": "run_deploy_on_deploy",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "run_start_on_deploy",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "run_stop_on_deploy",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "start_command",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status_command",
          "schema": "string",
          "description": ""
        },
        {
          "name": "stop_command",
          "schema": "string",
          "description": ""
        },
        {
          "name": "undeploy_command",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/control",
      "method": "addEdgeCommand",
      "httpMethod": "put",
      "tag": "Adapter",
      "description": "ADAPTERS - Send command to edge",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "command",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "edges",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/files",
      "method": "adapterConfig",
      "httpMethod": "get",
      "tag": "Adapter",
      "description": "Gets list of configuration information for all adapter files",
      "parameters": [
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/files",
      "method": "updateFileInfo",
      "httpMethod": "post",
      "tag": "Adapter",
      "description": "ADAPTERS - Add or replace file content & configuration",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "adapter_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "path_name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/files/{fileName}",
      "method": "deleteFile",
      "httpMethod": "delete",
      "tag": "Adapter",
      "description": "ADAPTERS - Delete adapter files",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the device is a part of."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through authentication."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": true,
          "description": "File Name identifies the file in the adapter."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/files/{fileName}",
      "method": "fileDownload",
      "httpMethod": "get",
      "tag": "Adapter",
      "description": "ADAPTERS - Download file from adapter",
      "parameters": [
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": true,
          "description": "File Name identifies the file in the adapter."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{SystemKey}/adapters/{AdapterName}/files/{fileName}",
      "method": "updateExistingFileContent",
      "httpMethod": "put",
      "tag": "Adapter",
      "description": "ADAPTERS - Update Existing File's content",
      "parameters": [
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system the adapter is a part of."
        },
        {
          "name": "adapterName",
          "schema": "string",
          "required": true,
          "description": "Identifies an adapter in the system."
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": true,
          "description": "File Name identifies the file in the adapter."
        },
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/v/4/{systemKey}/code/failed",
      "method": "getFailedServiceQuery",
      "httpMethod": "get",
      "tag": "Code",
      "description": "CODE - Get all failed services using Query",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Dev Token obtained through authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the device is a part of."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "Uses query to limit scope of list of failed services. Check FailQuery Model at the bottom of this page."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/failed",
      "method": "getFailedServices",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get all failed services",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/failed/{systemKey}",
      "method": "deleteFailedService",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete failed service run",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system with the failed services."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/failed/{systemKey}",
      "method": "getSystemFailedServices",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get system's failed services",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system with the failed services."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/failed/{systemKey}",
      "method": "retryFailedService",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Retry failed service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system with the failed services."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/history/library/{systemKey}/{libName}",
      "method": "libraryHistory",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get library history",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/history/library/{systemKey}/{libName}/{libVersion}",
      "method": "getOldLibraryVersion",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get old library version",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        },
        {
          "name": "libVersion",
          "schema": "string",
          "required": true,
          "description": "Library's version."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/library/{systemKey}",
      "method": "getLibraries",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get all libraries",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the libraries."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/library/{systemKey}/{libName}",
      "method": "deleteLibrary",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete library",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/library/{systemKey}/{libName}",
      "method": "getLibrary",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get library",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/library/{systemKey}/{libName}",
      "method": "createLibrary",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Create library",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dependencies",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "visibility",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/library/{systemKey}/{libName}",
      "method": "updateLibrary",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update library",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "libName",
          "schema": "string",
          "required": true,
          "description": "Library's name."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dependencies",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/logs/{systemKey}/{serviceName}",
      "method": "getLogs",
      "httpMethod": "get",
      "tag": "Developer",
      "description": "DEVELOPER - Get services logs",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system with the failed services."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code service's name."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/{systemKey}/{serviceName}",
      "method": "deleteService",
      "httpMethod": "delete",
      "tag": "Developer",
      "description": "DEVELOPER - Delete code service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code service's name."
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/{systemKey}/{serviceName}",
      "method": "addService",
      "httpMethod": "post",
      "tag": "Developer",
      "description": "DEVELOPER - Add code service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System Key that identifies the system that holds the library."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code service's name."
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "dependencies",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "run_user",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "systemID",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/codeadmin/v/2/{systemKey}/{serviceName}",
      "method": "updateService",
      "httpMethod": "put",
      "tag": "Developer",
      "description": "DEVELOPER - Update code service",
      "parameters": [
        {
          "name": "clearBladeDevToken",
          "schema": "string",
          "required": true,
          "description": "Developer Token obtained through admin authentication."
        },
        {
          "name": "systemKey",
          "schema": "string",
          "required": true,
          "description": "System key that identifies the system the code service belongs to."
        },
        {
          "name": "serviceName",
          "schema": "string",
          "required": true,
          "description": "Code service's name."
        },
        {
          "name": "auto_balance",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "auto_restart",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "concurrency",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "current_version",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "dependencies",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "execution_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "logging_enabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "parameters",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "run_user",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "triggers",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "https://platform.clearblade.com",
  "apiDescription": "A friendly little API to help you interact with the ClearBlade platform.",
  "apiTitle": "ClearBlade API",
  "endpoints": 133,
  "sdkMethods": 220,
  "schemas": 163,
  "parameters": 870,
  "contactEmail": "support@clearblade.com",
  "difficultyScore": 519,
  "difficulty": "Hard"
}