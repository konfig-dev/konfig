{
  "providerName": "bkk.hu",
  "openApiRaw": "https://opendata.bkk.hu/docs/futar-openapi.yaml",
  "securitySchemes": {
    "ApiKeyQuery": {
      "description": "A kliensalkalmazást azonosító API kulcs.",
      "in": "query",
      "name": "key",
      "type": "apiKey"
    }
  },
  "homepage": "bkk.hu",
  "apiVersion": "1.0.1",
  "methods": [
    {
      "url": "/{dialect}/api/where/alert-search",
      "method": "searchAlerts",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "A keresési feltétel, amit a zavar fejlécével, leírásával, vagy azonosítójával illesztünk."
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "A keresés időintervallumának eleje epoch másodpercben."
        },
        {
          "name": "end",
          "schema": "integer",
          "description": "A keresési időintervallum vége epoch másodpercben."
        },
        {
          "name": "minResult",
          "schema": "integer",
          "description": "A visszaadott elemek minimális száma."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/arrivals-and-departures-for-location",
      "method": "getArrivalsAndDeparturesForLocation",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "groupLimit",
          "schema": "integer",
          "description": "Menetrendi adatok maximális száma egy csoportban."
        },
        {
          "name": "clientLon",
          "schema": "number",
          "description": "A kliens hosszúsági koordinátája."
        },
        {
          "name": "clientLat",
          "schema": "number",
          "description": "A kliens szélességi koordinátája."
        },
        {
          "name": "minutesBefore",
          "schema": "integer",
          "description": "A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul."
        },
        {
          "name": "minutesAfter",
          "schema": "integer",
          "description": "A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget."
        },
        {
          "name": "stopId",
          "schema": "array",
          "description": "A megállók azonosítóinak listája, amelyekhez a lekérést végezzük."
        },
        {
          "name": "includeRouteId",
          "schema": "array",
          "description": "A válasz szűrésére használt járatok azonosítóinak listája."
        },
        {
          "name": "time",
          "schema": "integer",
          "description": "A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő."
        },
        {
          "name": "onlyDepartures",
          "schema": "boolean",
          "description": "Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek a válaszban."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "A visszaadott indulási és érkezési idők listájának maximális hossza."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "A helyszín középpontjának szélessgéi koordinátája."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "A helyszín középpontjának hosszúsági koordinátája."
        },
        {
          "name": "latSpan",
          "schema": "number",
          "description": "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
        },
        {
          "name": "lonSpan",
          "schema": "number",
          "description": "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "A válasz szűrésére használt keresési kifejezés."
        },
        {
          "name": "minResult",
          "schema": "integer",
          "description": "A visszaadott elemek minimális száma."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/arrivals-and-departures-for-stop",
      "method": "getArrivalsAndDeparturesForStop",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "minutesBefore",
          "schema": "integer",
          "description": "A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul."
        },
        {
          "name": "minutesAfter",
          "schema": "integer",
          "description": "A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget."
        },
        {
          "name": "stopId",
          "schema": "array",
          "description": "A megállók azonosítóinak listája, amelyekhez a lekérést végezzük."
        },
        {
          "name": "includeRouteId",
          "schema": "array",
          "description": "A válasz szűrésére használt járatok azonosítóinak listája."
        },
        {
          "name": "time",
          "schema": "integer",
          "description": "A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az aktuális szerveridő."
        },
        {
          "name": "onlyDepartures",
          "schema": "boolean",
          "description": "Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek a válaszban."
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "A visszaadott indulási és érkezési idők listájának maximális hossza."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "A helyszín középpontjának szélessgéi koordinátája."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "A helyszín középpontjának hosszúsági koordinátája."
        },
        {
          "name": "latSpan",
          "schema": "number",
          "description": "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
        },
        {
          "name": "lonSpan",
          "schema": "number",
          "description": "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "A válasz szűrésére használt keresési kifejezés."
        },
        {
          "name": "minResult",
          "schema": "integer",
          "description": "A visszaadott elemek minimális száma."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/bicycle-rental",
      "method": "getBicycleRentalStations",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/booking-redirect",
      "method": "bookingRedirect",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "routeId",
          "schema": "string",
          "description": "A járat azonosítója."
        },
        {
          "name": "directionId",
          "schema": "string",
          "description": "A járat íránya."
        },
        {
          "name": "tripId",
          "schema": "string",
          "description": "A menet azonosítója."
        },
        {
          "name": "serviceDate",
          "schema": "string",
          "description": "A menet üzem napja."
        },
        {
          "name": "boardStopId",
          "schema": "string",
          "description": "A felszállási megálló azonosítója."
        },
        {
          "name": "alightStopId",
          "schema": "string",
          "description": "A leszállási megálló azonosítója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        }
      ],
      "responses": []
    },
    {
      "url": "/{dialect}/api/where/metadata",
      "method": "getMetadata",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "description": "A lekérés kiértékelésének időpontja epoch másodpercben (az aktív zavarok lekéréséhez szükséges).A szerver ideje az alapértelmezett értéke."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/multi-route-details",
      "method": "getMultiRouteDetails",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "routeId",
          "schema": "array",
          "required": true,
          "description": "A lekért járatok azonosítói."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke az aktuális nap."
        },
        {
          "name": "related",
          "schema": "boolean",
          "description": "Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek a válaszban."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/onboard-depart-search",
      "method": "searchForOnboardDepartVehicles",
      "httpMethod": "post",
      "description": "",
      "parameters": [
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/plan-access",
      "method": "planAccess",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik)."
        },
        {
          "name": "time",
          "schema": "string",
          "description": "Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik)."
        },
        {
          "name": "fromPlace",
          "schema": "string",
          "required": true,
          "description": "Az indulási hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója."
        },
        {
          "name": "toPlace",
          "schema": "string",
          "required": true,
          "description": "Az érkezési hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója."
        },
        {
          "name": "mode",
          "schema": "array",
          "required": true,
          "description": "A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés a `BICYCLE,WALK` paraméterekkel kapcsolható be."
        },
        {
          "name": "shouldBuyTickets",
          "schema": "boolean",
          "description": "Az első járműre szállás előtt történjen-e jegyvásárlás."
        },
        {
          "name": "showIntermediateStops",
          "schema": "boolean",
          "description": "A válasz tartalmazza-e a járatok által érintett köztes megállókat is."
        },
        {
          "name": "arriveBy",
          "schema": "boolean",
          "description": "Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel."
        },
        {
          "name": "wheelchair",
          "schema": "boolean",
          "description": "Az összes járat alacsonypadlós legyen-e."
        },
        {
          "name": "triangleSafetyFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "triangleSlopeFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "triangleTimeFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "optimize",
          "schema": "string",
          "description": "A kereső mire optimalizálja az útvonalakat."
        },
        {
          "name": "walkProfile",
          "schema": "string",
          "description": "A séta sebességét meghatározó profil."
        },
        {
          "name": "numItineraries",
          "schema": "integer",
          "description": "Legfeljebb hány útvonal szerepeljen a válaszban."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/plan-trip",
      "method": "planTrip",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik)."
        },
        {
          "name": "time",
          "schema": "string",
          "description": "Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik)."
        },
        {
          "name": "fromPlace",
          "schema": "string",
          "required": true,
          "description": "Az indulási hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója."
        },
        {
          "name": "toPlace",
          "schema": "string",
          "required": true,
          "description": "Az érkezési hely adatai `név::hely` formában. A `név` az adott hely tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`). A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által visszaadott `vertex` azonosítója."
        },
        {
          "name": "mode",
          "schema": "array",
          "required": true,
          "description": "A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés a `BICYCLE,WALK` paraméterekkel kapcsolható be."
        },
        {
          "name": "shouldBuyTickets",
          "schema": "boolean",
          "description": "Az első járműre szállás előtt történjen-e jegyvásárlás."
        },
        {
          "name": "showIntermediateStops",
          "schema": "boolean",
          "description": "A válasz tartalmazza-e a járatok által érintett köztes megállókat is."
        },
        {
          "name": "arriveBy",
          "schema": "boolean",
          "description": "Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel."
        },
        {
          "name": "wheelchair",
          "schema": "boolean",
          "description": "Az összes járat alacsonypadlós legyen-e."
        },
        {
          "name": "triangleSafetyFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "triangleSlopeFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "triangleTimeFactor",
          "schema": "number",
          "description": "Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével."
        },
        {
          "name": "optimize",
          "schema": "string",
          "description": "A kereső mire optimalizálja az útvonalakat."
        },
        {
          "name": "walkProfile",
          "schema": "string",
          "description": "A séta sebességét meghatározó profil."
        },
        {
          "name": "numItineraries",
          "schema": "integer",
          "description": "Legfeljebb hány útvonal szerepeljen a válaszban."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/references",
      "method": "getReferences",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "agencyId",
          "schema": "array",
          "description": "A szolgáltató ID-je."
        },
        {
          "name": "alertId",
          "schema": "array",
          "description": "A zavar ID-je."
        },
        {
          "name": "routeId",
          "schema": "array",
          "description": "A járat ID-ja."
        },
        {
          "name": "stopId",
          "schema": "array",
          "description": "A megálló ID-ja."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/route-details",
      "method": "getRouteDetails",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "routeId",
          "schema": "string",
          "required": true,
          "description": "A járat ID-ja."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke az aktuális nap."
        },
        {
          "name": "related",
          "schema": "boolean",
          "description": "Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek a válaszban."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/route-details-for-stop",
      "method": "getRouteDetailsForStop",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "stopId",
          "schema": "string",
          "description": "A lekért megálló azonosítója."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/schedule-for-stop",
      "method": "getScheduleForStop",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "stopId",
          "schema": "array",
          "description": "A releváns megállók azonosítói."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "A kért dátum."
        },
        {
          "name": "onlyDepartures",
          "schema": "boolean",
          "description": "Igaz esetén az érkezési és előrejelzett érkezési idők ki lesznek hagyva a válaszból."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/search",
      "method": "search",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "Szűrőfeltétel, amire illesztve vannak a zavarok, járatok és megállók."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "A látható térkép középpontjának szélessgéi koordinátája."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "A látható térkép középpontjának hosszúsági koordinátája."
        },
        {
          "name": "minResult",
          "schema": "integer",
          "description": "A visszaadott elemek minimális száma."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/statistics",
      "method": "getStatistics",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/stops-for-location",
      "method": "getStopsForLocation",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "lat",
          "schema": "number",
          "description": "A helyszín középpontjának szélessgéi koordinátája."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "A helyszín középpontjának hosszúsági koordinátája."
        },
        {
          "name": "latSpan",
          "schema": "number",
          "description": "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
        },
        {
          "name": "lonSpan",
          "schema": "number",
          "description": "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban."
        },
        {
          "name": "query",
          "schema": "string",
          "description": "A válasz szűrésére használt keresési kifejezés."
        },
        {
          "name": "minResult",
          "schema": "integer",
          "description": "A visszaadott elemek minimális száma."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/ticketing-locations",
      "method": "getTicketingData",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Csak azokat az elemeket adjuk vissza, amik módosultak az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ha nincs változás üres listákkal tér vissza. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "full",
          "schema": "boolean",
          "description": "Ha igaz, és az adat változott az `ifModifiedSince` query paraméterben megadott időpont óta, akkor az összes adat visszaadásra kerül. Ha nincs megadva csak a módosult elemek szerepelnek a válaszban. Csak az `ifModifiedSince` query paraméterrel együtt szerepelhet, mivel az `If-Modified-Since` fejléc minden esetben a teljes választ tartalmazza."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/trip-details",
      "method": "getTripDetails",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "vehicleId",
          "schema": "string",
          "description": "Amennyiben meg van adva, azon menet érkezik a válaszban, amit az adott jármű teljesít."
        },
        {
          "name": "tripId",
          "schema": "string",
          "description": "Ha nincs kitöltve a járműazonosító, az itt megadott azonosítóval rendelkező menet lesz a válaszban."
        },
        {
          "name": "date",
          "schema": "string",
          "description": "Ha nincs kitöltve a járműazonosító, ezen a dátumon lesz keresve az adott azonosítójú menet."
        },
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/vehicle-for-trip",
      "method": "getVehicleForTrip",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "tripId",
          "schema": "array",
          "required": true,
          "description": "A lekért menetek azonosítói."
        },
        {
          "name": "date",
          "schema": "array",
          "description": "A lekért menetrendi napok. Alapértelmezetten az aktuális nap."
        },
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/vehicles-for-location",
      "method": "getVehiclesForLocation",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "description": "A válasz listát szűrő feltétel, amit tartalmaznia kell a jármű azonosítójának, rendszámának vagy a típusának."
        },
        {
          "name": "lat",
          "schema": "number",
          "description": "A terület középpontjának szélességi koordinátája."
        },
        {
          "name": "lon",
          "schema": "number",
          "description": "A terület középpontjának hosszúsági koordinátája."
        },
        {
          "name": "latSpan",
          "schema": "number",
          "description": "A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`)."
        },
        {
          "name": "lonSpan",
          "schema": "number",
          "description": "A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`)."
        },
        {
          "name": "radius",
          "schema": "integer",
          "description": "Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület a középpontól számított `radius` méter távolság mind a négy irányban."
        },
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/vehicles-for-route",
      "method": "getVehiclesForRoute",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "routeId",
          "schema": "array",
          "required": true,
          "description": "A lekért járatok azonosítói."
        },
        {
          "name": "related",
          "schema": "boolean",
          "description": "Tartalmazza-e a válasz a kapcsolódó járatokat is a referenciákban."
        },
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{dialect}/api/where/vehicles-for-stop",
      "method": "getVehiclesForStop",
      "httpMethod": "get",
      "description": "",
      "parameters": [
        {
          "name": "stopId",
          "schema": "string",
          "required": true,
          "description": "A lekért megálló azonosítója."
        },
        {
          "name": "ifModifiedSince",
          "schema": "integer",
          "description": "Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz, ha nincs változás. Elsőbbsége van a header paraméterrel szemben."
        },
        {
          "name": "ifModifiedSince",
          "schema": "string",
          "description": "Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query paraméternek elsőbbsége van ezzel szemben."
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": "A kliensalkalmazás verziója."
        },
        {
          "name": "version",
          "schema": "string",
          "description": "Az API verziója."
        },
        {
          "name": "dialect",
          "schema": "string",
          "required": true,
          "description": "Az API referenciáinak dialektusa."
        },
        {
          "name": "includeReferences",
          "schema": "array",
          "description": "A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák `description` mezője kihagyásra kerül."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://futar.bkk.hu/api/query/v1/ws",
  "apiDescription": "Specification for the realCity Query Server API.",
  "apiTitle": "realCity Query Server API",
  "endpoints": 23,
  "sdkMethods": 23,
  "schemas": 95,
  "parameters": 212,
  "difficultyScore": 123.5,
  "difficulty": "Medium"
}