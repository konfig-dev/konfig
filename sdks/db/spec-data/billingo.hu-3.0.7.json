{
  "providerName": "billingo.hu",
  "openApiRaw": "https://api.swaggerhub.com/apis/Billingo/Billingo/3.0.7",
  "securitySchemes": {
    "api_key": {
      "in": "header",
      "name": "X-API-KEY",
      "type": "apiKey"
    }
  },
  "homepage": "billingo.hu",
  "apiVersion": "3.0.7",
  "methods": [
    {
      "url": "/bank-accounts",
      "method": "listBankAccount",
      "httpMethod": "get",
      "tag": "BankAccount",
      "description": "List all bank account",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A object with a data property that contains an array of up to limit bank accounts. Each entry in the array is a separate bank account object. If no more bank accounts are available, the resulting array will be empty."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/bank-accounts",
      "method": "createBankAccount",
      "httpMethod": "post",
      "tag": "BankAccount",
      "description": "Create a bank account",
      "parameters": [
        {
          "name": "account_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "account_number_iban",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "need_qr",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "swift",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/bank-accounts/{id}",
      "method": "deleteBankAccount",
      "httpMethod": "delete",
      "tag": "BankAccount",
      "description": "Delete a bank account",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/bank-accounts/{id}",
      "method": "getBankAccount",
      "httpMethod": "get",
      "tag": "BankAccount",
      "description": "Retrieve a bank account",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/bank-accounts/{id}",
      "method": "updateBankAccount",
      "httpMethod": "put",
      "tag": "BankAccount",
      "description": "Update a bank account",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "account_number",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "account_number_iban",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "need_qr",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "swift",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/currencies",
      "method": "getConversionRate",
      "httpMethod": "get",
      "tag": "Currency",
      "description": "Get currencies exchange rate.",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/document-blocks",
      "method": "listDocumentBlock",
      "httpMethod": "get",
      "tag": "DocumentBlock",
      "description": "List all document blocks",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A object with a data property that contains an array of up to limit document blocks. Each entry in the array is a separate document block object. If no more document block are available, the resulting array will be empty."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents",
      "method": "listDocument",
      "httpMethod": "get",
      "tag": "Document",
      "description": "List all documents",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "block_id",
          "schema": "integer",
          "required": false,
          "description": "Filter documents by the identifier of your DocumentBlock."
        },
        {
          "name": "partner_id",
          "schema": "integer",
          "required": false,
          "description": "Filter documents by the identifier of your Partner."
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": false,
          "description": "Filter documents by PaymentMethod value."
        },
        {
          "name": "payment_status",
          "schema": "string",
          "required": false,
          "description": "Filter documents by PaymentStatus value."
        },
        {
          "name": "start_date",
          "schema": "string",
          "required": false,
          "description": "Filter documents by date."
        },
        {
          "name": "end_date",
          "schema": "string",
          "required": false,
          "description": "Filter documents by date."
        },
        {
          "name": "start_number",
          "schema": "integer",
          "required": false,
          "description": "Starting number of the document, should not contain year or any other formatting. Required if `start_year` given"
        },
        {
          "name": "end_number",
          "schema": "integer",
          "required": false,
          "description": "Ending number of the document, should not contain year or any other formatting. Required if `end_year` given"
        },
        {
          "name": "start_year",
          "schema": "integer",
          "required": false,
          "description": "Year for `start_number` parameter. Required if `start_number` given."
        },
        {
          "name": "end_year",
          "schema": "integer",
          "required": false,
          "description": "Year for `end_number` parameter. Required if `end_number` given."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A object with a data property that contains an array of up to limit documents. Each entry in the array is a separate document object. If no more documents are available, the resulting array will be empty."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents",
      "method": "createDocument",
      "httpMethod": "post",
      "tag": "Document",
      "description": "Create a document",
      "parameters": [
        {
          "name": "bank_account_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "block_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "conversion_rate",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "due_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "electronic",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "fulfillment_date",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "paid",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "partner_id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "payment_method",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "settings",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vendor_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Document object representing your invoice."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}",
      "method": "getDocument",
      "httpMethod": "get",
      "tag": "Document",
      "description": "Retrieve a document",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Document object representing your invoice."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/cancel",
      "method": "cancelDocument",
      "httpMethod": "post",
      "tag": "Document",
      "description": "Cancel a document",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Document object representing your invoice."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/create-from-proforma",
      "method": "createDocumentFromProforma",
      "httpMethod": "post",
      "tag": "Document",
      "description": "Create a document from proforma.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Document object representing your invoice."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/download",
      "method": "downloadDocument",
      "httpMethod": "get",
      "tag": "Document",
      "description": "Download a document in PDF format.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/online-szamla",
      "method": "getOnlineSzamlaStatus",
      "httpMethod": "get",
      "tag": "Document",
      "description": "Retrieve a document Online Számla status",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/payments",
      "method": "deletePayment",
      "httpMethod": "delete",
      "tag": "Document",
      "description": "Delete all payment history on document",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/payments",
      "method": "getPayment",
      "httpMethod": "get",
      "tag": "Document",
      "description": "Retrieve a payment histroy",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/payments",
      "method": "updatePayment",
      "httpMethod": "put",
      "tag": "Document",
      "description": "Update payment history",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/public-url",
      "method": "getPublicUrl",
      "httpMethod": "get",
      "tag": "Document",
      "description": "Retrieve a document download public url.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/documents/{id}/send",
      "method": "sendDocument",
      "httpMethod": "post",
      "tag": "Document",
      "description": "Send invoice to given email adresses.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/organization",
      "method": "getOrganizationData",
      "httpMethod": "get",
      "tag": "Organization",
      "description": "Retrieve a organization data.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners",
      "method": "listPartner",
      "httpMethod": "get",
      "tag": "Partner",
      "description": "List all partners",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A object with a data property that contains an array of up to limit partners. Each entry in the array is a separate partner object. If no more partners are available, the resulting array will be empty."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners",
      "method": "createPartner",
      "httpMethod": "post",
      "tag": "Partner",
      "description": "Create a partner",
      "parameters": [
        {
          "name": "account_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "general_ledger_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "iban",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "swift",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "taxcode",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners/{id}",
      "method": "deletePartner",
      "httpMethod": "delete",
      "tag": "Partner",
      "description": "Delete a partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners/{id}",
      "method": "getPartner",
      "httpMethod": "get",
      "tag": "Partner",
      "description": "Retrieve a partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/partners/{id}",
      "method": "updatePartner",
      "httpMethod": "put",
      "tag": "Partner",
      "description": "Update a partner",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "account_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "address",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "emails",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "general_ledger_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "iban",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "swift",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "taxcode",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/products",
      "method": "listProduct",
      "httpMethod": "get",
      "tag": "Product",
      "description": "List all product",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "per_page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A object with a data property that contains an array of up to limit products. Each entry in the array is a separate product object. If no more products are available, the resulting array will be empty."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/products",
      "method": "createProduct",
      "httpMethod": "post",
      "tag": "Product",
      "description": "Create a product",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "general_ledger_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "general_ledger_taxcode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "net_unit_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "unit",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vat",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "deleteProduct",
      "httpMethod": "delete",
      "tag": "Product",
      "description": "Delete a product",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "getProduct",
      "httpMethod": "get",
      "tag": "Product",
      "description": "Retrieve a product",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/products/{id}",
      "method": "updateProduct",
      "httpMethod": "put",
      "tag": "Product",
      "description": "Update a product",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "currency",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "general_ledger_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "general_ledger_taxcode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "net_unit_price",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "unit",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "vat",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/utils/convert-legacy-id/{id}",
      "method": "getId",
      "httpMethod": "get",
      "tag": "Util",
      "description": "Convert legacy ID to v3 ID.",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.billingo.hu/v3",
  "apiDescription": "This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.",
  "apiTitle": "Billingo API v3",
  "endpoints": 19,
  "sdkMethods": 31,
  "schemas": 47,
  "parameters": 109,
  "contactUrl": "https://www.billingo.hu/kapcsolat",
  "contactEmail": "hello@billingo.hu",
  "difficultyScore": 81.75,
  "difficulty": "Easy"
}