{
  "providerName": "cenit.io",
  "openApiRaw": "https://cenit-io.github.io/openapi/swagger.json",
  "securitySchemes": {
    "X-User-Access-Key": {
      "in": "header",
      "name": "X-User-Access-Key",
      "type": "apiKey"
    },
    "X-User-Access-Token": {
      "in": "header",
      "name": "X-User-Access-Token",
      "type": "apiKey"
    }
  },
  "homepage": "cenit.io",
  "apiVersion": "v1",
  "methods": [
    {
      "url": "/setup/connection",
      "method": "/setup/connectionGet",
      "httpMethod": "get",
      "tag": "Connection",
      "description": "Returns a list of connections",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/connection",
      "method": "/setup/connectionPost",
      "httpMethod": "post",
      "tag": "Connection",
      "description": "Create or update a connection",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/connection/{id}",
      "method": "/setup/connection/{id}Delete",
      "httpMethod": "delete",
      "tag": "Connection",
      "description": "Delete a connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Connection ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/connection/{id}",
      "method": "/setup/connection/{id}Get",
      "httpMethod": "get",
      "tag": "Connection",
      "description": "Retrieve an existing connection",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Connection ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/connection_role",
      "method": "/setup/connectionRoleGet",
      "httpMethod": "get",
      "tag": "Connection Role",
      "description": "Returns a list of connection roles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/connection_role",
      "method": "/setup/connectionRolePost",
      "httpMethod": "post",
      "tag": "Connection Role",
      "description": "Create or update a connection role",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/connection_role/{id}",
      "method": "/setup/connectionRole/{id}Delete",
      "httpMethod": "delete",
      "tag": "Connection Role",
      "description": "Delete a connection role.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Connection role ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/connection_role/{id}",
      "method": "/setup/connectionRole/{id}Get",
      "httpMethod": "get",
      "tag": "Connection Role",
      "description": "Return a connection role",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Connection role ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/data_type/",
      "method": "/setup/dataType/Get",
      "httpMethod": "get",
      "tag": "Data Type",
      "description": "Returns a list of data types",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/data_type/",
      "method": "/setup/dataType/Post",
      "httpMethod": "post",
      "tag": "Data Type",
      "description": "Create or update a data type",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/data_type/{id}",
      "method": "/setup/dataType/{id}Delete",
      "httpMethod": "delete",
      "tag": "Data Type",
      "description": "Delete a data type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "data type ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/data_type/{id}",
      "method": "/setup/dataType/{id}Get",
      "httpMethod": "get",
      "tag": "Data Type",
      "description": "Retrieve a data type",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "data type ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/flow/",
      "method": "/setup/flow/Get",
      "httpMethod": "get",
      "tag": "Flow",
      "description": "Returns a list of flows",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/flow/",
      "method": "/setup/flow/Post",
      "httpMethod": "post",
      "tag": "Flow",
      "description": "Create or update a flow",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/flow/{id}",
      "method": "/setup/flow/{id}Delete",
      "httpMethod": "delete",
      "tag": "Flow",
      "description": "Delete a flow.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Flow ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/flow/{id}",
      "method": "/setup/flow/{id}Get",
      "httpMethod": "get",
      "tag": "Flow",
      "description": "Retrieve an existing flow",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Flow ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/namespace/",
      "method": "/setup/namespace/Get",
      "httpMethod": "get",
      "tag": "Namespace",
      "description": "Returns a list of namespaces",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/namespace/",
      "method": "/setup/namespace/Post",
      "httpMethod": "post",
      "tag": "Namespace",
      "description": "Create or update a namespace",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/namespace/{id}",
      "method": "/setup/namespace/{id}Delete",
      "httpMethod": "delete",
      "tag": "Namespace",
      "description": "Delete a namespace",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Namespace ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/namespace/{id}",
      "method": "/setup/namespace/{id}Get",
      "httpMethod": "get",
      "tag": "Namespace",
      "description": "Retrieve an existing namespace",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Namespace ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/observer/",
      "method": "/setup/observer/Get",
      "httpMethod": "get",
      "tag": "Data Event",
      "description": "Returns a list of events",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/observer/",
      "method": "/setup/observer/Post",
      "httpMethod": "post",
      "tag": "Data Event",
      "description": "Create or update an event",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/observer/{id}",
      "method": "/setup/observer/{id}Delete",
      "httpMethod": "delete",
      "tag": "Data Event",
      "description": "Delete an event",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Observer ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/observer/{id}",
      "method": "/setup/observer/{id}Get",
      "httpMethod": "get",
      "tag": "Data Event",
      "description": "Retrieve an existing event",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Observer ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/scheduler/",
      "method": "/setup/scheduler/Get",
      "httpMethod": "get",
      "tag": "Scheduler",
      "description": "Returns a list of schedulers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/scheduler/",
      "method": "/setup/scheduler/Post",
      "httpMethod": "post",
      "tag": "Scheduler",
      "description": "Create or update an scheduler",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/scheduler/{id}",
      "method": "/setup/scheduler/{id}Delete",
      "httpMethod": "delete",
      "tag": "Scheduler",
      "description": "Delete an schedule",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Scheduler ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/scheduler/{id}",
      "method": "/setup/scheduler/{id}Get",
      "httpMethod": "get",
      "tag": "Scheduler",
      "description": "Retrieve an existing schedule",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Scheduler ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/schema/",
      "method": "/setup/schema/Get",
      "httpMethod": "get",
      "tag": "Schema",
      "description": "Returns a list of schemas",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/schema/",
      "method": "/setup/schema/Post",
      "httpMethod": "post",
      "tag": "Schema",
      "description": "Create or update an schema",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/schema/{id}",
      "method": "/setup/schema/{id}Delete",
      "httpMethod": "delete",
      "tag": "Schema",
      "description": "Delete an schema.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Schema ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/schema/{id}",
      "method": "/setup/schema/{id}Get",
      "httpMethod": "get",
      "tag": "Schema",
      "description": "Retrieve an existing schema",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Schema ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/translator/",
      "method": "/setup/translator/Get",
      "httpMethod": "get",
      "tag": "Translator",
      "description": "Returns a list of translators",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/translator/",
      "method": "/setup/translator/Post",
      "httpMethod": "post",
      "tag": "Translator",
      "description": "Create or update a translator",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/translator/{id}",
      "method": "/setup/translator/{id}Delete",
      "httpMethod": "delete",
      "tag": "Translator",
      "description": "Delete a translator",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Translator ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/translator/{id}",
      "method": "/setup/translator/{id}Get",
      "httpMethod": "get",
      "tag": "Translator",
      "description": "Retrieve an existing translator",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Translator ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/webhook/",
      "method": "/setup/webhook/Get",
      "httpMethod": "get",
      "tag": "Webhook",
      "description": "Returns a list of webhooks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/webhook/",
      "method": "/setup/webhook/Post",
      "httpMethod": "post",
      "tag": "Webhook",
      "description": "Create or update a webhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/setup/webhook/{id}",
      "method": "/setup/webhook/{id}Delete",
      "httpMethod": "delete",
      "tag": "Webhook",
      "description": "Delete a webhook",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Webhook ID."
        }
      ],
      "responses": []
    },
    {
      "url": "/setup/webhook/{id}",
      "method": "/setup/webhook/{id}Get",
      "httpMethod": "get",
      "tag": "Webhook",
      "description": "Retrieve an existing webhook",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Webhook ID."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://cenit.io/api/v1",
  "apiDescription": "Cenit IO is an Open Platform for Data and Business Integration (iPaaS)\n",
  "apiTitle": "Cenit IO - REST API Specification",
  "endpoints": 20,
  "sdkMethods": 40,
  "schemas": 10,
  "parameters": 20,
  "contactUrl": "https://cenit.io",
  "contactEmail": "support@cenit.io",
  "difficultyScore": 50,
  "difficulty": "Easy"
}