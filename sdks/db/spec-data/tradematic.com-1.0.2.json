{
  "providerName": "tradematic.com",
  "openApiRaw": "https://tradematic.cloud/sdk/swagger.yaml",
  "securitySchemes": {
    "Secured": {
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    }
  },
  "homepage": "tradematic.com",
  "apiVersion": "1.0.2",
  "methods": [
    {
      "url": "/autofollow/strategies",
      "method": "/autofollow/strategiesGet",
      "httpMethod": "get",
      "tag": "Autofollow API",
      "description": "Get autofollow strategies list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies",
      "method": "/autofollow/strategiesPost",
      "httpMethod": "post",
      "tag": "Autofollow API",
      "description": "Create new autofollow strategy",
      "parameters": [
        {
          "name": "strategy",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}",
      "method": "/autofollow/strategies/{strategyid}Get",
      "httpMethod": "get",
      "tag": "Autofollow API",
      "description": "Get autofollow strategy by ID",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}",
      "method": "/autofollow/strategies/{strategyid}Put",
      "httpMethod": "put",
      "tag": "Autofollow API",
      "description": "Update autofollow strategy",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}/content",
      "method": "/autofollow/strategies/{strategyid}/contentPut",
      "httpMethod": "put",
      "tag": "Autofollow API",
      "description": "Update rules for strategy that was created with strategy builder",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}/positions",
      "method": "/autofollow/strategies/{strategyid}/positionsGet",
      "httpMethod": "get",
      "tag": "Autofollow API",
      "description": "Get positions for strategy",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}/signals",
      "method": "/autofollow/strategies/{strategyid}/signalsGet",
      "httpMethod": "get",
      "tag": "Autofollow API",
      "description": "Get trading signals for strategy",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "count",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/autofollow/strategies/{strategyid}/signals",
      "method": "/autofollow/strategies/{strategyid}/signalsPost",
      "httpMethod": "post",
      "tag": "Autofollow API",
      "description": "Send a new signal for autofollow strategy",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "signal",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/builder/rules",
      "method": "/builder/rulesGet",
      "httpMethod": "get",
      "tag": "Builder API",
      "description": "Get strategy builder rules list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/builder/rules/{ruleid}",
      "method": "/builder/rules/{ruleid}Get",
      "httpMethod": "get",
      "tag": "Builder API",
      "description": "Get strategy builder rules by ID",
      "parameters": [
        {
          "name": "ruleid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/apikeys",
      "method": "/client/apikeysGet",
      "httpMethod": "get",
      "tag": "Client API",
      "description": "Get API keys",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/apikeys",
      "method": "/client/apikeysPost",
      "httpMethod": "post",
      "tag": "Client API",
      "description": "Create new API key",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/apikeys/{keyid}",
      "method": "/client/apikeys/{keyid}Delete",
      "httpMethod": "delete",
      "tag": "Client API",
      "description": "Delete API key",
      "parameters": [
        {
          "name": "keyid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/users",
      "method": "/client/usersGet",
      "httpMethod": "get",
      "tag": "Client API",
      "description": "Get users list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/users/login",
      "method": "/client/users/loginPost",
      "httpMethod": "post",
      "tag": "Client API",
      "description": "Logs user into the system",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/users/register",
      "method": "/client/users/registerPost",
      "httpMethod": "post",
      "tag": "Client API",
      "description": "Register a new user",
      "parameters": [
        {
          "name": "user",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/client/users/{userid}",
      "method": "/client/users/{userid}Get",
      "httpMethod": "get",
      "tag": "Client API",
      "description": "Get user by ID",
      "parameters": [
        {
          "name": "userid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts",
      "method": "/cloud/accountsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get trading accounts list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}",
      "method": "/cloud/accounts/{accountid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get trading account by ID",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/closeall",
      "method": "/cloud/accounts/{accountid}/closeallPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Close all positions by account",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/orders",
      "method": "/cloud/accounts/{accountid}/ordersGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get orders list by account",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/orders",
      "method": "/cloud/accounts/{accountid}/ordersPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Place a new order",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "order",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/orders/{orderid}",
      "method": "/cloud/accounts/{accountid}/orders/{orderid}Delete",
      "httpMethod": "delete",
      "tag": "Cloud API",
      "description": "Cancel an order by ID",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "orderid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/snapshots",
      "method": "/cloud/accounts/{accountid}/snapshotsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get account equity and cash snapshots",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/sync",
      "method": "/cloud/accounts/{accountid}/syncPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Syhchronize an account with account active strategies",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/accounts/{accountid}/trades",
      "method": "/cloud/accounts/{accountid}/tradesGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get trades list by account",
      "parameters": [
        {
          "name": "accountid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/commands",
      "method": "/cloud/commandsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get commands list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/commands/{commandid}",
      "method": "/cloud/commands/{commandid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get command by ID",
      "parameters": [
        {
          "name": "commandid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connections",
      "method": "/cloud/connectionsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get connections list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connections",
      "method": "/cloud/connectionsPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Create a new connection",
      "parameters": [
        {
          "name": "connection",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connections/{connectionid}",
      "method": "/cloud/connections/{connectionid}Delete",
      "httpMethod": "delete",
      "tag": "Cloud API",
      "description": "Delete connection by ID",
      "parameters": [
        {
          "name": "connectionid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connections/{connectionid}",
      "method": "/cloud/connections/{connectionid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get connection by ID",
      "parameters": [
        {
          "name": "connectionid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connections/{connectionid}",
      "method": "/cloud/connections/{connectionid}Put",
      "httpMethod": "put",
      "tag": "Cloud API",
      "description": "Update existing connection",
      "parameters": [
        {
          "name": "connectionid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "connection",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connectors",
      "method": "/cloud/connectorsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get available connectors list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/connectors/{connectorid}",
      "method": "/cloud/connectors/{connectorid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get connector by ID",
      "parameters": [
        {
          "name": "connectorid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/sessions",
      "method": "/cloud/sessionsGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get sessions list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/sessions/{sessionid}",
      "method": "/cloud/sessions/{sessionid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get session by ID",
      "parameters": [
        {
          "name": "sessionid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/strategies",
      "method": "/cloud/strategiesGet",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get list of active (executing) strategies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/strategies/start",
      "method": "/cloud/strategies/startPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Start a strategy execution for account",
      "parameters": [
        {
          "name": "data",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/strategies/{strategyid}",
      "method": "/cloud/strategies/{strategyid}Get",
      "httpMethod": "get",
      "tag": "Cloud API",
      "description": "Get active (executing) strategy by ID",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/cloud/strategies/{strategyid}/stop",
      "method": "/cloud/strategies/{strategyid}/stopPost",
      "httpMethod": "post",
      "tag": "Cloud API",
      "description": "Stop a strategy execution by ID",
      "parameters": [
        {
          "name": "strategyid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/marketdata/markets",
      "method": "/marketdata/marketsGet",
      "httpMethod": "get",
      "tag": "MarketData API",
      "description": "Get markets list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/marketdata/markets/{marketid}",
      "method": "/marketdata/markets/{marketid}Get",
      "httpMethod": "get",
      "tag": "MarketData API",
      "description": "Get market by ID",
      "parameters": [
        {
          "name": "marketid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/marketdata/symbols",
      "method": "/marketdata/symbolsGet",
      "httpMethod": "get",
      "tag": "MarketData API",
      "description": "Get symbols list",
      "parameters": [
        {
          "name": "marketid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "filter",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/marketdata/symbols/{symbolid}",
      "method": "/marketdata/symbols/{symbolid}Get",
      "httpMethod": "get",
      "tag": "MarketData API",
      "description": "Get symbol by ID",
      "parameters": [
        {
          "name": "symbolid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/marketdata/symbols/{symbolid}/histdata",
      "method": "/marketdata/symbols/{symbolid}/histdataGet",
      "httpMethod": "get",
      "tag": "MarketData API",
      "description": "Get historical data for instrument",
      "parameters": [
        {
          "name": "symbolid",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "tf",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "from",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "to",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/news/news",
      "method": "/news/newsGet",
      "httpMethod": "get",
      "tag": "News API",
      "description": "Get news list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/news/news/{newsid}",
      "method": "/news/news/{newsid}Get",
      "httpMethod": "get",
      "tag": "News API",
      "description": "Get news by ID",
      "parameters": [
        {
          "name": "newsid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/ping",
      "method": "/pingGet",
      "httpMethod": "get",
      "tag": "Status API",
      "description": "Ping",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks",
      "method": "/taskmanager/tasksGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get tasks list",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks",
      "method": "/taskmanager/tasksPost",
      "httpMethod": "post",
      "tag": "TaskManager API",
      "description": "Create a new task",
      "parameters": [
        {
          "name": "task",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}",
      "method": "/taskmanager/tasks/{taskid}Get",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get task by ID",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/bymonths",
      "method": "/taskmanager/tasks/{taskid}/bymonthsGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest data for equity chart, grouped by months",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/byquarters",
      "method": "/taskmanager/tasks/{taskid}/byquartersGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest data for equity chart, grouped by quarters",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/byyears",
      "method": "/taskmanager/tasks/{taskid}/byyearsGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest data for equity chart, grouped by years",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/contribution",
      "method": "/taskmanager/tasks/{taskid}/contributionGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest symbol contribution data",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/drawdown",
      "method": "/taskmanager/tasks/{taskid}/drawdownGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get data for drawdown chart",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/equity",
      "method": "/taskmanager/tasks/{taskid}/equityGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get data for equity chart",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/equitypct",
      "method": "/taskmanager/tasks/{taskid}/equitypctGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get data for equity chart (%)",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/equitypctsm",
      "method": "/taskmanager/tasks/{taskid}/equitypctsmGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get spared data for equity chart (%)",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/folder",
      "method": "/taskmanager/tasks/{taskid}/folderGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get task result folder name",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/performance",
      "method": "/taskmanager/tasks/{taskid}/performanceGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest statistics",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/result",
      "method": "/taskmanager/tasks/{taskid}/resultGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get task result",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/result2",
      "method": "/taskmanager/tasks/{taskid}/result2Get",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get task result (version 2)",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/status",
      "method": "/taskmanager/tasks/{taskid}/statusGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get task status",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/taskmanager/tasks/{taskid}/trades",
      "method": "/taskmanager/tasks/{taskid}/tradesGet",
      "httpMethod": "get",
      "tag": "TaskManager API",
      "description": "Get backtest trades list",
      "parameters": [
        {
          "name": "taskid",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/time",
      "method": "/timeGet",
      "httpMethod": "get",
      "tag": "Status API",
      "description": "Get current server time",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.tradematic.com",
  "apiDescription": "### Overview\nTradematic Cloud is a trading infrastructure for building investment services.\n\nIt’s a trading engine + API + ready-made adapters to stock and forex brokers, crypto exchanges, and market data providers.\n\nYou can use it as a cloud API, or you can deploy it on your servers. \n\n\n\n### How to use Tradematic Cloud API\n\nSign up at [tradematic.cloud](https://tradematic.cloud). After signing up, you will receive your API key.\n\n### Authorization\n\nAdd the 'X-API-KEY' header with your API key to each request.\n\n### Examples of writing code with Tradematic Cloud API\n\nExamples are available at [tradematic.cloud](https://tradematic.cloud). \n\n### Swagger (.yaml) File\nSwagger (.yaml) file can be found [here](http://tradematic.cloud/sdk/swagger.yaml).\n",
  "apiTitle": "Tradematic Cloud API",
  "endpoints": 58,
  "sdkMethods": 67,
  "schemas": 47,
  "parameters": 61,
  "contactEmail": "support@tradematic.com",
  "difficultyScore": 105.75,
  "difficulty": "Medium"
}