{
  "providerName": "fungenerators.com",
  "openApiRaw": "https://fungenerators.com/yaml/riddle.yaml",
  "securitySchemes": {
    "X-Fungenerators-Api-Secret": {
      "in": "header",
      "name": "X-Fungenerators-Api-Secret",
      "type": "apiKey"
    }
  },
  "categories": [
    "text"
  ],
  "homepage": "fungenerators.com",
  "serviceName": "riddle",
  "apiVersion": "1.5",
  "methods": [
    {
      "url": "/riddle",
      "method": "/riddleDelete",
      "httpMethod": "delete",
      "tag": "Private Riddles",
      "typeScriptTag": "privateRiddles",
      "description": "Create a random Riddle entry.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Riddle ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/riddle",
      "method": "/riddleGet",
      "httpMethod": "get",
      "tag": "Private Riddles",
      "typeScriptTag": "privateRiddles",
      "description": "Get a Riddle entry for a given id. Retrieves a riddle question and answer based on the id.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "ID of the riddle to fetch"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/riddle",
      "method": "/riddlePost",
      "httpMethod": "post",
      "tag": "Private Riddles",
      "typeScriptTag": "privateRiddles",
      "description": "Create a random Riddle entry. Same as 'PUT' but can be used when some of the client libraries don't support 'PUT'.",
      "parameters": [
        {
          "name": "question",
          "schema": "string",
          "required": true,
          "description": "Riddle Question"
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": "Category of the riddle"
        },
        {
          "name": "answer",
          "schema": "string",
          "required": true,
          "description": "Answer(s) to the riddle question"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/riddle",
      "method": "/riddlePut",
      "httpMethod": "put",
      "tag": "Private Riddles",
      "typeScriptTag": "privateRiddles",
      "description": "Create a random Riddle entry.",
      "parameters": [
        {
          "name": "question",
          "schema": "string",
          "required": true,
          "description": "Riddle Question"
        },
        {
          "name": "category",
          "schema": "string",
          "required": true,
          "description": "Category of the riddle"
        },
        {
          "name": "answer",
          "schema": "string",
          "required": true,
          "description": "Answer(s) to the riddle question"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/riddle/random",
      "method": "/riddle/randomGet",
      "httpMethod": "get",
      "tag": "Random Riddle",
      "typeScriptTag": "randomRiddle",
      "description": "Get a random riddle for a given category(optional)",
      "parameters": [
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category to get the riddle from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/riddle/search",
      "method": "/riddle/searchGet",
      "httpMethod": "get",
      "tag": "Random Riddle",
      "typeScriptTag": "randomRiddle",
      "description": "Search for random riddle which has the text in the query, for a given category(optional).",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "Text to search for in the riddle"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Category to get the riddle from"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.fungenerators.com",
  "apiDescription": "Below is the documentation for the API calls. You can try them out right here. \n",
  "apiTitle": "Fun Generators API",
  "endpoints": 3,
  "sdkMethods": 6,
  "schemas": 0,
  "parameters": 11,
  "difficultyScore": 8.75,
  "difficulty": "Easy"
}