{
  "providerName": "vmware.local",
  "openApiRaw": "https://vdc-download.vmware.com/vmwb-repository/dcr-public/c1b5a60c-3635-4b8c-84b2-3ea54172cf31/f8595072-cedd-4f97-9b05-1720e0f41f92/vrni_api_spec.json",
  "securitySchemes": {
    "ApiKeyAuth": {
      "description": "API Key - NetworkInsight {token}",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "homepage": "vmware.local",
  "serviceName": "vrni",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/auth/token",
      "method": "delete",
      "httpMethod": "delete",
      "tag": "Authentication",
      "description": "Delete an auth token.",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/auth/token",
      "method": "create",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Create an auth token",
      "parameters": [
        {
          "name": "domain",
          "schema": "object",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches",
      "method": "listAristaSwitches",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List arista switch data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches",
      "method": "addAristaSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create an arista switch data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches/{id}",
      "method": "deleteAristaSwitch",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete an arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/arista-switches/{id}",
      "method": "getAristaSwitch",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show arista switch data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches/{id}",
      "method": "updateAristaSwitch",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update an arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches/{id}/disable",
      "method": "disableAristaSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable an arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/arista-switches/{id}/enable",
      "method": "enableAristaSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable an arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/arista-switches/{id}/snmp-config",
      "method": "getAristaSwitchSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/arista-switches/{id}/snmp-config",
      "method": "updateAristaSwitchSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for arista switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches",
      "method": "listBrocadeSwitches",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List brocade switch data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches",
      "method": "addBrocadeSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a brocade switch data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches/{id}",
      "method": "deleteBrocadeSwitch",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/brocade-switches/{id}",
      "method": "getBrocadeSwitch",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show brocade switch data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches/{id}",
      "method": "updateBrocadeSwitch",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches/{id}/disable",
      "method": "disableBrocadeSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/brocade-switches/{id}/enable",
      "method": "enableBrocadeSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/brocade-switches/{id}/snmp-config",
      "method": "getBrocadeSwitchSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/brocade-switches/{id}/snmp-config",
      "method": "updateBrocadeSwitchSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for brocade switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/checkpoint-firewalls",
      "method": "listCheckpointFirewalls",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List checkpoint firewall data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/checkpoint-firewalls",
      "method": "addCheckpointFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a checkpoint firewall",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/checkpoint-firewalls/{id}",
      "method": "deleteCheckpointFirewall",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a checkpoint firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/checkpoint-firewalls/{id}",
      "method": "getCheckpointFirewall",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show checkpoint firewall data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/checkpoint-firewalls/{id}",
      "method": "updateCheckpointFirewall",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a checkpoint firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/checkpoint-firewalls/{id}/disable",
      "method": "disableCheckpointFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a checkpoint firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/checkpoint-firewalls/{id}/enable",
      "method": "enableCheckpointFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a checkpoint firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/cisco-switches",
      "method": "listCiscoSwitches",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List cisco switch data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/cisco-switches",
      "method": "addCiscoSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a cisco switch data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/cisco-switches/{id}",
      "method": "deleteCiscoSwitch",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/cisco-switches/{id}",
      "method": "getCiscoSwitch",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show cisco switch data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/cisco-switches/{id}",
      "method": "updateCiscoSwitch",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/cisco-switches/{id}/disable",
      "method": "disableCiscoSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/cisco-switches/{id}/enable",
      "method": "enableCiscoSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/cisco-switches/{id}/snmp-config",
      "method": "getCiscoSwitchSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/cisco-switches/{id}/snmp-config",
      "method": "updateCiscoSwitchSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for cisco switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches",
      "method": "listDellSwitches",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List dell switch data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches",
      "method": "addDellSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a dell switch data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches/{id}",
      "method": "deleteDellSwitch",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/dell-switches/{id}",
      "method": "getDellSwitch",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show dell switch data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches/{id}",
      "method": "updateDellSwitch",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches/{id}/disable",
      "method": "disableDellSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/dell-switches/{id}/enable",
      "method": "enableDellSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/dell-switches/{id}/snmp-config",
      "method": "getDellSwitchSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/dell-switches/{id}/snmp-config",
      "method": "updateDellSwitchSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for dell switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpov-managers",
      "method": "listHpovManagers",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List hp oneview manager data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpov-managers",
      "method": "addHpovManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a hp oneview manager data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpov-managers/{id}",
      "method": "deleteHpovManager",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a hp oneview data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/hpov-managers/{id}",
      "method": "getHpovManager",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show hp oneview data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpov-managers/{id}",
      "method": "updateHpovManager",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a hp oneview data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpov-managers/{id}/disable",
      "method": "disableHpovManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a hp oneview data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/hpov-managers/{id}/enable",
      "method": "enableHpovManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a hp oneview data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/hpvc-managers",
      "method": "listHpvcManagers",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List hpvc manager data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpvc-managers",
      "method": "addHpvcManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a hpvc manager data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpvc-managers/{id}",
      "method": "deleteHpvcManager",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a hpvc manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/hpvc-managers/{id}",
      "method": "getHpvcManager",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show hpvc data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpvc-managers/{id}",
      "method": "updateHpvcManager",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a hpvc manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/hpvc-managers/{id}/disable",
      "method": "disableHpvcManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a hpvc manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/hpvc-managers/{id}/enable",
      "method": "enableHpvcManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a hpvc manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/juniper-switches",
      "method": "listJuniperSwitches",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List juniper switch data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/juniper-switches",
      "method": "addJuniperSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Add a juniper switch as data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/juniper-switches/{id}",
      "method": "deleteJuniperSwitch",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/juniper-switches/{id}",
      "method": "getJuniperSwitch",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show juniper switch data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/juniper-switches/{id}",
      "method": "updateJuniperSwitch",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/juniper-switches/{id}/disable",
      "method": "disableJuniperSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/juniper-switches/{id}/enable",
      "method": "enableJuniperSwitch",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/juniper-switches/{id}/snmp-config",
      "method": "getJuniperSwitchSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/juniper-switches/{id}/snmp-config",
      "method": "updateJuniperSwitchSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for a juniper switch data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers",
      "method": "listNsxvManagers",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List nsx-v manager data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers",
      "method": "addNsxvManagerDatasource",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a nsx-v manager data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers/{id}",
      "method": "deleteNsxvManager",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a nsx-v manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/nsxv-managers/{id}",
      "method": "getNsxvManager",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show nsx-v manager data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers/{id}",
      "method": "updateNsxvManager",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a nsx-v manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers/{id}/controller-cluster",
      "method": "getNsxvControllerCluster",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show nsx controller-cluster details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers/{id}/controller-cluster",
      "method": "updateNsxvControllerCluster",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update nsx controller-cluster details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "controller_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/nsxv-managers/{id}/disable",
      "method": "disableNsxvManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a nsx-v manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/nsxv-managers/{id}/enable",
      "method": "enableNsxvManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a nsx-v manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/panorama-firewalls",
      "method": "listPanoramaFirewalls",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List panorama firewall data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/panorama-firewalls",
      "method": "addPanoramaFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create panorama firewall data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/panorama-firewalls/{id}",
      "method": "deletePanoramaFirewall",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a panorama firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/panorama-firewalls/{id}",
      "method": "getPanoramaFirewall",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show panorama firewall data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/panorama-firewalls/{id}",
      "method": "updatePanoramaFirewall",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a panorama firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/panorama-firewalls/{id}/disable",
      "method": "disablePanoramaFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a panorama firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/panorama-firewalls/{id}/enable",
      "method": "enablePanoramaFirewall",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a panorama firewall data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/ucs-managers",
      "method": "listUcsManagers",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List ucs manager data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/ucs-managers",
      "method": "addUcsManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create an ucs manager data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/ucs-managers/{id}",
      "method": "deleteUcsManager",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete an ucs manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/ucs-managers/{id}",
      "method": "getUcsManager",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show ucs manager data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/ucs-managers/{id}",
      "method": "updateUcsManager",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update an ucs manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/ucs-managers/{id}/disable",
      "method": "disableUcsManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable an ucs manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/ucs-managers/{id}/enable",
      "method": "enableUcsManager",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable an ucs manager data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/ucs-managers/{id}/snmp-config",
      "method": "getUcsSnmpConfig",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show snmp config for ucs fabric interconnects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/ucs-managers/{id}/snmp-config",
      "method": "updateUcsSnmpConfig",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update snmp config for ucs fabric interconnects",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "config_snmp_2c",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_snmp_3",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snmp_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/vcenters",
      "method": "listVcenters",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "List vCenter data sources",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/vcenters",
      "method": "addVcenterDatasource",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Create a vCenter data source",
      "parameters": [],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/vcenters/{id}",
      "method": "deleteVcenter",
      "httpMethod": "delete",
      "tag": "Data Sources",
      "description": "Delete a vCenter data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/vcenters/{id}",
      "method": "getVcenter",
      "httpMethod": "get",
      "tag": "Data Sources",
      "description": "Show vCenter data source details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/vcenters/{id}",
      "method": "updateVcenter",
      "httpMethod": "put",
      "tag": "Data Sources",
      "description": "Update a vCenter data source.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/data-sources/vcenters/{id}/disable",
      "method": "disableVcenter",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Disable a vCenter data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/data-sources/vcenters/{id}/enable",
      "method": "enableVcenter",
      "httpMethod": "post",
      "tag": "Data Sources",
      "description": "Enable a vCenter data source",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/entities/clusters",
      "method": "listClusters",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List clusters",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/clusters/{id}",
      "method": "getCluster",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show cluster details",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/datastores",
      "method": "listDatastores",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List datastores",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/datastores/{id}",
      "method": "getDatastore",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show datastore details",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/distributed-virtual-portgroups",
      "method": "listDistributedVirtualPortgroups",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List distributed virtual portgroups",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/distributed-virtual-portgroups/{id}",
      "method": "getDistributedVirtualPortgroup",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show distributed virtual portgroup details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/distributed-virtual-switches",
      "method": "listDistributedVirtualSwitches",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List distributed virtual switches",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/distributed-virtual-switches/{id}",
      "method": "getDistributedVirtualSwitch",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show distributed virtual switch details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/firewall-rules",
      "method": "listFirewallRules",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List firewall rules",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/firewall-rules/{id}",
      "method": "getFirewallRule",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show firewall rule details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/firewalls",
      "method": "listFirewalls",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List firewalls",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/firewalls/{id}",
      "method": "getFirewall",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show firewall details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/flows",
      "method": "getFlows",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List flows",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/flows/{id}",
      "method": "getFlow",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show flow details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/folders",
      "method": "listFolders",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List folders",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/folders/{id}",
      "method": "getFolder",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show folder details",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/hosts",
      "method": "listHosts",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List hosts",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/hosts/{id}",
      "method": "getHost",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show host details",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/ip-sets",
      "method": "listIpSets",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List ip sets",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/ip-sets/{id}",
      "method": "getIpSet",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show ip set details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/layer2-networks",
      "method": "listLayer2Networks",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List layer2 networks",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/layer2-networks/{id}",
      "method": "getLayer2Network",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show layer2 network details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/names",
      "method": "getNames",
      "httpMethod": "post",
      "tag": "Entities",
      "description": "Get names for entities",
      "parameters": [
        {
          "name": "entities",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/names/{id}",
      "method": "getName",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Get name of an entity",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/nsx-managers",
      "method": "listNsxManagers",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List nsx managers",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/nsx-managers/{id}",
      "method": "getNsxManager",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show nsx manager details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/problems",
      "method": "listProblemEvents",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List problems",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/problems/{id}",
      "method": "getProblemEvent",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show problem details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/security-groups",
      "method": "listSecurityGroups",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List security groups",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/security-groups/{id}",
      "method": "getSecurityGroup",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show security group details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/security-tags",
      "method": "listSecurityTags",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List security tags",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/security-tags/{id}",
      "method": "getSecurityTag",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show security tag details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/service-groups",
      "method": "listServiceGroups",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List service groups",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/service-groups/{id}",
      "method": "getServiceGroup",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show service group details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/services",
      "method": "listServices",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List services",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/services/{id}",
      "method": "getService",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show service details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vc-datacenters",
      "method": "listDatacenters",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List vCenter datacenters",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vc-datacenters/{id}",
      "method": "getDatacenter",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show vCenter datacenter details",
      "parameters": [
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vcenter-managers",
      "method": "listVcenterManagers",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List vCenter managers",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vcenter-managers/{id}",
      "method": "getVcenterManager",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show vCenter manager details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vmknics",
      "method": "listVmknics",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List vmknics",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vmknics/{id}",
      "method": "getVmknic",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show vmknic details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vms",
      "method": "listVms",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List vms",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vms/{id}",
      "method": "getVm",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show vm details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vnics",
      "method": "listVnics",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "List vnics",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/entities/vnics/{id}",
      "method": "getVnic",
      "httpMethod": "get",
      "tag": "Entities",
      "description": "Show vnic details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "time",
          "schema": "integer",
          "required": false,
          "description": "time in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications",
      "method": "listApplications",
      "httpMethod": "get",
      "tag": "Applications",
      "description": "List applications",
      "parameters": [
        {
          "name": "size",
          "schema": "number",
          "required": false,
          "description": "page size of results"
        },
        {
          "name": "cursor",
          "schema": "string",
          "required": false,
          "description": "cursor from previous response"
        },
        {
          "name": "start_time",
          "schema": "number",
          "required": false,
          "description": "start time for query in epoch seconds"
        },
        {
          "name": "end_time",
          "schema": "number",
          "required": false,
          "description": "end time for query in epoch seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications",
      "method": "addApplication",
      "httpMethod": "post",
      "tag": "Applications",
      "description": "Create an application",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications/{id}",
      "method": "deleteApplication",
      "httpMethod": "delete",
      "tag": "Applications",
      "description": "Delete an application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/applications/{id}",
      "method": "getApplication",
      "httpMethod": "get",
      "tag": "Applications",
      "description": "Show application details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications/{id}/tiers",
      "method": "listApplicationTiers",
      "httpMethod": "get",
      "tag": "Applications",
      "description": "List tiers of an application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications/{id}/tiers",
      "method": "addTier",
      "httpMethod": "post",
      "tag": "Applications",
      "description": "Create tier in application",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "group_membership_criteria",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/applications/{id}/tiers/{tier-id}",
      "method": "deleteTier",
      "httpMethod": "delete",
      "tag": "Applications",
      "description": "Delete tier",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "tier-id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/groups/applications/{id}/tiers/{tier-id}",
      "method": "getApplicationTier",
      "httpMethod": "get",
      "tag": "Applications",
      "description": "Show tier details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        },
        {
          "name": "tier-id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/groups/tiers/{tier-id}",
      "method": "getTier",
      "httpMethod": "get",
      "tag": "Applications",
      "description": "Show tier details",
      "parameters": [
        {
          "name": "tier-id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Authorization Header"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/info/version",
      "method": "getVersion",
      "httpMethod": "get",
      "tag": "Info",
      "description": "Show version info",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/infra/nodes",
      "method": "listNodes",
      "httpMethod": "get",
      "tag": "Infrastructure",
      "description": "List nodes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/infra/nodes/{id}",
      "method": "getNode",
      "httpMethod": "get",
      "tag": "Infrastructure",
      "description": "Show node details",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "entity id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/micro-seg/recommended-rules",
      "method": "listRecommendedRules",
      "httpMethod": "post",
      "tag": "Microsegmentation",
      "description": "Get logical recommended rules",
      "parameters": [
        {
          "name": "group_1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "group_2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "time_range",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/micro-seg/recommended-rules/nsx",
      "method": "exportNsxRecommendedRules",
      "httpMethod": "post",
      "tag": "Microsegmentation",
      "description": "Export recommended rules for NSX-V",
      "parameters": [
        {
          "name": "group_1",
          "schema": "object",
          "description": ""
        },
        {
          "name": "group_2",
          "schema": "object",
          "description": ""
        },
        {
          "name": "time_range",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/search",
      "method": "searchEntities",
      "httpMethod": "post",
      "tag": "Search",
      "description": "Search entities",
      "parameters": [
        {
          "name": "cursor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "entity_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sort_by",
          "schema": "object",
          "description": ""
        },
        {
          "name": "time_range",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "http://vmware.local",
  "apiDescription": "vRealize Network Insight API Reference",
  "apiTitle": "vRealize Network Insight API Reference",
  "endpoints": 113,
  "sdkMethods": 161,
  "schemas": 138,
  "parameters": 268,
  "difficultyScore": 297,
  "difficulty": "Hard"
}