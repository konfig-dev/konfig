{
  "providerName": "dracoon.team",
  "openApiRaw": "https://dracoon.team/api/spec_v4/",
  "securitySchemes": {
    "oauth2": {
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "/oauth/authorize",
          "scopes": {
            "all": "every operation is allowed"
          },
          "tokenUrl": "/oauth/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "dracoon.team",
  "apiVersion": "4.42.3",
  "methods": [
    {
      "url": "/v4/auth/login",
      "method": "login",
      "httpMethod": "post",
      "tag": "auth",
      "description": "Authenticate user (Login)",
      "parameters": [
        {
          "name": "authType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Authentication token"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "RADIUS challenge reply"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/openid/login",
      "method": "initiateOpenIdLogin",
      "httpMethod": "get",
      "tag": "auth",
      "description": "Initiate OpenID Connect authentication",
      "parameters": [
        {
          "name": "issuer",
          "schema": "string",
          "required": true,
          "description": "Issuer identifier of the OpenID Connect identity provider"
        },
        {
          "name": "redirectUri",
          "schema": "string",
          "required": true,
          "description": "Redirect URI to complete the OpenID Connect authentication"
        },
        {
          "name": "language",
          "schema": "string",
          "required": true,
          "description": "Language ID or ISO 639-1 code"
        },
        {
          "name": "test",
          "schema": "boolean",
          "required": true,
          "description": "Flag to test the authentication parameters.\n\nIf the request is valid, the API will respond with `204 No Content`."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/openid/login",
      "method": "completeOpenIdLogin",
      "httpMethod": "post",
      "tag": "auth",
      "description": "Complete OpenID Connect authentication",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Authorization code"
        },
        {
          "name": "idToken",
          "schema": "string",
          "required": false,
          "description": "Identity token"
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": "Authentication state"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Authentication token"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/ping",
      "method": "ping",
      "httpMethod": "get",
      "tag": "auth",
      "description": "Ping",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/recover_username",
      "method": "recoverUserName",
      "httpMethod": "post",
      "tag": "auth",
      "description": "Recover username",
      "parameters": [
        {
          "name": "creatorLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/reset_password",
      "method": "requestPasswordReset",
      "httpMethod": "post",
      "tag": "auth",
      "description": "Request password reset",
      "parameters": [
        {
          "name": "creatorLanguage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/reset_password/{token}",
      "method": "validateResetPasswordToken",
      "httpMethod": "get",
      "tag": "auth",
      "description": "Validate information for password reset",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Password reset token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Password reset information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/auth/reset_password/{token}",
      "method": "resetPassword",
      "httpMethod": "put",
      "tag": "auth",
      "description": "Reset password",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Password reset token"
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/defaults",
      "method": "requestSystemDefaultsInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request default values",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System defaults"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/general",
      "method": "requestGeneralSettingsInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request general settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "General settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/infrastructure",
      "method": "requestInfrastructurePropertiesInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request infrastructure properties",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Infrastructure properties"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/notifications/channels",
      "method": "requestNotificationChannelsInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request list of notification channels",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of notification channels"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/policies/algorithms",
      "method": "requestAlgorithms",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request algorithms",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Information of all available algorithms"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/policies/classifications",
      "method": "requestClassificationPoliciesConfigInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request classification policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of classification policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/policies/guest_users",
      "method": "requestGuestUsersPoliciesConfigInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request guest users policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of guest user policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/policies/passwords",
      "method": "requestPasswordPoliciesConfigInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request password policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of password policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/product_packages",
      "method": "requestProductPackages",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request list of product packages",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ProductPackageResponseList"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/product_packages/current",
      "method": "requestCurrentProductPackages",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request list of currently enabled product packages",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ProductPackageResponseList"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/info/s3_tags",
      "method": "requestS3TagsInfo",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request list of configured S3 tags",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of S3 tags"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/settings",
      "method": "requestSystemSettings",
      "httpMethod": "get",
      "tag": "config",
      "description": "Request system settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of key-value pairs"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/config/settings",
      "method": "updateSystemSettings",
      "httpMethod": "put",
      "tag": "config",
      "description": "Update system settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/downloads/avatar/{user_id}/{uuid}",
      "method": "downloadAvatar",
      "httpMethod": "get",
      "tag": "downloads",
      "description": "Download avatar",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "UUID of the avatar"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/downloads/zip/{token}",
      "method": "downloadZipArchiveViaToken",
      "httpMethod": "get",
      "tag": "downloads",
      "description": "Download ZIP archive",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Download token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/downloads/{token}",
      "method": "downloadFileViaToken",
      "httpMethod": "get",
      "tag": "downloads",
      "description": "Download file",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Download token"
        },
        {
          "name": "range",
          "schema": "string",
          "required": false,
          "description": "Range \n\ne.g. `bytes=0-999`"
        },
        {
          "name": "genericMimetype",
          "schema": "boolean",
          "required": false,
          "description": "Always return `application/octet-stream` instead of specific mimetype"
        },
        {
          "name": "inline",
          "schema": "boolean",
          "required": false,
          "description": "Use Content-Disposition: `inline` instead of `attachment`"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "416",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/downloads/{token}",
      "method": "downloadFileViaToken1",
      "httpMethod": "head",
      "tag": "downloads",
      "description": "Download file",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Download token"
        },
        {
          "name": "range",
          "schema": "string",
          "required": false,
          "description": "Range \n\ne.g. `bytes=0-999`"
        },
        {
          "name": "genericMimetype",
          "schema": "boolean",
          "required": false,
          "description": "Always return `application/octet-stream` instead of specific mimetype"
        },
        {
          "name": "inline",
          "schema": "boolean",
          "required": false,
          "description": "Use Content-Disposition: `inline` instead of `attachment`"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "416",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/eventlog/audits/node_info",
      "method": "requestAuditNodeInfo",
      "httpMethod": "get",
      "tag": "eventlog",
      "description": "Request nodes",
      "parameters": [
        {
          "name": "parentId",
          "schema": "integer",
          "required": false,
          "description": "Parent node ID.\n\nOnly rooms can be parents.\n\nParent ID `0` or empty is the root node."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/eventlog/audits/nodes",
      "method": "requestAuditNodeUserData",
      "httpMethod": "get",
      "tag": "eventlog",
      "description": "Request node assigned users with permissions",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/eventlog/events",
      "method": "requestLogEventsAsJson",
      "httpMethod": "get",
      "tag": "eventlog",
      "description": "Request system events",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "dateStart",
          "schema": "string",
          "required": false,
          "description": "Filter events from given date \n\ne.g. `2015-12-31T23:59:00`"
        },
        {
          "name": "dateEnd",
          "schema": "string",
          "required": false,
          "description": "Filter events until given date \n\ne.g. `2015-12-31T23:59:00`"
        },
        {
          "name": "type",
          "schema": "integer",
          "required": false,
          "description": "Operation ID \n\ncf. `GET /eventlog/operations`"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID"
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Operation status:\n\n* `0` - Success\n\n* `2` - Error"
        },
        {
          "name": "userClient",
          "schema": "string",
          "required": false,
          "description": "User client"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of log events"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/eventlog/operations",
      "method": "requestLogOperations",
      "httpMethod": "get",
      "tag": "eventlog",
      "description": "Request allowed Log Operations",
      "parameters": [
        {
          "name": "isDeprecated",
          "schema": "boolean",
          "required": false,
          "description": "Show only deprecated operations"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of log operations"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups",
      "method": "requestGroups",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request list of user groups",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups",
      "method": "createGroup",
      "httpMethod": "post",
      "tag": "groups",
      "description": "Create new user group",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Group information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}",
      "method": "removeGroup",
      "httpMethod": "delete",
      "tag": "groups",
      "description": "Remove user group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}",
      "method": "requestGroup",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request user group",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Group information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}",
      "method": "updateGroup",
      "httpMethod": "put",
      "tag": "groups",
      "description": "Update user group's metadata",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "expiration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Group information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/last_admin_rooms",
      "method": "requestLastAdminRoomsGroups",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request rooms where the group is defined as last admin group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of (last admin group) rooms"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/roles",
      "method": "requestGroupRoles",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request list of roles assigned to the group",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of roles"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/rooms",
      "method": "requestGroupRooms",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request rooms granted to the group or / and rooms that can be granted",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of rooms"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/users",
      "method": "removeGroupMembers",
      "httpMethod": "delete",
      "tag": "groups",
      "description": "Remove group members",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Group information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/users",
      "method": "requestGroupMembers",
      "httpMethod": "get",
      "tag": "groups",
      "description": "Request group member users or / and users who can become a member",
      "parameters": [
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/groups/{group_id}/users",
      "method": "addGroupMembers",
      "httpMethod": "post",
      "tag": "groups",
      "description": "Add group members",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "groupId",
          "schema": "integer",
          "required": true,
          "description": "Group ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Group information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/internal/tenant/subscription_plan",
      "method": "internalRequestSubscriptionPlan",
      "httpMethod": "get",
      "tag": "internal",
      "description": "Request subscription plan",
      "parameters": [
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "required": true,
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/internal/tenant/subscription_plan",
      "method": "internalSetSubscriptionPlan",
      "httpMethod": "put",
      "tag": "internal",
      "description": "Set subscription plan",
      "parameters": [
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "required": true,
          "description": "Service Authentication token"
        },
        {
          "name": "subscriptionPlanId",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes",
      "method": "removeNodes",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Remove nodes",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "nodeIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes",
      "method": "requestNodes",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of nodes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "depthLevel",
          "schema": "integer",
          "required": false,
          "description": "* `0` - top level nodes only\n\n* `n` (any positive number) - include `n` levels starting from the current node"
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": false,
          "description": "Parent node ID.\n\nOnly rooms and folders can be parents.\n\nParent ID `0` or empty is the root node."
        },
        {
          "name": "roomManager",
          "schema": "boolean",
          "required": false,
          "description": "Show all rooms for management perspective.\n\nOnly possible for _Rooms Managers_ / _Room Admins_.\n\nFor all other users, it will be ignored."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/comments/{comment_id}",
      "method": "removeNodeComment",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Remove node comment",
      "parameters": [
        {
          "name": "commentId",
          "schema": "integer",
          "required": true,
          "description": "Comment ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/comments/{comment_id}",
      "method": "updateNodeComment",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Edit node comment",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "commentId",
          "schema": "integer",
          "required": true,
          "description": "Comment ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "text",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node comment information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/deleted_nodes",
      "method": "removeDeletedNodes",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Remove nodes from recycle bin",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "deletedNodeIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/deleted_nodes/actions/restore",
      "method": "restoreNodes",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Restore deleted nodes",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "deletedNodeIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/deleted_nodes/{deleted_node_id}",
      "method": "requestDeletedNode",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request deleted node",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "deletedNodeId",
          "schema": "integer",
          "required": true,
          "description": "Deleted node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Deleted node information (Deleted node can be a folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/favorites",
      "method": "updateFavorites",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Mark or unmark a list of nodes (room, folder or file) as favorite",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isFavorite",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files",
      "method": "updateFiles",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Updates a list of  file’s metadata",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "classification",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/keys",
      "method": "setUserFileKeys",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Set file keys for a list of users and files",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads",
      "method": "createFileUploadChannel",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Create new file upload channel",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "classification",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "directS3Upload",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Upload channel information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}",
      "method": "cancelFileUpload",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Cancel file upload",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}",
      "method": "requestUploadStatusFiles",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request status of S3 file upload",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "S3 file upload status information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}",
      "method": "uploadFileAsMultipart",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Upload file",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "contentRange",
          "schema": "string",
          "required": false,
          "description": "Content-Range \n\ne.g. `bytes 0-999/3980`"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Chunk upload response"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}",
      "method": "completeFileUpload",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Complete file upload",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "fileKey",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userFileKeyList",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "202",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}/s3",
      "method": "completeS3FileUpload",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Complete S3 file upload",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "fileKey",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "parts",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/uploads/{upload_id}/s3_urls",
      "method": "generatePresignedUrlsFiles",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Generate presigned URLs for S3 file upload",
      "parameters": [
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "firstPartNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "lastPartNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List of generated presigned URLs"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/versions/{reference_id}",
      "method": "requestFileVersionList",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of file versions",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "referenceId",
          "schema": "integer",
          "required": true,
          "description": "Reference ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of File Versions"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/{file_id}",
      "method": "updateFile",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Updates a file’s metadata",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "File ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "classification",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/{file_id}/data_room_file_key",
      "method": "requestRoomRescueKey",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request room rescue key",
      "parameters": [
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "File ID"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File key information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/{file_id}/data_space_file_key",
      "method": "requestSystemRescueKey",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request system rescue key",
      "parameters": [
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "File ID"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File key information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/{file_id}/downloads",
      "method": "generateDownloadUrl",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Generate download URL",
      "parameters": [
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "File ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download URL"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/files/{file_id}/user_file_key",
      "method": "requestUserFileKey",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request user's file key",
      "parameters": [
        {
          "name": "fileId",
          "schema": "integer",
          "required": true,
          "description": "File ID"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "File key information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/folders",
      "method": "createFolder",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Create new folder",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "classification",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/folders/{folder_id}",
      "method": "updateFolder",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Updates folder’s metadata",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "folderId",
          "schema": "integer",
          "required": true,
          "description": "Folder ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "classification",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/missingFileKeys",
      "method": "requestMissingFileKeys",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request files without user's file key",
      "parameters": [
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": false,
          "description": "Room ID"
        },
        {
          "name": "fileId",
          "schema": "integer",
          "required": false,
          "description": "File ID"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID"
        },
        {
          "name": "useKey",
          "schema": "string",
          "required": false,
          "description": "Determines which key should be used (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Missing keys information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms",
      "method": "createRoom",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Create new room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "adminGroupIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "adminIds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "classification",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hasActivitiesLog",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hasRecycleBin",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "inheritPermissions",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "newGroupMemberAcceptance",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "quota",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "recycleBinRetentionPeriod",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/pending",
      "method": "requestPendingAssignments",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request user-room assignments per group",
      "parameters": [
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of pending assignments"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/pending",
      "method": "changePendingAssignments",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Handle user-room assignments per group",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}",
      "method": "updateRoom",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Updates room’s metadata",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quota",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/config",
      "method": "configureRoom",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Configure room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "adminGroupIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "adminIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "classification",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "hasActivitiesLog",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "inheritPermissions",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "newGroupMemberAcceptance",
          "schema": "string",
          "description": ""
        },
        {
          "name": "recycleBinRetentionPeriod",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "takeOverPermissions",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/encrypt",
      "method": "encryptRoom",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Encrypt room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "dataRoomRescueKey",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "isEncrypted",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "useDataSpaceRescueKey",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/events",
      "method": "requestRoomActivitiesLogAsJson",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request events of a room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "dateStart",
          "schema": "string",
          "required": false,
          "description": "Filter events from given date \n\ne.g. `2015-12-31T23:59:00`"
        },
        {
          "name": "dateEnd",
          "schema": "string",
          "required": false,
          "description": "Filter events until given date \n\ne.g. `2015-12-31T23:59:00`"
        },
        {
          "name": "type",
          "schema": "integer",
          "required": false,
          "description": "Operation ID \n\ncf. `GET /eventlog/operations`"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": false,
          "description": "User ID"
        },
        {
          "name": "status",
          "schema": "integer",
          "required": false,
          "description": "Operation status:\n\n* `0` - Success\n\n* `2` - Error"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of log events"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/groups",
      "method": "revokeRoomGroups",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Revoke granted group(s) from room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/groups",
      "method": "requestRoomGroups",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request room granted group(s) or / and group(s) that can be granted",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/groups",
      "method": "updateRoomGroups",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Add or change room granted group(s)",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/guest_users",
      "method": "addRoomGuestUsers",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Add guest users to a room",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "roomGuestInvitations",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/keypair",
      "method": "removeRoomRescueKeyPair",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Remove rooms's rescue key pair",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/keypair",
      "method": "requestRoomRescueKeyPair",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request room rescue key",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Key pair container"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/keypair",
      "method": "setRoomRescueKeyPair",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Set room's rescue key pair",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/keypairs",
      "method": "requestRoomRescueKeyPairs",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request all room rescue key pairs",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/keypairs",
      "method": "createAndPreserveRoomRescueKeyPair",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Create key pair and preserve copy of old private key",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "previousPrivateKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/policies",
      "method": "requestRoomPolicies",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request Room Policies",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Room Polices"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/policies",
      "method": "setRoomPolicies",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Set room policies",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "defaultExpirationPeriod",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/s3_tags",
      "method": "requestRoomS3Tags",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of all assigned S3 tags to the room",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of S3 tags"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/s3_tags",
      "method": "setRoomS3Tags",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Set S3 tags for a room",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List of S3 tags"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/users",
      "method": "revokeRoomUsers",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Revoke granted user(s) from room",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/users",
      "method": "requestRoomUsers",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request room granted user(s) or / and user(s) that can be granted",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/users",
      "method": "updateRoomUsers",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Add or change room granted user(s)",
      "parameters": [
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/webhooks",
      "method": "requestListOfWebhooksForRoom",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of webhooks that are assigned or can be assigned to this room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webhooks"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/rooms/{room_id}/webhooks",
      "method": "handleRoomWebhookAssignments",
      "httpMethod": "put",
      "tag": "nodes",
      "description": "Assign or unassign webhooks to room",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "roomId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webhooks"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/search",
      "method": "searchNodes",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Search nodes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "searchString",
          "schema": "string",
          "required": true,
          "description": "Search string"
        },
        {
          "name": "depthLevel",
          "schema": "integer",
          "required": false,
          "description": "* `0` - top level nodes only (default)\n\n* `-1` - full tree\n\n* `n` (any positive number) - include `n` levels starting from the current node"
        },
        {
          "name": "parentId",
          "schema": "integer",
          "required": false,
          "description": "Parent node ID.\n\nOnly rooms and folders can be parents.\n\nParent ID `0` or empty is the root node."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/zip",
      "method": "generateDownloadUrlForZipArchive",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Generate download URL for ZIP download",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "nodeIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download URL"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/zip/download",
      "method": "downloadZipArchive",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Download files / folders as ZIP archive",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "nodeIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}",
      "method": "removeNode",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Remove node",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}",
      "method": "requestNode",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request node",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/comments",
      "method": "requestNodeComments",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of node comments",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "hideDeleted",
          "schema": "boolean",
          "required": false,
          "description": "Hide deleted comments (default: false)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of node comments"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/comments",
      "method": "createNodeComment",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Create node comment",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "text",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node comment information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/copy_to",
      "method": "copyNodes",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Copy node(s)",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Target parent node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "nodeIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/deleted_nodes",
      "method": "emptyDeletedNodes",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Empty recycle bin",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Room ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/deleted_nodes",
      "method": "requestDeletedNodesSummary",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of deleted nodes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Parent ID (can only be a room ID)"
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of deleted nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/deleted_nodes/versions",
      "method": "requestDeletedNodeVersions",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request deleted versions of nodes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Parent ID (room or folder ID)"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "Node type"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": "Node name"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of deleted versions of nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/favorite",
      "method": "removeFavorite",
      "httpMethod": "delete",
      "tag": "nodes",
      "description": "Unmark a node (room, folder or file) as favorite",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/favorite",
      "method": "addFavorite",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Mark a node (room, folder or file) as favorite",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/move_to",
      "method": "moveNodes",
      "httpMethod": "post",
      "tag": "nodes",
      "description": "Move node(s)",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Target parent node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "nodeIds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "204",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/nodes/{node_id}/parents",
      "method": "requestNodeParents",
      "httpMethod": "get",
      "tag": "nodes",
      "description": "Request list of parent nodes",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of parent nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers",
      "method": "requestCustomers",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request list of customers",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "includeAttributes",
          "schema": "boolean",
          "required": false,
          "description": "Include custom customer attributes."
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of customers"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers",
      "method": "createCustomer",
      "httpMethod": "post",
      "tag": "provisioning",
      "description": "Create customer",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "activationCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "companyName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customerAttributes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "customerContractType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstAdminUser",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "isLocked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lockStatus",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "providerCustomerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quotaMax",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "trialDays",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "userMax",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "webhooksMax",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}",
      "method": "removeCustomer",
      "httpMethod": "delete",
      "tag": "provisioning",
      "description": "Remove customer",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}",
      "method": "requestCustomer",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Get customer",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "includeAttributes",
          "schema": "boolean",
          "required": false,
          "description": "Include custom customer attributes."
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}",
      "method": "updateCustomer",
      "httpMethod": "put",
      "tag": "provisioning",
      "description": "Update customer",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "companyName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "customerContractType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isLocked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lockStatus",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "providerCustomerId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quotaMax",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "userMax",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "webhooksMax",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}/customerAttributes",
      "method": "requestCustomerAttributes",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request customer attributes",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Ranged list of attributes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}/customerAttributes",
      "method": "setCustomerAttributes",
      "httpMethod": "post",
      "tag": "provisioning",
      "description": "Set customer attributes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}/customerAttributes",
      "method": "updateCustomerAttributes",
      "httpMethod": "put",
      "tag": "provisioning",
      "description": "Add or edit customer attributes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}/customerAttributes/{key}",
      "method": "removeCustomerAttribute",
      "httpMethod": "delete",
      "tag": "provisioning",
      "description": "Remove customer attribute",
      "parameters": [
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Key"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/customers/{customer_id}/users",
      "method": "requestCustomerUsers",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request list of customer users",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "customerId",
          "schema": "integer",
          "required": true,
          "description": "Customer ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "includeAttributes",
          "schema": "boolean",
          "required": false,
          "description": "Include custom user attributes."
        },
        {
          "name": "includeRoles",
          "schema": "boolean",
          "required": false,
          "description": "Include roles"
        },
        {
          "name": "includeManageableRooms",
          "schema": "boolean",
          "required": false,
          "description": "Include hasManageableRooms (deprecated)"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks",
      "method": "requestListOfTenantWebhooks",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request list of tenant webhooks",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webhooks"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks",
      "method": "createTenantWebhook",
      "httpMethod": "post",
      "tag": "provisioning",
      "description": "Create tenant webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "eventTypeNames",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "triggerExampleEvent",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks/event_types",
      "method": "requestListOfEventTypesForTenant",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request list of event types",
      "parameters": [
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of event types"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks/{webhook_id}",
      "method": "removeTenantWebhook",
      "httpMethod": "delete",
      "tag": "provisioning",
      "description": "Remove tenant webhook",
      "parameters": [
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks/{webhook_id}",
      "method": "requestTenantWebhook",
      "httpMethod": "get",
      "tag": "provisioning",
      "description": "Request tenant webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks/{webhook_id}",
      "method": "updateTenantWebhook",
      "httpMethod": "put",
      "tag": "provisioning",
      "description": "Update tenant webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        },
        {
          "name": "eventTypeNames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "triggerExampleEvent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/provisioning/webhooks/{webhook_id}/reset_lifetime",
      "method": "resetTenantWebhookLifetime",
      "httpMethod": "post",
      "tag": "provisioning",
      "description": "Reset tenant webhook lifetime",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsServiceToken",
          "schema": "string",
          "description": "Service Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/downloads/{access_key}",
      "method": "requestPublicDownloadShareInfo",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request public Download Share information",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/downloads/{access_key}",
      "method": "checkPublicDownloadSharePassword",
      "httpMethod": "head",
      "tag": "public",
      "description": "Check public Download Share password",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": "Download share password"
        }
      ],
      "responses": []
    },
    {
      "url": "/v4/public/shares/downloads/{access_key}",
      "method": "generateDownloadUrlPublic",
      "httpMethod": "post",
      "tag": "public",
      "description": "Generate download URL",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Download URL"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/downloads/{access_key}/{token}",
      "method": "downloadFileViaTokenPublic",
      "httpMethod": "get",
      "tag": "public",
      "description": "Download file with token",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Download token"
        },
        {
          "name": "range",
          "schema": "string",
          "required": false,
          "description": "Range \n\ne.g. `bytes=0-999`"
        },
        {
          "name": "genericMimetype",
          "schema": "boolean",
          "required": false,
          "description": "Always return `application/octet-stream` instead of specific mimetype"
        },
        {
          "name": "inline",
          "schema": "boolean",
          "required": false,
          "description": "Use Content-Disposition: `inline` instead of `attachment`"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "416",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/downloads/{access_key}/{token}",
      "method": "downloadFileViaTokenPublic1",
      "httpMethod": "head",
      "tag": "public",
      "description": "Download file with token",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Download token"
        },
        {
          "name": "range",
          "schema": "string",
          "required": false,
          "description": "Range \n\ne.g. `bytes=0-999`"
        },
        {
          "name": "genericMimetype",
          "schema": "boolean",
          "required": false,
          "description": "Always return `application/octet-stream` instead of specific mimetype"
        },
        {
          "name": "inline",
          "schema": "boolean",
          "required": false,
          "description": "Use Content-Disposition: `inline` instead of `attachment`"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "416",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}",
      "method": "requestPublicUploadShareInfo",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request public Upload Share information",
      "parameters": [
        {
          "name": "xSdsSharePassword",
          "schema": "string",
          "description": "Upload share password. Should be base64-encoded.\n\nPlain X-Sds-Share-Passwords are *deprecated* and will be removed in the future"
        },
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Upload Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}",
      "method": "createShareUploadChannel",
      "httpMethod": "post",
      "tag": "public",
      "description": "Create new file upload channel",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "directS3Upload",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampCreation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timestampModification",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Upload channel information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}",
      "method": "cancelFileUploadViaShare",
      "httpMethod": "delete",
      "tag": "public",
      "description": "Cancel file upload",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}",
      "method": "requestUploadStatusPublic",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request status of S3 file upload",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "S3 file upload status information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}",
      "method": "uploadFileAsMultipartPublic1",
      "httpMethod": "post",
      "tag": "public",
      "description": "Upload file",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "contentRange",
          "schema": "string",
          "required": false,
          "description": "Content-Range \n\ne.g. `bytes 0-999/3980`"
        },
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Chunk upload response"
        },
        {
          "statusCode": "201",
          "description": "Chunk upload response"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}",
      "method": "completeFileUploadViaShare",
      "httpMethod": "put",
      "tag": "public",
      "description": "Complete file upload",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "items",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "File information"
        },
        {
          "statusCode": "202",
          "description": "File information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}/s3",
      "method": "completeS3FileUploadViaShare",
      "httpMethod": "put",
      "tag": "public",
      "description": "Complete S3 file upload",
      "parameters": [
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "parts",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "userFileKeyList",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/shares/uploads/{access_key}/{upload_id}/s3_urls",
      "method": "generatePresignedUrlsPublic",
      "httpMethod": "post",
      "tag": "public",
      "description": "Generate presigned URLs for S3 file upload",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": "Access key"
        },
        {
          "name": "uploadId",
          "schema": "string",
          "required": true,
          "description": "Upload channel ID"
        },
        {
          "name": "firstPartNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "lastPartNumber",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "List of generated presigned URLs"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "504",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/software/third_party_dependencies",
      "method": "requestThirdPartyDependencies",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request third-party software dependencies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/software/version",
      "method": "requestSoftwareVersion",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request software version information",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Software version information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/system/info",
      "method": "requestSystemInfo",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request system information",
      "parameters": [
        {
          "name": "isEnabled",
          "schema": "boolean",
          "required": false,
          "description": "Show only enabled authentication methods"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System information (default language and authentication methods)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/system/info/auth/ad",
      "method": "requestActiveDirectoryAuthInfo",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request Active Directory authentication information",
      "parameters": [
        {
          "name": "isGlobalAvailable",
          "schema": "boolean",
          "required": false,
          "description": "Show only global available items"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Active Directories"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/system/info/auth/openid",
      "method": "requestOpenIdAuthInfo",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request OpenID Connect provider authentication information",
      "parameters": [
        {
          "name": "isGlobalAvailable",
          "schema": "boolean",
          "required": false,
          "description": "Show only global available items"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of OpenID Connect providers"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/public/time",
      "method": "requestSystemTime",
      "httpMethod": "get",
      "tag": "public",
      "description": "Request system time",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "DRACOON server time"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/resources/user/notifications/scopes",
      "method": "requestSubscriptionScopes",
      "httpMethod": "get",
      "tag": "resources",
      "description": "Request list of subscription scopes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of notification scopes"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/resources/users/{user_id}/avatar/{uuid}",
      "method": "requestUserAvatar",
      "httpMethod": "get",
      "tag": "resources",
      "description": "Request user avatar",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "UUID of the avatar"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User avatar information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles",
      "method": "requestRoles",
      "httpMethod": "get",
      "tag": "roles",
      "description": "Request all roles with assigned rights",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of roles"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/groups",
      "method": "revokeRoleGroups",
      "httpMethod": "delete",
      "tag": "roles",
      "description": "Revoke granted role from group(s)",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/groups",
      "method": "requestRoleGroups",
      "httpMethod": "get",
      "tag": "roles",
      "description": "Request groups with specific role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/groups",
      "method": "addRoleGroups",
      "httpMethod": "post",
      "tag": "roles",
      "description": "Assign group(s) to the role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/users",
      "method": "revokeRoleUsers",
      "httpMethod": "delete",
      "tag": "roles",
      "description": "Revoke granted role from user(s)",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/users",
      "method": "requestRoleUsers",
      "httpMethod": "get",
      "tag": "roles",
      "description": "Request users with specific role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/roles/{role_id}/users",
      "method": "addRoleUsers",
      "httpMethod": "post",
      "tag": "roles",
      "description": "Assign user(s) to the role",
      "parameters": [
        {
          "name": "roleId",
          "schema": "integer",
          "required": true,
          "description": "Role ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users with assigned role"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings",
      "method": "requestSettings",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request customer settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings",
      "method": "setSettings",
      "httpMethod": "put",
      "tag": "settings",
      "description": "Set customer settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "homeRoomParentName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "homeRoomQuota",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "homeRoomsActive",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer settings"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/keypair",
      "method": "removeSystemRescueKeyPair",
      "httpMethod": "delete",
      "tag": "settings",
      "description": "Remove system rescue key pair",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/keypair",
      "method": "requestSystemRescueKeyPair",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request system rescue key pair",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Key pair container"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/keypair",
      "method": "setSystemRescueKeyPair",
      "httpMethod": "post",
      "tag": "settings",
      "description": "Activate client-side encryption for customer",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/keypairs",
      "method": "requestAllSystemRescueKeyPairs",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request all system rescue key pairs",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/keypairs",
      "method": "createAndPreserveKeyPair",
      "httpMethod": "post",
      "tag": "settings",
      "description": "Create system rescue key pair and preserve copy of old private key",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "previousPrivateKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/notifications/channels",
      "method": "requestNotificationChannels",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request list of notification channels",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of notification channels"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/notifications/channels",
      "method": "toggleNotificationChannels",
      "httpMethod": "put",
      "tag": "settings",
      "description": "Toggle notification channels",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "channelId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of notification channels"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks",
      "method": "requestListOfWebhooks",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request list of webhooks",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of webhooks"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks",
      "method": "createWebhook",
      "httpMethod": "post",
      "tag": "settings",
      "description": "Create webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "eventTypeNames",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "triggerExampleEvent",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks/event_types",
      "method": "requestListOfEventTypesForConfigManager",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request list of event types",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of event types"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks/{webhook_id}",
      "method": "removeWebhook",
      "httpMethod": "delete",
      "tag": "settings",
      "description": "Remove webhook",
      "parameters": [
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks/{webhook_id}",
      "method": "requestWebhook",
      "httpMethod": "get",
      "tag": "settings",
      "description": "Request webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks/{webhook_id}",
      "method": "updateWebhook",
      "httpMethod": "put",
      "tag": "settings",
      "description": "Update webhook",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "eventTypeNames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "triggerExampleEvent",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/settings/webhooks/{webhook_id}/reset_lifetime",
      "method": "resetWebhookLifetime",
      "httpMethod": "post",
      "tag": "settings",
      "description": "Reset webhook lifetime",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "webhookId",
          "schema": "integer",
          "required": true,
          "description": "Webhook ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Webhook information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads",
      "method": "deleteDownloadShares",
      "httpMethod": "delete",
      "tag": "shares",
      "description": "Remove Download Shares",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "shareIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads",
      "method": "requestDownloadShares",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request list of Download Shares",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Download Shares"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads",
      "method": "createDownloadShare",
      "httpMethod": "post",
      "tag": "shares",
      "description": "Create new Download Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "creatorLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "fileKey",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "internalNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "keyPair",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mailBody",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailRecipients",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailSubject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDownloads",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notifyCreator",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendMail",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sendSms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "smsRecipients",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "textMessageRecipients",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Download Share information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads",
      "method": "updateDownloadShares",
      "httpMethod": "put",
      "tag": "shares",
      "description": "Update a list of Download Shares",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "maxDownloads",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "resetMaxDownloads",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads/{share_id}",
      "method": "removeDownloadShare",
      "httpMethod": "delete",
      "tag": "shares",
      "description": "Remove Download Share",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads/{share_id}",
      "method": "requestDownloadShare",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request Download Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads/{share_id}",
      "method": "updateDownloadShare",
      "httpMethod": "put",
      "tag": "shares",
      "description": "Update Download Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "defaultCountry",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "internalNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maxDownloads",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notifyCreator",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "resetMaxDownloads",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resetPassword",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "textMessageRecipients",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download Share information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads/{share_id}/email",
      "method": "sendDownloadShareLinkViaEmail",
      "httpMethod": "post",
      "tag": "shares",
      "description": "Send an existing Download Share link via email",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/downloads/{share_id}/qr",
      "method": "requestDownloadShareQr",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request Download Share via QR Code",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Download Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads",
      "method": "deleteUploadShares",
      "httpMethod": "delete",
      "tag": "shares",
      "description": "Remove Upload Shares",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "shareIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads",
      "method": "requestUploadShares",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request list of Upload Shares",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Upload Shares"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads",
      "method": "createUploadShare",
      "httpMethod": "post",
      "tag": "shares",
      "description": "Create new Upload Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "creatorLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "filesExpiryPeriod",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "internalNotes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailBody",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailRecipients",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mailSubject",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "maxSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxSlots",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notifyCreator",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sendMail",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sendSms",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showUploadedFiles",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "smsRecipients",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "targetId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "textMessageRecipients",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Upload Share information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads",
      "method": "updateUploadShares",
      "httpMethod": "put",
      "tag": "shares",
      "description": "Update List of Upload Shares",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "filesExpiryPeriod",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxSize",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "maxSlots",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "resetFilesExpiryPeriod",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "resetMaxSize",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "resetMaxSlots",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "showUploadedFiles",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads/{share_id}",
      "method": "removeUploadShare",
      "httpMethod": "delete",
      "tag": "shares",
      "description": "Remove Upload Share",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads/{share_id}",
      "method": "requestUploadShare",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request Upload Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Upload Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads/{share_id}",
      "method": "updateUploadShare",
      "httpMethod": "put",
      "tag": "shares",
      "description": "Update Upload Share",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "defaultCountry",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "filesExpiryPeriod",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "internalNotes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maxSize",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "maxSlots",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notifyCreator",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "resetFilesExpiryPeriod",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resetMaxSize",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resetMaxSlots",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resetPassword",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "showCreatorName",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "showCreatorUsername",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "showUploadedFiles",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "textMessageRecipients",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Upload Share information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads/{share_id}/email",
      "method": "sendUploadShareLinkViaEmail",
      "httpMethod": "post",
      "tag": "shares",
      "description": "Send an existing Upload Share link via email",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recipients",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/shares/uploads/{share_id}/qr",
      "method": "requestUploadShareQr",
      "httpMethod": "get",
      "tag": "shares",
      "description": "Request Upload Share via QR Code",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Upload Share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/actions/test/ad",
      "method": "testAdConfig",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Test Active Directory configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "ldapUsersDomain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverAdminName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverAdminPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverIp",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverPort",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sslFingerPrint",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "useLdaps",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response model for testing connection for Active Directory configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/actions/test/radius",
      "method": "testRadiusConfig",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Test RADIUS server availability",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        },
        {
          "statusCode": "502",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/ads",
      "method": "requestAdConfigs",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request list of Active Directory configurations",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of Active Directory configurations"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/ads",
      "method": "createAdConfig",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Create Active Directory configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "adExportGroup",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alias",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "createHomeFolder",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "homeFolderParent",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ldapUsersDomain",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sdsImportGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "serverAdminName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverAdminPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverIp",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serverPort",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sslFingerPrint",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "useLdaps",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "userFilter",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userImport",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Active Directory configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/ads/{ad_id}",
      "method": "removeAdConfig",
      "httpMethod": "delete",
      "tag": "system-auth-config",
      "description": "Remove Active Directory configuration",
      "parameters": [
        {
          "name": "adId",
          "schema": "integer",
          "required": true,
          "description": "Active Directory ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/ads/{ad_id}",
      "method": "requestAdConfig",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request Active Directory configuration",
      "parameters": [
        {
          "name": "adId",
          "schema": "integer",
          "required": true,
          "description": "Active Directory ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Active Directory configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/ads/{ad_id}",
      "method": "updateAdConfig",
      "httpMethod": "put",
      "tag": "system-auth-config",
      "description": "Update Active Directory configuration",
      "parameters": [
        {
          "name": "adId",
          "schema": "integer",
          "required": true,
          "description": "Active Directory ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "adExportGroup",
          "schema": "string",
          "description": ""
        },
        {
          "name": "alias",
          "schema": "string",
          "description": ""
        },
        {
          "name": "createHomeFolder",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "homeFolderParent",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ldapUsersDomain",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sdsImportGroup",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "serverAdminName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serverAdminPassword",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serverIp",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serverPort",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sslFingerPrint",
          "schema": "string",
          "description": ""
        },
        {
          "name": "useLdaps",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "userFilter",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userImport",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Active Directory configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/openid/idps",
      "method": "requestOpenIdIdpConfigs",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request list of OpenID Connect IDP configurations",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/openid/idps",
      "method": "createOpenIdIdpConfig",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Create OpenID Connect IDP configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authorizationEndPointUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientSecret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fallbackMappingClaim",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "flow",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "jwksEndPointUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mappingClaim",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "pkceChallengeMethod",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pkceEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUris",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "scopes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "tokenEndPointUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userImportEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "userImportGroup",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "userInfoEndPointUrl",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "userInfoSource",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userManagementUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userUpdateEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "OpenID Connect IDP configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/openid/idps/{idp_id}",
      "method": "removeOpenIdIdpConfig",
      "httpMethod": "delete",
      "tag": "system-auth-config",
      "description": "Remove OpenID Connect IDP configuration",
      "parameters": [
        {
          "name": "idpId",
          "schema": "integer",
          "required": true,
          "description": "OpenID Connect IDP configuration ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/openid/idps/{idp_id}",
      "method": "requestOpenIdIdpConfig",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request OpenID Connect IDP configuration",
      "parameters": [
        {
          "name": "idpId",
          "schema": "integer",
          "required": true,
          "description": "OpenID Connect IDP configuration ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OpenID Connect IDP configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/openid/idps/{idp_id}",
      "method": "updateOpenIdIdpConfig",
      "httpMethod": "put",
      "tag": "system-auth-config",
      "description": "Update OpenID Connect IDP configuration",
      "parameters": [
        {
          "name": "idpId",
          "schema": "integer",
          "required": true,
          "description": "OpenID Connect IDP configuration ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authorizationEndPointUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientSecret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "fallbackMappingClaim",
          "schema": "string",
          "description": ""
        },
        {
          "name": "flow",
          "schema": "string",
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "description": ""
        },
        {
          "name": "jwksEndPointUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mappingClaim",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pkceChallengeMethod",
          "schema": "string",
          "description": ""
        },
        {
          "name": "pkceEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "redirectUris",
          "schema": "array",
          "description": ""
        },
        {
          "name": "resetFallbackMappingClaim",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "scopes",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tokenEndPointUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userImportEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "userImportGroup",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "userInfoEndPointUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userInfoSource",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userManagementUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userUpdateEnabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OpenID Connect IDP configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/radius",
      "method": "removeRadiusConfig",
      "httpMethod": "delete",
      "tag": "system-auth-config",
      "description": "Remove RADIUS configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/radius",
      "method": "requestRadiusConfig",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request RADIUS configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RADIUS configuration"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/radius",
      "method": "createRadiusConfig",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Create RADIUS configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "failoverServer",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "ipAddress",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "otpPinFirst",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "sharedSecret",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "RADIUS configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/auth/radius",
      "method": "updateRadiusConfig",
      "httpMethod": "put",
      "tag": "system-auth-config",
      "description": "Update RADIUS configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "failoverServer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ipAddress",
          "schema": "string",
          "description": ""
        },
        {
          "name": "otpPinFirst",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "sharedSecret",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RADIUS configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/oauth/clients",
      "method": "requestOAuthClients",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request list of OAuth clients",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/oauth/clients",
      "method": "createOAuthClient",
      "httpMethod": "post",
      "tag": "system-auth-config",
      "description": "Create OAuth client",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "accessTokenValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "approvalValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clientId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clientName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "clientSecret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clientType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "grantTypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "redirectUris",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "refreshTokenValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "OAuth client information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/oauth/clients/{client_id}",
      "method": "removeOAuthClient",
      "httpMethod": "delete",
      "tag": "system-auth-config",
      "description": "Remove OAuth client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/oauth/clients/{client_id}",
      "method": "requestOAuthClient",
      "httpMethod": "get",
      "tag": "system-auth-config",
      "description": "Request OAuth client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OAuth client information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/oauth/clients/{client_id}",
      "method": "updateOAuthClient",
      "httpMethod": "put",
      "tag": "system-auth-config",
      "description": "Update OAuth client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "accessTokenValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "approvalValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "clientName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clientSecret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "clientType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "grantTypes",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "isEnabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "redirectUris",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "refreshTokenValidity",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "OAuth client information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/classifications",
      "method": "requestClassificationPoliciesConfig",
      "httpMethod": "get",
      "tag": "system-policies-config",
      "description": "Request classification policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of classification policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/classifications",
      "method": "changeClassificationPoliciesConfig",
      "httpMethod": "put",
      "tag": "system-policies-config",
      "description": "Change classification policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "shareClassificationPolicies",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of classification policies"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/guest_users",
      "method": "requestGuestUsersPoliciesConfig",
      "httpMethod": "get",
      "tag": "system-policies-config",
      "description": "Request guest user policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of guest user policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/guest_users",
      "method": "changeGuestUsersPoliciesConfig",
      "httpMethod": "put",
      "tag": "system-policies-config",
      "description": "Change guest user policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isInviteUsersEnabled",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of guest user policies"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/mfa",
      "method": "requestMfaPoliciesConfig",
      "httpMethod": "get",
      "tag": "system-policies-config",
      "description": "Request MFA policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of multi-factor authentication policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/mfa",
      "method": "changeMfaPoliciesConfig",
      "httpMethod": "put",
      "tag": "system-policies-config",
      "description": "Change MFA policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isMfaEnforced",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of multi-factor authentication policies"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/passwords",
      "method": "requestPasswordPoliciesConfig",
      "httpMethod": "get",
      "tag": "system-policies-config",
      "description": "Request password policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of password policies"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/passwords",
      "method": "changePasswordPoliciesConfig",
      "httpMethod": "put",
      "tag": "system-policies-config",
      "description": "Change password policies",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "encryptionPasswordPolicies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "loginPasswordPolicies",
          "schema": "object",
          "description": ""
        },
        {
          "name": "sharesPasswordPolicies",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of password policies"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/passwords/enforce_change",
      "method": "enforceLoginPasswordChange",
      "httpMethod": "post",
      "tag": "system-policies-config",
      "description": "Enforce login password change for all users",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/policies/passwords/{password_type}",
      "method": "requestPasswordPoliciesForPasswordType",
      "httpMethod": "get",
      "tag": "system-policies-config",
      "description": "Request password policies for a certain password type",
      "parameters": [
        {
          "name": "passwordType",
          "schema": "string",
          "required": true,
          "description": "Password type"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of password policies"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/auth",
      "method": "requestAuthConfig",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request authentication settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Authentication settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/auth",
      "method": "updateAuthConfig",
      "httpMethod": "put",
      "tag": "system-settings-config",
      "description": "Update authentication settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authMethods",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Authentication settings"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/defaults",
      "method": "requestSystemDefaults",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request system defaults",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System defaults"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/defaults",
      "method": "updateSystemDefaults",
      "httpMethod": "put",
      "tag": "system-settings-config",
      "description": "Update system defaults",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "downloadShareDefaultExpirationPeriod",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "fileDefaultExpirationPeriod",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "languageDefault",
          "schema": "string",
          "description": ""
        },
        {
          "name": "nonmemberViewerDefault",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "uploadShareDefaultExpirationPeriod",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "System defaults"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/eventlog",
      "method": "requestEventlogConfig",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request eventlog settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Eventlog settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/eventlog",
      "method": "updateEventlogConfig",
      "httpMethod": "put",
      "tag": "system-settings-config",
      "description": "Update eventlog settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "logIpEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "retentionPeriod",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Eventlog settings"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/general",
      "method": "requestGeneralSettings",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request general settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "General settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/general",
      "method": "updateGeneralSettings",
      "httpMethod": "put",
      "tag": "system-settings-config",
      "description": "Update general settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authTokenRestrictions",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cryptoEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "emailNotificationButtonEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "eulaEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hideLoginInputFields",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "mediaServerEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "s3TagsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sharePasswordSmsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "weakPasswordEnabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "General settings"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/infrastructure",
      "method": "requestInfrastructureProperties",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request infrastructure properties",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Infrastructure properties"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/syslog",
      "method": "requestSyslogConfig",
      "httpMethod": "get",
      "tag": "system-settings-config",
      "description": "Request syslog settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Syslog settings"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/settings/syslog",
      "method": "updateSyslogConfig",
      "httpMethod": "put",
      "tag": "system-settings-config",
      "description": "Update syslog settings",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "host",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logIpEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Syslog settings"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3",
      "method": "request3Config",
      "httpMethod": "get",
      "tag": "system-storage-config",
      "description": "Request S3 storage configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "S3 configuration"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3",
      "method": "createS3Config",
      "httpMethod": "post",
      "tag": "system-storage-config",
      "description": "Create S3 storage configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "bucketName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bucketUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "endpointUrl",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "region",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secretKey",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "S3 configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3",
      "method": "updateS3Config",
      "httpMethod": "put",
      "tag": "system-storage-config",
      "description": "Update S3 storage configuration",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "accessKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bucketName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "bucketUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "endpointUrl",
          "schema": "string",
          "description": ""
        },
        {
          "name": "region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secretKey",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "S3 configuration"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3/tags",
      "method": "requestS3TagList",
      "httpMethod": "get",
      "tag": "system-storage-config",
      "description": "Request list of configured S3 tags",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of S3 tags"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3/tags",
      "method": "createS3Tag",
      "httpMethod": "post",
      "tag": "system-storage-config",
      "description": "Create S3 tag",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isMandatory",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "S3 tag information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3/tags/{id}",
      "method": "removeS3Tag",
      "httpMethod": "delete",
      "tag": "system-storage-config",
      "description": "Remove S3 tag",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "S3 tag ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/system/config/storage/s3/tags/{id}",
      "method": "requestS3Tag",
      "httpMethod": "get",
      "tag": "system-storage-config",
      "description": "Request S3 tag",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "S3 tag ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "S3 tag information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/uploads/{token}",
      "method": "cancelFileUploadByToken",
      "httpMethod": "delete",
      "tag": "uploads",
      "description": "Cancel file upload",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Upload token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/uploads/{token}",
      "method": "uploadFileByTokenAsMultipart1",
      "httpMethod": "post",
      "tag": "uploads",
      "description": "Upload file",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Upload token"
        },
        {
          "name": "contentRange",
          "schema": "string",
          "required": false,
          "description": "Content-Range \n\ne.g. `bytes 0-999/3980`"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Chunk upload response"
        },
        {
          "statusCode": "201",
          "description": "Chunk upload response"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/uploads/{token}",
      "method": "completeFileUploadByToken",
      "httpMethod": "put",
      "tag": "uploads",
      "description": "Complete file upload",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Upload token"
        },
        {
          "name": "fileKey",
          "schema": "object",
          "description": ""
        },
        {
          "name": "fileName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "keepShareLinks",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "resolutionStrategy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userFileKeyList",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "202",
          "description": "Node information (Node can be a room, folder or file)"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "507",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account",
      "method": "requestUserInfo",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request user account information",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "moreInfo",
          "schema": "boolean",
          "required": false,
          "description": "Get more info for this user\n\ne.g. list of user groups"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account",
      "method": "updateUserAccount",
      "httpMethod": "put",
      "tag": "user",
      "description": "Update user account",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "acceptEULA",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/avatar",
      "method": "resetAvatar",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Reset avatar",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User avatar information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/avatar",
      "method": "requestAvatar",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request avatar",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User avatar information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/avatar",
      "method": "uploadAvatarAsMultipart",
      "httpMethod": "post",
      "tag": "user",
      "description": "Change avatar",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "User avatar information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/customer",
      "method": "requestCustomerInfo",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request customer information for user",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/customer",
      "method": "enableCustomerEncryption",
      "httpMethod": "put",
      "tag": "user",
      "description": "Activate client-side encryption for customer",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "dataSpaceRescueKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "enableCustomerEncryption",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Customer information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/customer/keypair",
      "method": "requestCustomerKeyPair",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request customer's key pair",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Key pair container"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/keypair",
      "method": "removeUserKeyPair",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Remove user's key pair",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/keypair",
      "method": "requestUserKeyPair",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request user's key pair",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": "Version (NEW)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Key pair container"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/keypair",
      "method": "setUserKeyPair",
      "httpMethod": "post",
      "tag": "user",
      "description": "Set user's key pair",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/keypairs",
      "method": "requestUserKeyPairs",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request all user key pairs",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/keypairs",
      "method": "createAndPreserveUserKeyPair",
      "httpMethod": "post",
      "tag": "user",
      "description": "Create key pair and preserve copy of old private key",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "previousPrivateKey",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "privateKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "publicKeyContainer",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/mfa",
      "method": "useEmergencyCode",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Using emergency-code",
      "parameters": [
        {
          "name": "emergencyCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/mfa",
      "method": "getMfaStatusForUser",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request information about the user's mfa status",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Contains information about the user's MFA status"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/mfa/totp",
      "method": "getTotpSetupInformation",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request information to setup TOTP as second authentication factor",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Contains QR code URL and OTP URI for TOTP setup"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/mfa/totp",
      "method": "confirmTotpSetup",
      "httpMethod": "post",
      "tag": "user",
      "description": "Confirm second factor TOTP setup with a generated OTP",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "otp",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/mfa/totp/{id}",
      "method": "deleteMfaTotpSetup",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Disable a MFA TOTP setup with generated OTP",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "validOtp",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/account/password",
      "method": "changeUserPassword",
      "httpMethod": "put",
      "tag": "user",
      "description": "Change user's password",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "newPassword",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oldPassword",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/logout",
      "method": "logout",
      "httpMethod": "post",
      "tag": "user",
      "description": "Invalidate authentication token",
      "parameters": [
        {
          "name": "everywhere",
          "schema": "boolean",
          "required": false,
          "description": "Invalidate all tokens"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/notifications/config",
      "method": "requestListOfNotificationConfigs",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request list of notification configurations",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of notification configurations"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/notifications/config/{id}",
      "method": "updateNotificationConfig",
      "httpMethod": "put",
      "tag": "user",
      "description": "Update notification configuration",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": "Unique identifier for a notification configuration"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "channelIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Notification configuration information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/oauth/approvals",
      "method": "requestOAuthApprovals",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request list of OAuth client approvals",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/oauth/approvals/{client_id}",
      "method": "removeOAuthApproval",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Remove OAuth client approval",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/oauth/authorizations",
      "method": "requestOAuthAuthorizations",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request list of OAuth client authorizations",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/oauth/authorizations/{client_id}",
      "method": "removeOAuthAuthorizations",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Remove all OAuth authorizations of a client",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/oauth/authorizations/{client_id}/{authorization_id}",
      "method": "removeOAuthAuthorization",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Remove a OAuth authorization",
      "parameters": [
        {
          "name": "clientId",
          "schema": "string",
          "required": true,
          "description": "OAuth client ID"
        },
        {
          "name": "authorizationId",
          "schema": "integer",
          "required": true,
          "description": "OAuth authorization ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/ping",
      "method": "pingUser",
      "httpMethod": "get",
      "tag": "user",
      "description": "(authenticated) Ping",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/profileAttributes",
      "method": "requestProfileAttributes",
      "httpMethod": "get",
      "tag": "user",
      "description": "Request user profile attributes",
      "parameters": [
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Ranged list of attributes"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/profileAttributes",
      "method": "setProfileAttributes",
      "httpMethod": "post",
      "tag": "user",
      "description": "Set user profile attributes",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "User profile attributes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/profileAttributes",
      "method": "updateProfileAttributes",
      "httpMethod": "put",
      "tag": "user",
      "description": "Add or edit user profile attributes",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User profile attributes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/profileAttributes/{key}",
      "method": "removeProfileAttribute",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Remove user profile attribute",
      "parameters": [
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Key"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/download_shares",
      "method": "listDownloadShareSubscriptions",
      "httpMethod": "get",
      "tag": "user",
      "description": "List Download Share subscriptions",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of subscribed download shares"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/download_shares",
      "method": "subscribeDownloadShares",
      "httpMethod": "put",
      "tag": "user",
      "description": "Subscribe or Unsubscribe a List of Download Shares for notifications",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isSubscribed",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/download_shares/{share_id}",
      "method": "unsubscribeDownloadShare",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Unsubscribe Download Share from notifications",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/download_shares/{share_id}",
      "method": "subscribeDownloadShare",
      "httpMethod": "post",
      "tag": "user",
      "description": "Subscribe Download Share for notifications",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Subscribed download share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/nodes",
      "method": "listNodeSubscriptions",
      "httpMethod": "get",
      "tag": "user",
      "description": "List node subscriptions",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of subscribed nodes"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/nodes",
      "method": "updateNodeSubscriptions",
      "httpMethod": "put",
      "tag": "user",
      "description": "Subscribe or Unsubscribe a List of nodes for notifications",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isSubscribed",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/nodes/{node_id}",
      "method": "unsubscribeNode",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Unsubscribe node from notifications",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/nodes/{node_id}",
      "method": "subscribeNode",
      "httpMethod": "post",
      "tag": "user",
      "description": "Subscribe node for notifications",
      "parameters": [
        {
          "name": "nodeId",
          "schema": "integer",
          "required": true,
          "description": "Node ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Subscribed node information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/upload_shares",
      "method": "listUploadShareSubscriptions",
      "httpMethod": "get",
      "tag": "user",
      "description": "List Upload Share subscriptions",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of subscribed upload shares"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/upload_shares",
      "method": "subscribeUploadShares",
      "httpMethod": "put",
      "tag": "user",
      "description": "Subscribe or Unsubscribe a List of Upload Shares for notifications",
      "parameters": [
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "isSubscribed",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "objectIds",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/upload_shares/{share_id}",
      "method": "unsubscribeUploadShare",
      "httpMethod": "delete",
      "tag": "user",
      "description": "Unsubscribe Upload Share from notifications",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/user/subscriptions/upload_shares/{share_id}",
      "method": "subscribeUploadShare",
      "httpMethod": "post",
      "tag": "user",
      "description": "Subscribe Upload Share for notifications",
      "parameters": [
        {
          "name": "shareId",
          "schema": "integer",
          "required": true,
          "description": "Share ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Subscribed upload share information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users",
      "method": "requestUsers",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request users",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "includeAttributes",
          "schema": "boolean",
          "required": false,
          "description": "Include custom user attributes."
        },
        {
          "name": "includeRoles",
          "schema": "boolean",
          "required": false,
          "description": "Include roles"
        },
        {
          "name": "includeManageableRooms",
          "schema": "boolean",
          "required": false,
          "description": "Include hasManageableRooms (deprecated)"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of users"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users",
      "method": "createUser",
      "httpMethod": "post",
      "tag": "users",
      "description": "Create new user",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "authMethods",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isNonmemberViewer",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "login",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mfaConfig",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "needsToChangePassword",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notifyUser",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}",
      "method": "removeUser",
      "httpMethod": "delete",
      "tag": "users",
      "description": "Remove user",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}",
      "method": "requestUser",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request user",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "effectiveRoles",
          "schema": "boolean",
          "required": false,
          "description": "Filter users with DIRECT or DIRECT **AND** EFFECTIVE roles.\n\n* `false`: DIRECT roles\n\n* `true`: DIRECT **AND** EFFECTIVE roles\n\nDIRECT means: e.g. user gets role **directly** granted from someone with _grant permission_ right.\n\nEFFECTIVE means: e.g. user gets role through **group membership**."
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}",
      "method": "updateUser",
      "httpMethod": "put",
      "tag": "users",
      "description": "Update user's metadata",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "authData",
          "schema": "object",
          "description": ""
        },
        {
          "name": "authMethods",
          "schema": "array",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "expiration",
          "schema": "object",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "gender",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isLocked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lockStatus",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mfaConfig",
          "schema": "object",
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "description": ""
        },
        {
          "name": "receiverLanguage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "description": ""
        },
        {
          "name": "userName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "402",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "409",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/groups",
      "method": "requestUserGroups",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request groups that user is a member of or / and can become a member",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of groups"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/last_admin_rooms",
      "method": "requestLastAdminRoomsUsers",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request rooms where the user is last admin",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of (last admin user) rooms"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/mfa/emergency_code",
      "method": "requestEmergencyMfaCode",
      "httpMethod": "post",
      "tag": "users",
      "description": "Request emergency MFA code",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Emergency TOTP code"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/roles",
      "method": "requestUserRoles",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request user's granted roles",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of roles"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/rooms",
      "method": "requestUsersRooms",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request rooms granted to the user or / and rooms that can be granted",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of rooms"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/userAttributes",
      "method": "requestUserAttributes",
      "httpMethod": "get",
      "tag": "users",
      "description": "Request custom user attributes",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "offset",
          "schema": "integer",
          "required": false,
          "description": "Range offset"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Range limit.\n\nMaximum 500.\n\n For more results please use paging (`offset` + `limit`)."
        },
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "Filter string"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "Sort string"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Ranged list of attributes"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/userAttributes",
      "method": "setUserAttributes",
      "httpMethod": "post",
      "tag": "users",
      "description": "Set custom user attributes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/userAttributes",
      "method": "updateUserAttributes",
      "httpMethod": "put",
      "tag": "users",
      "description": "Add or edit custom user attributes",
      "parameters": [
        {
          "name": "xSdsDateFormat",
          "schema": "string",
          "description": "Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"
        },
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "User information"
        },
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    },
    {
      "url": "/v4/users/{user_id}/userAttributes/{key}",
      "method": "removeUserAttribute",
      "httpMethod": "delete",
      "tag": "users",
      "description": "Remove custom user attribute",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "User ID"
        },
        {
          "name": "key",
          "schema": "string",
          "required": true,
          "description": "Key"
        },
        {
          "name": "xSdsAuthToken",
          "schema": "string",
          "description": "Authentication token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": "Error information"
        },
        {
          "statusCode": "401",
          "description": "Error information"
        },
        {
          "statusCode": "403",
          "description": "Error information"
        },
        {
          "statusCode": "404",
          "description": "Error information"
        },
        {
          "statusCode": "406",
          "description": "Error information"
        },
        {
          "statusCode": "412",
          "description": "Error information"
        }
      ]
    }
  ],
  "apiBaseUrl": "/api",
  "apiDescription": "REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>",
  "apiTitle": "DRACOON API",
  "endpoints": 181,
  "sdkMethods": 297,
  "schemas": 282,
  "parameters": 1239,
  "difficultyScore": 747.75,
  "difficulty": "Very Hard"
}