{
  "providerName": "namsor.com",
  "openApiRaw": "https://v2.namsor.com/NamSorAPIv2/api2/openapi.json",
  "securitySchemes": {
    "api_key": {
      "description": "api_key required",
      "in": "header",
      "name": "X-API-KEY",
      "type": "apiKey"
    }
  },
  "homepage": "namsor.com",
  "apiVersion": "2.0.24",
  "methods": [
    {
      "url": "/api2/json/anonymize/{source}/{anonymized}/{token}",
      "method": "anonymize",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Activate/deactivate anonymization for a source.",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "anonymized",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiKeyInfo",
      "method": "apiKeyInfo",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Read API Key info.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiServices",
      "method": "availableServices",
      "httpMethod": "get",
      "tag": "admin",
      "description": "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiStatus",
      "method": "apiStatus",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiUsage",
      "method": "apiUsage",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Print current API usage.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiUsageHistory",
      "method": "apiUsageHistory",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Print historical API usage.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/apiUsageHistoryAggregate",
      "method": "apiUsageHistoryAggregate",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Print historical API usage (in an aggregated view, by service, by day/hour/min).",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/castegroupIndianFull/{subDivisionIso31662}/{personalNameFull}",
      "method": "castegroupIndianFull",
      "httpMethod": "get",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name.",
      "parameters": [
        {
          "name": "subDivisionIso31662",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "personalNameFull",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Caste group-coded names"
        }
      ]
    },
    {
      "url": "/api2/json/castegroupIndianFullBatch",
      "method": "castegroupIndianFullBatch",
      "httpMethod": "post",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names. ",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}",
      "method": "chineseNameCandidates",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming",
      "parameters": [
        {
          "name": "chineseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chineseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameCandidatesBatch",
      "method": "chineseNameCandidatesBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameCandidatesGenderBatch",
      "method": "chineseNameCandidatesGenderBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}",
      "method": "chineseNameGenderCandidates",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')",
      "parameters": [
        {
          "name": "chineseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chineseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "knownGender",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}",
      "method": "chineseNameMatch",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming",
      "parameters": [
        {
          "name": "chineseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chineseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chineseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/chineseNameMatchBatch",
      "method": "chineseNameMatchBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}",
      "method": "corridor",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com)",
      "parameters": [
        {
          "name": "countryIso2From",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstNameFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastNameFrom",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2To",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstNameTo",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastNameTo",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)"
        }
      ]
    },
    {
      "url": "/api2/json/corridorBatch",
      "method": "corridorBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com)",
      "parameters": [
        {
          "name": "corridorFromTo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/country/{personalNameFull}",
      "method": "country",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin.",
      "parameters": [
        {
          "name": "personalNameFull",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified geo names"
        }
      ]
    },
    {
      "url": "/api2/json/countryBatch",
      "method": "countryBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}",
      "method": "diaspora",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)",
      "parameters": [
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence."
        }
      ]
    },
    {
      "url": "/api2/json/diasporaBatch",
      "method": "diasporaBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence."
        }
      ]
    },
    {
      "url": "/api2/json/gender/{firstName}",
      "method": "gender1",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy.",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/gender/{firstName}/{lastName}",
      "method": "gender",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely gender of a name.",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/genderBatch",
      "method": "genderBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely gender of up to 100 names, detecting automatically the cultural context.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a list of personal names."
        }
      ]
    },
    {
      "url": "/api2/json/genderChineseName/{chineseName}",
      "method": "genderChineseName",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Infer the likely gender of a Chinese full name ex. 王晓明",
      "parameters": [
        {
          "name": "chineseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified genderized names"
        }
      ]
    },
    {
      "url": "/api2/json/genderChineseNameBatch",
      "method": "genderChineseNameBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Infer the likely gender of up to 100 full names ex. 王晓明",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}",
      "method": "genderChineseNamePinyin",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Infer the likely gender of a Chinese name in LATIN (Pinyin).",
      "parameters": [
        {
          "name": "chineseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "chineseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/genderChineseNamePinyinBatch",
      "method": "genderChineseNamePinyinBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a list of personal names."
        }
      ]
    },
    {
      "url": "/api2/json/genderFull/{fullName}",
      "method": "genderFull",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely gender of a full name, ex. John H. Smith",
      "parameters": [
        {
          "name": "fullName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified genderized names"
        }
      ]
    },
    {
      "url": "/api2/json/genderFullBatch",
      "method": "genderFullBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely gender of up to 100 full names, detecting automatically the cultural context.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/genderFullGeo/{fullName}/{countryIso2}",
      "method": "genderFullGeo",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely gender of a full name, given a local context (ISO2 country code).",
      "parameters": [
        {
          "name": "fullName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified genderized names"
        }
      ]
    },
    {
      "url": "/api2/json/genderFullGeoBatch",
      "method": "genderFullGeoBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}",
      "method": "genderGeo",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely gender of a name, given a local context (ISO2 country code).",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/genderGeoBatch",
      "method": "genderGeoBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a list of personal names."
        }
      ]
    },
    {
      "url": "/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}",
      "method": "genderJapaneseNamePinyin",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Infer the likely gender of a Japanese name in LATIN (Pinyin).",
      "parameters": [
        {
          "name": "japaneseSurname",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/genderJapaneseNameBatch",
      "method": "genderJapaneseNamePinyinBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY gender from a list of personal names."
        }
      ]
    },
    {
      "url": "/api2/json/genderJapaneseNameFull/{japaneseName}",
      "method": "genderJapaneseNameFull",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Infer the likely gender of a Japanese full name ex. 王晓明",
      "parameters": [
        {
          "name": "japaneseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified genderized names"
        }
      ]
    },
    {
      "url": "/api2/json/genderJapaneseNameFullBatch",
      "method": "genderJapaneseNameFullBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Infer the likely gender of up to 100 full names",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method": "japaneseNameGenderKanjiCandidatesBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}",
      "method": "japaneseNameKanjiCandidates1",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "japaneseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}",
      "method": "japaneseNameKanjiCandidates",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender.",
      "parameters": [
        {
          "name": "japaneseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "knownGender",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method": "japaneseNameKanjiCandidatesBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}",
      "method": "japaneseNameLatinCandidates",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Romanize japanese name, based on the name in Kanji.",
      "parameters": [
        {
          "name": "japaneseSurnameKanji",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenNameKanji",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameLatinCandidatesBatch",
      "method": "japaneseNameLatinCandidatesBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Romanize japanese names, based on the name in KANJI",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}",
      "method": "japaneseNameMatch",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "japaneseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified matched names"
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameMatchBatch",
      "method": "japaneseNameMatchBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}",
      "method": "japaneseNameMatchFeedbackLoop",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae",
      "parameters": [
        {
          "name": "japaneseSurnameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseGivenNameLatin",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "japaneseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/learnable/{source}/{learnable}/{token}",
      "method": "learnable",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Activate/deactivate learning from a source.",
      "parameters": [
        {
          "name": "source",
          "schema": "string",
          "required": true,
          "description": "The API Key to set as learnable/non learnable."
        },
        {
          "name": "learnable",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/nameType/{properNoun}",
      "method": "nameType",
      "httpMethod": "get",
      "tag": "general",
      "description": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)",
      "parameters": [
        {
          "name": "properNoun",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified typed proper names"
        }
      ]
    },
    {
      "url": "/api2/json/nameTypeBatch",
      "method": "nameTypeBatch",
      "httpMethod": "post",
      "tag": "general",
      "description": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "properNouns",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names."
        }
      ]
    },
    {
      "url": "/api2/json/nameTypeGeo/{properNoun}/{countryIso2}",
      "method": "nameTypeGeo",
      "httpMethod": "get",
      "tag": "general",
      "description": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)",
      "parameters": [
        {
          "name": "properNoun",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified typed proper names"
        }
      ]
    },
    {
      "url": "/api2/json/nameTypeGeoBatch",
      "method": "nameTypeGeoBatch",
      "httpMethod": "post",
      "tag": "general",
      "description": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "properNouns",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names."
        }
      ]
    },
    {
      "url": "/api2/json/origin/{firstName}/{lastName}",
      "method": "origin",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead.",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country of Origin from a personal name."
        }
      ]
    },
    {
      "url": "/api2/json/originBatch",
      "method": "originBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY origin from a list of personal names."
        }
      ]
    },
    {
      "url": "/api2/json/parseChineseName/{chineseName}",
      "method": "parseChineseName",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)",
      "parameters": [
        {
          "name": "chineseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseChineseNameBatch",
      "method": "parseChineseNameBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseJapaneseName/{japaneseName}",
      "method": "parseJapaneseName",
      "httpMethod": "get",
      "tag": "japanese",
      "description": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae",
      "parameters": [
        {
          "name": "japaneseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseJapaneseNameBatch",
      "method": "parseJapaneseNameBatch",
      "httpMethod": "post",
      "tag": "japanese",
      "description": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae ",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseName/{nameFull}",
      "method": "parseName",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. ",
      "parameters": [
        {
          "name": "nameFull",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseName/{nameFull}/{countryIso2}",
      "method": "parseNameGeo",
      "httpMethod": "get",
      "tag": "personal",
      "description": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context.",
      "parameters": [
        {
          "name": "nameFull",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseNameBatch",
      "method": "parseNameBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/parseNameGeoBatch",
      "method": "parseNameGeoBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision. ",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}",
      "method": "phoneCode",
      "httpMethod": "get",
      "tag": "social",
      "description": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number.",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number."
        }
      ]
    },
    {
      "url": "/api2/json/phoneCodeBatch",
      "method": "phoneCodeBatch",
      "httpMethod": "post",
      "tag": "social",
      "description": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNamesWithPhoneNumbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country and phone code of personal names+phones."
        }
      ]
    },
    {
      "url": "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}",
      "method": "phoneCodeGeo",
      "httpMethod": "get",
      "tag": "social",
      "description": "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number."
        }
      ]
    },
    {
      "url": "/api2/json/phoneCodeGeoBatch",
      "method": "phoneCodeGeoBatch",
      "httpMethod": "post",
      "tag": "social",
      "description": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNamesWithPhoneNumbers",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country and phone code of personal names+phones."
        }
      ]
    },
    {
      "url": "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}",
      "method": "phoneCodeGeoFeedbackLoop",
      "httpMethod": "get",
      "tag": "social",
      "description": "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumber",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phoneNumberE164",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number."
        }
      ]
    },
    {
      "url": "/api2/json/pinyinChineseName/{chineseName}",
      "method": "pinyinChineseName",
      "httpMethod": "get",
      "tag": "chinese",
      "description": "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)",
      "parameters": [
        {
          "name": "chineseName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/pinyinChineseNameBatch",
      "method": "pinyinChineseNameBatch",
      "httpMethod": "post",
      "tag": "chinese",
      "description": "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/regions",
      "method": "regions",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Print basic source statistics.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/religionFull/{countryIso2}/{subDivisionIso31662}/{personalNameFull}",
      "method": "religionFull",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version).",
      "parameters": [
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "subDivisionIso31662",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "personalNameFull",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "religious-coded names"
        }
      ]
    },
    {
      "url": "/api2/json/religionFullBatch",
      "method": "religionFullBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/religionIndianFull/{subDivisionIso31662}/{personalNameFull}",
      "method": "religion",
      "httpMethod": "get",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint).",
      "parameters": [
        {
          "name": "subDivisionIso31662",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "personalNameFull",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "religious-coded names"
        }
      ]
    },
    {
      "url": "/api2/json/religionIndianFullBatch",
      "method": "religionIndianFullBatch",
      "httpMethod": "post",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/softwareVersion",
      "method": "softwareVersion",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Get the current software version",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The software version."
        }
      ]
    },
    {
      "url": "/api2/json/subclassification/{countryIso2}/{firstName}/{lastName}",
      "method": "subclassification",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN').",
      "parameters": [
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the geographic name origin at a country subclassification level (usually regional or state level)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationBatch",
      "method": "subclassificationBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN').",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country subclassification (regional names)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationFull/{countryIso2}/{fullName}",
      "method": "subclassificationFull",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN').",
      "parameters": [
        {
          "name": "countryIso2",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "fullName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the geographic name origin at a country subclassification level (usually regional or state level)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationFullBatch",
      "method": "subclassificationFullBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN').",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country subclassification (regional names)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationIndian/{firstName}/{lastName}",
      "method": "subclassificationIndian",
      "httpMethod": "get",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name.",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the geographic name origin at a country subclassification level (usually regional or state level)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationIndianBatch",
      "method": "subclassificationIndianBatch",
      "httpMethod": "post",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country subclassification (regional names)."
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationIndianFull/{fullName}",
      "method": "subclassificationIndianFull",
      "httpMethod": "get",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name.",
      "parameters": [
        {
          "name": "fullName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Classified names at sub country level (region or state)"
        }
      ]
    },
    {
      "url": "/api2/json/subclassificationIndianFullBatch",
      "method": "subclassificationIndianFullBatch",
      "httpMethod": "post",
      "tag": "indian",
      "description": "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names.",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY country subclassification (regional names)."
        }
      ]
    },
    {
      "url": "/api2/json/taxonomyClasses/{classifierName}",
      "method": "taxonomyClasses",
      "httpMethod": "get",
      "tag": "admin",
      "description": "Print the taxonomy classes valid for the given classifier.",
      "parameters": [
        {
          "name": "classifierName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api2/json/usRaceEthnicity/{firstName}/{lastName}",
      "method": "usRaceEthnicity",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code."
        }
      ]
    },
    {
      "url": "/api2/json/usRaceEthnicityBatch",
      "method": "usRaceEthnicityBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code."
        }
      ]
    },
    {
      "url": "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}",
      "method": "usRaceEthnicityZip5",
      "httpMethod": "get",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
      "parameters": [
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "zip5Code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code."
        }
      ]
    },
    {
      "url": "/api2/json/usZipRaceEthnicityBatch",
      "method": "usZipRaceEthnicityBatch",
      "httpMethod": "post",
      "tag": "personal",
      "description": "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
      "parameters": [
        {
          "name": "facts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "personalNames",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code."
        }
      ]
    }
  ],
  "apiBaseUrl": "https://v2.namsor.com/NamSorAPIv2",
  "apiDescription": "NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! ",
  "apiTitle": "NamSor API v2",
  "endpoints": 88,
  "sdkMethods": 88,
  "schemas": 79,
  "parameters": 170,
  "contactUrl": "http://www.namsor.com/",
  "contactEmail": "contact@namsor.com",
  "difficultyScore": 170,
  "difficulty": "Hard"
}