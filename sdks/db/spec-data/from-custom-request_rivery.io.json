{
  "securitySchemes": {
    "HTTPBearer": {
      "type": "http",
      "scheme": "bearer"
    }
  },
  "apiBaseUrl": "https://api.rivery.io",
  "apiVersion": "1.0.0",
  "apiDescription": "\n# Rivery API documentation\n\nWelcome to the Rivery API Documentation. \n\nUsing the Rivery API, you can automate any single or group operations you perform in the Rivery console. \nYou can create, execute, and delete Rivers, create DataFrames, automate processes, and more.\nThe Rivery API is structured around REST. It accepts JSON request bodies, returns JSON responses,\nand employs conventional HTTP response codes, authentication, and verbs to access and use data through HTTP requests. \n\nConsult our [Legacy API](https://api-docs.rivery.io/) documentation. \n\nPlease [contact our Support team]( mailto:<contact@rivery.io>) if you have any questions or concerns.\n\n# Authorization\n## Rivery API Token\nTo generate a Bearer token, please check out [Rivery's docs](https://docs.rivery.io/docs/rivery-api).\n\nEvery bearer token is a combination of account, environment, and scopes attached. Every time the token is provided,\nthe API compares its scopes with the request required scope.\nIf the scope is not valid, an insufficient permissions (403) response code returned.\n\n## Scopes\nA scope is defined as a combination of the entity in Rivery, and the operation allowed to perform on the entity.\n\nThe entity can be any entity available via the API, for example - connection.\nAn operation can be one of specific operations allowed for each scope. For example: list or edit.\nTherefore, listing connections scope will be set as `connection:list`.\nPlease make sure the Bearer token is has the right scopes attached for all of the needed requests.\n",
  "apiTitle": "Rivery API",
  "endpoints": 42,
  "sdkMethods": 60,
  "schemas": 205,
  "parameters": 302,
  "contactUrl": "https://docs.rivery.io/",
  "contactEmail": "contact@rivery.io",
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://api.rivery.io/openapi.json"
  },
  "customRequestSpecFilename": "rivery.io.yaml",
  "difficultyScore": 238,
  "difficulty": "Hard"
}