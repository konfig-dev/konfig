processed:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  apiBaseUrl: https://api.alexishr.com/v1
  apiVersion: v1-preview
  apiDescription: "<h1 id=\"introduction\">Introduction</h1>\r\n<p>\r\n  AlexisHR API is currently in preview. This means that small, backward\r\n  incompatible changes might be introduced while in preview. The changes will be\r\n  documented and communicated.\r\n  <a\r\n    href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"\r\n    target=\"_blank\"\r\n    ><button>Subscribe to updates</button></a\r\n  >\r\n</p>\r\n\r\n<h1 id=\"authentication\">Authentication</h1>\r\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">\r\n<code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\\r\n  -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>\r\n</pre>\r\n<p>\r\n  Authenticate your account when using the API by including your secret Access\r\n  Token in the request.\r\n  <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a\r\n  >.\r\n</p>\r\n<p>\r\n  Authentication is performed by passing the Access Token in the Authorization\r\n  header.\r\n</p>\r\n<hr />\r\n\r\n<h1 id=\"structure\">Structure</h1>\r\n<p>\r\n  You will find the structure of the API to be highly uniform and consistent.\r\n  Typically every resource can be accessed via a top level endpoint, such as\r\n  <code>/v1/employee</code>. For every such resource, you can perform some of\r\n  the following operations:\r\n</p>\r\n<h2>Operations</h2>\r\n<table>\r\n  <tr>\r\n    <td>GET /v1/:resource</td>\r\n    <td>List all objects of this type</td>\r\n  </tr>\r\n  <tr>\r\n    <td>GET /v1/:resource/:id</td>\r\n    <td>Retrieve a resource by id</td>\r\n  </tr>\r\n  <tr>\r\n    <td>POST /v1/:resource</td>\r\n    <td>Create a resource of this type</td>\r\n  </tr>\r\n  <tr>\r\n    <td>PATCH /v1/:resource/:id</td>\r\n    <td>Update the resource by id</td>\r\n  </tr>\r\n  <tr>\r\n    <td>DELETE /v1/:resource/:id</td>\r\n    <td>Delete the resource by id</td>\r\n  </tr>\r\n</table>\r\n<hr />\r\n\r\n<h1 id=\"roles\">Roles</h1>\r\n<p>The Access Tokens will have owner permission on the account</p>\r\n<hr />\r\n\r\n<h1 id=\"filters\">Filters</h1>\r\n<p>\r\n  Some of the list endpoints allow to filter results by certain conditions.\r\n  Refer to specific resources to find out what criteria are allowed. Below is a\r\n  list of the different conditions.\r\n</p>\r\n\r\n<h4 id=\"eq\"><code>$eq</code></h4>\r\n<p>Find all results matching the attribute value specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>\r\n</div>\r\n<p>Can also be simplified like this.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>\r\n</div>\r\n\r\n<h4 id=\"neq\"><code>$neq</code></h4>\r\n<p>Find all results not matching the attribute value specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>\r\n</div>\r\n\r\n<h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>\r\n<p>\r\n  Find all results where the value is more (<code>$gt</code>) or more and equal\r\n  (<code>$gte</code>) to a given value.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>\r\n<p>\r\n  Find all results where the value is less (<code>$lt</code>) or less and equal\r\n  (<code>$lte</code>) to a given value.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>\r\n<p>\r\n  Find all results matching (<code>$in</code>) or not matching\r\n  (<code>$nin</code>) any of the attribute values specified.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"between\"><code>$between</code></h4>\r\n<p>Find all results between two values specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h1 id=\"versioning\">Versioning</h1>\r\n<p>\r\n  Each version of the API is guaranteed to be compatible with the resources of\r\n  the same version. When we make breaking changes to the API a new version will\r\n  be published\r\n</p>\r\n<hr />\r\n\r\n<h1 id=\"changelog\">Changelog</h1>\r\n<h3>2023-12-20</h3>\r\n<p>Field [updated] added for filter & select for Get Many Employments and Get Many Employees.</p>\r\n<h3>2021-03-15</h3>\r\n<p>First draft was published</p>\r\n<hr />\r\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  apiTitle: AlexisHR API
  endpoints: 36
  sdkMethods: 92
  schemas: 133
  parameters: 487
  contactUrl: ''
  contactEmail: support@alexishr.com
  originalCustomRequest:
    lambda: true
  customRequestSpecFilename: alexishr.com.yaml
  difficultyScore: 280.25
