processed:
  securitySchemes:
    Bearer:
      type: http
      description: Bearer token authentication using a JSON Web Token (JWT).
      bearerFormat: JWT
      scheme: bearer
    api_key:
      name: Authorization
      description: >-
        APIs for delivery partners require an API key that will have been issued
        to you.
      in: header
      type: apiKey
    basic_auth:
      description: >-
        A few services allow the use of basic authentication when a partner
        doesn't support OAuth based authentication.
      scheme: basic
      type: http
    justeat_adfs:
      openIdConnectUrl: https://adfs.just-eat.com/adfs/.well-known/openid-configuration
      description: ADFS authentication provider for internal Just Eat tools.
      type: openIdConnect
    restaurantsignup_jwt:
      type: http
      description: >-
        Bearer token authentication using a JSON Web Token (JWT), used by the
        restaurant sign up system
      bearerFormat: >-
        JWT token with payload `RestaurantId` and Role `[RestaurantRead |
        VerifyEmail | RestaurantWrite | FullAccess | DocumentRead]`
      scheme: bearer
    daas_jwt:
      type: http
      description: >-
        Bearer token authentication using a JSON Web Token (JWT), used for
        delivery as a service endpoints.
      bearerFormat: JWT token.
      scheme: bearer
    X-Flyt-Api-Key:
      name: X-Flyt-Api-Key
      description: API Key for services run by JET Connect, formerly known as Flyt.
      in: header
      type: apiKey
  apiBaseUrl: https://uk.api.just-eat.io
  apiVersion: 1.0.0
  apiDescription: >-
    # Just Eat API

    Just Eat offers services for our various business partners and our consumer
    applications.

    How you interact with the API depends on the services you wish to interact
    with.

    ## Security

    ### HTTPS

    All api calls and callbacks require HTTPS. Your service will need a valid
    SSL certificate and be accessible via the standard SSL port (port 443).

    ## Making an API request

    Some API calls require an API key, to authenticate the partner calling the
    API.

    ```

    PUT https://uk-partnerapi.just-eat.io/orders/abcd1234 HTTP/1.1

    Authorization: JE-API-KEY abcd123456789

    ```

    Other calls require a user token in the form of a JWT.

    ```

    GET https://uk.api.just-eat.io/consumer/me/orders/uk HTTP/1.1

    Authorization: Bearer abcd123456789

    ```


    ## Date Formats

    ### Date and time formats

    All dates and times should use the [ISO 8601 standard for representation of
    dates and times](https://en.wikipedia.org/wiki/ISO_8601).


    #### For instance:

    * DueDateWithUtcOffset: `"2015-05-26T14:52:35.5444292+01:00"`
      - Local time: `14:52`
      - UTC time: `13:52`
      - UTC offset: `+1hr` (due to daylight time saving)
    * DueDateWithUtcOffset: `"2015-02-03T11:10:00.0000000+00:00"`
      - Local time: `11:10`
      - UTC time: `11:10`
      - UTC offset: `0` (no daylight time saving, local time is equivalent to UTC)

    Note that the offset may be for a timezone different to your own, so you
    should always convert to your own local time for display purposes (e.g. on
    receipts and terminals).


    ### Callback timestamps

    Timestamps sent to Just Eat should be recorded as the current local time
    (including any changes needed to account for daylight saving) with an
    accompanying offset that shows the difference between the recorded local
    time and the current UTC time.


    If it is not possible to record timestamps in local time, timestamps may be
    recorded in UTC time with a 00:00 offset.

    ## Async Webhooks

    Some of the webhooks on the platform are configured as being 'async'
    webhooks. These are for long-running operations, and work as follows:
      1. Your webhook is invoked with a `?callback={returnUrl}` query string parameter. The `returnUrl` is a unique URL that you will need to send the async response to.
      2. Return an immediate `202 Accepted` response from the webhook endpoint, to indicate that you have received the request.
      3. Perform the long-running operation. This can be deemed either a _success_; or a _failure_.
      4. If the result is a _**success**_, return the following:
      ```
      POST {returnUrl} HTTP/1.1

      {
            "status": "Success",
            "message": "{successMessage}",
            "data": {}   // webhook-specific response object
      }
      ```
      5. Otherwise, if the result is a _**failure**_, return the following:
      ```
      POST {returnUrl} HTTP/1.1

      {
            "status": "Failure",
            "message": "{failureMessage}",
            "data": {}   // webhook-specific response object
      }
      ```
  apiTitle: Just Eat API
  endpoints: 65
  sdkMethods: 73
  schemas: 1412
  parameters: 420
  contactUrl: https://developers.just-eat.com/
  contactEmail: david.handley@justeattakeaway.com
  originalCustomRequest:
    type: GET
    url: https://uk.api.just-eat.io/docs/openapi.yaml
    defaultUrlForBrokenLinks: https://uk.api.just-eat.io/docs/
  customRequestSpecFilename: justeattakeaway.com.yaml
  difficultyScore: 884
