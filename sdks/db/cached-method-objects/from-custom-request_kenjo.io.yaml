hash: 22cc5c4418f99df1544e0d1b0544310211059de47532928a61d6085c5eaa123e
methodObjects:
  - url: /auth/login
    method: createBearerToken
    httpMethod: post
    tag: Authentication
    typeScriptTag: authentication
    description: Log in an API token.
    parameters:
      - name: apiKey
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /auth/logout
    method: invalidateToken
    httpMethod: post
    tag: Authentication
    typeScriptTag: authentication
    description: Log out an API token.
    parameters: []
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/{attendanceId}
    method: removeById
    httpMethod: delete
    tag: Attendance
    typeScriptTag: attendance
    description: Delete an attendance for a given attendance id.
    parameters:
      - name: attendanceId
        schema: string
        required: true
        description: The Kenjo _id of the attendance entry to remove.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/{attendanceId}
    method: getById
    httpMethod: get
    tag: Attendance
    typeScriptTag: attendance
    description: Return an attendance for a given attendance id.
    parameters:
      - name: attendanceId
        schema: string
        required: true
        description: The _id of the attendance entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/{attendanceId}
    method: updateEntry
    httpMethod: put
    tag: Attendance
    typeScriptTag: attendance
    description: Update an attendance for a given attendance id.
    parameters:
      - name: attendanceId
        schema: string
        required: true
        description: The _id of the attendance entry to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: startTime
        schema: string
        description: ''
        example: '10:00:00'
      - name: endTime
        schema: string
        description: ''
        example: '10:00:00'
      - name: breaks
        schema: array
        description: ''
      - name: comment
        schema: string
        description: ''
        example: Morning working attendance tracking.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances
    method: getList
    httpMethod: get
    tag: Attendance
    typeScriptTag: attendance
    description: Return a list of attendances.
    parameters:
      - name: from
        schema: string
        required: true
        description: A date in format YYYY-MM-DD to indicate the starting point.
        example: '2021-02-01'
      - name: to
        schema: string
        required: true
        description: A date in format YYYY-MM-DD to indicate the ending point.
        example: '2021-02-04'
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances
    method: createEntry
    httpMethod: post
    tag: Attendance
    typeScriptTag: attendance
    description: Create a new attendance.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: userId
        schema: string
        required: false
        description: ''
        example: 50a2db290da29e126a18789a
      - name: email
        schema: string
        required: false
        description: ''
        example: john@acme.io
      - name: externalId
        schema: string
        required: false
        description: ''
        example: '00001'
      - name: date
        schema: string
        required: true
        description: ''
        example: '2021-07-01'
      - name: startTime
        schema: string
        required: true
        description: ''
        example: '10:00:00'
      - name: endTime
        schema: string
        required: false
        description: ''
        example: '13:00:00'
      - name: breaks
        schema: array
        required: false
        description: ''
      - name: comment
        schema: string
        required: false
        description: ''
        example: Morning working attendance tracking.
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/track-time
    method: createTrackTime
    httpMethod: post
    tag: Attendance
    typeScriptTag: attendance
    description: Track an attendance entry.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: userId
        schema: string
        required: false
        description: ''
        example: 50a2db290da29e126a18789a
      - name: email
        schema: string
        required: false
        description: ''
        example: john@acme.io
      - name: externalId
        schema: string
        required: false
        description: ''
        example: '00001'
      - name: dateTime
        schema: string
        required: true
        description: ''
        example: '2021-07-01T09:00:00'
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/categories
    method: getCategories
    httpMethod: get
    tag: Attendance
    typeScriptTag: attendance
    description: Return a list of attendance categories.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /attendances/expected-time
    method: getExpectedTimeByUser
    httpMethod: get
    tag: Attendance
    typeScriptTag: attendance
    description: Return a list of expected times.
    parameters:
      - name: from
        schema: string
        required: true
        description: A date in format YYYY-MM-DD to indicate the starting point.
        example: '2020-01-01'
      - name: to
        schema: string
        required: true
        description: A date in format YYYY-MM-DD to indicate the ending point.
        example: '2020-01-10'
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: companyId
        schema: string
        description: Optional filter. The company id of the Kenjo employee.
        example: 80a2db290da29e126a18789a
      - name: officeId
        schema: string
        description: Optional filter. The office id of the Kenjo employee.
        example: 80a2db290da29e126a18789d
      - name: departmentId
        schema: string
        description: Optional filter. The department id of the Kenjo employee.
        example: 80a2db290da29e126a18789c
      - name: userId
        schema: string
        description: >-
          Optional filter. The id of the Kenjo employee. It accepts 2
          formats:<br><br> 1. An unique string with the Kenjo employee id.
          <br>Example: *userId=80a2db290da29e126a18789c* <br><br> 2. A string
          with more than one Kenjo employee ids separated by commas (until 15
          ids as maximum). <br>Example:
          *userId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*
        example: 80a2db290da29e126a18789c
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /companies
    method: getList
    httpMethod: get
    tag: Companies
    typeScriptTag: companies
    description: Return a list of companies.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: The name of the company.
        example: ACME Ltd
      - name: city
        schema: string
        description: The city of the company.
        example: Madrid
      - name: country
        schema: string
        description: The country code of the company in ISO 3166-1 alpha-2.
        example: ES
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /offices
    method: getList
    httpMethod: get
    tag: Offices
    typeScriptTag: offices
    description: Return a list of offices.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: The name of the office.
        example: Berlin office
      - name: companyId
        schema: string
        description: The Kenjo id of the company.
        example: 40a2db290da29e126a187895
      - name: calendarId
        schema: string
        description: The Kenjo id of the calendar.
        example: 40a2db290da29e126a187895
      - name: street
        schema: string
        description: The street of the office.
        example: Urbanstrasse, 71
      - name: postalCode
        schema: string
        description: The postal code of the office.
        example: '34213'
      - name: city
        schema: string
        description: The city of the office.
        example: Berlin
      - name: country
        schema: string
        description: The country of the office in ISO code.
        example: DE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /offices
    method: createNewOffice
    httpMethod: post
    tag: Offices
    typeScriptTag: offices
    description: Create a new office.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Spain office
      - name: companyId
        schema: string
        description: ''
        example: 60dadb6362702d057f8fb486
      - name: calendarId
        schema: string
        description: ''
        example: 60f808f727ad58fe791bae91
      - name: country
        schema: string
        description: ''
        example: ES
      - name: postalCode
        schema: string
        description: ''
        example: '28030'
      - name: city
        schema: string
        description: ''
        example: ES
      - name: street
        schema: string
        description: ''
        example: Paseo Castellana, 13
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /offices/{id}
    method: removeById
    httpMethod: delete
    tag: Offices
    typeScriptTag: offices
    description: Delete an office for a given office id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the office entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /offices/{id}
    method: getById
    httpMethod: get
    tag: Offices
    typeScriptTag: offices
    description: Return an office for a given office id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the office entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /offices/{id}
    method: updateOfficeAttributes
    httpMethod: put
    tag: Offices
    typeScriptTag: offices
    description: Update an office for a given office id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the office entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Madrid office
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /departments
    method: listDepartments
    httpMethod: get
    tag: Departments
    typeScriptTag: departments
    description: Return a list of departments.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: The department name.
        example: Happiness dept.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /departments
    method: createNewDepartment
    httpMethod: post
    tag: Departments
    typeScriptTag: departments
    description: Create a new department.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Sales
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /departments/{id}
    method: removeById
    httpMethod: delete
    tag: Departments
    typeScriptTag: departments
    description: Delete a department for a given department id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the department entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /departments/{id}
    method: getById
    httpMethod: get
    tag: Departments
    typeScriptTag: departments
    description: Return a department for a given department id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the department entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /departments/{id}
    method: updateAttributes
    httpMethod: put
    tag: Departments
    typeScriptTag: departments
    description: Update a department for a given department id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the department entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Sales
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /teams
    method: getList
    httpMethod: get
    tag: Teams
    typeScriptTag: teams
    description: Return a list of teams.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: The team name.
        example: Developers
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /teams
    method: createTeam
    httpMethod: post
    tag: Teams
    typeScriptTag: teams
    description: Create a new team.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Tech devOps
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /teams/{id}
    method: removeTeam
    httpMethod: delete
    tag: Teams
    typeScriptTag: teams
    description: Delete a team for a given team id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the team entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /teams/{id}
    method: getById
    httpMethod: get
    tag: Teams
    typeScriptTag: teams
    description: Return a team for a given team id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the team entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /teams/{id}
    method: updateTeamAttributes
    httpMethod: put
    tag: Teams
    typeScriptTag: teams
    description: Update a team for a given team id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the team entry to request. Required field.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Sales
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /areas
    method: getList
    httpMethod: get
    tag: Areas
    typeScriptTag: areas
    description: Return a list of areas.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /areas
    method: createNewArea
    httpMethod: post
    tag: Areas
    typeScriptTag: areas
    description: Create a new area.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Recruiting feature
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /areas/{id}
    method: removeById
    httpMethod: delete
    tag: Areas
    typeScriptTag: areas
    description: Delete an area for a given area id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the area entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '204'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /areas/{id}
    method: getById
    httpMethod: get
    tag: Areas
    typeScriptTag: areas
    description: Return a area for a given area id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the area entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /areas/{id}
    method: updateAreaById
    httpMethod: put
    tag: Areas
    typeScriptTag: areas
    description: Update an area for a given area id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the area entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: ''
        example: Sales
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /calendars
    method: getList
    httpMethod: get
    tag: Calendars
    typeScriptTag: calendars
    description: Return a list of calendars.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        description: The calendar name.
        example: Madrid Calendar
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /calendars/{id}
    method: getById
    httpMethod: get
    tag: Calendars
    typeScriptTag: calendars
    description: Return a calendar for a given calendar id.
    parameters:
      - name: id
        schema: string
        required: true
        description: The _id of the calendar entry to request.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /user-accounts
    method: listEmployees
    httpMethod: get
    tag: User accounts
    typeScriptTag: userAccounts
    description: Return a list of users.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees
    method: getList
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of user accounts.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees
    method: createInactiveEmployee
    httpMethod: post
    tag: Employees
    typeScriptTag: employees
    description: Create a new employee.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: account
        schema: object
        description: ''
      - name: personal
        schema: object
        description: ''
      - name: work
        schema: object
        description: ''
      - name: workSchedule
        schema: object
        description: ''
      - name: address
        schema: object
        description: ''
      - name: financial
        schema: object
        description: ''
      - name: home
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}
    method: getEmployeeInformation
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return all the sections information for a given employee Id.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to request.
        example: 50a2db290da29e126a187843
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/accounts
    method: getAccounts
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee accounts.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: email
        schema: string
        description: The Kenjo email of the employee.
        example: john.doe@acme.com
      - name: language
        schema: string
        description: The employee language.
        example: es
      - name: externalId
        schema: string
        description: The external id of the employee.
        example: USER-123456
      - name: isActive
        schema: boolean
        description: The employee activation status.
        example: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/personals
    method: listPersonals
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee personals.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: firstName
        schema: string
        description: The name of the Kenjo employee. This field is required.
        example: John
      - name: lastName
        schema: string
        description: The surname of the Kenjo employee. This field is required.
        example: Doe
      - name: displayName
        schema: string
        description: The composition of firstName and lastName of the Kenjo employee.
        example: John Doe
      - name: gender
        schema: string
        description: >-
          The employee gender. Only is valid one of the following values 'Male'
          (https://www.kenjo.io/legal/api, 'Female'
          (https://www.kenjo.io/legal/api or 'Other'
          (https://www.kenjo.io/legal/api.
        example: es
      - name: birthdate
        schema: string
        description: The employee birth date. Format YYYY-MM-DDThh:00:00.000Z.
        example: '1980-01-28T00:00:00.000Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/works
    method: listWorks
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee works.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: companyId
        schema: string
        description: The company id of the Kenjo employee.
        example: 80a2db290da29e126a18789a
      - name: officeId
        schema: string
        description: The office id of the Kenjo employee.
        example: 80a2db290da29e126a18789d
      - name: departmentId
        schema: string
        description: The department id of the Kenjo employee.
        example: 80a2db290da29e126a18789c
      - name: startDate
        schema: string
        description: The starting date of the Kenjo employee in format YYYY-MM-DDThh:mm:ss.
        example: '2022-06-01T00:00:00.000Z'
      - name: jobTitle
        schema: string
        description: The job title of the employee.
        example: Actor
      - name: workPhone
        schema: string
        description: The work phone of the employee.
        example: 34 666 70 90 32
      - name: workMobile
        schema: string
        description: The work mobile of the employee.
        example: 34 680 70 90 32
      - name: isAssistant
        schema: boolean
        description: Allow to indicate if the employee has or not the assistant role.
        example: true
      - name: probationPeriodEnd
        schema: string
        description: The probation period of the employee. Format YYYY-MM-DDThh:mm:ss.000Z.
        example: '2022-06-01T00:00:00.000Z'
      - name: reportsToId
        schema: string
        description: >-
          The Kenjo employee id of the user to whom the employee reports. The
          employee id to assign can be an active or inactive user. Trying to
          assign the own employee id or the id of someone who is already
          reporting will arise an error.
        example: 80a2db290da29e126a187891
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/work-schedules
    method: getWorkSchedules
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee work schedules.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: trackAttendance
        schema: boolean
        description: The activation status of attendance tracking for the employee.
        example: false
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/addresses
    method: listAddresses
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee addresses.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: street
        schema: string
        description: The name of the street.
        example: ' Calle Enrique San Francisco 13'
      - name: postalCode
        schema: string
        description: The postal code.
        example: '28080'
      - name: city
        schema: string
        description: The city.
        example: Madrid
      - name: country
        schema: string
        description: The country code in ISO 3166-1 alpha-2.
        example: ES
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/financials
    method: listFinancials
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee financials.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: accountHolderName
        schema: string
        description: The accounts holder's name.
        example: Michael Corleone
      - name: bankName
        schema: string
        description: The bank name.
        example: Bank of Sicily
      - name: accountNumber
        schema: string
        description: The account number.
        example: 0093 344 2132221 3304 00
      - name: iban
        schema: string
        description: The IBAN.
        example: DE32120222391919191911
      - name: swiftCode
        schema: string
        description: The SWIFT code.
        example: '12321234'
      - name: nationalId
        schema: string
        description: The national id document
        example: 04123547X
      - name: passport
        schema: string
        description: The passport number.
        example: FA1234098
      - name: nationalInsuranceNumber
        schema: string
        description: The national insurance number.
        example: '23123312321'
      - name: taxCode
        schema: string
        description: The tax number.
        example: 323451R
      - name: taxIdentificationNumber
        schema: string
        description: The tax identification number.
        example: T4312345
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/homes
    method: listHomes
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Return a list of employee homes.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: maritalStatus
        schema: string
        description: >-
          The marital status. Only is valid one of the following values
          "Divorced", "Domestic Partnership", "Married", "Separated", "Single",
          "Widowed".
        example: Widowed
      - name: spouseFirstName
        schema: string
        description: The first name of the employee's spouse.
        example: Catherine
      - name: spouseLastName
        schema: string
        description: The last name of the employee's spouse.
        example: Tramell
      - name: spouseBirthdate
        schema: string
        description: >-
          The birth date of the employee's spouse. Format
          YYYY-MM-DDThh:mm:ss.000Z.
        example: '2060-01-26T00:00:00.000Z'
      - name: spouseGender
        schema: string
        description: >-
          The employee's spouse gender. Only is valid one of the following
          values 'Male' (https://www.kenjo.io/legal/api, 'Female'
          (https://www.kenjo.io/legal/api or 'Other'
          (https://www.kenjo.io/legal/api.
        example: Female
      - name: personalEmail
        schema: string
        description: The employee personal email.
        example: john.doe@acme.com
      - name: personalPhone
        schema: string
        description: The employee personal phone.
        example: '4567092323'
      - name: personalMobile
        schema: string
        description: The employee personal mobile.
        example: '3567092310'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/accounts
    method: updateEmployeeAccounts
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the account section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: email
        schema: string
        description: ''
        example: john@acme.io
      - name: externalId
        schema: string
        description: ''
        example: E-000001
      - name: language
        schema: string
        description: ''
        example: en
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/personals
    method: updatePersonals
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the personal section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: firstName
        schema: string
        description: ''
        example: Juanito
      - name: lastName
        schema: string
        description: ''
        example: Nadie
      - name: displayName
        schema: string
        description: ''
        example: Juanito Nadie
      - name: gender
        schema: string
        description: ''
        example: Male
      - name: birthdate
        schema: string
        description: ''
        example: '1980-01-28T00:00:00.000Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/works
    method: updateWorks
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the work section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: companyId
        schema: string
        description: ''
        example: 50a2db290da29e126a187894
      - name: officeId
        schema: string
        description: ''
        example: 50a2db290da29e126a187895
      - name: departmentId
        schema: string
        description: ''
        example: 50a2db290da29e126a187896
      - name: startDate
        schema: string
        description: ''
        example: '2021-07-01T00:00:00.000Z'
      - name: jobTitle
        schema: string
        description: ''
        example: Actor
      - name: workPhone
        schema: string
        description: ''
        example: +34 666 70 90 32
      - name: workMobile
        schema: string
        description: ''
        example: +34 680 70 90 32
      - name: isAssistant
        schema: boolean
        description: ''
        example: false
      - name: probationPeriodEnd
        schema: string
        description: ''
        example: '2022-06-01T00:00:00.000Z'
      - name: reportsToId
        schema: string
        description: ''
        example: 50a2db290da29e126a1878523
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/work-schedules
    method: updateWorkSchedule
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the work schedule section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: mondayWorkingDay
        schema: boolean
        description: ''
        example: true
      - name: tuesdayWorkingDay
        schema: boolean
        description: ''
        example: true
      - name: wednesdayWorkingDay
        schema: boolean
        description: ''
        example: true
      - name: thursdayWorkingDay
        schema: boolean
        description: ''
        example: true
      - name: fridayWorkingDay
        schema: boolean
        description: ''
        example: false
      - name: saturdayWorkingDay
        schema: boolean
        description: ''
        example: false
      - name: sundayWorkingDay
        schema: boolean
        description: ''
        example: false
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/addresses
    method: updateAddress
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the address section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: street
        schema: string
        description: ''
      - name: postalCode
        schema: string
        description: ''
      - name: city
        schema: string
        description: ''
      - name: country
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/financials
    method: updateFinancials
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the financial section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: accountHolderName
        schema: string
        description: ''
        example: Michael Corleone
      - name: bankName
        schema: string
        description: ''
        example: Bank of Sicily
      - name: accountNumber
        schema: string
        description: ''
        example: 0093 344 2132221 3304 00
      - name: iban
        schema: string
        description: ''
        example: DE32120222391919191911
      - name: swiftCode
        schema: string
        description: ''
        example: '12321234'
      - name: nationalId
        schema: string
        description: ''
        example: 04123547X
      - name: passport
        schema: string
        description: ''
        example: FA1234098
      - name: nationalInsuranceNumber
        schema: string
        description: ''
        example: '23123312321'
      - name: taxCode
        schema: string
        description: ''
        example: 323451R
      - name: taxIdentificationNumber
        schema: string
        description: ''
        example: T4312345
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/homes
    method: updateHome
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Update the home section for a given employee id.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: maritalStatus
        schema: string
        description: ''
        example: Widowed
      - name: spouseFirstName
        schema: string
        description: ''
        example: Catherine
      - name: spouseLastName
        schema: string
        description: ''
        example: Tramell
      - name: spouseBirthdate
        schema: string
        description: ''
        example: '2060-01-26T00:00:00.000Z'
      - name: spouseGender
        schema: string
        description: ''
        example: Female
      - name: personalEmail
        schema: string
        description: ''
        example: john@acme.io
      - name: personalPhone
        schema: string
        description: ''
        example: '4567092323'
      - name: personalMobile
        schema: string
        description: ''
        example: '3567092310'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/activate
    method: activateEmployee
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Activate an employee.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to send the activation email.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /employees/{employeeId}/deactivate
    method: deactivateEmployeeById
    httpMethod: put
    tag: Employees
    typeScriptTag: employees
    description: Deactivate an employee.
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: The _id of the employee to update.
        example: 60a2db290da29e126a18789a
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /custom-fields
    method: getList
    httpMethod: get
    tag: Custom fields
    typeScriptTag: customFields
    description: Return a list of custome fields.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: section
        schema: string
        description: The name of custom field section.
        example: personal
      - name: label
        schema: string
        description: The name of the custom field label.
        example: Blood type
      - name: apiName
        schema: string
        description: >-
          The api name is a required identifier to perform POST and PUT
          operations with employees.
        example: c_Bloodtype
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /time-off/requests
    method: getRequestsByDate
    httpMethod: get
    tag: Time off
    typeScriptTag: timeOff
    description: Return a list of time-off requests.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: from
        schema: string
        required: true
        description: >-
          A date in format YYYY-MM-DD to indicate the starting point. It needs
          to be equals or less than the *to* param.
        example: '2020-01-01'
      - name: to
        schema: string
        required: true
        description: >-
          A date in format YYYY-MM-DD to indicate the ending point. It needs to
          be equals or greater than the *from* param.
        example: '2020-01-10'
      - name: userId
        schema: string
        required: false
        description: >-
          This field allows to return only the time off requests for a given
          *_userId*.
        example: 60a2db290da29e126a18789b
      - name: timeOffTypeId
        schema: string
        required: false
        description: This field allows to filter by time-off type Id.
        example: 90a2db290da29e126a187891
      - name: status
        schema: string
        required: false
        description: This field allows to filter by the time-off request status.
        example: Approved
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /time-off/types
    method: getTypes
    httpMethod: get
    tag: Time off
    typeScriptTag: timeOff
    description: Return a list of time-off types.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: name
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve time-off types
          based on their *name*. It can accept two formats:<br><br> 1. A single
          *name* as a unique string. <br>Example: *name=Sick* <br><br> 2.
          Multiple *name* values separated by commas (up to a maximum of 15
          values). <br>Example: *name=Maternity,Sick,Home*. These options
          provide flexibility in filtering contracts by their type, making it
          easier to retrieve the specific data you need.
        example: Sick
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /time-off/requests/processed
    method: createRequest
    httpMethod: post
    tag: Time off
    typeScriptTag: timeOff
    description: Create a new time-off request.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: _userId
        schema: string
        required: true
        description: ''
        example: 50a2db290da29e126a18789a
      - name: _timeOffTypeId
        schema: string
        required: true
        description: ''
        example: 50a2db290da29e126a18789f
      - name: from
        schema: string
        required: true
        description: ''
        example: '2020-01-26'
      - name: to
        schema: string
        required: true
        description: ''
        example: '2020-01-30'
      - name: partOfDayFrom
        schema: string
        required: false
        description: ''
        example: StartOfDay
      - name: partOfDayTo
        schema: string
        required: false
        description: ''
        example: HalfOfDay
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /compensation/contracts
    method: getContracts
    httpMethod: get
    tag: Compensation
    typeScriptTag: compensation
    description: Return a list of contracts.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: contractTypeId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *contractTypeId*. It can accept two formats:<br><br> 1. A single
          *contractTypeId* as a unique string. <br>Example:
          *contractTypeId=80a2db290da29e126a18789c* <br><br> 2. Multiple
          *contractTypeId* values separated by commas (up to a maximum of 15
          values). <br>Example:
          *contractTypeId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 60a2db290da29e126a18789e
      - name: userId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_userId*. It can accept two formats:<br><br> 1. A single
          *_userId* as a unique string. <br>Example:
          *_userId=80a2db290da29e126a18789c* <br><br> 2. Multiple *_userId*
          values separated by commas (up to a maximum of 15 values).
          <br>Example:
          *_userId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 60a2db290da29e126a18789b
      - name: companyId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_companyId*. It can accept two formats:<br><br> 1. A single
          *_companyId* as a unique string. <br>Example:
          *_companyId=80a2db290da29e126a18789c* <br><br> 2. Multiple
          *_companyId* values separated by commas (up to a maximum of 15
          values). <br>Example:
          *_companyId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 90a2db290da29e126a187891
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /compensation/contract-types
    method: listContractTypes
    httpMethod: get
    tag: Compensation
    typeScriptTag: compensation
    description: Return a list of contract types.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: isActive
        schema: boolean
        required: false
        description: This field allows to return only the active contract types.
        example: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /compensation/salaries
    method: getSalariesList
    httpMethod: get
    tag: Compensation
    typeScriptTag: compensation
    description: Return a list of salaries.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: userId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_userId*. It can accept two formats:<br><br> 1. A single
          *_userId* as a unique string. <br>Example:
          *_userId=80a2db290da29e126a18789c* <br><br> 2. Multiple *_userId*
          values separated by commas (up to a maximum of 15 values).
          <br>Example:
          *_userId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 60a2db290da29e126a18789b
      - name: companyId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_companyId*. It can accept two formats:<br><br> 1. A single
          *_companyId* as a unique string. <br>Example:
          *_companyId=80a2db290da29e126a18789c* <br><br> 2. Multiple
          *_companyId* values separated by commas (up to a maximum of 15
          values). <br>Example:
          *_companyId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 90a2db290da29e126a187891
      - name: paymentPeriod
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *paymentPeriod*. Accepted values: 'Annual', 'Monthly' and
          'Hourly'. It can accept two formats:<br><br> 1. A single
          *paymentPeriod* as a unique string. <br>Example:
          *paymentPeriod=Annual* <br><br> 2. Multiple *paymentPeriod* values
          separated by commas (up to a maximum of 15 values). <br>Example:
          *paymentPeriod=Annual,Monthly*. These options provide flexibility in
          filtering contracts by their type, making it easier to retrieve the
          specific data you need.
        example: Annual
      - name: currency
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *currency* (ISO 4217). It can accept two formats:<br><br> 1. A
          single *currency* as a unique string. <br>Example: *currency=EUR*
          <br><br> 2. Multiple *currency* values separated by commas (up to a
          maximum of 15 values). <br>Example: *currency=EUR,USD*. These options
          provide flexibility in filtering contracts by their type, making it
          easier to retrieve the specific data you need.
        example: EUR
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /compensation/additional-payments
    method: listAdditionalPayments
    httpMethod: get
    tag: Compensation
    typeScriptTag: compensation
    description: Return a list of additional payments.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: userId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_userId*. It can accept two formats:<br><br> 1. A single
          *_userId* as a unique string. <br>Example:
          *_userId=80a2db290da29e126a18789c* <br><br> 2. Multiple *_userId*
          values separated by commas (up to a maximum of 15 values).
          <br>Example:
          *_userId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 60a2db290da29e126a18789b
      - name: companyId
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *_companyId*. It can accept two formats:<br><br> 1. A single
          *_companyId* as a unique string. <br>Example:
          *_companyId=80a2db290da29e126a18789c* <br><br> 2. Multiple
          *_companyId* values separated by commas (up to a maximum of 15
          values). <br>Example:
          *_companyId=80a2db290da29e126a18789c,80a2db290da29e126a18789b,80a2db290da29e126a187891*.
          These options provide flexibility in filtering contracts by their
          type, making it easier to retrieve the specific data you need.
        example: 90a2db290da29e126a187891
      - name: currency
        schema: string
        required: false
        description: >-
          Optional filter. This field allows you to retrieve contracts based on
          their *currency* (ISO 4217). It can accept two formats:<br><br> 1. A
          single *currency* as a unique string. <br>Example: *currency=EUR*
          <br><br> 2. Multiple *currency* values separated by commas (up to a
          maximum of 15 values). <br>Example: *currency=EUR,USD*. These options
          provide flexibility in filtering contracts by their type, making it
          easier to retrieve the specific data you need.
        example: EUR
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /compensation/additional-payment-types
    method: listAdditionalPaymentTypes
    httpMethod: get
    tag: Compensation
    typeScriptTag: compensation
    description: Return a list of additional payment types.
    parameters:
      - name: authorization
        schema: string
        required: true
        description: A valid bearer token.
        example: >-
          Bearer
          eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2FwaS5rZW5qby5pbyIsInN1YiI6IjYwZjBhOTE2MjE0OTg3MjU2YmU5YzhmZiIsImF1ZCI6Imh0dHBzOi8vYXBpLmtlbmpvLmlvIiwiaWF0IjoxNjI2Mzg1MTE1LCJuYmYiOjE2MjYzODUxMTUsImV4cCI6MTYyNjU1NzkxNSwiYWNjZXNzVHlwZSI6IkFwaUFjY2VzcyIsInNfb3JnSWQiOiI2MGYwNGVhN2RmN2JhMjFlY2U0YmYzYzIifQ.cxG_7dIS-VbmDXdJuLkekoyuyCIzQG2fMcgc0nkfbWE8cihhcb5FnALbQkjU9b5-qVcEoMHZlSuUA-jMEBMMVQ
      - name: offset
        schema: number
        description: >-
          Optional filter for pagination proposals. Determines the number of
          pages to skip when pagination is being used. If this value is not
          provided, by default the offset will be 1.
        example: 1
      - name: limit
        schema: number
        description: >-
          Optional filter for pagination proposals. The maximum number of rows
          to retrieve which determines the size of the page. If this value is
          not provided then the limit will be 50 users. The maximum value of the
          limit is 100 users per page. Only are valid the following limit
          values: 25, 50 and 100.
        example: 25
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
numberOfSchemas: 81
apiDescription: >-
  Before starting to use the Kenjo API, you have to request the API activation
  for a sandbox or production environment to the Kenjo Customer Success team.
  After that, an admin user has to go to *Settings > Integrations > API keys*,
  to generate the **API Key**. Follow the steps described in the **Autentication
  section** of this document. <br>The API key is needed to request the bearer
  token. Each endpoint callout requires a valid bearer token in the
  Authorization header. Once the token is retrieved, it will be useful during
  the time limit indicated by the 'expiration date'.
