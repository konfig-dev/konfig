hash: 62ac672d091e8241c12841cf05f0cd234b1adefb72ff1bf647654ab8786977fd
methodObjects:
  - url: /connect
    method: authorizeUser
    httpMethod: get
    tag: oauth
    typeScriptTag: oauth
    description: >-
      The OAuth2 authorization endpoint. Your app redirects a user to this
      endpoint, allowing them to delegate access to their account.
    parameters:
      - name: clientId
        schema: string
        required: true
        description: The client id belonging to your application
      - name: redirectUri
        schema: string
        required: true
        description: The redirect uri you have configured for your application
      - name: responseType
        schema: string
        required: true
        description: Support only the Authorization Code Flow
      - name: state
        schema: string
        required: false
        description: >-
          Any value included here will be appended to the redirect URI. Use this
          for CSRF protection.
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '302'
        description: Redirect to connect portal
      - statusCode: '401'
        description: ''
  - url: /oauth2/token
    method: provisionAccessToken
    httpMethod: post
    tag: oauth
    typeScriptTag: oauth
    description: >-
      This endpoint accepts POST requests and is used to provision access tokens
      once a user has authorized your application.
    parameters:
      - name: grant_type
        schema: string
        required: true
        description: ''
      - name: client_id
        schema: string
        required: true
        description: ''
      - name: client_secret
        schema: string
        required: true
        description: ''
      - name: code
        schema: string
        required: false
        description: ''
      - name: redirect_uri
        schema: string
        required: false
        description: ''
      - name: refresh_token
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me
    method: getUserInformation
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns the authenticated userâ€™s information.
    parameters: []
    responses:
      - statusCode: '200'
        description: SoundCloud Me object
      - statusCode: '401'
        description: ''
  - url: /me/activities
    method: getActivities
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns the authenticated user's activities.
    parameters:
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: User's activities.
      - statusCode: '401'
        description: ''
  - url: /me/activities/all/own
    method: getRecentActivities
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Recent the authenticated user's activities.
    parameters:
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: User's activities.
      - statusCode: '401'
        description: ''
  - url: /me/activities/tracks
    method: getRecentTracks
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns the authenticated user's recent track related activities.
    parameters:
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: User's activities.
      - statusCode: '401'
        description: ''
  - url: /me/likes/tracks
    method: listLikedTracks
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns a list of favorited or liked tracks of the authenticated user.
    parameters:
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me/likes/playlists
    method: getLikedPlaylists
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns a list of favorited or liked playlists of the authenticated user.
    parameters:
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me/followings
    method: getFollowedUsers
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns a list of users who are followed by the authenticated user.
    parameters:
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me/followings/tracks
    method: listFollowedTracks
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: >-
      Returns a list of recent tracks from users followed by the authenticated
      user.
    parameters:
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me/followings/{user_id}
    method: deleteFollowedUser
    httpMethod: delete
    tag: me
    typeScriptTag: me
    description: Deletes a user who is followed by the authenticated user.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /me/followings/{user_id}
    method: getFollowedUser
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: >-
      Returns a user who is followed by the authenticated user. (use
      /users/{user_id} instead, to fetch the user details)
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
    responses:
      - statusCode: '200'
        description: SoundCloud User object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /me/followings/{user_id}
    method: followUser
    httpMethod: put
    tag: me
    typeScriptTag: me
    description: Follows a user.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '201'
        description: SoundCloud User object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /me/followers
    method: getFollowersList
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns a list of users who are following the authenticated user.
    parameters:
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /me/followers/{follower_id}
    method: getFollowerById
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: >-
      Returns a user who is following the authenticated user. (use
      /users/{user_id} instead, to fetch the user details)
    parameters:
      - name: followerId
        schema: integer
        required: true
        description: SoundCloud User id to denote a Follower
    responses:
      - statusCode: '200'
        description: SoundCloud User object
      - statusCode: '401'
        description: ''
  - url: /me/playlists
    method: listPlaylistsInfoTracksOwner
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns userâ€™s playlists (sets).
    parameters:
      - name: showTracks
        schema: boolean
        required: false
        description: >-
          A boolean flag to request a playlist with or without tracks. Default
          is `true`.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /me/tracks
    method: listUserTracks
    httpMethod: get
    tag: me
    typeScriptTag: me
    description: Returns a list of user's tracks.
    parameters:
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /tracks
    method: byQuery
    httpMethod: get
    tag: search
    typeScriptTag: search
    description: Performs a track search based on a query
    parameters:
      - name: q
        schema: string
        required: false
        description: search
      - name: ids
        schema: string
        required: false
        description: A comma separated list of track ids to filter on
      - name: genres
        schema: string
        required: false
        description: A comma separated list of genres
      - name: tags
        schema: string
        required: false
        description: A comma separated list of tags
      - name: bpm
        schema: object
        required: false
        description: Return tracks with a specified bpm[from], bpm[to]
      - name: duration
        schema: object
        required: false
        description: Return tracks within a specified duration range
      - name: createdAt
        schema: object
        required: false
        description: (yyyy-mm-dd hh:mm:ss) return tracks created within the specified dates
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '500'
        description: Internal Server Error
  - url: /tracks
    method: uploadNewTrack
    httpMethod: post
    tag: tracks
    typeScriptTag: tracks
    description: Uploads a new track.
    parameters: []
    responses:
      - statusCode: '201'
        description: Soundcloud Track object.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /playlists
    method: byQuery
    httpMethod: get
    tag: search
    typeScriptTag: search
    description: Performs a playlist search based on a query
    parameters:
      - name: q
        schema: string
        required: false
        description: search
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: showTracks
        schema: boolean
        required: false
        description: >-
          A boolean flag to request a playlist with or without tracks. Default
          is `true`.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /playlists
    method: createNewPlaylist
    httpMethod: post
    tag: playlists
    typeScriptTag: playlists
    description: Creates a playlist.
    parameters:
      - name: playlist
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: Soundcloud Playlist Object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /users
    method: userQuery
    httpMethod: get
    tag: search
    typeScriptTag: search
    description: Performs a user search based on a query
    parameters:
      - name: q
        schema: string
        required: false
        description: search
      - name: ids
        schema: string
        required: false
        description: A comma separated list of track ids to filter on
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /playlists/{playlist_id}
    method: deletePlaylist
    httpMethod: delete
    tag: playlists
    typeScriptTag: playlists
    description: Deletes a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
    responses:
      - statusCode: '200'
        description: Success
      - statusCode: '404'
        description: ''
  - url: /playlists/{playlist_id}
    method: getPlaylistById
    httpMethod: get
    tag: playlists
    typeScriptTag: playlists
    description: Returns a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
      - name: secretToken
        schema: string
        required: false
        description: A secret token to fetch private playlists/tracks
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: showTracks
        schema: boolean
        required: false
        description: >-
          A boolean flag to request a playlist with or without tracks. Default
          is `true`.
    responses:
      - statusCode: '200'
        description: Soundcloud Playlist Object
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /playlists/{playlist_id}
    method: updatePlaylistById
    httpMethod: put
    tag: playlists
    typeScriptTag: playlists
    description: Updates a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
      - name: playlist
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Soundcloud Playlist Object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /playlists/{playlist_id}/tracks
    method: getTracks
    httpMethod: get
    tag: playlists
    typeScriptTag: playlists
    description: Returns tracks under a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
      - name: secretToken
        schema: string
        required: false
        description: A secret token to fetch private playlists/tracks
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /playlists/{playlist_id}/reposters
    method: listReposters
    httpMethod: get
    tag: playlists
    typeScriptTag: playlists
    description: Returns a collection of playlist's reposters.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}
    method: deleteTrack
    httpMethod: delete
    tag: tracks
    typeScriptTag: tracks
    description: Deletes a track.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
    responses:
      - statusCode: '200'
        description: Success
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}
    method: getById
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns a track.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: secretToken
        schema: string
        required: false
        description: A secret token to fetch private playlists/tracks
    responses:
      - statusCode: '200'
        description: Soundcloud Track object.
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}
    method: updateTrackInformation
    httpMethod: put
    tag: tracks
    typeScriptTag: tracks
    description: Updates a track's information.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: track
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Soundcloud Track object.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /tracks/{track_id}/streams
    method: getStreamableUrls
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns a track's streamable URLs
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: secretToken
        schema: string
        required: false
        description: A secret token to fetch private playlists/tracks
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}/comments
    method: getComments
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns the comments posted on the track(track_id).
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}/comments
    method: createComment
    httpMethod: post
    tag: tracks
    typeScriptTag: tracks
    description: Returns the newly created comment on success
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: comment
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: User's Comment
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /tracks/{track_id}/favoriters
    method: getFavoriters
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns a list of users who have favorited or liked the track.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}/reposters
    method: listReposters
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns a collection of track's reposters.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tracks/{track_id}/related
    method: getRelatedTracks
    httpMethod: get
    tag: tracks
    typeScriptTag: tracks
    description: Returns all related tracks of track on SoundCloud.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: offset
        schema: integer
        required: false
        description: Offset of first result. Deprecated, use `linked_partitioning` instead.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /resolve
    method: resolveSoundcloudUrls
    httpMethod: get
    tag: miscellaneous
    typeScriptTag: miscellaneous
    description: >-
      Resolves soundcloud.com and on.soundcloud.com URLs to Resource URLs to use
      with the API.
    parameters:
      - name: url
        schema: string
        required: true
        description: SoundCloud URL
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '302'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /users/{user_id}
    method: getUser
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a user.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
    responses:
      - statusCode: '200'
        description: SoundCloud User object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /users/{user_id}/favorites
    method: listFavorites
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: >-
      Returns a list of user's favorited or liked tracks. (use
      /users/:userId/likes/tracks instead, to fetch a user's likes)
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/followers
    method: getFollowers
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of userâ€™s followers.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/followings
    method: getUserFollowings
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of userâ€™s followings.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/followings/{following_id}
    method: getFollowingById
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: >-
      Returns a user's following. (use /users/{user_id} instead, to fetch the
      user details)
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: followingId
        schema: integer
        required: true
        description: SoundCloud User id to denote a Following of a user
    responses:
      - statusCode: '200'
        description: SoundCloud User object
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /users/{user_id}/playlists
    method: getUserPlaylists
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of user's playlists.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: showTracks
        schema: boolean
        required: false
        description: >-
          A boolean flag to request a playlist with or without tracks. Default
          is `true`.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/tracks
    method: getUserTracks
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of user's tracks.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/web-profiles
    method: getUserWebProfiles
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: >-
      Returns list of user's links added to their profile (website, facebook,
      instagram).
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
    responses:
      - statusCode: '200'
        description: User's links added to their profile
      - statusCode: '401'
        description: ''
  - url: /users/{user_id}/likes/tracks
    method: listLikedTracks
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of user's liked tracks.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: access
        schema: array
        description: >
          Filters content by level of access the user (logged in or anonymous)
          has to the track. The result list will include only tracks with the
          specified access. Include all options if you'd like to see all
          possible tracks. See `Track#access` schema for more details.
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /users/{user_id}/likes/playlists
    method: listLikedPlaylists
    httpMethod: get
    tag: users
    typeScriptTag: users
    description: Returns a list of user's liked playlists.
    parameters:
      - name: userId
        schema: integer
        required: true
        description: SoundCloud User id
      - name: limit
        schema: integer
        required: false
        description: Number of results to return in the collection.
      - name: linkedPartitioning
        schema: boolean
        required: false
        description: >-
          Returns paginated collection of items (recommended, returning a list
          without pagination is deprecated and should not be used)
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /likes/tracks/{track_id}
    method: unlikeTrack
    httpMethod: delete
    tag: likes
    typeScriptTag: likes
    description: Unlikes a track.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /likes/tracks/{track_id}
    method: trackAction
    httpMethod: post
    tag: likes
    typeScriptTag: likes
    description: Likes a track.
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /likes/playlists/{playlist_id}
    method: unlikePlaylist
    httpMethod: delete
    tag: likes
    typeScriptTag: likes
    description: Unlikes a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /likes/playlists/{playlist_id}
    method: playlist
    httpMethod: post
    tag: likes
    typeScriptTag: likes
    description: Likes a playlist.
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /reposts/tracks/{track_id}
    method: removeRepost
    httpMethod: delete
    tag: reposts
    typeScriptTag: reposts
    description: Removes a repost on a track as the authenticated user
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
    responses:
      - statusCode: '200'
        description: Success
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /reposts/tracks/{track_id}
    method: trackAsAuthenticatedUser
    httpMethod: post
    tag: reposts
    typeScriptTag: reposts
    description: Reposts a track as the authenticated user
    parameters:
      - name: trackId
        schema: integer
        required: true
        description: SoundCloud Track id
    responses:
      - statusCode: '201'
        description: Created
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /reposts/playlists/{playlist_id}
    method: removeRepostOnPlaylist
    httpMethod: delete
    tag: reposts
    typeScriptTag: reposts
    description: Removes a repost on a playlist as the authenticated user
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
    responses:
      - statusCode: '200'
        description: Success
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /reposts/playlists/{playlist_id}
    method: playlistAsAuthenticatedUser
    httpMethod: post
    tag: reposts
    typeScriptTag: reposts
    description: Reposts a playlist as the authenticated user
    parameters:
      - name: playlistId
        schema: integer
        required: true
        description: SoundCloud playlist id
    responses:
      - statusCode: '201'
        description: Created
      - statusCode: '401'
        description: ''
      - statusCode: '404'
        description: ''
numberOfSchemas: 30
apiDescription: Missing description placeholder
