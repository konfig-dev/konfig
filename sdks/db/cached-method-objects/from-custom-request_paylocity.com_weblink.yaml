hash: 2fe886b2b918db7aaf44ac31d612caf138416afe4a79a87baae68e8e95ce7d7b
methodObjects:
  - url: /compliance/v1/companies/b6001/clientOnboarding/status
    method: upsertOnboardingStatus
    httpMethod: post
    tag: Client Onboarding
    typeScriptTag: clientOnboarding
    description: Upsert onboarding status
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: companyId
        schema: string
        description: ''
        example: ' A00123'
      - name: status
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Onboarding Response
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: /compliance/v1/companies/{companyId}/clientOnboarding/billing
    method: insertBillingCodes
    httpMethod: post
    tag: Client Onboarding
    typeScriptTag: clientOnboarding
    description: Add billing codes
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: billingCodes
        schema: array
        description: ''
    responses:
      - statusCode: '201'
        description: Created entity.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/{companyId}/clientOnboarding/billing/{billingCode}
    method: deleteBillingCode
    httpMethod: delete
    tag: Client Onboarding
    typeScriptTag: clientOnboarding
    description: Delete billing code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: billingCode
        schema: string
        required: true
        description: Billing code to be deleted.
        example: BILLINGCODE
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '204'
        description: Returns confirmation that billing code has been deleted
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '404'
        description: ''
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/{companyId}/clientOnboarding/billing/{billingCode}
    method: updateBillingStatus
    httpMethod: patch
    tag: Client Onboarding
    typeScriptTag: clientOnboarding
    description: Updates billing code status
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: billingCode
        schema: string
        required: true
        description: >-
          Billing code associated with the screening order. This billing code is
          created on the partner side for a specific company.
        example: BILLINGCODE
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: isActive
        schema: boolean
        description: ''
    responses:
      - statusCode: '204'
        description: Returns confirmation that billing code has been updated
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '404'
        description: ''
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription
    method: newCandidateScreeningOrderWebhook
    httpMethod: get
    tag: Subscription
    typeScriptTag: subscription
    description: >-
      Returns the webhook for the subscription of a new candidate screening
      order
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: Callback informations.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '404'
        description: ''
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription
    method: registerWebhookUrl
    httpMethod: post
    tag: Subscription
    typeScriptTag: subscription
    description: >-
      Register the webhook URL for the subscription of new
      CandidateScreeningOrder
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: apiKey
        schema: string
        description: ''
      - name: callbackDetails
        schema: object
        description: ''
      - name: callerDetails
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Response of successfully registed webhook.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription/{callbackId}
    method: deleteWebhook
    httpMethod: delete
    tag: Subscription
    typeScriptTag: subscription
    description: Deletes the webhook
    parameters:
      - name: callbackId
        schema: string
        required: true
        description: The GUID of the Callback URL returned by the POST or GET method
        example: CALLBACKID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages
    method: listForCompany
    httpMethod: get
    tag: Screening Package
    typeScriptTag: screeningPackage
    description: Returns screening packages
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages
    method: bulkUpsert
    httpMethod: post
    tag: Screening Package
    typeScriptTag: screeningPackage
    description: Bulk Upsert
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: packages
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: Screening Package Upserted Response
      - statusCode: '400'
        description: Bad Request Error - Returns the details of the error
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: Unsupported Media Type - Returns the details of the error
  - url: >-
      /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages/{packageId}
    method: deletePackage
    httpMethod: delete
    tag: Screening Package
    typeScriptTag: screeningPackage
    description: Deletes screening package
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: packageId
        schema: string
        required: true
        description: The Id of the Screening Package.
        example: PACKAGEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: The response of the delete operation.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '404'
        description: ''
  - url: >-
      /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages/{packageId}
    method: upsertPackageInfo
    httpMethod: post
    tag: Screening Package
    typeScriptTag: screeningPackage
    description: Upserts screening package
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: packageId
        schema: string
        required: true
        description: "The Id of the Screening Package.\r\n                **Allowable Values:**\r\n                36 char max"
        example: PACKAGEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: isActive
        schema: boolean
        description: ''
      - name: packageSummary
        schema: string
        description: ''
      - name: packageName
        schema: string
        description: ''
      - name: services
        schema: array
        description: ''
      - name: price
        schema: object
        description: ''
      - name: billingCode
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Screening Package Upserted Response
      - statusCode: '400'
        description: Bad Request Error - Returns the details of the error
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: >-
      /compliance/v1/companies/{companyId}/backgroundCheck/candidateScreeningOrders/status
    method: updateStatus
    httpMethod: patch
    tag: Candidate Screening Order
    typeScriptTag: candidateScreeningOrder
    description: Updates the Screening Order status
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: candidateScreeningOrderId
        schema: string
        description: ''
        example: e72f7918-20c5-4bd2-9a5f-9bee67bd304d
      - name: updatedAt
        schema: string
        description: ''
        example: '2023-01-04T04:23:11.586Z'
      - name: oldStatus
        schema: string
        description: ''
      - name: newStatus
        schema: string
        description: ''
      - name: services
        schema: array
        description: ''
      - name: screeningReportDocuments
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: The response of the update screening order
      - statusCode: '400'
        description: Bad Request Error - Returns the details of the error
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '415'
        description: ''
  - url: /apiHub/corehr/v1/companies/{companyId}
    method: getDetails
    httpMethod: get
    tag: Company Information
    typeScriptTag: companyInformation
    description: GET a single Company Information
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/corehr/v1/companies/{companyId}/workLocations
    method: getWorkLocationsByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a list of Work Locations by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/corehr/v1/companies/{companyId}/rateCodes
    method: listRateCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a list of Rate Codes by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/corehr/v1/companies/{companyId}/costCentersAndLevels
    method: getCostCenterListByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a list of Cost Centers by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/earnings
    method: getEarningCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a List of Earning Codes by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: limit
        schema: integer
        description: "Number of earning codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/deductions
    method: getDeductionCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: "GET a list of Deduction Codes by Company ID\r\n"
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
      - name: limit
        schema: integer
        description: "Number of deduction codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 50
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/payFrequencies
    method: listPayFrequenciesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: "GET Pay Frequency Code by list by Company ID\r\n"
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/taxes
    method: getTaxCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: "GET a list of Tax Codes by Company ID\r\n"
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
      - name: limit
        schema: integer
        description: "Number of tax codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 50
    responses:
      - statusCode: '200'
        description: ''
  - url: >-
      /apiHub/positionManagement/v1/companies/{companyId}/workerCompensationCodes
    method: listWorkerCompensationCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a List of Workers Compensation Codes by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: limit
        schema: integer
        description: "Number of workers compensation codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/positionManagement/v1/companies/{companyId}/positions
    method: listPositionCodesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a List of Position Codes by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: limit
        schema: integer
        description: "Number of position codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/positionManagement/v1/companies/{companyId}/payGrades
    method: getPayGradesByCompanyId
    httpMethod: get
    tag: Payroll/HR
    typeScriptTag: payrollHr
    description: GET a List of Pay Grades by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: includeTotalCount
        schema: boolean
        description: >-
          A boolean value representing whether the API should return the total
          number of resources available (even though only a subset may be
          returned). When includeTotalCount=true, then the X-Pcty-Total-Count
          response header should be added to the response and will specify the
          total number of records available. APIs that support
          X-Pcty-Total-Count should include this parameter in their
          specification.
        default: true
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: limit
        schema: integer
        description: "Number of pay grades per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset.
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/jobs
    method: listByCompanyId
    httpMethod: get
    tag: Job Codes
    typeScriptTag: jobCodes
    description: GET a list of Job Codes by Company ID
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: filter
        schema: string
        description: >-
          The API Filter, by defining specific conditions, enables developers to
          fine-tune data from API calls for more precise results, enhancing
          application efficiency and user-friendliness. For more information
          review the Filtering page
      - name: limit
        schema: integer
        description: "Number of jobs per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/jobs
    method: createSingleJobCode
    httpMethod: post
    tag: Job Codes
    typeScriptTag: jobCodes
    description: Create a single Job Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: description
        schema: string
        description: ''
      - name: isActive
        schema: boolean
        description: ''
      - name: isCertified
        schema: boolean
        description: ''
      - name: payEntry
        schema: object
        description: ''
      - name: address
        schema: object
        description: ''
      - name: payrollBasedJournal
        schema: object
        description: ''
      - name: code
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: /apiHub/payroll/v1/companies/{companyId}/jobs/{jobCode}
    method: deleteSingleJobCode
    httpMethod: delete
    tag: Job Codes
    typeScriptTag: jobCodes
    description: Delete a single Job Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: jobCode
        schema: string
        required: true
        description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
        example: JOBCODE
    responses:
      - statusCode: '200'
        description: Success
  - url: /apiHub/payroll/v1/companies/{companyId}/jobs/{jobCode}
    method: getSingleJobCodeDetails
    httpMethod: get
    tag: Job Codes
    typeScriptTag: jobCodes
    description: GET a single Job Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: jobCode
        schema: string
        required: true
        description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
        example: JOBCODE
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: Job Details
  - url: /apiHub/payroll/v1/companies/{companyId}/jobs/{jobCode}
    method: updateSingleJobCode
    httpMethod: put
    tag: Job Codes
    typeScriptTag: jobCodes
    description: Update a single Job Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: jobCode
        schema: string
        required: true
        description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
        example: JOBCODE
      - name: description
        schema: string
        description: ''
      - name: isActive
        schema: boolean
        description: ''
      - name: isCertified
        schema: boolean
        description: ''
      - name: payEntry
        schema: object
        description: ''
      - name: address
        schema: object
        description: ''
      - name: payrollBasedJournal
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: /documents/v1/companies/{companyId}/companyDocuments
    method: listCompanyDocuments
    httpMethod: get
    tag: Documents
    typeScriptTag: documents
    description: Get a list of documents for a company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: uploadedDate
        schema: string
        description: >-
          Allows for an equals comparison to the uploadedDate field. Time
          portion of the input is ignored.
      - name: uploadedDateLessThanOrEqualTo
        schema: string
        description: >-
          Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
          field. Time portion of the input is ignored.
      - name: uploadedDateGreaterThanOrEqualTo
        schema: string
        description: >-
          Allows for a Greater Than Or Equal (>=) comparison to the uploadedDate
          field. Time portion of the input is ignored.
      - name: includeTotalCount
        schema: boolean
        description: >-
          Requests that the response include the Pcty-Total-Count header
          containing the total number of objects that match the request.  This
          may be useful if requesting a small [limit].
      - name: limit
        schema: integer
        description: Defines the maximum number of items to be returned in the response.
      - name: offset
        schema: integer
        description: >-
          Defines the start location to return.  Ex. offset=100 means starting
          at item 100, return the next [limit] items.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /documents/v1/companies/{companyId}/employeeDocuments
    method: listEmployeeFilteredDocuments
    httpMethod: get
    tag: Documents
    typeScriptTag: documents
    description: Get a list of documents filtered by employee for a company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        description: Allows for an equals comparison to the employeeId field.
      - name: uploadedDate
        schema: string
        description: >-
          Allows for an equals comparison to the uploadedDate field. Time
          portion of the input is ignored.
      - name: uploadedDateLessThanOrEqualTo
        schema: string
        description: >-
          Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
          field. Time portion of the input is ignored.
      - name: uploadedDateGreaterThanOrEqualTo
        schema: string
        description: >-
          Allows for a Greater Than Or Equal (>=) comparison to the uploadedDate
          field. Time portion of the input is ignored.
      - name: includeTotalCount
        schema: boolean
        description: >-
          Requests that the response include the Pcty-Total-Count header
          containing the total number of objects that match the request.  This
          may be useful if requesting a small [limit].
      - name: limit
        schema: integer
        description: Defines the maximum number of items to be returned in the response.
      - name: offset
        schema: integer
        description: >-
          Defines the start location to return.  Ex. offset=100 means starting
          at item 100, return the next [limit] items.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /documents/v1/companies/{companyId}/documents/{documentId}/downloads
    method: createDocumentDownloadUrl
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Retrieve a document download URL
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: documentId
        schema: string
        required: true
        description: >-
          The Paylocity Document Identifier. This is the unique value provided
          by Paylocity to each specific Document object.
        example: DOCUMENTID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /coreHr/v1/companies/{companyId}/employees
    method: listByCompanyId
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Gets a list of employees by company ID
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: limit
        schema: integer
        description: "Number of employees per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 20"
        example: 5
      - name: nextToken
        schema: string
        description: Next token for the page.
      - name: include
        schema: string
        description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
        example: info,position,status,payrate,futurePayrates
      - name: activeOnly
        schema: boolean
        description: "Filter only active emplooyes.\r\n                **Allowable Values:**\r\n                true, false"
    responses:
      - statusCode: '200'
        description: ''
  - url: /coreHr/v1/companies/{companyId}/employees/{employeeId}
    method: getSingleEmployeeDetails
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Gets a single employee by company and employee IDs
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: include
        schema: string
        description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
        example: info,position,status,payrate,futurePayrates
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/security/v1/companies/b6001/companyOnboardingStatuses
    method: upsertIntegrationStatus
    httpMethod: put
    tag: Client Onboarding
    typeScriptTag: clientOnboarding
    description: Upsert onboarding status
    parameters:
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly.
        default: false
      - name: companyId
        schema: string
        description: ''
        example: ' A00123'
      - name: onboardingStatus
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Upsert response.
      - statusCode: '400'
        description: Bad Request Error - Returns the details of the error.
      - statusCode: '404'
        description: Returns the details of the error.
      - statusCode: '415'
        description: Unsupported Media Type - Returns the details of the error.
  - url: /payroll/v2/companies/{companyId}/payEntryImport
    method: getPayEntryImport
    httpMethod: post
    tag: Pay Entry
    typeScriptTag: payEntry
    description: Create New Payroll Batch
    parameters:
      - name: companyId
        schema: undefined
        required: true
        description: >-
          The Paylocity Company Identifier. This is the unique value provided by
          Paylocity to each specific Payroll Entity
      - name: autoAcknowledge
        schema: boolean
        description: ''
      - name: batchName
        schema: string
        description: ''
      - name: mergeBatchId
        schema: integer
        description: ''
      - name: calendarId
        schema: integer
        description: ''
      - name: payPeriodBeginDate
        schema: string
        description: ''
      - name: payPeriodEndDate
        schema: string
        description: ''
      - name: checkDate
        schema: string
        description: ''
      - name: payEntries
        schema: array
        description: ''
    responses:
      - statusCode: '202'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions
    method: listEmployeeDeductions
    httpMethod: get
    tag: Deductions
    typeScriptTag: deductions
    description: GET Employee Deduction List
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: filter
        schema: string
        description: >-
          The API Filter, by defining specific conditions, enables developers to
          fine-tune data from API calls for more precise results, enhancing
          application efficiency and user-friendliness. For more information
          review the Filtering page
      - name: limit
        schema: integer
        description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions
    method: createNewRecurringEmployeeDeduction
    httpMethod: post
    tag: Deductions
    typeScriptTag: deductions
    description: Create new Recurring Employee Deduction
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: effectiveFrom
        schema: string
        description: ''
      - name: effectiveTo
        schema: string
        description: ''
      - name: calculationCode
        schema: string
        description: ''
      - name: rate
        schema: number
        description: ''
      - name: frequency
        schema: string
        description: ''
      - name: agency
        schema: string
        description: ''
      - name: arrear
        schema: number
        description: ''
      - name: miscellaneousInfo
        schema: string
        description: ''
      - name: note
        schema: string
        description: ''
      - name: selfInsured
        schema: boolean
        description: ''
      - name: priority
        schema: integer
        description: ''
      - name: loan401K
        schema: object
        description: ''
      - name: costCenters
        schema: array
        description: ''
      - name: limits
        schema: object
        description: ''
      - name: code
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}
    method: getDetail
    httpMethod: get
    tag: Deductions
    typeScriptTag: deductions
    description: GET Recurring Deduction Detail
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: ''
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}
    method: deleteRecurringDeductionCode
    httpMethod: delete
    tag: Deductions
    typeScriptTag: deductions
    description: DELETE Recurring Deduction Code on the Employee Record
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
    responses:
      - statusCode: '200'
        description: Success
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}
    method: getRecurringDeductionDetails
    httpMethod: get
    tag: Deductions
    typeScriptTag: deductions
    description: >-
      GET Recurring Deduction Details for a specific past/present/future
      deduction
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}
    method: updateRecurringDetails
    httpMethod: put
    tag: Deductions
    typeScriptTag: deductions
    description: >-
      Update Recurring Deduction Details for a specific past/present/future
      deduction
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
      - name: effectiveFrom
        schema: string
        description: ''
      - name: effectiveTo
        schema: string
        description: ''
      - name: calculationCode
        schema: string
        description: ''
      - name: rate
        schema: number
        description: ''
      - name: frequency
        schema: string
        description: ''
      - name: agency
        schema: string
        description: ''
      - name: arrear
        schema: number
        description: ''
      - name: miscellaneousInfo
        schema: string
        description: ''
      - name: note
        schema: string
        description: ''
      - name: selfInsured
        schema: boolean
        description: ''
      - name: priority
        schema: integer
        description: ''
      - name: loan401K
        schema: object
        description: ''
      - name: costCenters
        schema: array
        description: ''
      - name: limits
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings
    method: getEmployeeEarnings
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: GET Employee Earnings List
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
      - name: filter
        schema: string
        description: >-
          The API Filter, by defining specific conditions, enables developers to
          fine-tune data from API calls for more precise results, enhancing
          application efficiency and user-friendliness. For more information
          review the Filtering page
      - name: limit
        schema: integer
        description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
        example: 5
        default: 20
      - name: offset
        schema: integer
        description: Pagination offset
        default: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings
    method: createRecurringEmployeeEarning
    httpMethod: post
    tag: Earnings
    typeScriptTag: earnings
    description: Create new Recurring Employee Earning
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: effectiveFrom
        schema: string
        description: ''
      - name: effectiveTo
        schema: string
        description: ''
      - name: amount
        schema: number
        description: ''
      - name: rate
        schema: number
        description: ''
      - name: units
        schema: number
        description: ''
      - name: selfInsured
        schema: boolean
        description: ''
      - name: calculationCode
        schema: string
        description: ''
      - name: frequency
        schema: string
        description: ''
      - name: agency
        schema: string
        description: ''
      - name: miscellaneousInfo
        schema: string
        description: ''
      - name: rateCode
        schema: string
        description: ''
      - name: distribution
        schema: object
        description: ''
      - name: limits
        schema: object
        description: ''
      - name: code
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}
    method: getRecurringDetail
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: GET Recurring Earning Detail
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: ''
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}
    method: deleteRecurringEarning
    httpMethod: delete
    tag: Earnings
    typeScriptTag: earnings
    description: DELETE Recurring Earning Code on the Employee Record
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
    responses:
      - statusCode: '200'
        description: Success
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}
    method: getEarningDetails
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: GET Recurring Earning Details for a specific past/present/future earning
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
      - name: testMode
        schema: boolean
        description: If true all responses are mocked and generated randomly
    responses:
      - statusCode: '200'
        description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
  - url: >-
      /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}
    method: updateRecurringEarningDetails
    httpMethod: put
    tag: Earnings
    typeScriptTag: earnings
    description: >-
      Update Recurring Earning Details for a specific past/present/future
      earning
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: A12345
      - name: employeeId
        schema: string
        required: true
        description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: resourceId
        schema: string
        required: true
        description: Resource ID of the record
        example: RESOURCEID
      - name: effectiveFrom
        schema: string
        description: ''
      - name: effectiveTo
        schema: string
        description: ''
      - name: amount
        schema: number
        description: ''
      - name: rate
        schema: number
        description: ''
      - name: units
        schema: number
        description: ''
      - name: selfInsured
        schema: boolean
        description: ''
      - name: calculationCode
        schema: string
        description: ''
      - name: frequency
        schema: string
        description: ''
      - name: agency
        schema: string
        description: ''
      - name: miscellaneousInfo
        schema: string
        description: ''
      - name: rateCode
        schema: string
        description: ''
      - name: distribution
        schema: object
        description: ''
      - name: limits
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: Success
  - url: /time/v2/companies/{companyId}/punchImport
    method: fromExternalSource
    httpMethod: post
    tag: Punch Import
    typeScriptTag: punchImport
    description: Create Punch Import
    parameters:
      - name: companyId
        schema: undefined
        required: true
        description: >-
          The Paylocity Company Identifier. This is the unique value provided by
          Paylocity to each specific Payroll Entity
      - name: data
        schema: array
        description: ''
    responses:
      - statusCode: '202'
        description: Successful operation.
  - url: >-
      /apiHub/benefits/v1/companies/{companyId}/retirementPlans/{planId}/checks/{checkDate}
    method: getPlanChecksByDate
    httpMethod: get
    tag: Retirement contributions
    typeScriptTag: retirementContributions
    description: Gets Retirement Contributions
    parameters:
      - name: companyId
        schema: string
        required: true
        description: >-
          The Paylocity Company ID. This is the unique value provided by
          Paylocity to each specific Payroll Entity
        example: WP5239
      - name: planId
        schema: string
        required: true
        description: >-
          The Plan ID from the retirement plan provider. This would match the
          value provided by the record keeper to the customer
        example: SS5693
      - name: checkDate
        schema: string
        required: true
        description: "The Check Date from the Paylocity Payroll Calendar \r\n            **Allowable Values:**\r\n            Format: yyyy-MM-dd"
        example: '2023-05-16'
      - name: limit
        schema: integer
        description: "The number of contribution statements to return. \r\n **Default Value:**\r\n 10\r\n **Maximum Value:**\r\n 100"
        example: 10
      - name: offset
        schema: integer
        description: "The number of contribution statements to skip, if requesting subsequent pages.\r\n**Allowable Values:**\r\n Any integer"
        example: 10
      - name: sort
        schema: string
        description: "A comma separated list of fields to use for sorting. \r\nFields can be sorted descending by appending :desc to the field name.\r\n\r\n**Allowable Values:**\r\nemployeeId, beginDate, endDate, grossEarnings, hours"
        example: hours:desc,employeeId
      - name: employeeId
        schema: string
        description: A filter to use to limit results to a specific employee.
        example: ABCD
      - name: processId
        schema: string
        description: >-
          A filter used to limit results to a specific payroll process, commonly
          used when pulling data due to a web hook callback after a payroll is
          processed.
        example: '2023051601'
      - name: testFlag
        schema: string
        description: A Boolean value that, when set to "true", returns mock data.
        example: 'false'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '500'
        description: Server Error
  - url: /v1/employee
    method: createNewEmployeeRecord
    httpMethod: post
    tag: Employee (https://
    typeScriptTag: 'employeeHttps:'
    description: Add new employee
    parameters:
      - name: newEmployee
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
  - url: /v1/company/{companyId}/employee/{employeeId}
    method: getEmployeeData
    httpMethod: get
    tag: Employee (https://
    typeScriptTag: 'employeeHttps:'
    description: Get Employee
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: Employee
      - statusCode: '500'
        description: ''
  - url: /v1/update-employee
    method: updateEmployeeDataToPaylocity
    httpMethod: post
    tag: Employee (https://
    typeScriptTag: 'employeeHttps:'
    description: Update employee
    parameters:
      - name: updateEmployee
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
  - url: /v1/deduction
    method: addOrUpdateDeduction
    httpMethod: post
    tag: Deduction
    typeScriptTag: deduction
    description: Add / Update Deduction
    parameters:
      - name: deduction
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
  - url: >-
      /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{startDate}
    method: removeDeductionByCodeAndStartDate
    httpMethod: delete
    tag: Deduction
    typeScriptTag: deduction
    description: Delete deduction for deduction code / start date
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
      - name: startDate
        schema: string
        required: true
        description: Start Date
        example: STARTDATE
    responses:
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/deductions
    method: getAllDeductions
    httpMethod: get
    tag: Deduction
    typeScriptTag: deduction
    description: Get All Deductions
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}
    method: getByCode
    httpMethod: get
    tag: Deduction
    typeScriptTag: deduction
    description: Get Deduction for Deduction Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: deductionCode
        schema: string
        required: true
        description: Deduction Code
        example: DEDUCTIONCODE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/onboarding/employees
    method: addEmployeeToOnboarding
    httpMethod: post
    tag: Onboarding
    typeScriptTag: onboarding
    description: Add Employee to Onboarding
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: address1
        schema: string
        required: false
        description: ''
      - name: address2
        schema: string
        required: false
        description: ''
      - name: autoPayType
        schema: string
        required: false
        description: ''
      - name: baseRate
        schema: number
        required: false
        description: ''
      - name: city
        schema: string
        required: false
        description: ''
      - name: costCenter1
        schema: string
        required: false
        description: ''
      - name: costCenter2
        schema: string
        required: false
        description: ''
      - name: costCenter3
        schema: string
        required: false
        description: ''
      - name: defaultHours
        schema: number
        required: false
        description: ''
      - name: employeeStatus
        schema: string
        required: false
        description: ''
      - name: employmentType
        schema: string
        required: false
        description: ''
      - name: federalFilingStatus
        schema: string
        required: false
        description: ''
      - name: firstName
        schema: string
        required: true
        description: ''
        example: FIRSTNAME
      - name: sex
        schema: string
        required: false
        description: ''
      - name: hireDate
        schema: string
        required: false
        description: ''
      - name: homePhone
        schema: string
        required: false
        description: ''
      - name: lastName
        schema: string
        required: true
        description: ''
        example: LASTNAME
      - name: maritalStatus
        schema: string
        required: false
        description: ''
      - name: personalMobilePhone
        schema: string
        required: false
        description: ''
      - name: payFrequency
        schema: string
        required: false
        description: ''
      - name: personalEmailAddress
        schema: string
        required: false
        description: ''
      - name: payType
        schema: string
        required: false
        description: ''
      - name: ratePer
        schema: string
        required: false
        description: ''
      - name: salary
        schema: number
        required: false
        description: ''
      - name: state
        schema: string
        required: false
        description: ''
      - name: ssn
        schema: string
        required: false
        description: ''
      - name: stateFilingStatus
        schema: string
        required: false
        description: ''
      - name: suiState
        schema: string
        required: false
        description: ''
      - name: taxForm
        schema: string
        required: false
        description: ''
      - name: taxState
        schema: string
        required: false
        description: ''
      - name: userName
        schema: string
        required: false
        description: ''
      - name: workEmailAddress
        schema: string
        required: false
        description: ''
      - name: zip
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}
    method: removeForTaxCode
    httpMethod: delete
    tag: Local Tax
    typeScriptTag: localTax
    description: Delete Local Tax for Tax Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: taxCode
        schema: string
        required: true
        description: Tax Code
        example: TAXCODE
    responses:
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}
    method: getForTaxCode
    httpMethod: get
    tag: Local Tax
    typeScriptTag: localTax
    description: Get Local Tax for Tax Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: taxCode
        schema: string
        required: true
        description: Tax Code
        example: TAXCODE
    responses:
      - statusCode: '200'
        description: The Local Tax model
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}
    method: updateForTaxCode
    httpMethod: put
    tag: Local Tax
    typeScriptTag: localTax
    description: Update Local Tax
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: taxCode
        schema: string
        required: true
        description: Tax Code
        example: TAXCODE
      - name: exemptions
        schema: object
        description: ''
      - name: exemptions2
        schema: object
        description: ''
      - name: filingStatus
        schema: object
        description: ''
      - name: residentPSD
        schema: object
        description: ''
      - name: taxCode
        schema: object
        description: ''
      - name: workPSD
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/localTaxes
    method: getAllTaxesForEmployee
    httpMethod: get
    tag: Local Tax
    typeScriptTag: localTax
    description: Get All Local Taxes
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v1/companies/{companyId}/employees/{employeeId}/localTaxes
    method: createOrUpdateLocalTaxes
    httpMethod: post
    tag: Local Tax
    typeScriptTag: localTax
    description: Add Local Tax
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: exemptions
        schema: object
        description: ''
      - name: exemptions2
        schema: object
        description: ''
      - name: filingStatus
        schema: object
        description: ''
      - name: residentPSD
        schema: object
        description: ''
      - name: taxCode
        schema: object
        description: ''
      - name: workPSD
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/additionalRates
    method: updateEmployeeAdditionalRates
    httpMethod: put
    tag: Additional Rates
    typeScriptTag: additionalRates
    description: Add/update additional rates
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: changeReason
        schema: object
        description: ''
      - name: costCenter1
        schema: object
        description: ''
      - name: costCenter2
        schema: object
        description: ''
      - name: costCenter3
        schema: object
        description: ''
      - name: effectiveDate
        schema: object
        description: ''
      - name: endCheckDate
        schema: object
        description: ''
      - name: job
        schema: object
        description: ''
      - name: rate
        schema: object
        description: ''
      - name: rateCode
        schema: object
        description: ''
      - name: rateNotes
        schema: object
        description: ''
      - name: ratePer
        schema: object
        description: ''
      - name: shift
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/credentials/secrets
    method: obtainNewClientSecret
    httpMethod: post
    tag: Client Credentials
    typeScriptTag: clientCredentials
    description: Obtain new client secret.
    parameters:
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/codes/{codeResource}
    method: getAllByResource
    httpMethod: get
    tag: Company Codes
    typeScriptTag: companyCodes
    description: Get All Company Codes
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: codeResource
        schema: string
        required: true
        description: >-
          Type of Company Code. Common values costcenter1, costcenter2,
          costcenter3, deductions, earnings, taxes, paygrade, positions.
        example: CODERESOURCE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/openapi
    method: getOpenApiDoc
    httpMethod: get
    tag: Company-Specific Schema
    typeScriptTag: companySpecificSchema
    description: Get Company-Specific Open API Documentation
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/customfields/{category}
    method: getAllByCategory
    httpMethod: get
    tag: Custom Fields
    typeScriptTag: customFields
    description: Get All Custom Fields
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: category
        schema: string
        required: true
        description: Custom Fields Category
        example: CATEGORY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/directDeposit
    method: getAllDirectDeposits
    httpMethod: get
    tag: Direct Deposit
    typeScriptTag: directDeposit
    description: Get All Direct Deposit
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/earnings
    method: getAll
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Get All Earnings
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/earnings
    method: addOrUpdateEarning
    httpMethod: put
    tag: Earnings
    typeScriptTag: earnings
    description: Add/Update Earning
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: agency
        schema: object
        required: false
        description: ''
      - name: amount
        schema: object
        required: false
        description: ''
      - name: annualMaximum
        schema: object
        required: false
        description: ''
      - name: calculationCode
        schema: object
        required: false
        description: ''
      - name: costCenter1
        schema: object
        required: false
        description: ''
      - name: costCenter2
        schema: object
        required: false
        description: ''
      - name: costCenter3
        schema: object
        required: false
        description: ''
      - name: earningCode
        schema: object
        required: true
        description: ''
      - name: effectiveDate
        schema: object
        required: false
        description: ''
      - name: endDate
        schema: object
        required: false
        description: ''
      - name: frequency
        schema: object
        required: false
        description: ''
      - name: goal
        schema: object
        required: false
        description: ''
      - name: hoursOrUnits
        schema: object
        required: false
        description: ''
      - name: isSelfInsured
        schema: object
        required: false
        description: ''
      - name: jobCode
        schema: object
        required: false
        description: ''
      - name: miscellaneousInfo
        schema: object
        required: false
        description: ''
      - name: paidTowardsGoal
        schema: object
        required: false
        description: ''
      - name: payPeriodMaximum
        schema: object
        required: false
        description: ''
      - name: payPeriodMinimum
        schema: object
        required: false
        description: ''
      - name: rate
        schema: object
        required: false
        description: ''
      - name: rateCode
        schema: object
        required: false
        description: ''
      - name: startDate
        schema: object
        required: true
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}
    method: deleteByCodeAndStart
    httpMethod: delete
    tag: Earnings
    typeScriptTag: earnings
    description: Delete Earning by Earning Code and Start Date
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: startDate
        schema: string
        required: true
        description: Start Date
        example: STARTDATE
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}
    method: getByCodeAndStart
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Get Earning by Earning Code and Start Date
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
      - name: startDate
        schema: string
        required: true
        description: Start Date
        example: STARTDATE
    responses:
      - statusCode: '200'
        description: The employee earning model
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}
    method: getByEarningCode
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Get Earnings by Earning Code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: earningCode
        schema: string
        required: true
        description: Earning Code
        example: EARNINGCODE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/emergencyContacts
    method: addOrUpdate
    httpMethod: put
    tag: Emergency Contacts
    typeScriptTag: emergencyContacts
    description: Add/update emergency contacts
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: address1
        schema: object
        required: false
        description: ''
      - name: address2
        schema: object
        required: false
        description: ''
      - name: city
        schema: object
        required: false
        description: ''
      - name: country
        schema: object
        required: false
        description: ''
      - name: county
        schema: object
        required: false
        description: ''
      - name: email
        schema: object
        required: false
        description: ''
      - name: firstName
        schema: object
        required: true
        description: ''
      - name: homePhone
        schema: object
        required: false
        description: ''
      - name: lastName
        schema: object
        required: true
        description: ''
      - name: mobilePhone
        schema: object
        required: false
        description: ''
      - name: notes
        schema: object
        required: false
        description: ''
      - name: pager
        schema: object
        required: false
        description: ''
      - name: primaryPhone
        schema: object
        required: false
        description: ''
      - name: priority
        schema: object
        required: false
        description: ''
      - name: relationship
        schema: object
        required: false
        description: ''
      - name: state
        schema: object
        required: false
        description: ''
      - name: syncEmployeeInfo
        schema: boolean
        required: false
        description: ''
      - name: workExtension
        schema: object
        required: false
        description: ''
      - name: workPhone
        schema: object
        required: false
        description: ''
      - name: zip
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/benefitSetup
    method: addOrUpdateBenefitSetup
    httpMethod: put
    tag: Employee Benefit Setup
    typeScriptTag: employeeBenefitSetup
    description: Add/update employee's benefit setup
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: benefitClass
        schema: object
        description: ''
      - name: benefitClassEffectiveDate
        schema: object
        description: ''
      - name: benefitSalary
        schema: object
        description: ''
      - name: benefitSalaryEffectiveDate
        schema: object
        description: ''
      - name: doNotApplyAdministrativePeriod
        schema: object
        description: ''
      - name: isMeasureAcaEligibility
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/weblinkstaging/companies/{companyId}/employees/newemployees
    method: addNewEmployeeToWebLink
    httpMethod: post
    tag: Employee Staging
    typeScriptTag: employeeStaging
    description: Add new employee to Web Link
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: additionalDirectDeposit
        schema: array
        description: ''
      - name: benefitSetup
        schema: array
        description: ''
      - name: birthDate
        schema: object
        description: ''
      - name: customBooleanFields
        schema: array
        description: ''
      - name: customDateFields
        schema: array
        description: ''
      - name: customDropDownFields
        schema: array
        description: ''
      - name: customNumberFields
        schema: array
        description: ''
      - name: customTextFields
        schema: array
        description: ''
      - name: departmentPosition
        schema: array
        description: ''
      - name: disabilityDescription
        schema: object
        description: ''
      - name: employeeId
        schema: object
        description: ''
      - name: ethnicity
        schema: object
        description: ''
      - name: federalTax
        schema: array
        description: ''
      - name: firstName
        schema: object
        description: ''
      - name: fitwExemptReason
        schema: object
        description: ''
      - name: futaExemptReason
        schema: object
        description: ''
      - name: gender
        schema: object
        description: ''
      - name: homeAddress
        schema: array
        description: ''
      - name: isEmployee943
        schema: object
        description: ''
      - name: isSmoker
        schema: object
        description: ''
      - name: lastName
        schema: object
        description: ''
      - name: localTax
        schema: array
        description: ''
      - name: mainDirectDeposit
        schema: array
        description: ''
      - name: maritalStatus
        schema: object
        description: ''
      - name: medExemptReason
        schema: object
        description: ''
      - name: middleName
        schema: object
        description: ''
      - name: nonPrimaryStateTax
        schema: array
        description: ''
      - name: preferredName
        schema: object
        description: ''
      - name: primaryPayRate
        schema: array
        description: ''
      - name: primaryStateTax
        schema: array
        description: ''
      - name: priorLastName
        schema: object
        description: ''
      - name: salutation
        schema: object
        description: ''
      - name: sitwExemptReason
        schema: object
        description: ''
      - name: ssExemptReason
        schema: object
        description: ''
      - name: ssn
        schema: object
        description: ''
      - name: status
        schema: array
        description: ''
      - name: suffix
        schema: object
        description: ''
      - name: suiExemptReason
        schema: object
        description: ''
      - name: suiState
        schema: object
        description: ''
      - name: taxDistributionCode1099R
        schema: object
        description: ''
      - name: taxForm
        schema: object
        description: ''
      - name: veteranDescription
        schema: object
        description: ''
      - name: webTime
        schema: object
        description: ''
      - name: workAddress
        schema: array
        description: ''
      - name: workEligibility
        schema: array
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees
    method: getAllEmployees
    httpMethod: get
    tag: Employee
    typeScriptTag: employee
    description: Get all employees
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: pagesize
        schema: integer
        description: Number of records per page. Default value is 25.
      - name: pagenumber
        schema: integer
        description: >-
          Page number to retrieve; page numbers are 0-based (so to get the first
          page of results, pass pagenumber=0). Default value is 0.
      - name: includetotalcount
        schema: boolean
        description: >-
          Whether to include the total record count in the header's
          X-Pcty-Total-Count property. Default value is true.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees
    method: addToPaylocity
    httpMethod: post
    tag: Employee
    typeScriptTag: employee
    description: Add new employee
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: additionalDirectDeposit
        schema: array
        description: ''
      - name: additionalRate
        schema: array
        description: ''
      - name: benefitSetup
        schema: object
        description: ''
      - name: birthDate
        schema: object
        description: ''
      - name: companyFEIN
        schema: object
        description: ''
      - name: companyName
        schema: object
        description: ''
      - name: currency
        schema: object
        description: ''
      - name: customBooleanFields
        schema: array
        description: ''
      - name: customDateFields
        schema: array
        description: ''
      - name: customDropDownFields
        schema: array
        description: ''
      - name: customNumberFields
        schema: array
        description: ''
      - name: customTextFields
        schema: array
        description: ''
      - name: departmentPosition
        schema: object
        description: ''
      - name: disabilityDescription
        schema: object
        description: ''
      - name: emergencyContacts
        schema: array
        description: ''
      - name: employeeId
        schema: object
        description: ''
      - name: ethnicity
        schema: object
        description: ''
      - name: federalTax
        schema: object
        description: ''
      - name: firstName
        schema: object
        description: ''
      - name: gender
        schema: object
        description: ''
      - name: homeAddress
        schema: object
        description: ''
      - name: isHighlyCompensated
        schema: boolean
        description: ''
      - name: isSmoker
        schema: boolean
        description: ''
      - name: lastName
        schema: object
        description: ''
      - name: localTax
        schema: array
        description: ''
      - name: mainDirectDeposit
        schema: object
        description: ''
      - name: maritalStatus
        schema: object
        description: ''
      - name: middleName
        schema: object
        description: ''
      - name: nonPrimaryStateTax
        schema: object
        description: ''
      - name: ownerPercent
        schema: object
        description: ''
      - name: preferredName
        schema: object
        description: ''
      - name: primaryPayRate
        schema: object
        description: ''
      - name: primaryStateTax
        schema: object
        description: ''
      - name: priorLastName
        schema: object
        description: ''
      - name: salutation
        schema: object
        description: ''
      - name: ssn
        schema: object
        description: ''
      - name: status
        schema: object
        description: ''
      - name: suffix
        schema: object
        description: ''
      - name: taxSetup
        schema: object
        description: ''
      - name: veteranDescription
        schema: object
        description: ''
      - name: webTime
        schema: object
        description: ''
      - name: workAddress
        schema: object
        description: ''
      - name: workEligibility
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}
    method: getEmployeeData
    httpMethod: get
    tag: Employee
    typeScriptTag: employee
    description: Get employee
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}
    method: updateEmployeeData
    httpMethod: patch
    tag: Employee
    typeScriptTag: employee
    description: Update employee
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: additionalDirectDeposit
        schema: array
        description: ''
      - name: additionalRate
        schema: array
        description: ''
      - name: benefitSetup
        schema: object
        description: ''
      - name: birthDate
        schema: object
        description: ''
      - name: companyFEIN
        schema: object
        description: ''
      - name: companyName
        schema: object
        description: ''
      - name: currency
        schema: object
        description: ''
      - name: customBooleanFields
        schema: array
        description: ''
      - name: customDateFields
        schema: array
        description: ''
      - name: customDropDownFields
        schema: array
        description: ''
      - name: customNumberFields
        schema: array
        description: ''
      - name: customTextFields
        schema: array
        description: ''
      - name: departmentPosition
        schema: object
        description: ''
      - name: disabilityDescription
        schema: object
        description: ''
      - name: emergencyContacts
        schema: array
        description: ''
      - name: employeeId
        schema: object
        description: ''
      - name: ethnicity
        schema: object
        description: ''
      - name: federalTax
        schema: object
        description: ''
      - name: firstName
        schema: object
        description: ''
      - name: gender
        schema: object
        description: ''
      - name: homeAddress
        schema: object
        description: ''
      - name: isHighlyCompensated
        schema: boolean
        description: ''
      - name: isSmoker
        schema: boolean
        description: ''
      - name: lastName
        schema: object
        description: ''
      - name: localTax
        schema: array
        description: ''
      - name: mainDirectDeposit
        schema: object
        description: ''
      - name: maritalStatus
        schema: object
        description: ''
      - name: middleName
        schema: object
        description: ''
      - name: nonPrimaryStateTax
        schema: object
        description: ''
      - name: ownerPercent
        schema: object
        description: ''
      - name: preferredName
        schema: object
        description: ''
      - name: primaryPayRate
        schema: object
        description: ''
      - name: primaryStateTax
        schema: object
        description: ''
      - name: priorLastName
        schema: object
        description: ''
      - name: salutation
        schema: object
        description: ''
      - name: ssn
        schema: object
        description: ''
      - name: status
        schema: object
        description: ''
      - name: suffix
        schema: object
        description: ''
      - name: taxSetup
        schema: object
        description: ''
      - name: veteranDescription
        schema: object
        description: ''
      - name: webTime
        schema: object
        description: ''
      - name: workAddress
        schema: object
        description: ''
      - name: workEligibility
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/localTaxes
    method: getAllForEmployee
    httpMethod: get
    tag: Local Taxes
    typeScriptTag: localTaxes
    description: Get all local taxes
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/localTaxes
    method: addNewTax
    httpMethod: post
    tag: Local Taxes
    typeScriptTag: localTaxes
    description: Add new local tax
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: exemptions
        schema: object
        description: ''
      - name: exemptions2
        schema: object
        description: ''
      - name: filingStatus
        schema: object
        description: ''
      - name: residentPSD
        schema: object
        description: ''
      - name: taxCode
        schema: object
        description: ''
      - name: workPSD
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}
    method: deleteByTaxCode
    httpMethod: delete
    tag: Local Taxes
    typeScriptTag: localTaxes
    description: Delete local tax by tax code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: taxCode
        schema: string
        required: true
        description: Tax Code
        example: TAXCODE
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}
    method: getByTaxCode
    httpMethod: get
    tag: Local Taxes
    typeScriptTag: localTaxes
    description: Get local taxes by tax code
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: taxCode
        schema: string
        required: true
        description: Tax Code
        example: TAXCODE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/nonprimaryStateTax
    method: addOrUpdateStateTax
    httpMethod: put
    tag: Non-Primary State Tax
    typeScriptTag: nonPrimaryStateTax
    description: Add/update non-primary state tax
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: amount
        schema: object
        description: ''
      - name: deductionsAmount
        schema: number
        description: ''
      - name: dependentsAmount
        schema: number
        description: ''
      - name: exemptions
        schema: object
        description: ''
      - name: exemptions2
        schema: object
        description: ''
      - name: filingStatus
        schema: object
        description: ''
      - name: higherRate
        schema: boolean
        description: ''
      - name: otherIncomeAmount
        schema: number
        description: ''
      - name: percentage
        schema: object
        description: ''
      - name: reciprocityCode
        schema: object
        description: ''
      - name: specialCheckCalc
        schema: object
        description: ''
      - name: taxCalculationCode
        schema: object
        description: ''
      - name: taxCode
        schema: object
        description: ''
      - name: w4FormYear
        schema: integer
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}/{checkDate}
    method: getDetailsByYearAndCheckDate
    httpMethod: get
    tag: PayStatements
    typeScriptTag: payStatements
    description: >-
      Get employee pay statement details data for the specified year and check
      date.
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: year
        schema: string
        required: true
        description: The year for which to retrieve pay statement data
        example: YEAR
      - name: checkDate
        schema: string
        required: true
        description: The check date for which to retrieve pay statement data
        example: CHECKDATE
      - name: pagesize
        schema: integer
        description: Number of records per page. Default value is 25.
      - name: pagenumber
        schema: integer
        description: >-
          Page number to retrieve; page numbers are 0-based (so to get the first
          page of results, pass pagenumber=0). Default value is 0.
      - name: includetotalcount
        schema: boolean
        description: >-
          Whether to include the total record count in the header's
          X-Pcty-Total-Count property. Default value is true.
      - name: codegroup
        schema: string
        description: >-
          Retrieve pay statement details related to specific deduction, earning
          or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips,
          FED and SITW.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}
    method: getDetailsByYear
    httpMethod: get
    tag: PayStatements
    typeScriptTag: payStatements
    description: Get employee pay statement details data for the specified year.
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: year
        schema: string
        required: true
        description: The year for which to retrieve pay statement data
        example: YEAR
      - name: pagesize
        schema: integer
        description: Number of records per page. Default value is 25.
      - name: pagenumber
        schema: integer
        description: >-
          Page number to retrieve; page numbers are 0-based (so to get the first
          page of results, pass pagenumber=0). Default value is 0.
      - name: includetotalcount
        schema: boolean
        description: >-
          Whether to include the total record count in the header's
          X-Pcty-Total-Count property. Default value is true.
      - name: codegroup
        schema: string
        description: >-
          Retrieve pay statement details related to specific deduction, earning
          or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips,
          FED and SITW.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}/{checkDate}
    method: getSummaryData
    httpMethod: get
    tag: PayStatements
    typeScriptTag: payStatements
    description: >-
      Get employee pay statement summary data for the specified year and check
      date.
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: year
        schema: string
        required: true
        description: The year for which to retrieve pay statement data
        example: YEAR
      - name: checkDate
        schema: string
        required: true
        description: The check date for which to retrieve pay statement data
        example: CHECKDATE
      - name: pagesize
        schema: integer
        description: Number of records per page. Default value is 25.
      - name: pagenumber
        schema: integer
        description: >-
          Page number to retrieve; page numbers are 0-based (so to get the first
          page of results, pass pagenumber=0). Default value is 0.
      - name: includetotalcount
        schema: boolean
        description: >-
          Whether to include the total record count in the header's
          X-Pcty-Total-Count property. Default value is true.
      - name: codegroup
        schema: string
        description: >-
          Retrieve pay statement details related to specific deduction, earning
          or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips,
          FED and SITW.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}
    method: getSummaryByYear
    httpMethod: get
    tag: PayStatements
    typeScriptTag: payStatements
    description: Get employee pay statement summary data for the specified year.
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: year
        schema: string
        required: true
        description: The year for which to retrieve pay statement data
        example: YEAR
      - name: pagesize
        schema: integer
        description: Number of records per page. Default value is 25.
      - name: pagenumber
        schema: integer
        description: >-
          Page number to retrieve; page numbers are 0-based (so to get the first
          page of results, pass pagenumber=0). Default value is 0.
      - name: includetotalcount
        schema: boolean
        description: >-
          Whether to include the total record count in the header's
          X-Pcty-Total-Count property. Default value is true.
      - name: codegroup
        schema: string
        description: >-
          Retrieve pay statement details related to specific deduction, earning
          or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips,
          FED and SITW.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/primaryStateTax
    method: addOrUpdateTax
    httpMethod: put
    tag: Primary State Tax
    typeScriptTag: primaryStateTax
    description: Add/update primary state tax
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: amount
        schema: object
        description: ''
      - name: deductionsAmount
        schema: number
        description: ''
      - name: dependentsAmount
        schema: number
        description: ''
      - name: exemptions
        schema: object
        description: ''
      - name: exemptions2
        schema: object
        description: ''
      - name: filingStatus
        schema: object
        description: ''
      - name: higherRate
        schema: boolean
        description: ''
      - name: otherIncomeAmount
        schema: number
        description: ''
      - name: percentage
        schema: object
        description: ''
      - name: specialCheckCalc
        schema: object
        description: ''
      - name: taxCalculationCode
        schema: object
        description: ''
      - name: taxCode
        schema: object
        description: ''
      - name: w4FormYear
        schema: integer
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/sensitivedata
    method: getEmployeeSensitiveData
    httpMethod: get
    tag: Sensitive Data
    typeScriptTag: sensitiveData
    description: Get sensitive data
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /v2/companies/{companyId}/employees/{employeeId}/sensitivedata
    method: addOrUpdateEmployeeSensitiveData
    httpMethod: put
    tag: Sensitive Data
    typeScriptTag: sensitiveData
    description: Add/update sensitive data
    parameters:
      - name: companyId
        schema: string
        required: true
        description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
        example: EMPLOYEEID
      - name: disability
        schema: object
        description: ''
      - name: ethnicity
        schema: object
        description: ''
      - name: gender
        schema: object
        description: ''
      - name: veteran
        schema: object
        description: ''
    responses:
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
numberOfSchemas: 246
apiDescription: >-
  For documentation about this API, please visit
  https://developer.paylocity.com/integrations/reference/weblink-overview
