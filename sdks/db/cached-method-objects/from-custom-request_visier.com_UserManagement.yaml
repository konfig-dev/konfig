hash: 6d3cd0017198277c70b9fdff563cc92d14b98846c79cbf8d08a4cd44db5bfbc7
methodObjects:
  - url: /v1/admin/permissions/users
    method: removePermissions
    httpMethod: delete
    tag: UserManagement
    typeScriptTag: userManagement
    description: Remove permissions from users
    parameters:
      - name: permissions
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: The results of the permission assignment or removal.
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/permissions/users
    method: assignPermissions
    httpMethod: put
    tag: UserManagement
    typeScriptTag: userManagement
    description: Assign permissions to users
    parameters:
      - name: permissions
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: The results of the permission assignment or removal.
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/permissions/{permissionId}/users
    method: getPermissionAssignedUsers
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve users that are assigned a specific permission
    parameters:
      - name: permissionId
        schema: string
        required: true
        description: >-
          The unique identifier of the permission you want to retrieve users
          for.
        example: PERMISSIONID
      - name: includeUserGroups
        schema: boolean
        description: >-
          If true, the response returns a list of all users that are assigned
          the permission, including users that are
           assigned the permission through a user group.
          If false, the response returns a list of the users that are directly
          assigned the permission.
      - name: tenantFilter
        schema: string
        description: Specify the tenant to retrieve the list of users from.
      - name: limit
        schema: integer
        description: >-
          The number of results to return. The maximum number of tenants to
          retrieve is 100.
      - name: start
        schema: integer
        description: >-
          The index to start retrieving results from, also known as offset. The
          index begins at 0.
    responses:
      - statusCode: '200'
        description: Users that are assigned a specific permission.
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups
    method: getAllUserGroups
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve a list of all user groups
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve the list of user groups from.
      - name: limit
        schema: integer
        description: >-
          The number of results to return. The maximum number of users to
          retrieve is 1000.
      - name: start
        schema: integer
        description: The index to start retrieving results from, also known as offset.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups/permissions
    method: revokePermissionsFromUserGroups
    httpMethod: delete
    tag: UserManagement
    typeScriptTag: userManagement
    description: Remove permissions from user groups
    parameters:
      - name: userGroups
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups/permissions
    method: assignPermissionsToUserGroups
    httpMethod: put
    tag: UserManagement
    typeScriptTag: userManagement
    description: Assign permissions to user groups
    parameters:
      - name: userGroups
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups/users
    method: removeUsersFromUserGroup
    httpMethod: delete
    tag: UserManagement
    typeScriptTag: userManagement
    description: Remove users from user groups
    parameters:
      - name: userGroups
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups/users
    method: addUsersToUserGroup
    httpMethod: put
    tag: UserManagement
    typeScriptTag: userManagement
    description: Assign users to user groups
    parameters:
      - name: userGroups
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/user-groups/{userGroupId}/users
    method: getUserGroupUsers
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve a list of user group users
    parameters:
      - name: userGroupId
        schema: string
        required: true
        description: The ID of user group.
        example: USERGROUPID
      - name: tenantFilter
        schema: string
        description: Specifies the tenant to retrieve the list of users from.
      - name: limit
        schema: integer
        description: >-
          The number of results to return. The maximum number of tenants to
          retrieve is 100.
      - name: start
        schema: integer
        description: >-
          The index to start retrieving results from, also known as offset. The
          index begins at 0.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users
    method: getAllUsers
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve a list of all users
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve a list of users from.
      - name: assignedProfiles
        schema: boolean
        description: If true, the response returns a list of the user's assigned profiles.
      - name: assignedPermissions
        schema: boolean
        description: If true, the response returns the user's assigned permissions.
      - name: assignedUserGroups
        schema: boolean
        description: If true, the response returns the user's assigned user groups.
      - name: limit
        schema: integer
        description: >-
          The number of results to return. The maximum number of users to
          retrieve is 1000.
      - name: start
        schema: integer
        description: >-
          The index to start retrieving results from, also known as offset. The
          index begins at 0.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users
    method: addUser
    httpMethod: post
    tag: UserManagement
    typeScriptTag: userManagement
    description: Add a user
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to create a user in.
      - name: username
        schema: string
        description: ''
      - name: displayName
        schema: string
        description: ''
      - name: employeeId
        schema: string
        description: ''
      - name: accountEnabled
        schema: string
        description: ''
      - name: email
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/{userId}
    method: deleteUser
    httpMethod: delete
    tag: UserManagement
    typeScriptTag: userManagement
    description: Delete a user
    parameters:
      - name: userId
        schema: string
        required: true
        description: The ID of the user you want to delete.
        example: USERID
      - name: tenantCode
        schema: string
        description: Specify the tenant to delete a user in.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/{userId}
    method: getUserDetail
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve a user's details
    parameters:
      - name: userId
        schema: string
        required: true
        description: The ID of the user you want to retrieve.
        example: USERID
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve a user from.
      - name: assignedProfiles
        schema: boolean
        description: If true, the response returns a list of the user's assigned profiles.
      - name: assignedPermissions
        schema: boolean
        description: If true, the response returns the user's assigned permissions.
      - name: assignedUserGroups
        schema: boolean
        description: If true, the response returns the user's assigned user groups.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/{userId}
    method: updateUser
    httpMethod: put
    tag: UserManagement
    typeScriptTag: userManagement
    description: Update a user
    parameters:
      - name: userId
        schema: string
        required: true
        description: The ID of the user you want to update.
        example: USERID
      - name: tenantCode
        schema: string
        description: Specify the tenant to update a user in.
      - name: displayName
        schema: string
        description: ''
      - name: employeeId
        schema: string
        description: ''
      - name: accountEnabled
        schema: string
        description: ''
      - name: email
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v2/admin/users
    method: deleteUsers
    httpMethod: delete
    tag: UserManagementV2
    typeScriptTag: userManagementV2
    description: Delete users
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to delete a user in.
      - name: userIds
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v2/admin/users
    method: addUsers
    httpMethod: post
    tag: UserManagementV2
    typeScriptTag: userManagementV2
    description: Add users
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to create a user in.
      - name: users
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v2/admin/users
    method: updateUsers
    httpMethod: put
    tag: UserManagementV2
    typeScriptTag: userManagementV2
    description: Update users
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to update a user in.
      - name: users
        schema: array
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/reports/application-logs
    method: getApplicationLogsXlsx
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve the Application Logs
    parameters:
      - name: startTime
        schema: string
        description: An inclusive date-time to start retrieving Application Logs from.
      - name: endTime
        schema: string
        description: An exclusive date-time to stop retrieving Application Logs from.
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve Application Logs from.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/{userId}/reports/data-security
    method: getDataSecurityReportXlsx
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve the Data Security Report
    parameters:
      - name: userId
        schema: string
        required: true
        description: The ID of the user to retrieve the report for.
        example: USERID
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve the Data Security Report from.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/reports/profile-assignments
    method: getProfileAssignmentsXlsx
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve user profile assignments in XLSX format
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve profile assignments from.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/reports/permission-assignments
    method: getUserPermissionsXlsx
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve user permissions in XLSX format
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve the permission assignments report from.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
  - url: /v1/admin/users/reports/permissions-list
    method: getAllPermissionsXlsx
    httpMethod: get
    tag: UserManagement
    typeScriptTag: userManagement
    description: Retrieve a list of all permissions in XLSX format
    parameters:
      - name: tenantCode
        schema: string
        description: Specify the tenant to retrieve permissions from.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: default
        description: >-
          The `Status` type defines a logical error model that is suitable for
          different programming environments, including REST APIs and RPC APIs.
          It is used by [gRPC](https://github.com/grpc). Each `Status` message
          contains three pieces of data: error code, error message, and error
          details. You can find out more about this error model and how to work
          with it in the [API Design
          Guide](https://cloud.google.com/apis/design/errors).
numberOfSchemas: 53
apiDescription: Visier APIs for managing users within an organization
