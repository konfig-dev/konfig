hash: 4e471abee0cb166d0e4cfc5add8880ccaf44fc9ad14eb3188479e1b58da4058f
methodObjects:
  - url: /v1/oauth/token
    method: generateAccess
    httpMethod: post
    tag: Token
    typeScriptTag: token
    description: Create a token
    parameters:
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
      - name: grant_type
        schema: string
        required: true
        description: ''
        example: GRANT_TYPE
        default: '"authorization_code"'
      - name: redirect_uri
        schema: string
        required: true
        description: ''
        example: REDIRECT_URI
      - name: external_account
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/blocks/{block_id}/children
    method: getChildren
    httpMethod: get
    tag: Block
    typeScriptTag: block
    description: Retrieve block children
    parameters:
      - name: blockId
        schema: string
        required: true
        description: Identifier for a [block](ref:block)
        example: BLOCK_ID
      - name: startCursor
        schema: string
        description: >-
          If supplied, this endpoint will return a page of results starting
          after the cursor provided. If not supplied, this endpoint will return
          the first page of results.
      - name: pageSize
        schema: integer
        description: >-
          The number of items from the full list desired in the response.
          Maximum: 100
        default: 100
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/blocks/{block_id}/children
    method: appendChildren
    httpMethod: patch
    tag: Block
    typeScriptTag: block
    description: Append block children
    parameters:
      - name: blockId
        schema: string
        required: true
        description: >-
          Identifier for a [block](ref:block). Also accepts a [page](ref:page)
          ID.
        example: BLOCK_ID
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: children
        schema: array
        required: true
        description: ''
      - name: after
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/blocks/{block_id}
    method: removeBlockById
    httpMethod: delete
    tag: Block
    typeScriptTag: block
    description: Delete a block
    parameters:
      - name: blockId
        schema: string
        required: true
        description: Identifier for a Notion block
        example: BLOCK_ID
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/blocks/{block_id}
    method: getDetails
    httpMethod: get
    tag: Block
    typeScriptTag: block
    description: Retrieve a block
    parameters:
      - name: blockId
        schema: string
        required: true
        description: Identifier for a Notion block
        example: BLOCK_ID
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/blocks/{block_id}
    method: updateBlockById
    httpMethod: patch
    tag: Block
    typeScriptTag: block
    description: Update a block
    parameters:
      - name: blockId
        schema: string
        required: true
        description: Identifier for a Notion block
        example: BLOCK_ID
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
      - name: '{type}'
        schema: object
        description: ''
      - name: archived
        schema: boolean
        description: ''
        default: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/pages
    method: createNewPage
    httpMethod: post
    tag: Page
    typeScriptTag: page
    description: Create a page
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: parent
        schema: string
        required: true
        description: ''
        example: PARENT
      - name: properties
        schema: string
        required: true
        description: ''
        example: PROPERTIES
      - name: children
        schema: array
        required: false
        description: ''
      - name: icon
        schema: string
        required: false
        description: ''
      - name: cover
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /v1/pages/{page_id}
    method: getPage
    httpMethod: get
    tag: Page
    typeScriptTag: page
    description: Retrieve a page
    parameters:
      - name: pageId
        schema: string
        required: true
        description: Identifier for a Notion page
        example: PAGE_ID
      - name: filterProperties
        schema: string
        description: >-
          A list of page property value IDs associated with the page. Use this
          param to limit the response to a specific page property value or
          values. To retrieve multiple properties, specify each page property
          ID. For example: `?filter_properties=iAk8&filter_properties=b7dh`.
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/pages/{page_id}
    method: updateProperties
    httpMethod: patch
    tag: Page
    typeScriptTag: page
    description: Update page properties
    parameters:
      - name: pageId
        schema: string
        required: true
        description: The identifier for the Notion page to be updated.
        example: PAGE_ID
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
      - name: properties
        schema: string
        description: ''
      - name: archived
        schema: boolean
        description: ''
      - name: icon
        schema: string
        description: ''
      - name: cover
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /v1/pages/{page_id}/properties/{property_id}
    method: getPropertyItem
    httpMethod: get
    tag: Page
    typeScriptTag: page
    description: Retrieve a page property item
    parameters:
      - name: pageId
        schema: string
        required: true
        description: Identifier for a Notion page
        example: PAGE_ID
      - name: propertyId
        schema: string
        required: true
        description: >-
          Identifier for a page
          [property](https://developers.notion.com/reference/page#all-property-values)
        example: PROPERTY_ID
      - name: pageSize
        schema: integer
        description: >-
          For paginated properties. The max number of property item objects on a
          page. The default size is 100
      - name: startCursor
        schema: string
        description: For paginated properties.
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
  - url: /v1/databases
    method: createNewDatabase
    httpMethod: post
    tag: Database
    typeScriptTag: database
    description: Create a database
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: title
        schema: array
        required: false
        description: ''
      - name: parent
        schema: string
        required: true
        description: ''
        example: PARENT
      - name: properties
        schema: string
        required: true
        description: ''
        example: PROPERTIES
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/databases/{database_id}/query
    method: executeQuery
    httpMethod: post
    tag: Database
    typeScriptTag: database
    description: Query a database
    parameters:
      - name: databaseId
        schema: string
        required: true
        description: Identifier for a Notion database.
        example: DATABASE_ID
      - name: filterProperties
        schema: string
        description: >-
          A list of page property value IDs associated with the database. Use
          this param to limit the response to a specific page property value or
          values for pages that meet the `filter` criteria.
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: filter
        schema: string
        description: ''
      - name: sorts
        schema: array
        description: ''
      - name: start_cursor
        schema: string
        description: ''
      - name: page_size
        schema: integer
        description: ''
        default: 100
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/databases/{database_id}
    method: getDatabase
    httpMethod: get
    tag: Database
    typeScriptTag: database
    description: Retrieve a database
    parameters:
      - name: databaseId
        schema: string
        required: true
        description: An identifier for the Notion database.
        example: DATABASE_ID
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /v1/databases/{database_id}
    method: updateDatabase
    httpMethod: patch
    tag: Database
    typeScriptTag: database
    description: Update a database
    parameters:
      - name: databaseId
        schema: string
        required: true
        description: identifier for a Notion database
        example: DATABASE_ID
      - name: notionVersion
        schema: string
        description: ''
        default: '2022-06-28'
      - name: title
        schema: array
        description: ''
      - name: description
        schema: array
        description: ''
      - name: properties
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /v1/users
    method: listAllUsers
    httpMethod: get
    tag: User
    typeScriptTag: user
    description: List all users
    parameters:
      - name: startCursor
        schema: string
        description: >-
          If supplied, this endpoint will return a page of results starting
          after the cursor provided. If not supplied, this endpoint will return
          the first page of results.
      - name: pageSize
        schema: integer
        description: >-
          The number of items from the full list desired in the response.
          Maximum: 100
        default: 100
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/users/{user_id}
    method: getUserById
    httpMethod: get
    tag: User
    typeScriptTag: user
    description: Retrieve a user
    parameters:
      - name: userId
        schema: string
        required: true
        description: Identifier for a Notion user
        example: USER_ID
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/users/me
    method: getTokenBotUser
    httpMethod: get
    tag: User
    typeScriptTag: user
    description: Retrieve your token's bot user
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /v1/comments
    method: getList
    httpMethod: get
    tag: Comment
    typeScriptTag: comment
    description: Retrieve comments
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: blockId
        schema: string
        required: true
        description: Identifier for a Notion block or page
        example: BLOCK_ID
      - name: startCursor
        schema: string
        description: >-
          If supplied, this endpoint will return a page of results starting
          after the cursor provided. If not supplied, this endpoint will return
          the first page of results.
      - name: pageSize
        schema: integer
        description: >-
          The number of items from the full list desired in the response.
          Maximum: 100
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: ''
  - url: /v1/comments
    method: createNew
    httpMethod: post
    tag: Comment
    typeScriptTag: comment
    description: Create comment
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: parent
        schema: string
        required: false
        description: ''
      - name: discussion_id
        schema: string
        required: false
        description: ''
      - name: rich_text
        schema: string
        required: true
        description: ''
        example: RICH_TEXT
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: ''
  - url: /v1/search
    method: byTitle
    httpMethod: post
    tag: Search
    typeScriptTag: search
    description: Search by title
    parameters:
      - name: notionVersion
        schema: string
        required: true
        description: ''
        example: NOTION-VERSION
        default: '2022-06-28'
      - name: query
        schema: string
        description: ''
      - name: sort
        schema: object
        description: ''
      - name: filter
        schema: object
        description: ''
      - name: start_cursor
        schema: string
        description: ''
      - name: page_size
        schema: integer
        description: ''
        default: 100
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '429'
        description: ''
numberOfSchemas: 58
apiDescription: Missing description placeholder
