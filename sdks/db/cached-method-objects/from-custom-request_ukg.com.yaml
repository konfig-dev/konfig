hash: d856e32f6b19a39e28e047ccc5d9473ce9581d8c6e7e93223404df19fef67cf5
methodObjects:
  - url: /personnel/v1/audit-details
    method: getData
    httpMethod: get
    tag: AuditDetails
    typeScriptTag: auditDetails
    description: Get Audit Details Data
    parameters:
      - name: startDateTime
        schema: string
        required: true
        description: ''
        example: STARTDATETIME
      - name: endDateTime
        schema: string
        required: true
        description: ''
        example: ENDDATETIME
      - name: tableName
        schema: string
        required: true
        description: ''
        example: TABLENAME
      - name: fieldName
        schema: string
        required: true
        description: ''
        example: FIELDNAME
      - name: action
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/businessruleimport-tool/fileupload
    method: businessRuleImportFileUpload
    httpMethod: post
    tag: BusinessRuleImportTool
    typeScriptTag: businessRuleImportTool
    description: Takes an XML transaction and feeds it into the Business Rule Import Tool
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: transaction
        schema: string
        description: ''
      - name: uniqueFileName
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '201'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/businessruleimport-tool/filestatus/{fileId}
    method: getFileUploadStatus
    httpMethod: get
    tag: BusinessRuleImportTool
    typeScriptTag: businessRuleImportTool
    description: Retrieves the status of an Business Rule Import Tool transaction
    parameters:
      - name: fileId
        schema: string
        required: true
        description: ''
        example: FILEID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/businessruleimport-tool/transactionstatus/{stagingId}
    method: getStagingStatus
    httpMethod: get
    tag: BusinessRuleImportTool
    typeScriptTag: businessRuleImportTool
    description: Retrieves the status of an Business Rule Import Tool transaction
    parameters:
      - name: stagingId
        schema: string
        required: true
        description: ''
        example: STAGINGID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/businessruleimport-tool/transaction
    method: importsBusinessRuleStagingData
    httpMethod: post
    tag: BusinessRuleImportTool
    typeScriptTag: businessRuleImportTool
    description: >-
      Takes an XML transaction and feeds it into the Business Rule Import Tool
      (https://developer.ukg.com/hcm/reference
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: transaction
        schema: string
        description: ''
      - name: uniqueFileName
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/integration/kronos/business-structure-status
    method: listEmployeesChangeBusinessStructure
    httpMethod: get
    tag: BusinessStructureStatus
    typeScriptTag: businessStructureStatus
    description: Gets a list of Employees for which there is a change in business structure
    parameters:
      - name: modifiedAfterDateTime
        schema: string
        required: true
        description: ''
        example: MODIFIEDAFTERDATETIME
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/code-tables
    method: getInfo
    httpMethod: get
    tag: CodeTables
    typeScriptTag: codeTables
    description: Get Code Tables information
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /configuration/v1/code-tables
    method: createCodeTables
    httpMethod: post
    tag: CodeTables
    typeScriptTag: codeTables
    description: Post Code Tables information
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '207'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /configuration/v1/company-details
    method: getCompanyDetails
    httpMethod: get
    tag: CompanyDetails
    typeScriptTag: companyDetails
    description: Get Company Details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: 5 character value represents a UKG Pro CompanyID
      - name: masterCompanyId
        schema: string
        required: false
        description: 5 character value represents a UKG Pro Master CompanyID
      - name: companyCode
        schema: string
        required: false
        description: 5 character value represents a UKG Pro Company Code
      - name: isMasterCompany
        schema: string
        required: false
        description: >-
          true/false values represent if this company is a UKG Pro Master
          Company
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/compensation-details
    method: getAllDetails
    httpMethod: get
    tag: CompensationDetails
    typeScriptTag: compensationDetails
    description: Get all compensation details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobGroupCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: payGroupCode
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: salaryOrHourlyCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftGroupCode
        schema: string
        required: false
        description: ''
      - name: dateInJob
        schema: string
        required: false
        description: >-
          Used to find date in job less than, greater than, equal to, or between
          passed date(https://developer.ukg.com/hcm/reference
      - name: dateLastPaid
        schema: string
        required: false
        description: >-
          Used to find date last paid less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: datePaidThru
        schema: string
        required: false
        description: >-
          Used to find date paid through less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: isAutoAllocated
        schema: string
        required: false
        description: ''
      - name: isAutoPaid
        schema: string
        required: false
        description: ''
      - name: isSeasonalWorker
        schema: string
        required: false
        description: ''
      - name: isHighlyCompensated
        schema: string
        required: false
        description: ''
      - name: isMultipleJob
        schema: string
        required: false
        description: ''
      - name: performanceReviewRating
        schema: string
        required: false
        description: ''
      - name: performanceReviewType
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/companies/{companyId}/compensation-details
    method: getAllByCompany
    httpMethod: get
    tag: CompensationDetails
    typeScriptTag: compensationDetails
    description: Get all compensation details by company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobGroupCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: payGroupCode
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: salaryOrHourlyCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftGroupCode
        schema: string
        required: false
        description: ''
      - name: dateInJob
        schema: string
        required: false
        description: >-
          Used to find date in job less than, greater than, equal to, or between
          passed date(https://developer.ukg.com/hcm/reference
      - name: dateLastPaid
        schema: string
        required: false
        description: >-
          Used to find date last paid less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: datePaidThru
        schema: string
        required: false
        description: >-
          Used to find date paid through less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: isAutoAllocated
        schema: string
        required: false
        description: ''
      - name: isAutoPaid
        schema: string
        required: false
        description: ''
      - name: isSeasonalWorker
        schema: string
        required: false
        description: ''
      - name: isHighlyCompensated
        schema: string
        required: false
        description: ''
      - name: isMultipleJob
        schema: string
        required: false
        description: ''
      - name: performanceReviewRating
        schema: string
        required: false
        description: ''
      - name: performanceReviewType
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: >-
      /personnel/v1/companies/{companyId}/employees/{employeeId}/compensation-details
    method: getByCompanyAndEmployee
    httpMethod: get
    tag: CompensationDetails
    typeScriptTag: compensationDetails
    description: Get all compensation details by company and employee
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobGroupCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: payGroupCode
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: salaryOrHourlyCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftCode
        schema: string
        required: false
        description: ''
      - name: primaryShiftGroupCode
        schema: string
        required: false
        description: ''
      - name: dateInJob
        schema: string
        required: false
        description: >-
          Used to find date in job less than, greater than, equal to, or between
          passed date(https://developer.ukg.com/hcm/reference
      - name: dateLastPaid
        schema: string
        required: false
        description: >-
          Used to find date last paid less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: datePaidThru
        schema: string
        required: false
        description: >-
          Used to find date paid through less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: isAutoAllocated
        schema: string
        required: false
        description: ''
      - name: isAutoPaid
        schema: string
        required: false
        description: ''
      - name: isSeasonalWorker
        schema: string
        required: false
        description: ''
      - name: isHighlyCompensated
        schema: string
        required: false
        description: ''
      - name: isMultipleJob
        schema: string
        required: false
        description: ''
      - name: performanceReviewRating
        schema: string
        required: false
        description: ''
      - name: performanceReviewType
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/compensation-details/{employeeId}
    method: getByEmployee
    httpMethod: get
    tag: CompensationDetails
    typeScriptTag: compensationDetails
    description: Get all compensation details by employee
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/emp-deductions
    method: list
    httpMethod: get
    tag: EmpDeductions
    typeScriptTag: empDeductions
    description: Get employee deductions
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: dedCode
        schema: string
        required: true
        description: ''
        example: DEDCODE
      - name: benStatus
        schema: string
        required: false
        description: ''
      - name: benefitOption
        schema: string
        required: false
        description: ''
      - name: endDateTime
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/dep-deductions
    method: get
    httpMethod: get
    tag: DependentDeductions
    typeScriptTag: dependentDeductions
    description: Get Dependent Deductions
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: contactId
        schema: string
        required: false
        description: ''
      - name: deductionCode
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: currentCoid
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /payroll/v1/earnings-history-base-elements
    method: getInsRate
    httpMethod: get
    tag: EarningsHistory
    typeScriptTag: earningsHistory
    description: Get Earnings History Base Elements
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: earningCode
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: payDate
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: periodControl
        schema: string
        required: false
        description: ''
      - name: startPerControl
        schema: string
        required: false
        description: ''
      - name: endPerControl
        schema: string
        required: false
        description: ''
      - name: includeInDeferredCompensation
        schema: boolean
        required: false
        description: ''
      - name: includeInDeferredCompensationHours
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/earnings
    method: listEarningsConfigurations
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Get a list of all earnings configurations
    parameters:
      - name: calculationRule
        schema: string
        required: false
        description: ''
      - name: taxCategory
        schema: string
        required: false
        description: ''
      - name: useDeductionOffset
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: includeInShiftDiffrential
        schema: string
        required: false
        description: ''
      - name: includeInManualCheck
        schema: string
        required: false
        description: ''
      - name: earningCode
        schema: string
        required: false
        description: ''
      - name: includeInAccruals
        schema: string
        required: false
        description: ''
      - name: includeInDeferredCompensation
        schema: boolean
        required: false
        description: ''
      - name: includeInDeferredCompensationHours
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: >-
      /configuration/v1/earnings/{calculationRule}/{taxCategory}/{useDeductionOffset}/{countryCode}/{includeInShiftDiffrential}/{includeInManualCheck}
    method: getConfigurationsFilteredByParameter
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: >-
      Get list of earnings configurations filtered by Parameter including
      pagination params
    parameters:
      - name: calculationRule
        schema: string
        required: true
        description: ''
        example: CALCULATIONRULE
      - name: taxCategory
        schema: string
        required: true
        description: ''
        example: TAXCATEGORY
      - name: useDeductionOffset
        schema: string
        required: true
        description: ''
        example: USEDEDUCTIONOFFSET
      - name: countryCode
        schema: string
        required: true
        description: ''
        example: COUNTRYCODE
      - name: includeInShiftDiffrential
        schema: string
        required: true
        description: ''
        example: INCLUDEINSHIFTDIFFRENTIAL
      - name: includeInManualCheck
        schema: string
        required: true
        description: ''
        example: INCLUDEINMANUALCHECK
      - name: earningCode
        schema: string
        required: false
        description: ''
      - name: includeInAccruals
        schema: string
        required: false
        description: ''
      - name: includeInDeferredCompensation
        schema: boolean
        required: false
        description: ''
      - name: includeInDeferredCompensationHours
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/earnings/{earningCode}
    method: specificConfigurationGet
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Get a specific earning configuration
    parameters:
      - name: earningCode
        schema: string
        required: true
        description: ''
        example: EARNINGCODE
      - name: calculationRule
        schema: string
        required: false
        description: ''
      - name: taxCategory
        schema: string
        required: false
        description: ''
      - name: useDeductionOffset
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: includeInShiftDiffrential
        schema: string
        required: false
        description: ''
      - name: includeInManualCheck
        schema: string
        required: false
        description: ''
      - name: earningCode
        schema: string
        required: false
        description: ''
      - name: includeInAccruals
        schema: string
        required: false
        description: ''
      - name: includeInDeferredCompensation
        schema: boolean
        required: false
        description: ''
      - name: includeInDeferredCompensationHours
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-changes
    method: getAllEmployeeChangesSinceLastCall
    httpMethod: get
    tag: Changes By Date
    typeScriptTag: changesByDate
    description: Changes By Date
    parameters:
      - name: startDate
        schema: string
        required: false
        description: Used to lookup employee changes within time span
      - name: endDate
        schema: string
        required: false
        description: Used to lookup employee changes within time span
      - name: page
        schema: number
        required: false
        description: Pagination, which page you want to see
      - name: perPage
        schema: number
        required: false
        description: Pagination, how many records per page you want to see
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /personnel/v1/employee-changes/{employeeId}
    method: get
    httpMethod: get
    tag: Employee Changes
    typeScriptTag: employeeChanges
    description: Changes By Employee ID
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /personnel/v1/employee-cobra-details
    method: get
    httpMethod: get
    tag: EmployeeCobraDetails
    typeScriptTag: employeeCobraDetails
    description: Get Employee Cobra Details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: boolean
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/contacts
    method: getPersonnelDetails
    httpMethod: get
    tag: Contact
    typeScriptTag: contact
    description: Get all details for a person assigned to an employee as a contact
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: isActive
        schema: string
        required: false
        description: ''
      - name: relationshipCode
        schema: string
        required: false
        description: ''
      - name: contactId
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: string
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: isBeneficiary
        schema: string
        required: false
        description: ''
      - name: isDependent
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: >-
          Used to find date of COBRA event less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: statusAsOfDate
        schema: string
        required: false
        description: >-
          Used to find contact status as of date less than, greater than,equal
          to, or between passed date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/contacts/{contactId}
    method: getPersonnelContactDetails
    httpMethod: get
    tag: Contact
    typeScriptTag: contact
    description: Get all details for a single person assigned to an employee as a contact
    parameters:
      - name: contactId
        schema: string
        required: true
        description: ''
        example: CONTACTID
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: isActive
        schema: string
        required: false
        description: ''
      - name: relationshipCode
        schema: string
        required: false
        description: ''
      - name: contactId
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: string
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: isBeneficiary
        schema: string
        required: false
        description: ''
      - name: isDependent
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: >-
          Used to find date of COBRA event less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: statusAsOfDate
        schema: string
        required: false
        description: >-
          Used to find contact status as of date less than, greater than, equal
          to, or between passed date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-contract-details
    method: get
    httpMethod: get
    tag: EmployeeContract
    typeScriptTag: employeeContract
    description: Get all employment contract details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: contractNumber
        schema: string
        required: false
        description: ''
      - name: contractTypeCode
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: >-
          Used to find contracts effective date less than, greater than, equal
          to, or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find contract record created date less than, greater than,
          equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: rowLastChanged
        schema: string
        required: false
        description: >-
          Used to find contract record changed date less than, greater than,
          equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/emp-deductions-benefit-option-change-date
    method: get
    httpMethod: get
    tag: EmpDedBenOptionDate
    typeScriptTag: empDedBenOptionDate
    description: Get Employee Deduction Benefit Option Change Date
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: deductionCode
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/deduction-history-effective-change-dates
    method: getByDeductionCodeAndField
    httpMethod: get
    tag: Employee Deduction History Effective Date
    typeScriptTag: employeeDeductionHistoryEffectiveDate
    description: Deductions History Effective Change Date
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: sessionDate
        schema: string
        required: false
        description: ''
      - name: fieldName
        schema: string
        required: true
        description: ''
        example: FIELDNAME
      - name: deductionCode
        schema: string
        required: true
        description: ''
        example: DEDUCTIONCODE
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-demographic-details
    method: get
    httpMethod: get
    tag: Employee Demographic Details
    typeScriptTag: employeeDemographicDetails
    description: Get Employee Demographic Details
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: lastName
        schema: string
        required: false
        description: ''
      - name: emailAddress
        schema: string
        required: false
        description: ''
      - name: addressState
        schema: string
        required: false
        description: ''
      - name: addressCountry
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /payroll/v1/direct-deposit
    method: listEmployeeDirectDepositDetails
    httpMethod: get
    tag: DirectDeposit
    typeScriptTag: directDeposit
    description: Get list of direct deposit details for US and Canadian employees
    parameters:
      - name: accountIsInactive
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeBankRoutingNumber
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: >-
          Used to find direct deposit record changed date less than, greater
          than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/companies/{companyId}/direct-deposit
    method: listDirectDepositDetailsByCompany
    httpMethod: get
    tag: DirectDeposit
    typeScriptTag: directDeposit
    description: >-
      Get list of direct deposit details for US and Canadian employees by
      company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: accountIsInactive
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeBankRoutingNumber
        schema: string
        required: false
        description: ''
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: >-
          Used to find direct deposit record changed date less than, greater
          than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-education
    method: get
    httpMethod: get
    tag: EmployeeEducation
    typeScriptTag: employeeEducation
    description: Get all education details
    parameters:
      - name: systemId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: country
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-employment-details
    method: getDetails
    httpMethod: get
    tag: EmployeeEmploymentDetails
    typeScriptTag: employeeEmploymentDetails
    description: Get Employee Employment Details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: primaryWorkLocationCode
        schema: string
        required: false
        description: ''
      - name: primaryProjectCode
        schema: string
        required: false
        description: ''
      - name: deductionGroupCode
        schema: string
        required: false
        description: ''
      - name: earningGroupCode
        schema: string
        required: false
        description: ''
      - name: employeeTypeCode
        schema: string
        required: false
        description: ''
      - name: employeeStatusCode
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: supervisorId
        schema: string
        required: false
        description: ''
      - name: originalHireDate
        schema: string
        required: false
        description: ''
      - name: lastHireDate
        schema: string
        required: false
        description: ''
      - name: dateOfTermination
        schema: string
        required: false
        description: ''
      - name: dateOfRetirement
        schema: string
        required: false
        description: ''
      - name: dateTimeCreated
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: ''
      - name: dateLastPayDatePaid
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: isHomeCompany
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-extended-elements
    method: get
    httpMethod: get
    tag: EmployeeExtendedElements
    typeScriptTag: employeeExtendedElements
    description: Get Employee Extended Elements
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: dateTimeCreated
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-job-history-details
    method: get
    httpMethod: get
    tag: EmployeeJobHistoryDetail
    typeScriptTag: employeeJobHistoryDetail
    description: Get all employee job history details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: isOrgChange
        schema: string
        required: false
        description: ''
      - name: isJobChange
        schema: string
        required: false
        description: ''
      - name: isRateChange
        schema: string
        required: false
        description: ''
      - name: isPromotion
        schema: string
        required: false
        description: ''
      - name: systemId
        schema: string
        required: false
        description: ''
      - name: jobEffectiveDate
        schema: string
        required: false
        description: >-
          Used to find job history effective date less than, greater than, equal
          to, or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find job history created less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-job-history-details/{systemId}
    method: getSingleRecord
    httpMethod: get
    tag: EmployeeJobHistoryDetail
    typeScriptTag: employeeJobHistoryDetail
    description: Get a single job history detail record
    parameters:
      - name: systemId
        schema: string
        required: true
        description: ''
        example: SYSTEMID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: isOrgChange
        schema: string
        required: false
        description: ''
      - name: isJobChange
        schema: string
        required: false
        description: ''
      - name: isRateChange
        schema: string
        required: false
        description: ''
      - name: isPromotion
        schema: string
        required: false
        description: ''
      - name: systemId
        schema: string
        required: false
        description: ''
      - name: jobEffectiveDate
        schema: string
        required: false
        description: >-
          Used to find job history effective date less than, greater than, equal
          to, or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find job history created less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-ids
    method: byCompanyIds
    httpMethod: post
    tag: Employee ID Lookup
    typeScriptTag: employeeIdLookup
    description: Employee ID Lookup
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '207'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /personnel/v1/empl-multiple-jobs
    method: listDetails
    httpMethod: get
    tag: EmployeeMultipleJobsOPP
    typeScriptTag: employeeMultipleJobsOpp
    description: Get employee multiple jobs details
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: jobCode
        schema: string
        required: false
        description: ''
      - name: isPrimaryJob
        schema: string
        required: false
        description: ''
      - name: jobIsInActive
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-multi-phone-numbers
    method: get
    httpMethod: get
    tag: EmployeeMultiPhoneNumbers
    typeScriptTag: employeeMultiPhoneNumbers
    description: Get employee multiple phone numbers
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: systemId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/empl-multiple-positions
    method: get
    httpMethod: get
    tag: EmpMultiplePositions
    typeScriptTag: empMultiplePositions
    description: Get Employee Multiple Positions
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: jobCode
        schema: string
        required: false
        description: ''
      - name: positionCode
        schema: string
        required: false
        description: ''
      - name: isPrimary
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/national-documents
    method: get
    httpMethod: get
    tag: NationalDocument
    typeScriptTag: nationalDocument
    description: All employee national document details
    parameters:
      - name: contactId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: nationalDocumentIssuingCountryCode
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/companies/pay-statements-summary
    method: getPaySummaries
    httpMethod: post
    tag: CompanyPayStatement
    typeScriptTag: companyPayStatement
    description: >-
      Get employee(https://developer.ukg.com/hcm/reference pay
      statement(https://developer.ukg.com/hcm/reference summary for a company or
      pay group for a given date range.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: startDate
        schema: string
        required: true
        description: ''
        example: STARTDATE
      - name: endDate
        schema: string
        required: true
        description: ''
        example: ENDDATE
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: per_Page
        schema: integer
        required: false
        description: ''
      - name: pagesCount
        schema: integer
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: BadRequest
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/companies/pay-statements
    method: getByDateRange
    httpMethod: post
    tag: CompanyPayStatement
    typeScriptTag: companyPayStatement
    description: >-
      Get employee(https://developer.ukg.com/hcm/reference pay
      statement(https://developer.ukg.com/hcm/reference for a company or pay
      group for a given date range.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: startDate
        schema: string
        required: true
        description: ''
        example: STARTDATE
      - name: endDate
        schema: string
        required: true
        description: ''
        example: ENDDATE
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: per_Page
        schema: integer
        required: false
        description: ''
      - name: pagesCount
        schema: integer
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: BadRequest
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/employees/pay-statements
    method: getByDateRange
    httpMethod: post
    tag: EmployeePayStatement
    typeScriptTag: employeePayStatement
    description: >-
      Get employee pay statement(https://developer.ukg.com/hcm/reference based
      on the passed employee identifier for a given date range.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: employeeIdentifier
        schema: object
        description: ''
      - name: startDate
        schema: string
        description: ''
      - name: endDate
        schema: string
        description: ''
      - name: page
        schema: integer
        description: ''
      - name: per_Page
        schema: integer
        description: ''
      - name: pagesCount
        schema: integer
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: BadRequest
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/employees/pay-statement/last
    method: getLastPayStatement
    httpMethod: post
    tag: EmployeePayStatement
    typeScriptTag: employeePayStatement
    description: Get employee last pay statement based on the passed employee identifier.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: employeeIdentifier
        schema: object
        description: ''
      - name: startDate
        schema: string
        description: ''
      - name: endDate
        schema: string
        description: ''
      - name: page
        schema: integer
        description: ''
      - name: per_Page
        schema: integer
        description: ''
      - name: pagesCount
        schema: integer
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: BadRequest
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v1/employees/pay-statement/{PayIdentifier}
    method: getByPayIdentifier
    httpMethod: get
    tag: EmployeePayStatement
    typeScriptTag: employeePayStatement
    description: Get employee pay statement based on the given pay identifier.
    parameters:
      - name: payIdentifier
        schema: string
        required: true
        description: ''
        example: PAYIDENTIFIER
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: BadRequest
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/integration/kronos/employee-profiles
    method: getList
    httpMethod: get
    tag: KronosEmployeeProfiles
    typeScriptTag: kronosEmployeeProfiles
    description: Get list of employees profile
    parameters:
      - name: product
        schema: string
        required: true
        description: ''
        example: PRODUCT
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: changeWindow
        schema: integer
        required: false
        description: ''
      - name: includeHistoryIfChangeDetected
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-security-user-details
    method: getDetails
    httpMethod: get
    tag: Employee Security User Details
    typeScriptTag: employeeSecurityUserDetails
    description: Get employee security user details
    parameters:
      - name: userName
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/integration/kronos/employee-status
    method: get
    httpMethod: get
    tag: KronosEmployeeStatus
    typeScriptTag: kronosEmployeeStatus
    description: Get Employee Status
    parameters:
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeIds
        schema: string
        required: false
        description: ''
      - name: inactiveTermWindow
        schema: integer
        required: false
        description: ''
      - name: inactiveDisabledWindow
        schema: integer
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employee-supervisor-details
    method: get
    httpMethod: get
    tag: EmployeeSupervisorDetails
    typeScriptTag: employeeSupervisorDetails
    description: Get Employee Supervisor Details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: supervisorCompanyId
        schema: string
        required: false
        description: ''
      - name: supervisorEmployeeId
        schema: string
        required: false
        description: ''
      - name: supervisorCompanyCode
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/employment-details
    method: getDetails
    httpMethod: get
    tag: EmploymentDetails
    typeScriptTag: employmentDetails
    description: Get Employment Details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: primaryWorkLocationCode
        schema: string
        required: false
        description: ''
      - name: primaryProjectCode
        schema: string
        required: false
        description: ''
      - name: deductionGroupCode
        schema: string
        required: false
        description: ''
      - name: earningGroupCode
        schema: string
        required: false
        description: ''
      - name: employeeTypeCode
        schema: string
        required: false
        description: ''
      - name: employeeStatusCode
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: supervisorId
        schema: string
        required: false
        description: ''
      - name: originalHireDate
        schema: string
        required: false
        description: ''
      - name: lastHireDate
        schema: string
        required: false
        description: ''
      - name: dateOfTermination
        schema: string
        required: false
        description: ''
      - name: dateOfRetirement
        schema: string
        required: false
        description: ''
      - name: dateTimeCreated
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: ''
      - name: dateLastPayDatePaid
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: isHomeCompany
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/companies/{companyId}/employment-details
    method: listByCompany
    httpMethod: get
    tag: EmploymentDetails
    typeScriptTag: employmentDetails
    description: Get Employment Details
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: primaryWorkLocationCode
        schema: string
        required: false
        description: ''
      - name: primaryProjectCode
        schema: string
        required: false
        description: ''
      - name: deductionGroupCode
        schema: string
        required: false
        description: ''
      - name: earningGroupCode
        schema: string
        required: false
        description: ''
      - name: employeeTypeCode
        schema: string
        required: false
        description: ''
      - name: employeeStatusCode
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: supervisorId
        schema: string
        required: false
        description: ''
      - name: originalHireDate
        schema: string
        required: false
        description: ''
      - name: lastHireDate
        schema: string
        required: false
        description: ''
      - name: dateOfTermination
        schema: string
        required: false
        description: ''
      - name: dateOfRetirement
        schema: string
        required: false
        description: ''
      - name: dateTimeCreated
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: ''
      - name: dateLastPayDatePaid
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: isHomeCompany
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: >-
      /personnel/v1/companies/{companyId}/employees/{employeeId}/employment-details
    method: getByCompanyIdAndEmployeeId
    httpMethod: get
    tag: EmploymentDetails
    typeScriptTag: employmentDetails
    description: Get Employment Details
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: primaryJobCode
        schema: string
        required: false
        description: ''
      - name: jobTitle
        schema: string
        required: false
        description: ''
      - name: fullTimeOrPartTimeCode
        schema: string
        required: false
        description: ''
      - name: primaryWorkLocationCode
        schema: string
        required: false
        description: ''
      - name: primaryProjectCode
        schema: string
        required: false
        description: ''
      - name: deductionGroupCode
        schema: string
        required: false
        description: ''
      - name: earningGroupCode
        schema: string
        required: false
        description: ''
      - name: employeeTypeCode
        schema: string
        required: false
        description: ''
      - name: employeeStatusCode
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: supervisorId
        schema: string
        required: false
        description: ''
      - name: originalHireDate
        schema: string
        required: false
        description: ''
      - name: lastHireDate
        schema: string
        required: false
        description: ''
      - name: dateOfTermination
        schema: string
        required: false
        description: ''
      - name: dateOfRetirement
        schema: string
        required: false
        description: ''
      - name: dateTimeCreated
        schema: string
        required: false
        description: ''
      - name: dateTimeChanged
        schema: string
        required: false
        description: ''
      - name: dateLastPayDatePaid
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: isHomeCompany
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '429'
        description: '429'
      - statusCode: '500'
        description: ''
  - url: /payroll/v2/general-ledger
    method: get
    httpMethod: get
    tag: GeneralLedgerRunDetailsV2
    typeScriptTag: generalLedgerRunDetailsV2
    description: >-
      Returns a list of details for a general ledger run, filterable by runId
      and blockId
    parameters:
      - name: runId
        schema: string
        required: false
        description: ''
      - name: blockId
        schema: string
        required: false
        description: ''
      - name: mostRecent
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /payroll/v2/general-ledger/{runId}
    method: getByRunId
    httpMethod: get
    tag: GeneralLedgerRunDetailsV2
    typeScriptTag: generalLedgerRunDetailsV2
    description: >-
      Returns a list of details for a general ledger run, filterable by runId
      and blockId
    parameters:
      - name: runId
        schema: string
        required: true
        description: ''
        example: RUNID
      - name: runId
        schema: string
        required: false
        description: ''
      - name: blockId
        schema: string
        required: false
        description: ''
      - name: mostRecent
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-global-banks
    method: get
    httpMethod: get
    tag: EmployeeGlobalBank
    typeScriptTag: employeeGlobalBank
    description: Get all direct deposit details for global employees
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: employeeCountry
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: dateModified
        schema: string
        required: false
        description: >-
          Used to find global employee's direct deposit modified date less than,
          greater than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-global-localization-elements
    method: get
    httpMethod: get
    tag: EmpGlobalLocalizationElement
    typeScriptTag: empGlobalLocalizationElement
    description: Get all global employee localization fields added to UKG Pro
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: created
        schema: string
        required: false
        description: >-
          Used to find employee localization fields created less than, greater
          than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: effective
        schema: string
        required: false
        description: >-
          Used to find employee localization fields effective less than, greater
          than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/employee-pay-deduction-elements
    method: get
    httpMethod: get
    tag: EmployeePayDeductionElement
    typeScriptTag: employeePayDeductionElement
    description: Get Global Employee Payments and Deductions Service
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: country
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: payDeductionName
        schema: string
        required: false
        description: ''
      - name: periodStartName
        schema: string
        required: false
        description: ''
      - name: paymentOrDeductionIndicator
        schema: string
        required: false
        description: ''
      - name: modifiedDate
        schema: string
        required: false
        description: >-
          Used to find a payment or deduction modified less than, greater than,
          equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: startDate
        schema: string
        required: false
        description: >-
          Used to find a payment or deduction where the pay period start is less
          than, greater than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: endDate
        schema: string
        required: false
        description: >-
          Used to find a payment or deduction where the pay period end is less
          than, greater than, equal to, or between passed
          date(https://developer.ukg.com/hcm/reference
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/import-tool
    method: post
    httpMethod: post
    tag: ImportTool
    typeScriptTag: importTool
    description: Takes an XML transaction and feeds it into the Import Tool
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: transaction
        schema: string
        description: ''
      - name: uniqueFileName
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/import-tool/status/{stagingId}
    method: getStatus
    httpMethod: get
    tag: ImportTool
    typeScriptTag: importTool
    description: Retrieves the status of an import tool transaction
    parameters:
      - name: stagingId
        schema: string
        required: true
        description: ''
        example: STAGINGID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/insurance-rate
    method: getInsRate
    httpMethod: get
    tag: InsRate
    typeScriptTag: insRate
    description: Get Insurance Rate
    parameters:
      - name: deductionCode
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: payFrequency
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/integration-audit-configuration
    method: getData
    httpMethod: get
    tag: IntegrationAuditConfiguration
    typeScriptTag: integrationAuditConfiguration
    description: Get Integration Audit Configuration Data
    parameters:
      - name: tableName
        schema: string
        required: false
        description: ''
      - name: fieldName
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/international-employees
    method: get
    httpMethod: get
    tag: InternationalEmployee
    typeScriptTag: internationalEmployee
    description: Get international employee details for all employees
    parameters:
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/international-employees/{employeeId}
    method: getDetails
    httpMethod: get
    tag: InternationalEmployee
    typeScriptTag: internationalEmployee
    description: Get a single employees international details
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: countryCode
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /configuration/v1/jobgroup
    method: get
    httpMethod: get
    tag: JobGroup
    typeScriptTag: jobGroup
    description: Get All Job Groups
    parameters:
      - name: jobGroupCode
        schema: string
        required: false
        description: ''
      - name: jobGroupCountryCode
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /jobs/{code}
    method: getConfiguration
    httpMethod: get
    tag: Jobs
    typeScriptTag: jobs
    description: Retrieve a single job configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Job code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
  - url: /locations/{code}
    method: getConfiguration
    httpMethod: get
    tag: Locations
    typeScriptTag: locations
    description: Retrieve a single location configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: location code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
  - url: /hoursWorked
    method: addTimeEntries
    httpMethod: post
    tag: Time
    typeScriptTag: time
    description: Add hours worked entries
    parameters:
      - name: xCorrelationId
        schema: string
        required: true
        description: This value MUST be supplied by the originator, used for tracing
        example: X-CORRELATION-ID
      - name: usTenantId
        schema: string
        required: true
        description: ''
        example: US-TENANT-ID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: This is the API key value that is supplied to each time system
        example: US-CUSTOMER-API-KEY
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: timeData
        schema: array
        required: true
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '500'
        description: Internal Server Error
  - url: /tenants/{tenantIdentifier}/new-hires/{id}
    method: getById
    httpMethod: get
    tag: New Hires
    typeScriptTag: newHires
    description: Gets a single New Hire by Id
    parameters:
      - name: tenantIdentifier
        schema: string
        required: true
        description: >-
          Unique identifier of the tenant to interact with. Can be either the
          tenant alias or tenant ID.
        example: TENANTIDENTIFIER
      - name: id
        schema: string
        required: true
        description: Unique identifier for the New Hire
        example: ID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /tenants/{tenantIdentifier}/new-hires
    method: createSingleNewHire
    httpMethod: post
    tag: New Hires
    typeScriptTag: newHires
    description: Creates a single New Hire
    parameters:
      - name: tenantIdentifier
        schema: string
        required: true
        description: >-
          Unique identifier of the tenant to interact with. Can be either the
          tenant alias or tenant ID.
        example: TENANTIDENTIFIER
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: contactInformation
        schema: object
        description: ''
        example:
          name:
            prefix:
              code: MR
            first: Firstname
            middle: Middlename
            last: Lastname
            formerLast: Formerlastname
            suffix:
              id: ba00d403-e240-4c16-b894-92036dbb4b0fX
          emailAddress: first@last.com
          primaryPhone: 954-687-8909
          secondaryPhone: '9545554567'
          address:
            line1: Line 1
            line2: Line 2
            city: Weston
            zipCode: '33326'
            county: Broward
            stateCode: FL
            countryCode: USA
      - name: job
        schema: object
        description: ''
        example:
          code: MGT
          requisitionId: '1234'
          selectedFLSAStatus: 1
          componentCompany:
            code: FZAJ2
          workLocation:
            code: QU4FL
          supervisor:
            code: 89F8FA04-7055-47D2-943B-D2A409FFA3BF
          employeeType:
            code: INT
      - name: organizationLevels
        schema: array
        description: ''
      - name: compensation
        schema: object
        description: ''
        example:
          isFullTime: true
          isSalaried: false
          workHours: 40
          weeklyHours: 168
          currencyCode: USD
          payRate: 20
          ratePer: H
      - name: onboardingOwnerId
        schema: string
        description: ''
      - name: hireDate
        schema: string
        description: ''
      - name: orientationDate
        schema: string
        description: ''
      - name: startDate
        schema: string
        description: ''
      - name: pastStartDateReason
        schema: string
        description: ''
      - name: mentor
        schema: object
        description: ''
        example:
          prefix:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: ba00d403-e240-4c16-b894-92036dbb4b0fX
            code: MR
      - name: personalMessage
        schema: string
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '409'
        description: ''
  - url: /signin/oauth2/t/{tenant-name}/access_token
    method: obtainOAuthToken
    httpMethod: post
    tag: Post new token request
    typeScriptTag: postNewTokenRequest
    description: Obtain new oAuth token
    parameters:
      - name: tenantName
        schema: string
        required: true
        description: Tenant Name provided to you from UltiPro
        example: TENANT-NAME
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: grant_type
        schema: string
        required: true
        description: ''
        example: GRANT_TYPE
      - name: client_id
        schema: string
        required: true
        description: ''
        example: CLIENT_ID
      - name: client_secret
        schema: string
        required: true
        description: ''
        example: CLIENT_SECRET
      - name: scope
        schema: string
        required: true
        description: ''
        example: SCOPE
    responses:
      - statusCode: '200'
        description: ''
  - url: /personnel/v1/open-enrollment-dep-deductions
    method: getData
    httpMethod: get
    tag: OpenEnrollmentDependentDeductions
    typeScriptTag: openEnrollmentDependentDeductions
    description: Get Open Enrollment Dependent Deductions Data
    parameters:
      - name: startDateTime
        schema: string
        required: true
        description: ''
        example: STARTDATETIME
      - name: endDateTime
        schema: string
        required: true
        description: ''
        example: ENDDATETIME
      - name: sessionType
        schema: string
        required: true
        description: ''
        example: SESSIONTYPE
      - name: deductionCode
        schema: string
        required: true
        description: ''
        example: DEDUCTIONCODE
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/open-enrollment-emp-deductions
    method: getAuditDetails
    httpMethod: get
    tag: OpenEnrollmentEmployeeDeductions
    typeScriptTag: openEnrollmentEmployeeDeductions
    description: Get Open Enrollment Employee Deductions
    parameters:
      - name: startDateTime
        schema: string
        required: true
        description: ''
        example: STARTDATETIME
      - name: endDateTime
        schema: string
        required: true
        description: ''
        example: ENDDATETIME
      - name: sessionType
        schema: string
        required: true
        description: ''
        example: SESSIONTYPE
      - name: deductionCode
        schema: string
        required: true
        description: ''
        example: DEDUCTIONCODE
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/option-rate
    method: getData
    httpMethod: get
    tag: OptionRate
    typeScriptTag: optionRate
    description: Get Option Rate Data
    parameters:
      - name: deductionCode
        schema: string
        required: false
        description: ''
      - name: benefitOption
        schema: string
        required: false
        description: ''
      - name: effectiveDate
        schema: string
        required: false
        description: ''
      - name: payFrequency
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/org-levels/{level}/{code}
    method: get
    httpMethod: get
    tag: Single Organization Level
    typeScriptTag: singleOrganizationLevel
    description: Get single org-level
    parameters:
      - name: level
        schema: string
        required: true
        description: Description of the org-level.
        example: LEVEL
      - name: code
        schema: string
        required: true
        description: Organization code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /configuration/v1/org-levels/{level}/{code}
    method: updateProperties
    httpMethod: patch
    tag: Single Organization Level
    typeScriptTag: singleOrganizationLevel
    description: Patch one org-level
    parameters:
      - name: level
        schema: string
        required: true
        description: Description of the org-level.
        example: LEVEL
      - name: code
        schema: string
        required: true
        description: Organization code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: budgetGroup
        schema: string
        required: false
        description: ''
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
      - name: currentYearBudgetFTE
        schema: number
        required: false
        description: ''
      - name: currentYearBudgetSalary
        schema: number
        required: false
        description: ''
      - name: glSegment
        schema: string
        required: false
        description: ''
      - name: lastYearBudgetFTE
        schema: number
        required: false
        description: ''
      - name: lastYearBudgetSalary
        schema: number
        required: false
        description: ''
      - name: level
        schema: number
        required: true
        description: ''
        example: 0
      - name: levelDescription
        schema: string
        required: false
        description: ''
      - name: reportingCategory
        schema: string
        required: false
        description: ''
      - name: isActive
        schema: boolean
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /configuration/v1/org-levels/{level}/{code}
    method: updateOrgLevel
    httpMethod: put
    tag: Single Organization Level
    typeScriptTag: singleOrganizationLevel
    description: Update one org-level
    parameters:
      - name: level
        schema: string
        required: true
        description: Description of the org-level.
        example: LEVEL
      - name: code
        schema: string
        required: true
        description: Organization code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: budgetGroup
        schema: string
        required: false
        description: ''
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
      - name: currentYearBudgetFTE
        schema: number
        required: false
        description: ''
      - name: currentYearBudgetSalary
        schema: number
        required: false
        description: ''
      - name: glSegment
        schema: string
        required: false
        description: ''
      - name: lastYearBudgetFTE
        schema: number
        required: false
        description: ''
      - name: lastYearBudgetSalary
        schema: number
        required: false
        description: ''
      - name: level
        schema: number
        required: true
        description: ''
        example: 0
      - name: levelDescription
        schema: string
        required: false
        description: ''
      - name: reportingCategory
        schema: string
        required: false
        description: ''
      - name: isActive
        schema: boolean
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /configuration/v1/org-levels
    method: getAllOrgLevels
    httpMethod: get
    tag: View or Create Organization Levels
    typeScriptTag: viewOrCreateOrganizationLevels
    description: Get all org-levels
    parameters:
      - name: levelDescription
        schema: string
        required: false
        description: Description of the org-level.
      - name: code
        schema: string
        required: false
        description: Organization code.
      - name: budgetGroup
        schema: string
        required: false
        description: Organizational budget group.
      - name: reportingCategory
        schema: string
        required: false
        description: Reporting category.
      - name: isActive
        schema: boolean
        required: false
        description: Active status.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /configuration/v1/org-levels
    method: createOrgLevelConfig
    httpMethod: post
    tag: View or Create Organization Levels
    typeScriptTag: viewOrCreateOrganizationLevels
    description: Create org-level configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '207'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /configuration/v1/organization-reporting-category
    method: get
    httpMethod: get
    tag: Organization Reporting Category
    typeScriptTag: organizationReportingCategory
    description: Get Organization Reporting Category
    parameters:
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /payroll/v1/pay-register
    method: get
    httpMethod: get
    tag: PayRegister
    typeScriptTag: payRegister
    description: Get Pay Register
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: checkId
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: documentNumber
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: periodControl
        schema: string
        required: false
        description: ''
      - name: payDate
        schema: string
        required: false
        description: ''
      - name: periodEndDate
        schema: string
        required: false
        description: ''
      - name: periodStartDate
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /payroll/v1/paygroup-payperiods
    method: getPayGroupPayPeriod
    httpMethod: get
    tag: PayGroupPayPeriod
    typeScriptTag: payGroupPayPeriod
    description: Get PayGroup PayPeriods
    parameters:
      - name: payDateSeq
        schema: integer
        required: false
        description: ''
      - name: periodEndDate
        schema: string
        required: false
        description: ''
      - name: periodStartDate
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: payDate
        schema: string
        required: false
        description: ''
      - name: startPerControl
        schema: string
        required: false
        description: ''
      - name: endPerControl
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /payroll/v1/payroll-deductions-history
    method: get
    httpMethod: get
    tag: PayrollDeductionsHistory
    typeScriptTag: payrollDeductionsHistory
    description: Get Payroll Deductions History
    parameters:
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: checkId
        schema: string
        required: false
        description: ''
      - name: employeeNumber
        schema: string
        required: false
        description: ''
      - name: deductionCode
        schema: string
        required: false
        description: ''
      - name: deductionType
        schema: string
        required: false
        description: ''
      - name: benefitOption
        schema: string
        required: false
        description: ''
      - name: benefitProvider
        schema: string
        required: false
        description: ''
      - name: payGroup
        schema: string
        required: false
        description: ''
      - name: periodControl
        schema: string
        required: false
        description: ''
      - name: payDate
        schema: string
        required: false
        description: ''
      - name: is401K
        schema: string
        required: false
        description: ''
      - name: is403B
        schema: string
        required: false
        description: ''
      - name: is408K
        schema: string
        required: false
        description: ''
      - name: is408P
        schema: string
        required: false
        description: ''
      - name: is457
        schema: string
        required: false
        description: ''
      - name: is457B
        schema: string
        required: false
        description: ''
      - name: is457F
        schema: string
        required: false
        description: ''
      - name: is501C
        schema: string
        required: false
        description: ''
      - name: isD125
        schema: string
        required: false
        description: ''
      - name: isDeductionOffSet
        schema: string
        required: false
        description: ''
      - name: isDeferredCompensation
        schema: string
        required: false
        description: ''
      - name: isDependentCare
        schema: string
        required: false
        description: ''
      - name: isHousing
        schema: string
        required: false
        description: ''
      - name: isNonQualifiedPlan
        schema: string
        required: false
        description: ''
      - name: startPerControl
        schema: string
        required: false
        description: ''
      - name: endPerControl
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /services/payroll/v1/import-pay-items/earnings
    method: addTimeClockData
    httpMethod: post
    tag: Earnings
    typeScriptTag: earnings
    description: Import Earnings for Payroll
    parameters:
      - name: xCorrelationId
        schema: string
        required: true
        description: A client-supplied GUID used for tracking the operation's execution.
        example: X-CORRELATION-ID
      - name: usClientId
        schema: string
        required: true
        description: ''
        example: US-CLIENT-ID
      - name: failAllOnRequest
        schema: boolean
        description: >-
          A Boolean indicator of whether or not the entire request fails if any
          errors are present. When false, valid earnings are staged for import
          even when errors are present in the request payload.
        default: true
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: earnings
        schema: array
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '207'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '409'
        description: ''
  - url: /services/payroll/v1/import-pay-items/earnings/{refId}
    method: deleteEarning
    httpMethod: delete
    tag: Earnings
    typeScriptTag: earnings
    description: Delete Earning by ID
    parameters:
      - name: xCorrelationId
        schema: string
        required: false
        description: A client-supplied GUID used for tracking the operation's execution.
      - name: usClientId
        schema: string
        required: true
        description: ''
        example: US-CLIENT-ID
      - name: refId
        schema: string
        required: true
        description: A unique identifier associated with an earning.
        example: REFID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '204'
        description: Deleted
      - statusCode: '404'
        description: Not Found
      - statusCode: '405'
        description: Method not allowed
  - url: /services/payroll/v1/import-pay-items/earnings/{refId}
    method: getStatusDetails
    httpMethod: get
    tag: Earnings
    typeScriptTag: earnings
    description: Retrieve Earning by ID
    parameters:
      - name: xCorrelationId
        schema: string
        required: false
        description: A client-supplied GUID used for tracking the operation's execution.
      - name: usClientId
        schema: string
        required: true
        description: ''
        example: US-CLIENT-ID
      - name: refId
        schema: string
        required: true
        description: A unique identifier associated with an earning.
        example: REFID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: Not Found
  - url: /personnel/v1/person-details
    method: getAllDetails
    httpMethod: get
    tag: PersonDetails
    typeScriptTag: personDetails
    description: Get all person details
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: lastName
        schema: string
        required: false
        description: ''
      - name: emailAddress
        schema: string
        required: false
        description: ''
      - name: addressState
        schema: string
        required: false
        description: ''
      - name: addressCountry
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: string
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: >-
          Used to find date of COBRA event less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find person record created less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeChanged
        schema: string
        required: false
        description: >-
          Used to find person record changed less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: nationalId
        schema: string
        required: false
        description: ''
      - name: nationalIdCountry
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/companies/{companyId}/person-details
    method: getSingleCompanyDetails
    httpMethod: get
    tag: PersonDetails
    typeScriptTag: personDetails
    description: Get all person details for a single company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: lastName
        schema: string
        required: false
        description: ''
      - name: emailAddress
        schema: string
        required: false
        description: ''
      - name: addressState
        schema: string
        required: false
        description: ''
      - name: addressCountry
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: string
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: >-
          Used to find date of COBRA event less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find person record created less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeChanged
        schema: string
        required: false
        description: >-
          Used to find person record changed less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: nationalId
        schema: string
        required: false
        description: ''
      - name: nationalIdCountry
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/companies/{companyId}/employees/{employeeId}/person-details
    method: getSingleRecord
    httpMethod: get
    tag: PersonDetails
    typeScriptTag: personDetails
    description: Get a single person detail record for a single company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: lastName
        schema: string
        required: false
        description: ''
      - name: emailAddress
        schema: string
        required: false
        description: ''
      - name: addressState
        schema: string
        required: false
        description: ''
      - name: addressCountry
        schema: string
        required: false
        description: ''
      - name: cobraIsActive
        schema: string
        required: false
        description: ''
      - name: cobraStatus
        schema: string
        required: false
        description: ''
      - name: dateOfCobraEvent
        schema: string
        required: false
        description: >-
          Used to find date of COBRA event less than, greater than, equal to, or
          between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeCreated
        schema: string
        required: false
        description: >-
          Used to find person record created less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: dateTimeChanged
        schema: string
        required: false
        description: >-
          Used to find person record changed less than, greater than, equal to,
          or between passed date(https://developer.ukg.com/hcm/reference
      - name: nationalId
        schema: string
        required: false
        description: ''
      - name: nationalIdCountry
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/person-details/{employeeId}
    method: getSingleDetailRecord
    httpMethod: get
    tag: PersonDetails
    typeScriptTag: personDetails
    description: Get a single person detail record
    parameters:
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/platform-configuration-fields/class-name/{className}
    method: getFieldsData
    httpMethod: get
    tag: V1 PlatformConfigurationCustomFieldsData
    typeScriptTag: v1PlatformConfigurationCustomFieldsData
    description: Platform Configuration Fields Data v1
    parameters:
      - name: className
        schema: string
        required: true
        description: >-
          The name of a supported class, as listed above, to pull custom fields
          from.
        example: CLASSNAME
      - name: keyName
        schema: string
        required: false
        description: >-
          Optional keyName to allow filtering results by the corresponding
          keyValue. keyNames are specific IDs that apply to the class in
          question.
      - name: keyValue
        schema: string
        required: false
        description: >-
          Optional keyValue. Allows filtering results to only include a specific
          keyValue(https://developer.ukg.com/hcm/reference. keyValues correspond
          to a supplied keyName.
      - name: fields
        schema: string
        required: false
        description: >-
          The exact name of a custom field or fields in a comma seperated list.
          Filters results to only fields with those names.
      - name: employmentStatus
        schema: string
        required: false
        description: >-
          Use in junction with employment specific queries to filter custom
          field results by an internal employment status.
      - name: page
        schema: integer
        required: false
        description: >-
          Offsets results. Used with page number to allow filtering results to a
          specific range of custom fields.
      - name: perPage
        schema: integer
        required: false
        description: >-
          Offsets results. Used with page to allow filtering results to a
          specific range of custom fields.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /personnel/v2/platform-configuration-fields/class-name/{className}
    method: getFieldsData
    httpMethod: get
    tag: V2 PlatformConfigurationCustomFieldsData
    typeScriptTag: v2PlatformConfigurationCustomFieldsData
    description: Platform Configuration Fields Data v2
    parameters:
      - name: className
        schema: string
        required: true
        description: >-
          The name of a supported class, as listed above, to pull custom fields
          from.
        example: CLASSNAME
      - name: fields
        schema: string
        required: false
        description: >-
          The exact name of a custom field or fields in a comma seperated list.
          Filters results to only fields with those names.
      - name: keyValue
        schema: string
        required: false
        description: >-
          keyValue to filter results by, allowing filtering by specific Ids.
          This value is dependent on the className, as listed in the
          implementation notes.
      - name: page
        schema: integer
        required: false
        description: >-
          Offsets results. Used with page number to allow filtering results to a
          certain range of custom fields.
      - name: perPage
        schema: integer
        required: false
        description: >-
          Offsets results. Used with page to allow filtering results to a
          certain range of custom fields.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/platform-configuration/custom-fields-schema
    method: getFieldsSchema
    httpMethod: get
    tag: PlatformConfigurationCustomFieldsSchema
    typeScriptTag: platformConfigurationCustomFieldsSchema
    description: Gets Platform Configuration standard classes custom fields schema
    parameters:
      - name: className
        schema: string
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: NotFound
      - statusCode: '500'
        description: InternalServerError
  - url: /personnel/v1/position-report
    method: get
    httpMethod: get
    tag: PositionReport
    typeScriptTag: positionReport
    description: Get Position Report
    parameters:
      - name: positionCode
        schema: string
        required: false
        description: ''
      - name: reportsToPositionCode
        schema: string
        required: false
        description: ''
      - name: effectiveStartDate
        schema: string
        required: false
        description: ''
      - name: effectiveStopDate
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/positions
    method: listFiltered
    httpMethod: get
    tag: Positions
    typeScriptTag: positions
    description: >-
      Returns list of employee position information filtered on various
      parameters
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeType
        schema: string
        required: false
        description: ''
      - name: statusCode
        schema: string
        required: false
        description: ''
      - name: payGroupCode
        schema: string
        required: false
        description: ''
      - name: positionCode
        schema: string
        required: false
        description: ''
      - name: projectCode
        schema: string
        required: false
        description: ''
      - name: shiftGroupCode
        schema: string
        required: false
        description: ''
      - name: isProrated
        schema: boolean
        required: false
        description: ''
      - name: isApproved
        schema: boolean
        required: false
        description: ''
      - name: isEligibleForBenefits
        schema: boolean
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/pto-plans
    method: information
    httpMethod: get
    tag: Get All PTO Plans
    typeScriptTag: getAllPtoPlans
    description: Get all pto-plans
    parameters:
      - name: page
        schema: number
        required: false
        description: Pagination, which page you want to see
      - name: perPage
        schema: number
        required: false
        description: Pagination, how many records per page you want to see
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /personnel/v1/pto-plans
    method: ultiproRecord
    httpMethod: post
    tag: PTO Plan Post
    typeScriptTag: ptoPlanPost
    description: Create A PTO Plan
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '207'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: >-
      /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans/{ptoPlan}
    method: info
    httpMethod: get
    tag: Get Specific PTO Plan
    typeScriptTag: getSpecificPtoPlan
    description: Get a specific pto-plan
    parameters:
      - name: companyId
        schema: string
        required: true
        description: Company Identifier
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: Employee Identifier
        example: EMPLOYEEID
      - name: ptoPlan
        schema: string
        required: true
        description: PTO Plan Identifier
        example: PTOPLAN
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: >-
      /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans/{ptoPlan}
    method: onePtoPlan
    httpMethod: patch
    tag: PTO Plan Patch
    typeScriptTag: ptoPlanPatch
    description: Patch one PTO Plan
    parameters:
      - name: companyId
        schema: string
        required: true
        description: Company Identifier
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: Employee Identifier
        example: EMPLOYEEID
      - name: ptoPlan
        schema: string
        required: true
        description: PTO Plan Identifier
        example: PTOPLAN
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: ptoPlan
        schema: string
        required: true
        description: ''
        example: PTOPLAN
      - name: earned
        schema: number
        required: false
        description: ''
      - name: taken
        schema: number
        required: false
        description: ''
      - name: pendingBalance
        schema: number
        required: false
        description: ''
      - name: earnedThroughDate
        schema: string
        required: false
        description: ''
      - name: reset
        schema: string
        required: false
        description: ''
      - name: pendingMoveDate
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans
    method: info
    httpMethod: get
    tag: Get Specific Employees PTO Plans
    typeScriptTag: getSpecificEmployeesPtoPlans
    description: Get a specific employees pto-plans
    parameters:
      - name: companyId
        schema: string
        required: true
        description: Company Identifier
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: Employee Identifier
        example: EMPLOYEEID
      - name: page
        schema: number
        required: false
        description: Pagination, which page you want to see
      - name: perPage
        schema: number
        required: false
        description: Pagination, how many records per page you want to see
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /{tenantalias}/api/applications
    method: getBasedFilterCriteria
    httpMethod: get
    tag: Applications
    typeScriptTag: applications
    description: Retrieve Applications
    parameters:
      - name: page
        schema: string
        description: The page of paginated records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default (https://developer.ukg.com/hcm/reference is
          applied.
        example: '200'
      - name: updatedAfter
        schema: string
        description: >-
          The filtering date on or after which applications were updated. UTC
          values are required for accurate results since DateTime values are
          UTC. For example: 2016-12-21T18:44:03.356Z. No quoted value. The
          system ignores this parameter if the value is not a properly formatted
          DateTime.  Milliseconds are also applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: updatedBefore
        schema: string
        description: >-
          The filtering date on or before which applications were updated. UTC
          values are required for accurate results since DateTime values are
          UTC. For example: 2016-12-21T18:44:03.356Z. No quoted value. The
          system ignores this parameter if the value is not a properly formatted
          DateTime.  Milliseconds are also applied to the filter.
        example: '2023-12-31T12:00:00Z'
    responses:
      - statusCode: '200'
        description: An array of applications.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications
    method: submitCandidateApplication
    httpMethod: post
    tag: Applications
    typeScriptTag: applications
    description: Create Application
    parameters:
      - name: creator
        schema: object
        required: false
        description: ''
      - name: candidate
        schema: object
        required: false
        description: ''
      - name: opportunity
        schema: object
        required: false
        description: ''
      - name: job_board
        schema: object
        required: false
        description: ''
      - name: applicant_source
        schema: object
        required: false
        description: ''
      - name: job_posting
        schema: object
        required: false
        description: ''
      - name: availability
        schema: object
        required: false
        description: ''
      - name: available_start_date
        schema: string
        required: true
        description: ''
        example: AVAILABLE_START_DATE
      - name: screening_question_responses
        schema: array
        required: false
        description: ''
      - name: country_specific_responses
        schema: array
        required: false
        description: ''
      - name: applied_date
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: An array containing bad requests.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}
    method: getById
    httpMethod: get
    tag: Applications
    typeScriptTag: applications
    description: Retrieve Application by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}/documents
    method: uploadDocument
    httpMethod: post
    tag: Applications
    typeScriptTag: applications
    description: Upload Application Document
    parameters:
      - name: file
        schema: string
        description: ''
        example: example.jpg
      - name: metadata
        schema: string
        description: ''
        example: metadata example
    responses:
      - statusCode: '201'
        description: Created
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}/comments
    method: getCommentsByApplicationId
    httpMethod: get
    tag: Applications
    typeScriptTag: applications
    description: Retrieve Comments by Application ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}/comments
    method: createCommentByApplicationId
    httpMethod: post
    tag: Applications
    typeScriptTag: applications
    description: Create Comment by Application ID
    parameters:
      - name: author
        schema: object
        required: false
        description: ''
      - name: comment
        schema: string
        required: true
        description: ''
        example: This is an application comment.
      - name: is_important
        schema: boolean
        required: false
        description: ''
        example: true
      - name: created_at
        schema: string
        required: false
        description: ''
        example: '2023-10-20T17:54:37.566583Z'
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: An array containing bad requests.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/applications/{applicationId}/hire
    method: initiateHire
    httpMethod: post
    tag: Applications
    typeScriptTag: applications
    description: Initiate Hire by Application ID
    parameters:
      - name: offer_date
        schema: string
        required: true
        description: ''
        example: OFFER_DATE
      - name: hire_date
        schema: string
        required: true
        description: ''
        example: HIRE_DATE
      - name: accept_date
        schema: string
        required: true
        description: ''
        example: ACCEPT_DATE
      - name: start_date
        schema: string
        required: true
        description: ''
        example: START_DATE
      - name: fte
        schema: number
        required: false
        description: ''
      - name: compensation
        schema: object
        required: false
        description: ''
      - name: company
        schema: object
        required: false
        description: ''
      - name: tax_location
        schema: object
        required: false
        description: ''
      - name: hiring_manager
        schema: object
        required: false
        description: ''
      - name: onboarding_owner
        schema: object
        required: false
        description: ''
      - name: supervisor
        schema: object
        required: false
        description: ''
      - name: org_units
        schema: array
        required: false
        description: ''
      - name: employee_type
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications-easy-apply-lookup
    method: lookupEasyApplyApplication
    httpMethod: post
    tag: Applications
    typeScriptTag: applications
    description: >-
      Look Up EasyApply Application by Candidate, Opportunity, and Integration
      ID
    parameters:
      - name: candidate
        schema: object
        description: ''
      - name: integration
        schema: object
        description: ''
      - name: opportunity
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}/disposition-events
    method: getByApplicationId
    httpMethod: get
    tag: Application Disposition Events
    typeScriptTag: applicationDispositionEvents
    description: Retrieve Application Disposition Events by Application ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications/{applicationId}/disposition-events
    method: byId
    httpMethod: post
    tag: Application Disposition Events
    typeScriptTag: applicationDispositionEvents
    description: Disposition Application by ID
    parameters:
      - name: created_at
        schema: string
        description: ''
      - name: step
        schema: object
        description: ''
      - name: author
        schema: object
        description: ''
      - name: disposition_reason
        schema: object
        description: ''
      - name: is_important
        schema: boolean
        description: ''
      - name: comment
        schema: string
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: An array containing bad requests.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applications-disposition-events
    method: getEvents
    httpMethod: get
    tag: Application Disposition Events
    typeScriptTag: applicationDispositionEvents
    description: Retrieve Application Disposition Events
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
      - name: updatedAfter
        schema: string
        description: >-
          The date and time on or after which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: updatedBefore
        schema: string
        description: >-
          The date and time on or before which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates
    method: getCandidatesBasedOnCriteria
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Candidates
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
      - name: updatedAfter
        schema: string
        description: >-
          The date and time on or after which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: updatedBefore
        schema: string
        description: >-
          The date and time on or before which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: candidateType
        schema: string
        description: >-
          The type of candidate to return. Valid values include `internal`,
          `external`, `all`. Defaults to `all`.
      - name: role
        schema: string
        description: >-
          The role of the returned candidates. Valid values include `recruiter`,
          `hiring-manager`, `onboarding-owner`, `recruiting-administrator`.
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates
    method: createCandidateUkgPro
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Create Candidate
    parameters:
      - name: name
        schema: object
        description: ''
      - name: contact_info
        schema: object
        description: ''
      - name: provider
        schema: object
        description: ''
      - name: integration_user_id
        schema: string
        description: ''
      - name: creator
        schema: object
        description: ''
      - name: password
        schema: string
        description: ''
      - name: is_willing_to_relocate
        schema: boolean
        description: ''
      - name: is_internal
        schema: boolean
        description: ''
      - name: is_active
        schema: boolean
        description: ''
      - name: hyperlinks
        schema: array
        description: ''
      - name: work_experience
        schema: array
        description: ''
      - name: education
        schema: array
        description: ''
      - name: skills
        schema: array
        description: ''
      - name: licenses
        schema: array
        description: ''
      - name: behaviors
        schema: array
        description: ''
      - name: motivations
        schema: array
        description: ''
      - name: comments
        schema: array
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates/{candidateId}
    method: getById
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Candidate by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates/{candidateId}/user-name-email
    method: getNameEmailById
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Name and Email by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates-lookup
    method: getByEmail
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Candidate by Email
    parameters:
      - name: email
        schema: string
        required: true
        description: ''
        example: person_name@ultimatesoftware.com
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: >-
          Forbidden. Ensure that the valid bearer token is passed with required
          scope.
      - statusCode: '404'
        description: The e-mail address does not match any user accounts.
      - statusCode: '409'
        description: >-
          The e-mail address matched a user account, but no associated candidate
          record could be found in UKG Pro Recruiting.
  - url: /{tenantalias}/api/candidates/{candidateId}/documents
    method: uploadDocumentByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Upload Document by Candidate ID
    parameters:
      - name: file
        schema: string
        description: ''
      - name: metadata
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized.
      - statusCode: '403'
        description: >-
          Forbidden. Ensure that the valid bearer token is passed with required
          scope.
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/comments
    method: getCommentsByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Comments by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: >-
          Forbidden. Ensure that the valid bearer token is passed with required
          scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/comments
    method: addCommentByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Comment by Candidate ID
    parameters:
      - name: created_at
        schema: string
        required: false
        description: ''
      - name: author
        schema: object
        required: false
        description: ''
      - name: is_important
        schema: boolean
        required: false
        description: ''
      - name: comment
        schema: string
        required: true
        description: ''
        example: COMMENT
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/behaviors
    method: getBehaviorsByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Behaviors by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: >-
          Forbidden. Ensure that the valid bearer token is passed with required
          scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/behaviors
    method: addBehaviorByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Behavior by Candidate ID
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: 2177d009-6294-5a40-90db-118d21930554
    responses:
      - statusCode: '201'
        description: The add behaviors schema model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/educations
    method: getEducationsByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Educations by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/educations
    method: addEducationByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Education by Candidate ID
    parameters:
      - name: description
        schema: string
        description: ''
      - name: degree
        schema: object
        description: ''
      - name: school
        schema: object
        description: ''
      - name: major
        schema: object
        description: ''
      - name: minor
        schema: object
        description: ''
      - name: from
        schema: object
        description: ''
      - name: to
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: The add educations schema model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/motivations
    method: getMotivationsByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Motivations by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array of motivations.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates/{candidateId}/motivations
    method: addMotivationByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Motivation by Candidate ID
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: 1a392e0d-bffa-5a3c-bc53-b22e68436c20
    responses:
      - statusCode: '201'
        description: The add motivation schema.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/licenses
    method: getLicensesByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Licenses by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array of licenses.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/licenses
    method: addLicenseByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add License by Candidate ID
    parameters:
      - name: license
        schema: object
        description: ''
      - name: number
        schema: string
        description: ''
      - name: achieved_date
        schema: string
        description: ''
      - name: renewal_date
        schema: string
        description: ''
    responses:
      - statusCode: '201'
        description: The add license schema model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/skills
    method: getSkillsByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Skills by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array of the candidate's skills.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/skills
    method: addSkillByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Skill by Candidate ID
    parameters:
      - name: proficiency_level
        schema: object
        description: ''
      - name: skill
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: The add skills schema model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
  - url: /{tenantalias}/api/candidates/{candidateId}/references
    method: getReferencesByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve References by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array containing references.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/references
    method: addReferenceByCandidateId
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Reference by Candidate ID
    parameters:
      - name: name
        schema: object
        description: ''
      - name: contact_info
        schema: object
        description: ''
      - name: company
        schema: string
        description: ''
      - name: job_title
        schema: string
        description: ''
      - name: relationship
        schema: string
        description: ''
      - name: recommendation
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: The add reference model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/references/{referenceId}
    method: getReferenceById
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Candidate Reference by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: The reference schema.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/references/{referenceId}
    method: updateReferenceById
    httpMethod: put
    tag: Candidates
    typeScriptTag: candidates
    description: Update Candidate Reference by ID
    parameters:
      - name: name
        schema: object
        description: ''
      - name: contact_info
        schema: object
        description: ''
      - name: company
        schema: string
        description: ''
      - name: job_title
        schema: string
        description: ''
      - name: relationship
        schema: string
        description: ''
      - name: recommendation
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: The update reference schema model.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/work-experience
    method: getWorkExperiencesByCandidateId
    httpMethod: get
    tag: Candidates
    typeScriptTag: candidates
    description: Retrieve Work Experiences by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array of work experiences.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/work-experience
    method: addWorkExperience
    httpMethod: post
    tag: Candidates
    typeScriptTag: candidates
    description: Add Work Experience by Candidate ID
    parameters:
      - name: description
        schema: string
        required: false
        description: ''
      - name: job_title
        schema: string
        required: true
        description: ''
        example: JOB_TITLE
      - name: company
        schema: string
        required: true
        description: ''
        example: COMPANY
      - name: from
        schema: object
        required: false
        description: ''
      - name: to
        schema: object
        required: false
        description: ''
      - name: location
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: The add work experience schema.
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateid}/assessments/{assessmentid}
    method: getAssessmentById
    httpMethod: get
    tag: Prehire Assessments and WOTC Surveys
    typeScriptTag: prehireAssessmentsAndWotcSurveys
    description: Retrieve Assessment by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateid}/assessments/{assessmentid}
    method: updateCandidateAssessmentById
    httpMethod: put
    tag: Prehire Assessments and WOTC Surveys
    typeScriptTag: prehireAssessmentsAndWotcSurveys
    description: Update Assessment by ID
    parameters:
      - name: application
        schema: object
        required: false
        description: ''
      - name: assessment_integration
        schema: object
        required: false
        description: ''
      - name: assessment_results
        schema: object
        required: false
        description: ''
      - name: assessment_url
        schema: string
        required: false
        description: ''
        example: https://google.com
      - name: failure_status_description
        schema: string
        required: false
        description: ''
        example: null
      - name: status
        schema: string
        required: true
        description: ''
        example: InProgress
      - name: status_changed_date
        schema: string
        required: false
        description: ''
        example: '2020-01-30T12:57:24.145Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/candidates/{candidateId}/assessments
    method: getByCandidateId
    httpMethod: get
    tag: Prehire Assessments and WOTC Surveys
    typeScriptTag: prehireAssessmentsAndWotcSurveys
    description: Retrieve Assessments by Candidate ID
    parameters: []
    responses:
      - statusCode: '200'
        description: An array of assessments.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates/{candidateId}/assessments
    method: createAssessmentById
    httpMethod: post
    tag: Prehire Assessments and WOTC Surveys
    typeScriptTag: prehireAssessmentsAndWotcSurveys
    description: Create Assessment by ID
    parameters:
      - name: application
        schema: object
        required: false
        description: ''
      - name: assessment_integration
        schema: object
        required: false
        description: ''
      - name: assessment_packages
        schema: array
        required: false
        description: ''
        example:
          - id: f8313c74-0ee0-486a-b1f1-f48e593bd852X
            package_code: BASIC
      - name: assessment_results
        schema: string
        required: false
        description: ''
        example: null
      - name: assessment_url
        schema: string
        required: false
        description: ''
        example: https://google.com/assessment
      - name: failure_status_description
        schema: string
        required: false
        description: ''
        example: null
      - name: requested_date
        schema: string
        required: false
        description: ''
        example: '2023-02-13T22:13:02.866Z'
      - name: status
        schema: string
        required: true
        description: ''
        example: InProgress
      - name: status_changed_date
        schema: string
        required: false
        description: ''
        example: '2023-02-13T22:13:02.866Z'
    responses:
      - statusCode: '200'
        description: Success
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found.
      - statusCode: '500'
        description: Internal Server Error.
  - url: /{tenantalias}/api/background-check-order-requests
    method: getOrderRequest
    httpMethod: get
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Retrieve Background Check Order Request
    parameters:
      - name: token
        schema: string
        required: true
        description: >-
          A temporary Background Check Request token associated with the
          background check request that has been previously provided by UKG Pro
          Recruiting in the Background Check Request Redirect URL.
        example: '{{temporaryRECToken}}'
    responses:
      - statusCode: '200'
        description: The background check schema.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/candidates/{candidateId}/background-checks
    method: listMultipleBackgroundChecks
    httpMethod: get
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Retrieve Multiple Background Checks
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/candidates/{candidateId}/background-checks
    method: createOrderRequest
    httpMethod: post
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Create Background Check
    parameters:
      - name: author
        schema: object
        required: false
        description: ''
      - name: background_check_integration
        schema: object
        required: false
        description: ''
      - name: application
        schema: object
        required: true
        description: ''
      - name: order_number
        schema: string
        required: true
        description: ''
        example: ORDER_NUMBER
      - name: status
        schema: string
        required: true
        description: ''
        example: STATUS
      - name: packages
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/candidates/{candidateId}/background-checks/{backgroundCheckId}
    method: getById
    httpMethod: get
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Retrieve Background Check By ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/candidates/{candidateId}/background-checks/{backgroundCheckId}
    method: updateBackgroundCheck
    httpMethod: put
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Update Background Check
    parameters:
      - name: author
        schema: object
        required: true
        description: ''
      - name: background_check_integration
        schema: object
        required: false
        description: ''
      - name: application
        schema: object
        required: true
        description: ''
      - name: order_number
        schema: string
        required: true
        description: ''
        example: ORDER_NUMBER
      - name: status
        schema: string
        required: true
        description: ''
        example: STATUS
      - name: packages
        schema: array
        required: true
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/background-check-results-requests
    method: getRequest
    httpMethod: get
    tag: Background Checks
    typeScriptTag: backgroundChecks
    description: Retrieve Background Check Results Request
    parameters:
      - name: token
        schema: string
        required: true
        description: >-
          A temporary Background Check Request token associated with the
          background check request that has been previously provided by UKG Pro
          Recruiting in the Background Check Request Redirect URL
        example: '{{temporaryRECToken}}'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/opportunities
    method: getAll
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve Opportunities
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
      - name: updatedAfter
        schema: string
        description: >-
          The date and time on or after which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: updatedBefore
        schema: string
        description: >-
          The date and time on or before which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities
    method: createOpportunity
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Create Opportunity
    parameters:
      - name: title
        schema: object
        description: ''
      - name: description
        schema: object
        description: ''
      - name: internal_title
        schema: object
        description: ''
      - name: travel
        schema: object
        description: ''
      - name: default_locale
        schema: object
        description: ''
      - name: compensation
        schema: object
        description: ''
      - name: job
        schema: object
        description: ''
      - name: job_family
        schema: object
        description: ''
      - name: locations
        schema: array
        description: ''
      - name: company
        schema: object
        description: ''
      - name: recruiter
        schema: object
        description: ''
      - name: approver
        schema: object
        description: ''
      - name: hiring_manager
        schema: object
        description: ''
      - name: onboarding_owner
        schema: object
        description: ''
      - name: supervisor
        schema: object
        description: ''
      - name: employee_type
        schema: object
        description: ''
      - name: recruiting_process
        schema: object
        description: ''
      - name: job_boards
        schema: array
        description: ''
      - name: work_experience_criteria
        schema: array
        description: ''
      - name: education_criteria
        schema: array
        description: ''
      - name: skill_criteria
        schema: array
        description: ''
      - name: license_and_certification_criteria
        schema: array
        description: ''
      - name: behavior_criteria
        schema: array
        description: ''
      - name: motivation_criteria
        schema: array
        description: ''
      - name: is_featured
        schema: boolean
        description: ''
      - name: is_shared_with_everyone
        schema: boolean
        description: ''
      - name: internal_notes
        schema: object
        description: ''
      - name: is_continuous_opening
        schema: boolean
        description: ''
      - name: full_time_equivalent
        schema: object
        description: ''
      - name: head_count
        schema: object
        description: ''
      - name: hours_per_week
        schema: integer
        description: ''
      - name: hours_per_shift
        schema: integer
        description: ''
      - name: staffing_plan_impact
        schema: string
        description: ''
      - name: target_start_date
        schema: string
        description: ''
      - name: incumbent
        schema: object
        description: ''
      - name: priority
        schema: string
        description: ''
      - name: is_budgeted
        schema: string
        description: ''
      - name: opening_reason
        schema: string
        description: ''
      - name: justification_comments
        schema: array
        description: ''
      - name: org_unit_groups
        schema: array
        description: ''
      - name: request_candidate_availability
        schema: boolean
        description: ''
      - name: created_at
        schema: string
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/opportunities/{opportunityId}
    method: getById
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve Opportunity by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/opportunities/{opportunityId}/country-questions
    method: getCountryQuestions
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve Opportunity Country Questions
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: >-
      /{tenantalias}/api/opportunities/{opportunityId}/assessments/{opportunityAssessmentId}
    method: deleteOpportunityAssessmentById
    httpMethod: delete
    tag: Opportunities
    typeScriptTag: opportunities
    description: Delete Opportunity Assessment by ID
    parameters: []
    responses:
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/opportunities/{opportunityId}/assessments/{opportunityAssessmentId}
    method: getAssessmentById
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve Opportunity Assessment by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/opportunities/{opportunityId}/assessments/{opportunityAssessmentId}
    method: updateOpportunityAssessmentById
    httpMethod: put
    tag: Opportunities
    typeScriptTag: opportunities
    description: Update Opportunity Assessment by ID
    parameters:
      - name: id
        schema: string
        description: ''
        example: 9004d2ff-ab99-4bfe-b98f-16e35948bca0
      - name: ordinal
        schema: number
        description: ''
        example: 0
      - name: packages
        schema: array
        description: ''
        example:
          - id: 307ce123-7033-4699-94cb-bfc2032f3856X
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities/{opportunityId}/assessments
    method: getAllAssessments
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve All Opportunity Assessments
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities/{opportunityId}/assessments
    method: createAssessment
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Create Opportunity Assessment
    parameters:
      - name: integration_id
        schema: string
        description: ''
        example: 9004d2ff-ab99-4bfe-b98f-16e35948bca0
      - name: packages
        schema: array
        description: ''
        example:
          - id: f8313c74-0ee0-486a-b1f1-f48e593bd852X
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/opportunities/{opportunityId}/publish
    method: publishById
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Publish Opportunity by ID
    parameters:
      - name: published_date
        schema: string
        description: ''
        example: '2023-10-20T19:35:12Z'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '201'
        description: Created
      - statusCode: '400'
        description: Bad Request
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities/{opportunityId}/close
    method: closeById
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Close Opportunity by ID
    parameters:
      - name: closed_date
        schema: string
        description: ''
        example: '2023-10-20T19:38:09Z'
      - name: closed_by
        schema: string
        description: ''
        example: 192513f8-3f23-462d-835e-0df4d7683db2
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities/{opportunityId}/refresh
    method: refreshById
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Refresh Opportunity by ID
    parameters:
      - name: external
        schema: boolean
        description: ''
        example: true
      - name: internal
        schema: boolean
        description: ''
        example: false
      - name: job_board_id
        schema: string
        description: ''
        example: b34ec0b6-73d5-53d3-9209-652268fcce32
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '201'
        description: Created
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/opportunities/{opportunityId}/screening-questions
    method: getScreeningQuestions
    httpMethod: get
    tag: Opportunities
    typeScriptTag: opportunities
    description: Retrieve Opportunity Screening Questions
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/opportunities/{opportunityId}/screening-questions
    method: createScreeningQuestion
    httpMethod: post
    tag: Opportunities
    typeScriptTag: opportunities
    description: Create Opportunity Screening Question
    parameters:
      - name: tenantalias
        schema: string
        required: true
        description: ''
        example: TENANTALIAS
      - name: opportunityId
        schema: string
        required: true
        description: ''
        example: OPPORTUNITYID
      - name: library_question
        schema: string
        description: ''
        example: null
      - name: type
        schema: string
        description: ''
        example: MultipleChoice
      - name: question
        schema: object
        description: ''
      - name: score
        schema: number
        description: ''
        example: 0
      - name: choices
        schema: array
        description: ''
        example:
          - is_correct: true
            is_disqualifying: false
            value:
              en_us: 'Yes'
          - is_correct: false
            is_disqualifying: false
            value:
              en_us: 'No'
      - name: range
        schema: object
        description: ''
      - name: is_disqualifying
        schema: boolean
        description: ''
        example: false
      - name: ordinal
        schema: number
        description: ''
        example: 1
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/opportunities/{opportunityId}/screening-questions/{screeningQuestionId}
    method: deactivateScreeningQuestions
    httpMethod: patch
    tag: Opportunities
    typeScriptTag: opportunities
    description: Deactivate Opportunity Screening Questions
    parameters:
      - name: is_active
        schema: boolean
        description: ''
        example: false
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /{tenantalias}/api/opportunities/{opportunityId}/screening-questions/{screeningQuestionId}
    method: updateScreeningQuestionById
    httpMethod: put
    tag: Opportunities
    typeScriptTag: opportunities
    description: Update Opportunity Screening Question by ID
    parameters:
      - name: library_question
        schema: string
        description: ''
        example: null
      - name: type
        schema: string
        description: ''
        example: MultipleChoice
      - name: question
        schema: object
        description: ''
      - name: score
        schema: number
        description: ''
        example: 0
      - name: choices
        schema: array
        description: ''
        example:
          - is_correct: true
            is_disqualifying: false
            value:
              en_us: 'Yes'
          - is_correct: false
            is_disqualifying: false
            value:
              en_us: 'No'
      - name: range
        schema: object
        description: ''
      - name: is_disqualifying
        schema: boolean
        description: ''
        example: false
      - name: ordinal
        schema: number
        description: ''
        example: 1
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/offers
    method: getAllAvailable
    httpMethod: get
    tag: Offers
    typeScriptTag: offers
    description: Retrieve Offers
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
    responses:
      - statusCode: '200'
        description: An array of offers.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/offers
    method: createOffer
    httpMethod: post
    tag: Offers
    typeScriptTag: offers
    description: Create Offer
    parameters:
      - name: application
        schema: object
        description: ''
      - name: approvers
        schema: array
        description: ''
        example:
          - id: 00000000-0000-0000-0000-000000000000X
      - name: body
        schema: object
        description: ''
      - name: brand
        schema: object
        description: ''
      - name: created_at
        schema: string
        description: ''
        example: '2024-07-06T20:47:18.451Z'
      - name: creator
        schema: object
        description: ''
      - name: hiring_manager
        schema: object
        description: ''
      - name: recruiter
        schema: object
        description: ''
      - name: template
        schema: object
        description: ''
      - name: approval_process_type
        schema: string
        description: ''
        example: parallel
    responses:
      - statusCode: '201'
        description: The Create Offer response model.
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/offers/{offerId}/offer-actions
    method: getOfferActionsByOfferId
    httpMethod: get
    tag: Offers
    typeScriptTag: offers
    description: Retrieve Offer Actions by Offer ID
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: An array of offer actions.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/offers/{offerId}/submit-for-approval
    method: submitForApprovalById
    httpMethod: post
    tag: Offers
    typeScriptTag: offers
    description: Submit Offer for Approval by ID
    parameters:
      - name: author
        schema: object
        description: ''
    responses:
      - statusCode: '200'
        description: The Create Offer response model.
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/applicant-sources
    method: getApplicantSources
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Applicant Sources
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/applicant-sources
    method: createApplicantSource
    httpMethod: post
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Create Applicant Source
    parameters:
      - name: name
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/applicant-sources/{applicantSourceId}
    method: getApplicantSourceById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Applicant Source by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/behaviors
    method: getAllBehaviorsUkgPro
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Behaviors
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/behaviors
    method: createBehavior
    httpMethod: post
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Create Behavior
    parameters:
      - name: description
        schema: object
        description: ''
      - name: is_archived
        schema: boolean
        description: ''
        example: false
      - name: links
        schema: array
        description: ''
        example:
          - href: >-
              http://localhost/mordor/api/behaviors/5901904b-bc84-3648-7db8-8cd46d71a6ca
            rel: self
      - name: name
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/behaviors/{behaviorId}
    method: getBehaviorById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Behavior by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/behaviors/{behaviorId}
    method: archiveBehaviorById
    httpMethod: patch
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Archive or Unarchive Behavior by ID
    parameters:
      - name: is_Archived
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/disposition-reasons
    method: getDispositionReasons
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Disposition Reasons
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/disposition-reasons
    method: createDispositionReason
    httpMethod: post
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Create Disposition Reason
    parameters:
      - name: name
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/disposition-reasons/{dispositionReasonId}
    method: getDispositionReasonById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Disposition Reason by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/fields-of-study
    method: getAllFieldsOfStudy
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Fields of Study
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/fields-of-study/{fieldOfStudyID}
    method: getFieldOfStudyById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Field of Study by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/job-boards
    method: getJobBoardsUkgPro
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Job Boards
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/job-boards/{jobBoardID}
    method: getJobBoardById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Job Board by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/legal-entities
    method: getLegalEntities
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Legal Entities
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/legal-entities/{legalEntityId}
    method: getLegalEntityById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Legal Entity by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/motivations
    method: getMotivationsUkgPro
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Motivations
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/motivations
    method: createMotivationUkgProRecruiting
    httpMethod: post
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Create Motivation
    parameters:
      - name: description
        schema: object
        description: ''
      - name: name
        schema: object
        description: ''
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/motivations/{motivationId}
    method: getMotivationById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Motivation by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/motivations/{motivationId}
    method: archiveMotivationById
    httpMethod: patch
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Archive or Unarchive Motivation by ID
    parameters:
      - name: is_archived
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/physical-locations
    method: getPhysicalLocations
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Physical Locations
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
      - name: updatedAfter
        schema: string
        required: false
        description: >-
          The date and time on or after which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: updatedBefore
        schema: string
        required: false
        description: >-
          The date and time on or before which the operation returns
          applications. Pass a UTC value in order to get accurate results as
          Recruiting datetime values are in UTC. For example:
          2016-12-21T18:44:03.356Z. No quoted values. The system ignores this
          parameter if the value is not a properly formatted DateTime.
          Milliseconds are applied to the filter.
        example: '2023-12-31T12:00:00Z'
      - name: tenantalias
        schema: string
        required: true
        description: >-
          The customer tenant. May be seen in browser bar when signed into UKG
          Pro Recruiting or UKG Pro Onboarding.
        example: TENANTALIAS
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/physical-locations
    method: createPhysicalLocationRecord
    httpMethod: post
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Create Physical Location
    parameters:
      - name: address
        schema: object
        description: ''
      - name: coordinates
        schema: object
        description: ''
      - name: location_id
        schema: object
        description: ''
      - name: name
        schema: object
        description: ''
      - name: shapes
        schema: array
        description: ''
        example:
          - coordinates_list:
              - latitude: 50
                longitude: 100
              - latitude: 70
                longitude: 120
              - latitude: 10
                longitude: -40
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/physical-locations/{physicalLocationId}
    method: getPhysicalLocationById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Physical Location by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/physical-locations/{physicalLocationId}
    method: archivePhysicalLocationById
    httpMethod: patch
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Archive or Unarchive Physical Location by ID
    parameters:
      - name: is_archived
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad Request
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/prefixes
    method: getAllPrefixes
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Prefixes
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/prefixes/{prefixID}
    method: getById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Prefix by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/proficiency-levels
    method: getProficiencyLevels
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Proficiency Levels
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/proficiency-levels/{proficiencyLevelId}
    method: getProficiencyLevelById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Proficiency Level by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/recruiting-processes
    method: getRecruitingProcesses
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Recruiting Processes
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
  - url: /{tenantalias}/api/recruiting-processes/{recruitingProcessID}
    method: getRecruitingProcessById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Recruiting Process By ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/suffixes
    method: getAllSuffixes
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Suffixes
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/suffixes/{suffixID}
    method: nameSuffixgetById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Suffix By ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/locations
    method: getAllTaxLocations
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve All Tax Locations
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
      - name: type
        schema: string
        description: >-
          The type of tax location to return. Results are currently filterable
          by Tax or Physical.
        example: Tax
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/locations/{locationId}
    method: getTaxLocation
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Tax Location by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/org-units
    method: getOrgUnits
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Org Units
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /{tenantalias}/api/org-units/{orgUnitId}
    method: getOrgUnitById
    httpMethod: get
    tag: Configuration and Settings
    typeScriptTag: configurationAndSettings
    description: Retrieve Org Unit by ID
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /api/third-party-job-board-integrations/{integrationId}/postings
    method: getPostingsByIntegrationId
    httpMethod: get
    tag: Third Party Job Sites
    typeScriptTag: thirdPartyJobSites
    description: Retrieve Third Party Job Site Postings by Integration ID
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: An array of job site postings.
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: >-
      /api/third-party-job-board-integrations/{integrationId}/application-disposition-events
    method: getApplicationDispositionEvents
    httpMethod: get
    tag: Third Party Job Sites
    typeScriptTag: thirdPartyJobSites
    description: >-
      Retrieve Application Disposition Events by Third Party Job Site
      Integration ID
    parameters:
      - name: page
        schema: string
        description: The page of records to return.
        example: '1'
      - name: perPage
        schema: string
        description: >-
          The number of resources returned per page. If no pagination parameters
          are specified, the default maximum is applied.
        example: '200'
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden. Ensure valid bearer token is passed with required scope.
      - statusCode: '404'
        description: Not Found
      - statusCode: '500'
        description: Internal Server Error
  - url: /configuration/v1/roles
    method: securityRoles
    httpMethod: get
    tag: RolesGet
    typeScriptTag: rolesGet
    description: Gets Roles from security roles table
    parameters:
      - name: rolName
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/shift-codes
    method: getData
    httpMethod: get
    tag: ShiftCode
    typeScriptTag: shiftCode
    description: Shift Codes API Data
    parameters:
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /configuration/v1/tax-groups
    method: getAllDetails
    httpMethod: get
    tag: Tax Groups
    typeScriptTag: taxGroups
    description: Get all tax group details
    parameters:
      - name: taxCalcGroupIdCode
        schema: string
        required: false
        description: ''
      - name: taxGroupIsInactive
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /talent/recruiting/v2/third-party-job-board-integrations/{integrationId}/postings
    method: details
    httpMethod: get
    tag: Get Job Postings
    typeScriptTag: getJobPostings
    description: Get job postings
    parameters:
      - name: integrationId
        schema: string
        required: true
        description: >
          A unique integration id provided by Ultimate Software to the Partner
          during the integration registration process.
        example: INTEGRATIONID
      - name: page
        schema: number
        required: false
        description: Pagination page number
      - name: perPage
        schema: number
        required: false
        description: Pagination amount of records per page to display
        default: 30
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
      - statusCode: '429'
        description: Too Many Requests (Exceeded Rate Limit)
  - url: /simpleschedule/activities
    method: getAll
    httpMethod: get
    tag: Activities
    typeScriptTag: activities
    description: Obtains all activities.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/assigned_holidays
    method: getAll
    httpMethod: get
    tag: Assigned Holidays
    typeScriptTag: assignedHolidays
    description: Obtains all assigned holidays.
    parameters:
      - name: empName
        schema: string
        required: false
        description: ''
      - name: empId
        schema: integer
        required: false
        description: ''
      - name: from
        schema: string
        required: true
        description: Start range for holidays
        example: FROM
      - name: to
        schema: string
        required: true
        description: End range for holidays
        example: TO
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/employee_jobs
    method: getAll
    httpMethod: get
    tag: Employee Jobs
    typeScriptTag: employeeJobs
    description: Obtains all jobs for an employee.
    parameters:
      - name: empName
        schema: string
        required: false
        description: ''
      - name: empId
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/employees
    method: getAll
    httpMethod: get
    tag: Employees
    typeScriptTag: employees
    description: Obtains all employees.
    parameters:
      - name: index
        schema: integer
        required: false
        description: Index when paging is to be used.
      - name: max
        schema: integer
        required: false
        description: Max elements per page
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/hour_types
    method: obtainAll
    httpMethod: get
    tag: Hour Types
    typeScriptTag: hourTypes
    description: Obtains all hour types.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/schedule_details
    method: publishDetails
    httpMethod: put
    tag: Schedule Details
    typeScriptTag: scheduleDetails
    description: Publish schedule details.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: scheduleDetails
        schema: array
        description: ''
      - name: comment
        schema: string
        description: ''
    responses:
      - statusCode: '207'
        description: ''
      - statusCode: '400'
        description: ''
  - url: /simpleschedule/teams
    method: getAll
    httpMethod: get
    tag: Teams
    typeScriptTag: teams
    description: Obtains all teams.
    parameters:
      - name: index
        schema: integer
        required: false
        description: Index when paging is to be used.
      - name: max
        schema: integer
        required: false
        description: Max elements per page
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/time_codes
    method: getAll
    httpMethod: get
    tag: Time Codes
    typeScriptTag: timeCodes
    description: Obtains all time codes.
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/timeoff_requests
    method: getAll
    httpMethod: get
    tag: Time Off Requests
    typeScriptTag: timeOffRequests
    description: Obtains all time off requests.
    parameters:
      - name: empName
        schema: string
        required: false
        description: ''
      - name: empId
        schema: integer
        required: false
        description: ''
      - name: from
        schema: string
        required: true
        description: Start range for requests
        example: FROM
      - name: to
        schema: string
        required: true
        description: End range for requests
        example: TO
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /simpleschedule/{coid}/employees/{eeid}
    method: getByCoIdAndEeId
    httpMethod: get
    tag: UTA Employee
    typeScriptTag: utaEmployee
    description: Obtains a UTA Employee by coId and eeId.
    parameters:
      - name: coid
        schema: string
        required: true
        description: coid of employee.
        example: COID
      - name: eeid
        schema: string
        required: true
        description: eeid of employee.
        example: EEID
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
  - url: /time/clock_transactions
    method: getProcessedTransactions
    httpMethod: get
    tag: Time
    typeScriptTag: time
    description: Get processed clock transactions.
    parameters:
      - name: empName
        schema: string
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: empId
        schema: integer
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: date
        schema: string
        required: true
        description: Date of clock transaction
        example: DATE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '429'
        description: Too many requests
  - url: /time/pending_clock_transactions
    method: getPendingTransactions
    httpMethod: get
    tag: Time
    typeScriptTag: time
    description: Get pending clock transactions.
    parameters:
      - name: empName
        schema: string
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: empId
        schema: integer
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '429'
        description: Too many requests
  - url: /time/work_summaries
    method: getWorkSummaries
    httpMethod: get
    tag: Time
    typeScriptTag: time
    description: Obtain work summaries.
    parameters:
      - name: empName
        schema: string
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: empId
        schema: integer
        required: false
        description: >-
          Employee can be specified by their emp_name or emp_id.  At least one
          parameter must be specified.
      - name: from
        schema: string
        required: true
        description: Start range for work summaries
        example: FROM
      - name: to
        schema: string
        required: true
        description: End range for work summaries
        example: TO
      - name: full
        schema: boolean
        required: false
        description: Specifies if both clock and work detail data should be loaded
        default: false
      - name: authStatus
        schema: boolean
        required: false
        description: >-
          If specified will load only work summaries with Authorized status
          equal to true or false
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '429'
        description: Too many requests
  - url: /time/work_summary
    method: getWorkSummaryById
    httpMethod: get
    tag: Time
    typeScriptTag: time
    description: Obtain a work summary.
    parameters:
      - name: workSummaryId
        schema: integer
        required: true
        description: Work Summary id
        example: 0
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '429'
        description: Too many requests
  - url: /allergy/{code}
    method: updateSingleConfiguration
    httpMethod: put
    tag: Allergy
    typeScriptTag: allergy
    description: Update a single allergy configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /awardType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: AwardType
    typeScriptTag: awardType
    description: Update a single awardType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /careerProvider/{code}
    method: updateConfiguration
    httpMethod: put
    tag: Career Provider
    typeScriptTag: careerProvider
    description: Update a single careerProvider configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /childSupportType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: ChildSupportType
    typeScriptTag: childSupportType
    description: Update a single childSupportType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /cobraStatus/{code}
    method: updateSingleConfiguration
    httpMethod: put
    tag: CobraStatus
    typeScriptTag: cobraStatus
    description: Update a single cobraStatus configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /companyProperty/{code}
    method: updateConfiguration
    httpMethod: put
    tag: CompanyProperty
    typeScriptTag: companyProperty
    description: Update a single companyProperty configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseCategory/{code}
    method: updateConfiguration
    httpMethod: put
    tag: CourseCategory
    typeScriptTag: courseCategory
    description: Update a single courseCategory configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseDeliveryMet/{code}
    method: updateConfiguration
    httpMethod: put
    tag: CourseDeliveryMet
    typeScriptTag: courseDeliveryMet
    description: Update a single courseDeliveryMet configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseSubCategory/{code}
    method: updateConfiguration
    httpMethod: put
    tag: CourseSubCategory
    typeScriptTag: courseSubCategory
    description: Update a single courseSubCategory configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /disability/{code}
    method: updateConfiguration
    httpMethod: put
    tag: Disability
    typeScriptTag: disability
    description: Update a single disability configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /employeeType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: EmployeeType
    typeScriptTag: employeeType
    description: Update a single employeeType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /jobFamily/{code}
    method: updateConfiguration
    httpMethod: put
    tag: JobFamily
    typeScriptTag: jobFamily
    description: Update a single jobFamily configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /licenseType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: LicenseType
    typeScriptTag: licenseType
    description: Update a single licenseType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /loanType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: LoanType
    typeScriptTag: loanType
    description: Update a single loanType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /maritalStatus/{code}
    method: updateConfiguration
    httpMethod: put
    tag: MaritalStatus
    typeScriptTag: maritalStatus
    description: Update a single maritalStatus configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryBranches/{code}
    method: updateConfiguration
    httpMethod: put
    tag: MilitaryBranches
    typeScriptTag: militaryBranches
    description: Update a single militaryBranches configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryEra/{code}
    method: updateConfiguration
    httpMethod: put
    tag: MilitaryEra
    typeScriptTag: militaryEra
    description: Update a single militaryEra configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /namePrefix/{code}
    method: updateConfiguration
    httpMethod: put
    tag: NamePrefix
    typeScriptTag: namePrefix
    description: Update a single namePrefix configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /otherPhoneTypes/{code}
    method: updateConfiguration
    httpMethod: put
    tag: OtherPhoneTypes
    typeScriptTag: otherPhoneTypes
    description: Update a single otherPhoneTypes configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /project/{code}
    method: updateConfiguration
    httpMethod: put
    tag: Project
    typeScriptTag: project
    description: Update a single project configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /school/{code}
    method: updateConfiguration
    httpMethod: put
    tag: School
    typeScriptTag: school
    description: Update a single school configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skillProficiencyLevel/{code}
    method: updateConfiguration
    httpMethod: put
    tag: SkillProficiencyLevel
    typeScriptTag: skillProficiencyLevel
    description: Update a single skillProficiencyLevel configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skills/{code}
    method: updateConfiguration
    httpMethod: put
    tag: Skills
    typeScriptTag: skills
    description: Update a single skills configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /termType/{code}
    method: updateConfiguration
    httpMethod: put
    tag: TermType
    typeScriptTag: termType
    description: Update a single termType configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /waiveReason/{code}
    method: updateSingleConfiguration
    httpMethod: put
    tag: WaiveReason
    typeScriptTag: waiveReason
    description: Update a single waiveReason configuration
    parameters:
      - name: code
        schema: string
        required: true
        description: Project code.
        example: CODE
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: OK
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /personnel/v1/user-defined-fields
    method: get
    httpMethod: get
    tag: UserDefinedFields
    typeScriptTag: userDefinedFields
    description: Get User Defined Fields
    parameters:
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/companies/{companyId}/user-defined-fields
    method: getSingleCompany
    httpMethod: get
    tag: UserDefinedFields
    typeScriptTag: userDefinedFields
    description: Get User Defined Fields for single company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: >-
      /personnel/v1/companies/{companyId}/employees/{employeeId}/user-defined-fields
    method: getSingleEmployee
    httpMethod: get
    tag: UserDefinedFields
    typeScriptTag: userDefinedFields
    description: Get User Defined Fields for a single employee in a single company
    parameters:
      - name: companyId
        schema: string
        required: true
        description: ''
        example: COMPANYID
      - name: employeeId
        schema: string
        required: true
        description: ''
        example: EMPLOYEEID
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/user-details
    method: getUserDetails
    httpMethod: get
    tag: UserDetails
    typeScriptTag: userDetails
    description: Get User Details
    parameters:
      - name: userName
        schema: string
        required: false
        description: ''
      - name: userStatus
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/user-preferences
    method: getUserPreferencesDetails
    httpMethod: get
    tag: User Preferences
    typeScriptTag: userPreferences
    description: Get User Preferences Details
    parameters:
      - name: userId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /personnel/v1/user-profile-details
    method: getAllDetails
    httpMethod: get
    tag: User Profile Details
    typeScriptTag: userProfileDetails
    description: Get all user profile details
    parameters:
      - name: masterCompany
        schema: string
        required: false
        description: ''
      - name: userStatus
        schema: string
        required: false
        description: ''
      - name: userId
        schema: string
        required: false
        description: ''
      - name: roleId
        schema: string
        required: false
        description: ''
      - name: companyId
        schema: string
        required: false
        description: ''
      - name: employeeId
        schema: string
        required: false
        description: ''
      - name: page
        schema: integer
        required: false
        description: ''
      - name: perPage
        schema: integer
        required: false
        description: ''
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /jobs
    method: getAllConfigurations
    httpMethod: get
    tag: Jobs
    typeScriptTag: jobs
    description: Retrieve all jobs configurations
    parameters:
      - name: countryCode
        schema: string
        required: false
        description: Job country code.
      - name: isActive
        schema: boolean
        required: false
        description: Active status.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
  - url: /locations
    method: getConfigurations
    httpMethod: get
    tag: Locations
    typeScriptTag: locations
    description: Retrieve all locations configurations
    parameters:
      - name: countryCode
        schema: string
        required: false
        description: location country code.
      - name: isActive
        schema: boolean
        required: false
        description: Active status.
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
  - url: /allergy
    method: configurationsGet
    httpMethod: get
    tag: Allergy
    typeScriptTag: allergy
    description: Retrieve all allergy configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /allergy
    method: createConfiguration
    httpMethod: post
    tag: Allergy
    typeScriptTag: allergy
    description: Create a new allergy configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The allergy provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /awardType
    method: getAllConfigurations
    httpMethod: get
    tag: AwardType
    typeScriptTag: awardType
    description: Retrieve all awardType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /awardType
    method: createConfiguration
    httpMethod: post
    tag: AwardType
    typeScriptTag: awardType
    description: Create a new awardType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The awardType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /careerProvider
    method: getConfigurations
    httpMethod: get
    tag: Career Provider
    typeScriptTag: careerProvider
    description: Retrieve all careerProvider configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /careerProvider
    method: createConfigurationUkgPro
    httpMethod: post
    tag: Career Provider
    typeScriptTag: careerProvider
    description: Create a new careerProvider configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The careerProvider provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /childSupportType
    method: getConfigurations
    httpMethod: get
    tag: ChildSupportType
    typeScriptTag: childSupportType
    description: Retrieve all childSupportType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /childSupportType
    method: createConfigurationUkgPro
    httpMethod: post
    tag: ChildSupportType
    typeScriptTag: childSupportType
    description: Create a new childSupportType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The childSupportType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /cobraStatus
    method: getConfigurations
    httpMethod: get
    tag: CobraStatus
    typeScriptTag: cobraStatus
    description: Retrieve all cobraStatus configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /cobraStatus
    method: createConfiguration
    httpMethod: post
    tag: CobraStatus
    typeScriptTag: cobraStatus
    description: Create a new cobraStatus configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The cobraStatus provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /companyProperty
    method: getConfigurations
    httpMethod: get
    tag: CompanyProperty
    typeScriptTag: companyProperty
    description: Retrieve all companyProperty configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /companyProperty
    method: createConfigurationUkgPro
    httpMethod: post
    tag: CompanyProperty
    typeScriptTag: companyProperty
    description: Create a new companyProperty configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The companyProperty provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseCategory
    method: getAllConfigurations
    httpMethod: get
    tag: CourseCategory
    typeScriptTag: courseCategory
    description: Retrieve all courseCategory configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseCategory
    method: createConfigurationUkgPro
    httpMethod: post
    tag: CourseCategory
    typeScriptTag: courseCategory
    description: Create a new courseCategory configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The courseCategory provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseDeliveryMet
    method: getConfigurations
    httpMethod: get
    tag: CourseDeliveryMet
    typeScriptTag: courseDeliveryMet
    description: Retrieve all courseDeliveryMet configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseDeliveryMet
    method: createConfigurationUkgPro
    httpMethod: post
    tag: CourseDeliveryMet
    typeScriptTag: courseDeliveryMet
    description: Create a new courseDeliveryMet configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The courseDeliveryMet provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseSubCategory
    method: getConfigurations
    httpMethod: get
    tag: CourseSubCategory
    typeScriptTag: courseSubCategory
    description: Retrieve all courseSubCategory configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /courseSubCategory
    method: createConfigurationUkgPro
    httpMethod: post
    tag: CourseSubCategory
    typeScriptTag: courseSubCategory
    description: Create a new courseSubCategory configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The courseSubCategory provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /disability
    method: getConfigurations
    httpMethod: get
    tag: Disability
    typeScriptTag: disability
    description: Retrieve all disability configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /disability
    method: createConfigurationUkgPro
    httpMethod: post
    tag: Disability
    typeScriptTag: disability
    description: Create a new disability configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The disability provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /employeeType
    method: getConfigurations
    httpMethod: get
    tag: EmployeeType
    typeScriptTag: employeeType
    description: Retrieve all employeeType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /employeeType
    method: createConfigurationUkgPro
    httpMethod: post
    tag: EmployeeType
    typeScriptTag: employeeType
    description: Create a new employeeType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The employeeType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /jobFamily
    method: getAllConfigurations
    httpMethod: get
    tag: JobFamily
    typeScriptTag: jobFamily
    description: Retrieve all jobFamily configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /jobFamily
    method: createConfiguration
    httpMethod: post
    tag: JobFamily
    typeScriptTag: jobFamily
    description: Create a new jobFamily configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The jobFamily provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /licenseType
    method: getConfigurations
    httpMethod: get
    tag: LicenseType
    typeScriptTag: licenseType
    description: Retrieve all licenseType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /licenseType
    method: createConfiguration
    httpMethod: post
    tag: LicenseType
    typeScriptTag: licenseType
    description: Create a new licenseType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The licenseType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /loanType
    method: getConfigurations
    httpMethod: get
    tag: LoanType
    typeScriptTag: loanType
    description: Retrieve all loanType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /loanType
    method: createConfiguration
    httpMethod: post
    tag: LoanType
    typeScriptTag: loanType
    description: Create a new loanType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The loanType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /maritalStatus
    method: getConfigurations
    httpMethod: get
    tag: MaritalStatus
    typeScriptTag: maritalStatus
    description: Retrieve all maritalStatus configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /maritalStatus
    method: createConfigurationUkgPro
    httpMethod: post
    tag: MaritalStatus
    typeScriptTag: maritalStatus
    description: Create a new maritalStatus configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The maritalStatus provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryBranches
    method: getAllConfigurations
    httpMethod: get
    tag: MilitaryBranches
    typeScriptTag: militaryBranches
    description: Retrieve all militaryBranches configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryBranches
    method: configureUkgPro
    httpMethod: post
    tag: MilitaryBranches
    typeScriptTag: militaryBranches
    description: Create a new militaryBranches configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The militaryBranches provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryEra
    method: getConfigurations
    httpMethod: get
    tag: MilitaryEra
    typeScriptTag: militaryEra
    description: Retrieve all militaryEra configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /militaryEra
    method: createConfigurationUkgPro
    httpMethod: post
    tag: MilitaryEra
    typeScriptTag: militaryEra
    description: Create a new militaryEra configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The militaryEra provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /namePrefix
    method: getConfigurations
    httpMethod: get
    tag: NamePrefix
    typeScriptTag: namePrefix
    description: Retrieve all namePrefix configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /namePrefix
    method: configureNamePrefix
    httpMethod: post
    tag: NamePrefix
    typeScriptTag: namePrefix
    description: Create a new namePrefix configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The namePrefix provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /otherPhoneTypes
    method: getConfigurations
    httpMethod: get
    tag: OtherPhoneTypes
    typeScriptTag: otherPhoneTypes
    description: Retrieve all otherPhoneTypes configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /otherPhoneTypes
    method: createConfigurationUkgPro
    httpMethod: post
    tag: OtherPhoneTypes
    typeScriptTag: otherPhoneTypes
    description: Create a new otherPhoneTypes configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The otherPhoneTypes provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /project
    method: getAllConfigurations
    httpMethod: get
    tag: Project
    typeScriptTag: project
    description: Retrieve all Project configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /project
    method: createConfiguration
    httpMethod: post
    tag: Project
    typeScriptTag: project
    description: Create a new project configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The project provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /school
    method: getConfigurations
    httpMethod: get
    tag: School
    typeScriptTag: school
    description: Retrieve all school configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /school
    method: createConfiguration
    httpMethod: post
    tag: School
    typeScriptTag: school
    description: Create a new school configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The school provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skillProficiencyLevel
    method: getAllConfigurations
    httpMethod: get
    tag: SkillProficiencyLevel
    typeScriptTag: skillProficiencyLevel
    description: Retrieve all skillProficiencyLevel configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skillProficiencyLevel
    method: createConfigurationUkgPro
    httpMethod: post
    tag: SkillProficiencyLevel
    typeScriptTag: skillProficiencyLevel
    description: Create a new skillProficiencyLevel configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The skillProficiencyLevel provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skills
    method: getConfigurations
    httpMethod: get
    tag: Skills
    typeScriptTag: skills
    description: Retrieve all skills configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /skills
    method: createConfiguration
    httpMethod: post
    tag: Skills
    typeScriptTag: skills
    description: Create a new skills configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The skills provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /termType
    method: getConfigurations
    httpMethod: get
    tag: TermType
    typeScriptTag: termType
    description: Retrieve all termType configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /termType
    method: createConfiguration
    httpMethod: post
    tag: TermType
    typeScriptTag: termType
    description: Create a new termType configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The termType provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /waiveReason
    method: getConfigurations
    httpMethod: get
    tag: WaiveReason
    typeScriptTag: waiveReason
    description: Retrieve all waiveReason configurations
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
  - url: /waiveReason
    method: createConfigurationUkgPro
    httpMethod: post
    tag: WaiveReason
    typeScriptTag: waiveReason
    description: Create a new waiveReason configuration
    parameters:
      - name: usCustomerApiKey
        schema: string
        required: true
        description: >-
          The Pro Customer API key which is unique to each Pro HR Tenant and can
          be found by navigating to System Configuration > Security > Web
          Services and refering to the value for `Customer API Key`.
        example: US-CUSTOMER-API-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: code
        schema: string
        required: true
        description: ''
        example: CODE
    responses:
      - statusCode: '200'
        description: The waiveReason provided has been created.
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: Unauthorized
numberOfSchemas: 612
apiDescription: >-
  Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1
  deployment
