hash: 988581a6d2aa0fc93b7da52eb031d5db0fea963668afd50c96272761b57a7335
methodObjects:
  - url: /v1/embeddings
    method: createRepresentation
    httpMethod: post
    tag: embeddings
    typeScriptTag: embeddings
    description: Create Embedding
    parameters: []
    responses:
      - statusCode: '200'
        description: Output of the embedding service
      - statusCode: '422'
        description: ''
  - url: /v1/bulk-embeddings
    method: uploadFileAndGetEmbeddings
    httpMethod: post
    tag: bulk-embeddings
    typeScriptTag: bulkEmbeddings
    description: Start Bulk Embedding
    parameters:
      - name: file
        schema: string
        required: true
        description: ''
        example: FILE
      - name: email
        schema: string
        required: false
        description: ''
      - name: model
        schema: string
        required: true
        description: ''
        example: MODEL
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /v1/bulk-embeddings/{job_id}
    method: getJob
    httpMethod: get
    tag: bulk-embeddings
    typeScriptTag: bulkEmbeddings
    description: Retrieve Job
    parameters:
      - name: jobId
        schema: string
        required: true
        description: ''
        example: JOB_ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /v1/bulk-embeddings/{job_id}/download-result
    method: downloadResultPost
    httpMethod: post
    tag: bulk-embeddings
    typeScriptTag: bulkEmbeddings
    description: Download Result
    parameters:
      - name: jobId
        schema: string
        required: true
        description: ''
        example: JOB_ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /v1/rerank
    method: pairRanking
    httpMethod: post
    tag: rerank
    typeScriptTag: rerank
    description: Rank
    parameters:
      - name: model
        schema: string
        required: true
        description: ''
        example: MODEL
      - name: query
        schema: undefined
        required: true
        description: ''
      - name: documents
        schema: undefined
        required: true
        description: ''
      - name: top_n
        schema: integer
        required: false
        description: ''
      - name: return_documents
        schema: boolean
        required: false
        description: ''
        default: true
    responses:
      - statusCode: '200'
        description: Output of the embedding service
      - statusCode: '422'
        description: ''
  - url: /v1/multi-embeddings
    method: generateEmbeddings
    httpMethod: post
    tag: multi-embeddings
    typeScriptTag: multiEmbeddings
    description: Create Multi Embeddings
    parameters:
      - name: model
        schema: string
        required: true
        description: ''
        example: MODEL
      - name: input
        schema: undefined
        required: true
        description: ''
      - name: input_type
        schema: string
        required: false
        description: ''
        default: document
      - name: encoding_format
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: Output of the embedding service
      - statusCode: '422'
        description: ''
  - url: /
    method: checkStatus
    httpMethod: get
    tag: health
    typeScriptTag: health
    description: Get the health of Universal API service
    parameters: []
    responses:
      - statusCode: '200'
        description: >-
          Pydantic BaseModel for Jina health check, used as the response model
          in REST app.
numberOfSchemas: 20
apiDescription: This is the UniversalAPI to access all the Jina embedding models
