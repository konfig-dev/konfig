hash: 84a7338ecf00b1b0cab214456af5dd581751aae79103d1cd65a7d72013f58380
methodObjects:
  - url: /v1/incoming_transfers
    method: createIncomingTransfer
    httpMethod: post
    tag: Transfers
    typeScriptTag: transfers
    description: |

      Create incoming transfer
    parameters:
      - name: idempotencyKey
        schema: string
        required: true
        description: ''
        example: IDEMPOTENCY-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: counterparty
        schema: object
        required: true
        description: ''
      - name: receiving_account
        schema: object
        required: true
        description: ''
      - name: amount
        schema: object
        required: true
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /v1/linked_accounts
    method: list
    httpMethod: get
    tag: Linked Accounts
    typeScriptTag: linkedAccounts
    description: |

      Lists linked accounts
    parameters:
      - name: cursor
        schema: string
        required: false
        description: ''
      - name: limit
        schema: integer
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
  - url: /v1/transfers
    method: list
    httpMethod: get
    tag: Transfers
    typeScriptTag: transfers
    description: |

      Lists transfers 
    parameters:
      - name: cursor
        schema: string
        required: false
        description: ''
      - name: limit
        schema: integer
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '500'
        description: Internal server error
  - url: /v1/transfers
    method: createTransfer
    httpMethod: post
    tag: Transfers
    typeScriptTag: transfers
    description: |

      Create transfer
    parameters:
      - name: idempotencyKey
        schema: string
        required: true
        description: ''
        example: IDEMPOTENCY-KEY
      - name: description
        schema: string
        required: true
        description: ''
        example: DESCRIPTION
      - name: counterparty
        schema: object
        required: true
        description: ''
      - name: amount
        schema: object
        required: true
        description: ''
      - name: external_memo
        schema: string
        required: true
        description: ''
        example: EXTERNAL_MEMO
      - name: originating_account
        schema: undefined
        required: true
        description: ''
      - name: approval_type
        schema: undefined
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /v1/transfers/{id}
    method: getById
    httpMethod: get
    tag: Transfers
    typeScriptTag: transfers
    description: |

      Get transfer
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '500'
        description: Internal server error
  - url: /v1/vendors
    method: list
    httpMethod: get
    tag: Vendors
    typeScriptTag: vendors
    description: |

      Lists vendors 
    parameters:
      - name: cursor
        schema: string
        required: false
        description: ''
      - name: limit
        schema: integer
        required: false
        description: ''
      - name: name
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
  - url: /v1/vendors
    method: createNewVendor
    httpMethod: post
    tag: Vendors
    typeScriptTag: vendors
    description: |

      Create vendor
    parameters:
      - name: idempotencyKey
        schema: string
        required: true
        description: ''
        example: IDEMPOTENCY-KEY
      - name: company_name
        schema: string
        required: true
        description: ''
        example: COMPANY_NAME
      - name: email
        schema: string
        required: false
        description: ''
      - name: phone
        schema: string
        required: false
        description: ''
      - name: payment_accounts
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /v1/vendors/{id}
    method: deleteVendorById
    httpMethod: delete
    tag: Vendors
    typeScriptTag: vendors
    description: |

      Delete vendor.
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: ID
    responses:
      - statusCode: '200'
        description: deleteVendor 200 response
  - url: /v1/vendors/{id}
    method: getById
    httpMethod: get
    tag: Vendors
    typeScriptTag: vendors
    description: |

      Get vendor
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '500'
        description: Internal server error
  - url: /v1/vendors/{id}
    method: updateById
    httpMethod: put
    tag: Vendors
    typeScriptTag: vendors
    description: Update vendor
    parameters:
      - name: idempotencyKey
        schema: string
        required: false
        description: ''
      - name: id
        schema: string
        required: true
        description: ''
        example: ID
      - name: company_name
        schema: string
        description: ''
      - name: email
        schema: string
        description: ''
      - name: phone
        schema: string
        description: ''
      - name: payment_accounts
        schema: array
        description: ''
      - name: beneficiary_name
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
numberOfSchemas: 58
apiDescription: >

  The payments API allows you to initiate and manage payments and vendors from
  your Brex business accounts.
