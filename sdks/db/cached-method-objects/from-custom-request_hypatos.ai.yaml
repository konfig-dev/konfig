hash: 5072cff7e502bcbd8f65b29c150c88d0ebcedb0b04b88f98937453c039f26129
methodObjects:
  - url: /auth/token
    method: requestAccessToken
    httpMethod: post
    tag: Authorization
    typeScriptTag: authorization
    description: Request an access token
    parameters:
      - name: grant_type
        schema: string
        required: true
        description: ''
        example: GRANT_TYPE
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /files
    method: uploadFile
    httpMethod: post
    tag: Files
    typeScriptTag: files
    description: Upload a file
    parameters:
      - name: xHyFilename
        schema: string
        description: >-
          Optional name of the file to be stored along with the content. If not
          provided, a filename will be generated
    responses:
      - statusCode: '201'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /files/{id}
    method: downloadById
    httpMethod: get
    tag: Files
    typeScriptTag: files
    description: Download a file by id
    parameters:
      - name: id
        schema: string
        required: true
        description: File id to download
        example: ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents
    method: getList
    httpMethod: get
    tag: Documents
    typeScriptTag: documents
    description: Retrieve a list of documents
    parameters:
      - name: projectId
        schema: array
        required: false
        description: >-
          Project ids to to find items by. If ommitted, items from all existing
          projects are returned.
      - name: offset
        schema: integer
        required: false
        description: >-
          A zero-based offset of the first item in the data collection to
          return.
      - name: limit
        schema: integer
        required: false
        description: >-
          Limit the amount of items returned in the response. If the value
          exceeds the maximum, then the maximum value will be used.
        default: 20
      - name: sort
        schema: string
        required: false
        description: The field to sort reponse items by.
        default: '-createdAt'
      - name: state
        schema: array
        required: false
        description: >-
          Used to retrieve documents that are in specific states only. Multiple
          states can be used for this filtering. By default, documents in all
          states are returned.
      - name: fileId
        schema: string
        required: false
        description: File identifier to retrieve documents that were created from that file
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/process-file
    method: processFileIntoDocument
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Request processing of a file
    parameters:
      - name: fileId
        schema: string
        required: true
        description: ''
        example: 5349b4ddd2781d08c09890f4
      - name: projectId
        schema: string
        required: true
        description: ''
        example: 00000020f51bb4362eee2a4d
      - name: externalId
        schema: string
        required: false
        description: ''
        example: doc-0001
      - name: externalData
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '202'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}
    method: getById
    httpMethod: get
    tag: Documents
    typeScriptTag: documents
    description: Retrieve a document by id
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the document to get.
        example: ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}/transfer
    method: updateTransferInformation
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Provide information about a transfer of a document to the target system
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of of the document to update.
        example: ID
      - name: successful
        schema: boolean
        required: true
        description: ''
        example: true
      - name: message
        schema: string
        required: false
        description: ''
        example: Upload failed due to ERP being down
    responses:
      - statusCode: '202'
        description: Document transfer infor accepted
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}/external-data
    method: updateExternalData
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Provide external data for a document with given id
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the document to update.
        example: ID
      - name: key1
        schema: string
        description: ''
        example: value1
      - name: key2
        schema: string
        description: ''
        example: value2
    responses:
      - statusCode: '202'
        description: External data provided for the document accepted.
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}/external-id
    method: provideExternalId
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Provide an external identifier for a document with given id
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the document to update.
        example: ID
    responses:
      - statusCode: '202'
        description: External ID provided for the document accepted.
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}/title
    method: provideTitle
    httpMethod: post
    tag: Documents
    typeScriptTag: documents
    description: Provide a title for a document with given id
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the document to update.
        example: ID
    responses:
      - statusCode: '202'
        description: Document title provided for the document accepted.
      - statusCode: '400'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /documents/{id}/states
    method: getDocumentStates
    httpMethod: get
    tag: Documents
    typeScriptTag: documents
    description: Retrieve a document states
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the document to get states of.
        example: ID
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/invoices
    method: insertInvoiceIncludingInvoiceLines
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert invoice including invoice lines
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: SUPPLIER_INVOICE-3-1
      - name: documentId
        schema: string
        required: false
        description: ''
        example: 63cac12c37bb02accb396cae
      - name: documents
        schema: array
        required: false
        description: ''
      - name: supplierInvoiceNumber
        schema: string
        required: false
        description: ''
        example: '10000001'
      - name: invoiceNumber
        schema: string
        required: false
        description: ''
        example: '12345'
      - name: externalCompanyId
        schema: string
        required: false
        description: ''
        example: DE01
      - name: externalSupplierId
        schema: string
        required: false
        description: ''
        example: '0000100000'
      - name: externalBankAccountId
        schema: string
        required: false
        description: ''
        example: '12341234'
      - name: fiscalYearLabel
        schema: string
        required: false
        description: ''
        example: '2023'
      - name: issuedDate
        schema: string
        required: false
        description: ''
        example: '2000-12-31'
      - name: receivedDate
        schema: string
        required: false
        description: ''
        example: '2000-12-31'
      - name: postingDate
        schema: string
        required: false
        description: ''
        example: '2000-12-31'
      - name: isCanceled
        schema: boolean
        required: false
        description: ''
        example: false
      - name: relatedInvoice
        schema: string
        required: false
        description: ''
        example: SUPPLIER_INVOICE-3-2
      - name: currency
        schema: string
        required: false
        description: ''
        example: EUR
      - name: totalNetAmount
        schema: number
        required: false
        description: ''
        example: 81
      - name: totalFreightCharges
        schema: number
        required: false
        description: ''
        example: 9
      - name: totalOtherCharges
        schema: number
        required: false
        description: ''
        example: 10
      - name: totalTaxAmount
        schema: number
        required: false
        description: ''
        example: 19
      - name: totalGrossAmount
        schema: number
        required: false
        description: ''
        example: 119
      - name: paymentTerms
        schema: object
        required: false
        description: ''
      - name: externalApproverId
        schema: string
        required: false
        description: ''
        example: UserID#1234
      - name: customFields
        schema: object
        required: false
        description: ''
      - name: headerText
        schema: string
        required: false
        description: ''
        example: doc header text
      - name: type
        schema: string
        required: false
        description: ''
        example: FI
      - name: invoiceLines
        schema: array
        required: true
        description: ''
      - name: withholdingTax
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/invoices/{externalId}
    method: markInvoiceDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark invoice as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
      - name: lineNumber
        schema: string
        required: false
        description: |
          Line number of one of the line numbers inside the Invoice.
          Optional, omitting means the whole Invoice is deleted.
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/companies
    method: addCompanyData
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert company
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: DE01
      - name: name
        schema: string
        required: true
        description: ''
        example: Acmne Corp.
      - name: street
        schema: string
        required: false
        description: ''
        example: Hauptstr. 1
      - name: addressAdditional
        schema: string
        required: false
        description: ''
        example: Eingang B
      - name: postcode
        schema: string
        required: false
        description: ''
        example: '10001'
      - name: city
        schema: string
        required: false
        description: ''
        example: Berlin
      - name: state
        schema: string
        required: false
        description: ''
        example: Berlin
      - name: countryCode
        schema: string
        required: false
        description: ''
        example: DE
      - name: vatIds
        schema: array
        required: false
        description: ''
        example:
          - id: DE123456789X
            countryCode: DE
      - name: taxIds
        schema: array
        required: false
        description: ''
        example:
          - id: 123-456-789X
            type: TIN
      - name: customFields
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/companies/{externalId}
    method: markCompanyDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark company as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/suppliers
    method: insertSupplierIncludingSubsidiaries
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert supplier including related subsidiaries
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: '0000100000'
      - name: name
        schema: string
        required: true
        description: ''
        example: Acmne Corp.
      - name: street
        schema: string
        required: false
        description: ''
        example: Hauptstr. 1
      - name: addressAdditional
        schema: string
        required: false
        description: ''
        example: Eingang B
      - name: postcode
        schema: string
        required: false
        description: ''
        example: '10001'
      - name: city
        schema: string
        required: false
        description: ''
        example: Berlin
      - name: state
        schema: string
        required: false
        description: ''
        example: Berlin
      - name: countryCode
        schema: string
        required: false
        description: ''
        example: DE
      - name: vatIds
        schema: array
        required: false
        description: ''
        example:
          - id: DE123456789X
            countryCode: DE
      - name: taxIds
        schema: array
        required: false
        description: ''
        example:
          - id: 123-456-789X
            type: TIN
      - name: blockedForPosting
        schema: boolean
        required: false
        description: ''
        example: false
      - name: blockedForPayment
        schema: boolean
        required: false
        description: ''
        example: false
      - name: defaultGlAccountCode
        schema: string
        required: false
        description: ''
        example: 0000100GL1
      - name: supplierSubsidiaries
        schema: array
        required: false
        description: ''
      - name: supplierBankAccounts
        schema: array
        required: false
        description: ''
      - name: customFields
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/suppliers/{externalId}
    method: markSupplierDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark supplier as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/purchase-orders
    method: insertPurchaseOrder
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert purchase order including purchase order lines
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: '4500016221'
      - name: createdDate
        schema: string
        required: false
        description: ''
        example: '2000-12-31'
      - name: fiscalYearLabel
        schema: string
        required: false
        description: ''
        example: '2023'
      - name: language
        schema: undefined
        required: false
        description: ''
      - name: externalCompanyId
        schema: string
        required: false
        description: ''
        example: DE01
      - name: type
        schema: string
        required: false
        description: ''
        example: Service
      - name: externalSupplierId
        schema: string
        required: false
        description: ''
        example: '0000100000'
      - name: status
        schema: string
        required: false
        description: ''
        example: OPEN
      - name: currency
        schema: string
        required: false
        description: ''
        example: EUR
      - name: totalNetAmount
        schema: number
        required: false
        description: ''
        example: 81
      - name: totalFreightCharges
        schema: number
        required: false
        description: ''
        example: 9
      - name: totalOtherCharges
        schema: number
        required: false
        description: ''
        example: 10
      - name: totalTaxAmount
        schema: number
        required: false
        description: ''
        example: 19
      - name: totalGrossAmount
        schema: number
        required: false
        description: ''
        example: 119
      - name: paymentTerms
        schema: object
        required: false
        description: ''
      - name: customFields
        schema: object
        required: false
        description: ''
      - name: purchaseOrderLines
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/purchase-orders/{externalId}
    method: markPurchaseOrderDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark purchase Order as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
      - name: lineNumber
        schema: string
        required: false
        description: |
          Line number of one of the line numbers inside the PO.
          Optional, omitting means the whole PO is deleted.
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/gl-accounts
    method: insertGlAccount
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert general ledger account
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: 0000100GL1
      - name: code
        schema: string
        required: true
        description: ''
        example: GL1
      - name: companyAssignment
        schema: array
        required: false
        description: ''
        example:
          - DE01
          - US01
      - name: type
        schema: object
        required: false
        description: ''
      - name: category
        schema: object
        required: false
        description: ''
      - name: label
        schema: array
        required: false
        description: ''
        example:
          - text: Entertainment Expenses
            language: en
      - name: shortLabel
        schema: array
        required: false
        description: ''
        example:
          - text: Entertainment Exp.
            language: en
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/gl-accounts/{externalId}
    method: markGlAccountDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark general ledger account as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/cost-centers
    method: insertCostCenter
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert cost center
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: 0000100CO1
      - name: code
        schema: string
        required: true
        description: ''
        example: CO1
      - name: companyAssignment
        schema: array
        required: false
        description: ''
        example:
          - DE01
          - US01
      - name: type
        schema: object
        required: false
        description: ''
      - name: category
        schema: object
        required: false
        description: ''
      - name: label
        schema: array
        required: false
        description: ''
        example:
          - text: Sales Engineers
            language: en
      - name: shortLabel
        schema: array
        required: false
        description: ''
        example:
          - text: Sales Eng.
            language: en
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/cost-centers/{externalId}
    method: markCostCenterDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark cost Center as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/approvers
    method: insertApproverRecord
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert approver
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: UserID#1234
      - name: companyAssignment
        schema: array
        required: false
        description: ''
        example:
          - DE01
          - US01
      - name: isActive
        schema: boolean
        required: false
        description: ''
        example: true
      - name: firstName
        schema: string
        required: false
        description: ''
        example: Koala
      - name: lastName
        schema: string
        required: false
        description: ''
        example: Hinze
      - name: email
        schema: string
        required: false
        description: ''
        example: accountant@sap.com
      - name: phoneNumber
        schema: string
        required: false
        description: ''
        example: 491001234567891
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/approvers/{externalId}
    method: markApproverDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark approver as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/customers
    method: insertCustomer
    httpMethod: post
    tag: Enrichment
    typeScriptTag: enrichment
    description: Insert customer
    parameters:
      - name: externalId
        schema: string
        required: true
        description: ''
        example: '0000100000'
      - name: name
        schema: string
        required: true
        description: ''
        example: Acmne Corp.
      - name: street
        schema: string
        required: false
        description: ''
        example: Hauptstr. 1
      - name: addressAdditional
        schema: string
        required: false
        description: ''
        example: Eingang B
      - name: postcode
        schema: string
        required: false
        description: ''
        example: '10001'
      - name: city
        schema: string
        required: false
        description: ''
        example: Berlin
      - name: countryCode
        schema: string
        required: false
        description: ''
        example: DE
      - name: vatIds
        schema: array
        required: false
        description: ''
        example:
          - id: DE123456789X
            countryCode: DE
      - name: taxIds
        schema: array
        required: false
        description: ''
        example:
          - id: 123-456-789X
            type: TIN
      - name: blockedForPosting
        schema: boolean
        required: false
        description: ''
        example: false
      - name: blockedForPayment
        schema: boolean
        required: false
        description: ''
        example: false
      - name: customerSubsidiaries
        schema: array
        required: false
        description: ''
      - name: customerBankAccounts
        schema: array
        required: false
        description: ''
      - name: customFields
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /enrichment/customers/{externalId}
    method: markCustomerAsDeleted
    httpMethod: delete
    tag: Enrichment
    typeScriptTag: enrichment
    description: Mark customer as deleted
    parameters:
      - name: externalId
        schema: string
        required: true
        description: Previously sent `externalId`
        example: EXTERNALID
    responses:
      - statusCode: '204'
        description: Successfully marked as deleted
      - statusCode: '404'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /companies/{id}
    method: getById
    httpMethod: get
    tag: Companies
    typeScriptTag: companies
    description: Retrieve a company by id
    parameters:
      - name: id
        schema: string
        required: true
        description: Id of the company to retrieve
        example: 63e6663823b4c1f5287398bb
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /companies
    method: list
    httpMethod: get
    tag: Companies
    typeScriptTag: companies
    description: Retrieve a list of companies
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '429'
        description: ''
  - url: /projects
    method: listForGivenSearchCriteria
    httpMethod: get
    tag: Projects
    typeScriptTag: projects
    description: Retrieve a projects list for given search criteria
    parameters:
      - name: offset
        schema: integer
        required: false
        description: >-
          A zero-based offset of the first item in the data collection to
          return.
      - name: limit
        schema: integer
        required: false
        description: >-
          Limit the amount of items returned in the response. If the value
          exceeds the maximum, then the maximum value will be used.
        default: 20
      - name: sort
        schema: string
        required: false
        description: The field to sort reponse items by.
        default: '-createdAt'
      - name: search
        schema: string
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '500'
        description: ''
  - url: /projects
    method: createProject
    httpMethod: post
    tag: Projects
    typeScriptTag: projects
    description: Create a project
    parameters:
      - name: name
        schema: string
        required: true
        description: ''
        example: My Project
      - name: note
        schema: string
        required: false
        description: ''
        example: My project description note
      - name: ocr
        schema: undefined
        required: true
        description: ''
      - name: extractionModelId
        schema: string
        required: true
        description: ''
        example: 63e6663823b4c1f5287398bb
      - name: completion
        schema: string
        required: false
        description: ''
        example: manual
        default: manual
      - name: duplicates
        schema: string
        required: false
        description: ''
        example: allow
        default: fail
      - name: members
        schema: undefined
        required: true
        description: ''
      - name: schema
        schema: object
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: Project response
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '422'
        description: ''
  - url: /projects/{id}
    method: getById
    httpMethod: get
    tag: Projects
    typeScriptTag: projects
    description: Retrieve a project by id
    parameters:
      - name: id
        schema: string
        required: true
        description: Project id
        example: 63e6663823b4c1f5287398bb
    responses:
      - statusCode: '200'
        description: Project response
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /projects/{id}/schema
    method: getSchemaByProjectId
    httpMethod: get
    tag: Projects
    typeScriptTag: projects
    description: Retrieve a schema by project id
    parameters:
      - name: id
        schema: string
        required: true
        description: Project id
        example: 63e6663823b4c1f5287398bb
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
  - url: /emails/{id}/content
    method: getMergedContentById
    httpMethod: get
    tag: Emails
    typeScriptTag: emails
    description: Retrieve an email merged content for given document ID
    parameters:
      - name: id
        schema: string
        required: true
        description: ''
        example: 6295dcd39db1ab740c3e296c
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '401'
        description: ''
      - statusCode: '403'
        description: ''
      - statusCode: '404'
        description: ''
      - statusCode: '422'
        description: ''
      - statusCode: '500'
        description: ''
numberOfSchemas: 70
apiDescription: >
  # Introduction


  The Hypatos API is organized around REST. The majority of the endpoints
  provide CRUD 

  functionality for resources. The API is also exposing Intent Resources which
  mimic user intents 

  or actions.


  The Hypatos API uses [OAuth 2.0 Client Credential
  Grant](https://www.rfc-editor.org/rfc/rfc6749#section-4.4) 

  to authenticate requests. Before making any requests to any endpoint a client
  must authenticate 

  with the authorization server and requests an access token from the [token
  endpoint](https://hypatos.redoc.ly/). 


  ````sh
    POST /auth/token HTTP/1.1
    Host: api.cloud.hypatos.ai
    Content-Type: application/x-www-form-urlencoded
    Authorization: Basic dXNlcm5hbWU6cGFzc3dvcmQ=

    grant_type=client_credentials
  ````


  `Authorization` header contains `client_id:client_secret` encoded as explained
  in [RFC Client Password
  section](https://datatracker.ietf.org/doc/html/rfc6749#section-2.3.1).
       
  If the authorization server authenticated the client successfully, an access
  token is issued. 

  Here is an example successful response:


  ````sh
    HTTP/1.1 200 OK
    Content-Type: application/json;charset=UTF-8
    Cache-Control: no-store
    Pragma: no-cache

    {
      "access_token": "mF_9.B5f-4.1JqM",
      "expires_in": 86400,
      "scope": "enrichment.write files.read",
      "token_type": "Bearer",
    }
  ````

  This token can be used to authenticate the requests to API endpoints by
  sending a Bearer token 

  in the `Authorization` HTTP header. The following example demonstrates how to
  use the access token 

  to retrieve a list of documents.


  ````sh
    GET /v2/documents HTTP/1.1
    Host: api.cloud.hypatos.ai
    Authorization: Bearer mF_9.B5f-4.1JqM
  ````


  # Versioning


  Changes to this API are released regularly. We use [Semantic Versioning
  2.0.0](https://semver.org/spec/v2.0.0.html) 

  scheme for versioning so that the clients can identify any
  backward-incompatible changes 

  easily. Briefly summarized one can say, if the MAJOR version of the new API
  version didn't 

  change you can expect the new version to be backward-compatible.


  # Rate limits


  In order to maximise the stability of our API, we institue rate limits for all
  of API 

  endpoints. Clients who send too many requests over a given period of time will
  see error 

  responses that show up as status code [429 Too Many
  Requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429). 


  When you see error responses with status code 429, it means you exhausted your
  current 

  quota and need to withhold from sending further requests until the quota is
  reset. We 

  encourage you not to wait until you get a 429 error but to monitor your quota
  in each 

  request. In each response you receive from the API, you will find HTTP headers
  providing 

  the details about your current quota. Here is the list of the HTTP headers:


  * `x-ratelimit-limit`: Indicates the quota associated to the client in the 

  current time-window followed by the description of the quota policy.

  * `x-ratelimit-remaining`: Indicates the number of remaining requests in the
  current 

  time-window

  * `x-ratelimit-reset`: Indicates the number of seconds until quota reset of
  the current 

  time-window


  Please note that IETF is currently in the process of publishing a standard for
  these 

  headers. Please explore the
  [draft](https://datatracker.ietf.org/doc/draft-ietf-httpapi-ratelimit-headers/) 

  for more details.


  A basic technique to gracefully handle rate limits is watch for your quota
  permanently 

  and increase the time between your request as the quota is decreasing. To
  recover from a 

  429 error you need a retry mechanism following an exponential backoff
  schedule.
