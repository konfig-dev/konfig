hash: c3ee6ba48fb39719683b98ebddf44aef148041ed030e7dc117c1d8f5baa0afdd
methodObjects:
  - url: /actions
    method: getAll
    httpMethod: get
    tag: Actions
    typeScriptTag: actions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /actions/{id}
    method: getById
    httpMethod: get
    tag: Actions
    typeScriptTag: actions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates
    method: getAll
    httpMethod: get
    tag: Certificates
    typeScriptTag: certificates
    description: Get all Certificates
    parameters:
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: type
        schema: string
        required: false
        description: >-
          Can be used multiple times. The response will only contain
          Certificates matching the type.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates
    method: createNewCertificate
    httpMethod: post
    tag: Certificates
    typeScriptTag: certificates
    description: Create a Certificate
    parameters:
      - name: certificate
        schema: string
        required: false
        description: ''
        example: |-
          -----BEGIN CERTIFICATE-----
          ...
      - name: domain_names
        schema: array
        required: false
        description: ''
        example: null
      - name: labels
        schema: object
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: my website cert
      - name: private_key
        schema: string
        required: false
        description: ''
        example: |-
          -----BEGIN PRIVATE KEY-----
          ...
      - name: type
        schema: string
        required: false
        description: ''
        example: uploaded
        default: uploaded
    responses:
      - statusCode: '201'
        description: ''
  - url: /certificates/actions
    method: getAllActions
    httpMethod: get
    tag: Certificate Actions
    typeScriptTag: certificateActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates/actions/{id}
    method: getAction
    httpMethod: get
    tag: Certificate Actions
    typeScriptTag: certificateActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates/{id}
    method: deleteCertificate
    httpMethod: delete
    tag: Certificates
    typeScriptTag: certificates
    description: Delete a Certificate
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '204'
        description: Certificate deleted
  - url: /certificates/{id}
    method: getById
    httpMethod: get
    tag: Certificates
    typeScriptTag: certificates
    description: Get a Certificate
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates/{id}
    method: updateById
    httpMethod: put
    tag: Certificates
    typeScriptTag: certificates
    description: Update a Certificate
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: my website cert
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Certificate Actions
    typeScriptTag: certificateActions
    description: Get all Actions for a Certificate
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /certificates/{id}/actions/retry
    method: retryIssuanceOrRenewal
    httpMethod: post
    tag: Certificate Actions
    typeScriptTag: certificateActions
    description: Retry Issuance or Renewal
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Certificate
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /certificates/{id}/actions/{action_id}
    method: getActionById
    httpMethod: get
    tag: Certificate Actions
    typeScriptTag: certificateActions
    description: Get an Action for a Certificate
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Certificate
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /datacenters
    method: getAll
    httpMethod: get
    tag: Datacenters
    typeScriptTag: datacenters
    description: Get all Datacenters
    parameters:
      - name: name
        schema: string
        required: false
        description: >-
          Can be used to filter Datacenters by their name. The response will
          only contain the Datacenter matching the specified name. When the name
          does not match the Datacenter name format, an `invalid_input` error is
          returned.
      - name: sort
        schema: string
        required: false
        description: Can be used multiple times.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /datacenters/{id}
    method: getById
    httpMethod: get
    tag: Datacenters
    typeScriptTag: datacenters
    description: Get a Datacenter
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of Datacenter
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls
    method: listAll
    httpMethod: get
    tag: Firewalls
    typeScriptTag: firewalls
    description: Get all Firewalls
    parameters:
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls
    method: createFirewall
    httpMethod: post
    tag: Firewalls
    typeScriptTag: firewalls
    description: Create a Firewall
    parameters:
      - name: apply_to
        schema: array
        required: false
        description: ''
      - name: labels
        schema: object
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: Corporate Intranet Protection
      - name: rules
        schema: array
        required: false
        description: ''
        example:
          - direction: in
            port: '80'
            protocol: tcp
            source_ips:
              - 28.239.13.1/32
              - 28.239.14.0/24
              - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128
    responses:
      - statusCode: '201'
        description: ''
  - url: /firewalls/actions
    method: getAllActions
    httpMethod: get
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls/{id}
    method: deleteFirewallById
    httpMethod: delete
    tag: Firewalls
    typeScriptTag: firewalls
    description: Delete a Firewall
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '204'
        description: Firewall deleted
  - url: /firewalls/{id}
    method: getFirewallById
    httpMethod: get
    tag: Firewalls
    typeScriptTag: firewalls
    description: Get a Firewall
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls/{id}
    method: updateFirewallById
    httpMethod: put
    tag: Firewalls
    typeScriptTag: firewalls
    description: Update a Firewall
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: new-name
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Get all Actions for a Firewall
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /firewalls/{id}/actions/apply_to_resources
    method: applyToResources
    httpMethod: post
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Apply to Resources
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Firewall
        example: 0
      - name: apply_to
        schema: array
        required: true
        description: ''
    responses:
      - statusCode: '201'
        description: ''
  - url: /firewalls/{id}/actions/remove_from_resources
    method: removeFromResources
    httpMethod: post
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Remove from Resources
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Firewall
        example: 0
      - name: remove_from
        schema: array
        required: true
        description: ''
    responses:
      - statusCode: '201'
        description: ''
  - url: /firewalls/{id}/actions/set_rules
    method: setRules
    httpMethod: post
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Set Rules
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Firewall
        example: 0
      - name: rules
        schema: array
        required: true
        description: ''
    responses:
      - statusCode: '201'
        description: ''
  - url: /firewalls/{id}/actions/{action_id}
    method: getActionById
    httpMethod: get
    tag: Firewall Actions
    typeScriptTag: firewallActions
    description: Get an Action for a Firewall
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Firewall
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips
    method: getAll
    httpMethod: get
    tag: Floating IPs
    typeScriptTag: floatingIPs
    description: Get all Floating IPs
    parameters:
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: sort
        schema: string
        required: false
        description: >-
          Can be used multiple times. Choices id id:asc id:desc created
          created:asc created:desc
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips
    method: createNewIp
    httpMethod: post
    tag: Floating IPs
    typeScriptTag: floatingIPs
    description: Create a Floating IP
    parameters:
      - name: description
        schema: string
        required: false
        description: ''
        example: Web Frontend
      - name: home_location
        schema: string
        required: false
        description: ''
        example: fsn1
      - name: labels
        schema: object
        required: false
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        required: false
        description: ''
        example: Web Frontend
      - name: server
        schema: integer
        required: false
        description: ''
        example: 42
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
    responses:
      - statusCode: '201'
        description: ''
  - url: /floating_ips/actions
    method: getAllActions
    httpMethod: get
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips/{id}
    method: deleteIp
    httpMethod: delete
    tag: Floating IPs
    typeScriptTag: floatingIPs
    description: Delete a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
    responses:
      - statusCode: '204'
        description: Floating IP deleted
  - url: /floating_ips/{id}
    method: get
    httpMethod: get
    tag: Floating IPs
    typeScriptTag: floatingIPs
    description: Get a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips/{id}
    method: updateDescriptionLabels
    httpMethod: put
    tag: Floating IPs
    typeScriptTag: floatingIPs
    description: Update a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: description
        schema: string
        description: ''
        example: Web Frontend
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: Web Frontend
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Get all Actions for a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /floating_ips/{id}/actions/assign
    method: assignToServer
    httpMethod: post
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Assign a Floating IP to a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: server
        schema: integer
        required: true
        description: ''
        example: 42
    responses:
      - statusCode: '201'
        description: ''
  - url: /floating_ips/{id}/actions/change_dns_ptr
    method: changeDnsPtr
    httpMethod: post
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Change reverse DNS entry for a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: dns_ptr
        schema: string
        required: true
        description: ''
        example: server02.example.com
      - name: ip
        schema: string
        required: true
        description: ''
        example: 1.2.3.4
    responses:
      - statusCode: '201'
        description: ''
  - url: /floating_ips/{id}/actions/change_protection
    method: changeProtection
    httpMethod: post
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Change Floating IP Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /floating_ips/{id}/actions/unassign
    method: unassignIp
    httpMethod: post
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Unassign a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /floating_ips/{id}/actions/{action_id}
    method: getActionById
    httpMethod: get
    tag: Floating IP Actions
    typeScriptTag: floatingIpActions
    description: Get an Action for a Floating IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Floating IP
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /images
    method: getAll
    httpMethod: get
    tag: Images
    typeScriptTag: images
    description: Get all Images
    parameters:
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: type
        schema: string
        required: false
        description: Can be used multiple times.
      - name: status
        schema: string
        required: false
        description: >-
          Can be used multiple times. The response will only contain Images
          matching the status.
      - name: boundTo
        schema: string
        required: false
        description: >-
          Can be used multiple times. Server ID linked to the Image. Only
          available for Images of type `backup`
      - name: includeDeprecated
        schema: boolean
        required: false
        description: Can be used multiple times.
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: architecture
        schema: string
        required: false
        description: Return only Images with the given architecture.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/actions
    method: getAllActions
    httpMethod: get
    tag: Image Actions
    typeScriptTag: imageActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Image Actions
    typeScriptTag: imageActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/{id}
    method: deleteImage
    httpMethod: delete
    tag: Images
    typeScriptTag: images
    description: Delete an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
    responses:
      - statusCode: '204'
        description: Image deleted
  - url: /images/{id}
    method: getById
    httpMethod: get
    tag: Images
    typeScriptTag: images
    description: Get an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/{id}
    method: updateImageById
    httpMethod: put
    tag: Images
    typeScriptTag: images
    description: Update an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
      - name: description
        schema: string
        description: ''
        example: My new Image description
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: type
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Image Actions
    typeScriptTag: imageActions
    description: Get all Actions for an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /images/{id}/actions/change_protection
    method: changeProtection
    httpMethod: post
    tag: Image Actions
    typeScriptTag: imageActions
    description: Change Image Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /images/{id}/actions/{action_id}
    method: getActionById
    httpMethod: get
    tag: Image Actions
    typeScriptTag: imageActions
    description: Get an Action for an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Image
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /isos
    method: getAll
    httpMethod: get
    tag: ISOs
    typeScriptTag: isOs
    description: Get all ISOs
    parameters:
      - name: name
        schema: string
        required: false
        description: >-
          Can be used to filter ISOs by their name. The response will only
          contain the ISO matching the specified name.
      - name: architecture
        schema: string
        required: false
        description: Return only ISOs with the given architecture.
      - name: includeArchitectureWildcard
        schema: boolean
        required: false
        description: >-
          Include Images with wildcard architecture (architecture is null).
          Works only if architecture filter is specified.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /isos/{id}
    method: get
    httpMethod: get
    tag: ISOs
    typeScriptTag: isOs
    description: Get an ISO
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the ISO
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancer_types
    method: getAllTypes
    httpMethod: get
    tag: Load Balancer Types
    typeScriptTag: loadBalancerTypes
    description: Get all Load Balancer Types
    parameters:
      - name: name
        schema: string
        required: false
        description: >-
          Can be used to filter Load Balancer types by their name. The response
          will only contain the Load Balancer type matching the specified name.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancer_types/{id}
    method: getById
    httpMethod: get
    tag: Load Balancer Types
    typeScriptTag: loadBalancerTypes
    description: Get a Load Balancer Type
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of Load Balancer type
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers
    method: getAll
    httpMethod: get
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Get all Load Balancers
    parameters:
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers
    method: createLoadBalancer
    httpMethod: post
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Create a Load Balancer
    parameters:
      - name: algorithm
        schema: object
        required: false
        description: ''
        default:
          type: round_robin
      - name: labels
        schema: object
        required: false
        description: ''
      - name: load_balancer_type
        schema: string
        required: true
        description: ''
        example: lb11
      - name: location
        schema: string
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: Web Frontend
      - name: network
        schema: integer
        required: false
        description: ''
        example: 123
      - name: network_zone
        schema: string
        required: false
        description: ''
        example: eu-central
      - name: public_interface
        schema: boolean
        required: false
        description: ''
        example: true
      - name: services
        schema: array
        required: false
        description: ''
      - name: targets
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/actions
    method: getAllActions
    httpMethod: get
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/actions/{id}
    method: getSpecificAction
    httpMethod: get
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/{id}
    method: deleteLoadBalancer
    httpMethod: delete
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Delete a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
    responses:
      - statusCode: '204'
        description: Load Balancer deleted
  - url: /load_balancers/{id}
    method: getById
    httpMethod: get
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Get a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/{id}
    method: updateBalancer
    httpMethod: put
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Update a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: new-name
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Get all Actions for a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/{id}/actions/add_service
    method: addService
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Add Service
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: destination_port
        schema: integer
        required: true
        description: ''
        example: 80
      - name: health_check
        schema: object
        required: true
        description: ''
      - name: http
        schema: object
        required: false
        description: ''
      - name: listen_port
        schema: integer
        required: true
        description: ''
        example: 443
      - name: protocol
        schema: string
        required: true
        description: ''
        example: https
      - name: proxyprotocol
        schema: boolean
        required: true
        description: ''
        example: false
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/add_target
    method: addTarget
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Add Target
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: ip
        schema: object
        required: false
        description: ''
      - name: label_selector
        schema: object
        required: false
        description: ''
      - name: server
        schema: object
        required: false
        description: ''
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
      - name: use_private_ip
        schema: boolean
        required: false
        description: ''
        example: true
        default: false
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/attach_to_network
    method: attachToNetwork
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Attach a Load Balancer to a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: ip
        schema: string
        required: false
        description: ''
        example: 10.0.1.1
      - name: network
        schema: integer
        required: true
        description: ''
        example: 4711
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/change_algorithm
    method: changeAlgorithm
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Change Algorithm
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/change_dns_ptr
    method: changeDnsPtr
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Change reverse DNS entry for this Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: dns_ptr
        schema: string
        required: true
        description: ''
        example: lb1.example.com
      - name: ip
        schema: string
        required: true
        description: ''
        example: 1.2.3.4
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/change_protection
    method: changeProtection
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Change Load Balancer Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/change_type
    method: changeType
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Change the Type of a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: load_balancer_type
        schema: string
        required: true
        description: ''
        example: lb21
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/delete_service
    method: deleteService
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Delete Service
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: listen_port
        schema: integer
        required: true
        description: ''
        example: 443
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/detach_from_network
    method: detachFromNetwork
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Detach a Load Balancer from a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: network
        schema: integer
        required: true
        description: ''
        example: 4711
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/disable_public_interface
    method: disablePublicInterface
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Disable the public interface of a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/enable_public_interface
    method: enablePublicInterface
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Enable the public interface of a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/remove_target
    method: removeTarget
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Remove Target
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: ip
        schema: object
        required: false
        description: ''
      - name: label_selector
        schema: object
        required: false
        description: ''
      - name: server
        schema: object
        required: false
        description: ''
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/update_service
    method: updateService
    httpMethod: post
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Update Service
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: destination_port
        schema: integer
        required: false
        description: ''
        example: 80
      - name: health_check
        schema: object
        required: false
        description: ''
      - name: http
        schema: object
        required: false
        description: ''
      - name: listen_port
        schema: integer
        required: true
        description: ''
        example: 443
      - name: protocol
        schema: string
        required: false
        description: ''
        example: https
      - name: proxyprotocol
        schema: boolean
        required: false
        description: ''
        example: false
    responses:
      - statusCode: '201'
        description: ''
  - url: /load_balancers/{id}/actions/{action_id}
    method: getSpecificAction
    httpMethod: get
    tag: Load Balancer Actions
    typeScriptTag: loadBalancerActions
    description: Get an Action for a Load Balancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /load_balancers/{id}/metrics
    method: getMetrics
    httpMethod: get
    tag: Load Balancers
    typeScriptTag: loadBalancers
    description: Get Metrics for a LoadBalancer
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Load Balancer
        example: 0
      - name: type
        schema: string
        required: true
        description: Type of metrics to get
        example: TYPE
      - name: start
        schema: string
        required: true
        description: Start of period to get Metrics for (in ISO-8601 format)
        example: START
      - name: end
        schema: string
        required: true
        description: End of period to get Metrics for (in ISO-8601 format)
        example: END
      - name: step
        schema: string
        required: false
        description: Resolution of results in seconds
    responses:
      - statusCode: '200'
        description: ''
  - url: /locations
    method: getAllLocations
    httpMethod: get
    tag: Locations
    typeScriptTag: locations
    description: Get all Locations
    parameters:
      - name: name
        schema: string
        required: false
        description: >-
          Can be used to filter Locations by their name. The response will only
          contain the Location matching the specified name.
      - name: sort
        schema: string
        required: false
        description: Can be used multiple times.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /locations/{id}
    method: getLocationById
    httpMethod: get
    tag: Locations
    typeScriptTag: locations
    description: Get a Location
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of Location
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks
    method: getAll
    httpMethod: get
    tag: Networks
    typeScriptTag: networks
    description: Get all Networks
    parameters:
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks
    method: createNetwork
    httpMethod: post
    tag: Networks
    typeScriptTag: networks
    description: Create a Network
    parameters:
      - name: expose_routes_to_vswitch
        schema: boolean
        required: false
        description: ''
        example: false
      - name: ip_range
        schema: string
        required: true
        description: ''
        example: 10.0.0.0/16
      - name: labels
        schema: object
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: mynet
      - name: routes
        schema: array
        required: false
        description: ''
      - name: subnets
        schema: array
        required: false
        description: ''
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/actions
    method: getAllActions
    httpMethod: get
    tag: Network Actions
    typeScriptTag: networkActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks/actions/{id}
    method: getAction
    httpMethod: get
    tag: Network Actions
    typeScriptTag: networkActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks/{id}
    method: deleteNetwork
    httpMethod: delete
    tag: Networks
    typeScriptTag: networks
    description: Delete a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the network
        example: 0
    responses:
      - statusCode: '204'
        description: Network deleted
  - url: /networks/{id}
    method: getById
    httpMethod: get
    tag: Networks
    typeScriptTag: networks
    description: Get a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the network
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks/{id}
    method: updateProperties
    httpMethod: put
    tag: Networks
    typeScriptTag: networks
    description: Update a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the network
        example: 0
      - name: expose_routes_to_vswitch
        schema: boolean
        description: ''
        example: false
      - name: labels
        schema: object
        description: ''
      - name: name
        schema: string
        description: ''
        example: new-name
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Network Actions
    typeScriptTag: networkActions
    description: Get all Actions for a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /networks/{id}/actions/add_route
    method: addRoute
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Add a route to a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: destination
        schema: string
        required: true
        description: ''
        example: 10.100.1.0/24
      - name: gateway
        schema: string
        required: true
        description: ''
        example: 10.0.1.1
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/add_subnet
    method: addSubnet
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Add a subnet to a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: ip_range
        schema: string
        required: false
        description: ''
        example: 10.0.1.0/24
      - name: network_zone
        schema: string
        required: true
        description: ''
        example: eu-central
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
      - name: vswitch_id
        schema: integer
        required: false
        description: ''
        example: 1000
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/change_ip_range
    method: changeIpRange
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Change IP range of a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: ip_range
        schema: string
        required: true
        description: ''
        example: 10.0.0.0/12
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/change_protection
    method: changeProtection
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Change Network Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/delete_route
    method: deleteRoute
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Delete a route from a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: destination
        schema: string
        required: true
        description: ''
        example: 10.100.1.0/24
      - name: gateway
        schema: string
        required: true
        description: ''
        example: 10.0.1.1
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/delete_subnet
    method: deleteSubnet
    httpMethod: post
    tag: Network Actions
    typeScriptTag: networkActions
    description: Delete a subnet from a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: ip_range
        schema: string
        required: true
        description: ''
        example: 10.0.1.0/24
    responses:
      - statusCode: '201'
        description: ''
  - url: /networks/{id}/actions/{action_id}
    method: getAction
    httpMethod: get
    tag: Network Actions
    typeScriptTag: networkActions
    description: Get an Action for a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Network
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /placement_groups
    method: getAll
    httpMethod: get
    tag: Placement Groups
    typeScriptTag: placementGroups
    description: Get all PlacementGroups
    parameters:
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: type
        schema: string
        required: false
        description: >-
          Can be used multiple times. The response will only contain
          PlacementGroups matching the type.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /placement_groups
    method: createNewGroup
    httpMethod: post
    tag: Placement Groups
    typeScriptTag: placementGroups
    description: Create a PlacementGroup
    parameters:
      - name: labels
        schema: object
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: my Placement Group
      - name: type
        schema: string
        required: true
        description: ''
        example: spread
    responses:
      - statusCode: '201'
        description: ''
  - url: /placement_groups/{id}
    method: deleteGroup
    httpMethod: delete
    tag: Placement Groups
    typeScriptTag: placementGroups
    description: Delete a PlacementGroup
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '204'
        description: PlacementGroup deleted
  - url: /placement_groups/{id}
    method: getById
    httpMethod: get
    tag: Placement Groups
    typeScriptTag: placementGroups
    description: Get a PlacementGroup
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /placement_groups/{id}
    method: updateProperties
    httpMethod: put
    tag: Placement Groups
    typeScriptTag: placementGroups
    description: Update a PlacementGroup
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: my Placement Group
    responses:
      - statusCode: '200'
        description: ''
  - url: /pricing
    method: getAllPrices
    httpMethod: get
    tag: Pricing
    typeScriptTag: pricing
    description: Get all prices
    parameters: []
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips
    method: getAll
    httpMethod: get
    tag: Primary IPs
    typeScriptTag: primaryIPs
    description: Get all Primary IPs
    parameters:
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: ip
        schema: string
        required: false
        description: >-
          Can be used to filter resources by their ip. The response will only
          contain the resources matching the specified ip.
        example: 127.0.0.1
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
      - name: sort
        schema: string
        required: false
        description: >-
          Can be used multiple times. Choices id id:asc id:desc created
          created:asc created:desc
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips
    method: createOrUpdate
    httpMethod: post
    tag: Primary IPs
    typeScriptTag: primaryIPs
    description: Create a Primary IP
    parameters:
      - name: assignee_id
        schema: integer
        required: false
        description: ''
        example: 17
      - name: assignee_type
        schema: string
        required: true
        description: ''
        example: server
      - name: auto_delete
        schema: boolean
        required: false
        description: ''
        example: false
        default: false
      - name: datacenter
        schema: string
        required: false
        description: ''
        example: fsn1-dc8
      - name: labels
        schema: object
        required: false
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        required: true
        description: ''
        example: my-ip
      - name: type
        schema: string
        required: true
        description: ''
        example: TYPE
    responses:
      - statusCode: '201'
        description: ''
  - url: /primary_ips/actions
    method: getAllActions
    httpMethod: get
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips/{id}
    method: deletePrimaryIp
    httpMethod: delete
    tag: Primary IPs
    typeScriptTag: primaryIPs
    description: Delete a Primary IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '204'
        description: Primary IP deleted
  - url: /primary_ips/{id}
    method: getById
    httpMethod: get
    tag: Primary IPs
    typeScriptTag: primaryIPs
    description: Get a Primary IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips/{id}
    method: updateIpLabels
    httpMethod: put
    tag: Primary IPs
    typeScriptTag: primaryIPs
    description: Update a Primary IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: auto_delete
        schema: boolean
        description: ''
        example: true
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: my-ip
    responses:
      - statusCode: '200'
        description: ''
  - url: /primary_ips/{id}/actions/assign
    method: assignPrimaryIpToResource
    httpMethod: post
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Assign a Primary IP to a resource
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Primary IP
        example: 0
      - name: assignee_id
        schema: integer
        required: true
        description: ''
        example: 4711
      - name: assignee_type
        schema: string
        required: true
        description: ''
        example: server
    responses:
      - statusCode: '201'
        description: ''
  - url: /primary_ips/{id}/actions/change_dns_ptr
    method: changeDnsPtr
    httpMethod: post
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Change reverse DNS entry for a Primary IP
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Primary IP
        example: 0
      - name: dns_ptr
        schema: string
        required: true
        description: ''
        example: server02.example.com
      - name: ip
        schema: string
        required: true
        description: ''
        example: 1.2.3.4
    responses:
      - statusCode: '201'
        description: ''
  - url: /primary_ips/{id}/actions/change_protection
    method: changeProtectionPrimaryIp
    httpMethod: post
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Change Primary IP Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Primary IP
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /primary_ips/{id}/actions/unassign
    method: unassignPrimaryIp
    httpMethod: post
    tag: Primary IP Actions
    typeScriptTag: primaryIpActions
    description: Unassign a Primary IP from a resource
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Primary IP
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /server_types
    method: listAllServerTypes
    httpMethod: get
    tag: Server Types
    typeScriptTag: serverTypes
    description: Get all Server Types
    parameters:
      - name: name
        schema: string
        required: false
        description: >-
          Can be used to filter Server types by their name. The response will
          only contain the Server type matching the specified name.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /server_types/{id}
    method: getServerType
    httpMethod: get
    tag: Server Types
    typeScriptTag: serverTypes
    description: Get a Server Type
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of Server Type
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers
    method: getAll
    httpMethod: get
    tag: Servers
    typeScriptTag: servers
    description: Get all Servers
    parameters:
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >-
          Can be used multiple times. The response will only contain Server
          matching the status
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers
    method: createServerAction
    httpMethod: post
    tag: Servers
    typeScriptTag: servers
    description: Create a Server
    parameters:
      - name: automount
        schema: boolean
        required: false
        description: ''
        example: false
      - name: datacenter
        schema: string
        required: false
        description: ''
        example: nbg1-dc3
      - name: firewalls
        schema: array
        required: false
        description: ''
        example:
          - firewall: 38
      - name: image
        schema: string
        required: true
        description: ''
        example: ubuntu-20.04
      - name: labels
        schema: object
        required: false
        description: ''
      - name: location
        schema: string
        required: false
        description: ''
        example: nbg1
      - name: name
        schema: string
        required: true
        description: ''
        example: my-server
      - name: networks
        schema: array
        required: false
        description: ''
        example:
          - 456
      - name: placement_group
        schema: integer
        required: false
        description: ''
        example: 1
      - name: public_net
        schema: object
        required: false
        description: ''
      - name: server_type
        schema: string
        required: true
        description: ''
        example: cx11
      - name: ssh_keys
        schema: array
        required: false
        description: ''
        example:
          - my-ssh-key
      - name: start_after_create
        schema: boolean
        required: false
        description: ''
        example: true
        default: true
      - name: user_data
        schema: string
        required: false
        description: ''
        example: |
          #cloud-config
          runcmd:
          - [touch, /root/cloud-init-worked]
      - name: volumes
        schema: array
        required: false
        description: ''
        example:
          - 123
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/actions
    method: getAll
    httpMethod: get
    tag: Server Actions
    typeScriptTag: serverActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Server Actions
    typeScriptTag: serverActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}
    method: deleteServer
    httpMethod: delete
    tag: Servers
    typeScriptTag: servers
    description: Delete a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}
    method: getServer
    httpMethod: get
    tag: Servers
    typeScriptTag: servers
    description: Get a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}
    method: updateServer
    httpMethod: put
    tag: Servers
    typeScriptTag: servers
    description: Update a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: my-server
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Server Actions
    typeScriptTag: serverActions
    description: Get all Actions for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Resource.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}/actions/add_to_placement_group
    method: addToPlacementGroup
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Add a Server to a Placement Group
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: placement_group
        schema: integer
        required: true
        description: ''
        example: 1
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/attach_iso
    method: attachIsoToServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Attach an ISO to a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: iso
        schema: string
        required: true
        description: ''
        example: FreeBSD-11.0-RELEASE-amd64-dvd1
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/attach_to_network
    method: attachToNetwork
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Attach a Server to a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: alias_ips
        schema: array
        required: false
        description: ''
        example:
          - 10.0.1.2
      - name: ip
        schema: string
        required: false
        description: ''
        example: 10.0.1.1
      - name: network
        schema: integer
        required: true
        description: ''
        example: 4711
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/change_alias_ips
    method: changeAliasIps
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Change alias IPs of a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: alias_ips
        schema: array
        required: true
        description: ''
        example:
          - 10.0.1.2
      - name: network
        schema: integer
        required: true
        description: ''
        example: 4711
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/change_dns_ptr
    method: changeDnsPtr
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Change reverse DNS entry for this Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: dns_ptr
        schema: string
        required: true
        description: ''
        example: server01.example.com
      - name: ip
        schema: string
        required: true
        description: ''
        example: 1.2.3.4
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/change_protection
    method: changeProtection
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Change Server Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
      - name: rebuild
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/change_type
    method: changeServerType
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Change the Type of a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: server_type
        schema: string
        required: true
        description: ''
        example: cx11
      - name: upgrade_disk
        schema: boolean
        required: true
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/create_image
    method: createImage
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Create Image from a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: description
        schema: string
        description: ''
        example: my image
      - name: labels
        schema: object
        description: ''
      - name: type
        schema: string
        description: ''
        example: snapshot
        default: snapshot
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/detach_from_network
    method: detachFromNetwork
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Detach a Server from a Network
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: network
        schema: integer
        required: true
        description: ''
        example: 4711
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/detach_iso
    method: detachIsoFromServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Detach an ISO from a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/disable_backup
    method: disableBackup
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Disable Backups for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/disable_rescue
    method: disableRescueMode
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Disable Rescue Mode for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/enable_backup
    method: enableBackup
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Enable and Configure Backups for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/enable_rescue
    method: enableRescueMode
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Enable Rescue Mode for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: ssh_keys
        schema: array
        description: ''
        example:
          - 2323
      - name: type
        schema: string
        description: ''
        default: linux64
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/poweroff
    method: powerOffServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Power off a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/poweron
    method: powerOnServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Power on a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/reboot
    method: softRebootServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Soft-reboot a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/rebuild
    method: rebuildServerFromImage
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Rebuild a Server from an Image
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: image
        schema: string
        required: true
        description: ''
        example: ubuntu-20.04
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/remove_from_placement_group
    method: removeFromPlacementGroup
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Remove from Placement Group
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/request_console
    method: requestConsole
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Request Console for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/reset
    method: resetServer
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Reset a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/reset_password
    method: resetServerPassword
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Reset root Password of a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/shutdown
    method: gracefulShutdown
    httpMethod: post
    tag: Server Actions
    typeScriptTag: serverActions
    description: Shutdown a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /servers/{id}/actions/{action_id}
    method: getActionById
    httpMethod: get
    tag: Server Actions
    typeScriptTag: serverActions
    description: Get an Action for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /servers/{id}/metrics
    method: getMetricsForServer
    httpMethod: get
    tag: Servers
    typeScriptTag: servers
    description: Get Metrics for a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Server
        example: 0
      - name: type
        schema: string
        required: true
        description: Type of metrics to get
        example: TYPE
      - name: start
        schema: string
        required: true
        description: Start of period to get Metrics for (in ISO-8601 format)
        example: START
      - name: end
        schema: string
        required: true
        description: End of period to get Metrics for (in ISO-8601 format)
        example: END
      - name: step
        schema: string
        required: false
        description: Resolution of results in seconds
    responses:
      - statusCode: '200'
        description: ''
  - url: /ssh_keys
    method: getAllSshKeys
    httpMethod: get
    tag: SSH Keys
    typeScriptTag: sshKeys
    description: Get all SSH keys
    parameters:
      - name: sort
        schema: string
        required: false
        description: Can be used multiple times.
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: fingerprint
        schema: string
        required: false
        description: >-
          Can be used to filter SSH keys by their fingerprint. The response will
          only contain the SSH key matching the specified fingerprint.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /ssh_keys
    method: createKey
    httpMethod: post
    tag: SSH Keys
    typeScriptTag: sshKeys
    description: Create an SSH key
    parameters:
      - name: labels
        schema: object
        required: false
        description: ''
      - name: name
        schema: string
        required: true
        description: ''
        example: My ssh key
      - name: public_key
        schema: string
        required: true
        description: ''
        example: ssh-rsa AAAjjk76kgf...Xt
    responses:
      - statusCode: '201'
        description: ''
  - url: /ssh_keys/{id}
    method: deleteKey
    httpMethod: delete
    tag: SSH Keys
    typeScriptTag: sshKeys
    description: Delete an SSH key
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the SSH key
        example: 0
    responses:
      - statusCode: '204'
        description: SSH key deleted
  - url: /ssh_keys/{id}
    method: getById
    httpMethod: get
    tag: SSH Keys
    typeScriptTag: sshKeys
    description: Get a SSH key
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the SSH key
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /ssh_keys/{id}
    method: updateKey
    httpMethod: put
    tag: SSH Keys
    typeScriptTag: sshKeys
    description: Update an SSH key
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the SSH key
        example: 0
      - name: labels
        schema: object
        description: ''
        example:
          labelkey: value
      - name: name
        schema: string
        description: ''
        example: My ssh key
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes
    method: getAll
    httpMethod: get
    tag: Volumes
    typeScriptTag: volumes
    description: Get all Volumes
    parameters:
      - name: status
        schema: string
        required: false
        description: >-
          Can be used multiple times. The response will only contain Volumes
          matching the status.
      - name: sort
        schema: string
        required: false
        description: >
          Sort resources by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: name
        schema: string
        required: false
        description: >
          Filter resources by their name. The response will only contain the
          resources

          matching the specified name.
      - name: labelSelector
        schema: string
        required: false
        description: >
          Filter resources by labels. The response will only contain resources
          matching the

          label selector. For more information, see "[Label
          Selector](https://docs.hetzner.cloud)".
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes
    method: createVolume
    httpMethod: post
    tag: Volumes
    typeScriptTag: volumes
    description: Create a Volume
    parameters:
      - name: automount
        schema: boolean
        required: false
        description: ''
        example: false
      - name: format
        schema: string
        required: false
        description: ''
        example: xfs
      - name: labels
        schema: object
        required: false
        description: ''
        example:
          labelkey: value
      - name: location
        schema: string
        required: false
        description: ''
        example: nbg1
      - name: name
        schema: string
        required: true
        description: ''
        example: databases-storage
      - name: server
        schema: integer
        required: false
        description: ''
      - name: size
        schema: integer
        required: true
        description: ''
        example: 42
    responses:
      - statusCode: '201'
        description: ''
  - url: /volumes/actions
    method: getAllActions
    httpMethod: get
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Get all Actions
    parameters:
      - name: id
        schema: integer
        required: false
        description: >
          Filter the actions by ID. Can be used multiple times. The response
          will only contain

          actions matching the specified IDs.
        example: 42
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes/actions/{id}
    method: getActionById
    httpMethod: get
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Get an Action
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Action.
        example: 42
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes/{id}
    method: deleteVolume
    httpMethod: delete
    tag: Volumes
    typeScriptTag: volumes
    description: Delete a Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
    responses:
      - statusCode: '204'
        description: Volume deleted
  - url: /volumes/{id}
    method: getById
    httpMethod: get
    tag: Volumes
    typeScriptTag: volumes
    description: Get a Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes/{id}
    method: updateVolumeProperties
    httpMethod: put
    tag: Volumes
    typeScriptTag: volumes
    description: Update a Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume to update
        example: 0
      - name: labels
        schema: object
        description: ''
      - name: name
        schema: string
        description: ''
        example: database-storage
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes/{id}/actions
    method: getAllActions
    httpMethod: get
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Get all Actions for a Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
      - name: sort
        schema: string
        required: false
        description: >
          Sort actions by field and direction. Can be used multiple times. For
          more

          information, see "[Sorting](https://docs.hetzner.cloud)".
      - name: status
        schema: string
        required: false
        description: >
          Filter the actions by status. Can be used multiple times. The response
          will only

          contain actions matching the specified statuses.
      - name: page
        schema: integer
        required: false
        description: >-
          Page number to return. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 2
        default: 1
      - name: perPage
        schema: integer
        required: false
        description: >-
          Maximum number of entries returned per page. For more information, see
          "[Pagination](https://docs.hetzner.cloud)".
        example: 25
        default: 25
    responses:
      - statusCode: '200'
        description: ''
  - url: /volumes/{id}/actions/attach
    method: attachVolumeToServer
    httpMethod: post
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Attach Volume to a Server
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
      - name: automount
        schema: boolean
        required: false
        description: ''
        example: false
      - name: server
        schema: integer
        required: true
        description: ''
        example: 43
    responses:
      - statusCode: '201'
        description: ''
  - url: /volumes/{id}/actions/change_protection
    method: changeProtectionVolume
    httpMethod: post
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Change Volume Protection
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
      - name: delete
        schema: boolean
        description: ''
        example: true
    responses:
      - statusCode: '201'
        description: ''
  - url: /volumes/{id}/actions/detach
    method: detachVolumeFromServer
    httpMethod: post
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Detach Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
    responses:
      - statusCode: '201'
        description: ''
  - url: /volumes/{id}/actions/resize
    method: changeSize
    httpMethod: post
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Resize Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
      - name: size
        schema: number
        required: true
        description: ''
        example: 50
    responses:
      - statusCode: '201'
        description: ''
  - url: /volumes/{id}/actions/{action_id}
    method: getAction
    httpMethod: get
    tag: Volume Actions
    typeScriptTag: volumeActions
    description: Get an Action for a Volume
    parameters:
      - name: id
        schema: integer
        required: true
        description: ID of the Volume
        example: 0
      - name: actionId
        schema: integer
        required: true
        description: ID of the Action
        example: 0
    responses:
      - statusCode: '200'
        description: ''
numberOfSchemas: 232
apiDescription: >
  This is the official documentation for the Hetzner Cloud API.


  ## Introduction


  The Hetzner Cloud API operates over HTTPS and uses JSON as its data format.
  The API is a RESTful API and utilizes HTTP methods and HTTP status codes to
  specify requests and responses.


  As an alternative to working directly with our API you may also consider to
  use:


  - Our CLI program [hcloud](https://github.com/hetznercloud/cli)

  - Our [library for Go](https://github.com/hetznercloud/hcloud-go)

  - Our [library for Python](https://github.com/hetznercloud/hcloud-python)


  Also you can find a [list of libraries, tools, and integrations on
  GitHub](https://github.com/hetznercloud/awesome-hcloud).


  If you are developing integrations based on our API and your product is Open
  Source you may be eligible for a free one time €50 (excl. VAT) credit on your
  account. Please contact us via the the support page on your Cloud Console and
  let us know the following:


  - The type of integration you would like to develop

  - Link to the GitHub repo you will use for the Project

  - Link to some other Open Source work you have already done (if you have done
  so)


  ## Getting Started


  To get started using the API you first need an API token. Sign in into the
  [Hetzner Cloud Console](https://console.hetzner.cloud/) choose a Project, go
  to `Security` → `API Tokens`, and generate a new token. Make sure to copy the
  token because it won’t be shown to you again. A token is bound to a Project,
  to interact with the API of another Project you have to create a new token
  inside the Project. Let’s say your new token is
  `LRK9DAWQ1ZAEFSrCNEEzLCUwhYX1U3g7wMg4dTlkkDC96fyDuyJ39nVbVjCKSDfj`.


  You’re now ready to do your first request against the API. To get a list of
  all Servers in your Project, issue the example request on the right side using
  [curl](https://curl.se/).


  Make sure to replace the token in the example command with the token you have
  just created. Since your Project probably does not contain any Servers yet,
  the example response will look like the response on the right side. We will
  almost always provide a resource root like `servers` inside the example
  response. A response can also contain a `meta` object with information like
  [Pagination](https://docs.hetzner.cloud).


  **Example Request**


  ```bash

  curl -H "Authorization: Bearer
  LRK9DAWQ1ZAEFSrCNEEzLCUwhYX1U3g7wMg4dTlkkDC96fyDuyJ39nVbVjCKSDfj" \
    https://api.hetzner.cloud/v1/servers
  ```


  **Example Response**


  ```json

  {
    "servers": [],
    "meta": {
      "pagination": {
        "page": 1,
        "per_page": 25,
        "previous_page": null,
        "next_page": null,
        "last_page": 1,
        "total_entries": 0
      }
    }
  }

  ```


  ## Authentication


  All requests to the Hetzner Cloud API must be authenticated via a API token.
  Include your secret API token in every request you send to the API with the
  `Authorization` HTTP header.


  To create a new API token for your Project, switch into the [Hetzner Cloud
  Console](https://console.hetzner.cloud/) choose a Project, go to `Security` →
  `API Tokens`, and generate a new token.


  **Example Authorization header**


  ```http

  Authorization: Bearer
  LRK9DAWQ1ZAEFSrCNEEzLCUwhYX1U3g7wMg4dTlkkDC96fyDuyJ39nVbVjCKSDfj

  ```


  ## Errors


  Errors are indicated by HTTP status codes. Further, the response of the
  request which generated the error contains an error code, an error message,
  and, optionally, error details. The schema of the error details object depends
  on the error code.


  The error response contains the following keys:


  | Keys      |
  Meaning                                                               |

  | --------- |
  --------------------------------------------------------------------- |

  | `code`    | Short string indicating the type of error
  (machine-parsable)          |

  | `message` | Textual description on what has gone
  wrong                            |

  | `details` | An object providing for details on the error (schema depends on
  code) |


  **Example response**


  ```json

  {
    "error": {
      "code": "invalid_input",
      "message": "invalid input in field 'broken_field': is too long",
      "details": {
        "fields": [
          {
            "name": "broken_field",
            "messages": ["is too long"]
          }
        ]
      }
    }
  }

  ```


  ### Error Codes


  | Code                      |
  Description                                                                     
  |

  | ------------------------- |
  --------------------------------------------------------------------------------
  |

  | `forbidden`               | Insufficient permissions for this
  request                                        |

  | `unauthorized`            | Request was made with an invalid or unknown
  token                                |

  | `invalid_input`           | Error while parsing or processing the
  input                                      |

  | `json_error`              | Invalid JSON input in your
  request                                               |

  | `locked`                  | The item you are trying to access is locked
  (there is already an Action running) |

  | `not_found`               | Entity not
  found                                                                 |

  | `rate_limit_exceeded`     | Error when sending too many
  requests                                             |

  | `resource_limit_exceeded` | Error when exceeding the maximum quantity of a
  resource for an account           |

  | `resource_unavailable`    | The requested resource is currently
  unavailable                                  |

  | `server_error`            | Error within the API
  backend                                                     |

  | `service_error`           | Error within a
  service                                                           |

  | `uniqueness_error`        | One or more of the objects fields must be
  unique                                 |

  | `protected`               | The Action you are trying to start is protected
  for this resource                |

  | `maintenance`             | Cannot perform operation due to
  maintenance                                      |

  | `conflict`                | The resource has changed during the request,
  please retry                        |

  | `unsupported_error`       | The corresponding resource does not support the
  Action                           |

  | `token_readonly`          | The token is only allowed to perform GET
  requests                                |

  | `unavailable`             | A service or product is currently not
  available                                  |


  **invalid_input**


  ```json

  {
    "error": {
      "code": "invalid_input",
      "message": "invalid input in field 'broken_field': is too long",
      "details": {
        "fields": [
          {
            "name": "broken_field",
            "messages": ["is too long"]
          }
        ]
      }
    }
  }

  ```


  **uniqueness_error**


  ```json

  {
    "error": {
      "code": "uniqueness_error",
      "message": "SSH key with the same fingerprint already exists",
      "details": {
        "fields": [
          {
            "name": "public_key"
          }
        ]
      }
    }
  }

  ```


  **resource_limit_exceeded**


  ```json

  {
    "error": {
      "code": "resource_limit_exceeded",
      "message": "project limit exceeded",
      "details": {
        "limits": [
          {
            "name": "project_limit"
          }
        ]
      }
    }
  }

  ```


  ## Labels


  Labels are `key/value` pairs that can be attached to all resources.


  Valid label keys have two segments: an optional prefix and name, separated by
  a slash (`/`). The name segment is required and must be a string of 63
  characters or less, beginning and ending with an alphanumeric character
  (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and
  alphanumerics between. The prefix is optional. If specified, the prefix must
  be a DNS subdomain: a series of DNS labels separated by dots (`.`), not longer
  than 253 characters in total, followed by a slash (`/`).


  Valid label values must be a string of 63 characters or less and must be empty
  or begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes
  (`-`), underscores (`_`), dots (`.`), and alphanumerics between.


  The `hetzner.cloud/` prefix is reserved and cannot be used.


  **Example Labels**


  ```json

  {
    "labels": {
      "environment": "development",
      "service": "backend",
      "example.com/my": "label",
      "just-a-key": ""
    }
  }

  ```


  ## Label Selector


  For resources with labels, you can filter resources by their labels using the
  label selector query language.


  | Expression           | Meaning                                             
  |

  | -------------------- | ----------------------------------------------------
  |

  | `k==v` / `k=v`       | Value of key `k` does equal value `v`               
  |

  | `k!=v`               | Value of key `k` does not equal value `v`           
  |

  | `k`                  | Key `k` is present                                  
  |

  | `!k`                 | Key `k` is not present                              
  |

  | `k in (v1,v2,v3)`    | Value of key `k` is `v1`, `v2`, or `v3`             
  |

  | `k notin (v1,v2,v3)` | Value of key `k` is neither `v1`, nor `v2`, nor `v3`
  |

  | `k1==v,!k2`          | Value of key `k1` is `v` and key `k2` is not present
  |


  ### Examples


  - Returns all resources that have a `env=production` label and that don't have
  a `type=database` label:

    `env=production,type!=database`

  - Returns all resources that have a `env=testing` or `env=staging` label:

    `env in (testing,staging)`

  - Returns all resources that don't have a `type` label:

    `!type`

  ## Pagination


  Responses which return multiple items support pagination. If they do support
  pagination, it can be controlled with following query string parameters:


  - A `page` parameter specifies the page to fetch. The number of the first page
  is 1.

  - A `per_page` parameter specifies the number of items returned per page. The
  default value is 25, the maximum value is 50 except otherwise specified in the
  documentation.


  Responses contain a `Link` header with pagination information.


  Additionally, if the response body is JSON and the root object is an object,
  that object has a `pagination` object inside the `meta` object with pagination
  information:


  **Example Pagination**


  ```json

  {
      "servers": [...],
      "meta": {
          "pagination": {
              "page": 2,
              "per_page": 25,
              "previous_page": 1,
              "next_page": 3,
              "last_page": 4,
              "total_entries": 100
          }
      }
  }

  ```


  The keys `previous_page`, `next_page`, `last_page`, and `total_entries` may be
  `null` when on the first page, last page, or when the total number of entries
  is unknown.


  **Example Pagination Link header**


  ```http

  Link: <https://api.hetzner.cloud/v1/actions?page=2&per_page=5>; rel="prev",
        <https://api.hetzner.cloud/v1/actions?page=4&per_page=5>; rel="next",
        <https://api.hetzner.cloud/v1/actions?page=6&per_page=5>; rel="last"
  ```


  Line breaks have been added for display purposes only and responses may only
  contain some of the above `rel` values.


  ## Rate Limiting


  All requests, whether they are authenticated or not, are subject to rate
  limiting. If you have reached your limit, your requests will be handled with a
  `429 Too Many Requests` error. Burst requests are allowed. Responses contain
  serveral headers which provide information about your current rate limit
  status.


  - The `RateLimit-Limit` header contains the total number of requests you can
  perform per hour.

  - The `RateLimit-Remaining` header contains the number of requests remaining
  in the current rate limit time frame.

  - The `RateLimit-Reset` header contains a UNIX timestamp of the point in time
  when your rate limit will have recovered and you will have the full number of
  requests available again.


  The default limit is 3600 requests per hour and per Project. The number of
  remaining requests increases gradually. For example, when your limit is 3600
  requests per hour, the number of remaining requests will increase by 1 every
  second.


  ## Server Metadata


  Your Server can discover metadata about itself by doing a HTTP request to
  specific URLs. The following data is available:


  | Data              | Format |
  Contents                                                     |

  | ----------------- | ------ |
  ------------------------------------------------------------ |

  | hostname          | text   | Name of the Server as set in the
  api                         |

  | instance-id       | number | ID of the
  server                                             |

  | public-ipv4       | text   | Primary public IPv4
  address                                  |

  | private-networks  | yaml   | Details about the private networks the Server
  is attached to |

  | availability-zone | text   | Name of the availability zone that Server runs
  in            |

  | region            | text   | Network zone, e.g.
  eu-central                                |


  **Example: Summary**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata

  ```


  ```yaml

  availability-zone: hel1-dc2

  hostname: my-server

  instance-id: 42

  public-ipv4: 1.2.3.4

  region: eu-central

  ```


  **Example: Hostname**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/hostname

  my-server

  ```


  **Example: Instance ID**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/instance-id

  42

  ```


  **Example: Public IPv4**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/public-ipv4

  1.2.3.4

  ```


  **Example: Private Networks**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/private-networks

  ```


  ```yaml

  - ip: 10.0.0.2
    alias_ips: [10.0.0.3, 10.0.0.4]
    interface_num: 1
    mac_address: 86:00:00:2a:7d:e0
    network_id: 1234
    network_name: nw-test1
    network: 10.0.0.0/8
    subnet: 10.0.0.0/24
    gateway: 10.0.0.1
  - ip: 192.168.0.2
    alias_ips: []
    interface_num: 2
    mac_address: 86:00:00:2a:7d:e1
    network_id: 4321
    network_name: nw-test2
    network: 192.168.0.0/16
    subnet: 192.168.0.0/24
    gateway: 192.168.0.1
  ```


  **Example: Availability Zone**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/availability-zone

  hel1-dc2

  ```


  **Example: Region**


  ```bash

  $ curl http://169.254.169.254/hetzner/v1/metadata/region

  eu-central

  ```


  ## Sorting


  Some responses which return multiple items support sorting. If they do support
  sorting the documentation states which fields can be used for sorting. You
  specify sorting with the `sort` query string parameter. You can sort by
  multiple fields. You can set the sort direction by appending `:asc` or `:desc`
  to the field name. By default, ascending sorting is used.


  **Example: Sorting**


  ```

  https://api.hetzner.cloud/v1/actions?sort=status

  https://api.hetzner.cloud/v1/actions?sort=status:asc

  https://api.hetzner.cloud/v1/actions?sort=status:desc

  https://api.hetzner.cloud/v1/actions?sort=status:asc&sort=command:desc

  ```


  ## Deprecation Notices


  You can find all announced deprecations in our
  [Changelog](https://docs.hetzner.cloud).
