hash: 88dc81bf2cf3e5beb1f751ed25daa01cc7a5a68ac9d09c5a2f08cdf8befcb9c4
methodObjects:
  - url: /v1/expenses/card
    method: list
    httpMethod: get
    tag: Card Expenses
    typeScriptTag: cardExpenses
    description: List expenses
    parameters:
      - name: expand[]
        schema: array
        required: false
        description: >-
          Get additional details for the expense, e.g. merchant mcc code, by
          passing in `expand[]=merchant`. Query parameters include `location`,
          `department`, `merchant`, `receipts.download_uris`, `user`, `budget`
          and `payment`.
      - name: userId[]
        schema: array
        required: false
        description: Get expenses belong to provided user(s).
      - name: parentExpenseId[]
        schema: array
        required: false
        description: Get itemized expenses belong to provided parent expenses ID(s).
      - name: budgetId[]
        schema: array
        required: false
        description: ''
      - name: status[]
        schema: array
        required: false
        description: ''
      - name: paymentStatus[]
        schema: array
        required: false
        description: ''
      - name: purchasedAtStart
        schema: string
        required: false
        description: >

          Shows only expenses with a `purchased_at` on or after this date-time.
          This parameter is the date-time notation as defined by [RFC 3339,
          section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g.
          2022-11-12T23:59:59.999
      - name: purchasedAtEnd
        schema: string
        required: false
        description: >

          Shows only expenses with a `purchased_at` on or before this date-time.
          This parameter is the date-time notation as defined by [RFC 3339,
          section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g.
          2022-11-12T23:59:59.999
      - name: cursor
        schema: string
        required: false
        description: >

          The cursor to use for pagination. This is the `next_cursor` value
          returned from the previous response.
      - name: limit
        schema: integer
        required: false
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
  - url: /v1/expenses/card/receipt_match
    method: createNewReceiptMatch
    httpMethod: post
    tag: Receipt Match
    typeScriptTag: receiptMatch
    description: Create a new receipt match
    parameters:
      - name: receipt_name
        schema: string
        required: true
        description: ''
    responses:
      - statusCode: '200'
        description: |
          The pre-signed file upload URI and unique identifier of the request.
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
  - url: /v1/expenses/card/{expense_id}
    method: getById
    httpMethod: get
    tag: Card Expenses
    typeScriptTag: cardExpenses
    description: Get an expense
    parameters:
      - name: expenseId
        schema: string
        required: true
        description: ''
      - name: expand[]
        schema: array
        required: false
        description: >-
          Get additional details for the expense, e.g. merchant mcc code, by
          passing in `expand[]=merchant`. Query parameters include `location`,
          `department`, `merchant`, `receipts.download_uris`, `user`, `budget`
          and `payment`.
    responses:
      - statusCode: '200'
        description: >-
          The expense object that has expandable fields, e.g., `location`,
          `department`, and `receipts`.
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
  - url: /v1/expenses/card/{expense_id}
    method: updateExpense
    httpMethod: put
    tag: Card Expenses
    typeScriptTag: cardExpenses
    description: Update an expense
    parameters:
      - name: expenseId
        schema: string
        required: true
        description: ''
      - name: memo
        schema: string
        description: ''
    responses:
      - statusCode: '200'
        description: ''
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
  - url: /v1/expenses/card/{expense_id}/receipt_upload
    method: createNewReceipt
    httpMethod: post
    tag: Receipt Upload
    typeScriptTag: receiptUpload
    description: Create a new receipt upload
    parameters:
      - name: expenseId
        schema: string
        required: true
        description: ''
      - name: receipt_name
        schema: string
        required: true
        description: ''
    responses:
      - statusCode: '200'
        description: |
          The pre-signed file upload URI and unique identifier of the request.
      - statusCode: '400'
        description: Bad request
      - statusCode: '401'
        description: Unauthorized
      - statusCode: '403'
        description: Forbidden
      - statusCode: '404'
        description: Not Found
numberOfSchemas: 19
apiDescription: |

  The Expenses API allows you to manage accounting and expenses information.
