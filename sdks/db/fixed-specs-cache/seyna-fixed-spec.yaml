publishJson:
  company: Seyna
  serviceName: false
  sdkName: seyna-{language}-sdk
  clientName: Seyna
  metaDescription: >-
    Seyna est la plateforme pour les courtiers en assurance. En combinant
    produits d'assurance sur mesure et technologie, la plateforme Seyna permet
    aux courtiers de focaliser sur l'essentiel : leurs clients. Les courtiers
    opérant sur Seyna peuvent se concentrer sur l'expérience client en
    automatisant les tâches administratives et de conformité ainsi qu'en créant
    des expériences assurantielles sur-mesure. Infrastructure ouverte, les
    courtiers peuvent adapter Seyna à leurs besoins, brancher leur ecosystème de
    prestataires et piloter toute leur activité via une seule interface.


    Aujourd'hui, plus de 90 courtiers d'assurance et retailers font déjà appel à
    Seyna pour protéger plus de 1 million de clients. Mais l'histoire ne
    s'arrête pas là. Seyna nourrit des ambitions mondiales et entend changer la
    façon dont l'ensemble du secteur protège les clients.
  apiStatusUrls: inherit
  homepage: seyna.eu
  developerDocumentation: developers.seyna.eu
  categories:
    - insurance
rawSpecString: |
  components:
    schemas:
      aml-alert:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            format: uuid
            type: string
          matches:
            type: array
            items:
              $ref: '#/components/schemas/aml-match'
          recordId:
            format: uuid
            type: string
          status:
            type: string
            enum:
              - CREATED
              - IN_PROGRESS
              - RESOLVED
          threadId:
            format: uuid
            type: string
          updatedAt:
            type: string
            format: date-time
        required:
          - createdAt
          - id
          - matches
          - status
          - threadId
          - updatedAt
      aml-alertCreatedEvent:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            type: string
          type:
            type: string
            enum:
              - AlertCreatedEvent
        required:
          - createdAt
          - id
          - type
      aml-alertStatusChangedEvent:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            type: string
          actor:
            type: string
          newStatus:
            type: string
            enum:
              - CREATED
              - IN_PROGRESS
              - RESOLVED
          previousStatus:
            type: string
            enum:
              - CREATED
              - IN_PROGRESS
              - RESOLVED
          type:
            type: string
            enum:
              - AlertStatusChangedEvent
        required:
          - createdAt
          - id
          - actor
          - newStatus
          - previousStatus
          - type
      aml-businessEntity:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          datasetId:
            type: string
          deletedAt:
            type: string
            format: date-time
            nullable: true
          externalId:
            type: string
          id:
            type: string
          name:
            type: string
          sourceUrl:
            type: string
          type:
            allOf:
              - type: string
                enum:
                  - PERSON
                  - BUSINESS
              - type: string
                enum:
                  - BUSINESS
          updatedAt:
            type: string
            format: date-time
          identification:
            type: string
            nullable: true
        required:
          - createdAt
          - datasetId
          - deletedAt
          - id
          - name
          - type
          - updatedAt
      aml-comment:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            type: string
          author:
            type: string
          content:
            type: string
          type:
            type: string
            enum:
              - Comment
        required:
          - createdAt
          - id
          - author
          - content
          - type
      aml-dataset:
        type: object
        properties:
          countries:
            minItems: 1
            type: array
            items:
              type: string
          createdAt:
            type: string
            format: date-time
          description:
            type: string
          id:
            type: string
          link:
            type: string
          name:
            type: string
          updatedAt:
            type: string
            format: date-time
        required:
          - countries
          - createdAt
          - description
          - id
          - link
          - name
          - updatedAt
      aml-emailRequest:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            type: string
          body:
            type: string
          recipients:
            type: array
            items:
              type: string
          sender:
            type: string
          subject:
            type: string
          type:
            type: string
            enum:
              - EmailRequest
        required:
          - createdAt
          - id
          - body
          - recipients
          - sender
          - subject
          - type
      aml-emailResponse:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            type: string
          body:
            type: string
          sender:
            type: string
          subject:
            type: string
          type:
            type: string
            enum:
              - EmailResponse
        required:
          - createdAt
          - id
          - body
          - sender
          - subject
          - type
      aml-entity:
        anyOf:
          - $ref: '#/components/schemas/aml-businessEntity'
          - $ref: '#/components/schemas/aml-personEntity'
      aml-match:
        type: object
        properties:
          alertId:
            type: string
          createdAt:
            type: string
            format: date-time
          entityId:
            type: string
          id:
            type: string
          score:
            type: number
          updatedAt:
            type: string
            format: date-time
        required:
          - alertId
          - createdAt
          - entityId
          - id
          - score
          - updatedAt
      aml-personEntity:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          datasetId:
            type: string
          deletedAt:
            type: string
            format: date-time
            nullable: true
          externalId:
            type: string
          id:
            type: string
          name:
            type: string
          sourceUrl:
            type: string
          type:
            allOf:
              - type: string
                enum:
                  - PERSON
                  - BUSINESS
              - type: string
                enum:
                  - PERSON
          updatedAt:
            type: string
            format: date-time
          birthdate:
            type: string
            nullable: true
        required:
          - createdAt
          - datasetId
          - deletedAt
          - id
          - name
          - type
          - updatedAt
      aml-product:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          id:
            format: uuid
            type: string
          name:
            type: string
          referents:
            type: array
            items:
              format: email
              type: string
          risk:
            type: string
            enum:
              - HIGH
              - MEDIUM
              - LOW
          updatedAt:
            type: string
            format: date-time
        required:
          - createdAt
          - id
          - name
          - referents
          - risk
          - updatedAt
      aml-businessRecord:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          createdBy:
            type: string
          endDate:
            format: date
            type: string
            nullable: true
          externalLink:
            type: string
            nullable: true
          externalRef:
            type: string
            nullable: true
          id:
            type: string
          lastCheckedAt:
            type: string
            format: date-time
            nullable: true
          name:
            type: string
          productId:
            format: uuid
            type: string
          startDate:
            format: date
            type: string
            nullable: true
          status:
            type: string
            enum:
              - PENDING_INITIAL_CHECK
              - NEW_ALERT
              - OK_NO_ALERTS
              - OK_ALL_ALERTS_RESOLVED
          updatedAt:
            type: string
            format: date-time
          updatedBy:
            type: string
          identification:
            type: string
            nullable: true
          type:
            type: string
            enum:
              - BUSINESS
        required:
          - createdAt
          - createdBy
          - endDate
          - id
          - lastCheckedAt
          - name
          - productId
          - startDate
          - status
          - updatedAt
          - updatedBy
          - identification
          - type
      aml-personRecord:
        type: object
        properties:
          createdAt:
            type: string
            format: date-time
          createdBy:
            type: string
          endDate:
            format: date
            type: string
            nullable: true
          externalLink:
            type: string
            nullable: true
          externalRef:
            type: string
            nullable: true
          id:
            type: string
          lastCheckedAt:
            type: string
            format: date-time
            nullable: true
          name:
            type: string
          productId:
            format: uuid
            type: string
          startDate:
            format: date
            type: string
            nullable: true
          status:
            type: string
            enum:
              - PENDING_INITIAL_CHECK
              - NEW_ALERT
              - OK_NO_ALERTS
              - OK_ALL_ALERTS_RESOLVED
          updatedAt:
            type: string
            format: date-time
          updatedBy:
            type: string
          birthdate:
            format: date
            type: string
            nullable: true
          type:
            type: string
            enum:
              - PERSON
        required:
          - createdAt
          - createdBy
          - endDate
          - id
          - lastCheckedAt
          - name
          - productId
          - startDate
          - status
          - updatedAt
          - updatedBy
          - birthdate
          - type
      aml-record:
        anyOf:
          - $ref: '#/components/schemas/aml-businessRecord'
          - $ref: '#/components/schemas/aml-personRecord'
      aml-timelineItem:
        anyOf:
          - $ref: '#/components/schemas/aml-alertCreatedEvent'
          - $ref: '#/components/schemas/aml-alertStatusChangedEvent'
          - $ref: '#/components/schemas/aml-comment'
          - $ref: '#/components/schemas/aml-emailRequest'
          - $ref: '#/components/schemas/aml-emailResponse'
  info:
    title: documentation seyna
    version: 2024-02
    description: documentation seyna - OpenAPI 3.0
  openapi: 3.0.3
  paths:
    /aml/alerts/{id}:
      get:
        tags:
          - Alerts
        description: Get an alert by ID.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: An alert and its matches
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-alert'
      patch:
        tags:
          - Alerts
        description: Update an alert's status.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - CREATED
                      - IN_PROGRESS
                      - RESOLVED
                required:
                  - status
          required: true
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The updated alert.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-alert'
    /aml/alerts/{id}/timeline:
      get:
        tags:
          - Alerts
        description: List an alert's timeline items.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: All timeline items of the alert.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/aml-timelineItem'
    /aml/datasets:
      get:
        tags:
          - Datasets
        description: Get all available datasets.
        parameters:
          - schema:
              format: uuid
              type: string
            in: query
            name: productId
            required: false
        responses:
          '200':
            description: All available datasets.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/aml-dataset'
    /aml/datasets/{id}:
      get:
        tags:
          - Datasets
        description: Get a dataset by ID.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: A dataset.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-dataset'
    /aml/entities/{id}:
      get:
        tags:
          - Entities
        description: Get an entity by ID.
        parameters:
          - schema:
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: An entity.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-entity'
    /aml/entities/{id}/dataset:
      get:
        tags:
          - Entities
          - Datasets
        description: Get an entity's dataset.
        parameters:
          - schema:
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The dataset of the entity.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-dataset'
    /aml/products/{id}:
      get:
        tags:
          - Products
        description: Get a product by ID.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: A product.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-product'
      patch:
        tags:
          - Products
        description: Edit a product's config.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  referents:
                    type: array
                    items:
                      format: email
                      type: string
                  risk:
                    type: string
                    enum:
                      - HIGH
                      - MEDIUM
                      - LOW
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The updated product.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-product'
    /aml/products/{id}/datasets:
      get:
        tags:
          - Datasets
          - Products
        description: Get a product's datasets.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The datasets of a product.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/aml-dataset'
    /aml/products/{id}/alerts:
      get:
        tags:
          - Products
          - Alerts
        description: Get a product's alerts.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: All alerts of a product.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/aml-alert'
    /aml/records:
      get:
        tags:
          - Records
        description: Get paginated records of a product.
        parameters:
          - schema:
              type: string
              nullable: true
            in: query
            name: after
            required: false
          - schema:
              type: string
              nullable: true
            in: query
            name: before
            required: false
          - schema:
              minimum: 1
              maximum: 100
              type: integer
              nullable: true
            in: query
            name: first
            required: false
          - schema:
              minimum: 1
              maximum: 100
              type: integer
              nullable: true
            in: query
            name: last
            required: false
          - schema:
              type: string
              enum:
                - ASC
                - DESC
              nullable: true
            in: query
            name: order
            required: false
          - schema:
              type: string
            in: query
            name: productId
            required: true
          - schema:
              anyOf:
                - type: string
                  enum:
                    - PERSON
                - type: string
                  enum:
                    - BUSINESS
            in: query
            name: type
            required: false
        responses:
          '200':
            description: Paginated records of that product.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    edges:
                      type: array
                      items:
                        type: object
                        properties:
                          cursor:
                            type: string
                          node:
                            $ref: '#/components/schemas/aml-record'
                        required:
                          - cursor
                          - node
                    nodes:
                      type: array
                      items:
                        $ref: '#/components/schemas/aml-record'
                    pageInfo:
                      type: object
                      properties:
                        endCursor:
                          type: string
                          nullable: true
                        hasNextPage:
                          type: boolean
                        hasPreviousPage:
                          type: boolean
                        startCursor:
                          type: string
                          nullable: true
                      required:
                        - hasNextPage
                        - hasPreviousPage
                  required:
                    - edges
                    - nodes
                    - pageInfo
      post:
        tags:
          - Records
        description: Create a record.
        requestBody:
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      endDate:
                        format: date
                        type: string
                        nullable: true
                      externalLink:
                        type: string
                        nullable: true
                      externalRef:
                        type: string
                        nullable: true
                      name:
                        type: string
                      productId:
                        format: uuid
                        type: string
                      birthdate:
                        format: date
                        type: string
                        nullable: true
                      type:
                        type: string
                        enum:
                          - PERSON
                    required:
                      - name
                      - productId
                      - birthdate
                      - type
                  - type: object
                    properties:
                      endDate:
                        format: date
                        type: string
                        nullable: true
                      externalLink:
                        type: string
                        nullable: true
                      externalRef:
                        type: string
                        nullable: true
                      name:
                        type: string
                      productId:
                        format: uuid
                        type: string
                      identification:
                        type: string
                        nullable: true
                      type:
                        type: string
                        enum:
                          - BUSINESS
                    required:
                      - name
                      - productId
                      - identification
                      - type
        responses:
          '201':
            description: The created record.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-record'
    /aml/records/{id}:
      get:
        tags:
          - Records
        description: Get a record by ID.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: A record.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-record'
      patch:
        tags:
          - Records
        description: 'Update a record''s data : end date, external Link or external Ref.'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  endDate:
                    format: date
                    type: string
                  externalLink:
                    type: string
                    nullable: true
                  externalRef:
                    type: string
                    nullable: true
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The updated record.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-record'
    /aml/records/{id}/product:
      get:
        tags:
          - Records
          - Products
        description: Get a record's product.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The product of a record.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/aml-product'
    /aml/records/{id}/alerts:
      get:
        tags:
          - Records
          - Alerts
        description: Get a record's alerts.
        parameters:
          - schema:
              format: uuid
              type: string
            in: path
            name: id
            required: true
        responses:
          '200':
            description: The alerts of a record.
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/aml-alert'
    /batch/aml/records:
      post:
        tags:
          - Records
        description: Create several records in batch.
        requestBody:
          content:
            application/json:
              schema:
                anyOf:
                  - maxItems: 10000
                    type: array
                    items:
                      type: object
                      properties:
                        endDate:
                          format: date
                          type: string
                          nullable: true
                        externalLink:
                          type: string
                          nullable: true
                        externalRef:
                          type: string
                          nullable: true
                        name:
                          type: string
                        productId:
                          format: uuid
                          type: string
                        birthdate:
                          format: date
                          type: string
                          nullable: true
                        type:
                          type: string
                          enum:
                            - PERSON
                      required:
                        - name
                        - productId
                        - birthdate
                        - type
                  - maxItems: 10000
                    type: array
                    items:
                      type: object
                      properties:
                        endDate:
                          format: date
                          type: string
                          nullable: true
                        externalLink:
                          type: string
                          nullable: true
                        externalRef:
                          type: string
                          nullable: true
                        name:
                          type: string
                        productId:
                          format: uuid
                          type: string
                        identification:
                          type: string
                          nullable: true
                        type:
                          type: string
                          enum:
                            - BUSINESS
                      required:
                        - name
                        - productId
                        - identification
                        - type
        responses:
          '202':
            description: The batch has been accepted and is being processed.
            content:
              application/json:
                schema:
                  type: string
                  enum:
                    - Accepted
  x-tagGroups:
    - name: AML Tools
      tags:
        - Alerts
        - Datasets
        - Entities
        - Products
        - Records
  servers:
    - url: https://gw.seyna.eu/2024-02
konfigCliVersion: 1.38.61
