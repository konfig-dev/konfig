publishJson:
  company: Partna
  serviceName: false
  sdkName: partna-{language}-sdk
  clientName: Partna
  metaDescription: >-
    Modern companies use Partna's API and B2B payment tools to smoothly launch
    and operate in Africa
  apiStatusUrls: inherit
  homepage: getpartna.com/
  developerDocumentation: docs.getpartna.com/
  categories:
    - developer_tools
    - finance
    - payments
    - africa
rawSpecString: |
  components:
    securitySchemes:
      ApiKey:
        in: header
        name: X-Api-Key
        type: apiKey
      ApiUser:
        in: header
        name: X-Api-User
        type: apiKey
      UserVersion:
        in: header
        name: X-User-Version
        type: apiKey
      AdminSecret:
        in: header
        name: X-Admin-Secret
        type: apiKey
  info:
    description: Coinprofile business API
    title: Coinprofile business API
    version: 1.0.0
  openapi: 3.0.2
  paths:
    /transaction:
      get:
        description: Retrieves all user transactions
        operationId: get-transactions
        parameters:
          - description: >-
              Currency for which transactions are to be retrieved. When this is
              not supplied, transactions will be retrieved for all available
              currencies.
            in: query
            name: currency
            schema:
              enum:
                - NGN
                - USD
              type: string
          - description: >-
              Type of transactions to be retrieved. When this is not supplied,
              transactions will be retrieved for all available types.
            in: query
            name: type
            schema:
              enum:
                - deposit
                - withdrawal
                - sent
                - transfer
                - internalTransfer
                - conversion
              type: string
          - description: Number of pages to be retrieved.
            in: query
            name: page
            schema:
              type: number
          - description: Number of transaction records to be retrieved per page page.
            in: query
            name: limit
            schema:
              type: number
          - description: Duration of the transaction to be retrieved per page page.
            in: query
            name: duration
            schema:
              enum:
                - one day
                - one week
                - one month
                - one year
              type: number
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        data:
                          items:
                            properties:
                              amount:
                                format: int32
                                type: number
                              businessId:
                                type: string
                              createdAt:
                                format: date-time
                                type: string
                              currency:
                                type: string
                              date:
                                type: string
                              fee:
                                format: int32
                                type: number
                              fromAmount:
                                format: int32
                                type: number
                              fromCurrency:
                                type: string
                              isFromRegUser:
                                type: boolean
                              prevBalance:
                                format: int32
                                type: number
                              sender:
                                type: string
                              senderPrevbalance:
                                format: int32
                                type: number
                              status:
                                type: string
                              transactionId:
                                type: string
                              type:
                                type: string
                              updatedAt:
                                format: date-time
                                type: string
                              username:
                                type: string
                              version:
                                type: string
                            type: object
                          type: array
                        page:
                          format: int32
                          type: number
                        pages:
                          format: int32
                          type: number
                        perPage:
                          format: int32
                          type: number
                        total:
                          format: int32
                          type: number
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Retrieve user's transaction records
    /v1/balance:
      get:
        description: Retrieves account balance for the selected currency
        operationId: get-balance
        parameters:
          - description: One of supported currencies
            in: query
            name: currency
            required: true
            schema:
              enum:
                - NGN
                - USD
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        amount:
                          description: Merchant's balance amount
                          format: int32
                          type: integer
                        currency:
                          description: The currency passed by merchant
                          type: string
                        merchant:
                          description: Merchant'susername
                          type: string
                        txnCount:
                          description: >-
                            Total count of voucher redeemption for a given
                            merchant
                          format: int32
                          type: integer
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Retrieve merchant account balance
        tags:
          - Balance
    /v1/merchants:
      get:
        description: >-
          Retrieves merchant record - username, email, callback URL, merchant
          logo, creditCurrency, API key expiry date-time
        operationId: get-merchant
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        creditCurrency:
                          description: Merchant's credit currency
                          enum:
                            - NGN
                            - USD
                          type: string
                        email:
                          description: Merchant email address
                          type: string
                        expires:
                          description: API key expiry date and time
                          example: '2023-10-03T09:21:05.197Z'
                          format: date-time
                          type: string
                        logo:
                          description: Merchant logo URL
                          example: https://www.example.com/favicon
                          type: string
                        username:
                          description: Merchant username
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Retrieve merchant record
        tags:
          - Merchants
      patch:
        description: Updates merchant record
        operationId: update-merchant
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  callbackUrl:
                    description: Merchant callback URL. Webhook will be sent to this URL.
                    example: https://www.example.com/webhook/ventogram
                    type: string
                  creditCurrency:
                    description: >-
                      Merchants can set this property to their desired currency.
                      Their balance on Ventogram will be credited with this
                      currency when their users redeem voucher created on
                      Ventogram. Conversion between different currencies will be
                      performed at the rate which is obtainable at the time of
                      redeeming the voucher. If this is not set by the merchant, 
                      their balance will be credited with the currency used in
                      creating the voucher.
                    enum:
                      - NGN
                      - USD
                      - ''
                    type: string
                  feeBearer:
                    description: Bearer of the voucher fee
                    enum:
                      - client
                      - merchant
                    example: client
                    type: string
                  logo:
                    description: Merchant logo URL
                    example: https://www.example.com/favicon
                    type: string
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        callbackUrl:
                          type: string
                        creditCurrency:
                          enum:
                            - NGN
                            - USD
                          type: string
                        feeBearer:
                          type: string
                        logo:
                          type: string
                        username:
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Update merchant record
        tags:
          - Merchants
    /v1/mock/payment:
      post:
        description: Sends a mock payment request (only in staging environment)
        operationId: mock-payment
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  amount:
                    description: >-
                      Amount to pay. This can be used to simulate overpayment and
                      underpayment in staging environment. If this field is not
                      provided, the expected amount will be paid.
                    format: int32
                    type: integer
                  voucherId:
                    description: ID of the voucher to be paid
                    type: string
                required:
                  - voucherId
                type: object
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '400':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        summary: Make a mock payment
        tags:
          - Mock Payment
    /v1/currency/rates:
      get:
        description: Retrieves conversion rates for all supported currencies
        operationId: get-rates
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        USDNGN:
                          properties:
                            description:
                              description: description text
                              type: string
                            rateKey:
                              description: Ventogram signed rate key
                              type: string
                            value:
                              description: 1 USD is equal to 500 NGN in this example
                              example: 490
                              format: int32
                              type: integer
                          type: object
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        summary: Retrieves conversion rates
        tags:
          - Rates
    /v1/transactions/summary:
      get:
        description: Retrieves transaction summary for the selected currency for a merchant
        operationId: get-summary
        parameters:
          - description: One of supported currencies
            in: query
            name: currency
            required: true
            schema:
              enum:
                - NGN
                - USD
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        totalPaid:
                          description: Total count of paid vouchers
                          format: int32
                          type: integer
                        totalRedeemed:
                          description: Total count of redeemed vouchers
                          format: int32
                          type: integer
                        totalUnpaid:
                          description: Total count of unpaid vouchers
                          format: int32
                          type: integer
                        totalUnredeemed:
                          description: Total count of unredeemed vouchers
                          format: int32
                          type: integer
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Retrieve merchant transaction summary
        tags:
          - Transactions
    /v1/vouchers:
      post:
        description: Creates a new voucher payment for a user
        operationId: create-voucher
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  amount:
                    description: Required voucher amount
                    format: int32
                    type: integer
                  currency:
                    description: Required voucher currency
                    enum:
                      - NGN
                      - USD
                    type: string
                  email:
                    description: User email
                    type: string
                  fullname:
                    description: Fullname of the user creating voucher
                    type: string
                  rateKey:
                    description: >-
                      This is a Ventogram-signed rate key. If provided when a
                      voucher is created, the conversion will use the rate signed
                      with this key if it is valid at the time of redeeming a
                      voucher. Conversion will use the current rate if key has
                      expired.
                    type: string
                required:
                  - email
                  - amount
                  - currency
                  - fullname
                type: object
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        id:
                          description: Voucher unique id
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '400':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example:
                        - email is required
                        - Invalid or expired rateKey
                      items:
                        type: string
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Create a new voucher payment
        tags:
          - Voucher
      get:
        description: >-
          Retrieves an existing voucher record(s). When no query param is
          provided, all the voucher record for the merchant will be returned. If
          accountNumber field is provided in the query, all the voucher records
          associated with the given accountNumber for the merchant will be
          returned.
        operationId: get-voucher
        parameters:
          - description: Voucher id
            in: query
            name: id
            schema:
              type: string
          - description: Voucher memo or reference number
            in: query
            name: memo
            schema:
              type: string
          - description: The account number used to pay for voucher
            in: query
            name: accountNumber
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      items:
                        properties:
                          accountType:
                            description: >-
                              Type of created bank account. Note that this
                              property is only available in v2.
                            enum:
                              - dynamic
                              - static
                            type: string
                          amount:
                            type: number
                          cancelledAt:
                            description: >-
                              This property is optional. Only available if the
                              voucher has been cancelled.
                            format: date-time
                            type: string
                          createdAt:
                            type: string
                          currency:
                            type: string
                          dateRedeemed:
                            description: >-
                              Timestamp of when the voucher was redeemed. If
                              voucher has not been redeemed, this field is
                              undefined.
                            format: date-time
                            type: string
                          email:
                            type: string
                          fee:
                            type: number
                          feeBearer:
                            type: string
                          fullname:
                            type: string
                          id:
                            type: string
                          memo:
                            type: string
                          merchant:
                            type: string
                          paymentExpiresAt:
                            format: date-time
                            type: string
                          paymentStatus:
                            enum:
                              - paid
                              - unpaid
                              - declined
                            type: string
                          voucherCode:
                            description: Voucher code. Present only if voucher has been paid
                            type: string
                        type: object
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '404':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example: []
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Retrieve voucher record
        tags:
          - Voucher
      patch:
        description: Redeems an existing unused voucher
        operationId: redeem-voucher
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  email:
                    description: Email that was used to create the voucher
                    type: string
                  voucherCode:
                    description: Voucher code to be redeemed
                    type: string
                required:
                  - email
                  - voucherCode
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        amount:
                          description: Voucher amount after fee deduction
                          type: number
                        currency:
                          description: voucher payment currency
                          enum:
                            - NGN
                            - USD
                          type: string
                        currentBalance:
                          description: Merchant's balance after redeeming voucher
                          type: number
                        email:
                          description: Email that aws used to create the voucher
                          type: string
                        fee:
                          description: The fee associated with voucher
                          type: number
                        feeBearer:
                          default: client
                          description: The bearer of voucher fee
                          enum:
                            - client
                            - merchant
                          type: string
                        fromAmount:
                          description: >-
                            The amount in the currency that was converted from
                            when conversion was done. If there's no conversion,
                            this is the same as toAmount.
                          type: number
                        fromCurrency:
                          description: >-
                            The currency from which conversion was done. If
                            there's no conversion, this is the same as toCurrency.
                          type: string
                        id:
                          description: Voucher ID
                          type: string
                        merchant:
                          description: username of the merchant that created the voucher
                          type: string
                        previousBalance:
                          description: Merchant's balance before redeeming voucher
                          type: number
                        rate:
                          description: >-
                            The exchange rate that was used for conversion when
                            conversion was done. If there's no conversion, the
                            value is 1.
                          type: number
                        toAmount:
                          description: >-
                            The amount in the currency that was converted to when
                            conversion was done. If there's no conversion, this is
                            the same as fromAmount.
                          type: number
                        toCurrency:
                          description: >-
                            The currency to which conversion was done. If there's
                            no conversion, this is the same as fromCurrency.
                          type: string
                        voucherCode:
                          description: Voucher code to be redeemed
                          type: string
                        wavedFee:
                          description: Waved fee (if available)
                          type: number
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '400':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example:
                        - voucherCode is required
                      items:
                        type: string
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
          '404':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example: []
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Redeem existing unused voucher
        tags:
          - Voucher
    /v1/voucher/get-many:
      get:
        description: >-
          Retrieves a collection of voucher records, sorted in descending order by
          their creation date.
        operationId: get-many
        parameters:
          - description: >-
              Defaults to 1. This is the current page being requested relative to
              size of a page
            in: query
            name: page
            schema:
              type: number
          - description: The number of items to be retured per page
            in: query
            name: pageSize
            schema:
              type: number
          - description: Voucher payment status
            in: query
            name: paymentStatus
            schema:
              enum:
                - paid
                - unpaid
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      description: >-
                        An array containing the retrieved voucher records, sorted
                        in descending order by their creation date.
                      items:
                        properties:
                          amount:
                            type: number
                          createdAt:
                            format: date-time
                            type: string
                          currency:
                            type: string
                          dateRedeemed:
                            description: >-
                              This is defined only if the voucher payment has been
                              received
                            format: date-time
                            type: string
                          email:
                            type: string
                          expectedAmount:
                            type: number
                          fee:
                            type: number
                          feeBearer:
                            enum:
                              - client
                              - merchant
                            type: string
                          fullname:
                            type: string
                          id:
                            type: string
                          memo:
                            type: string
                          merchant:
                            type: string
                          paidAt:
                            description: >-
                              This is defined only if the voucher payment has been
                              received
                            format: date-time
                            type: string
                          paymentStatus:
                            enum:
                              - paid
                              - unpaid
                            type: string
                          rate:
                            description: >-
                              This is defined only if the voucher has been paid
                              and redeemed
                            type: number
                          rateKey:
                            description: >-
                              This is defined only if the voucher was created
                              using a valid rate key
                            type: string
                          receivedAmount:
                            description: >-
                              This is defined only if the voucher payment has been
                              received
                            type: number
                          voucherCode:
                            description: >-
                              This is defined only if the voucher payment has been
                              received
                            type: string
                        type: object
                      type: array
                    message:
                      type: string
                    meta:
                      properties:
                        nextPage:
                          description: >-
                            Contanis the URL of the next page to be fetched
                            relative on the URL parameters of the last page
                            fetched. This is null if there are no more records to
                            fetch.
                          type: string
                        prevPage:
                          description: >-
                            Contanis the URL of the previous page that was fetched
                            fetched relative on the URL parameters of the current
                            page
                          type: string
                      type: object
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '400':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      items:
                        type: string
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Get multiple records
        tags:
          - Voucher
    /v1/voucher/redeem-and-withdraw:
      patch:
        description: >-
          Redeems an existing unused voucher and transfers crypto to the provided
          wallet address
        operationId: redeem-and-withdraw
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  cryptoAddress:
                    description: >-
                      Must be provided along with newtwork. The crypto wallet
                      address on the provided network, to which crypto equivalent
                      will be sent
                    type: string
                  currency:
                    description: Cryptocurrency to send to the provided wallet details
                    enum:
                      - USDC
                      - USDT
                    type: string
                  email:
                    description: Email that was used to create the voucher
                    type: string
                  merchantFee:
                    description: >-
                      In USD (optional) with a precision of 2 decimal places
                      (max). Can be supplied if the merchant want to withdraw a
                      portion of the voucher amount into their Ventogram balance.
                      This must be a fraction or all of voucher value (ie received
                      amount - voucher fee)
                    type: string
                  network:
                    description: Supported crypto network
                    type: string
                  rateKey:
                    description: >-
                      This is a Ventogram-signed rate key. This will be returned
                      in response if the signed rate was used for conversion.
                    type: string
                  voucherCode:
                    description: Voucher code to be redeemed
                    type: string
                required:
                  - email
                  - voucherCode
                  - network
                  - currency
                  - cryptoAddress
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        convertedVoucherFee:
                          description: Voucher fee in the outgoing currency
                          type: number
                        convertedVoucherFeeCurrency:
                          description: The same as toCurrency
                          type: string
                        creditCurrency:
                          description: Merchant's balance currency
                          type: string
                        currentBalance:
                          description: Merchant's balance after redeeming voucher
                          type: number
                        email:
                          description: Email that aws used to create the voucher
                          type: string
                        feeBearer:
                          description: The bearer of voucher fee
                          enum:
                            - merchant
                            - client
                          type: string
                        fromAmount:
                          description: Voucher payment amount.
                          type: number
                        fromCurrency:
                          description: voucher payment currency
                          type: string
                        id:
                          description: Voucher ID
                          type: string
                        merchant:
                          description: username of the merchant that created the voucher
                          type: string
                        merchantFee:
                          description: >-
                            This can be optionally provided by the merchant in the
                            request if they want some of the received amount to be
                            added to their Ventogram balance.
                          type: number
                        previousBalance:
                          description: Merchant's balance before redeeming voucher
                          type: number
                        rate:
                          description: >-
                            The exchange rate that was used for conversion (if
                            applicable) at the time of redeeming the voucher. If
                            there's no conversion, the value is 1.
                          type: number
                        reference:
                          description: This is basically a unique id
                          type: string
                        toAccount:
                          description: >-
                            The crypto wallet address to which asset was
                            transferred
                          type: string
                        toAmount:
                          description: The amount that was sent to user wallet address.
                          type: number
                        toCurrency:
                          description: The currency that was sent to user wallet.
                          type: string
                        voucherCode:
                          description: Voucher code to be redeemed
                          type: string
                        voucherFee:
                          description: >-
                            The fee associated with voucher in the payment
                            currency. This will be deducted from merchant's
                            balance if merchant is the fee bearer.
                          type: number
                        withdrawalFee:
                          description: >-
                            The processing fee for the crypto transfer that will
                            be deducted from the merchant's account. Merchants
                            must maintain a sufficient balance to utilize the
                            redeem-and-withdraw endpoint.
                          type: number
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
          '400':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example:
                        - voucherCode is required
                      items:
                        type: string
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
          '404':
            content:
              application/json:
                schema:
                  properties:
                    errors:
                      example: []
                      type: array
                    message:
                      type: string
                    success:
                      enum:
                        - false
                      type: boolean
                  type: object
            description: Failed operation
        security:
          - ApiKey: []
            ApiUser: []
        summary: Redeem and withdraw
        tags:
          - Voucher
    /v1/voucher-fee:
      get:
        description: Retrieves fee for a given voucher amount and currency.
        operationId: get-fee
        parameters:
          - description: Voucher amount
            in: query
            name: amount
            required: true
            schema:
              type: integer
          - description: Voucher currency
            in: query
            name: currency
            required: true
            schema:
              enum:
                - NGN
                - USD
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        voucherFee:
                          format: int32
                          type: integer
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        summary: Retrieves conversion rates
        tags:
          - Voucher fee
    /v1/voucher-min-max:
      get:
        description: Retrieves minimum and maximum voucher amounts for each currency.
        operationId: voucher-min-max
        parameters:
          - description: Voucher currency
            in: query
            name: currency
            schema:
              enum:
                - NGN
                - USD
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        NGN:
                          properties:
                            max:
                              example: 2000000
                              type: number
                            min:
                              example: 500
                              type: number
                          type: object
                        USD:
                          properties:
                            max:
                              example: 2000
                              type: number
                            min:
                              example: 100
                              type: number
                          type: object
                      type: object
                    message:
                      type: string
                    success:
                      enum:
                        - true
                      type: boolean
                  type: object
            description: successful operation
        summary: Retrieves minimum and maximum voucher amounts
        tags:
          - Voucher min-max amount
    /auth/api-key:
      post:
        description: Create a new api key
        operationId: createApiKey
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  otpType:
                    type: string
                  token:
                    type: string
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        expires:
                          format: date
                          type: string
                        key:
                          type: string
                      type: object
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Create api key
    /payment:
      post:
        description: Create a new payment
        operationId: createPayment
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  accountName:
                    description: The account name. Required when paymentType is bank
                    type: string
                  accountNumber:
                    description: The account number. Required when paymentType is bank
                    type: string
                  bank:
                    description: The bank name. Required when paymentType is bank
                    type: string
                  bankCode:
                    description: The bank code. Required when paymentType is bank
                    type: string
                  businessId:
                    description: The business id
                    type: string
                  coinprofileUsername:
                    description: >-
                      The coinprofile username. Required when paymentType is
                      profile
                    type: string
                  country:
                    description: The country. Required when paymentType is bank
                    type: string
                  customerEmail:
                    description: The rate key
                    type: string
                  incomingAmount:
                    description: The incoming amount
                    type: number
                  incomingCurrency:
                    description: The incoming currency
                    type: string
                  outgoingAmount:
                    description: The outgoing amount
                    type: number
                  outgoingCurrency:
                    description: The outgoing currency
                    type: string
                  paymentType:
                    description: The payment type
                    type: string
                  rateKey:
                    description: The rate key
                    type: string
                  reference:
                    description: The reference
                    type: string
                required:
                  - businessId
                  - incomingCurrency
                  - outgoingCurrency
                  - paymentType
                  - customerEmail
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        _id:
                          type: string
                        account:
                          type: string
                        address:
                          type: string
                        businessId:
                          type: string
                        confirmedAmount:
                          format: int32
                          type: integer
                        createdAt:
                          type: string
                        customerEmail:
                          type: string
                        expTime:
                          type: string
                        incomingAmount:
                          format: int32
                          type: integer
                        incomingCurrency:
                          type: string
                        outgoingAmount:
                          format: int32
                          type: integer
                        outgoingCurrency:
                          type: string
                        paymentType:
                          type: string
                        rate:
                          format: int32
                          type: integer
                        reference:
                          type: string
                        senderUsername:
                          type: string
                        state:
                          type: string
                        threadTS:
                          type: string
                        unconfirmedAmount:
                          format: int32
                          type: integer
                        updatedAt:
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Create payment
    /payment/{paymentId}:
      get:
        description: Get a single payment
        operationId: getPayment
        parameters:
          - description: The ID of the created payment
            in: path
            name: paymentId
            required: true
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: Success
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Get a single payment
    /transaction/{transactionId}:
      get:
        description: Get a transaction
        operationId: getTransaction
        parameters:
          - in: path
            name: transactionId
            required: true
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    amount:
                      type: number
                    businessId:
                      type: string
                    currency:
                      type: string
                    fromAmount:
                      type: number
                    fromCurrency:
                      type: string
                    isFromRegUser:
                      type: boolean
                    memo:
                      type: string
                    message:
                      type: string
                    prevBalance:
                      type: number
                    sender:
                      type: string
                    status:
                      type: string
                    success:
                      type: boolean
                    transactionId:
                      type: string
                    type:
                      type: string
                    username:
                      type: string
                  type: object
            description: Success
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Get a transaction
    /currency/rate:
      get:
        description: Get the current rates
        operationId: getCurrentRates
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        YOUR_CURRENCY:
                          properties:
                            key:
                              type: string
                            rate:
                              format: float
                              type: number
                          type: object
                        publicKey:
                          type: string
                        signature:
                          type: string
                      type: object
                  type: object
            description: Success
        summary: Get current rates
    /currency/minimum-allowed:
      get:
        description: Get minimum amount allowed
        operationId: getMinimumAllowed
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      items:
                        type: object
                      type: array
                  type: object
            description: Success
        summary: Get minimum amount allowed
    /currency/supported:
      get:
        description: Get supported currencies
        operationId: getSupportedCurrencies
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        incomingCurrencies:
                          items:
                            type: string
                          type: array
                        outgoingCurrencies:
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
            description: Success
        summary: Get supported currencies
    /wallet/supported/config:
      get:
        description: Get supported cryptocurrencies and networks
        operationId: getSupportedParams
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        byCurrency:
                          type: object
                        byNetwork:
                          type: object
                      type: object
                    message:
                      type: string
                    state:
                      type: boolean
                  type: object
            description: Success
        summary: Get supported cryptocurrencies and network
    /payment/resolve:
      get:
        description: Resolve overpaid Transaction
        operationId: resolveOverpaidTransaction
        parameters:
          - description: The ID of the unresolved transaction
            in: query
            name: id
            required: true
            schema:
              type: string
          - description: >-
              This is the way you want the transaction to be completed. Either
              refundExcess or PayAll option
            in: query
            name: option
            required: true
            schema:
              enum:
                - refundexcess
                - payall
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: Success
        summary: Resolve overpaid Transaction
    /callbackurl:
      get:
        description: Retrieve the callback url used as webhook
        operationId: getCallbackUrl
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        callbackUrl:
                          description: >-
                            The callback url. e.g.
                            https://www.example.com/callback
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Retrieve subscribed webhook url
      put:
        description: Set the callback url that will be used as webhook
        operationId: setCallbackUrl
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  callbackUrl:
                    description: The callback url. e.g. https://www.example.com/callback
                    type: string
                required:
                  - callbackUrl
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Subscribe to webhook
    /transaction/summary:
      get:
        description: Retrieves all user transactions summary
        operationId: get-transactions-summary
        parameters:
          - description: >-
              Currency for which transactions are to be retrieved. When this is
              not supplied, transactions will be retrieved for all available
              currencies.
            in: query
            name: currency
            schema:
              enum:
                - NGN
                - USD
              type: string
          - description: >-
              Type of transactions to be retrieved. When this is not supplied,
              transactions will be retrieved for all available types.
            in: query
            name: type
            schema:
              enum:
                - deposit
                - withdrawal
                - sent
                - transfer
                - internalTransfer
                - conversion
              type: string
          - description: Number of pages to be retrieved.
            in: query
            name: page
            schema:
              type: number
          - description: Number of transaction records to be retrieved per page page.
            in: query
            name: limit
            schema:
              type: number
          - description: Duration of the transaction to be retrieved per page page.
            in: query
            name: duration
            schema:
              enum:
                - one day
                - one week
                - one month
                - one year
              type: number
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        summary:
                          properties:
                            duration:
                              format: int32
                              type: number
                            txnCount:
                              format: int32
                              type: number
                            volume:
                              format: int32
                              type: number
                          type: object
                        txn:
                          properties:
                            data:
                              items:
                                properties:
                                  amount:
                                    format: int32
                                    type: number
                                  businessId:
                                    type: string
                                  createdAt:
                                    format: date-time
                                    type: string
                                  currency:
                                    type: string
                                  date:
                                    type: string
                                  fee:
                                    format: int32
                                    type: number
                                  fromAmount:
                                    format: int32
                                    type: number
                                  fromCurrency:
                                    type: string
                                  isFromRegUser:
                                    type: boolean
                                  prevBalance:
                                    format: int32
                                    type: number
                                  sender:
                                    type: string
                                  senderPrevbalance:
                                    format: int32
                                    type: number
                                  status:
                                    type: string
                                  transactionId:
                                    type: string
                                  type:
                                    type: string
                                  updatedAt:
                                    format: date-time
                                    type: string
                                  username:
                                    type: string
                                  version:
                                    type: string
                                type: object
                              type: array
                            page:
                              format: int32
                              type: number
                            pages:
                              format: int32
                              type: number
                            perPage:
                              format: int32
                              type: number
                            total:
                              format: int32
                              type: number
                          type: object
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Retrieve user's transaction summary
    /wallet:
      get:
        description: get wallet
        operationId: get-wallet
        parameters:
          - description: The cryptocurrency for which address will be retrieved
            in: query
            name: currency
            schema:
              type: string
          - description: The crypto network of the retrieved wallet address
            in: query
            name: network
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                    success:
                      type: boolean
                    wallet:
                      properties:
                        addresses:
                          type: array
                        appName:
                          type: string
                        createdAt:
                          format: int32
                          type: number
                        reference:
                          type: string
                        status:
                          type: string
                        uid:
                          type: string
                        updatedAt:
                          format: int32
                          type: number
                        version:
                          type: string
                      type: object
                  type: object
            description: successfully retrieved wallet
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Retrieves a user's crypto wallet addresses
    /balance/withdraw:
      post:
        description: Withdraw funds from the user's balance
        operationId: withdrawBalance
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  accountName:
                    description: The account name. This is the name of the account holder.
                    type: string
                  accountNumber:
                    description: The account number of the user's bank account.
                    type: string
                  amount:
                    description: The amount to be withdrawn.
                    type: string
                  bank:
                    description: The bank name. e.g. "Access Bank".
                    type: string
                  bankCode:
                    description: The bank code. e.g. "044".
                    type: string
                  currency:
                    description: The currency of the withdrawal.
                    type: string
                  otpType:
                    description: The type of OTP to be used.
                    enum:
                      - otp
                      - totp
                    type: string
                  token:
                    description: The token to be used for OTP.
                    type: string
                required:
                  - accountNumber
                  - accountName
                  - bank
                  - bankCode
                  - currency
                  - amount
                  - otpType
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      type: object
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Withdraw balance
    /bank/resolve:
      post:
        description: Verifies the bank account and returns the bank account details
        operationId: resolveBankAccount
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  accountNumber:
                    description: The account number.
                    type: string
                  bankCode:
                    description: The bank code.
                    type: string
                required:
                  - accountNumber
                  - bankCode
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        accountname:
                          type: string
                        accountnumber:
                          type: string
                        code:
                          type: string
                        country:
                          type: string
                        created_at:
                          type: string
                        currency:
                          type: string
                        deleted_at:
                          type: string
                        internalreference:
                          type: string
                        is_trashed:
                          type: string
                        is_visible:
                          type: string
                        name:
                          type: string
                        phonenumber:
                          type: string
                        responsecode:
                          type: string
                        responsemessage:
                          type: string
                        uniquereference:
                          type: string
                        updated_at:
                          type: string
                      type: object
                  type: object
            description: successful operation
        summary: Resolve bank account
    /bank/supported:
      get:
        description: Retrieve a list of supported banks
        operationId: retrieveSupportedBanks
        parameters:
          - description: The country from which to retrieve supported banks
            in: query
            name: country
            schema:
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      items:
                        properties:
                          Code:
                            type: string
                          Name:
                            type: string
                        type: object
                      type: array
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        summary: Retrieve a list of supported banks
    /balance:
      get:
        description: Retrieves account balance for each currency
        operationId: get-balance
        parameters:
          - description: >-
              Currency for which balance is to be retrieved. When this is not
              supplied, balance will be retrieved for all available currencies.
            in: query
            name: currency
            schema:
              enum:
                - NGN
                - USD
                - USDT
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        balances:
                          properties:
                            amount:
                              description: User's balance amount
                              format: int32
                              type: integer
                            formattedAmount:
                              format: int32
                              type: integer
                            toCurrency:
                              type: string
                            totalRecieved:
                              format: int32
                              type: integer
                            totalSent:
                              format: int32
                              type: integer
                            txnCount:
                              type: number
                          type: object
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Retrieve user's account balance
    /balance/transfer:
      post:
        description: Transfer funds from user's balance to another user (fiat-to-fiat)
        operationId: transferFunds
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  amount:
                    description: Amount to transfer.
                    type: string
                  currency:
                    description: Currency being sent.
                    enum:
                      - NGN
                      - USD
                    type: string
                  memo:
                    description: Transaction memo.
                    maxLength: 28
                    type: string
                  otpType:
                    description: The type of OTP to be used.
                    enum:
                      - otp
                      - totp
                    type: string
                  receiverUsername:
                    description: Receiver's coinprofile username.
                    type: string
                  token:
                    description: The token to be used for OTP.
                    type: string
                required:
                  - receiverUsername
                  - currency
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        amount:
                          type: string
                        date:
                          format: date
                          type: string
                        fromCurrency:
                          enum:
                            - NGN
                            - USD
                          type: string
                        receiveAmount:
                          type: string
                        sender:
                          type: string
                        senderPrevbalance:
                          type: string
                        status:
                          enum:
                            - fullfiled
                            - processing
                            - failed
                          type: string
                        toCurrency:
                          enum:
                            - NGN
                            - USD
                          type: string
                        transactionId:
                          type: string
                        username:
                          type: string
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Transfer funds
    /wallet/transfer:
      post:
        description: Transfer crypto from one wallet address to another
        operationId: wallet-transfer
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  address:
                    description: Wallet address to transfer crypto
                    type: string
                  amount:
                    description: Amount of crypto to be transferred
                    type: number
                  currency:
                    description: Currency of the crypto to be transferred
                    type: string
                  memo:
                    description: Optional transaction memo
                    type: string
                  network:
                    description: Network on which crypto is to be transferred
                    type: string
                  walletType:
                    description: Wallet type
                    type: string
                required:
                  - network
                  - currency
                  - address
                  - amount
                type: object
          required: true
        responses:
          '200':
            content:
              application/json:
                schema:
                  properties:
                    data:
                      properties:
                        transferDetail:
                          properties:
                            address:
                              type: string
                            amount:
                              type: number
                            date:
                              type: string
                            fromCurrency:
                              type: string
                            memo:
                              type: string
                            receiveAmount:
                              type: number
                            sender:
                              type: string
                            status:
                              type: string
                            toCurrency:
                              type: string
                            transactionId:
                              type: string
                            type:
                              type: string
                            username:
                              type: string
                          type: object
                      type: object
                    message:
                      type: string
                    success:
                      type: boolean
                  type: object
            description: successful operation
        security:
          - ApiKey: []
            ApiUser: []
            UserVersion: []
        summary: Wallet transfer
  servers:
    - description: Production
      url: https://staging-biz.coinprofile.co/v2
konfigCliVersion: 1.38.37
