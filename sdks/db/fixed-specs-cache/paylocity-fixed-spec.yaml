publishJson:
  company: Paylocity
  serviceName: Weblink
  sdkName: paylocity-{language}-sdk
  clientName: Paylocity
  metaDescription: >-
    Paylocity is the HR & Payroll provider that frees you from the tasks of
    today, so together, we can spend more time focused on the promise of
    tomorrow.
  homepage: developer.paylocity.com
  categories:
    - payroll
    - hr
rawSpecString: |
  openapi: 3.0.1
  info:
    title: WebLink API
    version: v2
    description: >-
      For documentation about this API, please visit
      https://developer.paylocity.com/integrations/reference/weblink-overview
    x-logo:
      url: paylocityLogo.png
    contact:
      email: webservices@paylocity.com
  servers:
    - url: https://apisandbox.paylocity.com/api
  paths:
    /compliance/v1/companies/b6001/clientOnboarding/status:
      post:
        tags:
          - Client Onboarding
        summary: Upsert onboarding status
        description: >
          **Summary Description**


          This endpoint upserts the status of the integration with companyId
          specified in the body


          **Use Cases**


          - Partner receives a new client intake form and sends the ‘in progress’
          status to Paylocity

          - Partner and client already have an existing relationship, partner
          sends the ‘approved’ status for client to have access to ordering in the
          recruiting UI 

          - Client initiates a new client intake form. Client and partner decide
          not to move forward with the relationship. Partner sends the ‘rejected’
          status  
        parameters:
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: The onboarding details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOnboardingUpsertRequest'
        responses:
          '200':
            description: Returns details of the upsert operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientOnboardingUpsertResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /compliance/v1/companies/{companyId}/clientOnboarding/billing:
      post:
        tags:
          - Client Onboarding
        summary: Add billing codes
        description: >
          **Summary Description**


          This endpoint inserts the billing code and its status by companyId for a
          given client


          **Use Cases**


          - Partner wants to send over one or multiple billing codes for a client,
          can be when onboarding a new client, or can be when client adds new
          billing codes to their company

          - Partner wants to make bulk changes to billing codes to make them
          either active or inactive for a client
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: Billing codes request payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBillingCodeRequest'
        responses:
          '201':
            description: Created entity.
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /compliance/v1/companies/{companyId}/clientOnboarding/billing/{billingCode}:
      delete:
        tags:
          - Client Onboarding
        summary: Delete billing code
        description: >-
          **Summary Description**


          This is used to delete an already registered billing code, either active
          or inactive, by companyId and specific billing code for a given client


          **Use Cases**


          - Partner wants to permanently delete this billing code for a client
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: billingCode
            in: path
            description: Billing code to be deleted.
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Returns confirmation that billing code has been deleted
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '404':
            description: Not Found - Billing code has not been found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
      patch:
        tags:
          - Client Onboarding
        summary: Updates billing code status
        description: >-
          **Summary Description**


          This is used to update an already registered billing code’s status by
          companyId and specific billing code for a given client


          **Use Cases**


          - Partner wants to update the status of a specific billing code for a
          client to either make active or inactive
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: billingCode
            in: path
            description: >-
              Billing code associated with the screening order. This billing code
              is created on the partner side for a specific company.
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: Billing code request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBillingCodeRequest'
        responses:
          '204':
            description: Returns confirmation that billing code has been updated
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '404':
            description: Not Found - Billing code has not been found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription:
      get:
        tags:
          - Subscription
        summary: >-
          Returns the webhook for the subscription of a new candidate screening
          order
        description: >
          **Summary Description**


          Returns the webhook for the subscription of a new candidate screening
          order
        parameters:
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Returns the subscription callback details
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/CandidateScreeningOrdersSubscriptionResponse
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '404':
            description: Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
      post:
        tags:
          - Subscription
        summary: >-
          Register the webhook URL for the subscription of new
          CandidateScreeningOrder
        description: >
          **Summary Description**


          Register the webhook URL for the subscription of new
          CandidateScreeningOrder


          **Use Cases**


          - Partner provides the webhook URL for new candidate orders
        parameters:
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: The callback information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeNewCandidateScreeningOrderRequest'
        responses:
          '200':
            description: Returns the details of the registration
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/SubscribeNewCandidateScreeningOrderResponse
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ValidationErrorResponse'
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
        callbacks:
          New candidateScreeningOrder background check request:
            https://example.com:
              post:
                summary: >-
                  This is a webhook that occurs when new request for
                  candidateScreeningOrder background checks occurs
                requestBody:
                  content:
                    application/json:
                      schema:
                        $ref: >-
                          #/components/schemas/NewCandidateScreeningOrderEventPayloadData
                responses:
                  '200':
                    description: >-
                      Your server implementation should return this HTTP status
                      code if the data was received successfully
                  '400':
                    description: >-
                      If your server returns an HTTP status code indicating it
                      does not understand the format of the payload the delivery
                      will be treated as a failure. No retries are attempted.
                  '500':
                    description: >-
                      If your server returns an HTTP status code indicating a
                      server-side error the delivery will be treated as a failure.
                      No retries are attempted.
    /compliance/v1/companies/b6001/backgroundCheck/candidateScreeningOrders/subscription/{callbackId}:
      delete:
        tags:
          - Subscription
        summary: Deletes the webhook
        description: |+
          **Summary Description**

          Deletes the webhook

        parameters:
          - name: callbackId
            in: path
            description: The GUID of the Callback URL returned by the POST or GET method
            required: true
            schema:
              type: string
              format: uuid
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Returns the details of the delete operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeleteSubscriptionResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages:
      get:
        tags:
          - Screening Package
        summary: Returns screening packages
        description: >
          **Summary Description**


          Returns the screening packages for the companyId


          **Use Cases**


          - Partner needs to confirm that package information with Paylocity is
          correct and calls for the package information for a specific company ID
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Returns the screening packages
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ScreeningPackagesResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
      post:
        tags:
          - Screening Package
        summary: Bulk Upsert
        description: >-
          **Summary Description**


          Bulk Upsert information about screening packages


          **Use Cases**


          - Partner wants to send over multiple screening packages for a client,
          can be when onboarding a new client, or can be when client adds new
          packages to their company 

          - Partner wants to make bulk changes to screening packages to make them
          either active or inactive for a client 

          - Partner wants to update the prices of a client’s screening packages 

          - Partner wants to bulk add services to a packages 

          - Partner wants to add a billing code to correlate to a specific BGC
          package
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: The Package information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPackageBulkUpsertRequest'
        responses:
          '200':
            description: Returns the deatils of the Bulk upsert
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ScreeningPackageUpsertResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
    /compliance/v1/companies/{companyId}/backgroundCheck/screeningPackages/{packageId}:
      post:
        tags:
          - Screening Package
        summary: Upserts screening package
        description: >-
          **Summary Description**


          Upserts information about screening packages for the companyId


          **Use Cases**


          - Partner wants to send over a screening package for a client, can be
          when onboarding a new client, or can be when client adds a new package
          to their company

          - Partner wants to make a specific screening package either active or
          inactive for a client 

          - Partner wants to update the price of a client’s screening package 

          - Partner wants to add services to a package 

          - Partner wants to add a billing code to correlate to a specific BGC
          package
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: packageId
            in: path
            description: "The Id of the Screening Package.\r\n                **Allowable Values:**\r\n                36 char max"
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: The Package data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPackageUpsertRequest'
        responses:
          '200':
            description: Returns the details of the upsert operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ScreeningPackageUpsertResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
      delete:
        tags:
          - Screening Package
        summary: Deletes screening package
        description: >
          **Summary Description**


          Deletes screening package


          **Use Cases**


          - Partner does not want this package to be displayed in the UI for the
          client 
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: packageId
            in: path
            description: The Id of the Screening Package.
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Returns the deatils of the delete operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeletePackageResponse'
          '400':
            description: Bad Request Error - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
          '401':
            description: Unauthorized
          '404':
            description: Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /compliance/v1/companies/{companyId}/backgroundCheck/candidateScreeningOrders/status:
      patch:
        tags:
          - Candidate Screening Order
        summary: Updates the Screening Order status
        description: >
          **Summary Description**


          This endpoint updates the Screening Order status for the given companyId
          and candidateScreeningOrderId. The patch operation on the candidate
          status endpoint allows you to update the status of the overall screening
          order and the related services. You can also send the URL where the
          recruiter can view the complete screening result. 


          **Use Cases**


          - Partner sends the initial status of the order and services, i.e.
          Ordered and Pending 

          - Partner needs to update the status of an order or services of an order
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        requestBody:
          description: The data of the update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateScreeningOrderStatusUpdateRequest'
        responses:
          '200':
            description: Returns the screening order id and status that were updated
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/CandidateScreeningOrderStatusUpdateResponse
          '400':
            description: Bad Request Error - Returns the details of the error
          '401':
            description: Unauthorized
          '415':
            description: Unsupported Media Type - Returns the details of the error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorResponse'
    /apiHub/corehr/v1/companies/{companyId}:
      get:
        tags:
          - Company Information
        summary: GET a single Company Information
        description: >
          **Summary Description**


          The Get Company Information API endpoint provides access to specific
          company details. Users can retrieve a wide range of company information,
          including: company name, address, industry, (EIN) Employer
          Identification Number, and more.


          **Use Cases**


          - Once the developer has company information, they can update their
          system with the latest earning codes. To update the earning codes in
          their system and they need to know what earning codes are available in
          Paylocity.

          - After getting company data, clients are use the company specific
          schema to pull the information into their UI to expose to a user.

          - Once the developer has company information, developers can add a New
          Employee to Paylocity and the system requires them to include the
          Benefit Class assigned in Paylocity for the New Employee.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyInformationDto'
    /apiHub/corehr/v1/companies/{companyId}/workLocations:
      get:
        tags:
          - Payroll/HR
        summary: GET a list of Work Locations by Company ID
        description: >
          **Summary Description**


          The GET Work Location list by Company ID endpoint allows users to fetch
          a list of work location details from a client's Paylocity instance. Work
          locations, referred to as geographic or location codes, serve as
          designations employed by corporations to specify particular physical or
          geographic places where their personnel are stationed. These codes
          fulfill several crucial functions in the domains of human resources,
          operations, and management. To use this endpoint, the Paylocity Company
          ID and “workLocations” parameter must be specified.


          **Use Cases**


          - Locations are addresses used as work or hiring locations. Each worker
          should have an assigned work location. The purpose of a work location is
          to verify workers' taxes. Work locations in HR & Payroll will show in
          Paylocity's Recruiting platform when creating job postings.

          - This information will also transfer to external job sites if using
          Recruiting Enhanced Features. Currently, only one work location can be
          added to each job listing.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkLocationDto'
    /apiHub/corehr/v1/companies/{companyId}/rateCodes:
      get:
        tags:
          - Payroll/HR
        summary: GET a list of Rate Codes by Company ID
        description: >
          **Summary Description**


          The GET Rate Codes by list by Company ID endpoint allows users to
          retrieve a comprehensive list of Rate Codes details from a client's
          Paylocity instance. To use this endpoint, the Paylocity “rateCodes”
          parameter must be specified. Rate Codes are employed throughout multiple
          businesses to denote precise pricing or rate frameworks. Rate codes are
          vital for monitoring and overseeing various pricing alternatives,
          employee pay rates, packages, or promotions offered by businesses. These
          codes facilitate the optimization of pricing management, reservations,
          and financial transactions.


          **Use Cases**


          - Hotel room rates are typically categorized and differentiated using
          rate codes in the hospitality business. Each rate code corresponds to a
          distinct kind of room (such as standard, deluxe, or suite) or a special
          price arrangement (such as non-refundable, corporate, or promotional).
           -Seasonal Pricing: Rate codes can be utilized to enforce fluctuations in pricing based on different seasons. For instance, a hotel may utilize distinct rate codes to distinguish between rates during peak season and rates during off-peak season. 
           -Businesses frequently generate rate codes to facilitate special deals, packages, or promotions. These codes may encompass reductions, free perks, or combined offerings (e.g., "bed and breakfast" packages).
          - A business would like to have different codes per shift work.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RateCodeDto'
    /apiHub/corehr/v1/companies/{companyId}/costCentersAndLevels:
      get:
        tags:
          - Payroll/HR
        summary: GET a list of Cost Centers by Company ID
        description: >
          **Summary Description**


          The GET Cost Center List by Company ID endpoint, retrieves a
          comprehensive list of Cost Center from the Paylocity system with each
          call. To use this endpoint, the Paylocity “costCentersAndLevels”
          parameter must be specified. Cost centers are distinct entities or
          divisions within an organization that bear expenses as a result of their
          activities. These cost centers are crucial for monitoring and
          controlling expenses, allocating funds, and evaluating the efficiency of
          various departments within the firm. Cost centers are predominantly
          employed in managerial accounting and financial management to apportion
          expenses and evaluate resource utilization. Typical instances of cost
          centers encompass production departments, marketing teams, research and
          development units, and administrative offices.


          **Use Cases**


          - Cost allocation refers to the process of assigning costs that have
          been incurred by a specific cost center to that same center. The costs
          encompass staff remuneration, utility bills, rental fees, supplies, and
          any additional expenses related to the activities of the cost center.

          - Budgeting: Cost centers are essential in the process of creating a
          budget. Organizations distribute budgets among several cost centers and
          then compare the actual expenses of each center to their allocated
          budget. This facilitates cost management and performance assessment. 

          - Performance Evaluation: Cost centers are assessed according to their
          capacity to effectively control costs while attaining their goals.
          Performance metrics may encompass indicators such as the cost incurred
          for each unit of output, the cost incurred for each employee, or other
          pertinent measures. 

          - Cost Reporting: Organizations frequently produce reports for
          individual cost centers, providing a comprehensive breakdown of their
          expenditures and operational effectiveness. Management utilizes these
          reports to evaluate the financial well-being and effectiveness of each
          cost center.


          **Note**


          - A company cannot delete Cost Centers. The Cost Center is editable
          after use, but the chosen Code for the Cost Center is permanent.

          - To ensure cross-product compatibility, Cost Center Codes should not
          contain leading zeros or special characters. Cost Center codes must be
          numeric only if employees transfer using time clocks or kiosk tablets.

          - A company cannot delete Cost Centers. The Cost Center is editable
          after use, but the chosen Code for the Cost Center is permanent.

          - A Country selection is necessary before being able to enter
          information into the Zip and State fields when selecting the Override
          Company Check Printing Address option.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CostCenterLevelModelDto'
    /apiHub/payroll/v1/companies/{companyId}/earnings:
      get:
        tags:
          - Payroll/HR
        summary: GET a List of Earning Codes by Company ID
        description: >
          **Summary Description**


          The GET Earning Codes List by Company ID endpoint, retrieves a
          comprehensive list of Earning Codes from the Paylocity system with each
          call. Earning codes, also known as earning kinds or pay codes, are
          alphanumeric or numeric labels employed by organizations to classify and
          monitor various forms of earnings or income that employees get as part
          of their compensation. These codes have multiple crucial applications in
          payroll management, accounting, and compensation administration.
          Pagination can be achieved by using the "earnings" parameter and
          specifying the values of "limit" and "offset" to decide the quantity of
          records to be retrieved. The utilization of the "limit" option permits
          the user to restrict the quantity of rows that are retrieved from a
          query, whereas the "offset" option enables the omission of a designated
          number of rows preceding the commencement of the result set. The
          utilization of both the limit and offset parameters in a query allows
          for the skipping of rows as well as the restriction of the number of
          rows returned.


          **Use Cases**


          - The API enables payroll departments to oversee earning codes linked to
          various forms of compensation, such as standard salary, overtime,
          bonuses, and incentives. This guarantees precise and effective payroll
          computations.

          - Compensation Management: HR teams can employ the API to view earning
          codes for diverse work titles and staff groups. This allows firms to
          maintain alignment with compensation policies and industry norms.

          - Benefits Administration involves the inclusion of earning codes that
          contain not just wage components but also other benefits like as health
          insurance, retirement contributions, and stock options. The API
          facilitates the monitoring and administration of these varied
          compensation components.

          - Time and Attendance Integration: By integrating with time and
          attendance systems, the API may automate the computation of earnings
          using data on hours worked, shifts, and attendance.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: limit
            in: query
            description: "Number of earning codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/EarningCodesDto'
    /apiHub/payroll/v1/companies/{companyId}/deductions:
      get:
        tags:
          - Payroll/HR
        summary: "GET a list of Deduction Codes by Company ID\r\n"
        description: >
          **Summary Description**


          The GET Deduction Codes by list by Company ID endpoint allows users to
          retrieve a comprehensive list of  Deduction Codes details from a
          client's Paylocity instance. To use this endpoint, the Paylocity
          “deductions” parameter must be specified. Deduction Codes are
          alphanumeric or numeric identifiers used in financial and accounting
          systems to categorize and track various types of deductions. These
          deductions can include expenses, withholdings, reductions in pay, or
          other adjustments made to an individual's or organization's financial
          records. Pagination can be achieved by using the "deductions" parameter
          and specifying the values of "limit" and "offset" to decide the quantity
          of records to be retrieved. The utilization of the "limit" option
          permits the user to restrict the quantity of rows that are retrieved
          from a query, whereas the "offset" option enables the omission of a
          designated number of rows preceding the commencement of the result set.
          The utilization of both the limit and offset parameters in a query
          allows for the skipping of rows as well as the restriction of the number
          of rows returned.


          **Use Cases**


          - Accounts Receivable: Deduction codes can be utilized to monitor
          discounts, allowances, or modifications applied to invoices or accounts
          payable.

          - Taxes: Various tax jurisdictions employ deduction codes to describe
          the specific sort of tax being subtracted, such as federal income tax,
          state income tax, or local taxes.

          - Advantages: Deduction codes can be utilized to classify deductions
          associated with employee benefits like as health insurance, dental
          coverage, or retirement plans.

          - Loans and Debts: Lenders and financial organizations utilize deduction
          codes to precisely indicate the reason for deductions made for loan
          repayments, interest, or fees.

          - Expense Reporting: Deduction codes are utilized in company cost
          reporting to classify and monitor several types of spending, including
          travel, meals, entertainment, and office supplies.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
          - name: limit
            in: query
            description: "Number of deduction codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 50
            example: 5
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/DeductionCodeDto'
    /apiHub/payroll/v1/companies/{companyId}/payFrequencies:
      get:
        tags:
          - Payroll/HR
        summary: "GET Pay Frequency Code by list by Company ID\r\n"
        description: "**Summary Description**\n\nThe GET Pay Frequency Code by list by Company ID endpoint allows users to retrieve a comprehensive list of Pay Frequency Code details from a client's Paylocity instance. To use this endpoint, the Paylocity “payFrequencies” parameter must be specified. A Frequency Code in HR & Payroll determines the criteria for applying an Earning, Deduction, or Agency Code during payroll processing. Pagination can be achieved by using the \"payFrequencies\" parameter and specifying the values of \"limit\" and \"offset\" to decide the quantity of records to be retrieved. The utilization of the \"limit\" option permits the user to restrict the quantity of rows that are retrieved from a query, whereas the \"offset\" option enables the omission of a designated number of rows preceding the commencement of the result set. The utilization of both the limit and offset parameters in a query allows for the skipping of rows as well as the restriction of the number of rows returned. “includeTotalCount” parameter can also be used to return the total number of resources available (even though only a subset may be returned).\n\n**Use Cases**\n\n- A company uses pay frequency code to determine how often pay is distributed to employees whether it be Daily, Weekly, Bi-Weekly, or Semi-Monthly. In order for an Earning/Deduction/Agency related with a company's Weekly payroll frequency to trigger again, there must be a minimum of 5 days between Check Dates. The subsequent Check Date will be determined by adding 6 days to the date of the previous Check Date when the deduction took place.\n  - If the frequency of Earning/Deduction/Agency includes a Block Week, and the subsequent Check Date that qualifies comes within the blocked week, HR & Payroll will prevent the deduction.\n  - If the frequency is Bi-Weekly or Semi-Monthly, a minimum of 10 days must elapse between Check Dates. The deduction will occur again on the 10th day after the last Check Date.\r\nThe following frequencies are exempt from cool down intervals. The Payroll and HR department considers the utilization of deductions in the current month and the activation status of a Block Week.\n  - The frequency of the Monthly take Last Week (ML) will only be applied if the date corresponds to the last Check Date on the calendar and the Earning/Deduction/Agency Code has not yet been applied for the month.\n- The Q1W frequency will only be applicable if the payroll is the initial payroll of the quarter and the Earning/Deduction/Agency Code has not been applied for the quarter yet.\r\nThe frequency of Block Week 5 (BL5) will be applicable only if the Check Date occurs on or before the 28th and there has been a gap of more than 5 days since the last Check Date for the Earning/Deduction/Agency Code to be applied.\n- The company operates on a biweekly pay schedule with a check date occurring every five out of four weeks. Subsequently, the corporation implements a Bi-Weekly deduction frequency, commencing 2 days after the initial deduction. If a Check Date occurs on 5/11, the deduction will still be processed, regardless of the fact that there is less than a 10-day gap between Check Dates. If a check with a date of 5/17 is processed, the deduction will not be subtracted.\n"
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PayFrequencyDto'
    /apiHub/payroll/v1/companies/{companyId}/taxes:
      get:
        tags:
          - Payroll/HR
        summary: "GET a list of Tax Codes by Company ID\r\n"
        description: "**Summary Description**\n\nThe GET Tax Codes by list by Company ID endpoint allows users to retrieve a comprehensive list of Tax Codes details from a client's Paylocity instance. To use this endpoint, the Paylocity “taxes” parameter must be specified. Tax codes serve as a means for tax authorities and organizations to categorize various forms of taxes and tax-related data. These codes facilitate precise computation, reporting, and adherence to diverse tax responsibilities. Tax codes are jurisdiction-specific and can vary substantially between different locations.\r\n\r\nPagination can be achieved by using the \"taxes\" parameter and specifying the values of \"limit\" and \"offset\" to decide the quantity of records to be retrieved. The utilization of the \"limit\" option permits the user to restrict the quantity of rows that are retrieved from a query, whereas the \"offset\" option enables the omission of a designated number of rows preceding the commencement of the result set. The utilization of both the limit and offset parameters in a query allows for the skipping of rows as well as the restriction of the number of rows returned. “includeTotalCount” parameter can also be used to return the total number of resources available (even though only a subset may be returned).\n\n**Use Cases**\n\n- The process of calculating income tax involves the utilization of tax codes, which serve to calculate the appropriate income tax rates and brackets for both people and businesses. Distinct tax codes may be applicable to different income thresholds, filing statuses, and categories of income (such as capital gains and dividends).\n- Payroll Deductions: Employers utilize tax codes to accurately compute and retain the appropriate amount of income tax, Social Security tax, and Medicare tax from employees' wages. These codes serve to guarantee that employees have the accurate amount of tax deducted throughout the year.\n "
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
          - name: limit
            in: query
            description: "Number of tax codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 50
            example: 5
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TaxCodeDto'
    /apiHub/positionManagement/v1/companies/{companyId}/workerCompensationCodes:
      get:
        tags:
          - Payroll/HR
        summary: GET a List of Workers Compensation Codes by Company ID
        description: >
          **Summary Description**


          The GET Workers Compensation Codes List by Company ID endpoint,
          retrieves a comprehensive list of Workers Compensation Codes from the
          Paylocity system with each call. Workers' compensation codes, also known
          as workers' compensation class codes or class codes, are standardized
          numeric or alphanumeric identifiers utilized to define and categorize
          various work kinds or job duties inside the workers' compensation
          insurance system. Workers' compensation insurance offers compensation to
          employees who experience work-related injuries or illnesses, and these
          codes are essential in determining insurance rates and processing
          claims.

          Pagination can be achieved by using the "workerCompensationCodes"
          parameter and specifying the values of "limit" and "offset" to decide
          the quantity of records to be retrieved. The utilization of the "limit"
          option permits the user to restrict the quantity of rows that are
          retrieved from a query, whereas the "offset" option enables the omission
          of a designated number of rows preceding the commencement of the result
          set. The utilization of both the limit and offset parameters in a query
          allows for the skipping of rows as well as the restriction of the number
          of rows returned.


          **Use Cases**


          - Locations are addresses used as work or hiring locations. Each worker
          should have an assigned work location. The purpose of a work location is
          to verify workers' taxes. Work locations in HR & Payroll will show in
          Paylocity's Recruiting platform when creating job postings.

          - This information will also transfer to external job sites if using
          Recruiting Enhanced Features. Currently, only one work location can be
          added to each job listing.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: limit
            in: query
            description: "Number of workers compensation codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/WorkersCompensationCodeDto'
    /apiHub/positionManagement/v1/companies/{companyId}/positions:
      get:
        tags:
          - Payroll/HR
        summary: GET a List of Position Codes by Company ID
        description: >
          **Summary Description**


          The GET Position Codes List by Company ID endpoint, retrieves a
          comprehensive list of Position Codes from the Paylocity system with each
          call. Position codes are alphanumeric or numeric designations employed
          by corporations to classify and oversee various job responsibilities and
          positions within their workforce. These codes fulfill several crucial
          functions in the domains of human resources, talent management, and
          organizational structure.

          Pagination can be achieved by using the "positions" parameter and
          specifying the values of "limit" and "offset" to decide the quantity of
          records to be retrieved. The utilization of the "limit" option permits
          the user to restrict the quantity of rows that are retrieved from a
          query, whereas the "offset" option enables the omission of a designated
          number of rows preceding the commencement of the result set. The
          utilization of both the limit and offset parameters in a query allows
          for the skipping of rows as well as the restriction of the number of
          rows returned.


          **Use Cases**


          - Human Resources Management: HR departments often use position codes to
          categorize and manage job roles within an organization. The API can
          facilitate the creation, updating, and retrieval of position codes,
          ensuring that job roles are accurately documented and maintained.

          - Payroll and Compensation Management: Position codes are crucial for
          determining salary scales and compensation packages. The API can be used
          to link position codes with salary information, simplifying payroll
          processing and compensation management.

          - Recruitment and Onboarding: When hiring new employees, organizations
          can use the API to identify vacant positions and manage the recruitment
          process more efficiently. It can help HR teams keep track of available
          job roles and their requirements.

          - Compliance and Reporting: Many regulatory agencies require
          organizations to report on specific job roles and positions. The API can
          assist in generating compliance reports by providing access to accurate
          position code data.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: limit
            in: query
            description: "Number of position codes per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PositionsDto'
    /apiHub/positionManagement/v1/companies/{companyId}/payGrades:
      get:
        tags:
          - Payroll/HR
        summary: GET a List of Pay Grades by Company ID
        description: >
          **Summary Description**


          The GET Pay Grades List by Company ID endpoint, retrieves a
          comprehensive list of Pay Grades  from the Paylocity system with each
          call. Pay grades, commonly referred to as pay scales or wage ranges, are
          numerical or alphanumeric categorizations employed by corporations to
          classify tasks or positions according to their relative worth or
          intricacy within the organization. Pay grades are commonly linked to a
          spectrum of salaries and fulfill various crucial functions in human
          resources and pay administration.

          Pagination can be achieved by using the "payGrades" parameter and
          specifying the values of "limit" and "offset" to decide the quantity of
          records to be retrieved. The utilization of the "limit" option permits
          the user to restrict the quantity of rows that are retrieved from a
          query, whereas the "offset" option enables the omission of a designated
          number of rows preceding the commencement of the result set. The
          utilization of both the limit and offset parameters in a query allows
          for the skipping of rows as well as the restriction of the number of
          rows returned.

          Pay Grades are otherwise optional in HR & Payroll and do not affect any
          rate calculations that will cause changes in payroll.


          **Use Cases**


          - Configure and specify Current Pay Rates for employees in HR & Payroll.
          Certain reports, such as the CMS PBJ Report, also known as the Centers
          for Medicare & Medicaid Services Payroll-Based Journal Report, and other
          specially configured Custom Reports reference Pay Grades.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: includeTotalCount
            in: query
            description: >-
              A boolean value representing whether the API should return the total
              number of resources available (even though only a subset may be
              returned). When includeTotalCount=true, then the X-Pcty-Total-Count
              response header should be added to the response and will specify the
              total number of records available. APIs that support
              X-Pcty-Total-Count should include this parameter in their
              specification.
            schema:
              type: boolean
              default: true
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
          - name: limit
            in: query
            description: "Number of pay grades per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset.
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/PayGradeDto'
    /apiHub/payroll/v1/companies/{companyId}/jobs:
      get:
        tags:
          - Job Codes
        summary: GET a list of Job Codes by Company ID
        description: >
          **Summary Description**


          The GET Job Code List by Company ID endpoint, retrieves a comprehensive
          list of Job Codes from the Paylocity system with each call. Pagination
          can be achieved by using the "jobs" parameter and specifying the values
          of "limit" and "offset" to decide the quantity of records to be
          retrieved. The utilization of the "limit" option permits the user to
          restrict the quantity of rows that are retrieved from a query, whereas
          the "offset" option enables the omission of a designated number of rows
          preceding the commencement of the result set. The utilization of both
          the limit and offset parameters in a query allows for the skipping of
          rows as well as the restriction of the number of rows returned


          **Use Cases**


          - The GET a list of Job Codes API endpoint allows users to fetch
          specific Job Code details from a client's Paylocity instance. To use
          this endpoint, the Paylocity Company ID must be specified

          - The 'Get Job Codes List by Company ID' endpoint empowers API users to
          fetch a comprehensive list of Job Codes alongside their relevant data
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: filter
            in: query
            description: >-
              The API Filter, by defining specific conditions, enables developers
              to fine-tune data from API calls for more precise results, enhancing
              application efficiency and user-friendliness. For more information
              review the Filtering page
            schema:
              type: string
          - name: limit
            in: query
            description: "Number of jobs per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 100"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobCodeDto'
      post:
        tags:
          - Job Codes
        summary: Create a single Job Code
        description: >
          **Summary Description**


          The POST Single Job Code endpoint enables users to create precise values
          regarding Job Codes from the Paylocity instance of a client. In order to
          utilize this endpoint, it is necessary to provide the payload values in
          accordance with the established standards of the Paylocity API, as
          specified for the respective object type and description. It is required
          to provide the Company ID in the endpoint and the specifications of the
          Job Code in the payload body


          **Use Cases**


          - This API endpoint will allow an API user to create a Job Code record
          for a specific company ID

          - Job Codes must be added before running payroll
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: Job Code data
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/CreateJobCodeDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobCodeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateJobCodeDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/CreateJobCodeDto'
        responses:
          '200':
            description: Success
    /apiHub/payroll/v1/companies/{companyId}/jobs/{jobCode}:
      get:
        tags:
          - Job Codes
        summary: GET a single Job Code
        description: >
          **Summary Description**


          The GET Single Job Code API endpoint allows users to fetch specific Job
          Code details from a client's Paylocity instance. To use this endpoint,
          the Paylocity Company ID and Job Code must be specified


          **Use Cases**


          - This API endpoint will allow an API user to retrieve a Job Code record
          for a specific company ID and Job Code ID
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: jobCode
            in: path
            description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JobCodeDto'
      put:
        tags:
          - Job Codes
        summary: Update a single Job Code
        description: >
          **Summary Description**


          The PUT Job Code endpoint enables users to update precise values
          regarding Job Codes from the Paylocity instance of a client. In order to
          utilize this endpoint, it is necessary to provide the payload values in
          accordance with the established standards of the Paylocity API, as
          specified for the respective object type and description.  It is
          required to provide both the Company ID and the Job Code ID in the
          endpoint


          **Use Cases**


          - This API endpoint will allow an API user to update a Job Code record
          for a specific company ID and Job Code ID

          - Job Codes must be added before running payroll
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: jobCode
            in: path
            description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: Job Code data
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateJobCodeDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateJobCodeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateJobCodeDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateJobCodeDto'
        responses:
          '200':
            description: Success
      delete:
        tags:
          - Job Codes
        summary: Delete a single Job Code
        description: >
          **Summary Description**


          The DELETE Job Code endpoint enables users to delete a single job code
          and it’s values from the Paylocity instance of a client. In order to
          utilize this endpoint, it is required to provide both the Company ID and
          the Job Code ID in the endpoint


          **Best Practice Notice:** If you delete a job code which has been used
          in payroll, your reports may be impacted. The best practice is to make
          the job code inactive instead of deleting the entire job code


          **Use Cases**


          - This API endpoint will allow an API user to delete a Job Code record
          for a specific company ID and Job Code ID
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: jobCode
            in: path
            description: "A specific identifier or label assigned to individual tasks, projects, or assignments within a company.\r\n                **Allowable Values:**\r\n                A Job Code may contain up to 10 alpha-numeric characters. Spaces or special characters are not allowed"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
    /documents/v1/companies/{companyId}/companyDocuments:
      get:
        tags:
          - Documents
        summary: Get a list of documents for a company
        description: >
          **Summary Description**


          The GET company documents resource will return a list of documents for a
          specified company ID.
        operationId: GET_Documents_v1_companies_{companyId}_companyDocuments
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
          - name: uploadedDate
            in: query
            description: >-
              Allows for an equals comparison to the uploadedDate field. Time
              portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: uploadedDate.lessThanOrEqualTo
            in: query
            description: >-
              Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
              field. Time portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: uploadedDate.greaterThanOrEqualTo
            in: query
            description: >-
              Allows for a Greater Than Or Equal (>=) comparison to the
              uploadedDate field. Time portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: includeTotalCount
            in: query
            description: >-
              Requests that the response include the Pcty-Total-Count header
              containing the total number of objects that match the request.  This
              may be useful if requesting a small [limit].
            allowEmptyValue: true
            schema:
              type: boolean
          - name: limit
            in: query
            description: Defines the maximum number of items to be returned in the response.
            allowEmptyValue: true
            schema:
              type: integer
              format: int32
          - name: offset
            in: query
            description: >-
              Defines the start location to return.  Ex. offset=100 means starting
              at item 100, return the next [limit] items.
            allowEmptyValue: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompanyDocumentModel'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompanyDocumentModel'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
          '401':
            description: Unauthorized
            content: {}
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
    /documents/v1/companies/{companyId}/employeeDocuments:
      get:
        tags:
          - Documents
        summary: Get a list of documents filtered by employee for a company
        description: >
          **Summary Description**


          This resource allows for looking up documents with additional filters
          such as employee, upload date, and max number of records to return.
        operationId: GET_Documents_v1_companies_{companyId}_employeeDocuments
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
          - name: employeeId
            in: query
            description: Allows for an equals comparison to the employeeId field.
            allowEmptyValue: true
            schema:
              type: string
          - name: uploadedDate
            in: query
            description: >-
              Allows for an equals comparison to the uploadedDate field. Time
              portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: uploadedDate.lessThanOrEqualTo
            in: query
            description: >-
              Allows for a Less Than Or Equal (<=) comparison to the uploadedDate
              field. Time portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: uploadedDate.greaterThanOrEqualTo
            in: query
            description: >-
              Allows for a Greater Than Or Equal (>=) comparison to the
              uploadedDate field. Time portion of the input is ignored.
            allowEmptyValue: true
            schema:
              type: string
              format: date-time
          - name: includeTotalCount
            in: query
            description: >-
              Requests that the response include the Pcty-Total-Count header
              containing the total number of objects that match the request.  This
              may be useful if requesting a small [limit].
            allowEmptyValue: true
            schema:
              type: boolean
          - name: limit
            in: query
            description: Defines the maximum number of items to be returned in the response.
            allowEmptyValue: true
            schema:
              type: integer
              format: int32
          - name: offset
            in: query
            description: >-
              Defines the start location to return.  Ex. offset=100 means starting
              at item 100, return the next [limit] items.
            allowEmptyValue: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/EmployeeDocumentModel'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/EmployeeDocumentModel'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
          '401':
            description: Unauthorized
            content: {}
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
    /documents/v1/companies/{companyId}/documents/{documentId}/downloads:
      post:
        tags:
          - Documents
        summary: Retrieve a document download URL
        description: >
          **Summary Description**


          This will create a new document downloadURL for the specified company
          ID.
        operationId: POST_Documents_v1_companies_{companyId}_documents_{documentId}_downloads
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: documentId
            in: path
            description: >-
              The Paylocity Document Identifier. This is the unique value provided
              by Paylocity to each specific Document object.
            required: true
            schema:
              type: string
              format: uuid
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DocumentDownloadModel'
              text/json:
                schema:
                  $ref: '#/components/schemas/DocumentDownloadModel'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error400Model'
          '401':
            description: Unauthorized
            content: {}
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Error500Model'
    /coreHr/v1/companies/{companyId}/employees:
      get:
        tags:
          - Employees
        summary: Gets a list of employees by company ID
        description: >-
          **Summary Description**


          The GET Employee List by Company ID API endpoint provides a list of up
          to 20 employees per call from the Paylocity system. Designed for the
          initial population of user systems with Paylocity's employee data, it
          supports pagination for easy navigation through results. The 'include'
          parameter enables selective retrieval of payload elements, while the
          'Active Only' filter helps obtain only those employees with an 'Active'
          Employee Status Type. This makes the endpoint highly flexible and
          capable of delivering tailored listings to meet specific user
          requirements.


          **GET Employee List by Company ID - Use Cases:**


          - The 'Get Employee List by Company ID' endpoint empowers API users to
          fetch a comprehensive list of employees alongside their relevant data.
          Ideal for initial data loads.


          - The recommended best practice to track employee demographic changes is
          not through regular polling of this endpoint. Instead, utilize our
          employee webhooks in conjunction with the 'GET Single Employee by
          Company and Employee ID' endpoint.
        parameters:
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: limit
            in: query
            description: "Number of employees per page.\r\n                **Default Value:** 20\r\n                **Maximum Value:** 20"
            schema:
              type: integer
              format: int32
            example: 5
          - name: nextToken
            in: query
            description: Next token for the page.
            schema:
              type: string
          - name: include
            in: query
            description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
            schema:
              type: string
            example: info,position,status,payrate,futurePayrates
          - name: activeOnly
            in: query
            description: "Filter only active emplooyes.\r\n                **Allowable Values:**\r\n                true, false"
            schema:
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeePage'
    /coreHr/v1/companies/{companyId}/employees/{employeeId}:
      get:
        tags:
          - Employees
        summary: Gets a single employee by company and employee IDs
        description: >-
          **Summary Description**


          The GET Single Employee API endpoint allows users to fetch specific
          employee details from a client's Paylocity instance. To use this
          endpoint, the Paylocity Company ID and the Employee ID must be
          specified. The endpoint also offers an 'include' parameter for selective
          data retrieval, enabling users to choose specific payload elements to
          retrieve.


          **GET Specific Employee - Use Cases:**


          - This API endpoint will allow an API user to retrieve an employee
          record for a specific employee ID.


          - For optimal use, pair this API endpoint with the Paylocity Employee
          Change Web Hook. This ensures that you get notified whenever there's a
          change in the employee's data in Paylocity. Along with the notification,
          you will receive the Paylocity Company ID and Employee ID corresponding
          to the employee whose data has been modified. You can then utilize the
          GET Specific Employee API endpoint to access the most recent version of
          the updated employee record.
        parameters:
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: include
            in: query
            description: "Comma separated list of data to be included\r\n                **Allowable Values:**\r\n                info, position, status, payrate and futurePayrates."
            schema:
              type: string
            example: info,position,status,payrate,futurePayrates
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee'
    /apiHub/security/v1/companies/b6001/companyOnboardingStatuses:
      put:
        tags:
          - Client Onboarding
        summary: Upsert onboarding status
        description: >
          > 🚧 Beta Phase

          > 

          > This resource is in closed beta.  Contact the marketplace team to
          explore early adopter opportunities at
          [marketplaceapisupport@paylocity.com](mailto:marketplaceapisupport@paylocity.com) 


          **Summary Description**


          The new Partner Onboarding API is designed to enable our partners to
          onboard customers through our Paylocity Marketplace-initiated workflow.
          Approved partners will utilize the API to provision a client onto a
          specific integration. This API provides an endpoint that allows partners
          to upsert the status of the integration, using the Paylocity companyId
          specified in the request body. Partners can update the
          companyOnboardingStatus to one of three options: InProgress, Approved,
          or Rejected. If approved the partner will be able to sync the requested
          client data through the API.
        parameters:
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly.
            schema:
              type: boolean
              default: false
        requestBody:
          description: Payload of query.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyOnboardingDto'
        responses:
          '200':
            description: Returns the upsert response details.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpsertResultDto'
          '400':
            description: Bad Request Error - Returns the details of the error.
          '404':
            description: Returns the details of the error.
          '415':
            description: Unsupported Media Type - Returns the details of the error.
    /payroll/v2/companies/{companyId}/payEntryImport:
      post:
        tags:
          - Pay Entry
        description: |-
          **Summary Description**

           The Paylocity Pay Entry API is a powerful tool designed to streamline and automate payroll processes. It enables API users to transmit crucial payroll data, such as time tracking, earnings, deductions, and taxes. A batch is posted to Paylocity and is added to the Pay Entry Screen for the corresponding check date. This API Endpoint ensures accuracy and efficiency in the payroll process and reduces manual importing, making it a valuable tool for streamlining inputting Payroll data from an external system. 

           **Pay Entry Use Cases:** 

           - One of the key applications of the Pay Entry API is to facilitate the transmission of payroll batch data from a third-party system to Paylocity's Pay Entry. From here, users can set up a payroll for a specific check date and process it, incorporating the batch data transmitted via the API.
        summary: Create New Payroll Batch
        operationId: PayEntryV2_GetPayEntryImport
        parameters:
          - name: companyId
            in: path
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity
            required: true
            schema: {}
          - name: Authorization
            in: header
            description: Bearer token
            required: true
            schema: {}
        requestBody:
          description: pay entry request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayEntry'
          required: true
        responses:
          '202':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SuccessResponse'
          '400':
            description: invalid body
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '401':
            description: unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Unauthorized'
          '403':
            description: forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Forbidden'
        x-codegen-request-body-name: body
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions:
      get:
        tags:
          - Deductions
        summary: GET Employee Deduction List
        description: >-
          **Summary Description**


          This function will allow the API user to GET a list of all active
          deductions associated with the employee record.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: filter
            in: query
            description: >-
              The API Filter, by defining specific conditions, enables developers
              to fine-tune data from API calls for more precise results, enhancing
              application efficiency and user-friendliness. For more information
              review the Filtering page
            schema:
              type: string
          - name: limit
            in: query
            description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GetDeductionDto'
      post:
        tags:
          - Deductions
        summary: Create new Recurring Employee Deduction
        description: |-
          **Summary Description**

           This function will allow the API user to create a new deduction on the employee record.
          Garnishments cannot be created using the Deduction endpoints.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: >-
            A Payroll Deduction code is a unique identifier used by payroll
            systems to categorize and track specific deductions from an employee's
            paycheck. These deductions can include taxes, health insurance
            premiums, retirement contributions, loan repayments, and more. Each
            type of deduction has its own unique code that allows it to be easily
            identified and processed by the payroll system. This not only ensures
            accurate calculations and disbursements, but also helps with
            record-keeping and reporting requirements.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/CreateDeductionDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeductionDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateDeductionDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/CreateDeductionDto'
        responses:
          '200':
            description: Success
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}:
      get:
        tags:
          - Deductions
        summary: GET Recurring Deduction Detail
        description: >-
          **Summary Description**


          This function will allow the API user to get the details for a specific
          deduction code on an employee record.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GetDeductionDto'
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{resourceId}:
      get:
        tags:
          - Deductions
        summary: >-
          GET Recurring Deduction Details for a specific past/present/future
          deduction
        description: >-
          **Summary Description**


          This function will allow the API user to get details for a particular
          deduction code that occurs in the past/present/future.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetDeductionDto'
      put:
        tags:
          - Deductions
        summary: >-
          Update Recurring Deduction Details for a specific past/present/future
          deduction
        description: >-
          **Summary Description**


          This function will allow the API user to update details for a particular
          deduction code that occurs in the past/present/future. Garnishments
          cannot be updated using the Deduction endpoints.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: >-
            A Payroll Deduction code is a unique identifier used by payroll
            systems to categorize and track specific deductions from an employee's
            paycheck. These deductions can include taxes, health insurance
            premiums, retirement contributions, loan repayments, and more. Each
            type of deduction has its own unique code that allows it to be easily
            identified and processed by the payroll system. This not only ensures
            accurate calculations and disbursements, but also helps with
            record-keeping and reporting requirements.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateDeductionDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDeductionDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateDeductionDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateDeductionDto'
        responses:
          '200':
            description: Success
      delete:
        tags:
          - Deductions
        summary: DELETE Recurring Deduction Code on the Employee Record
        description: >-
          **Summary Description**


          This function will allow the API user to DELETE a particular deduction
          code that occurs in the past/present/future.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings:
      get:
        tags:
          - Earnings
        summary: GET Employee Earnings List
        description: >-
          **Summary Description**


          This function will allow the API user to GET a list of all active
          earnings associated with the employee record.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
          - name: filter
            in: query
            description: >-
              The API Filter, by defining specific conditions, enables developers
              to fine-tune data from API calls for more precise results, enhancing
              application efficiency and user-friendliness. For more information
              review the Filtering page
            schema:
              type: string
          - name: limit
            in: query
            description: "Number of results per page.\r\n                **Default Value:** 250\r\n                **Maximum Value:** 250"
            schema:
              type: integer
              format: int32
              default: 20
            example: 5
          - name: offset
            in: query
            description: Pagination offset
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GetEarningDto'
      post:
        tags:
          - Earnings
        summary: Create new Recurring Employee Earning
        description: >-
          **Summary Description**


          This function will allow the API user to create a new earning on the
          employee record.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: >-
            A Payroll Earning Code is a specific classification used in payroll
            systems to categorize the different types of income an employee
            receives. These codes denote various earnings such as regular hours
            worked, overtime, bonuses, commissions, or holiday pay, among others.
            The purpose of these codes is to streamline the payroll process,
            making it easier to track, manage, and report different types of
            income. They are essential for accurate payroll calculations and
            compliance with tax and labor laws.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/CreateEarningDto'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEarningDto'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateEarningDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/CreateEarningDto'
        responses:
          '200':
            description: Success
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}:
      get:
        tags:
          - Earnings
        summary: GET Recurring Earning Detail
        description: >-
          **Summary Description**


          This function will allow the API user to get the details for a specific
          deduction code on an employee record.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GetEarningDto'
    /apiHub/payroll/v1/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{resourceId}:
      get:
        tags:
          - Earnings
        summary: GET Recurring Earning Details for a specific past/present/future earning
        description: >-
          **Summary Description**


          This function will allow the API user to get details for a particular
          earning code that occurs in the past/present/future.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: testMode
            in: header
            description: If true all responses are mocked and generated randomly
            schema:
              type: boolean
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetEarningDto'
      put:
        tags:
          - Earnings
        summary: >-
          Update Recurring Earning Details for a specific past/present/future
          earning
        description: >-
          **Summary Description**


          This function will allow the API user to update details for a particular
          earning code that occurs in the past/present/future.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        requestBody:
          description: >-
            A Payroll Earning Code is a specific classification used in payroll
            systems to categorize the different types of income an employee
            receives. These codes denote various earnings such as regular hours
            worked, overtime, bonuses, commissions, or holiday pay, among others.
            The purpose of these codes is to streamline the payroll process,
            making it easier to track, manage, and report different types of
            income. They are essential for accurate payroll calculations and
            compliance with tax and labor laws.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateEarningDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEarningDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateEarningDto'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateEarningDto'
        responses:
          '200':
            description: Success
      delete:
        tags:
          - Earnings
        summary: DELETE Recurring Earning Code on the Employee Record
        description: >-
          **Summary Description**


          This function will allow the API user to DELETE a particular earning
          code that occurs in the past/present/future.
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
            example: A12345
          - name: employeeId
            in: path
            description: "A filter to use to limit results to a specific employee.\r\n                **Allowable Values:**\r\n                255 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: resourceId
            in: path
            description: Resource ID of the record
            required: true
            schema:
              type: string
              format: uuid
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            schema:
              type: string
        responses:
          '200':
            description: Success
    /time/v2/companies/{companyId}/punchImport:
      post:
        summary: Create Punch Import
        description: |-
          **Summary Description**

           The Paylocity Punch Import API is an integral part of the Paylocity Time & Labor module, designed to streamline the process of importing time data from external systems. This robust API offers a method for importing punch data, complementing the other two methods: File Import through UX and File Import via SFTP. The API allows a 62-day window for importing punch data - it accepts data for the previous 31 days, given that the pay periods are open and for the upcoming 31 days. Any punches outside this timeframe will not be accepted. This feature allows users to seamlessly integrate their time-tracking systems with the Paylocity platform, enhancing efficiency and data accuracy. 

           **Punch Import API Use Cases:** 

           - An API user who wants to import punches from an external source, pushing them into Paylocity Time & Labor, allowing the Paylocity rules engine to calculate hours worked.
        tags:
          - Punch Import
        operationId: PunchImportNextGenApi_1
        parameters:
          - name: companyId
            in: path
            required: true
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity
            schema: {}
          - name: Authorization
            in: header
            description: Bearer token
            required: true
            schema: {}
        requestBody:
          description: punch import request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PunchImport'
          required: true
        x-codegen-request-body-name: body
        responses:
          '202':
            description: Successful operation.
    /apiHub/benefits/v1/companies/{companyId}/retirementPlans/{planId}/checks/{checkDate}:
      get:
        tags:
          - Retirement contributions
        summary: Gets Retirement Contributions
        description: >-
          **Summary Description**


          The GET Retirement Contributions endpoint provides deferrals, loan
          payments, employer match. The endpoint also provides employee
          compensation, plan compensation and YTD amounts for each money source.
          For smooth data transmission, it's essential to configure your payroll
          code groups within the Payroll/HR system. This configuration must be
          done prior to extracting any data via the API. API users can call the
          API using either the payroll process date or the payroll check date.
          When the API is called, API users will provide three key pieces of
          information: the Paylocity Company ID, the Plan ID, and the Check Date
          they wish to retrieve data for. This information is provided to the API
          user when using our Retirement Webhook solution.


          **The Paylocity Retirement Platform use cases:**

          - The Retirement Contributions endpoint serves to extract data related
          to employee retirement plan contributions and compensation.

          - To use the Retirement Contributions Endpoint, an API user must provide
          the Paylocity Company ID, the Plan ID, and the Check Date for which they
          need data. The returned response will include all employees with
          applicable payroll information.

          - Clients must first set up their Paylocity Payroll Code Groups before
          they can utilize this API endpoint.

          - The optimal solution recommended by Paylocity involves using our
          Retirement Web Hook. This Web Hook equips the API user with necessary
          details such as the Paylocity Company ID, the Plan ID, and the Check
          Date to call the API. This data can then be used to retrieve the most
          recent employee retirement information.
        operationId: >-
          GET_apiHub_benefits_v1_companies_{companyId}_retirementPlans_{planId}_checks_{checkDate}
        parameters:
          - name: companyId
            in: path
            description: >-
              The Paylocity Company ID. This is the unique value provided by
              Paylocity to each specific Payroll Entity
            required: true
            schema:
              type: string
            example: WP5239
          - name: planId
            in: path
            description: >-
              The Plan ID from the retirement plan provider. This would match the
              value provided by the record keeper to the customer
            required: true
            schema:
              type: string
            example: SS5693
          - name: checkDate
            in: path
            description: "The Check Date from the Paylocity Payroll Calendar \r\n            **Allowable Values:**\r\n            Format: yyyy-MM-dd"
            required: true
            schema:
              type: string
              format: date-time
            example: '2023-05-16'
          - name: limit
            in: query
            description: "The number of contribution statements to return. \r\n **Default Value:**\r\n 10\r\n **Maximum Value:**\r\n 100"
            schema:
              type: integer
              format: int32
              example: 10
            example: 10
          - name: offset
            in: query
            description: "The number of contribution statements to skip, if requesting subsequent pages.\r\n**Allowable Values:**\r\n Any integer"
            schema:
              type: integer
              format: int32
              example: 10
            example: 10
          - name: sort
            in: query
            description: "A comma separated list of fields to use for sorting. \r\nFields can be sorted descending by appending :desc to the field name.\r\n\r\n**Allowable Values:**\r\nemployeeId, beginDate, endDate, grossEarnings, hours"
            schema:
              type: string
              example: hours:desc,employeeId
            example: hours:desc,employeeId
          - name: employeeId
            in: query
            description: A filter to use to limit results to a specific employee.
            schema:
              type: string
              example: ABCD
            example: ABCD
          - name: processId
            in: query
            description: >-
              A filter used to limit results to a specific payroll process,
              commonly used when pulling data due to a web hook callback after a
              payroll is processed.
            schema:
              type: string
              example: '2023051601'
            example: '2023051601'
          - name: testFlag
            in: query
            description: A Boolean value that, when set to "true", returns mock data.
            schema:
              type: string
              example: 'false'
            example: 'false'
          - name: Authorization
            in: header
            description: Authorization token. Ex. Bearer ...
            required: true
            schema:
              type: string
              default: Bearer JWT_GOES_HERE
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RetirementContribution'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
          '401':
            description: Unauthorized
          '500':
            description: Server Error
        security:
          - JWTAuthorization: []
    /v1/employee:
      post:
        tags:
          - Employee (v1)
        summary: Add new employee
        description: >
          This resource allows for the creation of a new employee record for a
          specified companyID.  Additional field objects may need to be added for
          companies that use the New Hire Template in the Paylocity HCM solution
          when hiring employees and have additional required fields.
           
          > 🚧 Maintenance Mode

          > 

          > _This resource version is in a limited support mode and should not be
          used for new integrations.  Please use the latest version._
        operationId: addEmployee
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
        requestBody:
          description: New Employee
          content:
            application/json:
              schema:
                type: object
                properties:
                  newEmployee:
                    $ref: '#/components/schemas/newEmployee'
          required: true
        responses:
          '201':
            description: Successfully added
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content: {}
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
    /v1/company/{companyId}/employee/{employeeId}:
      get:
        tags:
          - Employee (v1)
        summary: Get Employee
        description: >
          Get Employee API will return employee data currently available in
          Paylocity Payroll/HR solution.
           
          > 🚧 Maintenance Mode

          > 

          > _This resource version is in a limited support mode and should not be
          used for new integrations.  Please use the latest version._
        operationId: getEmployee
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/employeeV1'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v1/update-employee:
      post:
        tags:
          - Employee (v1)
        summary: Update employee
        description: >
          Update Employee API sends updates to employee data to Paylocity
          Payroll/HR solution.
           
          > 🚧 Maintenance Mode

          > 

          > _This resource version is in a limited support mode and should not be
          used for new integrations.  Please use the latest version._
        operationId: updateEmployee
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
        requestBody:
          description: UpdateEmployee
          content:
            application/json:
              schema:
                type: object
                properties:
                  updateEmployee:
                    $ref: '#/components/schemas/updateEmployee'
          required: true
        responses:
          '200':
            description: Successfully updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content: {}
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
    /v1/deduction:
      post:
        tags:
          - Deduction
        summary: Add / Update Deduction
        description: >-
          Add/Update Deduction API sends new or updated employee deduction
          information directly to Paylocity Payroll/HR solution.
        operationId: deduction
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
        requestBody:
          description: Deduction
          content:
            application/json:
              schema:
                type: object
                properties:
                  deduction:
                    $ref: '#/components/schemas/addUpdateDeduction'
          required: true
        responses:
          '200':
            description: Successfully processed
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content: {}
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
    /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}/{startDate}:
      delete:
        tags:
          - Deduction
        summary: Delete deduction for deduction code / start date
        description: >-
          Delete Deduction API deletes an incorrect deduction from Paylocity
          Payroll/HR solution.
        operationId: deleteDeductionForDeductionCodeStartDate
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: Start Date
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Successfully Deleted
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Not Found
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v1/companies/{companyId}/employees/{employeeId}/deductions:
      get:
        tags:
          - Deduction
        summary: Get All Deductions
        description: Get All Deductions returns all deductions for the selected employee.
        operationId: getAllDeductions
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/deduction'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v1/companies/{companyId}/employees/{employeeId}/deductions/{deductionCode}:
      get:
        tags:
          - Deduction
        summary: Get Deduction for Deduction Code
        description: >-
          Get Deduction for Deduction Code returns records for a specific
          deduction for the selected employee.
        operationId: getDeductionForDeductionCode
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: deductionCode
            in: path
            description: Deduction Code
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/deduction'
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Not Found
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v1/companies/{companyId}/onboarding/employees:
      post:
        tags:
          - Onboarding
        summary: Add Employee to Onboarding
        description: >-
          Onboarding API sends employee data into Paylocity Onboarding to help
          ensure an easy and accurate hiring process for subsequent completion
          into Paylocity Payroll/HR solution.
        operationId: addOnboarding
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: onboarding Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding'
          required: true
        responses:
          '201':
            description: Successfully Added
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
    /v1/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}:
      get:
        tags:
          - Local Tax
        summary: Get Local Tax for Tax Code
        description: >-
          Get Local Tax for Tax Code returns local tax information for the
          specific tax code for the selected employee.
        operationId: getLocalTaxForTaxCode
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: taxCode
            in: path
            description: Tax Code
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/localTax'
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Not Found
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
      put:
        tags:
          - Local Tax
        summary: Update Local Tax
        description: >-
          Update Local Tax sends updated local tax code information for the
          selected employee.
        operationId: updateLocalTax
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: taxCode
            in: path
            description: Tax Code
            required: true
            schema:
              type: string
        requestBody:
          description: >-
            localTax Model (Note: taxCode can be included in the localTax model
            but will be ignored)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/localTax'
          required: true
        responses:
          '204':
            description: Successfully Updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Not Found
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
      delete:
        tags:
          - Local Tax
        summary: Delete Local Tax for Tax Code
        description: >-
          Delete Local Tax for Tax Code deletes the local tax code from Paylocity
          Payroll/HR solution.
        operationId: deleteLocalTaxForTaxCode
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: taxCode
            in: path
            description: Tax Code
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Successfully Deleted
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Not Found
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v1/companies/{companyId}/employees/{employeeId}/localTaxes:
      get:
        tags:
          - Local Tax
        summary: Get All Local Taxes
        description: >-
          Get All Local Taxes returns all local tax information for the selected
          employee.
        operationId: getAllLocalTaxes
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/localTax'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
      post:
        tags:
          - Local Tax
        summary: Add Local Tax
        description: >-
          Add Local Tax sends new local tax information directly to Paylocity
          Payroll/HR solution.
        operationId: addLocalTax
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: localTax Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/localTax'
          required: true
        responses:
          '201':
            description: Successfully Added
            headers:
              location:
                description: The URI to the newly created local tax
                schema:
                  type: string
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
          '403':
            description: Forbidden
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errors'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: body
    /v2/companies/{companyId}/employees/{employeeId}/additionalRates:
      put:
        tags:
          - Additional Rates
        summary: Add/update additional rates
        description: >-
          Sends new or updated employee additional rates information directly to
          Paylocity Payroll/HR solution.
        operationId: Add or update additional rates
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Additional Rate Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/additionalRate'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/credentials/secrets:
      post:
        tags:
          - Client Credentials
        summary: Obtain new client secret.
        description: >-
          Obtain new client secret for Paylocity-issued client id. See Weblink
          Authentication section for details.
        operationId: Add Client Secret
        requestBody:
          description: Add Client Secret Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addClientSecret'
          required: true
        responses:
          '200':
            description: Successfully added
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/clientCredentialsResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/codes/{codeResource}:
      get:
        tags:
          - Company Codes
        summary: Get All Company Codes
        description: "Get All Company Codes for the selected company and resource.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Company Level Information API](ref:get_apihub-payroll-v1-companies-companyid-jobs) should be used when possible in place of Company Codes resource of this API"
        operationId: Get All Company Codes and Descriptions by Resource
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: codeResource
            in: path
            description: >-
              Type of Company Code. Common values costcenter1, costcenter2,
              costcenter3, deductions, earnings, taxes, paygrade, positions.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/companyCodes'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Invalid Code Resource
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/openapi:
      get:
        tags:
          - Company-Specific Schema
        summary: Get Company-Specific Open API Documentation
        description: >-
          The company-specific Open API endpoint allows the client to GET an Open
          API document for the Paylocity API that is customized with
          company-specific resource schemas. These customized resource schemas
          define certain properties as enumerations of pre-defined values that
          correspond to the company's setup with Paylocity Payroll/HR solution.
          The customized schemas also indicate which properties are required by
          the company within Paylocity Payroll/HR solution.<br  />To learn more
          about Open API, click [here](https://www.openapis.org/)
        operationId: Get company-specific Open API documentation
        parameters:
          - name: Authorization
            in: header
            description: Bearer + JWT
            required: true
            schema:
              type: string
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/customfields/{category}:
      get:
        tags:
          - Custom Fields
        summary: Get All Custom Fields
        description: Get All Custom Fields for the selected company
        operationId: Get All Custom Fields by category
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: category
            in: path
            description: Custom Fields Category
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/customFieldDefinition'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: Invalid Category
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/directDeposit:
      get:
        tags:
          - Direct Deposit
        summary: Get All Direct Deposit
        description: >-
          Get All Direct Deposit returns main direct deposit and all additional
          direct depositsfor the selected employee.
        operationId: Get All Direct Deposit
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/directDeposit'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee, or direct deposit does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/earnings:
      get:
        tags:
          - Earnings
        summary: Get All Earnings
        description: Get All Earnings returns all earnings for the selected employee.
        operationId: Get All Earnings
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/earning'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee does not exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      put:
        tags:
          - Earnings
        summary: Add/Update Earning
        description: >-
          Add/Update Earning API sends new or updated employee earnings
          information directly to Paylocity Payroll/HR solution.
        operationId: Add or update an employee earning
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Earning Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/earning'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}/{startDate}:
      get:
        tags:
          - Earnings
        summary: Get Earning by Earning Code and Start Date
        description: >-
          Get Earnings returns the single earning with the provided earning code
          and start date for the selected employee.
        operationId: Get Earning by Earning Code and Start Date
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: Start Date
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/earning'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: >-
              The employee does not exist, or the specified earningCode-startDate
              combination does not exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      delete:
        tags:
          - Earnings
        summary: Delete Earning by Earning Code and Start Date
        description: Delete Earning by Earning Code and Start Date
        operationId: Delete Earning by Earning Code and Start Date
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: Start Date
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Successfully deleted
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: >-
              The employee does not exist, or the specified earningCode-startDate
              combination does not exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/earnings/{earningCode}:
      get:
        tags:
          - Earnings
        summary: Get Earnings by Earning Code
        description: >-
          Get Earnings returns all earnings with the provided earning code for the
          selected employee.
        operationId: Get Earnings by Earning Code
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: earningCode
            in: path
            description: Earning Code
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/earning'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee does not exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/emergencyContacts:
      put:
        tags:
          - Emergency Contacts
        summary: Add/update emergency contacts
        description: >-
          Sends new or updated employee emergency contacts directly to Paylocity
          Payroll/HR solution.
        operationId: Add or update emergency contacts
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Emergency Contact Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emergencyContact'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/benefitSetup:
      put:
        tags:
          - Employee Benefit Setup
        summary: Add/update employee's benefit setup
        description: >-
          Sends new or updated employee benefit setup information directly to
          Paylocity Payroll/HR solution.
        operationId: Update or add employee benefit setup
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: BenefitSetup Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/benefitSetup'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/weblinkstaging/companies/{companyId}/employees/newemployees:
      post:
        tags:
          - Employee Staging
        summary: Add new employee to Web Link
        description: >-
          Add new employee to Web Link will send partially completed or
          potentially erroneous new hire record to Web Link, where it can be
          corrected and competed by company administrator or authorized Paylocity
          Service Bureau employee.
        operationId: Add new employee to Web Link
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: StagedEmployee Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stagedEmployee'
          required: true
        responses:
          '201':
            description: Successfully Added
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/trackingNumberResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees:
      get:
        tags:
          - Employee
        summary: Get all employees
        description: "Get All Employees API will return employee data currently available in Paylocity Payroll/HR solution.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Employee Demographic API](ref:get_corehr-v1-companies-companyid-employees) should be used when possible in place of the Employee resources of this API"
        operationId: Get all employees
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: pagesize
            in: query
            description: Number of records per page. Default value is 25.
            schema:
              type: integer
          - name: pagenumber
            in: query
            description: >-
              Page number to retrieve; page numbers are 0-based (so to get the
              first page of results, pass pagenumber=0). Default value is 0.
            schema:
              type: integer
          - name: includetotalcount
            in: query
            description: >-
              Whether to include the total record count in the header's
              X-Pcty-Total-Count property. Default value is true.
            schema:
              type: boolean
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/employeeInfo'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The company does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      post:
        tags:
          - Employee
        summary: Add new employee
        description: >-
          New Employee API sends new employee data directly to Paylocity
          Payroll/HR solution. Companies who use the New Hire Template in
          Paylocity Payroll/HR solution may require additional fields when hiring
          employees. New Employee API Requests will honor these required fields.
        operationId: Add employee
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Employee Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
          required: true
        responses:
          '201':
            description: Successfully added
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/employeeIdResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}:
      get:
        tags:
          - Employee
        summary: Get employee
        description: "Get Employee API will return employee data currently available in Paylocity Payroll/HR solution.\n \n> 🚧 Maintenance Mode\n> \n> _This API is in a limited support mode and certain resources will be moved to a sunset status in the next 18-24 months._\n> \r\n> The [Employee Demographic API](ref:get_corehr-v1-companies-companyid-employees-employeeid) should be used when possible in place of the Employee resources of this API"
        operationId: Get employee
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/employee'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      patch:
        tags:
          - Employee
        summary: Update employee
        description: Update Employee API will update existing employee data in WebPay.
        operationId: Update employee
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Employee Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
          required: true
        responses:
          '200':
            description: Successfully Updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/localTaxes:
      get:
        tags:
          - Local Taxes
        summary: Get all local taxes
        description: Returns all local taxes for the selected employee.
        operationId: Get all local taxes
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/localTax'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee does not exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      post:
        tags:
          - Local Taxes
        summary: Add new local tax
        description: >-
          Sends new employee local tax information directly to Paylocity
          Payroll/HR solution.
        operationId: Add local tax
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: LocalTax Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/localTax'
          required: true
        responses:
          '201':
            description: Successfully added
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/localTaxes/{taxCode}:
      get:
        tags:
          - Local Taxes
        summary: Get local taxes by tax code
        description: >-
          Returns all local taxes with the provided tax code for the selected
          employee.
        operationId: Get local tax by tax code
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: taxCode
            in: path
            description: Tax Code
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/localTax'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: >-
              The employee does not exist, or the specified tax code does not
              exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      delete:
        tags:
          - Local Taxes
        summary: Delete local tax by tax code
        description: Delete local tax by tax code
        operationId: Delete local tax by tax code
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: taxCode
            in: path
            description: Tax Code
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Successfully deleted
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: >-
              The employee does not exist, or the specified tax code does not
              exist
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/nonprimaryStateTax:
      put:
        tags:
          - Non-Primary State Tax
        summary: Add/update non-primary state tax
        description: >-
          Sends new or updated employee non-primary state tax information directly
          to Paylocity Payroll/HR solution.
        operationId: Add or update non-primary state tax
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Non-Primary State Tax Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nonPrimaryStateTax'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}/{checkDate}:
      get:
        tags:
          - PayStatements
        summary: >-
          Get employee pay statement details data for the specified year and check
          date.
        description: >-
          Get pay statement details API will return employee pay statement detail
          data currently available in Paylocity Payroll/HR solution for the
          specified year and check date.
        operationId: >-
          Gets employee pay statement detail data based on the specified year and
          check date
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: year
            in: path
            description: The year for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: checkDate
            in: path
            description: The check date for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: pagesize
            in: query
            description: Number of records per page. Default value is 25.
            schema:
              type: integer
          - name: pagenumber
            in: query
            description: >-
              Page number to retrieve; page numbers are 0-based (so to get the
              first page of results, pass pagenumber=0). Default value is 0.
            schema:
              type: integer
          - name: includetotalcount
            in: query
            description: >-
              Whether to include the total record count in the header's
              X-Pcty-Total-Count property. Default value is true.
            schema:
              type: boolean
          - name: codegroup
            in: query
            description: >-
              Retrieve pay statement details related to specific deduction,
              earning or tax types. Common values include 401k, Memo, Reg, OT,
              Cash Tips, FED and SITW.
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/payStatementDetails'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee, specified year, or check date does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/paystatement/details/{year}:
      get:
        tags:
          - PayStatements
        summary: Get employee pay statement details data for the specified year.
        description: >-
          Get pay statement details API will return employee pay statement details
          data currently available in Paylocity Payroll/HR solution for the
          specified year.
        operationId: Gets employee pay statement detail data based on the specified year
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: year
            in: path
            description: The year for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: pagesize
            in: query
            description: Number of records per page. Default value is 25.
            schema:
              type: integer
          - name: pagenumber
            in: query
            description: >-
              Page number to retrieve; page numbers are 0-based (so to get the
              first page of results, pass pagenumber=0). Default value is 0.
            schema:
              type: integer
          - name: includetotalcount
            in: query
            description: >-
              Whether to include the total record count in the header's
              X-Pcty-Total-Count property. Default value is true.
            schema:
              type: boolean
          - name: codegroup
            in: query
            description: >-
              Retrieve pay statement details related to specific deduction,
              earning or tax types. Common values include 401k, Memo, Reg, OT,
              Cash Tips, FED and SITW.
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/payStatementDetails'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee, specified year, or check date does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}/{checkDate}:
      get:
        tags:
          - PayStatements
        summary: >-
          Get employee pay statement summary data for the specified year and check
          date.
        description: >-
          Get pay statement summary API will return employee pay statement summary
          data currently available in Paylocity Payroll/HR solution for the
          specified year and check date.
        operationId: >-
          Gets employee pay statement summary data based on the specified year and
          check date
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: year
            in: path
            description: The year for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: checkDate
            in: path
            description: The check date for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: pagesize
            in: query
            description: Number of records per page. Default value is 25.
            schema:
              type: integer
          - name: pagenumber
            in: query
            description: >-
              Page number to retrieve; page numbers are 0-based (so to get the
              first page of results, pass pagenumber=0). Default value is 0.
            schema:
              type: integer
          - name: includetotalcount
            in: query
            description: >-
              Whether to include the total record count in the header's
              X-Pcty-Total-Count property. Default value is true.
            schema:
              type: boolean
          - name: codegroup
            in: query
            description: >-
              Retrieve pay statement details related to specific deduction,
              earning or tax types. Common values include 401k, Memo, Reg, OT,
              Cash Tips, FED and SITW.
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/payStatementSummary'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee, specified year, or check date does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/paystatement/summary/{year}:
      get:
        tags:
          - PayStatements
        summary: Get employee pay statement summary data for the specified year.
        description: >-
          Get pay statement summary API will return employee pay statement summary
          data currently available in Paylocity Payroll/HR solution for the
          specified year.
        operationId: Gets employee pay statement summary data based on the specified year
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
          - name: year
            in: path
            description: The year for which to retrieve pay statement data
            required: true
            schema:
              type: string
          - name: pagesize
            in: query
            description: Number of records per page. Default value is 25.
            schema:
              type: integer
          - name: pagenumber
            in: query
            description: >-
              Page number to retrieve; page numbers are 0-based (so to get the
              first page of results, pass pagenumber=0). Default value is 0.
            schema:
              type: integer
          - name: includetotalcount
            in: query
            description: >-
              Whether to include the total record count in the header's
              X-Pcty-Total-Count property. Default value is true.
            schema:
              type: boolean
          - name: codegroup
            in: query
            description: >-
              Retrieve pay statement details related to specific deduction,
              earning or tax types. Common values include 401k, Memo, Reg, OT,
              Cash Tips, FED and SITW.
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/payStatementSummary'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '404':
            description: The employee, specified year, or check date does not exist
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
    /v2/companies/{companyId}/employees/{employeeId}/primaryStateTax:
      put:
        tags:
          - Primary State Tax
        summary: Add/update primary state tax
        description: >-
          Sends new or updated employee primary state tax information directly to
          Paylocity Payroll/HR solution.
        operationId: Add or update primary state tax
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Primary State Tax Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stateTax'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
    /v2/companies/{companyId}/employees/{employeeId}/sensitivedata:
      get:
        tags:
          - Sensitive Data
        summary: Get sensitive data
        description: >-
          Gets employee sensitive data information directly from Paylocity
          Payroll/HR solution.
        operationId: Get sensitive data
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Retrieved
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/sensitiveData'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
      put:
        tags:
          - Sensitive Data
        summary: Add/update sensitive data
        description: >-
          Sends new or updated employee sensitive data information directly to
          Paylocity Payroll/HR solution.
        operationId: Add or update Sensitive Data
        parameters:
          - name: companyId
            in: path
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity.\r\n                **Allowable Values:**\r\n                9 char max"
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            required: true
            schema:
              type: string
        requestBody:
          description: Sensitive Data Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitiveData'
          required: true
        responses:
          '200':
            description: Successfully added or updated
            content: {}
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
          '401':
            description: Unauthorized
            content: {}
          '403':
            description: Forbidden
            content: {}
          '429':
            description: Too Many Requests
            content: {}
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/error'
        security:
          - paylocity_auth:
              - WebLinkAPI
        x-codegen-request-body-name: json
  components:
    schemas:
      AddBillingCodeRequest:
        type: object
        properties:
          billingCodes:
            type: array
            items:
              $ref: '#/components/schemas/BillingCodeDto'
            description: Array of billing codes.
            nullable: true
        additionalProperties: false
        description: Billing code request payload.
      BillingCodeDto:
        type: object
        properties:
          billingCode:
            type: string
            description: >-
              Billing code associated with the screening order. This billing code
              is created on the partner side for a specific company.
            nullable: true
          isActive:
            type: boolean
            description: "(Optional, if not provided – TRUE) A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
        additionalProperties: false
        description: Billing code DTO payload.
      CallbackDetailsDto:
        type: object
        properties:
          successCallbackUrl:
            type: string
            description: "Your callback POST endpoint URL where you will receive new screening orders.\r\n    **Allowable Values:**\r\n    256 char max"
            nullable: true
          errorCallbackUrl:
            type: string
            description: "Optional. Your callback POST endpoint where you will receive errors occured during the POST a new screening order.\r\n    **Allowable Values:**\r\n    256 char max"
            nullable: true
        additionalProperties: false
        description: Callback Details
      CallerDetailsDto:
        type: object
        properties:
          callerName:
            type: string
            description: "This is a field used to identify the partner, this typically is the company name.\r\n    **Allowable Values:**\r\n    50 char max"
            nullable: true
        additionalProperties: false
      CandidateExternalDto:
        type: object
        properties:
          title:
            type: string
            description: Holds the title of the candidate, e.g., Mr., Ms., Dr.
            nullable: true
          firstName:
            type: string
            description: Candidate's first name.
            nullable: true
          middleName:
            type: string
            description: Candidate's middle name.
            nullable: true
          lastName:
            type: string
            description: Candidate's last name.
            nullable: true
          email:
            type: string
            description: Candidate's email address.
            nullable: true
          mobile:
            type: string
            description: Candidate's mobile phone number.
            nullable: true
          location:
            type: string
            description: Location of the candidate.
            nullable: true
        additionalProperties: false
      CandidateScreeningOrderStatusUpdateRequest:
        type: object
        properties:
          candidateScreeningOrderId:
            type: string
            description: Unique identifier of the screening order that was sent to you.
            format: uuid
            example: e72f7918-20c5-4bd2-9a5f-9bee67bd304d
          updatedAt:
            type: string
            description: 'The date time of the update.Example: 2023-01-04T04:23:11.586Z'
            format: date-time
            example: '2023-01-04T04:23:11.586Z'
          oldStatus:
            enum:
              - Ordered
              - WaitingOnCandidate
              - InProgress
              - Hold
              - Complete
              - PreAdverseActionSent
              - AdverseActionCancelled
              - Dispute
              - AdverseActionSent
            type: string
            description: The previous status of the screening order.
            nullable: true
          newStatus:
            enum:
              - Ordered
              - WaitingOnCandidate
              - InProgress
              - Hold
              - Complete
              - PreAdverseActionSent
              - AdverseActionCancelled
              - Dispute
              - AdverseActionSent
            type: string
            description: The new status of the screening order.
            nullable: true
          services:
            type: array
            items:
              $ref: '#/components/schemas/ServiceStatusUpdateDto'
            description: >-
              The array of services in scope of which the screening order will be
              processed
            nullable: true
          screeningReportDocuments:
            type: array
            items:
              type: string
            description: >-
              An array of strings representing the URL of the screening report
              that can be viewed on the partner’s web application.
            nullable: true
        additionalProperties: false
        description: The update information for the screening order
      CandidateScreeningOrderStatusUpdateResponse:
        type: object
        properties:
          candidateScreeningOrderId:
            type: string
            description: The Id of the screening order that was updated
            format: uuid
            example: 9de5efb4-3ede-4b92-97f7-71389c31abff
          status:
            type: string
            description: The updated status
            nullable: true
            example: >-
              Ordered, WaitingOnCandidate, InProgress, Hold, Complete,
              PreAdverseActionSent, AdverseActionCancelled, Dispute,
              AdverseActionSent
        additionalProperties: false
        description: The response of the update screening order
      CandidateScreeningOrdersSubscriptionResponse:
        type: object
        properties:
          webhookCallbackId:
            type: string
            description: The GUID of the Callback URL.
            format: uuid
          apiKey:
            type: string
            description: The API Key you specfied when you created the Callback URL.
            nullable: true
          callbackDetails:
            $ref: '#/components/schemas/CallbackDetailsDto'
          callerDetails:
            $ref: '#/components/schemas/CallerDetailsDto'
        additionalProperties: false
        description: Callback informations.
      ClientOnboardingUpsertRequest:
        type: object
        properties:
          companyId:
            type: string
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity. \r\n    **Allowable Values:**\r\n    9 char max"
            nullable: true
            example: ' A00123'
          status:
            enum:
              - InProgress
              - Approved
              - Rejected
            type: string
            description: >-
              The status to indicate the onboarding stage for a customer where the
              account form was filled up and is currently under review by your
              team.
            nullable: true
        additionalProperties: false
        description: The onboarding request.
      ClientOnboardingUpsertResponse:
        type: object
        properties:
          upsertResult:
            $ref: '#/components/schemas/UpsertResultDto'
        additionalProperties: false
        description: Onboarding Response
      DeletePackageResponse:
        type: object
        properties:
          packageId:
            type: string
            description: The id of the deleted screening package.
            nullable: true
          status:
            type: string
            description: The status of the delete operation.
            nullable: true
        additionalProperties: false
        description: The response of the delete operation.
      DeleteSubscriptionResponse:
        type: object
        properties:
          status:
            type: string
            description: Status of the delete subscription operation.
            nullable: true
          callbackId:
            type: string
            description: The GUID of the Callback URL deleted.
            format: uuid
        additionalProperties: false
      ErrorDto:
        type: object
        properties:
          code:
            type: string
            description: Error code associated with the error.
            nullable: true
          message:
            type: string
            description: Descriptive message detailing the error.
            nullable: true
        additionalProperties: false
      GenericErrorResponse:
        type: object
        properties:
          correlationId:
            type: string
            description: A unique identifier used for tracing and correlation purposes.
            nullable: true
          value:
            $ref: '#/components/schemas/ErrorDto'
        additionalProperties: false
      NewCandidateScreeningOrderEventPayloadData:
        type: object
        properties:
          candidateScreeningOrder:
            $ref: '#/components/schemas/PartnerCandidateScreeningOrderDto'
        additionalProperties: false
      PartnerCandidateScreeningOrderDto:
        type: object
        properties:
          candidateScreeningOrderId:
            type: string
            description: Unique identifier for the candidate screening order.
            format: uuid
          candidate:
            $ref: '#/components/schemas/CandidateExternalDto'
          companyId:
            type: string
            description: Identifier for the company associated with the screening.
            nullable: true
          packageId:
            type: string
            description: Identifier for the screening package selected.
            nullable: true
          billingCode:
            type: string
            description: Billing code associated with the screening order.
            nullable: true
          location:
            type: string
            description: Location associated with the screening order.
            nullable: true
          recruiter:
            $ref: '#/components/schemas/RecruiterDto'
        additionalProperties: false
      PriceDto:
        type: object
        properties:
          value:
            type: number
            description: The value amount, or cost, for the package.
            format: double
          currency:
            type: string
            description: "The currency of the price.\r\n    **Allowable Values:**\r\n    USD, EUR, GBP, CAD"
            nullable: true
        additionalProperties: false
        description: An object representing the price of the package.
      RecruiterDto:
        type: object
        properties:
          recruiterId:
            type: string
            description: Unique identifier for the recruiter.
            nullable: true
          firstName:
            type: string
            description: First name of the recruiter.
            nullable: true
          lastName:
            type: string
            description: Last name of the recruiter.
            nullable: true
          email:
            type: string
            description: Email address of the recruiter.
            nullable: true
          certificationDateTime:
            type: string
            description: >-
              The date and time when the recruiter was certified. Date format in
              ISO 8601.
            format: date-time
        additionalProperties: false
      ScreeningPackageBulkUpsertDto:
        type: object
        properties:
          packageId:
            type: string
            description: "The Id of the Screening Package.\r\n    **Allowable Values:**\r\n    36 char max"
            nullable: true
          isActive:
            type: boolean
            description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          packageSummary:
            type: string
            description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          packageName:
            type: string
            description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          services:
            type: array
            items:
              $ref: '#/components/schemas/ServiceDto'
            description: >-
              An array of objects representing the underlying services that are
              included in the background check package.
            nullable: true
          price:
            $ref: '#/components/schemas/PriceDto'
          billingCode:
            type: string
            description: Partner billing code
            nullable: true
        additionalProperties: false
        description: Screening Package information
      ScreeningPackageBulkUpsertRequest:
        type: object
        properties:
          packages:
            type: array
            items:
              $ref: '#/components/schemas/ScreeningPackageBulkUpsertDto'
            description: The list of screening packages to be upserted.
            nullable: true
        additionalProperties: false
        description: Screening Package Upsert Request.
      ScreeningPackageDto:
        type: object
        properties:
          isActive:
            type: boolean
            description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          packageSummary:
            type: string
            description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          packageName:
            type: string
            description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          services:
            type: array
            items:
              $ref: '#/components/schemas/ServiceDto'
            description: >-
              An array of objects representing the underlying services that are
              included in the background check package.
            nullable: true
          price:
            $ref: '#/components/schemas/PriceDto'
          billingCode:
            type: string
            description: >-
              Billing code created by a client that can be associated with an
              order (optional).
            nullable: true
          packageId:
            type: string
            description: The Id of the Screening Package.
            nullable: true
          createdAt:
            type: string
            description: The date when the Screening Package was created.
            nullable: true
          updatedAt:
            type: string
            description: The date when the Screening Package was updated.
            nullable: true
          partnerName:
            type: string
            description: Related Partner name.
            nullable: true
        additionalProperties: false
        description: Screening Package Information
      ScreeningPackageUpsertRequest:
        type: object
        properties:
          isActive:
            type: boolean
            description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
          packageSummary:
            type: string
            description: "A detailed description of the background check package and what is included in the package.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          packageName:
            type: string
            description: "The name of the specific background check package that the users will see.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
          services:
            type: array
            items:
              $ref: '#/components/schemas/ServiceDto'
            description: >-
              An array of objects representing the underlying services that are
              included in the background check package.
            nullable: true
          price:
            $ref: '#/components/schemas/PriceDto'
          billingCode:
            type: string
            description: >-
              Billing code created by a client that can be associated with an
              order (optional).
            nullable: true
        additionalProperties: false
        description: Screening package Upsert Request.
      ScreeningPackageUpsertResponse:
        type: object
        properties:
          upsertResult:
            $ref: '#/components/schemas/UpsertResultDto'
        additionalProperties: false
        description: Screening Package Upserted Response
      ScreeningPackagesResponse:
        type: object
        properties:
          count:
            type: integer
            description: Gets the count of items in the Values list.
            format: int32
            readOnly: true
          values:
            type: array
            items:
              $ref: '#/components/schemas/ScreeningPackageDto'
            description: A list of items.
            nullable: true
        additionalProperties: false
      ServiceDto:
        type: object
        properties:
          serviceName:
            type: string
            description: "The name of the specific service within a background check package that the users will see.\r\n    **Allowable Values:**\r\n    50 char max"
            nullable: true
          serviceSummary:
            type: string
            description: "A detailed description of the underlying service in a package.\r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
        additionalProperties: false
      ServiceStatusUpdateDto:
        type: object
        properties:
          serviceName:
            type: string
            description: "The name of the specific service within a background check package that the users will see.\r\n    **Allowable Values:**\r\n    50 char max"
            nullable: true
          oldStatus:
            enum:
              - Pending
              - InProgress
              - Completed
            type: string
            description: The previous status of the service.
            nullable: true
          newStatus:
            enum:
              - Pending
              - InProgress
              - Completed
            type: string
            description: The new status of the service.
            nullable: true
          note:
            type: string
            description: "This is an optional field if the partner needs to send additional details with status of a service \r\n    **Allowable Values:**\r\n    250 char max"
            nullable: true
        additionalProperties: false
      SubscribeNewCandidateScreeningOrderRequest:
        type: object
        properties:
          apiKey:
            type: string
            description: "Optional. The value of the x-api-key header to utilize while executing the callback.\r\n                **Allowable Values:**\r\n                50 char max"
            nullable: true
          callbackDetails:
            $ref: '#/components/schemas/CallbackDetailsDto'
          callerDetails:
            $ref: '#/components/schemas/CallerDetailsDto'
        additionalProperties: false
      SubscribeNewCandidateScreeningOrderResponse:
        type: object
        properties:
          status:
            type: string
            description: Status
            nullable: true
          webhookCallbackId:
            type: string
            description: GUID of the callback.
            format: uuid
          requestObject:
            $ref: '#/components/schemas/SubscribeNewCandidateScreeningOrderRequest'
        additionalProperties: false
        description: Response of successfully registed webhook.
      UpdateBillingCodeRequest:
        type: object
        properties:
          isActive:
            type: boolean
            description: "A Boolean value indicating if the package is active.\r\n    **Allowable Values:**\r\n    true, false"
        additionalProperties: false
        description: Update billing code request payload.
      UpsertResultDto:
        type: object
        properties:
          inserted:
            type: boolean
            description: True if it was inserted, false if it was updated
          updated:
            type: boolean
            description: True if it was updated, false if it was inserted
        additionalProperties:
          type: object
          nullable: true
        description: Upsert response.
      ValidationErrorDto:
        type: object
        properties:
          code:
            type: string
            description: Error code associated with the error.
            nullable: true
          message:
            type: string
            description: Descriptive message detailing the error.
            nullable: true
          fields:
            type: string
            description: A string detailing the fields involved in the validation error.
            nullable: true
        additionalProperties: false
      ValidationErrorResponse:
        type: object
        properties:
          count:
            type: integer
            description: Gets the count of items in the Values list.
            format: int32
            readOnly: true
          values:
            type: array
            items:
              $ref: '#/components/schemas/ValidationErrorDto'
            description: A list of items.
            nullable: true
          correlationId:
            type: string
            description: A unique identifier used for tracing and correlation purposes.
            nullable: true
        additionalProperties: false
      CareerLevelDto:
        type: object
        properties:
          careerLevelKey:
            type: integer
            description: Career level key.
            format: int32
            nullable: true
          clientId:
            type: integer
            description: Client ID associated with career level.
            format: int32
            nullable: true
          code:
            type: string
            description: Career level code.
            nullable: true
          name:
            type: string
            description: Name of the career level.
            nullable: true
          description:
            type: string
            description: Description of the career level.
            nullable: true
          positionsAssigned:
            type: integer
            description: Number of positions assigned to the career level.
            format: int32
            nullable: true
          active:
            type: boolean
            description: Indicates if the career level code is active.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CompanyDeductionTypeDto:
        type: object
        properties:
          code:
            type: string
            description: >-
              A unique code representing a specific classification, allowing for
              efficient categorization and differentiation.
            nullable: true
          category:
            type: string
            description: >-
              A descriptor indicating the category to which an entity or item
              belongs, enhancing its classification and understanding.
            nullable: true
          calculationCode:
            type: string
            description: The code used for calculating the deduction type.
            nullable: true
          overrideCalculationCode:
            type: string
            description: >-
              A code that overrides standard calculation rules or algorithms,
              enabling customized calculations for specific scenarios.
            nullable: true
          w2Box:
            type: string
            description: >-
              A reference to a specific box on a W-2 tax form, aiding in the
              accurate reporting of various types of income and deductions.
            nullable: true
          isGarnishmentDedType:
            type: boolean
            description: >-
              An indicator specifying whether an entity or item is categorized as
              a garnishment deduction type, aiding in payroll and deduction
              management.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CompanyEarningTypeDto:
        type: object
        properties:
          code:
            type: string
            description: The code representing the earning type.
            nullable: true
          description:
            type: string
            description: The category to which the earning type belongs.
            nullable: true
          calculationCode:
            type: string
            description: The code used for calculating the earning type.
            nullable: true
          overrideCalculationCode:
            type: string
            description: The overridden calculation code for the earning type.
            nullable: true
          w2Box:
            type: string
            description: The W-2 box associated with the earning type.
            nullable: true
          isFringeBenefit:
            type: boolean
            description: Indicates whether the earning type is a garnishment.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CompanyInformationAddressDto:
        type: object
        properties:
          type:
            type: string
            description: >-
              Specifies the type of address, such as "Home," "Work," "Billing," or
              "Shipping." It helps categorize and differentiate between different
              address entries.
            nullable: true
          label:
            type: string
            description: >-
              Allows users to assign a custom label or name to the address entry
              for easy reference. It can be used for additional context or
              organization, such as "Home Office" or "Office Address."
            nullable: true
          line1:
            type: string
            description: >-
              This field represents the first line of the street address,
              including the house or building number and the street name. It is an
              essential part of any physical address.
            nullable: true
          line2:
            type: string
            description: >-
              Optional field that allows for additional address information, such
              as an apartment number, suite, or any other details that help
              further pinpoint the location.
            nullable: true
          mailStopCode:
            type: string
            description: >-
              Represents the specific alphanumeric code or identifier assigned to
              a mail stop within an organization or institution. Mail stop codes
              are often used to route internal or interoffice mail to the correct
              destination.
            nullable: true
          locality:
            type: string
            description: Area or neighborhood.
            nullable: true
          state:
            type: string
            description: >-
              Represents the state, region, or province in which the locality is
              located. It provides additional context for the geographical
              location and is especially relevant in larger countries or regions.
            nullable: true
          postalCode:
            type: string
            description: >-
              Contains the alphanumeric or numeric code that uniquely identifies a
              specific postal or ZIP code. Postal codes are used for mail sorting
              and delivery, helping postal services direct mail to the correct
              geographic.
            nullable: true
          country:
            type: string
            description: >-
              Indicates the name of the country where the locality is situated. It
              specifies the broader national context for the locality.
            nullable: true
          county:
            type: string
            description: >-
              Contains the name of the county, which is a specific administrative
              or geographical region within a larger state or country. Counties
              are often used for administrative and geographical purposes.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CompanyInformationDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          companyName:
            type: string
            description: >-
              Represents the official name of the company or organization. It
              typically includes the full legal name of the company and is used to
              uniquely identify the entity.
            nullable: true
          phone:
            type: string
            description: >-
              Contains the numerical digits that make up the phone number. It
              represents the unique identifier for contacting an individual or
              entity by phone.
            nullable: true
          webTimeCo:
            type: string
            description: The web time company ID.
            nullable: true
          clientId:
            type: integer
            description: >-
              ClientId is the company set ID when the client is a company set. If
              the client is a standalone company, then clientId will be the same
              as the companyId.
            format: int32
            nullable: true
          parentCompanySetId:
            type: string
            description: >-
              Indicates the company set to which the company belongs. It helps
              organize and categorize companies into sets or groups.
            nullable: true
          serviceStartDate:
            type: string
            description: >-
              Represents the date when the company's services or operations
              officially commenced. It is useful for tracking the start of
              business activities.
            format: date-time
            nullable: true
          ein:
            type: string
            description: >-
              Stands for Employee Identification Number, a unique identifier
              assigned to businesses for tax purposes in the United States. It
              helps identify the company for tax reporting.
            nullable: true
          dba:
            type: string
            description: >-
              Represents the Doing Business As (DBA) name of the company. It is
              the name under which the company conducts business if it differs
              from its legal name.
            nullable: true
          naics:
            type: integer
            description: >-
              Refers to the North American Industry Classification System (NAICS)
              code. It classifies the company's primary industry or business
              sector.
            format: int32
            nullable: true
          industryType:
            type: string
            description: >-
              Provides information about the type or category of industry in which
              the company operates. It helps categorize businesses further.
            nullable: true
          accessEndDate:
            type: string
            description: >-
              Specifies the date when access to a particular system or service
              will expire for the company.
            format: date-time
            nullable: true
          endDate:
            type: string
            description: >-
              Represents the date when a specific service or agreement with the
              company will conclude or expire.
            format: date-time
            nullable: true
          firstCheckDate:
            type: string
            description: >-
              First Check Date refers to the day a company's initial billing
              begins.
            format: date-time
            nullable: true
          status:
            type: string
            description: >-
              Indicates whether the company is currently active or inactive. It
              serves as a binary indicator of the company's operational status.
            nullable: true
          entityType:
            type: string
            description: >-
              Specifies the legal type of entity to which the company belongs.
              Common entity types include "Corporation," "Limited Liability
              Company (LLC)," and others.
            nullable: true
          address:
            $ref: '#/components/schemas/CompanyInformationAddressDto'
          relationships:
            type: array
            items:
              $ref: '#/components/schemas/RelationshipDto'
            description: >-
              Refers to the company relationships model, which may encompass
              various connections or associations between the company and other
              entities.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CostCenterLevelModelDto:
        type: object
        properties:
          id:
            type: integer
            description: >-
              A unique identifier for a cost center, serving as a reference key
              for identification and association with specific financial or
              organizational entities.
            format: int32
            nullable: true
          level:
            type: integer
            description: >-
              The level or rank of the cost center within the organizational
              hierarchy, indicating its position and importance within the
              organization's structure.
            format: int32
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label that provides additional
              context and meaning to the cost center, enhancing understanding and
              clarity regarding its purpose and role.
            nullable: true
          costCenters:
            type: array
            description: An array of objects containing cost center details.
            items:
              $ref: '#/components/schemas/CostCenterModelDto'
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CostCenterModelDto:
        type: object
        properties:
          id:
            type: integer
            description: >-
              A unique identifier for a specific cost center within the
              organizational structure, allowing for precise identification and
              association with financial data and operations.
            format: int32
            nullable: true
          code:
            type: string
            description: >-
              A code or label representing the cost center, aiding in its
              categorization and differentiation within the organization's
              financial and operational framework.
            nullable: true
          name:
            type: string
            description: >-
              The name or title of the cost center, offering a clear and
              descriptive label for easy recognition and understanding of its role
              and responsibilities.
            nullable: true
          isActive:
            type: boolean
            description: >-
              An indicator denoting the current status or active state of the cost
              center, assisting in management and decision-making regarding
              financial operations and allocation.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      DeductionCodeDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          code:
            type: string
            description: >-
              A distinct code representing a specific entity or item, serving as a
              concise reference for accurate identification and categorization.
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label providing additional context
              and meaning to the associated code or entity.
            nullable: true
          checkStubDescription:
            type: string
            description: >-
              A descriptive text that appears on an employee's check stub,
              offering transparency and clarity regarding payment details.
            nullable: true
          priority:
            type: integer
            description: >-
              An indicator defining the priority or ranking of an item, allowing
              for prioritization and sorting within a specific context.
            format: int32
            nullable: true
          w2Box:
            type: string
            description: The W2 box code associated with the deduction.
            nullable: true
          printOnCheckStub:
            type: boolean
            description: >-
              An indicator specifying whether the associated information or
              description should be printed on an employee's check stub.
            nullable: true
          payPeriodMaximum:
            type: number
            description: The maximum amount deducted per pay period.
            format: double
            nullable: true
          payPeriodMinimum:
            type: number
            description: The minimum amount deducted per pay period.
            format: double
            nullable: true
          annualMaximum:
            type: number
            description: The maximum annual deduction amount.
            format: double
            nullable: true
          rate:
            type: number
            description: >-
              A numerical representation of a specific rate or value, often
              utilized in financial calculations and compensation structures.
            format: double
            nullable: true
          frequency:
            type: string
            description: The frequency of the deduction (e.g., monthly, weekly).
            nullable: true
          calculationCode:
            type: string
            description: >-
              A code used in calculations to determine specific values or
              outcomes, aiding in complex computation scenarios.
            nullable: true
          amount:
            type: number
            description: The fixed amount of the deduction.
            format: double
            nullable: true
          kCode:
            type: string
            description: >-
              A code or identifier, often unique to a particular context,
              facilitating specialized categorization or classification.
            nullable: true
          agency:
            type: string
            description: The agency or entity responsible for the deduction.
            nullable: true
          takePartial:
            type: boolean
            description: >-
              An indicator specifying whether partial deductions or actions should
              be taken, allowing for nuanced processing.
            nullable: true
          autoMakeup:
            type: boolean
            description: >-
              An indicator defining whether automatic makeup or adjustments should
              be applied under specific conditions or criteria.
            nullable: true
          isActive:
            type: boolean
            description: >-
              An indicator denoting the current status or active state of an
              entity or item, aiding in management and decision-making.
            nullable: true
          includeOnYtdCompChart:
            type: boolean
            description: >-
              An indicator specifying whether the data should be included on a
              year-to-date compensation chart or report.
            nullable: true
          source:
            type: integer
            description: >-
              The origin or source of data, indicating where the information was
              derived or obtained from within the system.
            format: int32
            nullable: true
          wasUsedInPayroll:
            type: boolean
            description: >-
              An indicator confirming whether the data was utilized in payroll
              processing, ensuring transparency in payroll calculations.
            nullable: true
          benefitType:
            type: string
            description: The type or category of the deduction (e.g., health, retirement).
            nullable: true
          selfInsured:
            type: boolean
            description: >-
              An indicator indicating whether an entity or item is self-insured,
              meaning it assumes responsibility for insurance coverage.
            nullable: true
          isEmployerPaidMedicalLeave:
            type: boolean
            description: >-
              An indicator specifying whether an entity or item is related to
              employer-paid medical leave, offering clarity on benefit coverage.
            nullable: true
          exemptTaxes:
            type: array
            items:
              type: string
            description: >-
              A field indicating which taxes are exempted or excluded in specific
              scenarios, aiding in tax-related calculations and reporting.
            nullable: true
          blockedTaxes:
            type: array
            items:
              type: string
            description: >-
              A field specifying taxes that are blocked or restricted from certain
              calculations or processes, ensuring accurate taxation.
            nullable: true
          type:
            $ref: '#/components/schemas/CompanyDeductionTypeDto'
        additionalProperties:
          type: object
          nullable: true
      EarningCodesDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          code:
            type: string
            description: >-
              Unique identifier for specific types of earnings associated with
              employees' compensation packages. It plays a crucial role in
              accurately calculating, categorizing, and recording various forms of
              income and compensation.
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label that provides additional
              context and meaning to the associated code or entity.
            nullable: true
          checkStubDescription:
            type: string
            description: >-
              A descriptive text that appears on an employee's check stub,
              offering transparency and clarity regarding the payment.
            nullable: true
          w2Box:
            type: string
            description: >-
              A reference to a specific box on a W-2 tax form, aiding in the
              accurate reporting of various types of income and deductions.
            nullable: true
          printOnCheckStub:
            type: string
            description: >-
              An indicator specifying whether the associated information or
              description should be printed on an employee's check stub.
            nullable: true
          payPeriodMaximum:
            type: number
            description: >-
              The maximum limit or threshold applicable to a pay period, often
              used to define the upper limit of compensation within a specific
              period.
            format: double
            nullable: true
          payPeriodMinimum:
            type: number
            description: >-
              The minimum threshold or floor amount for compensation within a pay
              period, ensuring that compensation meets a minimum standard.
            format: double
            nullable: true
          annualMaximum:
            type: number
            description: >-
              The highest allowable amount or limit for compensation within an
              annual period, setting an upper boundary for earnings.
            format: double
            nullable: true
          overrideRate:
            type: number
            description: An overridden rate for the earning.
            format: double
            nullable: true
          addToRate:
            type: number
            description: >-
              A field indicating whether a specific amount should be added to an
              existing rate or compensation structure.
            format: double
            nullable: true
          rateMultiplier:
            type: number
            description: >-
              A numerical multiplier used to calculate rates or compensation,
              allowing for flexible rate adjustments.
            format: double
            nullable: true
          calculationCode:
            type: string
            description: >-
              A code used in calculations to determine specific values or
              outcomes, assisting in complex computation scenarios.
            nullable: true
          rateCode:
            type: string
            description: The code associated with the earning rate.
            nullable: true
          amount:
            type: number
            description: >-
              The numerical value representing a specific amount, often used in
              financial calculations and compensation.
            format: double
            nullable: true
          frequency:
            type: string
            description: The frequency at which the earning is taken (e.g., weekly, monthly).
            nullable: true
          rate:
            type: number
            description: >-
              The rate of compensation associated with a particular entity or
              item, indicating payment per unit of time or work.
            format: double
            nullable: true
          agency:
            type: string
            description: The agency or organization associated with the earning.
            nullable: true
          relatedDeductionCode:
            type: string
            description: The code of the related deduction, if applicable.
            nullable: true
          reduceAutoPay:
            type: boolean
            description: >-
              An indicator specifying whether automatic payments should be reduced
              based on certain conditions or criteria.
            nullable: true
          exemptTaxes:
            type: array
            items:
              type: string
            description: An array of tax codes from which the earning is exempt.
            nullable: true
          blockedTaxes:
            type: array
            items:
              type: string
            description: An array of tax codes that are blocked from applying to the earning.
            nullable: true
          costCenterMatrixId:
            type: integer
            description: >-
              An identifier that associates an entity or item with a cost center
              matrix, facilitating cost allocation and tracking.
            format: int32
            nullable: true
          isActive:
            type: boolean
            description: >-
              An indicator denoting the current status or active state of an
              entity or item, assisting in management and decision-making.
            nullable: true
          includeInHoursWorked:
            type: boolean
            description: >-
              An indicator specifying whether the associated data should be
              included in calculations related to hours worked.
            nullable: true
          includeOnYtdCompChart:
            type: boolean
            description: >-
              An indicator specifying whether the data should be included on a
              year-to-date compensation chart or report.
            nullable: true
          source:
            type: integer
            description: >-
              The origin or source of data, indicating where the information was
              derived or obtained from within the system.
            format: int32
            nullable: true
          wasUsedInPayroll:
            type: boolean
            description: >-
              An indicator confirming whether the data was utilized in payroll
              processing, ensuring transparency in payroll calculations.
            nullable: true
          benefitType:
            type: string
            description: The type of benefit associated with the earning.
            nullable: true
          selfInsured:
            type: boolean
            description: >-
              An indicator indicating whether an entity or item is self-insured,
              meaning it assumes responsibility for insurance coverage.
            nullable: true
          isEmployerPaidMedicalLeave:
            type: boolean
            description: >-
              An indicator specifying whether an entity or item is related to
              employer-paid medical leave, offering clarity on benefit coverage.
            nullable: true
          classificationCode:
            type: string
            description: The classification code associated with the earning.
            nullable: true
          wageType:
            type: string
            description: The type of wage associated with the earning.
            nullable: true
          type:
            $ref: '#/components/schemas/CompanyEarningTypeDto'
        additionalProperties:
          type: object
          nullable: true
      EeoClassDto:
        type: object
        properties:
          eeoClassKey:
            type: integer
            description: Unique identifier for EEO class.
            format: int32
            nullable: true
          legacyEEOClassId:
            type: integer
            description: Legacy EEO class identifier.
            format: int32
            nullable: true
          clientId:
            type: integer
            description: >-
              Client identifier for EEO class. ClientId is the company set ID when
              the client is a company set. If the client is a standalone company,
              then clientId will be the same as the companyId.
            format: int32
            nullable: true
          code:
            type: string
            description: Code representing EEO class.
            nullable: true
          description:
            type: string
            description: Description of EEO class.
            nullable: true
          active:
            type: boolean
            description: Indicator of EEO class activity.
            nullable: true
          positionsAssigned:
            type: integer
            description: Number of positions assigned to EEO class.
            format: int32
            nullable: true
          eeoClassCompanies:
            type: array
            items:
              $ref: '#/components/schemas/ResourceCompanyDto'
            description: List of EEO class companies.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PayFrequencyDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          code:
            type: string
            description: >-
              A distinct code representing a specific entity or item, providing a
              concise reference for accurate identification and categorization.
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label that offers additional
              context and meaning to the associated code or entity.
            nullable: true
          baseFrequency:
            type: string
            description: >-
              A descriptor specifying the foundational or default frequency used
              as a basis for calculations or scheduling, aiding in data
              interpretation and consistency.
            nullable: true
          firstOfFlag:
            type: boolean
            description: >-
              An indicator or flag denoting the "first of" occurrence or action
              within a specific context or process, offering a clear reference
              point for unique occurrences.
            nullable: true
          blockWeek1:
            type: boolean
            description: >-
              A field indicating whether the first week within a defined timeframe
              or schedule is blocked or restricted for certain actions or
              activities.
            nullable: true
          blockWeek2:
            type: boolean
            description: >-
              A field indicating whether the second week within a defined
              timeframe or schedule is blocked or restricted for certain actions
              or activities.
            nullable: true
          blockWeek3:
            type: boolean
            description: >-
              A field indicating whether the third week within a defined timeframe
              or schedule is blocked or restricted for certain actions or
              activities.
            nullable: true
          blockWeek4:
            type: boolean
            description: >-
              A field indicating whether the fourth week within a defined
              timeframe or schedule is blocked or restricted for certain actions
              or activities.
            nullable: true
          blockWeek5:
            type: boolean
            description: >-
              A field indicating whether the fifth week within a defined timeframe
              or schedule is blocked or restricted for certain actions or
              activities.
            nullable: true
          blockLastWeek:
            type: boolean
            description: >-
              A field indicating whether the last week within a defined timeframe
              or schedule is blocked or restricted for certain actions or
              activities.
            nullable: true
          allowMakeup:
            type: boolean
            description: >-
              An indicator specifying whether makeup or corrective actions are
              allowed within the defined context, facilitating flexibility and
              scheduling adjustments.
            nullable: true
          hardCoded:
            type: string
            description: >-
              An indicator denoting whether a particular element or entity
              contains hardcoded, predetermined values or configurations,
              providing insights into data structure and management.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PayGradeCompaniesDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          active:
            type: boolean
            description: >-
              An indicator denoting the active state of the company's association
              with the pay grade (True or False).
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PayGradeDto:
        type: object
        properties:
          payGradeKey:
            type: integer
            description: >-
              A unique identifier associated with the pay grade, serving as a
              primary reference for identification.
            format: int32
            nullable: true
          legacyPayGradeId:
            type: integer
            description: >-
              An identifier representing the pay grade in legacy systems, aiding
              in data migration and compatibility.
            format: int32
            nullable: true
          clientId:
            type: integer
            description: >-
              ClientId is the company set ID when the client is a company set. If
              the client is a standalone company, then clientId will be the same
              as the companyId.
            format: int32
            nullable: true
          active:
            type: boolean
            description: >-
              An indicator denoting the current status or active state of the pay
              grade.
            nullable: true
          code:
            type: string
            description: >-
              A code representing the pay grade, offering a concise reference for
              identification and categorization.
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label for the pay grade, providing
              additional context and meaning.
            nullable: true
          minimum:
            type: number
            description: The minimum value associated with the pay grade.
            format: double
            nullable: true
          maximum:
            type: number
            description: The maximum value associated with the pay grade.
            format: double
            nullable: true
          midpoint:
            type: number
            description: >-
              The midpoint value within the pay grade range, helping to define
              salary structures and compensation levels.
            format: double
            nullable: true
          positionsAssigned:
            type: integer
            description: >-
              The number of positions assigned to the pay grade, indicating the
              extent of its use within the organization.
            format: int32
            nullable: true
          payGradeCompanies:
            type: array
            items:
              $ref: '#/components/schemas/PayGradeCompaniesDto'
            description: >-
              Companies associated with the pay grade, identified by their unique
              "companyId."
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PositionFamilyDto:
        type: object
        properties:
          positionFamilyKey:
            type: integer
            description: Unique identifier for position family.
            format: int32
            nullable: true
          clientId:
            type: integer
            description: >-
              ClientId is the company set ID when the client is a company set. If
              the client is a standalone company, then clientId will be the same
              as the companyId.
            format: int32
            nullable: true
          code:
            type: string
            description: Code representing position family.
            nullable: true
          active:
            type: boolean
            description: Indicator of position family activity.
            nullable: true
          name:
            type: string
            description: Name of the position family.
            nullable: true
          description:
            type: string
            description: Description of the position family.
            nullable: true
          positionsAssigned:
            type: integer
            description: Number of positions assigned to position family.
            format: int32
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PositionsDto:
        type: object
        properties:
          flsaOvertimeExempt:
            type: boolean
            description: Indicator of overtime exemption.
            nullable: true
          fte:
            type: number
            description: Full-time equivalent value.
            format: double
            nullable: true
          approvedDate:
            type: string
            description: Date when the position was approved.
            format: date-time
            nullable: true
          effectiveDate:
            type: string
            description: Effective date of the position.
            format: date-time
            nullable: true
          closedDate:
            type: string
            description: Date when the position was closed.
            format: date-time
            nullable: true
          supervisorPosition:
            type: boolean
            description: Indicator of supervisor position.
            nullable: true
          code:
            type: string
            description: Code representing the position.
            nullable: true
          title:
            type: string
            description: Title or name of the position.
            nullable: true
          eeoClass:
            $ref: '#/components/schemas/EeoClassDto'
          workersCompensationCode:
            $ref: '#/components/schemas/WorkersCompensationCodeDto'
          careerLevel:
            $ref: '#/components/schemas/CareerLevelDto'
          families:
            type: array
            items:
              $ref: '#/components/schemas/PositionFamilyDto'
            description: List of position families.
            nullable: true
          standardOccupationalClassification:
            $ref: '#/components/schemas/StandardOccupationalClassificationDto'
        additionalProperties:
          type: object
          nullable: true
      RateCodeDto:
        type: object
        properties:
          code:
            type: string
            description: >-
              The value of the rate code, which serves as a unique identifier or
              label for specific rates associated with compensation or pricing,
              aiding in categorization and differentiation.
            nullable: true
          description:
            type: string
            description: >-
              The description of the rate code, providing additional context and
              meaning to the code, enhancing understanding and clarity regarding
              the purpose and significance of the rate.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      RelationshipDto:
        type: object
        properties:
          description:
            type: string
            description: >-
              Provides a textual description of the relationship between the
              company and other entities. It offers additional context or details
              about the nature of the connection.
            nullable: true
          relationshipType:
            enum:
              - Unknown
              - Payroll
            type: string
            description: >-
              Describes the type of relationship that the company has with other
              entities. It can be categorized as "unknown" or "Payroll”.
        additionalProperties:
          type: object
          nullable: true
      ResourceCompanyDto:
        type: object
        properties:
          companyId:
            type: string
            description: Company ID associated with the EEO class company.
            nullable: true
          active:
            type: boolean
            description: Indicates if the EEO class company is active.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      StandardOccupationalClassificationDto:
        type: object
        properties:
          standardOccupationalClassificationKey:
            type: integer
            description: Standard occupational classification key.
            format: int32
            nullable: true
          group:
            type: string
            description: Group associated with the standard occupational classification.
            nullable: true
          code:
            type: string
            description: Standard occupational classification code.
            nullable: true
          title:
            type: string
            description: Title of the standard occupational classification.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      TaxCodeCustomFieldDto:
        type: object
        properties:
          type:
            type: string
            description: Type of the custom field.
            nullable: true
          index:
            type: integer
            description: Index of the custom field.
            format: int32
            nullable: true
          label:
            type: string
            description: Label for the custom field.
            nullable: true
          value:
            type: string
            description: Value of the custom field.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      TaxCodeDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          code:
            type: string
            description: >-
              A distinct code representing a specific entity or item, providing a
              concise reference for accurate identification and categorization.
            nullable: true
          description:
            type: string
            description: >-
              A detailed textual explanation or label that offers additional
              context and meaning to the associated code or entity.
            nullable: true
          ein:
            type: string
            description: >-
              The Employee Identification Number (EIN) is a unique identifier
              assigned to businesses and organizations for tax-related purposes.
            nullable: true
          startDate:
            type: string
            description: >-
              The date on which a specific process, program, or activity begins,
              serving as a reference point for timeline-related data.
            format: date-time
            nullable: true
          endDate:
            type: string
            description: End date of the tax code.
            format: date-time
            nullable: true
          depositFrequency:
            type: string
            description: >-
              A descriptor specifying the frequency at which deposits or
              transactions are made, aiding in financial planning and management.
            nullable: true
          depositMethod:
            type: string
            description: >-
              A method or approach used for making deposits or financial
              transactions, offering flexibility and customization options.
            nullable: true
          type:
            type: string
            description: >-
              A categorical label defining the type or category to which an entity
              or item belongs, enhancing organizational classification.
            nullable: true
          depositWith:
            type: string
            description: >-
              A descriptor indicating the entity or account with which deposits or
              financial transactions are associated, providing clarity on
              financial relationships.
            nullable: true
          isEmployeeTax:
            type: boolean
            description: >-
              An indicator specifying whether a particular element or entity is
              related to employee taxation, aiding in tax-related management and
              reporting.
            nullable: true
          isExempt:
            type: boolean
            description: Indicates if the tax code is exempt.
            nullable: true
          isSuiReimbursable:
            type: boolean
            description: >-
              An indicator indicating whether an item or entity is eligible for
              State Unemployment Insurance (SUI) reimbursement, providing clarity
              on financial considerations.
            nullable: true
          isActive:
            type: boolean
            description: >-
              An indicator denoting the current status or active state of an
              entity or item, facilitating management and decision-making
              processes.
            nullable: true
          isFiledWithAgency:
            type: boolean
            description: >-
              An indicator specifying whether an entity or item is filed with a
              regulatory agency, ensuring compliance and reporting transparency.
            nullable: true
          workPsdCode:
            type: string
            description: Work PSD (Payment Service Delivery) code for the tax code.
            nullable: true
          customFields:
            type: array
            items:
              $ref: '#/components/schemas/TaxCodeCustomFieldDto'
            description: Array of custom fields associated with the tax code.
            nullable: true
          rules:
            $ref: '#/components/schemas/TaxCodeRulesDto'
        additionalProperties:
          type: object
          nullable: true
      TaxCodeRulesDto:
        type: object
        properties:
          options:
            type: string
            description: >-
              Custom options or settings applicable to the entity, providing
              flexibility and customization capabilities.
            nullable: true
          roundingMethod:
            type: string
            description: Rounding method for tax code calculations.
            nullable: true
          requiresVarianceCalc:
            type: integer
            description: >-
              An indicator specifying whether the entity or item requires variance
              calculations, aiding in financial analysis and reporting.
            format: int32
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      WorkLocationDto:
        type: object
        properties:
          workLocationId:
            type: string
            description: >-
              The unique identifier associated with the work location, used for
              internal reference and identification purposes.
            nullable: true
          companyId:
            type: string
            description: >-
              The identifier of the company to which this work location belongs,
              serving as a reference to the specific payroll entity.
            nullable: true
          name:
            type: string
            description: >-
              The name or label assigned to the work location, providing a
              human-readable identifier for easy recognition.
            nullable: true
          address1:
            type: string
            description: >-
              The first line of the physical address associated with the work
              location, specifying the primary point of contact.
            nullable: true
          address2:
            type: string
            description: >-
              The second line of the physical address associated with the work
              location, specifying the primary point of contact.
            nullable: true
          city:
            type: string
            description: >-
              The city or locality where the work location is situated, enhancing
              geographical identification.
            nullable: true
          state:
            type: string
            description: >-
              The state or administrative region in which the work location is
              located, contributing to precise regional categorization.
            nullable: true
          zip:
            type: string
            description: >-
              The ZIP code associated with the work location, facilitating postal
              and logistical processes and ensuring accurate addressing.
            nullable: true
          county:
            type: string
            description: >-
              The country code representing the country in which the work location
              is situated, aiding in international categorization and geographical
              reference.
            nullable: true
          countryCode:
            type: string
            description: The country code for the work location.
            nullable: true
          defaultCurrencyCode:
            type: string
            description: The default currency code for the work location.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      WorkersCompensationCodeDto:
        type: object
        properties:
          clientId:
            type: integer
            description: >-
              ClientId is the company set ID when the client is a company set. If
              the client is a standalone company, then clientId will be the same
              as the companyId.
            format: int32
            nullable: true
          code:
            type: string
            description: Code representing a specific category.
            nullable: true
          description:
            type: string
            description: Detailed label providing context to the client.
            nullable: true
          active:
            type: boolean
            description: Indicator of the client's active status.
            nullable: true
          positionsAssigned:
            type: integer
            description: Number of positions assigned to the client.
            format: int32
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CompanyAddressDto:
        type: object
        properties:
          line1:
            type: string
            description: The address where the job code will be used
            nullable: true
          line2:
            type: string
            description: The address where the job code will be used
            nullable: true
          city:
            type: string
            description: The city where the job code will be used
            nullable: true
          state:
            type: string
            description: The state where the job code will be used
            nullable: true
          zip:
            type: string
            description: The zip code where the job code will be used
            nullable: true
          county:
            type: string
            description: The county where the job code will be used
            nullable: true
          country:
            type: string
            description: The country where the job code will be used
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: Address
      CreateJobCodeDto:
        type: object
        properties:
          description:
            type: string
            description: >-
              The Job Code description may contain up to 40 alpha-numeric
              characters. Spaces or special characters are not allowed
            nullable: true
          isActive:
            type: boolean
            description: Active (Yes/No). The job code is currently active or inactive
            nullable: true
          isCertified:
            type: boolean
            description: >-
              Certified Job (Yes/No). This is a certified job code as per the CMS
              PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
              Journal) job costing report by industry
            nullable: true
          payEntry:
            $ref: '#/components/schemas/PayEntryDto'
          address:
            $ref: '#/components/schemas/CompanyAddressDto'
          payrollBasedJournal:
            $ref: '#/components/schemas/PayrollBasedJournalDto'
          code:
            type: string
            description: >-
              A Job Code may contain up to 10 alpha-numeric characters. Spaces or
              special characters are not allowed
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: Job Details
      JobCodeDto:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity
            nullable: true
          code:
            type: string
            description: >-
              A Job Code may contain up to 10 alpha-numeric characters. Spaces or
              special characters are not allowed
            nullable: true
          description:
            type: string
            description: >-
              The Job Code description may contain up to 40 alpha-numeric
              characters. Spaces or special characters are not allowed
            nullable: true
          isActive:
            type: boolean
            description: Active (Yes/No). The job code is currently active or inactive
            nullable: true
          isCertified:
            type: boolean
            description: >-
              Certified Job (Yes/No). This is a certified job code as per the CMS
              PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
              Journal) job costing report by industry
            nullable: true
          payEntry:
            $ref: '#/components/schemas/PayEntryDto'
          address:
            $ref: '#/components/schemas/CompanyAddressDto'
          payrollBasedJournal:
            $ref: '#/components/schemas/PayrollBasedJournalDto'
        additionalProperties:
          type: object
          nullable: true
        description: Job Details
      PayEntryDto:
        type: object
        properties:
          shift:
            type: string
            description: >-
              This field is used to enter an override company-defined shift code
              to be charged by the employee
            nullable: true
          rateCode:
            type: string
            description: >-
              The employee’s pay rate. If no rate is entered, the employees base
              rate will be used
            nullable: true
          rate:
            type: number
            description: The rate of pay for the job code
            format: double
            nullable: true
          addingRateConstant:
            type: number
            description: >-
              Rate + or + Is employee pay rate + the SD Schedule Differential plus
              or times the bonus
            format: double
            nullable: true
          multiplyingRateConstant:
            type: number
            description: >-
              Rate X or + Is employee pay rate X the SD Schedule Differential plus
              or times the bonus
            format: double
            nullable: true
          workerComputedCode:
            type: string
            description: >-
              The company defined workers comp code for work performed by the
              employee
            nullable: true
          tax:
            $ref: '#/components/schemas/TaxDto'
        additionalProperties:
          type: object
          nullable: true
        description: Override Pay Entry Only
      PayrollBasedJournalDto:
        type: object
        properties:
          jobTitleCode:
            type: string
            description: >-
              This is a Job Title Code for which the certified job code CMS PBJ
              Report (Centers for Medicare and Medicaid Services Payroll Based
              Journal) will be utilized to calculate labor costs
            nullable: true
          facilityId:
            type: string
            description: >-
              This is a Facility id for which the certified job code CMS PBJ
              Report (Centers for Medicare and Medicaid Services Payroll Based
              Journal) will be utilized to calculate labor costs
            nullable: true
          stateId:
            type: string
            description: >-
              This is a State ID for which the certified job code CMS PBJ Report
              (Centers for Medicare and Medicaid Services Payroll Based Journal)
              will be utilized to calculate labor costs
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: CMS/PBJ Data Only
      TaxDto:
        type: object
        properties:
          state:
            type: string
            description: State
            nullable: true
          local1:
            type: string
            description: This is the local tax code used for the job code
            nullable: true
          local2:
            type: string
            description: This  is the second local tax code used for the job code
            nullable: true
          local3:
            type: string
            description: This is the third local tax code  used for the job code
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: State Tax
      UpdateJobCodeDto:
        type: object
        properties:
          description:
            type: string
            description: >-
              The Job Code description may contain up to 40 alpha-numeric
              characters. Spaces or special characters are not allowed
            nullable: true
          isActive:
            type: boolean
            description: Active (Yes/No). The job code is currently active or inactive
            nullable: true
          isCertified:
            type: boolean
            description: >-
              Certified Job (Yes/No). This is a certified job code as per the CMS
              PBJ Report (Centers for Medicare and Medicaid Services Payroll Based
              Journal) job costing report by industry
            nullable: true
          payEntry:
            $ref: '#/components/schemas/PayEntryDto'
          address:
            $ref: '#/components/schemas/CompanyAddressDto'
          payrollBasedJournal:
            $ref: '#/components/schemas/PayrollBasedJournalDto'
        additionalProperties:
          type: object
          nullable: true
        description: Job Details
      CompanyDocumentModel:
        type: object
        properties:
          documentId:
            type: string
            format: uuid
          companyId:
            type: string
          displayName:
            type: string
          receivedDate:
            type: string
            format: date-time
          uploadedDate:
            type: string
            format: date-time
      DocumentDownloadModel:
        type: object
        properties:
          documentId:
            type: string
            format: uuid
          downloadUrl:
            type: string
          expiresIn:
            type: integer
            format: int32
      EmployeeDocumentModel:
        type: object
        properties:
          documentId:
            type: string
            format: uuid
          companyId:
            type: string
          displayName:
            type: string
          receivedDate:
            type: string
            format: date-time
          uploadedDate:
            type: string
            format: date-time
          employeeId:
            type: string
          category:
            type: string
          companyConfidential:
            type: boolean
          employeeConfidential:
            type: boolean
      Error400Model:
        type: object
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
          moreInfoUrl:
            type: string
          exception:
            $ref: '#/components/schemas/ExceptionModel'
          fields:
            type: string
          options:
            type: array
            items:
              $ref: '#/components/schemas/OptionModel'
      Error500Model:
        type: object
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
          moreInfoUrl:
            type: string
          exception:
            $ref: '#/components/schemas/ExceptionModel'
          errorId:
            type: string
      ExceptionModel:
        type: object
        properties:
          type:
            type: string
          message:
            type: string
          source:
            type: string
          stackTrace:
            type: string
          innerException:
            $ref: '#/components/schemas/ExceptionModel'
      OptionModel:
        type: object
        properties:
          code:
            type: string
          description:
            type: string
      ProblemDetails:
        type: object
        properties:
          type:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          status:
            type: integer
            format: int32
            nullable: true
          detail:
            type: string
            nullable: true
          instance:
            type: string
            nullable: true
        additionalProperties:
          type: object
      Address:
        type: object
        properties:
          address1:
            type: string
            description: Address1
            nullable: true
          address2:
            type: string
            description: Address2
            nullable: true
          city:
            type: string
            description: City
            nullable: true
          state:
            type: string
            description: State
            nullable: true
          postalCode:
            type: string
            description: PostalCode
            nullable: true
          country:
            type: string
            description: Country
            nullable: true
          county:
            type: string
            description: County
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CurrentEmployeeStatus:
        type: object
        properties:
          status:
            type: string
            description: The description of the Employee Status.
            nullable: true
          statusType:
            type: string
            description: "The Employee Status Code.\r\n    **Allowable Values:**\r\n    A - Active\r\n    T - Terminated\r\n    L - Leave"
            nullable: true
          effectiveDate:
            type: string
            description: Effective date of the latest employee status change.
            format: date-time
            nullable: true
          changeReason:
            type: string
            description: Change reason description of the latest employee status change.
            nullable: true
          changeReasonCode:
            type: integer
            description: Change reason code for the latest employee status change.
            format: int32
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      CurrentPayRate:
        type: object
        properties:
          baseRate:
            type: number
            description: Employee Base Pay Rate.
            format: double
            nullable: true
          defaultHours:
            type: number
            description: Default Hours for the Employee in the Pay Period.
            format: double
            nullable: true
          salary:
            type: number
            description: Per Check Salary Rate.
            format: double
            nullable: true
          payFrequency:
            type: string
            description: Pay Frequency.
            nullable: true
          payGrade:
            type: string
            description: Pay Grade.
            nullable: true
          annualSalary:
            type: number
            description: Annual Salary.
            format: double
            nullable: true
          ratePer:
            type: string
            description: Rate Per.
            nullable: true
          effectiveDate:
            type: string
            description: Effective date of the last employee rate change.
            format: date-time
            nullable: true
          beginCheckDate:
            type: string
            description: Begin Check date of the last employee rate change.
            nullable: true
          isAutoPay:
            type: boolean
            description: Auto Pay Employee Flag.
            nullable: true
          payType:
            type: string
            description: Hourly or Salary Pay Type
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      Employee:
        type: object
        properties:
          id:
            type: string
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
            nullable: true
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity.
            nullable: true
          relationshipId:
            type: string
            description: >-
              The Paylocity Identifier for a group of Company IDs. This is the
              unique value provided by Paylocity to each specific Payroll Group.
            nullable: true
          lastName:
            type: string
            description: Last Name.
            nullable: true
          displayName:
            type: string
            description: Display Name.
            nullable: true
          status:
            type: string
            description: >-
              The Employee Status Description, this value is customizable per
              client.
            nullable: true
          statusType:
            type: string
            description: "The Employee Status Type Description, this a system controlled value.\r\n    **Allowable Values:**\r\n    A - Active\r\n    T - Terminated\r\n    L - Leave"
            nullable: true
          currentStatus:
            $ref: '#/components/schemas/CurrentEmployeeStatus'
          info:
            $ref: '#/components/schemas/EmployeeInfo'
          currentPayRate:
            $ref: '#/components/schemas/CurrentPayRate'
          position:
            $ref: '#/components/schemas/Position'
          futurePayRates:
            type: array
            items:
              $ref: '#/components/schemas/PayRate'
            description: Future pay rates.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      EmployeeInfo:
        type: object
        properties:
          firstName:
            type: string
            description: First Name.
            nullable: true
          lastName:
            type: string
            description: Last Name.
            nullable: true
          displayName:
            type: string
            description: Display Name.
            nullable: true
          middleName:
            type: string
            description: Middle Name.
            nullable: true
          preferredName:
            type: string
            description: Preferred Name.
            nullable: true
          suffix:
            type: string
            description: Suffix.
            nullable: true
          address:
            $ref: '#/components/schemas/Address'
          homePhone:
            type: string
            description: Home Phone Number.
            nullable: true
          mobilePhone:
            type: string
            description: Mobile Phone Number.
            nullable: true
          personalEmail:
            type: string
            description: Personal Email.
            nullable: true
          ssn:
            type: string
            description: "Social Security Number.\r\n**Allowable Values:**\r\n11 char max"
            nullable: true
          dateOfBirth:
            type: string
            description: "Date of Birth.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
            nullable: true
          maritalStatus:
            type: string
            description: "Marital Status.\r\n**Allowable Values:**\r\n10 char max"
            nullable: true
          ethnicityRace:
            type: string
            description: "Ethnicity.\r\n**Allowable Values:**\r\n10 char max"
            nullable: true
          gender:
            type: string
            description: "Gender.\r\n**Allowable Values:**\r\n1 char max"
            nullable: true
          hireDate:
            type: string
            description: "Hire Date.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
            format: date-time
            nullable: true
          adjustedSeniorityDate:
            type: string
            description: "Adjusted Seniority Date.\r\n**Allowable Values:**\r\nFormat: MM/DD/CCYY"
            format: date-time
            nullable: true
          eligibleforRehire:
            type: boolean
            description: Eligible for Rehire Flag.
            nullable: true
          supervisorCo:
            type: string
            description: Supervisor Paylocity Company ID.
            nullable: true
          supervisor:
            type: string
            description: Supervisor.
            nullable: true
          isSupervisor:
            type: boolean
            description: Is Supervisor / Reviewer? Flag.
            nullable: true
          reviewerCo:
            type: string
            description: Reviewer Paylocity Company ID.
            nullable: true
          reviewer:
            type: string
            description: Reviewer Employee ID.
            nullable: true
          jobTitle:
            type: string
            description: Job Title.
            nullable: true
          eeoClass:
            type: string
            description: EEO Class.
            nullable: true
          wcc:
            type: string
            description: Workers Compensation Code.
            nullable: true
          shift:
            type: string
            description: Home Shift.
            nullable: true
          clockBadge:
            type: string
            description: Clock / Badge Number.
            nullable: true
          payGroup:
            type: string
            description: Pay Group.
            nullable: true
          otExempt:
            type: boolean
            description: OT Exempt (Y/N).
            nullable: true
          tipped:
            type: string
            description: Tipped.
            nullable: true
          minWageExempt:
            type: boolean
            description: Minimum Wage Exempt.
            nullable: true
          workLocation:
            $ref: '#/components/schemas/WorkLocation'
        additionalProperties:
          type: object
          nullable: true
      EmployeePage:
        type: object
        properties:
          totalCount:
            type: integer
            format: int32
          employees:
            type: array
            items:
              $ref: '#/components/schemas/Employee'
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PayRate:
        type: object
        properties:
          salary:
            type: number
            description: Per Check Salary Rate.
            format: double
            nullable: true
          payFrequency:
            type: string
            description: Pay Frequency.
            nullable: true
          changeReason:
            type: string
            description: Change reason.
            nullable: true
          annualSalary:
            type: number
            description: Annual Salary.
            format: double
            nullable: true
          effectiveDate:
            type: string
            description: Effective date of the last employee rate change.
            format: date-time
            nullable: true
          beginCheckDate:
            type: string
            description: Begin Check date of the last employee rate change.
            nullable: true
          isAutoPay:
            type: boolean
            description: Auto Pay Employee Flag.
            nullable: true
          payType:
            type: string
            description: Hourly or Salary Pay Type.
            nullable: true
          payRateDescription:
            type: string
            description: Pay rate description.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      Position:
        type: object
        properties:
          effectiveDate:
            type: string
            description: Effective date of the last employee position change.
            format: date-time
            nullable: true
          changeReason:
            type: string
            description: Change Reason of last Position Change.
            nullable: true
          costCenter1:
            type: string
            description: Cost Center 1 Code.
            nullable: true
          costCenter2:
            type: string
            description: Cost Center 2 Code.
            nullable: true
          costCenter3:
            type: string
            description: Cost Center 3 Code.
            nullable: true
          employeeType:
            type: string
            description: Employee Type.
            nullable: true
          positionCode:
            type: string
            description: Position Code.
            nullable: true
          positionDescription:
            type: string
            description: Position Description.
            nullable: true
          careerLevelCode:
            type: string
            description: Career level code.
            nullable: true
          careerLevelDescription:
            type: string
            description: Career level description.
            nullable: true
          positionFamilies:
            type: array
            items:
              $ref: '#/components/schemas/PositionFamily'
            description: Position families.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      PositionFamily:
        type: object
        properties:
          code:
            type: string
            description: Position family code.
            nullable: true
          description:
            type: string
            description: Position family description.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      WorkLocation:
        type: object
        properties:
          address:
            $ref: '#/components/schemas/Address'
          phone:
            type: string
            description: Phone.
            nullable: true
          phoneExt:
            type: string
            description: Phone Extension
            nullable: true
          mobilePhone:
            type: string
            description: Work Mobile Phone
            nullable: true
          email:
            type: string
            description: Work Email Address.
            nullable: true
        additionalProperties:
          type: object
          nullable: true
      UpsertCompanyOnboardingDto:
        type: object
        properties:
          companyId:
            type: string
            description: "The Paylocity Company Identifier. This is the unique value provided by Paylocity to each specific Payroll Entity. \r\n    **Allowable Values:**\r\n    9 char max"
            nullable: true
            example: ' A00123'
          onboardingStatus:
            enum:
              - InProgress
              - Approved
              - Rejected
            type: string
            description: >-
              The status to indicate the onboarding stage for a customer where the
              account form was filled up and is currently under review by your
              team.
        additionalProperties:
          type: object
          nullable: true
        description: The onboarding details.
      PayEntry:
        type: object
        properties:
          autoAcknowledge:
            type: boolean
            description: Auto Acknowledge the batch (True/False)
          batchName:
            type: string
            description: Name for the Payroll Batch you are creating
          mergeBatchId:
            type: integer
            format: int32
            description: Merge Batch
          calendarId:
            type: integer
            format: int32
            description: Calendar ID
          payPeriodBeginDate:
            type: string
            format: date-time
            description: Pay Period Begin Date
          payPeriodEndDate:
            type: string
            format: date-time
            description: Pay Period End Date
          checkDate:
            type: string
            format: date-time
            description: Check Date for Payroll
          payEntries:
            type: array
            items:
              $ref: '#/components/schemas/PayEntries'
      PayEntries:
        type: object
        properties:
          employeeId:
            type: string
            description: The employee's employee ID.
          det:
            type: string
            description: >-
              Identifies the type of record being imported. May be 'E' for
              earning, 'D' for deduction and 'A' for accrual balances.
          detCode:
            type: string
            description: >-
              The earning or deduction code. This must be a code currently defined
              on the company-level in Paylocity.
          hours:
            type: string
            description: >-
              The number of hours worked by the employee, or the used accrual
              hours.
          amount:
            type: string
            description: >-
              The dollar amount to pay the employee or the available accrual
              hours. If an amount is entered, any information entered in the
              hours, rate, and rateCode fields are ignored.
          tempRate:
            type: string
            description: Rate
          rateCode:
            type: string
            description: >-
              The employee’s pay rate. If no rate is entered, the employees base
              rate will be used.
          costCenter1:
            type: string
            description: >-
              This field is used to enter an override value for the first-level
              cost center charged by the employee.
          costCenter2:
            type: string
            description: >-
              This field is used to enter an override value for the second-level
              cost center charged by the employee.
          costCenter3:
            type: string
            description: >-
              This field is used to enter an override value for the third-level
              cost center charged by the employee.
          jobCode:
            type: string
            description: >-
              This field is used to enter an override company-defined job code to
              be charged by the employee.
          shift:
            type: string
            description: >-
              This field is used to enter an override company-defined shift code
              to be charged by the employee.
          beginDate:
            type: string
            description: Begin Date associated with this line item
          endDate:
            type: string
            description: End Date associated with this line item
          workersCompCode:
            type: string
            description: >-
              The company defined workers comp code for work performed by the
              employee.
          tCode1:
            type: string
            description: Not used.
          tCode2:
            type: string
            description: Not used.
          tCode3:
            type: string
            description: Not used.
          tCode4:
            type: string
            description: Not used.
          sequence:
            type: string
            description: >-
              This field is used to indicate multiple checks. For example, if an
              employee should have two checks, then the entries which should
              create the first check will have a sequence of 1. The second check
              will have a sequence of 2. Sequence may be any number between 1-9.
          checkType:
            type: string
            description: This field is used to indicate an override check Type.
          checkNumber:
            type: string
            description: >-
              This field is used to indicate an override check Number. It is only
              valid when check Type is Manual. Check number for regular checks is
              assigned during processing.
      SuccessResponse:
        type: object
        properties:
          fileName:
            type: string
          timeImportFileTrackingId:
            type: string
          status:
            type: string
      ErrorResponse:
        type: object
        properties:
          Fields:
            type: string
          Code:
            type: integer
            format: int32
          Message:
            type: string
      Unauthorized:
        type: array
        items:
          type: object
          properties:
            Code:
              type: integer
              format: int32
            ErrorId:
              type: string
            Message:
              type: string
      Forbidden:
        type: object
        properties:
          Code:
            type: integer
            format: int32
          ErrorId:
            type: string
          Message:
            type: string
      CostCenterDto:
        type: object
        properties:
          level:
            type: integer
            description: Cost center level (Levels are 1-3)
            format: int32
            nullable: true
          code:
            type: string
            description: >-
              Cost Center Code associated with the Level. This must match a
              Paylocity Cost Center Code
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: >-
          Cost Centers are organizational units within a company. Typically
          clients will break out their employees using cost centers like
          divisions, location and department.
      CreateDeductionDto:
        type: object
        properties:
          effectiveFrom:
            type: string
            description: Effective Date of the Deduction
            format: date-time
            nullable: true
          effectiveTo:
            type: string
            description: End Date of the Deduction
            format: date-time
            nullable: true
          calculationCode:
            type: string
            description: Calculation Code that Applies to Deduction
            nullable: true
          rate:
            type: number
            description: Rate for the Deduction
            format: double
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the deduction Rate is applied in
              payroll
            nullable: true
          agency:
            type: string
            description: Agency Code. These are custom per client
            nullable: true
          arrear:
            type: number
            description: Money that is owed
            format: double
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Information
            nullable: true
          note:
            type: string
            description: Deduction Notes
            nullable: true
          selfInsured:
            type: boolean
            description: >-
              Self-Insured Plan Flag. This will generate Part III of the
              employee's 1095-C Form
            nullable: true
          priority:
            type: integer
            description: >-
              Priority determines the order in which a deduction is subtracted
              from gross pay. Priorities 1-4 are reserved for Statutory
              deductions(necessary by law), while 5-7 are reserved for Voluntary
              deductions(employee-elected).
            format: int32
            nullable: true
          loan401K:
            $ref: '#/components/schemas/Loan401KDto'
          costCenters:
            type: array
            items:
              $ref: '#/components/schemas/CostCenterDto'
            description: An array of objects representing the Cost Centers
            nullable: true
          limits:
            $ref: '#/components/schemas/CreateLimitsDto'
          code:
            type: string
            description: Deduction Code
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      CreateEarningDto:
        type: object
        properties:
          effectiveFrom:
            type: string
            description: Effective Date of Earning
            format: date-time
            nullable: true
          effectiveTo:
            type: string
            description: End Date of Earning
            format: date-time
            nullable: true
          amount:
            type: number
            description: Amount of Earning
            format: double
            nullable: true
          rate:
            type: number
            description: Earning Code Rate
            format: double
            nullable: true
          units:
            type: number
            description: Hours or Units Worked
            format: double
            nullable: true
          selfInsured:
            type: boolean
            description: Self Insured Flag
            nullable: true
          calculationCode:
            type: string
            description: Earning Calculation Code
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the earning Amount is applied in
              payroll
            nullable: true
          agency:
            type: string
            description: Agency Code
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Info
            nullable: true
          rateCode:
            type: string
            description: Rate Code
            nullable: true
          distribution:
            $ref: '#/components/schemas/DistributionDto'
          limits:
            $ref: '#/components/schemas/CreateLimitsDto'
          code:
            type: string
            description: Earning Code
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      CreateLimitsDto:
        type: object
        properties:
          goal:
            type: number
            description: "The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual."
            format: double
            nullable: true
          paidToDate:
            type: number
            description: >-
              Paid to Date tracks the amount paid toward the Goal. The Paid to
              Date amount will never be more than the Goal amount
            format: double
            nullable: true
          payPeriodMinimum:
            type: number
            description: Minimum for the pay period
            format: double
            nullable: true
          payPeriodMaximum:
            type: number
            description: Maximum for the pay period
            format: double
            nullable: true
          annualMaximum:
            type: number
            description: "Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting."
            format: double
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: Limits are used to control the amount of an earning or deduction
      DistributionDto:
        type: object
        properties:
          jobCode:
            type: string
            description: Job Code Allocation
            nullable: true
          costCenters:
            type: array
            items:
              $ref: '#/components/schemas/CostCenterDto'
            description: An array of objects representing the Cost Centers
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: >-
          Labor Distribution is the term for the system categorizing
          (distributing) payroll data among Cost Centers and Job Codes
      GetDeductionDto:
        type: object
        properties:
          id:
            type: string
            description: Resource ID of the record
            format: uuid
          employeeId:
            type: string
            description: >-
              The Paylocity Employee ID. This is a unique value per Paylocity
              Company ID
            nullable: true
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity
            nullable: true
          code:
            type: string
            description: Deduction Code
            nullable: true
          type:
            type: string
            description: Deduction Type
            nullable: true
          rate:
            type: number
            description: Rate for the Deduction
            format: double
            nullable: true
          arrear:
            type: number
            description: Money that is owed
            format: double
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the deduction Rate is applied in
              payroll
            nullable: true
          calculationCode:
            type: string
            description: Calculation Code that Applies to Deduction
            nullable: true
          agencyCode:
            type: string
            description: Agency Code. These are custom per client
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Information
            nullable: true
          priority:
            type: integer
            description: >-
              Priority determines the order in which a deduction is subtracted
              from gross pay. Priorities 1-4 are reserved for Statutory
              deductions(necessary by law), while 5-7 are reserved for Voluntary
              deductions(employee-elected).
            format: int32
            nullable: true
          selfInsured:
            type: boolean
            description: >-
              Self-Insured Plan Flag. This will generate Part III of the
              employee's 1095-C Form
            nullable: true
          recordType:
            enum:
              - Current
              - Future
              - Historical
              - Unknown
            type: string
            description: "The recordType field in our API plays a vital role in defining the current state of the record under consideration. This attribute can hold three different values, each describing a distinct temporal stage of the record.\r\n1. **Historical**: If the recordType is set as 'Historical', it signifies that the record in question pertains to past data or events. This attribute is typically used for records that have been archived or are no longer active.\r\n2. **Current**: A 'Current' recordType indicates that the record is active and relevant to the present time. These records are currently in use and contain up-to-date information.\r\n3. **Future dated**: The 'Future dated' recordType is used for records that are scheduled for a future date. They represent planned or expected data or events.\r\nBy using the recordType field, users can accurately categorize their records based on their temporal status, making it easier to sort, manage, and analyze data effectively."
            nullable: true
          note:
            type: string
            description: Deduction Notes
            nullable: true
          effectiveDate:
            type: string
            description: Effective Date of the Deduction
            format: date-time
            nullable: true
          beginCheckDate:
            type: string
            description: Begin Check Date of the Deduction
            format: date-time
            nullable: true
          endCheckDate:
            type: string
            description: End Check Date of the Deduction
            format: date-time
            nullable: true
          costCenters:
            type: array
            items:
              $ref: '#/components/schemas/CostCenterDto'
            description: An array of objects representing the Cost Centers
            nullable: true
          limits:
            $ref: '#/components/schemas/GetLimitsDto'
          loan401K:
            $ref: '#/components/schemas/Loan401KDto'
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      GetEarningDto:
        type: object
        properties:
          id:
            type: string
            description: Resource ID of the record
            format: uuid
          companyId:
            type: string
            description: >-
              The Paylocity Company Identifier. This is the unique value provided
              by Paylocity to each specific Payroll Entity
            nullable: true
          employeeId:
            type: string
            description: >-
              The Paylocity Employee ID. This is a unique value per Paylocity
              Company ID
            nullable: true
          code:
            type: string
            description: Earning Code
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the earning amount is applied in
              payroll
            nullable: true
          selfInsured:
            type: boolean
            description: Self Insured Flag
            nullable: true
          recordType:
            enum:
              - Current
              - Future
              - Historical
              - Unknown
            type: string
            description: "The recordType field in our API plays a vital role in defining the current state of the record under consideration. This attribute can hold three different values, each describing a distinct temporal stage of the record.\r\n1. **Historical**: If the recordType is set as 'Historical', it signifies that the record in question pertains to past data or events. This attribute is typically used for records that have been archived or are no longer active.\r\n2. **Current**: A 'Current' recordType indicates that the record is active and relevant to the present time. These records are currently in use and contain up-to-date information.\r\n3. **Future dated**: The 'Future dated' recordType is used for records that are scheduled for a future date. They represent planned or expected data or events.\r\nBy using the recordType field, users can accurately categorize their records based on their temporal status, making it easier to sort, manage, and analyze data effectively."
            nullable: true
          amount:
            type: number
            description: Amount of Earning
            format: double
            nullable: true
          rate:
            type: number
            description: Earning Code Rate
            format: double
            nullable: true
          calculationCode:
            type: string
            description: Earning Calculation Code
            nullable: true
          units:
            type: number
            description: Hours or Units Worked
            format: double
            nullable: true
          rateCode:
            type: string
            description: Rate Code
            nullable: true
          agency:
            type: string
            description: Agency Code
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Info
            nullable: true
          effectiveDate:
            type: string
            description: Effective Date of Earning
            format: date-time
            nullable: true
          beginCheckDate:
            type: string
            description: Begin Check Date of Earning
            format: date-time
            nullable: true
          endCheckDate:
            type: string
            description: >-
              The date you select will become the last date that this earning
              appears on the employee's paycheck
            format: date-time
            nullable: true
          distribution:
            $ref: '#/components/schemas/DistributionDto'
          limits:
            $ref: '#/components/schemas/GetLimitsDto'
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      GetLimitsDto:
        type: object
        properties:
          goal:
            type: number
            description: "The Goal is the deduction/earning limit. When deductions/earnings have met the limit, the employee pay deductions/earnings will stop.\r\nFor payroll, this amount is the lifetime deduction/earning limit.\r\nFor benefits, this limit amount could be annual."
            format: double
            nullable: true
          paidToDate:
            type: number
            description: >-
              Paid to Date tracks the amount paid toward the Goal. The Paid to
              Date amount will never be more than the Goal amount
            format: double
            nullable: true
          payPeriodMinimum:
            type: number
            description: Minimum for the pay period
            format: double
            nullable: true
          payPeriodMaximum:
            type: number
            description: Maximum for the pay period
            format: double
            nullable: true
          annualMaximum:
            type: number
            description: "Entering an amount in the Annual Maximum field will override the system setting, and you'll need to manually manage the maximum each year.\r\nLeave this field blank to keep the system setting."
            format: double
            nullable: true
          paidYearToDate:
            type: number
            description: Amount Paid Year to Date
            format: double
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: Limits are used to control the amount of an earning or deduction
      Loan401KDto:
        type: object
        properties:
          loanNumber:
            type: string
            description: 401K Loan Number. Provided by Record Keeper
            nullable: true
          issueDate:
            type: string
            description: Date of 401K Loan Issued
            format: date-time
            nullable: true
          firstPaymentDate:
            type: string
            description: First Payment Date of 401K Loan
            format: date-time
            nullable: true
        additionalProperties:
          type: object
          nullable: true
        description: >-
          A 401K loan is a type of loan that allows you to borrow money against
          the balance of your 401K retirement plan, up to a certain limit. It's a
          way for individuals to access their retirement savings without incurring
          early withdrawal penalties or taxes. The borrower is expected to repay
          the loan, typically over five years, through payroll deductions. The
          values to insert a loan, like Loan Number, and First Payment Date are
          provided by the record keeper.
      UpdateDeductionDto:
        type: object
        properties:
          effectiveFrom:
            type: string
            description: Effective Date of the Deduction
            format: date-time
            nullable: true
          effectiveTo:
            type: string
            description: End Date of the Deduction
            format: date-time
            nullable: true
          calculationCode:
            type: string
            description: Calculation Code that Applies to Deduction
            nullable: true
          rate:
            type: number
            description: Rate for the Deduction
            format: double
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the deduction Rate is applied in
              payroll
            nullable: true
          agency:
            type: string
            description: Agency Code. These are custom per client
            nullable: true
          arrear:
            type: number
            description: Money that is owed
            format: double
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Information
            nullable: true
          note:
            type: string
            description: Deduction Notes
            nullable: true
          selfInsured:
            type: boolean
            description: >-
              Self-Insured Plan Flag. This will generate Part III of the
              employee's 1095-C Form
            nullable: true
          priority:
            type: integer
            description: >-
              Priority determines the order in which a deduction is subtracted
              from gross pay. Priorities 1-4 are reserved for Statutory
              deductions(necessary by law), while 5-7 are reserved for Voluntary
              deductions(employee-elected).
            format: int32
            nullable: true
          loan401K:
            $ref: '#/components/schemas/Loan401KDto'
          costCenters:
            type: array
            items:
              $ref: '#/components/schemas/CostCenterDto'
            description: An array of objects representing the Cost Centers
            nullable: true
          limits:
            $ref: '#/components/schemas/CreateLimitsDto'
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Deduction code is a unique identifier used by payroll systems to categorize and track specific deductions from an employee's paycheck.\r\nThese deductions can include taxes, health insurance premiums, retirement contributions, loan repayments, and more.\r\nEach type of deduction has its own unique code that allows it to be easily identified and processed by the payroll system.\r\nThis not only ensures accurate calculations and disbursements, but also helps with record-keeping and reporting requirements."
      UpdateEarningDto:
        type: object
        properties:
          effectiveFrom:
            type: string
            description: Effective Date of Earning
            format: date-time
            nullable: true
          effectiveTo:
            type: string
            description: End Date of Earning
            format: date-time
            nullable: true
          amount:
            type: number
            description: Amount of Earning
            format: double
            nullable: true
          rate:
            type: number
            description: Earning Code Rate
            format: double
            nullable: true
          units:
            type: number
            description: Hours or Units Worked
            format: double
            nullable: true
          selfInsured:
            type: boolean
            description: Self Insured Flag
            nullable: true
          calculationCode:
            type: string
            description: Earning Calculation Code
            nullable: true
          frequency:
            type: string
            description: >-
              Frequency determines how often the earning Amount is applied in
              payroll
            nullable: true
          agency:
            type: string
            description: Agency Code
            nullable: true
          miscellaneousInfo:
            type: string
            description: Miscellaneous Info
            nullable: true
          rateCode:
            type: string
            description: Rate Code
            nullable: true
          distribution:
            $ref: '#/components/schemas/DistributionDto'
          limits:
            $ref: '#/components/schemas/CreateLimitsDto'
        additionalProperties:
          type: object
          nullable: true
        description: "A Payroll Earning Code is a specific classification used in payroll systems to categorize the different types of income an employee receives.\r\nThese codes denote various earnings such as regular hours worked, overtime, bonuses, commissions, or holiday pay, among others.\r\nThe purpose of these codes is to streamline the payroll process, making it easier to track, manage, and report different types of income.\r\nThey are essential for accurate payroll calculations and compliance with tax and labor laws."
      PunchImport:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PunchImportEntries'
      PunchImportEntries:
        type: object
        properties:
          employeeId:
            type: string
            description: 'The employee''s employee ID. '
            example: '52225'
          lastName:
            type: string
            description: >-
              Employees Last Name. NOTE: This is just for reference and will not
              be imported into the system.
            example: Smith
          firstName:
            type: string
            description: >-
              Employees First Name. NOTE: This is just for reference and will not
              be imported into the system.
            example: John
          date:
            type: string
            description: Punch Date. Use format MM/DD/YYYY
            example: 1/1/2020
          time:
            type: string
            description: >-
              Punch Time. Use 12 Hr Format or 24 Hr Format . In addition to Work
              times, a time is also required for  Durations/Dollars/Units entries
              like PTO, Sick, Bonus, and Mileage.  Please feel free to use 12:00
              AM in the event that no actual time is present in the system you are
              exporting from.
            example: 8:00 AM
          recordType:
            type: string
            description: >-
              In, Out, Transfer, EndLunch, StartLunch, EndBreak, StartBreak. These
              can be defined on the client level as well.
            example: In
          hoursDollars:
            type: string
            description: >-
              Total Pay Type Duration or Total Adjustment Amount. This should only
              be used when importing Duration/Dollars/Units based entries like
              PTO, Sick,  Bonus, Mileage, etc. This field should be left blank for
              punches.
            example: 8.25 or 125
          employeeNote:
            type: string
            description: >-
              Employee note associated with punch, pay type or adjustment
              transaction 
            example: Late due to an appointment
          supervisorNote:
            type: string
            description: >-
              Supervisor note associated with punch, pay type or adjustment
              transaction 
            example: Employee called in to make us aware of impending tardiness
          payLevel:
            type: string
            description: >-
              Pay level the hours are calculated towards. If left blank, the pay
              level will be calculated in Time & Labor based on the employee's
              payroll rules.
            example: REG or OT1 or OT2 or Unpaid
          CC1:
            type: string
            description: >-
              Override Value for Cost Center 1. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC2:
            type: string
            description: >-
              Override Value for Cost Center 2. Leave blank for the employee's
              default Cost Center.  
            example: Corp
          CC3:
            type: string
            description: >-
              Override Value for Cost Center 3. Leave blank for the employee's
              default Cost Center.  
            example: '1000'
          CC4:
            type: string
            description: >-
              Override Value for Cost Center 4. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC5:
            type: string
            description: >-
              Override Value for Cost Center 5. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC6:
            type: string
            description: >-
              Override Value for Cost Center 6. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC7:
            type: string
            description: >-
              Override Value for Cost Center 7. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC8:
            type: string
            description: >-
              Override Value for Cost Center 8. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC9:
            type: string
            description: >-
              Override Value for Cost Center 9. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC10:
            type: string
            description: >-
              Override Value for Cost Center 10. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC11:
            type: string
            description: >-
              Override Value for Cost Center 11. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC12:
            type: string
            description: >-
              Override Value for Cost Center 12. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC13:
            type: string
            description: >-
              Override Value for Cost Center 13. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC14:
            type: string
            description: >-
              Override Value for Cost Center 14. Leave blank for the employee's
              default Cost Center.  
            example: '100'
          CC15:
            type: string
            description: >-
              Override Value for Cost Center 15. Leave blank for the employee's
              default Cost Center.  
            example: '100'
      RetirementContribution:
        type: object
        properties:
          companyId:
            type: string
            description: >-
              The Paylocity Company ID. This is the unique value provided by
              Paylocity to each specific Payroll Entity.
            nullable: true
          employeeId:
            type: string
            description: >-
              The Paylocity Employee ID. This is a unique value per Paylocity
              Company ID.
            nullable: true
          year:
            type: integer
            description: The current retirement plan year
            format: int32
          planId:
            type: string
            description: >-
              The Plan ID from the retirement plan provider. This would match the
              value provided by the record keeper to the customer.
            nullable: true
          checkDate:
            type: string
            description: The Check Date from the Paylocity Payroll Calendar.
            format: date-time
            nullable: true
          beginDate:
            type: string
            description: >-
              The Begin Date of the Pay Period, this is associated with the Check
              Date from the Paylocity Payroll Calendar.
            format: date-time
            nullable: true
          endDate:
            type: string
            description: >-
              The End Date of the Pay Period, this is associated with the Check
              Date from the Paylocity Payroll Calendar.
            format: date-time
            nullable: true
          grossHours:
            type: number
            description: Gross Hours
            format: double
          grossEarnings:
            type: number
            description: Gross Earnings
            format: double
          planHours:
            type: number
            description: Plan Hours
            format: double
          planEarnings:
            type: number
            description: Plan Earnings
            format: double
          excludedEarnings:
            type: number
            description: Excluded Earnings
            format: double
          employeePreTax:
            type: number
            description: Employee Pre-Tax
            format: double
          employeePostTax:
            type: number
            description: Employee Post-Tax
            format: double
          employerMatch:
            type: number
            description: Employer Match
            format: double
          employeeSavings:
            type: number
            description: Employee Savings
            format: double
          source5:
            type: number
            description: Total Amount for Source 5. This source is configurable per client.
            format: double
          source6:
            type: number
            description: Total Amount for Source 6.
            format: double
          source7:
            type: number
            description: Total Amount for Source 7.
            format: double
          source8:
            type: number
            description: Total Amount for Source 8.
            format: double
          source9:
            type: number
            description: Total Amount for Source 9.
            format: double
          source10:
            type: number
            description: Total Amount for Source 10.
            format: double
          source11:
            type: number
            description: Total Amount for Source 11.
            format: double
          source12:
            type: number
            description: Total Amount for Source 12.
            format: double
          loans:
            type: array
            items:
              $ref: '#/components/schemas/RetirementLoan'
            description: List of Loans
            nullable: true
          ytd:
            $ref: '#/components/schemas/RetirementYtd'
        additionalProperties: false
      RetirementLoan:
        type: object
        properties:
          number:
            type: string
            description: >-
              Loan Number. This should be the loan number provided by the record
              keeper. This can be set on the employee-level by the Payroll Admin
              or Retirement Provider
            nullable: true
          payment:
            type: number
            description: Loan Payment.
            format: double
        additionalProperties: false
      RetirementYtd:
        type: object
        properties:
          grossHours:
            type: number
            description: YTD Gross Hours
            format: double
          grossEarnings:
            type: number
            description: YTD Gross Earnings
            format: double
          planHours:
            type: number
            description: YTD Plan Hours
            format: double
          planEarnings:
            type: number
            description: YTD Plan Earnings
            format: double
          excludedEarnings:
            type: number
            description: YTD Excluded Earnings
            format: double
          employeePreTax:
            type: number
            description: YTD Employee PreTax
            format: double
          employeePostTax:
            type: number
            description: YTD Employee PostTax
            format: double
          employerMatch:
            type: number
            description: YTD Employer Match
            format: double
          employeeSavings:
            type: number
            description: YTD Employee Savings
            format: double
          source5:
            type: number
            description: YTD Amount for Source 5
            format: double
          source6:
            type: number
            description: YTD Amount for Source 6
            format: double
          source7:
            type: number
            description: YTD Amount for Source 7
            format: double
          source8:
            type: number
            description: YTD Amount for Source 8
            format: double
          source9:
            type: number
            description: YTD Amount for Source 9
            format: double
          source10:
            type: number
            description: YTD Amount for Source 10
            format: double
          source11:
            type: number
            description: YTD Amount for Source 11
            format: double
          source12:
            type: number
            description: YTD Amount for Source 12
            format: double
        additionalProperties: false
      error:
        type: object
        properties:
          field:
            type: string
            description: >-
              The name of the field, or property in the request message that
              contains an error.
          message:
            type: string
            description: The error message.
          options:
            type: array
            description: >-
              A list of options associated with this error. These options may
              indicate valid values for the field, or property that contains an
              error.
            items:
              type: object
              properties:
                code:
                  type: string
                  description: The code associated with this option.
                description:
                  type: string
                  description: The description of the option.
              description: The error option model
          path:
            type: string
            description: >-
              The JSON path of the field, or property, that contains an error in
              the request message.
        description: The error model
      errors:
        type: array
        items:
          type: object
          properties:
            Path:
              type: string
            field:
              type: string
            message:
              type: string
            options:
              type: array
              items:
                type: object
                additionalProperties: false
      addClientSecret:
        required:
          - code
        type: object
        properties:
          code:
            type: string
            description: >-
              A value sent with the 'ACTION NEEDED: Web Link API Credentials
              Expiring Soon.' email notification.
        description: The Add Client Secret Request Model
      additionalRate:
        type: object
        properties:
          changeReason:
            type: object
            description: >-
              Not required. If populated, must match one of the system coded
              values available in the Additional Rates Change Reason drop down.<br
              />
          costCenter1:
            type: object
            description: >-
              Not required. Valid values must match one of the system coded cost
              centers available in the Additional Rates Cost Center level 1 drop
              down. This cell must be in a text format.<br />
          costCenter2:
            type: object
            description: >-
              Not required. Valid values must match one of the system coded cost
              centers available in the Additional Rates Cost Center level 2 drop
              down. This cell must be in a text format.<br />
          costCenter3:
            type: object
            description: >-
              Not required. Valid values must match one of the system coded cost
              centers available in the Additional Rates Cost Center level 3 drop
              down. This cell must be in a text format.<br />
          effectiveDate:
            type: object
            description: Required. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
            format: paylocity-date
          endCheckDate:
            type: object
            description: >-
              Not required. Must match one of the system coded check dates
              available in the Additional Rates End Check Date drop down. Common
              formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
            format: paylocity-date
          job:
            type: object
            description: >-
              Not required. If populated, must match one of the system coded
              values available in the Additional Rates Job drop down.<br />
          rate:
            type: object
            description: >-
              Required. Enter dollar amount that corresponds to the Per
              selection.<br />
          rateCode:
            type: object
            description: >-
              Required. If populated, must match one of the system coded values
              available in the Additional Rates Rate Code drop down.<br />
          rateNotes:
            type: object
            description: 'Not required.<br  />Max length: 4000<br />'
          ratePer:
            type: object
            description: Required. Valid values are HOUR or WEEK.<br />
          shift:
            type: object
            description: >-
              Not required. If populated, must match one of the system coded
              values available in the Additional Rates Shift drop down.<br />
        additionalProperties: false
        description: The additional pay rate model
      addUpdateDeduction:
        type: object
        properties:
          agency:
            type: string
            description: >-
              Used to produce third-party checks for a specific agency. Must match
              Company setup.<br  />Max length: 5
          annualMaximum:
            type: number
            description: >-
              Year to Date dollar amount not to be exceeded for a deduction in the
              calendar year. <br  />Decimal(12,2)
          calcCode:
            type: string
            description: >-
              Defines how deductions are calculated. Common values are *%
              (percentage of gross), flat (flat dollar amount)*. Defaulted to the
              Company setup calcCode for deduction. <br  />Max length: 15
          caseNo:
            type: string
            description: >-
              Child Support Case Identifier number, case number or court order
              number.<br  />Max length: 20
          companyNumber:
            type: string
            description: 'Paylocity assigned company number. <br  />Max length: 9'
          costCenter1:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          costCenter2:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          costCenter3:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          dcode:
            type: string
            description: 'Deduction code. Must match Company setup. <br  />Max length: 5'
          effectiveDate:
            type: string
            description: >-
              Date deduction or benefit is active. Defaulted to run date or check
              date based on Company setup. Common formats are MM-DD-CCYY,
              CCYY-MM-DD
            format: date
          employeeId:
            type: string
            description: >-
              Either employee ID or employee SSN is required.<br  /> Max length:
              10
          endDate:
            type: string
            description: >-
              Stop date of a deduction or benefit. Common formats are MM-DD-CCYY,
              CCYY-MM-DD.
            format: date
          fipsCode:
            type: string
            description: >-
              Child support Federal Information Process Standard (FIPS) code. <br 
              />Max length: 7
          frequency:
            type: string
            description: >-
              Needed if deduction is applied differently from the payroll
              frequency (one time deduction for example).<br  /> Max length: 5
          goal:
            type: number
            description: >-
              Dollar amount. The employee deduction will stop when the goal amount
              is reached.<br  /> Decimal(12,2)
          isSelfInsuredPlan:
            type: boolean
            description: Used for ACA. If not entered, defaulted to Company deduction setup
          loanFirstPaymentDate401K:
            type: string
            description: >-
              401K loan first payment date. Common formats are MM-DD-CCYY,
              CCYY-MM-DD
            format: date
          loanIssueDate401K:
            type: string
            description: 401K loan issue date. Common formats are MM-DD-CCYY, CCYY-MM-DD
            format: date
          loanNumber:
            type: string
            description: >-
              401K Loan number, required for 401K Loan deduction types. <br  />
              Max length: 50
          maximum:
            type: number
            description: >-
              Maximum amount of the deduction on a single paycheck. <br  />
              Decimal(12,2)
          medicalSupport:
            type: boolean
            description: >-
              Indicates if the employee qualifies for medical benefits that can be
              used to cover the child
          minimum:
            type: number
            description: >-
              Minimum amount of the deduction on a single paycheck. <br  />
              Decimal(12,2)
          miscInfo:
            type: string
            description: >-
              Information to print on the check stub if agency check is set up for
              this deduction. <br  />Max length: 50
          paidTowardsGoal:
            type: number
            description: Amount already paid toward goal.<br  /> Decimal(12,2)
          priority:
            type: integer
            description: >-
              Priority of a deduction within the deduction category. Common values
              are *0,1,2. <br  /> Max length: 2
          rate:
            type: number
            description: >-
              Value to match the calcCode (percentage or amount). For example if
              calcCode = %, enter 10.00 to indicate 10%. <br  /> Decimal(12,2)
          reportTerminated:
            type: boolean
            description: Indicates whether agency needs to be reported on terminated employee
          ssn:
            type: string
            description: >-
              Either employee ID or employee SSN is required.<br  /> Max length:
              11
          startDate:
            type: string
            description: >-
              Start date of a deduction based on payroll calendar. Common formats
              are MM-DD-CCYY, CCYY-MM-DD
            format: date
          stateAbbrev:
            type: string
            description: 'State for child support.<br  /> Max length: 2'
        additionalProperties: false
      benefitSetup:
        type: object
        properties:
          benefitClass:
            type: object
            description: >-
              Benefit Class code. Values are configured in Paylocity Payroll/HR
              solution Company > Setup > Benefits > Classes.<br  />Max length: 30
          benefitClassEffectiveDate:
            type: object
            description: >-
              Date when Benefit Class takes effect. Common formats include
              *MM-DD-CCYY*, *CCYY-MM-DD*.
            format: paylocity-date
          benefitSalary:
            type: object
            description: Salary used to configure benefits.<br  />Decimal(12,2)
          benefitSalaryEffectiveDate:
            type: object
            description: >-
              Date when Benefit Salary takes effect. Common formats include
              *MM-DD-CCYY*, *CCYY-MM-DD*.
            format: paylocity-date
          doNotApplyAdministrativePeriod:
            type: object
            description: >-
              Applicable only for HR Enhanced clients and Benefit Classes with ACA
              Employment Type of Full Time.
          isMeasureAcaEligibility:
            type: object
            description: >-
              Only valid for HR Enhanced clients and Benefit Classes that are ACA
              Employment Type of Full Time.
        additionalProperties: false
        description: The benefit setup model
      clientCredentialsResponse:
        type: object
        properties:
          clientSecret:
            type: object
            description: The client's secret
          clientSecretExpirationDate:
            type: object
            description: The client's secret expiration date
            format: paylocity-date
        additionalProperties: false
        description: The Client Credentials Response Model
      companyCodes:
        type: object
        properties:
          code:
            type: object
            description: 'Code.<br  /> Max length: 40'
          description:
            type: object
            description: 'Description. <br  /> Max length: 150'
        additionalProperties: false
        description: The Company Codes model
      customFieldDefinition:
        type: object
        properties:
          category:
            type: string
            description: The custom field category.
          defaultValue:
            type: string
            description: Specifies the default value of the custom field.
          isRequired:
            type: boolean
            description: Indicates whether the custom field is required.
          label:
            type: string
            description: The custom field label.
          type:
            type: string
            description: The custom field type.
          values:
            type: array
            description: A set of values that are applicable to the custom field.
            items:
              type: object
              properties:
                code:
                  type: string
                  description: The custom field code.
                description:
                  type: string
                  description: The custom field description.
              description: ''
        description: ''
      deduction:
        type: object
        properties:
          agency:
            type: string
            description: >-
              Used to produce third-party checks for a specific agency. Must match
              Company setup.<br  />Max length: 5
          annualMaximum:
            type: number
            description: >-
              Year to Date dollar amount not to be exceeded for a deduction in the
              calendar year. <br  />Decimal(12,2)
          calcCode:
            type: string
            description: >-
              Defines how deductions are calculated. Common values are *%
              (percentage of gross), flat (flat dollar amount)*. Defaulted to the
              Company setup calcCode for deduction. <br  />Max length: 15
          caseNo:
            type: string
            description: >-
              Child Support Case Identifier number, case number or court order
              number.<br  />Max length: 20
          costCenter1:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          costCenter2:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          costCenter3:
            type: string
            description: >-
              Cost Center associated with deduction. Must match Company setup.<br 
              /> Max length: 10
          dcode:
            type: string
            description: 'Deduction code. Must match Company setup. <br  />Max length: 5'
          effectiveDate:
            type: string
            description: >-
              Date deduction or benefit is active. Defaulted to run date or check
              date based on Company setup. Common formats are MM-DD-CCYY,
              CCYY-MM-DD
            format: date
          endDate:
            type: string
            description: >-
              Stop date of a deduction or benefit. Common formats are MM-DD-CCYY,
              CCYY-MM-DD.
            format: date
          fipsCode:
            type: string
            description: >-
              Child support Federal Information Process Standard (FIPS) code. <br 
              />Max length: 7
          frequency:
            type: string
            description: >-
              Needed if deduction is applied differently from the payroll
              frequency (one time deduction for example).<br  /> Max length: 5
          goal:
            type: number
            description: >-
              Dollar amount. The employee deduction will stop when the goal amount
              is reached.<br  /> Decimal(12,2)
          isSelfInsuredPlan:
            type: boolean
            description: Used for ACA. If not entered, defaulted to Company deduction setup
          loanFirstPaymentDate401K:
            type: string
            description: >-
              401K loan first payment date. Common formats are MM-DD-CCYY,
              CCYY-MM-DD
            format: date
          loanIssueDate401K:
            type: string
            description: 401K loan issue date. Common formats are MM-DD-CCYY, CCYY-MM-DD
            format: date
          loanNumber:
            type: string
            description: >-
              401K Loan number, required for 401K Loan deduction types. <br  />
              Max length: 50
          maximum:
            type: number
            description: >-
              Maximum amount of the deduction on a single paycheck. <br  />
              Decimal(12,2)
          medicalSupport:
            type: boolean
            description: >-
              Indicates if the employee qualifies for medical benefits that can be
              used to cover the child
          minimum:
            type: number
            description: >-
              Minimum amount of the deduction on a single paycheck. <br  />
              Decimal(12,2)
          miscInfo:
            type: string
            description: >-
              Information to print on the check stub if agency check is set up for
              this deduction. <br  />Max length: 50
          paidTowardsGoal:
            type: number
            description: Amount already paid toward goal.<br  /> Decimal(12,2)
          priority:
            type: integer
            description: >-
              Priority of a deduction within the deduction category. Common values
              are *0,1,2. <br  /> Max length: 2
          rate:
            type: number
            description: >-
              Value to match the calcCode (percentage or amount). For example if
              calcCode = %, enter 10.00 to indicate 10%. <br  /> Decimal(12,2)
          reportTerminated:
            type: boolean
            description: Indicates whether agency needs to be reported on terminated employee
          startDate:
            type: string
            description: >-
              Start date of a deduction based on payroll calendar. Common formats
              are MM-DD-CCYY, CCYY-MM-DD
            format: date
          stateAbbrev:
            type: string
            description: 'State for child support.<br  /> Max length: 2'
        additionalProperties: false
      departmentPosition:
        type: object
        properties:
          changeReason:
            type: string
            description: >-
              Employee department/position change reason. Must match Company
              setup.<br  />Max length: 15
          clockBadgeNumber:
            type: string
            description: >-
              Employee clock badge number. Deafults to employeeId. <br  />Max
              length: 10
          costCenter1:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          costCenter2:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          costCenter3:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          effectiveDate:
            type: string
            description: The date the position takes effect. (MM-DD-CCYY)
            format: date
          employeeType:
            type: string
            description: >-
              Employee current employment type. Common values *RFT (Regular Full
              Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
              Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          equalEmploymentOpportunityClass:
            type: string
            description: >-
              Values are configured in Company > Setup > HR > EEO Classes.<br  />
              Max length: 10
          isSupervisorReviewer:
            type: boolean
            description: Indicates if employee is a supervisor or reviewer.
          jobTitle:
            type: string
            description: 'Employee current job title. <br  />Max length: 50'
          minimumWageExempt:
            type: boolean
            description: Indicates if employee is exempt from minimum wage.
          overtimeExempt:
            type: boolean
            description: Indicates if employee is exempt from overtime.
          payGroup:
            type: string
            description: 'Employee pay group. Must match Company setup. <br  /> Max length: 20'
          positionCode:
            type: string
            description: >-
              Employee position code. Must match Company setup.<br  />Max length:
              20
          shift:
            type: string
            description: 'Employee work shift.<br  />Max length: 255'
          supervisorCompanyNumber:
            type: string
            description: >-
              Supervisor's company number. Defaults to employee company
              number.<br  />Max length: 9
          supervisorEmployeeId:
            type: string
            description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          tipped:
            type: string
            description: Indicates if employee receives tips.
          unionAffiliationDate:
            type: string
            description: >-
              Employee union affiliation effective date. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          unionCode:
            type: string
            description: 'Employee union code. Must match Company setup. <br  />Max length: 10'
          unionDuesCollected:
            type: boolean
            description: Indicates if union dues are collected.
          unionInitiationCollected:
            type: boolean
            description: Indicates if union initiation fees are collected
          unionPosition:
            type: string
            description: >-
              Employee union position. Must match Company setup. <br  />Max
              length: 30
          workersComp:
            type: string
            description: >-
              Employee worker compensation code. Must match Company setup.<br  />
              Max length: 10
        additionalProperties: false
      directDeposit:
        type: object
        properties:
          additionalDirectDeposit:
            type: array
            description: Additional Direct Deposits that are not the main Direct Deposit.
            items:
              type: object
              additionalProperties: false
              description: The additional direct deposit model
          mainDirectDeposit:
            type: object
            additionalProperties: false
            description: The main Direct Deposit account.
        additionalProperties: false
        description: The Direct Deposit model
      earning:
        required:
          - earningCode
          - startDate
        type: object
        properties:
          agency:
            type: object
            description: >-
              Third-party agency associated with earning. Must match Company
              setup.<br  />Max length: 10
          amount:
            type: object
            description: >-
              Value that matches CalculationCode to add to gross wages. For
              percentage (%), enter whole number (10 = 10%).  <br  />Decimal(12,2)
          annualMaximum:
            type: object
            description: >-
              Year to Date dollar amount not to be exceeded for an earning in the
              calendar year. Used only with company driven maximums. <br 
              />Decimal(12,2)
          calculationCode:
            type: object
            description: >-
              Defines how earnings are calculated. Common values are *%
              (percentage of gross), flat (flat dollar amount)*. Defaulted to the
              Company setup calcCode for earning. <br  />Max length: 20
          costCenter1:
            type: object
            description: >-
              Cost Center associated with earning. Must match Company setup.<br 
              /> Max length: 10
          costCenter2:
            type: object
            description: >-
              Cost Center associated with earning. Must match Company setup.<br 
              /> Max length: 10
          costCenter3:
            type: object
            description: >-
              Cost Center associated with earning. Must match Company setup.<br 
              /> Max length: 10
          earningCode:
            type: object
            description: 'Earning code. Must match Company setup. <br  />Max length: 10'
          effectiveDate:
            type: object
            description: >-
              Date earning is active. Defaulted to run date or check date based on
              Company setup. Common formats are MM-DD-CCYY, CCYY-MM-DD.
            format: paylocity-date
          endDate:
            type: object
            description: Stop date of an earning. Common formats are MM-DD-CCYY, CCYY-MM-DD.
            format: paylocity-date
          frequency:
            type: object
            description: >-
              Needed if earning is applied differently from the payroll frequency
              (one time earning for example).<br  /> Max length: 5
          goal:
            type: object
            description: >-
              Dollar amount. The employee earning will stop when the goal amount
              is reached.<br  /> Decimal(12,2)
          hoursOrUnits:
            type: object
            description: >-
              The value is used in conjunction with the Rate field. When entering
              Group Term Life Insurance (GTL), it should contain the full amount
              of the group term life insurance policy. <br  /> Decimal(12,2)
          isSelfInsured:
            type: object
            description: Used for ACA. If not entered, defaulted to Company earning setup.
          jobCode:
            type: object
            description: >-
              Job code associated with earnings. Must match Company setup.<br  />
              Max length: 20
          miscellaneousInfo:
            type: object
            description: >-
              Information to print on the check stub if agency is set up for this
              earning. <br  />Max length: 50
          paidTowardsGoal:
            type: object
            description: Amount already paid to employee toward goal. <br  /> Decimal(12,2)
          payPeriodMaximum:
            type: object
            description: >-
              Maximum amount of the earning on a single paycheck. <br  />
              Decimal(12,2)
          payPeriodMinimum:
            type: object
            description: >-
              Minimum amount of the earning on a single paycheck. <br  />
              Decimal(12,2)
          rate:
            type: object
            description: >-
              Rate is used in conjunction with the hoursOrUnits field. <br  />
              Decimal(12,2)
          rateCode:
            type: object
            description: >-
              Rate Code applies to additional pay rates entered for an employee.
              Must match Company setup. <br  /> Max length: 10
          startDate:
            type: object
            description: >-
              Start date of an earning based on payroll calendar. Common formats
              are MM-DD-CCYY, CCYY-MM-DD.
            format: paylocity-date
        additionalProperties: false
        description: The employee earning model
      emergencyContact:
        required:
          - firstName
          - lastName
        type: object
        properties:
          address1:
            type: object
            description: 1st address line.
          address2:
            type: object
            description: 2nd address line.
          city:
            type: object
            description: City.
          country:
            type: object
            description: County.
          county:
            type: object
            description: >-
              Country.  Must be a valid 3 character country code.  Common values
              are *USA* (United States), *CAN* (Canada).
          email:
            type: object
            description: Contact email.  Must be valid email address format.
          firstName:
            type: object
            description: 'Required. Contact first name. <br  />Max length: 40'
          homePhone:
            type: object
            description: >-
              Contact Home Phone.  Valid phone format  *(###) #######* or
              *######-####* or *### ### ####* or *##########* or, if
              international, starts with *+#*, only spaces and digits allowed.
          lastName:
            type: object
            description: 'Required. Contact last name. <br  />Max length: 40'
          mobilePhone:
            type: object
            description: >-
              Contact Mobile Phone.  Valid phone format  *(###) #######* or
              *######-####* or *### ### ####* or *##########* or, if
              international, starts with *+#*, only spaces and digits allowed.
          notes:
            type: object
            description: 'Notes. <br  />Max length: 1000'
          pager:
            type: object
            description: >-
              Contact Pager.  Valid phone format  *(###) #######* or *######-####*
              or *### ### ####* or *##########* or, if international, starts with
              *+#*, only spaces and digits allowed.
          primaryPhone:
            type: object
            description: >-
              Required. Contact primary phone type.  Must match Company setup. 
              Valid  values are H (Home), M (Mobile), P (Pager), W (Work)
          priority:
            type: object
            description: >-
              Required. Contact priority. Valid values are *P* (Primary) or *S*
              (Secondary).
          relationship:
            type: object
            description: >-
              Required. Contact relationship.  Must match Company setup.  Common
              values are Spouse, Mother, Father.
          state:
            type: object
            description: >-
              State or Province.  If U.S. address, must be valid 2 character state
              code.  Common values are *IL* (Illinois), *CA* (California).
          syncEmployeeInfo:
            type: boolean
            description: Valid values are *true* or *false*.
          workExtension:
            type: object
            description: Work Extension.
          workPhone:
            type: object
            description: >-
              Contact Work Phone.  Valid phone format  *(###) #######* or
              *######-####* or *### ### ####* or *##########* or, if
              international, starts with *+#*, only spaces and digits allowed.
          zip:
            type: object
            description: Postal code.  If U.S. address, must be a valid zip code.
        additionalProperties: false
        description: The emergency contact model
      employeeV1:
        type: object
        properties:
          address1:
            type: string
            description: 'Employee home 1st address line. <br  />Max length: 40'
          address2:
            type: string
            description: 'Employee home 2nd address line. <br  />Max length: 40'
          benefitSetup:
            type: object
            properties:
              benefitClass:
                type: string
                description: >-
                  Benefit Class code. Values are configured in Paylocity
                  Payroll/HR solution Company > Setup > Benefits > Classes.<br 
                  />Max length: 30
              benefitClassEffectiveDate:
                type: string
                description: >-
                  Date when Benefit Class takes effect. Common formats are
                  *MM-DD-CCYY, CCYY-MM-DD*.
              benefitSalary:
                type: number
                description: Salary used to configure benefits.<br  />Decimal(12,2)
              benefitSalaryEffectiveDate:
                type: string
                description: >-
                  Date when Benefit Salary takes effect. Common formats are
                  *MM-DD-CCYY, CCYY-MM-DD*.
              doNotApplyAdministrativePeriod:
                type: boolean
                description: >-
                  Applicable only for ACA Enhanced clients and Benefit Classes
                  with ACA Employment Type of Full Time.
              measureACAEligibility:
                type: boolean
                description: >-
                  Only valid for ACA Enhanced clients and Benefit Classes that are
                  ACA Employment Type of Full Time.
            description: Benefit Setup
          birthDate:
            type: string
            description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          city:
            type: string
            description: 'Employee home city. <br  />Max length: 40'
          companyNumber:
            type: string
            description: 'Paylocity assigned company number. <br  /> Max length: 9'
          departmentPosition:
            type: object
            properties:
              costCenter1:
                type: string
                description: >-
                  Employer defined location, like *branch, division, department*,
                  etc. Must match Company setup. <br  />Max length: 10
              costCenter2:
                type: string
                description: >-
                  Employer defined location, like *branch, division, department*,
                  etc. Must match Company setup. <br  />Max length: 10
              costCenter3:
                type: string
                description: >-
                  Employer defined location, like *branch, division, department*,
                  etc. Must match Company setup. <br  />Max length: 10
              employeeType:
                type: string
                description: >-
                  Employee current employment type. Common values *RFT (Regular
                  Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT
                  (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max
                  length: 10
              equalEmploymentOpportunityClass:
                type: string
                description: >-
                  Values are configured in Company > Setup > HR > EEO Classes.<br 
                  /> Max length: 10
              jobTitle:
                type: string
                description: 'Employee current job title. <br  />Max length: 50'
              payGroup:
                type: string
                description: >-
                  Employee pay group. Must match Company setup. <br  /> Max
                  length: 20
            description: Department Position
          employeeId:
            type: string
            description: >-
              Leave blank to have Paylocity Payroll/HR solution automatically
              assign the next available employee ID.<br  /> Max length: 10
          employeeStatus:
            type: object
            properties:
              employeeStatusCode:
                type: string
                description: >-
                  Employee current work status. Common values are *A* (Active),
                  *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20
            description: Employee Status
          ethnicity:
            type: string
            description: 'Employee ethnicity.<br  /> Max length: 10'
          firstName:
            type: string
            description: 'Employee first name. <br  />Max length: 40'
          gender:
            type: string
            description: >-
              Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
              length: 1
          highlyCompensatedEmployee:
            type: boolean
            description: >-
              Indicates if employee meets the highly compensated employee
              criteria.
          hireDate:
            type: string
            description: Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          homePhone:
            type: string
            description: 'Employee home phone number.  <br  />Max length: 12'
          lastName:
            type: string
            description: 'Employee last name. <br  />Max length: 40'
          maritalStatus:
            type: string
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          middleName:
            type: string
            description: 'Employee middle name.<br  /> Max length: 20'
          nickname:
            type: string
            description: 'Employee preferred display name. <br  /> Max length: 20'
          ownerPercent:
            type: number
            description: >-
              Percentage of employee's ownership in the company, entered as a
              whole number . <br  /> Decimal (12,2)
          personalEmailAddress:
            type: string
            description: 'Employee personal email address. <br  />Max length: 50'
          personalMobilePhone:
            type: string
            description: 'Employee personal mobile phone number. <br  />Max length: 12'
          position:
            type: string
            description: >-
              Employee position code. Must match Company setup.<br  />Max length:
              20 
          postalCode:
            type: string
            description: 'Employee work zip code.<br  /> Max length: 10'
          primaryPayRate:
            type: object
            properties:
              annualSalary:
                type: number
                description: Employee annual salary. <br  />Decimal (12,2)
              baseRate:
                type: number
                description: >-
                  Employee base rate, used for Hourly employees. <br  />Decimal
                  (12,2)
              defaultHours:
                type: number
                description: >-
                  Employee default hours consistently worked. If autoPayType is
                  set to D, employee will be paid hourly base rate for the
                  defaultHours. <br  />Decimal (12,2)
              payFrequency:
                type: string
                description: >-
                  Employee current pay frequency. Common values are *A (Annual), B
                  (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
                  (Quarterly), W (Weekly)*. <br  />Max length: 5
              payType:
                type: string
                description: >-
                  Employee pay type (rate code). Valid values are *Hourly* or
                  *Salary*. <br  />Max length: 10
              primaryPayRateEffectiveDate:
                type: string
                description: The date the employee’s pay rate takes effect. (MM-DD-CCYY)
              salary:
                type: number
                description: >-
                  Employee gross salary per pay period used with payType
                  Salary.<br  />Decimal (12,2)
            description: Primary Pay Rate
          reHireDate:
            type: string
            description: >-
              Rehire date if employee is rehired. Common formats are *MM-DD-CCYY,
              CCYY-MM-DD*.
          ssn:
            type: string
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          state:
            type: string
            description: 'Employee home state. <br  />Max length: 2'
          statutory:
            type: boolean
            description: Indicates if employee is statutory.
          supervisorCompanyNumber:
            type: string
            description: >-
              Supervisor's company number. Defaults to employee company
              number.<br  />Max length: 9
          supervisorEmployeeId:
            type: string
            description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          taxForm:
            type: string
            description: >-
              Employee tax form for reporting income. Valid values are *W2, 1099M,
              1099R*. Default is W2. <br  />Max length: 15
          terminationDate:
            type: string
            description: >-
              Date of emplyee termination. Common formats are *MM-DD-CCYY,
              CCYY-MM-DD*.
          terminationReason:
            type: string
            description: >-
              Employee termination reason. Must match Company setup for employee
              status.<br  />Max length: 15
          workEmailAddress:
            type: string
            description: 'Employee work email. <br  />Max length: 50'
          workPhone:
            type: string
            description: 'Employee work phone number.<br  /> Max length: 12'
          workPhoneExt:
            type: string
            description: 'Employee work phone extension number.<br  /> Max length: 10'
        description: Employee
      employee:
        type: object
        properties:
          additionalDirectDeposit:
            maxItems: 19
            type: array
            description: >-
              Add up to 19 direct deposit accounts in addition to the main direct
              deposit account. IMPORTANT: A direct deposit update will remove ALL
              existing main and additional direct deposit information in WebPay
              and replace with information provided on the request. GET API will
              not return direct deposit data.
            items:
              type: object
              additionalProperties: false
              description: The additional direct deposit model
          additionalRate:
            type: array
            description: Add Additional Rates.
            items:
              type: object
              additionalProperties: false
              description: The additional pay rate model
          benefitSetup:
            type: object
            additionalProperties: false
            description: ' Add or update setup values used for employee benefits integration, insurance plan settings, and ACA reporting.'
          birthDate:
            type: object
            description: >-
              Employee birthdate. Common formats include *MM-DD-CCYY*,
              *CCYY-MM-DD*.
            format: paylocity-date
          companyFEIN:
            type: object
            description: >-
              Company FEIN as defined in Paylocity Payroll/HR solution, applicable
              with GET requests only.<br  /> Max length: 20
          companyName:
            type: object
            description: >-
              Company name as defined in Paylocity Payroll/HR solution, applicable
              with GET requests only.<br  /> Max length: 50
          currency:
            type: object
            description: 'Employee is paid in this currency. <br  />Max length: 30'
          customBooleanFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of boolean (checkbox) type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customDateFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of the date type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customDropDownFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of the dropdown type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customNumberFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of numeric type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customTextFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of text type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          departmentPosition:
            type: object
            additionalProperties: false
            description: >-
              Add or update home department cost center, position, supervisor,
              reviewer, employment type, EEO class, pay settings, and union
              information.
          disabilityDescription:
            type: object
            description: Indicates if employee has disability status.
          emergencyContacts:
            type: array
            description: Add or update Emergency Contacts.
            items:
              type: object
              additionalProperties: false
              description: The emergency contact model
          employeeId:
            type: object
            description: >-
              Leave blank to have Paylocity Payroll/HR solution automatically
              assign the next available employee ID.<br  />Max length: 10
          ethnicity:
            type: object
            description: 'Employee ethnicity.<br  /> Max length: 10'
          federalTax:
            type: object
            additionalProperties: false
            description: >-
              Add or update federal tax amount type (taxCalculationCode), amount
              or percentage, filing status, and exemptions.
          firstName:
            type: object
            description: 'Employee first name. <br  />Max length: 40'
          gender:
            type: object
            description: >-
              Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
              length: 1
          homeAddress:
            type: object
            additionalProperties: false
            description: >-
              Add or update employee's home address, personal phone numbers, and
              personal email.
          isHighlyCompensated:
            type: boolean
            description: >-
              Indicates if employee meets the highly compensated employee
              criteria.
          isSmoker:
            type: boolean
            description: Indicates if employee is a smoker.
          lastName:
            type: object
            description: 'Employee last name. <br  />Max length: 40'
          localTax:
            maxItems: 5
            type: array
            description: >-
              Add, update, or delete local tax code, filing status, and exemptions
              including  PA-PSD taxes.
            items:
              type: object
              additionalProperties: false
              description: The Local Tax model
          mainDirectDeposit:
            type: object
            additionalProperties: false
            description: >-
              Add the main direct deposit account. After deposits are made to any
              additional direct deposit accounts, the remaining net check is
              deposited in the main direct deposit account. IMPORTANT: A direct
              deposit update will remove ALL existing main and additional direct
              deposit information in WebPay and replace with what is provided on
              the request. GET API will not return direct deposit data.
          maritalStatus:
            type: object
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          middleName:
            type: object
            description: 'Employee middle name.<br  /> Max length: 20'
          nonPrimaryStateTax:
            type: object
            additionalProperties: false
            description: >-
              Add or update non-primary state tax code, amount type
              (taxCalculationCode), amount or percentage, filing status,
              exemptions, supplemental check (specialCheckCalc), and reciprocity
              code information.
          ownerPercent:
            type: object
            description: >-
              Percentage of employee's ownership in the company, entered as a
              whole number. <br  /> Decimal (12,2)
          preferredName:
            type: object
            description: 'Employee preferred display name.<br  /> Max length: 20'
          primaryPayRate:
            type: object
            additionalProperties: false
            description: >-
              Add or update hourly or salary pay rate, effective date, and pay
              frequency.
          primaryStateTax:
            type: object
            additionalProperties: false
            description: >-
              Add or update primary state tax code, amount type
              (taxCalculationCode), amount or percentage, filing status,
              exemptions, and supplemental check (specialCheckCalc) information.
              Only one primary state is allowed. Sending an updated primary state
              will replace the current primary state.
          priorLastName:
            type: object
            description: 'Prior last name if applicable.<br  />Max length: 40'
          salutation:
            type: object
            description: 'Employee preferred salutation. <br  />Max length: 10'
          ssn:
            type: object
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          status:
            type: object
            additionalProperties: false
            description: >-
              Add or update employee status, change reason, effective date, and
              adjusted seniority date. Note that companies that are still in
              Implementation cannot hire future employees.
          suffix:
            type: object
            description: >-
              Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
              length: 30
          taxSetup:
            type: object
            additionalProperties: false
            description: >-
              Add tax form, 1099 exempt reasons and notes, and 943 agricultural
              employee information. Once the employee receives wages, this
              information cannot be updated. Add or update SUI tax state,
              retirement plan, and statutory information.
          veteranDescription:
            type: object
            description: Indicates if employee is a veteran.
          webTime:
            type: object
            additionalProperties: false
            description: >-
              Add or update Web Time badge number and charge rate and synchronize
              Paylocity Payroll/HR solution and Web Time employee data.
          workAddress:
            type: object
            additionalProperties: false
            description: >-
              Add or update employee's work address, phone numbers, and email.
              Work Location drop down field is not included.
          workEligibility:
            type: object
            additionalProperties: false
            description: Add or update I-9 work authorization information.
        additionalProperties: false
        description: The employee model
      employeeIdResponse:
        type: object
        properties:
          employeeId:
            type: string
            description: The EmployeeId
        description: The EmployeeId Response Model
      employeeInfo:
        type: object
        properties:
          employeeId:
            type: object
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          statusCode:
            type: object
            description: >-
              Employee current work status. Common values are *A* (Active), *L*
              (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          statusTypeCode:
            type: object
            description: 'Employee current work status type. <br  />Max length: 10'
        additionalProperties: false
        description: The employee info model
      localTax:
        type: object
        properties:
          exemptions:
            type: object
            description: Local tax exemptions value.<br  />Decimal (12,2)
          exemptions2:
            type: object
            description: Local tax exemptions 2 value.<br  />Decimal (12,2)
          filingStatus:
            type: object
            description: >-
              Employee local tax filing status. Must match specific local tax
              setup. <br  /> Max length: 50
          residentPSD:
            type: object
            description: >-
              Resident PSD (political subdivision code) applicable in PA. Must
              match Company setup.<br  /> Max length: 9
          taxCode:
            type: object
            description: 'Local tax code.<br  />Max length: 50'
          workPSD:
            type: object
            description: 'Work location PSD. Must match Company setup. <br  /> Max length: 9'
        additionalProperties: false
        description: The Local Tax model
      newAdditionalDirectDeposit:
        type: object
        properties:
          accountType:
            type: string
            description: >-
              Account type. Valid values are *C* (Checking), *S* (Saving), *P*
              (Pay Card). <br   />Max length: 1<br /><small>new with Web Link 16.6
              release</small>
          routingNumber:
            type: string
            description: >-
              ABA Transit Routing Number, entered without dashes or spaces. <br 
              />Max length: 9<br /><small>new with Web Link 16.6 release</small>
          accountNumber:
            type: string
            description: >-
              Account number, entered without special characters and spaces. <br 
              />Max length: 17<br /><small>new with Web Link 16.6 release</small>
          amountType:
            type: string
            description: >-
              Amount type to indicate the context of the amount. Common values are
              *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length:
              5<br /><small>new with Web Link 16.6 release</small>
          amount:
            type: number
            description: >-
              Amount value to be deposited to the account.<br  />Decimal (12,2)<br
              /><small>new with Web Link 16.6 release</small>
          blockSpecial:
            type: boolean
            description: >-
              Indicates if direct deposit should be blocked when special check
              types such as Bonus are processed.<br /><small>new with Web Link
              16.6 release</small>
          nameOnAccount:
            type: string
            description: >-
              Name on the bank account. Defaults to employee's name. <br  />Max
              length: 30<br /><small>new with Web Link 16.6 release</small>
          skipPreNote:
            type: boolean
            description: >-
              Indicates if account will not pre-note.<br /><small>new with Web
              Link 16.6 release</small>
          preNoteDate:
            type: string
            description: >-
              Date to end the pre-note of the account. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.<br /><small>new with Web Link 16.6
              release</small>
            format: date
        additionalProperties: false
      newBenefitClassSetup:
        required:
          - benefitClassSetupEffectiveDate
        type: object
        properties:
          benefitClass:
            type: string
            description: >-
              Benefit Class code. Values are configured in Paylocity Payroll/HR
              solution Company > Setup > Benefits > Classes.<br  />Max length: 30
          benefitClassSetupEffectiveDate:
            type: string
            description: >-
              Date when Benefit Class takes effect. Common formats are MM-DD-CCYY,
              CCYY-MM-DD.
            format: date
          benefitSalary:
            type: number
            description: Salary used to configure benefits.<br  />Decimal(12,2)
          benefitSalaryEffectiveDate:
            type: string
            description: >-
              Date when Benefit Salary takes effect. Common formats are
              MM-DD-CCYY, CCYY-MM-DD.
            format: date
          doNotApplyAdministrativePeriod:
            type: boolean
            description: >-
              Applicable only for ACA Enhanced clients and Benefit Classes with
              ACA Employment Type of Full Time.
          measureACAEligibility:
            type: boolean
            description: >-
              Applicable only for ACA Enhanced clients and Benefit Classes with
              ACA Employment Type of Full Time.
        additionalProperties: false
      newEmployee:
        required:
          - companyNumber
        type: object
        properties:
          address1:
            type: string
            description: 'Employee home 1st address line. <br  />Max length: 40'
          address2:
            type: string
            description: 'Employee home 2nd address line. <br  />Max length: 40'
          adjSeniorityDate:
            type: string
            description: >-
              Adjusted seniority date. Common formats are *MM-DD-CCYY,
              CCYY-MM-DD*.
            format: date
          annualSalary:
            type: number
            description: Employee annual salary. <br  />Decimal (12,2)
          autoGenerateEmployeeId:
            type: boolean
            description: >-
              *True* to have Paylocity Payroll/HR solution automatically assign
              the next available employee ID.<br  />*False* when providing a value
              in the employeeId field.
          autoPay:
            type: boolean
            description: >-
              If set to *True*, employee will be paid automatically using
              deafultHours.
          autoPayType:
            type: string
            description: >-
              Valid values are *N, D, S*. (N- employee won't automatically receive
              a salary or hours during payroll, D - employee will be automatically
              paid in defaultHours during payroll, S - employee will be
              automatically paid Salary
          baseRate:
            type: number
            description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          birthDate:
            type: string
            description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          city:
            type: string
            description: 'Employee home city. <br  />Max length: 40'
          clockBadge:
            type: string
            description: >-
              Employee clock badge number. Deafults to employeeId. <br  />Max
              length: 10
          companyNumber:
            type: string
            description: 'Paylocity assigned company number.<br  /> Max length: 9'
          costCenter1:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          costCenter2:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          costCenter3:
            type: string
            description: >-
              Employer defined location, like *branch, division, department*, etc.
              Must match Company setup. <br  />Max length: 10
          country:
            type: string
            description: 'Employee country. <br  /> Max length: 30'
          county:
            type: string
            description: 'Employee county.<br  /> Max length: 30 '
          defaultHours:
            type: number
            description: >-
              Employee default hours consistently worked. If autoPayType is set to
              D, employee will be paid hourly base rate for the defaultHours. <br 
              />Decimal (12,2)
          disability:
            type: boolean
            description: Indicates if employee has disability status.
          eligibleForRehire:
            type: boolean
            description: Indicates if employee eligible for rehire.
          employee943:
            type: boolean
            description: Indicates if employee in agriculture or farming.
          employeeId:
            type: string
            description: >-
              Leave blank to have Paylocity Payroll/HR solution automatically
              assign the next available employee ID.<br  /> Max length: 10
          employeeStatus:
            type: string
            description: >-
              Employee current work status. Common values are *A* (Active), *L*
              (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          employmentType:
            type: string
            description: >-
              Employee current employment type. Common values *RFT (Regular Full
              Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
              Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          equalEmploymentOpportunityClass:
            type: string
            description: >-
              Values are configured in Company > Setup > HR > EEO Classes.<br  />
              Max length: 10
          ethnicity:
            type: string
            description: 'Employee ethnicity.<br  /> Max length: 10'
          firstName:
            type: string
            description: 'Employee first name. <br  />Max length: 40'
          fitwExempt:
            type: boolean
            description: Indicates if employee exempt from federal income tax.
          fitwExemptNotes:
            type: string
            description: 'Notes for FITW exempt.<br  /> Max length: 250'
          fitwExemptReason:
            type: string
            description: >-
              Reason code for FITW exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          futaExempt:
            type: boolean
            description: Indicates if employee is exempt from Federal Unemployment Tax Act.
          futaExemptNotes:
            type: string
            description: 'FUTA exempt note. <br  /> Max length: 250'
          futaExemptReason:
            type: string
            description: >-
              Reason code for FUTA exemption. Common values are *501* (5019c)(3)
              Organization), *IC* (Independent Contractor).<br  /> Max length: 30
          hireDate:
            type: string
            description: Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          homePhone:
            type: string
            description: 'Employee home phone number.<br  />Max length: 12'
          isSupervisorReviewer:
            type: boolean
            description: Indicates if employee is a supervisor or reviewer.
          lastName:
            type: string
            description: 'Employee last name. <br  />Max length: 40'
          maritalStatus:
            type: string
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          medExempt:
            type: boolean
            description: Indicates if employee is Medicare exempt.
          medExemptNotes:
            type: string
            description: Notes for Medicare exempt.
          medExemptReason:
            type: string
            description: >-
              Reason code for Medicare exemption. Common values are *501*
              (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max
              length: 30
          middleName:
            type: string
            description: 'Employee middle name.<br  /> Max length: 20'
          minimumWageExempt:
            type: boolean
            description: Indicates if employee is exempt from minimum wage.
          nickname:
            type: string
            description: 'Employee preferred display name.<br  /> Max length: 20'
          overrideTitle:
            type: boolean
            description: >-
              Indicates override to the default Job Title. Use the title field to
              enter Employee job title.
          overtimeExempt:
            type: boolean
            description: Indicates if employee is exempt from overtime.
          payFrequency:
            type: string
            description: >-
              Employee current pay frequency. Common values are *A (Annual), B
              (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
              (Quarterly), W (Weekly)*. <br  />Max length: 5
          payGrade:
            type: string
            description: 'Employee pay grade. Must match Company setup. <br  /> Max length: 10'
          payGroup:
            type: string
            description: 'Employee pay group. Must match Company setup. <br  /> Max length: 20'
          payRateNote:
            type: string
            description: 'Pay rate notes regarding employee.<br  /> Max length: 250'
          pension:
            type: boolean
            description: Indicates if employee is eligible for pension.
          personalEmailAddress:
            type: string
            description: 'Employee personal email address. <br  />Max length: 50'
          personalMobilePhone:
            type: string
            description: 'Employee personal mobile phone number. <br  />Max length: 12'
          positionCode:
            type: string
            description: >-
              Employee position code. Must match Company setup.<br  />Max length:
              20
          primaryPayRateEffectiveDate:
            type: string
            description: Primary Pay Rate EffectiveDate
            format: date
          priorLastName:
            type: string
            description: 'Prior last name if applicable.<br  />Max length: 40'
          rateCode:
            type: string
            description: >-
              Employee rate (pay type) code.  Valid values are *Hourly* or
              *Salary*. <br  />Max length: 10
          ratePer:
            type: string
            description: >-
              Employee base rate frequency used with payType Hourly. Common values
              are *Hour, Week*. Default is Hour. <br  />Max length: 10
          reviewerCo:
            type: string
            description: 'Company number of reviewer. <br  />Max length: 9'
          reviewerId:
            type: string
            description: 'Employee id of the reviewer. <br  />Max length: 10'
          salary:
            type: number
            description: >-
              Employee gross salary per pay period used with payType Salary.<br 
              />Decimal (12,2)
          salutation:
            type: string
            description: 'Employee preferred salutation. <br  />Max length: 10'
          sex:
            type: string
            description: >-
              Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
              length: 1
          shift:
            type: string
            description: 'Employee work shift.<br  />Max length: 255'
          sitwExempt:
            type: boolean
            description: Indicates if employee exempt from state income tax.
          sitwExemptNotes:
            type: string
            description: 'Notes for SITW exempt.<br  /> Max length: 250'
          sitwExemptReason:
            type: string
            description: >-
              Reason code for SITW exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          smoker:
            type: boolean
            description: Indicates if employee is a smoker.
          ssExempt:
            type: boolean
            description: Indicates if employee is exempt from Social Security taxes.
          ssExemptNotes:
            type: string
            description: 'Notes for Socal Security exemptions.<br  /> Max length: 250'
          ssExemptReason:
            type: string
            description: >-
              Reason code for Social Security exemption. Common values are *SE*
              (Statutory employee), *CR* (clergy/Religious). <br  /> Max length:
              30
          ssn:
            type: string
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          state:
            type: string
            description: 'Employee home state. <br  />Max length: 2'
          statutory:
            type: boolean
            description: Indicates if employee is statutory.
          suffix:
            type: string
            description: >-
              Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
              length: 30
          suiExempt:
            type: boolean
            description: Indicates if employee is exempt from state unemployment insurance.
          suiExemptNotes:
            type: string
            description: 'Notes for SUI exempt.<br  /> Max length: 250'
          suiExemptReason:
            type: string
            description: >-
              Reason code for SUI exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          suiState:
            type: string
            description: >-
              Employee SUI (State Unemployment Insurance) state. <br  />Max
              length: 2
          supervisorCo:
            type: string
            description: >-
              Supervisor's company number. Defaults to employee company
              number.<br  />Max length: 9
          supervisorID:
            type: string
            description: 'EmployeeId of the supervisor. <br  />Max length: 10'
          taxDistributionCode1099R:
            type: string
            description: >-
              Emplopyee 1099R distribution code. Common values are *7* (Normal
              Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
          taxForm:
            type: string
            description: >-
              Employee tax form for reporting income. Valid values are *W2, 1099M,
              1099R*. Default is W2. <br  />Max length: 15
          tipped:
            type: string
            description: Indicates if employee receives tips.
          title:
            type: string
            description: 'Employee current job title.<br  />Max length: 50'
          unionCode:
            type: string
            description: 'Employee union code. Must match Company setup. <br  />Max length: 10'
          unionDate:
            type: string
            description: >-
              Employee union affiliation effective date. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          unionDues:
            type: boolean
            description: Indicates if union dues are collected.
          unionInitFees:
            type: boolean
            description: Indicates if initiations fees are collected.
          unionPosition:
            type: string
            description: >-
              Employee union position. Must match Company setup. <br  />Max
              length: 30
          veteran:
            type: boolean
            description: Indicates if employee is a veteran.
          waliExempt:
            type: boolean
            description: >-
              Indicates if employee is exempt from Washington state Liability
              Insurance.
          waliExemptNotes:
            type: string
            description: Notes for WALI exemption.
          waliExemptReason:
            type: string
            description: >-
              Reason code for WALI exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          workAddress1:
            type: string
            description: 'Employee work 1st address line.<br  /> Max length: 40'
          workAddress2:
            type: string
            description: 'Employee work 2nd address line. <br  /> Max length: 40'
          workCity:
            type: string
            description: 'Employee work city.<br  /> Max length: 40'
          workCountry:
            type: string
            description: 'Employee work country.<br  /> Max length: 30'
          workCounty:
            type: string
            description: 'Employee work county.<br  /> Max length: 30'
          workEmailAddress:
            type: string
            description: 'Employee work email. <br  />Max length: 50'
          workersComp:
            type: string
            description: >-
              Employee worker compensation code. Must match Company setup.<br  />
              Max length: 10
          workExt:
            type: string
            description: 'Employee work phone extension number.<br  /> Max length: 10'
          workLocation:
            type: string
            description: 'Employee work location. <br  /> Max length: 50'
          workMailStop:
            type: string
            description: 'Employee physical mail box location.<br  /> Max length: 10'
          workMobilePhone:
            type: string
            description: 'Employee work mobile phone number.<br  /> Max length: 12'
          workPager:
            type: string
            description: 'Employee work pager number.<br  /> Max length: 20'
          workPhone:
            type: string
            description: 'Employee work phone number.<br  /> Max length: 12'
          workState:
            type: string
            description: 'Employee work state.<br  /> Max length: 2'
          workZip:
            type: string
            description: 'Employee work zip code.<br  /> Max length: 10'
          zip:
            type: string
            description: 'Employee home zip code. <br  />Max length: 10'
          syncWebTimeRecord:
            type: boolean
            description: If set to *True*, employee will be synced with Web Time.
          newBenefitClassSetup:
            type: array
            items:
              $ref: '#/components/schemas/newBenefitClassSetup'
          newMainDirectDeposit:
            maxItems: 1
            type: array
            items:
              $ref: '#/components/schemas/newMainDirectDeposit'
          newAdditionalDirectDeposit:
            maxItems: 19
            type: array
            items:
              $ref: '#/components/schemas/newAdditionalDirectDeposit'
          newFedTax:
            type: array
            items:
              $ref: '#/components/schemas/newFedTax'
          newLocalTax:
            type: array
            items:
              $ref: '#/components/schemas/newLocalTax'
          newStateTax:
            type: array
            items:
              $ref: '#/components/schemas/newStateTax'
          newWorkEligibility:
            type: array
            items:
              $ref: '#/components/schemas/newWorkEligibility'
        additionalProperties: false
      newFedTax:
        type: object
        properties:
          amount:
            type: number
            description: Tax amount. <br  />Decimal (12,2)
          exemptions:
            type: number
            description: Federal tax exemptions value. <br  />Decimal (12,2)
          filingStatus:
            type: string
            description: >-
              Employee federal filing status. Common values are *S* (Single), *M*
              (Married).<br  />Max length: 50
          percentage:
            type: number
            description: Tax percentage. <br  />Decimal (12,2)
          taxCalcCode:
            type: string
            description: >-
              Tax calculation code. Common values are *F* (Flat), *P*
              (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
              <br  />Max length: 10
          tCode:
            type: string
            description: 'Tax code. <br  /> Max length: 50'
        additionalProperties: false
      newLocalTax:
        type: object
        properties:
          tCode:
            type: string
            description: 'Local tax code.<br  />Max length: 50'
          exemptions:
            type: number
            description: Local tax exemptions value.<br  />Decimal (12,2)
          exemptions2:
            type: number
            description: Local tax exemptions 2 value.<br  />Decimal (12,2)
          filingStatus:
            type: string
            description: >-
              Employee local tax filing status. Must match specific local tax
              setup. <br  /> Max length: 50
          residentPSD:
            type: string
            description: >-
              Resident PSD (political subdivision code) applicable in PA. Must
              match Company setup.<br  /> Max length: 9
          workPSD:
            type: string
            description: 'Work location PSD. Must match Company setup. <br  /> Max length: 9'
        additionalProperties: false
      newMainDirectDeposit:
        type: object
        properties:
          accountType:
            type: string
            description: >-
              Account type. Valid values are *C* (Checking), *S* (Saving), *P*
              (Pay Card). <br   />Max length: 1<br /><small>new with Web Link 16.6
              release</small>
          routingNumber:
            type: string
            description: >-
              ABA Transit Routing Number, entered without dashes or spaces. <br 
              />Max length: 9<br /><small>new with Web Link 16.6 release</small>
          accountNumber:
            type: string
            description: >-
              Account number, entered without special characters and spaces. <br 
              />Max length: 17<br /><small>new with Web Link 16.6 release</small>
          blockSpecial:
            type: boolean
            description: >-
              Indicates if direct deposit should be blocked when special check
              types such as Bonus are processed.<br /><small>new with Web Link
              16.6 release</small>
          nameOnAccount:
            type: string
            description: >-
              Name on the bank account. Defaults to employee's name. <br  />Max
              length: 30<br /><small>new with Web Link 16.6 release</small>
          skipPreNote:
            type: boolean
            description: >-
              Indicates if account will not pre-note.<br /><small>new with Web
              Link 16.6 release</small>
          preNoteDate:
            type: string
            description: >-
              Date to end the pre-note of the account. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.<br /><small>new with Web Link 16.6
              release</small>
            format: date
        additionalProperties: false
      newStateTax:
        type: object
        properties:
          amount:
            type: number
            description: 'State tax code.<br  /> Max length: 50'
          exemptions:
            type: number
            description: State tax exemptions value.<br  />Decimal (12,2)
          exemptions2:
            type: number
            description: State tax exemptions 2 value.<br  />Decimal (12,2)
          filingStatus:
            type: string
            description: >-
              Employee state tax filing status. Common values are *S* (Single),
              *M* (Married).<br  />Max length: 50
          grossWagePercentage:
            type: number
            description: Gross Wage Percentage value. <br  />Decimal (12,2)
          percentage:
            type: number
            description: State Tax percentage. <br  />Decimal (12,2)
          primaryTax:
            type: boolean
            description: Indicates if primary tax.
          reciprocal:
            type: string
            description: Indicates if state tax is reciprocal.
          specialCheckCalc:
            type: string
            description: >-
              Supplemental check calculation code. Common values are *Blocked*
              (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
              Rate-Code). <br  />Max length: 10
          taxCalcCode:
            type: string
            description: >-
              Tax calculation code. Common values are *F* (Flat), *P*
              (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
              <br  />Max length: 10
          tCode:
            type: string
            description: 'State tax code.<br  /> Max length: 50'
        additionalProperties: false
      newWorkEligibility:
        type: object
        properties:
          alienOrAdmissionDocumentNbr:
            type: string
            description: >-
              Employee USCIS or Admission Number. <br  /> Must be 7-10 characters
              and may begin with an 'A'
          i9DateVerified:
            type: string
            description: >-
              The date Employee I9 was verified by the employer. Common formats
              are *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          i9Notes:
            type: string
            description: 'Notes regarding employee''s I9.<br  /> Max length: 4000'
          i9Verified:
            type: boolean
            description: Indicates if employee I9 is verified.
          sSNDateVerified:
            type: string
            description: >-
              The date of employer verification of employee SSN. Common formats
              are *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          sSNNotes:
            type: string
            description: 'Notes regarding employee''s SSN.<br  /> Max length: 4000'
          sSNVerified:
            type: boolean
            description: Indicates if employee SSN is verified.
          visaType:
            type: string
            description: >-
              Employee Visa type. Must match one of the system coded values.<br 
              /> Max length: 100
          workAuthorization:
            type: string
            description: >-
              Employee work authorization. Must match one of the system coded
              values.<br  /> Max length: 100
          workUntil:
            type: string
            description: >-
              End date of employee work eligibility. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          attestedDate:
            type: string
            description: >-
              The date the I-9 Verification form was attested by Employer or
              Authorized representative. Common formats are *MM-DD-CCYY,
              CCYY-MM-DD*.
            format: date
          i94AdmissionNumber:
            type: string
            description: Form I-94 admission number.<br  /> Must be 11 numeric characters.
          foreignPassportNumber:
            type: string
            description: 'Foreign Passport Number.<br  /> Max length: 50'
          countryOfIssuance:
            type: string
            description: >-
              If Foreign Passport number is provided, provide its country of
              issuance. Must match Paylocity setup.<br  /> Max length: 30
        additionalProperties: false
      nonPrimaryStateTax:
        type: object
        properties:
          amount:
            type: object
            description: 'State tax code.<br  /> Max length: 50'
          deductionsAmount:
            type: number
            description: >-
              Box 4(b) on form W4 (year 2020 or later): Deductions amount. <br 
              />Decimal (12,2)
          dependentsAmount:
            type: number
            description: >-
              Box 3 on form W4 (year 2020 or later): Total dependents amount. <br 
              />Decimal (12,2)
          exemptions:
            type: object
            description: State tax exemptions value.<br  />Decimal (12,2)
          exemptions2:
            type: object
            description: State tax exemptions 2 value.<br  />Decimal (12,2)
          filingStatus:
            type: object
            description: >-
              Employee state tax filing status. Common values are *S* (Single),
              *M* (Married).<br  />Max length: 50
          higherRate:
            type: boolean
            description: >-
              Box 2(c) on form W4 (year 2020 or later): Multiple Jobs or Spouse
              Works. <br  />Boolean
          otherIncomeAmount:
            type: number
            description: >-
              Box 4(a) on form W4 (year 2020 or later): Other income amount. <br 
              />Decimal (12,2)
          percentage:
            type: object
            description: State Tax percentage. <br  />Decimal (12,2)
          reciprocityCode:
            type: object
            description: 'Non-primary state tax reciprocity code.<br  /> Max length: 50'
          specialCheckCalc:
            type: object
            description: >-
              Supplemental check calculation code. Common values are *Blocked*
              (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
              Rate-Code). <br  />Max length: 10
          taxCalculationCode:
            type: object
            description: >-
              Tax calculation code. Common values are *F* (Flat), *P*
              (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
              <br  />Max length: 10
          taxCode:
            type: object
            description: 'State tax code.<br  /> Max length: 50'
          w4FormYear:
            type: integer
            description: The state W4 form year <br  />Integer
        additionalProperties: false
        description: The Non-Primary State Tax model
      onboarding:
        required:
          - firstName
          - lastName
        type: object
        properties:
          employeeId:
            type: string
            description: "(optional) The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          address1:
            type: string
            description: 'Employee home 1st address line. <br  />Max length: 40'
          address2:
            type: string
            description: 'Employee home 2nd address line. <br  />Max length: 40'
          autoPayType:
            type: string
            description: >-
              Valid values are *N, D, S. (N- employee won't automatically receive
              a salary or hours during payroll, D - employee will be automatically
              paid in defaultHours during payroll, S - employee will be
              automatically paid Salary amount during payroll)*. <br  />Max
              length: 3
          baseRate:
            type: number
            description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          city:
            type: string
            description: 'Employee home city. <br  />Max length: 40'
          costCenter1:
            type: string
            description: >-
              Employer defined location, like *branch, division, department, etc.*
              Must match Company setup. <br  />Max length: 10
          costCenter2:
            type: string
            description: >-
              Employer defined location, like *branch, division, department, etc.*
              Must match Company setup. <br  />Max length: 10
          costCenter3:
            type: string
            description: >-
              Employer defined location, like *branch, division, department, etc.*
              Must match Company setup. <br  />Max length: 10
          defaultHours:
            type: number
            description: >-
              Employee default hours consistently worked. If autoPayType is set to
              D, employee will be paid hourly base rate for the defaultHours. <br 
              />Decimal (12,2)
          employeeStatus:
            type: string
            description: >-
              Employee current work status. Common values are *A (Active), L
              (Leave of Absence), T (Terminated)*. <br  />Max length: 20
          employmentType:
            type: string
            description: >-
              Employee current employment type. Common values RFT *(Regular Full
              Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full
              Time), TPT (Temporary Part Time)*. <br  />Max length: 10
          federalFilingStatus:
            type: string
            description: >-
              Employee federal filing status. Common values *M (Married), S
              (Single)*. <br  />Max length: 10
          firstName:
            type: string
            description: 'Employee first name. <br  />Max length: 40'
          sex:
            type: string
            description: >-
              Employee gender. Common values *M (Male), F (Female)*. <br  />Max
              length: 1
          hireDate:
            type: string
            description: Employee hired date. Common formats are MM-DD-CCYY, CCYY-MM-DD
          homePhone:
            type: string
            description: 'Employee home phone number. <br  />Max length: 12'
          lastName:
            type: string
            description: 'Employee last name. <br  />Max length: 40'
          maritalStatus:
            type: string
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          personalMobilePhone:
            type: string
            description: 'Employee personal mobile phone number. <br  />Max length: 12'
          payFrequency:
            type: string
            description: >-
              Employee current pay frequency. Common values are *A (Annual), B
              (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
              (Quarterly), W (Weekly)*. <br  />Max length: 5
          personalEmailAddress:
            type: string
            description: 'Employee personal email address. <br  />Max length: 50'
          payType:
            type: string
            description: >-
              Employee pay type. Valid values are *Hourly or Salary*. <br  />Max
              length: 10
          ratePer:
            type: string
            description: >-
              Employee base rate frequency used with payType Hourly. Common values
              are *Hour or Week*. Default is Hour <br  />Max length: 10
          salary:
            type: number
            description: >-
              Employee gross salary per pay period used with payType Salary. <br 
              />Decimal (12,2)
          state:
            type: string
            description: 'Employee home state. <br  />Max length: 2'
          ssn:
            type: string
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          stateFilingStatus:
            type: string
            description: >-
              Employee state filing status. Common values are *M (Married), S
              (Single)*. <br  />Max length: 50
          suiState:
            type: string
            description: >-
              Employee SUI (State Unemployment Insurance) state. <br  />Max
              length: 2
          taxForm:
            type: string
            description: >-
              Employee tax form for reporting income. Valid values are *W2, 1099M,
              1099R*. Default is W2. <br  />Max length: 15
          taxState:
            type: string
            description: 'Employee primary tax state. <br  />Max Length: 2'
          userName:
            type: string
            description: >-
              Required. Employer assigned username to log into Onboarding.
              Duplicate usernames are not allowed. <br  />Must be between 3 and 20
              characters and cannot have special characters other than . (period)
              and _ (underscore)
          workEmailAddress:
            type: string
            description: 'Employee work email. <br  />Max length: 50'
          zip:
            type: string
            description: 'Employee home zip code. <br  />Max length: 10'
        additionalProperties: false
      payStatementDetails:
        type: object
        properties:
          amount:
            type: object
            description: .<br />
          checkDate:
            type: object
            description: .<br />
            format: paylocity-date
          det:
            type: object
            description: .<br />
          detCode:
            type: object
            description: .<br />
          detType:
            type: object
            description: .<br />
          eligibleCompensation:
            type: object
            description: .<br />
          hours:
            type: object
            description: .<br />
          rate:
            type: object
            description: .<br />
          transactionNumber:
            type: integer
            description: <br />
          transactionType:
            type: object
            description: .<br />
          year:
            type: integer
            description: .<br />
        additionalProperties: false
        description: The pay statement details model
      payStatementSummary:
        type: object
        properties:
          autoPay:
            type: boolean
            description: .<br />
          beginDate:
            type: object
            description: .<br />
            format: paylocity-date
          checkDate:
            type: object
            description: .<br />
            format: paylocity-date
          checkNumber:
            type: integer
            description: .<br />
          directDepositAmount:
            type: object
            description: .<br />
          endDate:
            type: object
            description: .<br />
            format: paylocity-date
          grossPay:
            type: object
            description: .<br />
          hours:
            type: object
            description: .<br />
          netCheck:
            type: object
            description: .<br />
          netPay:
            type: object
            description: .<br />
          overtimeDollars:
            type: object
            description: .<br />
          overtimeHours:
            type: object
            description: .<br />
          process:
            type: integer
            description: .<br />
          regularDollars:
            type: object
            description: .<br />
          regularHours:
            type: object
            description: .<br />
          transactionNumber:
            type: integer
            description: <br />
          voucherNumber:
            type: integer
            description: .<br />
          workersCompCode:
            type: object
            description: .<br />
          year:
            type: integer
            description: .<br />
        additionalProperties: false
        description: The pay statement summary model
      primaryPayRate:
        type: object
        properties:
          autoPay:
            type: boolean
            description: >-
              If set to *True*, employee will be paid automatically using
              deafultHours. 
          baseRate:
            type: number
            description: Employee base rate, used for Hourly employees. <br  />Decimal (12,2)
          defaultHours:
            type: number
            description: >-
              Employee default hours consistently worked. If autoPayType is set to
              D, employee will be paid hourly base rate for the defaultHours. <br 
              />Decimal (12,2)
          effectiveDate:
            type: string
            description: >-
              The date the employee’s pay rate takes effect. Common formats are
              *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          payFrequency:
            type: string
            description: >-
              Employee current pay frequency. Common values are *A (Annual), B
              (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q
              (Quarterly), W (Weekly)*. <br  />Max length: 5
          payGrade:
            type: string
            description: 'Employee pay grade. Must match Company setup. <br  /> Max length: 10'
          payType:
            type: string
            description: >-
              Employee pay type (rate code). Valid values are *Hourly* or
              *Salary*. <br  />Max length: 10
          ratePer:
            type: string
            description: >-
              Employee base rate frequency used with payType Hourly. Common values
              are *Hour, Week*. Default is Hour. <br  />Max length: 10
          reason:
            type: string
            description: >-
              Primary Pay Rate change reason. Must match Company setup.<br  />Max
              length: 15
          salary:
            type: number
            description: >-
              Employee gross salary per pay period used with payType Salary.<br 
              />Decimal (12,2)
        additionalProperties: false
      stateTax:
        type: object
        properties:
          amount:
            type: object
            description: 'State tax code.<br  /> Max length: 50'
          deductionsAmount:
            type: number
            description: >-
              Box 4(b) on form W4 (year 2020 or later): Deductions amount. <br 
              />Decimal (12,2)
          dependentsAmount:
            type: number
            description: >-
              Box 3 on form W4 (year 2020 or later): Total dependents amount. <br 
              />Decimal (12,2)
          exemptions:
            type: object
            description: State tax exemptions value.<br  />Decimal (12,2)
          exemptions2:
            type: object
            description: State tax exemptions 2 value.<br  />Decimal (12,2)
          filingStatus:
            type: object
            description: >-
              Employee state tax filing status. Common values are *S* (Single),
              *M* (Married).<br  />Max length: 50
          higherRate:
            type: boolean
            description: >-
              Box 2(c) on form W4 (year 2020 or later): Multiple Jobs or Spouse
              Works. <br  />Boolean
          otherIncomeAmount:
            type: number
            description: >-
              Box 4(a) on form W4 (year 2020 or later): Other income amount. <br 
              />Decimal (12,2)
          percentage:
            type: object
            description: State Tax percentage. <br  />Decimal (12,2)
          specialCheckCalc:
            type: object
            description: >-
              Supplemental check calculation code. Common values are *Blocked*
              (Taxes blocked on Supplemental checks), *Supp* (Use supplemental Tax
              Rate-Code). <br  />Max length: 10
          taxCalculationCode:
            type: object
            description: >-
              Tax calculation code. Common values are *F* (Flat), *P*
              (Percentage), *FDFP* (Flat Dollar Amount plus Fixed Percentage).
              <br  />Max length: 10
          taxCode:
            type: object
            description: 'State tax code.<br  /> Max length: 50'
          w4FormYear:
            type: integer
            description: The state W4 form year <br  />Integer
        additionalProperties: false
        description: The State Tax model
      sensitiveData:
        type: object
        properties:
          disability:
            type: object
            additionalProperties: false
            description: Add or update disability data.
          ethnicity:
            type: object
            additionalProperties: false
            description: Add or update ethnicity data.
          gender:
            type: object
            additionalProperties: false
            description: Add or update gender data.
          veteran:
            type: object
            additionalProperties: false
            description: Add or update veteran data.
        additionalProperties: false
        description: The sensitive data model
      stagedEmployee:
        type: object
        properties:
          additionalDirectDeposit:
            maxItems: 4
            type: array
            description: >-
              Add up to 19 direct deposit accounts in addition to the main direct
              deposit account. IMPORTANT: A direct deposit update will remove ALL
              existing main and additional direct deposit information in WebPay
              and replace with information provided on the request. GET API will
              not return direct deposit data.
            items:
              type: object
              additionalProperties: false
              description: The additional direct deposit model
          benefitSetup:
            maxItems: 1
            type: array
            description: >-
              Add setup values used for employee benefits integration, insurance
              plan settings, and ACA reporting.
            items:
              type: object
              additionalProperties: false
              description: The benefit setup model
          birthDate:
            type: object
            description: >-
              Employee birthdate. Common formats include *MM-DD-CCYY*,
              *CCYY-MM-DD*.
            format: paylocity-date
          customBooleanFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of boolean (checkbox) type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customDateFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of the date type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customDropDownFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of the dropdown type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customNumberFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of numeric type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          customTextFields:
            maxItems: 8
            type: array
            description: Up to 8 custom fields of text type value.
            items:
              type: object
              additionalProperties: false
              description: ''
          departmentPosition:
            maxItems: 1
            type: array
            description: >-
              Add home department cost center, position, supervisor, reviewer,
              employment type, EEO class, pay settings, and union information.
            items:
              type: object
              additionalProperties: false
              description: The Department Position model
          disabilityDescription:
            type: object
            description: Indicates if employee has disability status.
          employeeId:
            type: object
            description: >-
              Leave blank to have Paylocity Payroll/HR solution automatically
              assign the next available employee ID.<br  /> Max length: 10
          ethnicity:
            type: object
            description: 'Employee ethnicity.<br  /> Max length: 10'
          federalTax:
            maxItems: 1
            type: array
            description: >-
              Add federal tax amount type (taxCalculationCode), amount or
              percentage, filing status, and exemptions.
            items:
              type: object
              additionalProperties: false
              description: The Federal Tax model
          firstName:
            type: object
            description: 'Employee first name. <br  />Max length: 40'
          fitwExemptReason:
            type: object
            description: >-
              Reason code for FITW exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          futaExemptReason:
            type: object
            description: >-
              Reason code for FUTA exemption. Common values are *501* (5019c)(3)
              Organization), *IC* (Independent Contractor).<br  /> Max length: 30
          gender:
            type: object
            description: >-
              Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
              length: 1
          homeAddress:
            maxItems: 1
            type: array
            description: >-
              Add employee's home address, personal phone numbers, and personal
              email.
            items:
              type: object
              additionalProperties: false
              description: The address model
          isEmployee943:
            type: object
            description: Indicates if employee in agriculture or farming.
          isSmoker:
            type: object
            description: Indicates if employee is a smoker.
          lastName:
            type: object
            description: 'Employee last name. <br  />Max length: 40'
          localTax:
            maxItems: 5
            type: array
            description: >-
              Add local tax code, filing status, and exemptions including PA-PSD
              taxes.
            items:
              type: object
              additionalProperties: false
              description: The Local Tax model
          mainDirectDeposit:
            maxItems: 1
            type: array
            description: >-
              Add the main direct deposit account. After deposits are made to any
              additional direct deposit accounts, the remaining net check is
              deposited in the main direct deposit account. IMPORTANT: A direct
              deposit update will remove ALL existing main and additional direct
              deposit information in WebPay and replace with what is provided on
              the request. GET API will not return direct deposit data.
            items:
              type: object
              additionalProperties: false
              description: The Main Direct Deposit model
          maritalStatus:
            type: object
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          medExemptReason:
            type: object
            description: >-
              Reason code for Medicare exemption. Common values are *501*
              (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max
              length: 30
          middleName:
            type: object
            description: 'Employee middle name.<br  /> Max length: 20'
          nonPrimaryStateTax:
            maxItems: 1
            type: array
            description: >-
              Add non-primary state tax code, amount type (taxCalculationCode),
              amount or percentage, filing status, exemptions, supplemental check
              (specialCheckCalc), and reciprocity code information.
            items:
              type: object
              additionalProperties: false
              description: The Non-Primary State Tax model
          preferredName:
            type: object
            description: 'Employee preferred display name.<br  /> Max length: 20'
          primaryPayRate:
            maxItems: 1
            type: array
            description: Add hourly or salary pay rate, effective date, and pay frequency.
            items:
              type: object
              additionalProperties: false
              description: The Primary Pay Rate model
          primaryStateTax:
            maxItems: 1
            type: array
            description: >-
              Add primary state tax code, amount type (taxCalculationCode), amount
              or percentage, filing status, exemptions, and supplemental check
              (specialCheckCalc) information. Only one primary state is allowed.
            items:
              type: object
              additionalProperties: false
              description: The State Tax model
          priorLastName:
            type: object
            description: 'Prior last name if applicable.<br  />Max length: 40'
          salutation:
            type: object
            description: 'Employee preferred salutation. <br  />Max length: 10'
          sitwExemptReason:
            type: object
            description: >-
              Reason code for SITW exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          ssExemptReason:
            type: object
            description: >-
              Reason code for Social Security exemption. Common values are *SE*
              (Statutory employee), *CR* (clergy/Religious). <br  /> Max length:
              30
          ssn:
            type: object
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          status:
            maxItems: 1
            type: array
            description: >-
              Add employee status, change reason, effective date, and adjusted
              seniority date. Note that companies that are still in Implementation
              cannot hire future employees.
            items:
              type: object
              additionalProperties: false
              description: The employee status model
          suffix:
            type: object
            description: >-
              Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
              length: 30
          suiExemptReason:
            type: object
            description: >-
              Reason code for SUI exemption. Common values are *SE* (Statutory
              employee), *CR* (clergy/Religious). <br  /> Max length: 30
          suiState:
            type: object
            description: >-
              Employee SUI (State Unemployment Insurance) state. <br  />Max
              length: 2
          taxDistributionCode1099R:
            type: object
            description: >-
              Employee 1099R distribution code. Common values are *7* (Normal
              Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
          taxForm:
            type: object
            description: >-
              Employee tax form for reporting income. Valid values are *W2, 1099M,
              1099R*. Default is W2. <br  />Max length: 15
          veteranDescription:
            type: object
            description: Indicates if employee is a veteran.
          webTime:
            type: object
            additionalProperties: false
            description: >-
              Add Web Time badge number and charge rate and synchronize Paylocity
              Payroll/HR solution and Web Time employee data.
          workAddress:
            maxItems: 1
            type: array
            description: >-
              Add employee's work address, phone numbers, and email. Work Location
              drop down field is not included.
            items:
              type: object
              additionalProperties: false
              description: The address model
          workEligibility:
            maxItems: 1
            type: array
            description: Add I-9 work authorization information.
            items:
              type: object
              additionalProperties: false
              description: The Work Eligibility model
        additionalProperties: false
        description: The staged employee model
      trackingNumberResponse:
        type: object
        properties:
          trackingNumber:
            type: string
            description: The unique tracking number
        description: The Tracking Number Response model
      updateEmployee:
        type: object
        properties:
          address1:
            type: string
            description: 'Employee home 1st address line. <br  />Max length: 40'
          address2:
            type: string
            description: 'Employee home 2nd address line. <br  />Max length: 40'
          adjSeniorityDate:
            type: string
            description: >-
              Adjusted seniority date. Common formats are *MM-DD-CCYY,
              CCYY-MM-DD*.
            format: date
          birthDate:
            type: string
            description: Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
            format: date
          city:
            type: string
            description: 'Employee home city. <br  />Max length: 40'
          companyNumber:
            type: string
            description: 'Paylocity assigned company number. <br  /> Max length: 9'
          country:
            type: string
            description: 'Employee country. <br  /> Max length: 30'
          county:
            type: string
            description: 'Employee county.<br  /> Max length: 30'
          disability:
            type: string
            description: Indicates if employee has disability status.
          eligibleForRehire:
            type: boolean
            description: Indicates if employee eligible for rehire.
          employeeId:
            type: string
            description: "The Paylocity Employee ID. This is a unique value per Paylocity Company ID.\r\n**Allowable Values:**\r\n10 char max"
          employeeStatus:
            type: string
            description: >-
              Employee current work status. Common values are *A* (Active), *L*
              (Leave of Absence), *T* (Terminated). <br  />Max length: 20
          empStatusChangeReason:
            type: string
            description: >-
              Employee status change reason. Must match Company setup.<br  />Max
              length: 15
          empStatusEffectiveDate:
            type: string
            description: >-
              Effective date of employee status change, can be in the future.
              Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
          ethnicity:
            type: string
            description: 'Employee ethnicity.<br  /> Max length: 10'
          firstName:
            type: string
            description: 'Employee first name. <br  />Max length: 40'
          homePhone:
            type: string
            description: 'Employee home phone number.  <br  />Max length: 12'
          lastName:
            type: string
            description: 'Employee last name. <br  />Max length: 40'
          maritalStatus:
            type: string
            description: >-
              Employee marital status. Common values *D (Divorced), M (Married), S
              (Single), W (Widowed)*. <br  />Max length: 10
          middleName:
            type: string
            description: 'Employee middle name.<br  /> Max length: 20'
          nickname:
            type: string
            description: 'Employee preferred display name. <br  /> Max length: 20'
          pager:
            type: string
            description: 'Employee work pager number.<br  /> Max length: 20'
          personalEmailAddress:
            type: string
            description: 'Employee personal email address. <br  />Max length: 50'
          personalMobilePhone:
            type: string
            description: 'Employee personal mobile phone number. <br  />Max length: 12'
          priorLastName:
            type: string
            description: 'Prior last name if applicable.<br  />Max length: 40'
          salutation:
            type: string
            description: 'Employee preferred salutation. <br  />Max length: 10'
          sex:
            type: string
            description: >-
              Employee gender. Common values *M* (Male), *F* (Female). <br  />Max
              length: 1
          smoker:
            type: boolean
            description: Indicates if employee is a smoker.
          ssn:
            type: string
            description: >-
              Employee social security number. Leave it blank if valid social
              security number not available. <br  />Max length: 11
          state:
            type: string
            description: 'Employee home state. <br  />Max length: 2'
          suffix:
            type: string
            description: >-
              Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max
              length: 30
          suiExempt:
            type: boolean
            description: Indicates if employee is exempt from state unemployment insurance.
          suiExemptNotes:
            type: string
            description: 'Notes for SUI exempt.<br  /> Max length: 250'
          suiExemptReason:
            type: string
            description: >-
              Reason code for SUI exemption. Common values are *SE* (Statutory
              employee), *CR* (Clergy/Religious). <br  /> Max length: 30
          veteran:
            type: string
            description: Indicates if employee is a veteran.
          workAddress1:
            type: string
            description: 'Employee work 1st address line.<br  /> Max length: 40'
          workAddress2:
            type: string
            description: 'Employee work 2nd address line. <br  /> Max length: 40'
          workCity:
            type: string
            description: 'Employee work city.<br  /> Max length: 40'
          workCountry:
            type: string
            description: 'Employee work country.<br  /> Max length: 30'
          workCounty:
            type: string
            description: 'Employee work county.<br  /> Max length: 30'
          workEmailAddress:
            type: string
            description: 'Employee work email. <br  />Max length: 50'
          workMailStop:
            type: string
            description: 'Employee physical mail box location.<br  /> Max length: 10'
          workMobilePhone:
            type: string
            description: 'Employee work mobile phone number.<br  /> Max length: 12'
          workPager:
            type: string
            description: 'Employee work pager number.<br  /> Max length: 20'
          workPhone:
            type: string
            description: 'Employee work phone number.<br  /> Max length: 12'
          workPhoneExt:
            type: string
            description: 'Employee work phone extension number.<br  /> Max length: 10'
          workState:
            type: string
            description: 'Employee work state.<br  /> Max length: 2'
          workZip:
            type: string
            description: 'Employee work zip code.<br  /> Max length: 10'
          zip:
            type: string
            description: 'Employee home zip code. <br  />Max length: 10'
          benefitSetup:
            type: array
            items:
              $ref: '#/components/schemas/benefitSetup'
          departmentPosition:
            type: array
            items:
              $ref: '#/components/schemas/departmentPosition'
          primaryPayRate:
            type: array
            items:
              $ref: '#/components/schemas/primaryPayRate'
          webTime:
            type: array
            items:
              $ref: '#/components/schemas/webTime'
        additionalProperties: false
      webTime:
        type: object
        properties:
          syncWebTimeRecord:
            type: boolean
            description: UpdateEmployeePreferences.SyncWebTimeRecord
        additionalProperties: false
    securitySchemes:
      Bearer:
        type: apiKey
        description: CC JWT Authorization header using the bearer scheme
        name: Authorization
        in: header
      JWTAuthorization:
        type: http
        description: Paste JWT here.
        scheme: bearer
        bearerFormat: JWT
      paylocity_auth:
        type: oauth2
        flows:
          clientCredentials:
            tokenUrl: https://api.paylocity.com/IdentityServer/connect/token
            scopes:
              WebLinkAPI: Web Link Api
  security:
    - Bearer: []
  x-readme:
    explorer-enabled: true
    proxy-enabled: true
  _id: 65f06151bd97e1001f425c39
  x-original-swagger-version: '2.0'
  tags:
    - name: Punch Import
      description: creates punch import CSV that will be uploaded to FTP server
konfigCliVersion: 1.38.61
