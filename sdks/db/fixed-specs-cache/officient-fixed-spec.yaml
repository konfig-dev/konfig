publishJson:
  company: Officient
  serviceName: false
  sdkName: officient-{language}-sdk
  clientName: Officient
  metaDescription: >-
    Officient offers an intuitive HRIS which helps manage all personnel
    administration through our HR platform & personalized employee
    self-services. Manage payroll, company assets, contracts, days off, fleet,
    performance reviews and all employee data in one HR system. HR deserves
    great software and we're here to provide it.


    We support our customers in transforming HR towards paperless administration
    and automating tedious workforce management tasks in the process. Our goal?
    Transform HR from an administrative, processing role, to a controlling role
    which fuels HR strategy across the organization.
  apiStatusUrls: inherit
  homepage: officient.io
  developerDocumentation: apidocs.officient.io/
  categories:
    - hr
rawSpecString: |
  openapi: 3.1.0
  info:
    title: Officient API
    version: '1.0'
  servers:
    - url: https://api.officient.io
  components:
    securitySchemes:
      sec0:
        type: oauth2
        flows: {}
  security:
    - sec0: []
  paths:
    /1.0/people/list:
      get:
        summary: List people
        description: ''
        operationId: list-people
        parameters:
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            required: true
            schema:
              type: integer
              format: int32
              default: 0
          - name: include_archived
            in: query
            description: Include archived people in response
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": [{\n            \"id\": 264,\n            \"name\": \"Walter White\",\n            \"email\": \"walter@white.com\",\n            \"role_name\": \"Chemist\",\n            \"archived\": 0,\n            \"linked_payroll_provider_external_id\": \"123\",\n      \t\t\t\"payroll_provider\": \"DemoPayroll\",\n      \t\t\t\"linked_integration_alias\": \"DM\"\n        },\n        {\n            \"id\": 263,\n            \"name\": \"Gustavo Fring\",\n            \"email\": null,\n            \"role_name\": \"Investor\",\n            \"archived\": 0,\n            \"linked_payroll_provider_external_id\": \"124\",\n          \t\"payroll_provider\": \"DemoPayroll\",\n      \t\t\t\"linked_integration_alias\": \"DM\"\n        },\n        {\n            \"id\": 262,\n            \"name\": \"Jesse Pinkman\",\n            \"email\": \"jesse@white.com\",\n            \"role_name\": \"Assistant\",\n            \"archived\": 1,\n            \"linked_payroll_provider_external_id\": \"125\",\n          \t\"payroll_provider\": \"\",\n      \t\t\t\"linked_integration_alias\": \"\"\n        }\n    ],\n    \"total_record_count\": 3 \n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 264
                            default: 0
                          name:
                            type: string
                            example: Walter White
                          email:
                            type: string
                            example: walter@white.com
                          role_name:
                            type: string
                            example: Chemist
                          archived:
                            type: integer
                            example: 0
                            default: 0
                          linked_payroll_provider_external_id:
                            type: string
                            example: '123'
                          payroll_provider:
                            type: string
                            example: DemoPayroll
                          linked_integration_alias:
                            type: string
                            example: DM
                    total_record_count:
                      type: integer
                      example: 3
                      default: 0
        deprecated: false
    /1.0/token:
      post:
        summary: Get access token
        description: ''
        operationId: testinput-1
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Authorization code in case of 3 legged oauth flow
                  client_id:
                    type: string
                    description: client_id of your app. Can be found under 'my apps'
                  client_secret:
                    type: string
                    description: client secret of your app. Can be found under 'my apps'
                  grant_type:
                    type: string
                    description: should always be either authorization_code or refresh_token
                  refresh_token:
                    type: string
                    description: optional
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "access_token": "8c649d8be4971bef5eaf53b1484158c74b4ee979",
                          "expires_in": 3600,
                          "token_type": "Bearer",
                          "scope": "admin",
                          "refresh_token": "fed4845d2aacf5ef438b91a319c73190c1480675"
                      }
                schema:
                  type: object
                  properties:
                    access_token:
                      type: string
                      example: 8c649d8be4971bef5eaf53b1484158c74b4ee979
                    expires_in:
                      type: integer
                      example: 3600
                      default: 0
                    token_type:
                      type: string
                      example: Bearer
                    scope:
                      type: string
                      example: admin
                    refresh_token:
                      type: string
                      example: fed4845d2aacf5ef438b91a319c73190c1480675
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        security: []
    /1.0/wages/{person_id}/current:
      get:
        summary: Current wage
        description: Get the current wage details for one person
        operationId: wage-details
        parameters:
          - name: person_id
            in: path
            description: The person you would like to receive wage information on
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "id": 4451960,
                          "start_date": "2017-01-15",
                          "end_date": "2018-01-15",
                          "estimated_monthly_total": 4394,
                          "currency": "EUR",
                          "type": "employee_paid_monthly",
                          "rate": 2750,
                          "created_at": 1588595358,
                          "updated_at": 1588595358,
                          "registration_country_code": "BE",
                          "estimated_monthly_cost": {
                            "base_components": {
                              "base_rate": 2750,
                              "social_contributions": 885,
                              "end_of_year_bonus": 245.83,
                              "retirement_plan": 136.92,
                              "holiday_pay": 226.17,
                              "hospitalization_insurance": 0,
                              "net_allowance": 0,
                              "car": 0
                            },
                            "custom_components": [
                              {
                                "description": "maaltijdcheques",
                                "monthly_value": 149.74
                              }
                            ]
                          },
                          "weekly_time_engagement_minutes": {
                            "monday": 480,
                            "tuesday": 480,
                            "wednesday": 480,
                            "thursday": 480,
                            "friday": 480,
                            "saturday": 0,
                            "sunday": 0
                          },
                          "custom_payroll_data": {
                            "contract_type": "internship"
                          },
                          "termination_reason": "notice_by_employer",
                          "multiple_week_schedule": {
                            "schedule_start_date": "2016-01-15",
                            "weeks": [
                              {
                                "week_nr": 1,
                                "weekly_time_engagement_minutes": {
                                  "monday": 640,
                                  "tuesday": 640,
                                  "wednesday": 456,
                                  "thursday": 456,
                                  "friday": 456,
                                  "saturday": 0,
                                  "sunday": 0
                                }
                              },
                              {
                                "week_nr": 2,
                                "weekly_time_engagement_minutes": {
                                  "monday": 0,
                                  "tuesday": 0,
                                  "wednesday": 456,
                                  "thursday": 456,
                                  "friday": 456,
                                  "saturday": 0,
                                  "sunday": 0
                                }
                              }
                            ]
                          },
                          "contract_index_number": 1  
                        }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 4451960
                          default: 0
                        start_date:
                          type: string
                          example: '2017-01-15'
                        end_date:
                          type: string
                          example: '2018-01-15'
                        estimated_monthly_total:
                          type: integer
                          example: 4394
                          default: 0
                        currency:
                          type: string
                          example: EUR
                        type:
                          type: string
                          example: employee_paid_monthly
                        rate:
                          type: integer
                          example: 2750
                          default: 0
                        created_at:
                          type: integer
                          example: 1588595358
                          default: 0
                        updated_at:
                          type: integer
                          example: 1588595358
                          default: 0
                        registration_country_code:
                          type: string
                          example: BE
                        estimated_monthly_cost:
                          type: object
                          properties:
                            base_components:
                              type: object
                              properties:
                                base_rate:
                                  type: integer
                                  example: 2750
                                  default: 0
                                social_contributions:
                                  type: integer
                                  example: 885
                                  default: 0
                                end_of_year_bonus:
                                  type: number
                                  example: 245.83
                                  default: 0
                                retirement_plan:
                                  type: number
                                  example: 136.92
                                  default: 0
                                holiday_pay:
                                  type: number
                                  example: 226.17
                                  default: 0
                                hospitalization_insurance:
                                  type: integer
                                  example: 0
                                  default: 0
                                net_allowance:
                                  type: integer
                                  example: 0
                                  default: 0
                                car:
                                  type: integer
                                  example: 0
                                  default: 0
                            custom_components:
                              type: array
                              items:
                                type: object
                                properties:
                                  description:
                                    type: string
                                    example: maaltijdcheques
                                  monthly_value:
                                    type: number
                                    example: 149.74
                                    default: 0
                        weekly_time_engagement_minutes:
                          type: object
                          properties:
                            monday:
                              type: integer
                              example: 480
                              default: 0
                            tuesday:
                              type: integer
                              example: 480
                              default: 0
                            wednesday:
                              type: integer
                              example: 480
                              default: 0
                            thursday:
                              type: integer
                              example: 480
                              default: 0
                            friday:
                              type: integer
                              example: 480
                              default: 0
                            saturday:
                              type: integer
                              example: 0
                              default: 0
                            sunday:
                              type: integer
                              example: 0
                              default: 0
                        custom_payroll_data:
                          type: object
                          properties:
                            contract_type:
                              type: string
                              example: internship
                        termination_reason:
                          type: string
                          example: notice_by_employer
                        multiple_week_schedule:
                          type: object
                          properties:
                            schedule_start_date:
                              type: string
                              example: '2016-01-15'
                            weeks:
                              type: array
                              items:
                                type: object
                                properties:
                                  week_nr:
                                    type: integer
                                    example: 1
                                    default: 0
                                  weekly_time_engagement_minutes:
                                    type: object
                                    properties:
                                      monday:
                                        type: integer
                                        example: 640
                                        default: 0
                                      tuesday:
                                        type: integer
                                        example: 640
                                        default: 0
                                      wednesday:
                                        type: integer
                                        example: 456
                                        default: 0
                                      thursday:
                                        type: integer
                                        example: 456
                                        default: 0
                                      friday:
                                        type: integer
                                        example: 456
                                        default: 0
                                      saturday:
                                        type: integer
                                        example: 0
                                        default: 0
                                      sunday:
                                        type: integer
                                        example: 0
                                        default: 0
                        contract_index_number:
                          type: integer
                          example: 1
                          default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/selfservice/invite_link:
      post:
        summary: Self-service invitation
        description: >-
          Generate a secret URL that brings a person straight to the HR
          self-service platform.
        operationId: self-service-invititation
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - person_id
                properties:
                  person_id:
                    type: string
                    description: >-
                      Officient will generate a selfservice invite link for this
                      person
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "secret_url": "https://selfservice.officient.io/login/token/642/2564/765/Gq1vfrX6u4C6DqTDFX6nIA1S0kX7ljLSzCe/"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        secret_url:
                          type: string
                          example: >-
                            https://selfservice.officient.io/login/token/642/2564/765/Gq1vfrX6u4C6DqTDFX6nIA1S0kX7ljLSzCe/
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/{person_id}/history:
      get:
        summary: Wage history
        description: Get the entire wage history for one person
        operationId: wage-history
        parameters:
          - name: person_id
            in: path
            description: The person you need the wage history for
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "id": 234252342,
                            "start_date": "2017-01-15",
                            "end_date": "",
                            "estimated_monthly_total": 4894,
                            "currency": "EUR",
                            "type": "employee_paid_monthly",
                            "rate": 3250,
                            "created_at": 1588595358,
                            "updated_at": 1588595358,
                            "registration_country_code": "BE",
                            "estimated_monthly_cost": {
                              "base_components": {
                                "base_rate": 3250,
                                "social_contributions": 885,
                                "end_of_year_bonus": 245.83,
                                "retirement_plan": 136.92,
                                "holiday_pay": 226.17,
                                "hospitalization_insurance": 0,
                                "net_allowance": 0,
                                "car": 0
                              },
                              "custom_components": [
                                {
                                  "description": "maaltijdcheques",
                                  "monthly_value": 149.74
                                }
                              ]
                            },
                            "weekly_time_engagement_minutes": {
                              "monday": 456,
                              "tuesday": 456,
                              "wednesday": 456,
                              "thursday": 456,
                              "friday": 456,
                              "saturday": 0,
                              "sunday": 0
                            },
                            "custom_payroll_data": {
                              "contract_type": "internship"
                            },
                            "termination_reason": "",
                            "multiple_week_schedule": null
                          },
                          {
                            "id": 23425231,
                            "start_date": "2016-01-15",
                            "end_date": "2017-01-14",
                            "estimated_monthly_total": 4594,
                            "currency": "EUR",
                            "type": "employee_paid_monthly",
                            "rate": 2950,
                            "created_at": 1586003358,
                            "updated_at": 1588595358,
                            "registration_country_code": "BE",
                            "estimated_monthly_cost": {
                              "base_components": {
                                "base_rate": 2950,
                                "social_contributions": 885,
                                "end_of_year_bonus": 245.83,
                                "retirement_plan": 136.92,
                                "holiday_pay": 226.17,
                                "hospitalization_insurance": 0,
                                "net_allowance": 0,
                                "car": 0
                              },
                              "custom_components": [
                                
                              ]
                            },
                            "weekly_time_engagement_minutes": {
                              "monday": 640,
                              "tuesday": 640,
                              "wednesday": 456,
                              "thursday": 456,
                              "friday": 456,
                              "saturday": 0,
                              "sunday": 0
                            },
                            "custom_payroll_data": null,
                            "termination_reason": "end_of_contract",
                            "multiple_week_schedule": {
                              "schedule_start_date": "2016-01-15",
                              "weeks": [
                                {
                                  "week_nr": 1,
                                  "weekly_time_engagement_minutes": {
                                    "monday": 640,
                                    "tuesday": 640,
                                    "wednesday": 456,
                                    "thursday": 456,
                                    "friday": 456,
                                    "saturday": 0,
                                    "sunday": 0
                                  }
                                },
                                {
                                  "week_nr": 2,
                                  "weekly_time_engagement_minutes": {
                                    "monday": 0,
                                    "tuesday": 0,
                                    "wednesday": 456,
                                    "thursday": 456,
                                    "friday": 456,
                                    "saturday": 0,
                                    "sunday": 0
                                  }
                                }
                              ]
                            },
                            "contract_index_number": 1
                          }
                        ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 234252342
                            default: 0
                          start_date:
                            type: string
                            example: '2017-01-15'
                          end_date:
                            type: string
                            example: ''
                          estimated_monthly_total:
                            type: integer
                            example: 4894
                            default: 0
                          currency:
                            type: string
                            example: EUR
                          type:
                            type: string
                            example: employee_paid_monthly
                          rate:
                            type: integer
                            example: 3250
                            default: 0
                          created_at:
                            type: integer
                            example: 1588595358
                            default: 0
                          updated_at:
                            type: integer
                            example: 1588595358
                            default: 0
                          registration_country_code:
                            type: string
                            example: BE
                          estimated_monthly_cost:
                            type: object
                            properties:
                              base_components:
                                type: object
                                properties:
                                  base_rate:
                                    type: integer
                                    example: 3250
                                    default: 0
                                  social_contributions:
                                    type: integer
                                    example: 885
                                    default: 0
                                  end_of_year_bonus:
                                    type: number
                                    example: 245.83
                                    default: 0
                                  retirement_plan:
                                    type: number
                                    example: 136.92
                                    default: 0
                                  holiday_pay:
                                    type: number
                                    example: 226.17
                                    default: 0
                                  hospitalization_insurance:
                                    type: integer
                                    example: 0
                                    default: 0
                                  net_allowance:
                                    type: integer
                                    example: 0
                                    default: 0
                                  car:
                                    type: integer
                                    example: 0
                                    default: 0
                              custom_components:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    description:
                                      type: string
                                      example: maaltijdcheques
                                    monthly_value:
                                      type: number
                                      example: 149.74
                                      default: 0
                          weekly_time_engagement_minutes:
                            type: object
                            properties:
                              monday:
                                type: integer
                                example: 456
                                default: 0
                              tuesday:
                                type: integer
                                example: 456
                                default: 0
                              wednesday:
                                type: integer
                                example: 456
                                default: 0
                              thursday:
                                type: integer
                                example: 456
                                default: 0
                              friday:
                                type: integer
                                example: 456
                                default: 0
                              saturday:
                                type: integer
                                example: 0
                                default: 0
                              sunday:
                                type: integer
                                example: 0
                                default: 0
                          custom_payroll_data:
                            type: object
                            properties:
                              contract_type:
                                type: string
                                example: internship
                          termination_reason:
                            type: string
                            example: ''
                          multiple_week_schedule: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/assets/list:
      get:
        summary: List assets
        description: List all assets
        operationId: asset-list
        parameters:
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            schema:
              type: integer
              format: int32
              default: 0
          - name: person_id
            in: query
            description: view only assets that belong to a specific person
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [{
                                  "id": 38,
                                  "name": "HTC HD2",
                                  "owner": {
                                      "id": 264,
                                      "name": "Randy Marsh"
                                  }
                              },
                              {
                                  "id": 37,
                                  "name": "HP Z Display Z34c",
                                  "owner": {
                                      "id": 41,
                                      "name": "Michiel Bearelle"
                                  }
                              },
                              {
                                  "id": 36,
                                  "name": "Acer Aspire One",
                                  "owner": {
                                      "id": null,
                                      "name": null
                                  }
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 38
                            default: 0
                          name:
                            type: string
                            example: HTC HD2
                          owner:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 264
                                default: 0
                              name:
                                type: string
                                example: Randy Marsh
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/assets/{asset_id}/detail:
      get:
        summary: Asset detail
        description: Get details about one asset
        operationId: asset-detail
        parameters:
          - name: asset_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": 38,
                              "name": "Acer Aspire One",
                              "price": "1000.00",
                              "deleted": 0,
                              "picture": "",
                              "serial_number": "AE1564",
                              "vendor": "Coolblue",
                              "owner": {
                                  "id": 264,
                                  "name": "Randy Marsh",
                                  "avatar": "https://www.gravatar.com/avatar/525ceb06bc8862932d853a033411e3b7?d=404"
                              },
                              "custom_fields": [{
                                  "custom_field_name": "Einddatum",
                                  "custom_field_id": 2,
                                  "value": "",
                                  "value_name": null,
                                  "type": "date"
                              }]
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 38
                          default: 0
                        name:
                          type: string
                          example: Acer Aspire One
                        price:
                          type: string
                          example: '1000.00'
                        deleted:
                          type: integer
                          example: 0
                          default: 0
                        picture:
                          type: string
                          example: ''
                        serial_number:
                          type: string
                          example: AE1564
                        vendor:
                          type: string
                          example: Coolblue
                        owner:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 264
                              default: 0
                            name:
                              type: string
                              example: Randy Marsh
                            avatar:
                              type: string
                              example: >-
                                https://www.gravatar.com/avatar/525ceb06bc8862932d853a033411e3b7?d=404
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties:
                              custom_field_name:
                                type: string
                                example: Einddatum
                              custom_field_id:
                                type: integer
                                example: 2
                                default: 0
                              value:
                                type: string
                                example: ''
                              value_name: {}
                              type:
                                type: string
                                example: date
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/fleet/{vehicle_id}/detail:
      get:
        summary: Vehicle detail
        description: Get details about one vehicle in the fleet
        operationId: vehicle-detail
        parameters:
          - name: vehicle_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": 18,
                              "type": "car",
                              "brand": "Citroen",
                              "model": "Xsara",
                              "fuel": "gas",
                              "plate": "1-NZH-879",
                              "hp": 70,
                              "co2_g_km": 120,
                              "chassis_number": "AEFSF_FSF54546",
                              "color": "yellow",
                              "supplier": "",
                              "contract_type": "",
                              "catalogue_value": "20000",
                              "date_first_registration": "1999-01-15",
                              "specifics": "",
                              "yearly_cost": {
                                  "base": "10000",
                                  "operational": "10000"
                              },
                              "deleted": 0,
                              "owner": {
                                  "id": 38,
                                  "name": "Michael",
                                  "avatar": "https://www.gravatar.com/avatar/d29de674eecaad6bab4c8c4dde00dfde?d=404"
                              },
                              "custom_fields": [{
                                  "custom_field_name": "Lease date",
                                  "custom_field_id": 2,
                                  "value": "",
                                  "value_name": null,
                                  "type": "date"
                              }]
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 18
                          default: 0
                        type:
                          type: string
                          example: car
                        brand:
                          type: string
                          example: Citroen
                        model:
                          type: string
                          example: Xsara
                        fuel:
                          type: string
                          example: gas
                        plate:
                          type: string
                          example: 1-NZH-879
                        hp:
                          type: integer
                          example: 70
                          default: 0
                        co2_g_km:
                          type: integer
                          example: 120
                          default: 0
                        chassis_number:
                          type: string
                          example: AEFSF_FSF54546
                        color:
                          type: string
                          example: yellow
                        supplier:
                          type: string
                          example: ''
                        contract_type:
                          type: string
                          example: ''
                        catalogue_value:
                          type: string
                          example: '20000'
                        date_first_registration:
                          type: string
                          example: '1999-01-15'
                        specifics:
                          type: string
                          example: ''
                        yearly_cost:
                          type: object
                          properties:
                            base:
                              type: string
                              example: '10000'
                            operational:
                              type: string
                              example: '10000'
                        deleted:
                          type: integer
                          example: 0
                          default: 0
                        owner:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 38
                              default: 0
                            name:
                              type: string
                              example: Michael
                            avatar:
                              type: string
                              example: >-
                                https://www.gravatar.com/avatar/d29de674eecaad6bab4c8c4dde00dfde?d=404
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties:
                              custom_field_name:
                                type: string
                                example: Lease date
                              custom_field_id:
                                type: integer
                                example: 2
                                default: 0
                              value:
                                type: string
                                example: ''
                              value_name: {}
                              type:
                                type: string
                                example: date
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/fleet/list:
      get:
        summary: List vehicles
        description: Get a list of all vehicles in the fleet
        operationId: list-vehicles
        parameters:
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            required: true
            schema:
              type: integer
              format: int32
              default: 0
          - name: person_id
            in: query
            description: view only vehicles that belong to a specific person
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [{
                                  "id": 19,
                                  "type": "bicycle",
                                  "brand": "Brompton",
                                  "model": "H-3-R",
                                  "owner": {
                                      "id": 2790,
                                      "name": "Al Gore"
                                  }
                              },
                              {
                                  "id": 18,
                                  "type": "car",
                                  "brand": "Chevy",
                                  "model": "Volt",
                                  "owner": {
                                      "id": 38,
                                      "name": "Nancy Pelosi"
                                  }
                              },
                              {
                                  "id": 17,
                                  "type": "motorbike",
                                  "brand": "BMW",
                                  "model": "F 700 GS",
                                  "owner": {
                                      "id": 265,
                                      "name": "Maarten"
                                  }
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 19
                            default: 0
                          type:
                            type: string
                            example: bicycle
                          brand:
                            type: string
                            example: Brompton
                          model:
                            type: string
                            example: H-3-R
                          owner:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 2790
                                default: 0
                              name:
                                type: string
                                example: Al Gore
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/contracts/list:
      get:
        summary: List contracts
        description: Get a list of all contracts
        operationId: list-contracts
        parameters:
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            required: true
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 1093,
                                  "name": "Arbeidscontract",
                                  "owner": {
                                      "id": 45465,
                                      "name": "Dr. Dre"
                                  }
                              },
                              {
                                  "id": 1092,
                                  "name": "Non disclosure agreement",
                                  "owner": {
                                      "id": 4564,
                                      "name": "John I."
                                  }
                              },
                              {
                                  "id": 1091,
                                  "name": "Letter of Intent",
                                  "owner": {
                                      "id": 45116,
                                      "name": "Jason B."
                                  }
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1093
                            default: 0
                          name:
                            type: string
                            example: Arbeidscontract
                          owner:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 45465
                                default: 0
                              name:
                                type: string
                                example: Dr. Dre
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/contracts/{contract_id}/detail:
      get:
        summary: Contract detail
        description: Get details about one contract
        operationId: contract-detail
        parameters:
          - name: contract_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": 1093,
                              "name": "Arbeidscontract",
                              "owner": {
                                  "id": 20184,
                                  "name": "Dr. Dre",
                                  "avatar": "https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?d=404"
                              },
                              "signatures": [
                                  {
                                      "type": "internal",
                                      "status": "signed",
                                      "signer": {
                                          "type": "user",
                                          "id": 44564,
                                          "name": "Tim Cook"
                                      },
                                      "date_signed": "2014-06-02"
                                  },
                                  {
                                      "type": "employee",
                                      "status": "signed",
                                      "signer": {
                                          "type": "employee",
                                          "id": 45045465,
                                          "name": "Dr. Dre"
                                      },
                                      "date_signed": "2014-06-03"
                                  },
                                  {
                                      "type": "second_internal",
                                      "status": "signed",
                                      "signer": {
                                          "type": "user",
                                          "id": 44565,
                                          "name": "Dr. Phe"
                                      },
                                      "date_signed": "2014-06-04"
                                  }
                              ],
                              "date_created": "2014-06-01",
                              "date_sent": "2014-06-01",
                              "deleted": 0,
                              "custom_fields": [{
                                  "custom_field_name": "Importance",
                                  "custom_field_id": 22,
                                  "value": "152",
                                  "value_name": 'High',
                                  "type": "select_option"
                              }]
                          }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/contracts/{contract_id}/pdf:
      get:
        summary: Contract PDF
        description: Get a PDF download link for any contract
        operationId: contract-pdf
        parameters:
          - name: contract_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "download_url": "https://cloud.document.url/456461/downloadpdf"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        download_url:
                          type: string
                          example: https://cloud.document.url/456461/downloadpdf
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/{year}/{month}:
      get:
        summary: Monthly calendar
        description: >-
          List the time off, overtime & scheduled time for a single person for an
          entire month
        operationId: personal-calendar
        parameters:
          - name: person_id
            in: path
            description: The person you would like to receive calender information on
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: month
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "time_off": [
                                  {
                                      "date": "2018-04-01",
                                      "scheduled_minutes": 0,
                                      "events": []
                                  },
                                  {
                                      "date": "2018-04-02",
                                      "scheduled_minutes": 456,
                                      "events": []
                                  },
                                  {
                                      "date": "2018-04-03",
                                      "scheduled_minutes": 456,
                                      "events": [
                                          {
                                              "id": 123,
                                              "name": "Sick day",
                                              "event_type": "sick_day",
                                              "custom_day_off_type_id": "",
                                              "date": "2018-04-03",
                                              "duration_minutes": 456,
                                              "start_time_minutes" : 540,
                                              "type": "time_off",
                                              "working": 0,
                                              "status": "approved",
                                              "color": ""
                                          }
                                      ]
                                  },
                                  {
                                      "date": "2018-04-04",
                                      "scheduled_minutes": 456,
                                      "events": [
                                          {
                                              "id": 124,
                                              "name": "Overtime",
                                              "event_type": "custom",
                                              "custom_day_off_type_id": "123",
                                              "date": "2018-04-04",
                                              "duration_minutes": 60,
                                              "start_time_minutes" : 780,
                                              "type": "overtime",
                                              "working": 1,
                                              "status": "approved",
                                              "color": "a24689"
                                          },
                                          {
                                              "id": 125,
                                              "name": "Verlof",
                                              "event_type": "custom",
                                              "custom_day_off_type_id": "80",
                                              "date": "2018-04-04",
                                              "duration_minutes": 456,
                                              "start_time_minutes" : 540,
                                              "type": "time_off",
                                              "working": 0,
                                              "status": "approved",
                                              "color": "a24689"
                                          }
                                      ]
                                  },
                                  {
                                      "date": "2018-04-05",
                                      "scheduled_minutes": 456,
                                      "events": [
                                          {
                                              "id": 128,
                                              "name": "Training Day",
                                              "event_type": "education",
                                              "custom_day_off_type_id": "",
                                              "date": "2018-04-05",
                                              "duration_minutes": 456,
                                              "start_time_minutes" : 540,
                                              "type": "time_off",
                                              "working": 1,
                                              "status": "approved",
                                              "color": ""
                                          }
                                      ]
                                  },
                                  {
                                      "date": "2018-04-29",
                                      "scheduled_minutes": 0,
                                      "events": []
                                  },
                                  {
                                      "date": "2018-04-30",
                                      "scheduled_minutes": 456,
                                      "events": []
                                  }
                              ],
                              "company_days_off": [
                                  {
                                      "name": "EASTER_MONDAY",
                                      "date": "2018-04-02"
                                  }
                              ]
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        time_off:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                example: '2018-04-01'
                              scheduled_minutes:
                                type: integer
                                example: 0
                                default: 0
                              events:
                                type: array
                        company_days_off:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: EASTER_MONDAY
                              date:
                                type: string
                                example: '2018-04-02'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/teams/list:
      get:
        summary: List teams
        description: List all teams
        operationId: list-teams
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 4,
                                  "name": "Sales team"
                              },
                              {
                                  "id": 80,
                                  "name": "Development team"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 4
                            default: 0
                          name:
                            type: string
                            example: Sales team
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/add:
      post:
        summary: Add person
        description: Add a new person to Officient
        operationId: add-person
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "80"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '80'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "name": "Joan Lewis",
                  "email": "joan@your.co",
                  "personal_email": "",
                  "phone": ""
                }
          samples-languages:
            - http
    /1.0/calendar/events/types/{year}:
      get:
        summary: Custom event types
        description: >-
          fetch a list of custom event types including time off types, overtime
          types,..
        operationId: event-types
        parameters:
          - name: year
            in: path
            description: the year you want custom event type to be returned for
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 1350,
                                  "name": "Holidays",
                                  "alias": "Holidays",
                                  "active": 1,
                                  "color": "a24689",
                                  "interpretation": "time_off",
                                  "integrations": [
                                      {
                                          "app": "sdworx",
                                          "code": "122"
                                      }
                                  ]
                              },
                              {
                                  "id": 1434,
                                  "name": "Paid holiday",
                                  "alias": "Paid holiday",
                                  "active": 1,
                                  "color": "7986c9",
                                  "interpretation": "time_off",
                                  "integrations": [
                                      {
                                          "app": "acerta",
                                          "code": "192"
                                      }
                                  ]
                              },
                              {
                                  "id": 1390,
                                  "name": "Overtime",
                                  "alias": "Overtime",
                                  "active": 0,
                                  "color": "35b579",
                                  "interpretation": "overtime",
                                  "integrations": [
                                      {
                                          "app": "liantis",
                                          "code": "100"
                                      }
                                  ]
                              }
                            ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1350
                            default: 0
                          name:
                            type: string
                            example: Holidays
                          alias:
                            type: string
                            example: Holidays
                          active:
                            type: integer
                            example: 1
                            default: 0
                          color:
                            type: string
                            example: a24689
                          interpretation:
                            type: string
                            example: time_off
                          integrations:
                            type: array
                            items:
                              type: object
                              properties:
                                app:
                                  type: string
                                  example: sdworx
                                code:
                                  type: string
                                  example: '122'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/events/add:
      post:
        summary: Add event
        description: Add new events to a calender (eg a day off, overtime,..)
        operationId: add-event
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "There is already too much time off planned on 29/12/2018."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: There is already too much time off planned on 29/12/2018.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "type":"custom",
                   "custom_day_off_type_id":"1103",
                   "events":[  
                      {  
                         "date":"2018-12-29",
                         "start_time_minutes":540,
                         "duration_minutes":480
                      }
                   ]
                }
              name: Adding an event with a custom day off type
            - language: http
              code: |-
                {  
                   "type":"sick_day",
                   "custom_day_off_type_id":"1103",
                   "events":[  
                      {  
                         "date":"2018-01-25",
                         "start_time_minutes":540,
                         "duration_minutes":"all_day"
                      },
                      {  
                         "date":"2018-01-25",
                         "start_time_minutes":540,
                         "duration_minutes":"all_day"
                      }
                   ]
                }
              name: Adding 2 sick days
          samples-languages:
            - http
    /1.0/calendar/{person_id}/events/{event_id}:
      delete:
        summary: Delete event
        description: Remove an event from the calender, such as a day off
        operationId: delete-event
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: event_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "No event found for that event_id."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: No event found for that event_id.
        deprecated: false
    /1.0/calendar/{person_id}/{year}/{month}/{day}/work:
      patch:
        summary: Update time worked
        description: >-
          Overwrite the amount of time worked on a certain day (eg for
          timetracking software integrations)
        operationId: update-time-worked
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: month
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: day
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Given date '2018-24-24' doesn't exist."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Given date '2018-24-24' doesn't exist.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"duration_minutes\": \"120\"\n}"
              name: Set time worked on a given day to 2 hours
          samples-languages:
            - http
    /1.0/calendar/{person_id}/{year}/{month}/{day}/work/reset:
      post:
        summary: Reset time worked
        description: >-
          reset the time worked on a given day to the regular work schedule for
          one person
        operationId: reset-time-worked
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: month
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: day
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/{person_id}/detail:
      patch:
        summary: Edit person
        description: ''
        operationId: edit-person
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: >-
                      {"status_code":400,"reason_phrase":"Invalid date found :
                      16/13/1989"}
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: 'Invalid date found : 16/13/1989'
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "name": "Leroy Jenkins",
                  "birthdate": "16/05/1989",
                  "email": "leroy@blizzard.co",
                  "personal_email": "leroy@hotmail.com",
                  "phone": "+44 741 5468 154",
                  "team_id": 840,
                  "place_of_birth": "Londen",
                  "nationality_country_code": "GB",
                  "national_number": "82.424.343.XX",
                  "address_country_code": "BE",
                  "address_line_1": "Kortrijksesteenweg 181",
                  "address_line_2": "",
                  "address_zipcode": "9000",
                  "address_city": "Gent",
                  "address_state": "",
                  "bank_account_iban": "BEXXXXYYYY123",
                  "bank_account_bic": "AREVFRPP",
                  "preferred_language_code": "nl",
                  "gender": "male"
                }
          samples-languages:
            - http
      get:
        summary: Person detail
        description: ''
        operationId: person-detail
        parameters:
          - name: person_id
            in: path
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": {\n        \"id\": 264,\n        \"deleted\": 0,\n        \"name\": \"Walter White\",\n        \"first_name\": \"Walter\",\n        \"last_name\": \"White\",\n        \"created_at\": 1588175657,\n        \"preferred_language_code\": \"nl\",\n        \"email\": \"walter@white.com\",\n        \"personal_email\": \"walter.white@gmail.com\",\n        \"national_number\": \"90.12.12-001.61\",\n        \"social_security_nr\": \"XB-1234321\", \n        \"birthdate\": \"1966-12-31\",\n        \"birthplace\": \"Gent\",\n        \"avatar\": \"https://www.gravatar.com/avatar/525ceb06bc8862932d853a033411e3b7?d=404\",\n        \"linked_payroll_provider\": \"acerta\",\n        \"linked_payroll_employee_id\": \"\",\n        \"linked_payroll_employee_number\": \"\",\n        \"dependent_adults_below_65\": 0,\n        \"dependent_children\": 1,\n        \"dependent_adults_above_65\": 0,\n        \"dependent_disabled_children\": 0,\n        \"dependent_disabled_adults_below_65\": 0,\n        \"dependent_disabled_adults_above_65\": 0,\n        \"spouse_has_income\": false,\n        \"phone\": \"001 477 764 898\",\n        \"civil_state\": \"married\",\n        \"nationality_country_code\": \"US\",\n        \"gender\": \"male\",\n        \"bank_account_iban\": \"DE 0750 8900 0000 0175 7814\",\n        \"bank_account_bic\": \"KREDBEBB\",\n        \"emergency_contact\": {\n            \"name\": \"Skyler White\",\n            \"relation\": \"family\",\n            \"phone\": \"001 475 764 898\"\n        },\n        \"address\": {\n            \"line_1\": \"3828 Piermont Dr\",\n            \"line_2\": \"\",\n            \"zipcode\": \"87112\",\n            \"city\": \"Albuquerque\",\n            \"state\": \"NM\",\n            \"country_code\": \"US\",\n            \"date_last_changed\": \"2020-14-01\"\n        },\n        \"team\": {\n            \"id\": 4,\n            \"name\": \"R&D team\"\n        },\n        \"employment\": {\n            \"first_employment_date\": \"2019-08-12\",\n            \"last_employment_date\": null\n        },      \n        \"current_role\": {\n            \"name\": \"Chemist\",\n            \"start_date\": \"2008-01-15\"\n        },\n        \"current_reports_to\": {\n            \"person_id\": 263,\n            \"person_name\": \"Gustavo Fring\",\n            \"start_date\": \"2009-02-14\"\n        },\n        \"custom_fields\": [{\n            \"custom_field_id\": 109,\n            \"custom_field_name\": \"Allergies\",\n            \"type\": \"email\",\n            \"value\": \"Soy\",\n            \"value_name\": null\n        }],\n        \"name_parts\": {\n\t\t\t\t\t\t\"initials\": \"\",\n\t\t\t\t\t\t\"insertion\": \"\",\n\t\t\t\t\t\t\"last_name_composition\": \"\",\n\t\t\t\t\t\t\"insertion_partner\": \"\",\n\t\t\t\t\t\t\"last_name_partner\": \"\"\n        }\n    }\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 264
                          default: 0
                        deleted:
                          type: integer
                          example: 0
                          default: 0
                        name:
                          type: string
                          example: Walter White
                        first_name:
                          type: string
                          example: Walter
                        last_name:
                          type: string
                          example: White
                        created_at:
                          type: integer
                          example: 1588175657
                          default: 0
                        preferred_language_code:
                          type: string
                          example: nl
                        email:
                          type: string
                          example: walter@white.com
                        personal_email:
                          type: string
                          example: walter.white@gmail.com
                        national_number:
                          type: string
                          example: 90.12.12-001.61
                        social_security_nr:
                          type: string
                          example: XB-1234321
                        birthdate:
                          type: string
                          example: '1966-12-31'
                        birthplace:
                          type: string
                          example: Gent
                        avatar:
                          type: string
                          example: >-
                            https://www.gravatar.com/avatar/525ceb06bc8862932d853a033411e3b7?d=404
                        linked_payroll_provider:
                          type: string
                          example: acerta
                        linked_payroll_employee_id:
                          type: string
                          example: ''
                        linked_payroll_employee_number:
                          type: string
                          example: ''
                        dependent_adults_below_65:
                          type: integer
                          example: 0
                          default: 0
                        dependent_children:
                          type: integer
                          example: 1
                          default: 0
                        dependent_adults_above_65:
                          type: integer
                          example: 0
                          default: 0
                        dependent_disabled_children:
                          type: integer
                          example: 0
                          default: 0
                        dependent_disabled_adults_below_65:
                          type: integer
                          example: 0
                          default: 0
                        dependent_disabled_adults_above_65:
                          type: integer
                          example: 0
                          default: 0
                        spouse_has_income:
                          type: boolean
                          example: false
                          default: true
                        phone:
                          type: string
                          example: 001 477 764 898
                        civil_state:
                          type: string
                          example: married
                        nationality_country_code:
                          type: string
                          example: US
                        gender:
                          type: string
                          example: male
                        bank_account_iban:
                          type: string
                          example: DE 0750 8900 0000 0175 7814
                        bank_account_bic:
                          type: string
                          example: KREDBEBB
                        emergency_contact:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Skyler White
                            relation:
                              type: string
                              example: family
                            phone:
                              type: string
                              example: 001 475 764 898
                        address:
                          type: object
                          properties:
                            line_1:
                              type: string
                              example: 3828 Piermont Dr
                            line_2:
                              type: string
                              example: ''
                            zipcode:
                              type: string
                              example: '87112'
                            city:
                              type: string
                              example: Albuquerque
                            state:
                              type: string
                              example: NM
                            country_code:
                              type: string
                              example: US
                            date_last_changed:
                              type: string
                              example: '2020-14-01'
                        team:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 4
                              default: 0
                            name:
                              type: string
                              example: R&D team
                        employment:
                          type: object
                          properties:
                            first_employment_date:
                              type: string
                              example: '2019-08-12'
                            last_employment_date: {}
                        current_role:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Chemist
                            start_date:
                              type: string
                              example: '2008-01-15'
                        current_reports_to:
                          type: object
                          properties:
                            person_id:
                              type: integer
                              example: 263
                              default: 0
                            person_name:
                              type: string
                              example: Gustavo Fring
                            start_date:
                              type: string
                              example: '2009-02-14'
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties:
                              custom_field_id:
                                type: integer
                                example: 109
                                default: 0
                              custom_field_name:
                                type: string
                                example: Allergies
                              type:
                                type: string
                                example: email
                              value:
                                type: string
                                example: Soy
                              value_name: {}
                        name_parts:
                          type: object
                          properties:
                            initials:
                              type: string
                              example: ''
                            insertion:
                              type: string
                              example: ''
                            last_name_composition:
                              type: string
                              example: ''
                            insertion_partner:
                              type: string
                              example: ''
                            last_name_partner:
                              type: string
                              example: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/documents/{object_type}/{object_id}/list:
      get:
        summary: List documents
        description: This API call lists up all documents related to a specific object
        operationId: list-documents
        parameters:
          - name: object_type
            in: path
            description: 'pick one: employee, asset, car'
            schema:
              type: string
            required: true
          - name: object_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 45262,
                                  "filename": "scan_license.jpg",
                                  "filesize_bytes": 10650,
                                  "document_type": "Drivers licenses",
                                  "date_uploaded": "2019-01-06",
                                  "visible_in_selfservice": 0,
                              },
                              {
                                  "id": 45261,
                                  "filename": "Report ABC.pdf",
                                  "filesize_bytes": 16534,
                                  "document_type": "Attesten",
                                  "visible_in_selfservice": 1
                              }
                          ]
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/documents/{file_id}/download:
      get:
        summary: Download document
        description: This API call returns a download url for a document
        operationId: download-document
        parameters:
          - name: file_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "download_url": "https://sample-url.com"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        download_url:
                          type: string
                          example: https://sample-url.com
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/documents/{object_type}/{object_id}/add:
      post:
        summary: Upload document
        description: ''
        operationId: upload-document
        parameters:
          - name: object_type
            in: path
            description: 'pick one: employee, asset, car'
            schema:
              type: string
            required: true
          - name: object_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "45275"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '45275'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "The filename should contain an extension."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: The filename should contain an extension.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "document_base64":"dGVzdA==",
                   "document_type":"Passport",
                   "filename":"passport.txt",
                   "visible_in_selfservice": 1
                }
          samples-languages:
            - http
    /1.0/webhooks/add:
      post:
        summary: Add webhook
        description: use this API to subscribe to notifications
        operationId: add-webhook
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "7"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '7'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "target_url":"https://hooks.zapier.com/<unique_path>",
                   "event":"person_added"
                }
          samples-languages:
            - http
    /1.0/webhooks/{webhook_id}:
      delete:
        summary: Delete webhook
        description: Use this API to unsubscribe from notifcations
        operationId: delete-webhook
        parameters:
          - name: webhook_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/webhooks/list:
      get:
        summary: List webhooks
        description: View currently active notifications
        operationId: list-webhooks
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 3,
                                  "event": "person_added",
                                  "target_url": "https://hooks.zapier.com/<unique_path>"
                              },
                              {
                                  "id": 7,
                                  "event": "person_deleted",
                                  "target_url": "https://hooks.zapier.com/<unique_path>"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3
                            default: 0
                          event:
                            type: string
                            example: person_added
                          target_url:
                            type: string
                            example: https://hooks.zapier.com/<unique_path>
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/account:
      get:
        summary: Your account
        description: This API will reveal information about your own account
        operationId: your-account
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "company_id": 60002,
                              "company_name": "YourCompanyName",
                              "subdomain": "yoursubdomain"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        company_id:
                          type: integer
                          example: 60002
                          default: 0
                        company_name:
                          type: string
                          example: YourCompanyName
                        subdomain:
                          type: string
                          example: yoursubdomain
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/contracts/add:
      post:
        summary: Add contract
        description: ''
        operationId: add-contract
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "11491"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '11491'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Template for contract not found"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Template for contract not found
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "person_id":216570,
                   "file_type":"pdf",
                   "contract_name":"Freelance contract",
                   "template_id":"",
                   "pdf_base64":"JVBERi0xLjMNCiX....FT0YNCg==",

                }
          samples-languages:
            - http
    /1.0/contracts/signature/request:
      post:
        summary: Request contract signature
        description: This API sends out an email invite requesting to sign a contract
        operationId: request-contract-signature
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"success":1}'
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {  
                         "status_code":400,
                         "reason_phrase":"Officient does not have an email address on file for this person"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: >-
                        Officient does not have an email address on file for this
                        person
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |
                {  
                   "contract_id":11490,
                   "optional_message":"Test"
                }
          samples-languages:
            - http
    /1.0/calendar/{person_id}/events/types/{year}/limits:
      get:
        summary: Event type limits
        description: >-
          This API can tell how many days off a certain person has in a certain
          year
        operationId: event-type-limits
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 3118,
                                  "name": "Official holidays",
                                  "limitation": "limit_in_days",
                                  "max_yearly_amount_days": 10,
                                  "max_yearly_amount_minutes": 0,
                                  "approval_needed": 1,
                                  "allowed_selfservice": 1
                              },
                              {
                                  "id": 3193,
                                  "name": "Time off",
                                  "limitation": "limit_in_minutes",
                                  "max_yearly_amount_days": 0,
                                  "max_yearly_amount_minutes": 8424,
                                  "approval_needed": 1,
                                  "allowed_selfservice": 1
                              },
                              {
                                  "id": 3183,
                                  "name": "Study days",
                                  "limitation": "unlimited",
                                  "max_yearly_amount_days": 0,
                                  "max_yearly_amount_minutes": 0,
                                  "approval_needed": 1,
                                  "allowed_selfservice": 1
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3118
                            default: 0
                          name:
                            type: string
                            example: Official holidays
                          limitation:
                            type: string
                            example: limit_in_days
                          max_yearly_amount_days:
                            type: integer
                            example: 10
                            default: 0
                          max_yearly_amount_minutes:
                            type: integer
                            example: 0
                            default: 0
                          approval_needed:
                            type: integer
                            example: 1
                            default: 0
                          allowed_selfservice:
                            type: integer
                            example: 1
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/events/types/{year}/limits/{type_id}/set:
      post:
        summary: Set event type limit
        description: This API can update the limitations for a specific event type
        operationId: set-event-type-limit
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: type_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "This exception is automatically calculated by your payroll provider. It cannot be changed. "
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: >-
                        This exception is automatically calculated by your payroll
                        provider. It cannot be changed. 
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "limitation":"limit_in_days",
                   "max_yearly_amount_days":5
                }
              name: limit_in_days
            - language: http
              code: |-
                { 
                    "limitation": "unlimited" 
                }
              name: unlimited
            - language: http
              code: |-
                { 
                   "limitation": "limit_in_minutes",
                   "max_yearly_amount_minutes": 500
                }
              name: limit_in_minutes
            - language: http
              code: |-
                { 
                   "start_date": "01/01/2023",
                   "starting_amount_minutes": 1200
                }
              name: leave_accrual
          samples-languages:
            - http
    /1.0/people/search:
      get:
        summary: Search people
        description: search people by name, email or national number
        operationId: search-people
        parameters:
          - name: name
            in: query
            description: eg John Doe
            schema:
              type: string
          - name: email
            in: query
            description: eg john@doe.net
            schema:
              type: string
          - name: national_number
            in: query
            description: eg 82146126684
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "id": 216742,
                              "deleted": 0,
                              "name": "John Doe",
                              "national_number": "82146126684",
                              "email": "john@doe.net",
                              "matched_on": "national_number"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 216742
                        default: 0
                      deleted:
                        type: integer
                        example: 0
                        default: 0
                      name:
                        type: string
                        example: John Doe
                      national_number:
                        type: string
                        example: '82146126684'
                      email:
                        type: string
                        example: john@doe.net
                      matched_on:
                        type: string
                        example: national_number
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/{year}/work/bulk:
      patch:
        summary: Update time worked in bulk
        description: >-
          Overwrite the amount of time worked for a set of days in bulk (eg for
          timetracking software integrations)
        operationId: update-time-worked-bulk
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1,
                          "failed": [  ]
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        success:
                          type: integer
                          example: 1
                          default: 0
                        failed:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                example: '2019-03-13'
                              reason:
                                type: string
                                example: >-
                                  No contract is active on 13/03/2019 for this
                                  person. A dynamic schedule can only be edited
                                  when a contract is active.
                    - type: object
                      properties:
                        success:
                          type: integer
                          example: 1
                          default: 0
                        failed:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Given date '2018-24-24' doesn't exist."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Given date '2018-24-24' doesn't exist.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "[\n\t{\n\t\t\"duration_minutes\": 456,\n\t\t\"date\": \"2019-03-13\"\n\t},\n\t{\n\t\t\"duration_minutes\": 240,\n\t\t\"date\": \"2019-03-14\"\n\t}\n]"
              name: Set worked time for multiple days
          samples-languages:
            - http
    /1.0/people/{person_id}/manager:
      put:
        summary: Update manager
        description: Who reports to who?
        operationId: update-manager
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "The specified new manager does not exist or you do not have access to this person"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: >-
                        The specified new manager does not exist or you do not
                        have access to this person
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "manager_person_id": "100"
                }
              name: JSON
          samples-languages:
            - http
      get:
        summary: Person manager
        description: ''
        operationId: person-manager
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "person_id": 36,
                              "person_name": "Josiane Hartmann",
                              "start_date": "2005-07-06"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        person_id:
                          type: integer
                          example: 36
                          default: 0
                        person_name:
                          type: string
                          example: Josiane Hartmann
                        start_date:
                          type: string
                          example: '2005-07-06'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Invalid employee id"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Employee not found or you have no access.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Invalid employee id
        deprecated: false
    /1.0/calendar/{person_id}/{year}/{month}/{day}/events/set:
      put:
        summary: Overwrite event
        description: >-
          Create a new event or overwrite an existing one in a personal calender
          (eg a day off, overtime,..)
        operationId: overwrite-event
        parameters:
          - name: person_id
            in: path
            schema:
              type: string
            required: true
          - name: year
            in: path
            schema:
              type: string
            required: true
          - name: month
            in: path
            schema:
              type: string
            required: true
          - name: day
            in: path
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "success":1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "type":"custom",
                  "custom_day_off_type_id":"1938",
                  "start_time_minutes":540,
                  "duration_minutes":150
                }
          samples-languages:
            - http
    /1.0/calendar/{person_id}/{year}/{month}/{day}:
      get:
        summary: Daily calendar
        description: >-
          List the time off, overtime & scheduled time for a single person for a
          single day
        operationId: daily-calendar
        parameters:
          - name: person_id
            in: path
            description: The person you would like to receive calender information on
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: month
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: day
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": {\n        \"time_off\": [\n            {\n                \"date\": \"2018-04-03\",\n                \"scheduled_minutes\": 456,\n                \"events\": [\n                    {\n                        \"id\": 123,\n                        \"name\": \"Sick day\",\n                        \"event_type\": \"sick_day\",\n                        \"custom_day_off_type_id\": \"\",\n                        \"date\": \"2018-04-03\",\n                        \"duration_minutes\": 456,\n                        \"start_time_minutes\" : 540,\n                        \"type\": \"time_off\",\n                      \t\"working\": 0,\n                        \"status\": \"approved\",\n                        \"color\": \"\"\n                    }\n                ]\n            }\n        ],\n        \"company_days_off\": [   ]\n    }\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        time_off:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                example: '2018-04-03'
                              scheduled_minutes:
                                type: integer
                                example: 456
                                default: 0
                              events:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 123
                                      default: 0
                                    name:
                                      type: string
                                      example: Sick day
                                    event_type:
                                      type: string
                                      example: sick_day
                                    custom_day_off_type_id:
                                      type: string
                                      example: ''
                                    date:
                                      type: string
                                      example: '2018-04-03'
                                    duration_minutes:
                                      type: integer
                                      example: 456
                                      default: 0
                                    start_time_minutes:
                                      type: integer
                                      example: 540
                                      default: 0
                                    type:
                                      type: string
                                      example: time_off
                                    working:
                                      type: integer
                                      example: 0
                                      default: 0
                                    status:
                                      type: string
                                      example: approved
                                    color:
                                      type: string
                                      example: ''
                        company_days_off:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/{person_id}/role:
      put:
        summary: Update role
        description: Set the function description for each person
        operationId: update-role
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "This person is already performing the given role"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: This person is already performing the given role
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"new_role\": \"Team manager\",\n\t\"start_date\": \"2015-02-01\"\n}"
              name: JSON
          samples-languages:
            - http
    /1.0/teams/{team_id}:
      patch:
        summary: Edit team
        description: ''
        operationId: update-team
        parameters:
          - name: team_id
            in: path
            description: The ID of the team you'd like to update
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "status_code": 400,
                         "reason_phrase": "Team with id '10' not found"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Team with id '10' not found
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "name": "new_team_name"
                }
          samples-languages:
            - http
    /1.0/teams/add:
      post:
        summary: Add team
        description: ''
        operationId: create-team
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "success": 1, 
                        "id": 123
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
                    id:
                      type: integer
                      example: 123
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "status_code": 400,
                         "reason_phrase": "Name should not be empty"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Name should not be empty
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "name": "your_team_name"
                }
          samples-languages:
            - http
    /1.0/assets/types/list:
      get:
        summary: List custom asset types
        description: ''
        operationId: list-event-types
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 15863,
                                  "name": "Acer Aspire One",
                                  "price": "1000.00",
                                  "url": "",
                                  "description": ""
                              },
                              {
                                  "id": 15864,
                                  "name": "Macbook Pro 13'",
                                  "price": "1799.00",
                                  "url": "",
                                  "description": ""
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 15863
                            default: 0
                          name:
                            type: string
                            example: Acer Aspire One
                          price:
                            type: string
                            example: '1000.00'
                          url:
                            type: string
                            example: ''
                          description:
                            type: string
                            example: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/assets/types/add:
      post:
        summary: Add custom asset type
        description: ''
        operationId: add-event-type
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "15869"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '15869'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Name should not be empty."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: An asset type with this name already exists.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Name should not be empty.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                  "name":"Keycard",
                  "price":10.5,
                  "url":"http://keycards.xyz/"
                }
          samples-languages:
            - http
    /1.0/assets/types/{asset_type_id}:
      delete:
        summary: Delete custom asset type
        description: ''
        operationId: delete-event-type
        parameters:
          - name: asset_type_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
        deprecated: false
    /1.0/assets/add:
      post:
        summary: Add asset
        description: ''
        operationId: add-asset
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "56"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '56'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "asset_type_id should not be empty"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: asset_type_id should not be empty
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"owner_id\": 21001,\n\t\"asset_type_id\": 15863\n}"
          samples-languages:
            - http
    /1.0/assets/{asset_id}:
      patch:
        summary: Edit asset
        description: ''
        operationId: edit-asset
        parameters:
          - name: asset_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Employee not found or you have no access."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Asset not found or you have no access.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Employee not found or you have no access.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"owner_id\": 21001,\n\t\"price\": 1899,\n\t\"serial_number\": \"\",\n\t\"vendor\": \"\"\n}"
          samples-languages:
            - http
      delete:
        summary: Delete asset
        description: ''
        operationId: delete-asset
        parameters:
          - name: asset_id
            in: path
            description: The id of the asset that will be deleted
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/fleet/add:
      post:
        summary: Add vehicle
        description: ''
        operationId: add-vehicle
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": "29"
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '29'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Type must be either car, bike or bicycle."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            The fields 'type', 'brand' and 'model' shouldn't be
                            empty.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Type must be either car, bike or bicycle.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"type\": \"car\",\n\t\"brand\": \"Audi\",\n\t\"model\": \"A6\",\n\t\"plate\": \"1-ABC-123\",\n\t\"fuel\": \"electric\"\n}"
          samples-languages:
            - http
    /1.0/fleet/{vehicle_id}:
      patch:
        summary: Edit vehicle
        description: ''
        operationId: edit-vehicle
        parameters:
          - name: vehicle_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Employee not found or you have no access."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Vehicle not found or you have no access.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            'fuel' should either be 'gas', 'diesel', 'electric',
                            'fuel_cells', 'natural_gas' or ''
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            'contract_type' should either be 'buy', 'hire',
                            'op_lease', 'fin_lease' or ''
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Employee not found or you have no access.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"owner_id\": 21001,\n\t\"brand\": \"Audi\",\n\t\"model\": \"A7\",\n\t\"fuel\": \"gas\",\n\t\"plate\": \"1-ABC-123\",\n\t\"hp\": 335,\n\t\"co2_g_km\": 117,\n\t\"chassis_number\": \"123456789\",\n\t\"color\": \"black\",\n\t\"specifics\": \"\",\n\t\"supplier\": \"Audi\",\n\t\"contract_type\": \"op_lease\",\n\t\"yearly_cost_base\": \"14000\",\n\t\"yearly_cost_operational\": \"0\",\n\t\"catalogue_value\": \"67000\"\n}"
          samples-languages:
            - http
    /1.0/calendar/{person_id}/{year}:
      get:
        summary: Yearly calendar
        description: >-
          List the time off, overtime & scheduled time for a single person for an
          entire year
        operationId: yearly-calendar
        parameters:
          - name: person_id
            in: path
            description: The person you would like to receive calender information on
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: filter
            in: query
            description: >-
              can be either 'all' or 'days_with_events' to return only days
              containing events
            schema:
              type: string
              default: all
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": {\n        \"time_off\": [\n            {\n                \"date\": \"2018-04-01\",\n                \"scheduled_minutes\": 0,\n                \"events\": []\n            },\n            {\n                \"date\": \"2018-04-02\",\n                \"scheduled_minutes\": 456,\n                \"events\": []\n            },\n            {\n                \"date\": \"2018-04-03\",\n                \"scheduled_minutes\": 456,\n                \"events\": [\n                    {\n                        \"id\": 123,\n                        \"name\": \"Sick day\",\n                        \"event_type\": \"sick_day\",\n                        \"custom_day_off_type_id\": \"\",\n                        \"date\": \"2018-04-03\",\n                        \"duration_minutes\": 456,\n                        \"start_time_minutes\" : 540,\n                        \"type\": \"time_off\",\n                        \"working\": 0,\n                        \"status\": \"approved\",\n                        \"color\": \"\"\n                    }\n                ]\n            },\n            {\n                \"date\": \"2018-04-04\",\n                \"scheduled_minutes\": 456,\n                \"events\": [\n                    {\n                        \"id\": 124,\n                        \"name\": \"Overtime\",\n                        \"event_type\": \"custom\",\n                        \"custom_day_off_type_id\": \"123\",\n                        \"date\": \"2018-04-04\",\n                        \"duration_minutes\": 60,\n                        \"start_time_minutes\" : 780,\n                        \"type\": \"overtime\",\n                        \"working\": 1,\n                        \"status\": \"approved\",\n                        \"color\": \"a24689\"\n                    },\n                    {\n                        \"id\": 125,\n                        \"name\": \"Verlof\",\n                        \"event_type\": \"custom\",\n                        \"custom_day_off_type_id\": \"80\",\n                        \"date\": \"2018-04-04\",\n                        \"duration_minutes\": 456,\n                        \"start_time_minutes\" : 540,\n                        \"type\": \"time_off\",\n                        \"working\": 0,\n                        \"status\": \"approved\",\n                        \"color\": \"a24689\"\n                    }\n                ]\n            },\n            {\n                \"date\": \"2018-04-05\",\n                \"scheduled_minutes\": 456,\n                \"events\": [\n                    {\n                        \"id\": 128,\n                        \"name\": \"Training Day\",\n                        \"event_type\": \"education\",\n                        \"custom_day_off_type_id\": \"\",\n                        \"date\": \"2018-04-05\",\n                        \"duration_minutes\": 456,\n                        \"start_time_minutes\" : 540,\n                        \"type\": \"time_off\",\n                      \t\"working\": 1,\n                        \"status\": \"approved\",\n                        \"color\": \"\"\n                    }\n                ]\n            },\n            {\n                \"date\": \"2018-04-29\",\n                \"scheduled_minutes\": 0,\n                \"events\": []\n            },\n            {\n                \"date\": \"2018-04-30\",\n                \"scheduled_minutes\": 456,\n                \"events\": []\n            }\n        ],\n        \"company_days_off\": [\n            {\n                \"name\": \"EASTER_MONDAY\",\n                \"date\": \"2018-04-02\"\n            }\n        ]\n    }\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        time_off:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                example: '2018-04-01'
                              scheduled_minutes:
                                type: integer
                                example: 0
                                default: 0
                              events:
                                type: array
                        company_days_off:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: EASTER_MONDAY
                              date:
                                type: string
                                example: '2018-04-02'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/requests/list:
      get:
        summary: List calendar requests
        description: ''
        operationId: list-days-off-requests
        parameters:
          - name: page
            in: query
            schema:
              type: string
              default: '0'
          - name: status
            in: query
            description: Can be either "all", "pending" or "closed"
            schema:
              type: string
              default: all
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": [\n        {\n            \"id\": 56,\n            \"status\": \"pending\",\n          \t\"requester\": [\n                \"id\": 264,\n              \t\"name\": \"Walter White\"\n            ]\n        },\n        {\n            \"id\": 55,\n            \"status\": \"closed\",\n          \t\"requester\": [\n                \"id\": 263,\n              \t\"name\": \"Gustavo Fring\"\n            ]\n        }\n    ]\n}"
        deprecated: false
    /1.0/calendar/requests/{request_id}/detail:
      get:
        summary: Calendar request detail
        description: ''
        operationId: calendar-request-detail
        parameters:
          - name: request_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": {\n        \"id\": 51,\n        \"status\": \"pending\",\n        \"requester\": [\n            \"id\": 21001,\n            \"name\": \"Walter\"\n        ],\n        \"events\": [\n            {\n                \"id\": 174,\n                \"date\": \"2019-07-16\",\n                \"start_time_minutes\": 540,\n                \"duration_minutes\": 456,\n                \"name\": \"Overtime\",\n                \"color\": \"4ecdc4\",\n              \t\"outcome\": \"pending\"\n            },\n          \t{\n                \"id\": 173,\n                \"date\": \"2019-07-15\",\n                \"start_minutes\": 540,\n                \"duration_minutes\": 456,\n                \"name\": \"Overtime\",\n                \"color\": \"4ecdc4\",\n              \t\"outcome\": \"accepted\"\n            },\n          \t{\n                \"id\": 172,\n                \"date\": \"2019-07-14\",\n                \"start_minutes\": 540,\n                \"duration_minutes\": 456,\n                \"name\": \"Overtime\",\n                \"color\": \"4ecdc4\",\n              \t\"outcome\": \"declined\"\n            }\n        ]\n    }\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Request not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Request not found or you have no access.
        deprecated: false
    /1.0/custom_fields/{custom_field_id}/{object_type}/{object_id}:
      patch:
        summary: Edit custom field value
        description: >-
          Update the custom field value for a specific object (either a person,
          car, asset, contract,..)
        operationId: edit-custom-field-value
        parameters:
          - name: custom_field_id
            in: path
            description: Id of the custom field
            schema:
              type: integer
              format: int32
            required: true
          - name: object_type
            in: path
            description: >-
              type of object to be edited. It can be: employee, asset, car,
              contract, software_license, training_participant, training
            schema:
              type: string
            required: true
          - name: object_id
            in: path
            description: ID of the object to be edited
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "This custom field is an integer, and the given value was not an integer."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: >-
                        This custom field is an integer, and the given value was
                        not an integer.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {
                  "value": "xyz"
                }
          samples-languages:
            - http
    /1.0/custom_fields/list:
      get:
        summary: List custom fields
        description: List all custom fields in a given account
        operationId: list-custom-fields
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                         "data":[ 
                            { 
                               "id":1,
                               "name":"Allergies",
                               "object_type":"employee",
                               "type":"string",
                               "employee_visibility":"visible_and_editable"
                            },
                            { 
                               "id":4,
                               "name":"Education level",
                               "object_type":"employee",
                               "type":"select_option",
                               "employee_visibility":"visible" 
                            },
                            { 
                               "id":3,
                               "name":"Insurance number",
                               "object_type":"employee",
                               "type":"int",
                               "employee_visibility":"none" 
                            },
                            { 
                               "id":6,
                               "name":"Expiry date",
                               "object_type":"asset",
                               "type":"date",
                               "employee_visibility":"none"
                            },
                            { 
                               "id":9,
                               "name":"Type",
                               "object_type":"asset",
                               "type":"select_option",
                               "employee_visibility":"none" 
                            },
                            { 
                               "id":8,
                               "name":"Number card",
                               "object_type":"asset",
                               "type":"int",
                               "employee_visibility":"none" 
                            },
                            { 
                               "id":5,
                               "name":"Total price",
                               "object_type":"software_license",
                               "type":"money",
                               "employee_visibility":"none" 
                            }
                         ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            default: 0
                          name:
                            type: string
                            example: Allergies
                          object_type:
                            type: string
                            example: employee
                          type:
                            type: string
                            example: string
                          employee_visibility:
                            type: string
                            example: visible_and_editable
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/{person_id}/photo:
      put:
        summary: Upload avatar
        description: upload a photo of this person
        operationId: upload-avatar
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "success":1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                {  
                   "photo_base64":"dGVzdA==" 
                }
          samples-languages:
            - http
    /1.0/documents/{file_id}:
      delete:
        summary: Delete document
        description: ''
        operationId: delete-document
        parameters:
          - name: file_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/one_off/components/{person_id}/options/list:
      get:
        summary: List available components
        description: >-
          Fetches a list of available one-off wage components (eg bonus, expense
          compensation,..) for a specific person.
        operationId: list-available-components
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "available_types": [
                              {
                                  "id": 35,
                                  "groupname": "bonus",
                                  "description": "Commissieloon",
                                  "code": "3110",
                                  "linked_payroll_provider": "acerta",
                                  "input_type": "total_value",
                                  "default_value_hint": null
                              }, 
                              {
                                  "id": 57,
                                  "groupname": "expenses",
                                  "description": "Bureaukosten (forfaitair)",
                                  "code": "5084",
                                  "linked_payroll_provider": "securex",
                                  "input_type": "total_value",
                                  "default_value_hint": null
                              }, 
                              {
                                  "id": 39,
                                  "groupname": "expenses",
                                  "description": "Terugbetaling onkosten",
                                  "code": "5000",
                                  "linked_payroll_provider": "prisma/besox",
                                  "input_type": "total_value",
                                  "default_value_hint": null
                              },
                              {
                                  "id": 41,
                                  "groupname": "expenses",
                                  "description": "Terugbetaling onkosten / dag",
                                  "code": "5003",
                                  "linked_payroll_provider": "sdworx",
                                  "input_type": "unity_and_days",
                                  "default_value_hint": null
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    available_types:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 35
                            default: 0
                          groupname:
                            type: string
                            example: bonus
                          description:
                            type: string
                            example: Commissieloon
                          code:
                            type: string
                            example: '3110'
                          linked_payroll_provider:
                            type: string
                            example: acerta
                          input_type:
                            type: string
                            example: total_value
                          default_value_hint: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/one_off/components/{person_id}/{year}/{month}/list:
      get:
        summary: Components by person by month
        description: >-
          Fetches the one-off wage components that are granted to a person on a
          specific month
        operationId: components-by-person-by-month
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: month
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "components": [
                              {
                                  "id": 13,
                                  "description": "Onkosten buitenland / dag",
                                  "code": "5071",
                                  "input_type": "unity_and_days",
                                  "type_id": 54,
                                  "estimate_total": 60,
                                  "parts": {
                                      "unity": "20.0000",
                                      "days": "3.00"
                                  },
                                  "custom_payroll_data": null
                              },
                              {
                                  "id": 14,
                                  "description": "Commissieloon",
                                  "code": "3110",
                                  "input_type": "total_value",
                                  "type_id": 35,
                                  "estimate_total": 33,
                                  "parts": {
                                      "total_value": "33.00"
                                  },
                                  "custom_payroll_data": null
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    components:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 13
                            default: 0
                          description:
                            type: string
                            example: Onkosten buitenland / dag
                          code:
                            type: string
                            example: '5071'
                          input_type:
                            type: string
                            example: unity_and_days
                          type_id:
                            type: integer
                            example: 54
                            default: 0
                          estimate_total:
                            type: integer
                            example: 60
                            default: 0
                          parts:
                            type: object
                            properties:
                              unity:
                                type: string
                                example: '20.0000'
                              days:
                                type: string
                                example: '3.00'
                          custom_payroll_data: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/one_off/components/add:
      post:
        summary: Grant one-off wage component
        description: >-
          Grants a one-off wage components for a specific person, in a specific
          month
        operationId: grant-one-off-wage-component
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                // for types with input type unity_and_days
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "unity": "21.0000",
                                "days": "5.00"
                            }
                } 
              name: types with input type unity_and_days
            - language: http
              code: |-
                // for types with input type unity_and_hours
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "unity": "21.0000",
                                "hours": "5.00"
                            }
                } 
              name: types with input type unity_and_hours
            - language: http
              code: |-
                // for types with input type unity_and_kms
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "unity": "21.0000",
                                "kms": "5.00"
                            }
                } 
              name: types with input type unity_and_kms
            - language: http
              code: |-
                // for types with input type total_value
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "total_value": "5.00"
                            }
                } 
              name: types with input type total_value
            - language: http
              code: |-
                // for types with input type unity_and_amount
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "unity": "21.0000",
                                "amount": "5.00"
                            }
                } 
              name: types with input type unity_and_amount
            - language: http
              code: |-
                // for types with input type kms
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "kms": "5.00"
                            }
                } 
              name: types with input type kms
            - language: http
              code: |-
                // for types with input type days_and_kms
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "days": "21.0000",
                                "kms": "5.00"
                            }
                } 
              name: types with input type days_and_kms
            - language: http
              code: |-
                // for types with input type unity_and_kms_and_days
                {
                            "person_id": 291,
                            "month": 9,
                            "year": 2020,
                            "type_id": 54,             
                            "parts": {
                                "unity": "21.0000",
                                "kms": "5.00",
                                "days": "5.00"
                            }
                } 
              name: types with input type unity_and_kms_and_days
          samples-languages:
            - http
    /1.0/wages/one_off/components/{granted_component_id}:
      delete:
        summary: Remove one-off wage component
        description: >-
          Removes a one-off wage component for a specific person in a specific
          month, by id
        operationId: remove-one-off-wage-component
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/performance_reviews/{person_id}/list:
      get:
        summary: List performance reviews
        description: >-
          show metadata for performance reviews by person. No content (notes,..)
          are exposed
        operationId: list-performance-reviews
        parameters:
          - name: page
            in: query
            description: >-
              Controls pagination (0, 1, 2, ..) to view all results. 30 items per
              page.
            required: true
            schema:
              type: integer
              format: int32
              default: 0
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 12,
                                  "date_created": "2020-02-01",
                                  "date_finished": "2020-02-20",
                                  "status": "finished"
                              },
                              {
                                  "id": 11,
                                  "date_created": "2020-01-12",
                                  "date_finished": null,
                                  "status": "pending"
                              },
                          ]
                      }
        deprecated: false
    /1.0/legal/dimonas/{person_id}/list:
      get:
        summary: List dimonas by person
        description: >-
          Belgium only: this API allows you to list all historical DIMONA
          information for one person
        operationId: list-dimonas-by-person
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "dimonas": [
                              {
                                  "dimona_number": 123,
                                  "type": "IN",
                                  "contract_start_date": "2020-08-05",
                                  "contract_end_date": "2020-08-21",
                                  "status": "success",
                                  "initiated_via_officient": 0
                              },
                              {
                                  "dimona_number": 124,
                                  "type": "CANCEL",
                                  "contract_start_date": "2018-06-11",
                                  "contract_end_date": null,
                                  "status": "success",
                                  "initiated_via_officient": 0
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    dimonas:
                      type: array
                      items:
                        type: object
                        properties:
                          dimona_number:
                            type: integer
                            example: 123
                            default: 0
                          type:
                            type: string
                            example: IN
                          contract_start_date:
                            type: string
                            example: '2020-08-05'
                          contract_end_date:
                            type: string
                            example: '2020-08-21'
                          status:
                            type: string
                            example: success
                          initiated_via_officient:
                            type: integer
                            example: 0
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Employee not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Employee not found or you have no access.
        deprecated: false
    /1.0/calendar/state/lock:
      post:
        summary: Unlock calendar
        description: >-
          Unlock the calendar for a month that has already been processed by your
          payroll provider. This is usually done to add corrections.
        operationId: lockunlock-calendar
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  disable_lock:
                    type: boolean
                    description: By disabling the lock, the calendar will become unlocked.
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |2-
                    {
                      "disable_lock": true
                    }
          samples-languages:
            - http
    /1.0/budgets/{budget_id}:
      delete:
        summary: Delete budget
        description: ''
        operationId: delete-budget
        parameters:
          - name: budget_id
            in: path
            description: The id of the budget that will be deleted
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
      patch:
        summary: Edit budget
        description: ''
        operationId: edit-budget
        parameters:
          - name: budget_id
            in: path
            description: The id of the budget that will be edited.
            schema:
              type: integer
              format: int32
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  maximum:
                    type: integer
                    description: The new maximum amount for the budget.
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "success": 1, 
                        "id": 123
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
                    id:
                      type: integer
                      example: 123
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |2-
                    {
                        "maximum": 200
                    }
          samples-languages:
            - http
    /1.0/budgets/add:
      post:
        summary: Add budget
        description: ''
        operationId: add-budget
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  budget_type:
                    type: string
                    description: The type of budget.
                  maximum:
                    type: integer
                    description: The maximum amount that will be set for the budget.
                    format: int32
                  year:
                    type: integer
                    description: The year for which the budget will created.
                    format: int32
                  employee_id:
                    type: integer
                    description: The id of the employee for which the budget will be created.
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "success": 1, 
                        "id": 123
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
                    id:
                      type: integer
                      example: 123
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |2-
                    {
                        "employee_id": 456,
                        "budget_type": "My Budget",
                        "year": 2021,
                        "maximum": 200
                    }
          samples-languages:
            - http
    /1.0/budgets/{budget_id}/items/{item_id}:
      delete:
        summary: Delete budget item
        description: ''
        operationId: delete-budget-item
        parameters:
          - name: budget_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: item_id
            in: query
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/budgets/{budget_id}/items/add:
      post:
        summary: Add budget item
        description: ''
        operationId: add-budget-item
        parameters:
          - name: budget_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  item_name:
                    type: string
                  cost:
                    type: number
                    format: double
                  employee_id:
                    type: integer
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "success": 1, 
                        "id": 123
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
                    id:
                      type: integer
                      example: 123
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"item_name\": \"name\",\n\t\"cost\": 10.50,\n\t\"employee_id\": 456\n}"
          samples-languages:
            - http
    /1.0/budgets/people/{person_id}/{year}/list:
      get:
        summary: List budgets
        description: Fetches a list of budgets for a given person and year.
        operationId: list-budgets
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 123,
                                  "budget_type": "Budget",
                                  "maximum": 200,
                                  "year": 2021,
                                  "usage": 0
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 123
                            default: 0
                          budget_type:
                            type: string
                            example: Budget
                          maximum:
                            type: integer
                            example: 200
                            default: 0
                          year:
                            type: integer
                            example: 2021
                            default: 0
                          usage:
                            type: integer
                            example: 0
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/budgets/people/{person_id}/{budget_id}/items/list:
      get:
        summary: List budget items
        description: Lists the items that are in a given budget.
        operationId: list-budget-items
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: budget_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "id": 123,
                                  "item_name": "Item",
                                  "cost": 22.5
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 123
                            default: 0
                          item_name:
                            type: string
                            example: Item
                          cost:
                            type: number
                            example: 22.5
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/events/priorityschemes/{year}:
      get:
        summary: List priority schemes
        description: lists the active priority schemes for a specific year
        operationId: list-priority-schemes
        parameters:
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [ 
                              {
                                  "id": 1,
                                  "name": "Vakantie",
                                  "days_off_types_count": 2
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            default: 0
                          name:
                            type: string
                            example: Vakantie
                          days_off_types_count:
                            type: integer
                            example: 2
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/priorityschemes/events/add:
      post:
        summary: Use priority scheme
        description: >-
          Adds events to a person's calendar based on a priority scheme of event
          types
        operationId: use-priority-scheme
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {  
                         "ruleset_id":123, 
                         "events":[  
                            {  
                               "date":"2021-12-2",
                               "start_time_minutes":540,
                               "duration_minutes":480
                            }, {  
                               "date":"2021-12-1",
                               "start_time_minutes":540,
                               "duration_minutes":480
                            }
                         ]
                      }
                schema:
                  type: object
                  properties:
                    ruleset_id:
                      type: integer
                      example: 123
                      default: 0
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            example: 2021-12-2
                          start_time_minutes:
                            type: integer
                            example: 540
                            default: 0
                          duration_minutes:
                            type: integer
                            example: 480
                            default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/roles/{person_id}/history:
      get:
        summary: Role History
        description: View the role history for one person
        operationId: role-history
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "id": 404,
                            "role_name": "CTO",
                            "start_date": "2021-05-04"
                          },
                          {
                            "id": 402,
                            "role_name": "IT Manager",
                            "start_date": "2010-02-04"
                          }
                        ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 404
                            default: 0
                          role_name:
                            type: string
                            example: CTO
                          start_date:
                            type: string
                            example: '2021-05-04'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/people/change_history:
      get:
        summary: Personal data audit log
        description: Get the latest delta of changes to personal data
        operationId: personal-data-audit-log
        parameters:
          - name: since_timestamp
            in: query
            description: Defaults to 1 week ago
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "logs": [
                              {
                                  "timestamp": 1630069622,
                                  "employee_id": 21312,
                                  "changed_values": {
                                      "address_country_code": {
                                          "old": "LU",
                                          "new": "BE"
                                      },
                                      "address_line_1": {
                                          "old": "",
                                          "new": "Kortrijksesteenweg 181"
                                      },
                                      "address_zipcode": {
                                          "old": "1130",
                                          "new": "9000"
                                      },
                                      "address_city": {
                                          "old": "Luxemburg",
                                          "new": "Gent"
                                      }
                                  }
                              },
                              {
                                  "timestamp": 1630069560,
                                  "employee_id": 21312,
                                  "changed_values": {
                                      "email": {
                                          "old": "stephanie@demo-account.com",
                                          "new": "stephanie@demo-account.io"
                                      },
                                      "phone": {
                                          "old": "+32487654321",
                                          "new": "+32498765432"
                                      },
                                      "emergency_contact_name": {
                                          "old": "",
                                          "new": "Frank"
                                      },
                                      "emergency_contact_relation": {
                                          "old": "",
                                          "new": "friend"
                                      },
                                      "emergency_contact_phone": {
                                          "old": "",
                                          "new": "+32412345678"
                                      },
                                      "personal_email": {
                                          "old": "",
                                          "new": "stephanie@demo-account.com"
                                      }
                                  }
                              },
                              {
                                  "timestamp": 1630069436,
                                  "employee_id": 21312,
                                  "changed_values": {
                                      "name": {
                                          "old": "Stephanie Ramant",
                                          "new": "Stephanie Damant"
                                      },
                                      "birthplace": {
                                          "old": "Brussels",
                                          "new": "Ghent"
                                      },
                                      "civil_state": {
                                          "old": "married",
                                          "new": "widow"
                                      },
                                      "preferred_language_code": {
                                          "old": "en",
                                          "new": "fr"
                                      },
                                      "gender": {
                                          "old": "female",
                                          "new": "male"
                                      },
                                      "bank_account_iban": {
                                          "old": "BE71131251628469",
                                          "new": "FR0430003000501276864745N41"
                                      },
                                      "bank_account_bic": {
                                          "old": "",
                                          "new": "SOGEFRPP"
                                      },
                                      "dependent_children": {
                                          "old": 0,
                                          "new": 2
                                      },
                                      "dependent_adults_below_65": {
                                          "old": 0,
                                          "new": 1
                                      },
                                      "dependent_adults_above_65": {
                                          "old": 0,
                                          "new": 1
                                      },
                                      "dependent_disabled_adults_below_65": {
                                          "old": 0,
                                          "new": 1
                                      }
                                  }
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    logs:
                      type: array
                      items:
                        type: object
                        properties:
                          timestamp:
                            type: integer
                            example: 1630069622
                            default: 0
                          employee_id:
                            type: integer
                            example: 21312
                            default: 0
                          changed_values:
                            type: object
                            properties:
                              address_country_code:
                                type: object
                                properties:
                                  old:
                                    type: string
                                    example: LU
                                  new:
                                    type: string
                                    example: BE
                              address_line_1:
                                type: object
                                properties:
                                  old:
                                    type: string
                                    example: ''
                                  new:
                                    type: string
                                    example: Kortrijksesteenweg 181
                              address_zipcode:
                                type: object
                                properties:
                                  old:
                                    type: string
                                    example: '1130'
                                  new:
                                    type: string
                                    example: '9000'
                              address_city:
                                type: object
                                properties:
                                  old:
                                    type: string
                                    example: Luxemburg
                                  new:
                                    type: string
                                    example: Gent
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/calendar/{person_id}/verzuim/{year}:
      get:
        summary: List verzuim periods
        description: ''
        operationId: list-verzuim-periods
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
          - name: year
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              [
                                  {
                                      "start_date": "2021-09-10",
                                      "end_date": null,
                                      "duration_type": "all_day",
                                      "duration_minutes_on_first_day": 480,
                                      "status": "open"
                                  }
                              ],
                              [
                                  {
                                      "start_date": "2021-09-06",
                                      "end_date": "2021-09-08",
                                      "duration_type": "custom",
                                      "duration_minutes_on_first_day": 300,
                                      "status": "closed"
                                  },
                                  {
                                      "start_date": "2021-09-03",
                                      "end_date": "2021-09-05",
                                      "duration_type": "all_day",
                                      "duration_minutes_on_first_day": 480,
                                      "status": "partially_closed"
                                  }
                              ]
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            start_date:
                              type: string
                              example: '2021-09-10'
                            end_date: {}
                            duration_type:
                              type: string
                              example: all_day
                            duration_minutes_on_first_day:
                              type: integer
                              example: 480
                              default: 0
                            status:
                              type: string
                              example: open
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Your account doesn't support sickness"
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Your account doesn't support sickness
        deprecated: false
    /1.0/people/{person_id}/custom_fields:
      get:
        summary: Person custom fields
        description: ''
        operationId: person-custom-fields
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "custom_field_id": 157,
                                  "custom_field_name": "Allergies",
                                  "type": "string",
                                  "value": "peanuts",
                                  "value_name": null
                              },
                              {
                                  "custom_field_id": 158,
                                  "custom_field_name": "is right handed",
                                  "type": "select_option",
                                  "value": "215",
                                  "value_name": "yes"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          custom_field_id:
                            type: integer
                            example: 157
                            default: 0
                          custom_field_name:
                            type: string
                            example: Allergies
                          type:
                            type: string
                            example: string
                          value:
                            type: string
                            example: peanuts
                          value_name: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Employee not found or you have no access."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Invalid employee id
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Employee not found or you have no access.
        deprecated: false
    /1.0/people/{person_id}/weekly_schedule/current:
      get:
        summary: Weekly schedule
        description: ''
        operationId: weekly-schedule
        parameters:
          - name: person_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      "data": {
                              "weekly_time_engagement_minutes": {
                                  "monday": 456,
                                  "tuesday": 456,
                                  "wednesday": 456,
                                  "thursday": 456,
                                  "friday": 456,
                                  "saturday": 0,
                                  "sunday": 0
                              },
                              "multiple_week_schedule": {
                                  "schedule_start_date": "2016-07-11",
                                  "weeks": [
                                      {
                                          "week_nr": 1,
                                          "weekly_time_engagement_minutes": {
                                              "monday": 456,
                                              "tuesday": 456,
                                              "wednesday": 456,
                                              "thursday": 456,
                                              "friday": 456,
                                              "saturday": 0,
                                              "sunday": 0
                                          }
                                      },
                                      {
                                          "week_nr": 2,
                                          "weekly_time_engagement_minutes": {
                                              "monday": 450,
                                              "tuesday": 450,
                                              "wednesday": 450,
                                              "thursday": 450,
                                              "friday": 480,
                                              "saturday": 0,
                                              "sunday": 0
                                          }
                                      }
                                  ]
                              }
                          }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Invalid employee id"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Employee not found or you have no access.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Invalid employee id
        deprecated: false
    /1.0/expenses/list/{year}/{month}:
      get:
        summary: List expenses by month
        description: List all expenses
        operationId: list-expenses-by-month
        parameters:
          - name: year
            in: path
            description: the specific year we want to filter
            schema:
              type: string
            required: true
          - name: month
            in: path
            description: the specific month we want to filter this is optional
            schema:
              type: string
            required: true
          - name: page
            in: query
            description: optional to filter pages
            schema:
              type: string
              default: '0'
          - name: include_deleted
            in: query
            description: >-
              this is so you can exclude any deleted expense, by default we show
              them (0 - 1)
            schema:
              type: integer
              format: int32
              default: 1
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": 22,\n\t\t\t\"employee_id\": 21312,\n\t\t\t\"date\": \"2021-04-05\",\n\t\t\t\"time_created\": 1618498412,\n\t\t\t\"status\": \"approved\",\n\t\t\t\"price\": \"35.00\",\n\t\t\t\"title\": \"Expense 1\",\n\t\t\t\"description\": \"Some extra information\",\n\t\t\t\"payout_method\": \"UNDECIDED\",\n\t\t\t\"payout_period\": null,\n\t\t\t\"payout_period_frequency\": null,\n\t\t\t\"payout_year\": null,\n\t\t\t\"expense_category_id\": 0,\n\t\t\t\"price_per_kilometer\": null,\n\t\t\t\"distance\": null,\n\t\t\t\"metadata\": null,\n\t\t\t\"dates\": null,\n\t\t\t\"date_approved\": null,\n\t\t\t\"payout_other_reason\": \"\",\n\t\t\t\"payout_status\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 23,\n\t\t\t\"employee_id\": 21303,\n\t\t\t\"date\": \"2021-04-15\",\n\t\t\t\"time_created\": 1618498456,\n\t\t\t\"status\": \"approved\",\n\t\t\t\"price\": \"10.00\",\n\t\t\t\"title\": \"Expense 2\",\n\t\t\t\"description\": \"\",\n\t\t\t\"payout_method\": \"UNDECIDED\",\n\t\t\t\"payout_period\": null,\n\t\t\t\"payout_period_frequency\": null,\n\t\t\t\"payout_year\": null,\n\t\t\t\"expense_category_id\": 0,\n\t\t\t\"price_per_kilometer\": null,\n\t\t\t\"distance\": null,\n\t\t\t\"metadata\": null,\n\t\t\t\"dates\": null,\n\t\t\t\"date_approved\": null,\n\t\t\t\"payout_other_reason\": \"\",\n\t\t\t\"payout_status\": \"\"\n\t\t}\n\t]\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 22
                            default: 0
                          employee_id:
                            type: integer
                            example: 21312
                            default: 0
                          date:
                            type: string
                            example: '2021-04-05'
                          time_created:
                            type: integer
                            example: 1618498412
                            default: 0
                          status:
                            type: string
                            example: approved
                          price:
                            type: string
                            example: '35.00'
                          title:
                            type: string
                            example: Expense 1
                          description:
                            type: string
                            example: Some extra information
                          payout_method:
                            type: string
                            example: UNDECIDED
                          payout_period: {}
                          payout_period_frequency: {}
                          payout_year: {}
                          expense_category_id:
                            type: integer
                            example: 0
                            default: 0
                          price_per_kilometer: {}
                          distance: {}
                          metadata: {}
                          dates: {}
                          date_approved: {}
                          payout_other_reason:
                            type: string
                            example: ''
                          payout_status:
                            type: string
                            example: ''
          '400':
            description: '400'
            content:
              text/plain:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Year has to be numeric\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Year has to be numeric
        deprecated: false
    /1.0/expenses/categories/list:
      get:
        summary: List expense categories
        description: List all expenses
        operationId: list-expense-categories
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"data\": [\n        {\n            \"id\": 5,\n            \"name\": \"Kilometervergoeding\",\n            \"way_of_input\": \"kilometer-allowance\",\n            \"price_per_kilometer\": 4.5000,\n          \t\"price_per_day\": 0.0000,\n            \"deleted\": 0,\n            \"payroll_components\": []\n        },\n        {\n            \"id\": 6,\n            \"name\": \"Overnachting\",\n            \"way_of_input\": \"total\",\n            \"price_per_kilometer\": 0.0000,\n            \"price_per_day\": 0.0000,\n            \"deleted\": 0,\n            \"payroll_components\": []\n        },\n      \t{\n            \"id\": 7,\n            \"name\": \"Site bezoek Peru\",\n            \"way_of_input\": \"day-allowance\",\n            \"price_per_kilometer\": 0.0000,\n            \"price_per_day\": 20.0000,\n            \"deleted\": 0,\n            \"payroll_components\": []\n        },\n    ]\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
        deprecated: false
    /1.0/expenses/{expense_id}/detail:
      get:
        summary: Expense detail
        description: List all expenses
        operationId: expense-detail
        parameters:
          - name: expense id
            in: path
            description: the specific id we want to see the details about
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"data\": {\n\t\t\"id\": 77,\n\t\t\"employee_id\": 21310,\n\t\t\"date\": \"2023-06-09\",\n\t\t\"time_created\": 1686300546,\n\t\t\"status\": \"approved\",\n\t\t\"price\": \"2.00\",\n\t\t\"title\": \"zonder amount\",\n\t\t\"description\": \"\",\n\t\t\"file_id\": -1,\n\t\t\"payout_method\": \"\",\n\t\t\"payout_period\": null,\n\t\t\"payout_period_frequency\": null,\n\t\t\"payout_year\": null,\n\t\t\"expense_category_id\": 5,\n\t\t\"filename\": null,\n\t\t\"category_id\": 5,\n\t\t\"category_name\": \"we\",\n\t\t\"category_way_of_input\": \"kilometer-allowance\",\n\t\t\"price_per_kilometer\": \"0.2000\",\n\t\t\"distance\": \"10.00\",\n\t\t\"request_id\": null,\n\t\t\"metadata\": \"\\\"{\\\\\\\"startLocation\\\\\\\":{\\\\\\\"description\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"place_id\\\\\\\":0},\\\\\\\"endLocation\\\\\\\":null,\\\\\\\"suggestedDistance\\\\\\\":0,\\\\\\\"kindOfRide\\\\\\\":\\\\\\\"double\\\\\\\"}\\\"\",\n\t\t\"dates\": \"[\\\"12\\\\\\/06\\\\\\/2023\\\"]\",\n\t\t\"date_approved\": \"2023-06-09\",\n\t\t\"payout_other_reason\": \"\",\n\t\t\"deleted\": 1,\n\t\t\"payout_status\": \"\",\n\t\t\"date_created_dmy\": \"09\\/06\\/2023\"\n\t}\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 77
                          default: 0
                        employee_id:
                          type: integer
                          example: 21310
                          default: 0
                        date:
                          type: string
                          example: '2023-06-09'
                        time_created:
                          type: integer
                          example: 1686300546
                          default: 0
                        status:
                          type: string
                          example: approved
                        price:
                          type: string
                          example: '2.00'
                        title:
                          type: string
                          example: zonder amount
                        description:
                          type: string
                          example: ''
                        file_id:
                          type: integer
                          example: -1
                          default: 0
                        payout_method:
                          type: string
                          example: ''
                        payout_period: {}
                        payout_period_frequency: {}
                        payout_year: {}
                        expense_category_id:
                          type: integer
                          example: 5
                          default: 0
                        filename: {}
                        category_id:
                          type: integer
                          example: 5
                          default: 0
                        category_name:
                          type: string
                          example: we
                        category_way_of_input:
                          type: string
                          example: kilometer-allowance
                        price_per_kilometer:
                          type: string
                          example: '0.2000'
                        distance:
                          type: string
                          example: '10.00'
                        request_id: {}
                        metadata:
                          type: string
                          example: >-
                            "{\"startLocation\":{\"description\":\"\",\"place_id\":0},\"endLocation\":null,\"suggestedDistance\":0,\"kindOfRide\":\"double\"}"
                        dates:
                          type: string
                          example: '["12\/06\/2023"]'
                        date_approved:
                          type: string
                          example: '2023-06-09'
                        payout_other_reason:
                          type: string
                          example: ''
                        deleted:
                          type: integer
                          example: 1
                          default: 0
                        payout_status:
                          type: string
                          example: ''
                        date_created_dmy:
                          type: string
                          example: 09/06/2023
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Expense id has to be numeric\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Expense id has to be numeric
        deprecated: false
    /1.0/expenses/add:
      post:
        summary: Add expense
        description: The api end-point to add an expense nd an optional category id
        operationId: add-expense
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - employee_id
                  - category_id
                  - description
                properties:
                  employee_id:
                    type: integer
                    default: null
                    format: int32
                  category_id:
                    type: integer
                    description: >-
                      For some integrations this is required not to be 0 which is
                      the default category id
                    default: 0
                    format: int32
                  description:
                    type: string
                    description: This is the title for the expense
                  amount:
                    type: number
                    description: >-
                      this is the price of the expense, this is only required when
                      using a total amount category
                    format: float
                  extra_information:
                    type: string
                  date:
                    type: string
                    description: >-
                      this is the day the expense has incurred on and is required
                      when it is a total amount category
                  filename:
                    type: string
                    description: >-
                      this is required when you want to add an expense with a
                      total amount category
                  file_base64:
                    type: string
                    description: >-
                      this is required when you want to add an expense with a
                      total amount category
                  dates:
                    type: array
                    description: >-
                      this is required when you want to add an expense with a
                      kilometer or day allowance expense category, multiple dates
                      are also possible (ex: ["24/05/2023", "26/05/2023"])
                    items:
                      type: string
                  distance:
                    type: integer
                    description: >-
                      this is required when you want to update to a killometer
                      allowance expense category. This is equal to the total
                      amount of kilometers that has been done
                    default: 0
                    format: int32
                  ride:
                    type: string
                    description: >-
                      this is the value if it's an outward or a round journey when
                      using kilometer allowances, this defaults to single
                    default: single
                    enum:
                      - single
                      - double
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"category_id is required\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: category_id is required
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"employee_id\":12345,\n  \"category_id\":0,\n\t\"amount\": 12.3,\n\t\"description\": \"title for yor expense\",\n\t\"extra_information\": \"the description for your expense\",\n  \"date\": \"12/05/2023\",\n  \"filename\": \"filename.png\",\n  \"file_base64\": \"filebase64\"\n}"
          samples-languages:
            - http
    /1.0/expenses/{expense_id}:
      delete:
        summary: Delete expense
        description: ''
        operationId: delete-expense
        parameters:
          - name: expense_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Expense not found.\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Expense not found.
        deprecated: false
      patch:
        summary: Edit expense
        description: ''
        operationId: edit-expense
        parameters:
          - name: expense_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - category_id
                properties:
                  category_id:
                    type: integer
                    description: >-
                      For some integrations this is required not to be 0 which is
                      the default category id
                    default: 0
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Expense not found or you have no access\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Expense not found or you have no access
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"category_id\": 5\n}"
          samples-languages:
            - http
    /1.0/expenses/categories/{category_id}:
      patch:
        summary: Edit expense category name
        description: ''
        operationId: edit-expense-category
        parameters:
          - name: category_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "An expense category with that name already exists"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Expense category not found or you have no access.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: An expense category with that name already exists
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"category_id\": 5\n}"
          samples-languages:
            - http
      delete:
        summary: Delete expense category
        description: ''
        operationId: delete-expense-category
        parameters:
          - name: category_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "success": 1
                      }
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Expense category not found or you have no access.\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Expense category not found or you have no access.
        deprecated: false
    /1.0/expenses/{expense_id}/updatePayout:
      post:
        summary: Set payout method and status
        description: ''
        operationId: set-payout-method-and-status
        parameters:
          - name: expense_id
            in: path
            schema:
              type: integer
              format: int32
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - new_payout_method
                properties:
                  new_payout_method:
                    type: string
                    enum:
                      - UNDECIDED
                      - DO_NOT_PAYOUT
                      - PAYOUT_ACCOUNTING
                      - PAYOUT_OTHER
                      - PAYOUT_MANUALLY
                      - PAYOUT_USING_PAYROLL_PROVIDER
                  payout_other_reason:
                    type: string
                  payout_status:
                    type: string
                    description: >-
                      This field is required when the "new"payout_method" is
                      either PAYOUT_ACCOUNTING, PAYOUT_OTHER or PAYOUT_MANUALLY
                    enum:
                      - PAID_OUT
                      - NOT_PAID_OUT
                  period:
                    type: string
                  year:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Missing payout status. Please set a valid payout_status."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Invalid payout method.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            Undecided, unpaid and payroll expenses can't have a
                            payout status. Update new_payout_method to another
                            method.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            Missing payout status. Please set a valid
                            payout_status.
        deprecated: false
    /1.0/expenses/categories/add:
      post:
        summary: Add expense category
        description: The api end-point to add an expense nd an optional category id
        operationId: add-expense-category
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - type
                properties:
                  name:
                    type: string
                  type:
                    type: string
                    default: total
                    enum:
                      - total
                      - kilometer-allowance
                      - day-allowance
                  price-per-kilometer:
                    type: number
                    format: float
                  price-per-day:
                    type: number
                    format: float
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"success\": 1\n}"
                schema:
                  type: object
                  properties:
                    success:
                      type: integer
                      example: 1
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Expense categories of type 'total' are not allowed to have a price per kilometer."
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: An expense category with that name already exists
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: Price per kilometer has to be more than 0.
                    - type: object
                      properties:
                        status_code:
                          type: integer
                          example: 400
                          default: 0
                        reason_phrase:
                          type: string
                          example: >-
                            Expense categories of type 'total' are not allowed to
                            have a price per kilometer.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "{\n\t\"name\": \"Regular expense\",\n  \"type\": \"total\"\n}"
            - language: text
              code: "{\n\t\"name\": \"Regular expense\",\n  \"type\": \"total\"\n}"
          samples-languages:
            - http
            - text
    /1.0/expenses/categories/{category_id}/detail:
      get:
        summary: Expense category detail
        description: List all expenses
        operationId: expense-category-detail
        parameters:
          - name: category_id
            in: path
            description: the specific id we want to see the details about
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "id": 5,
                              "name": "Kilometervergoeding",
                              "way_of_input": "kilometer-allowance",
                              "price_per_kilometer": "4.5000",
                              "deleted": 0,
                              "payroll_components": []
                          }
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 5
                          default: 0
                        name:
                          type: string
                          example: Kilometervergoeding
                        way_of_input:
                          type: string
                          example: kilometer-allowance
                        price_per_kilometer:
                          type: string
                          example: '4.5000'
                        deleted:
                          type: integer
                          example: 0
                          default: 0
                        payroll_components:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Expense category not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Expense category not found or you have no access.
        deprecated: false
    /1.0/expenses/list/{year}:
      get:
        summary: List expenses by year
        description: List all expenses
        operationId: list-expenses-by-year
        parameters:
          - name: year
            in: path
            description: the specific year we want to filter
            schema:
              type: string
            required: true
          - name: month
            in: path
            description: the specific month we want to filter this is optional
            schema:
              type: string
            required: true
          - name: page
            in: query
            description: optional to filter pages
            schema:
              type: string
              default: '0'
          - name: include_deleted
            in: query
            description: >-
              this is so you can exclude any deleted expense, by default we show
              them (0 - 1)
            schema:
              type: integer
              format: int32
              default: 1
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"data\": [\n\t\t{\n\t\t\t\"id\": 22,\n\t\t\t\"employee_id\": 21312,\n\t\t\t\"date\": \"2021-07-08\",\n\t\t\t\"time_created\": 1618498412,\n\t\t\t\"status\": \"approved\",\n\t\t\t\"price\": \"35.00\",\n\t\t\t\"title\": \"Expense 1\",\n\t\t\t\"description\": \"Some extra information\",\n\t\t\t\"payout_method\": \"UNDECIDED\",\n\t\t\t\"payout_period\": null,\n\t\t\t\"payout_period_frequency\": null,\n\t\t\t\"payout_year\": null,\n\t\t\t\"expense_category_id\": 0,\n\t\t\t\"price_per_kilometer\": null,\n\t\t\t\"distance\": null,\n\t\t\t\"metadata\": null,\n\t\t\t\"dates\": null,\n\t\t\t\"date_approved\": null,\n\t\t\t\"payout_other_reason\": \"\",\n\t\t\t\"payout_status\": \"\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 23,\n\t\t\t\"employee_id\": 21303,\n\t\t\t\"date\": \"2021-04-15\",\n\t\t\t\"time_created\": 1618498456,\n\t\t\t\"status\": \"approved\",\n\t\t\t\"price\": \"10.00\",\n\t\t\t\"title\": \"Expense 2\",\n\t\t\t\"description\": \"\",\n\t\t\t\"payout_method\": \"UNDECIDED\",\n\t\t\t\"payout_period\": null,\n\t\t\t\"payout_period_frequency\": null,\n\t\t\t\"payout_year\": null,\n\t\t\t\"expense_category_id\": 0,\n\t\t\t\"price_per_kilometer\": null,\n\t\t\t\"distance\": null,\n\t\t\t\"metadata\": null,\n\t\t\t\"dates\": null,\n\t\t\t\"date_approved\": null,\n\t\t\t\"payout_other_reason\": \"\",\n\t\t\t\"payout_status\": \"\"\n\t\t}\n\t]\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 22
                            default: 0
                          employee_id:
                            type: integer
                            example: 21312
                            default: 0
                          date:
                            type: string
                            example: '2021-07-08'
                          time_created:
                            type: integer
                            example: 1618498412
                            default: 0
                          status:
                            type: string
                            example: approved
                          price:
                            type: string
                            example: '35.00'
                          title:
                            type: string
                            example: Expense 1
                          description:
                            type: string
                            example: Some extra information
                          payout_method:
                            type: string
                            example: UNDECIDED
                          payout_period: {}
                          payout_period_frequency: {}
                          payout_year: {}
                          expense_category_id:
                            type: integer
                            example: 0
                            default: 0
                          price_per_kilometer: {}
                          distance: {}
                          metadata: {}
                          dates: {}
                          date_approved: {}
                          payout_other_reason:
                            type: string
                            example: ''
                          payout_status:
                            type: string
                            example: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"status_code\": 400,\n\t\"reason_phrase\": \"Year has to be numeric\"\n}"
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Year has to be numeric
        deprecated: false
    /1.0/wages/functions/list:
      get:
        summary: List functions
        description: Get the details of all functions or that of a single one
        operationId: list-functions
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "username": "123456",
                              "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                              "description": "Functie 1"
                          },
                          {
                              "username": "123456",
                              "internal_code": "21ba65dc-89fe-h67g-5j0i-76543o2nm8lk",
                              "description": "Functie 2"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        example: '123456'
                      internal_code:
                        type: string
                        example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                      description:
                        type: string
                        example: Functie 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/functions/detail/{internal_code}:
      get:
        summary: Function detail
        description: Get the details of all functions or that of a single one
        operationId: function-detail
        parameters:
          - name: internal_code
            in: path
            description: >-
              The internal code / GUID of the function you would like to receive
              information on
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                          "description": "Functie 1"
                      }
                schema:
                  type: object
                  properties:
                    internal_code:
                      type: string
                      example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                    description:
                      type: string
                      example: Functie 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Function not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Function not found or you have no access.
        deprecated: false
    /1.0/wages/departments/list:
      get:
        summary: List departments
        description: Get the details of all functions or that of a single one
        operationId: list-departments
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "username": "123456",
                              "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                              "description": "Afdeling 1"
                          },
                          {
                              "username": "123456",
                              "internal_code": "21ba65dc-89fe-h67g-5j0i-76543o2nm8lk",
                              "description": "Afdeling 2"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        example: '123456'
                      internal_code:
                        type: string
                        example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                      description:
                        type: string
                        example: Afdeling 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/departments/detail/{internal_code}:
      get:
        summary: Department detail
        description: Get the details of all functions or that of a single one
        operationId: department-detail
        parameters:
          - name: internal_code
            in: path
            description: >-
              The internal code / GUID of the function you would like to receive
              information on
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                          "description": "Afdeling 1"
                      }
                schema:
                  type: object
                  properties:
                    internal_code:
                      type: string
                      example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                    description:
                      type: string
                      example: Afdeling 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Department not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Department not found or you have no access.
        deprecated: false
    /1.0/wages/cost_units/list:
      get:
        summary: List cost units
        description: Get the details of all functions or that of a single one
        operationId: list-cost-units
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "username": "123456",
                              "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                              "description": "Kostendrager 1"
                          },
                          {
                              "username": "123456",
                              "internal_code": "21ba65dc-89fe-h67g-5j0i-76543o2nm8lk",
                              "description": "Kostendrager 2"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        example: '123456'
                      internal_code:
                        type: string
                        example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                      description:
                        type: string
                        example: Kostendrager 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/cost_units/detail/{internal_code}:
      get:
        summary: Cost unit detail
        description: Get the details of all functions or that of a single one
        operationId: cost-unit-detail
        parameters:
          - name: internal_code
            in: path
            description: >-
              The internal code / GUID of the function you would like to receive
              information on
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                          "description": "Kostendrager 1"
                      }
                schema:
                  type: object
                  properties:
                    internal_code:
                      type: string
                      example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                    description:
                      type: string
                      example: Kostendrager 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Cost unit not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Cost unit not found or you have no access.
        deprecated: false
    /1.0/wages/cost_centers/list:
      get:
        summary: List cost centers
        description: Get the details of all functions or that of a single one
        operationId: list-cost-centers
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "username": "123456",
                              "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                              "description": "Kostenplaats 1"
                          },
                          {
                              "username": "123456",
                              "internal_code": "21ba65dc-89fe-h67g-5j0i-76543o2nm8lk",
                              "description": "Kostenplaats 2"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        example: '123456'
                      internal_code:
                        type: string
                        example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                      description:
                        type: string
                        example: Kostenplaats 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /1.0/wages/cost_centers/detail/{internal_code}:
      get:
        summary: Cost center detail
        description: Get the details of all functions or that of a single one
        operationId: cost-center-detail
        parameters:
          - name: internal_code
            in: path
            description: >-
              The internal code / GUID of the function you would like to receive
              information on
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "internal_code": "12ab56cd-98ef-g76h-i0j5-34567k8lm2no",
                          "description": "Kostenplaats 1"
                      }
                schema:
                  type: object
                  properties:
                    internal_code:
                      type: string
                      example: 12ab56cd-98ef-g76h-i0j5-34567k8lm2no
                    description:
                      type: string
                      example: Kostenplaats 1
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "status_code": 400,
                          "reason_phrase": "Cost center not found or you have no access."
                      }
                schema:
                  type: object
                  properties:
                    status_code:
                      type: integer
                      example: 400
                      default: 0
                    reason_phrase:
                      type: string
                      example: Cost center not found or you have no access.
        deprecated: false
  x-readme:
    headers: []
    explorer-enabled: false
    proxy-enabled: true
  x-readme-fauxas: true
konfigCliVersion: 1.38.61
