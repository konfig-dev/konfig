publishJson:
  company: Proliant
  serviceName: false
  sdkName: proliant-{language}-sdk
  clientName: Proliant
  metaDescription: >-
    Proliant provides a fully integrated, cloud-based human capital management
    solution that simplifies payroll and HR processes, improves accuracy, and
    ensures industry compliance. From day one, Proliant's dedicated account
    managers work closely with clients to ensure they get the most out of their
    investment.


    Our all-in-one solution simplifies every aspect of workforce and talent
    management across the entire employment life cycle. Everyone in your
    organization—from the C-suite to managers and employees—benefits from using
    Proliant's easy to use, innovative platform. Our people are dedicated to
    helping your team manage their most critical assets—your people.


    Proliant delivers a perfect balance of technology and services supported by
    experienced industry experts. Over the years we have invested time in
    developing innovative products that solve complex regulatory issues.
    Proliant is the workforce management solution of choice for over 4,000
    companies nationwide.


    "Proliant has done a great job managing all of our HR and tax service needs,
    but it's their people and customer service that have made Proliant our most
    preferred vendor."  - CFO for a prominent Atlanta legal firm
  apiStatusUrls: inherit
  homepage: proliant.com
  developerDocumentation: www.readypayonline.com/CompanyAPI/swagger/ui/index#!/
  categories:
    - payroll
rawSpecString: |
  openapi: 3.0.0
  info:
    version: v1
    title: Proliant API
    description: >-
      Our customer - facing API allows clients to view and manage company and
      employee data with features that integrate customers' systems with ours.
      These features include, but are not limited to, adding and updating
      Employees Deductions, Employee Information, and Cost Centers.
  paths:
    /Company/{companyId}/Employee/{employeeId}/Accrual:
      get:
        tags:
          - Accrual
        summary: >-
          Gets all Accrual records associated for the provided company and
          employee
        operationId: Accrual_GetAccruals
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeAccrualViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeAccrualViewModel_
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Accrual
        summary: Creates a accrual record for the provided company and employee
        operationId: Accrual_CreateAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeAccrualViewModel'
        responses:
          '201':
            description: Success! Record has been created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or accrual not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Accrual/{code}:
      get:
        tags:
          - Accrual
        summary: Gets a accrual record for the provided company and employee
        operationId: Accrual_GetEmployeeAccrualByCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeAccrualViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeAccrualViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      put:
        tags:
          - Accrual
        summary: Updates a accrual record for the provided company and employee
        operationId: Accrual_UpdateAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The accrual
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeAccrualViewModel'
        responses:
          '200':
            description: Success! Record has been updated!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, Employee, or accrual not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Accrual
        summary: Deletes a accrual record for the provided company and employee
        operationId: Accrual_DeleteAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Accrual:
      get:
        tags:
          - Accrual
        summary: Gets all Accrual records associated for the provided company
        operationId: Accrual_GetAccruals
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyAccrualViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyAccrualViewModel_
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Accrual
        summary: Creates a accrual record for the provided company
        operationId: Accrual_CreateAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CompanyAccrualViewModel'
        responses:
          '201':
            description: Success! Record has been created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or accrual not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Accrual/{code}:
      get:
        tags:
          - Accrual
        summary: Gets a accrual record for the provided company
        operationId: Accrual_GetAccrualByCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_CompanyAccrualViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_CompanyAccrualViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      put:
        tags:
          - Accrual
        summary: Updates a accrual record for the provided company
        operationId: Accrual_UpdateAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The accrual
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CompanyAccrualViewModel'
        responses:
          '200':
            description: Success! Record has been updated!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or accrual code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Accrual
        summary: Deletes a accrual record for the provided company
        operationId: Accrual_DeleteAccrual
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Certification:
      get:
        tags:
          - Certification
        summary: Gets certifications for an employee in a company
        operationId: Certification_GetEmployeeCertifications
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeCertificationViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeCertificationViewModel_
          '400':
            description: Bad Request!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Certification
        summary: Creates a certification for an employee in a company
        operationId: Certification_CreateEmployeeCertification
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeCertificationViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Certification/{certificationId}:
      put:
        tags:
          - Certification
        summary: Updates a certification for an employee in a company
        operationId: Certification_UpdateEmployeeCertification
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: certificationId
            in: path
            description: The certification id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeCertificationViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Certification
        summary: Deletes a certification for an employee in a company
        operationId: Certification_DeleteEmployeeCertification
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: certificationId
            in: path
            description: The certification id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, id, or certification not found
        security:
          - oauth2:
              - Company
    /Company:
      get:
        tags:
          - Company
        summary: Gets a lookup list companies available to the current client
        operationId: Company_GetCompanies
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}:
      get:
        tags:
          - Company
        summary: Gets Company information by company Id
        operationId: Company_GetCompany
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_CompanyInformationViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_CompanyInformationViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter1:
      get:
        tags:
          - CostCenters
        summary: Gets all Cost Center 1 records associated for the provided company
        operationId: CostCenters_GetCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - CostCenters
        summary: Creates a Cost Center 1 record for the provided company
        operationId: CostCenters_CreateCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '201':
            description: Success! Cost Center Record created
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter1/{cc}:
      get:
        tags:
          - CostCenters
        summary: Gets a Cost Center 1 record for the provided company
        operationId: CostCenters_GetCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or record not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - CostCenters
        summary: Updates a Cost Center 1 record for the provided company
        operationId: CostCenters_UpdateCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '200':
            description: Success! Cost center updated
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or cost center not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - CostCenters
        summary: Deletes a Cost Center 1 record for the provided company
        operationId: CostCenters_DeleteCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Success! Cost center deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter2:
      get:
        tags:
          - CostCenters
        summary: Gets all Cost Center 2 records associated for the provided company
        operationId: CostCenters_GetCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - CostCenters
        summary: Creates a Cost Center 2 record for the provided company
        operationId: CostCenters_CreateCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '201':
            description: Success! Cost Center Record created
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter2/{cc}:
      get:
        tags:
          - CostCenters
        summary: Gets a Cost Center 2 record for the provided company
        operationId: CostCenters_GetCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - CostCenters
        summary: Updates a Cost Center 2 record for the provided company
        operationId: CostCenters_UpdateCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '200':
            description: Success! Cost center updated
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or cost center not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - CostCenters
        summary: Deletes a Cost Center 2 record for the provided company
        operationId: CostCenters_DeleteCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Success! Cost center deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter3:
      get:
        tags:
          - CostCenters
        summary: Gets all Cost Center 3 records associated for the provided company
        operationId: CostCenters_GetCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - CostCenters
        summary: Creates a Cost Center 3 record for the provided company
        operationId: CostCenters_CreateCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '201':
            description: Success! Cost Center Record created
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter3/{cc}:
      get:
        tags:
          - CostCenters
        summary: Gets a Cost Center 3 record for the provided company
        operationId: CostCenters_GetCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - CostCenters
        summary: Updates a Cost Center 3 record for the provided company
        operationId: CostCenters_UpdateCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '200':
            description: Success! Cost center updated
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - CostCenters
        summary: Deletes a Cost Center 3 record for the provided company
        operationId: CostCenters_DeleteCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Success! Cost center deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter4:
      get:
        tags:
          - CostCenters
        summary: Gets all Cost Center 4 records associated for the provided company
        operationId: CostCenters_GetCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - CostCenters
        summary: Creates a Cost Center 4 record for the provided company
        operationId: CostCenters_CreateCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '201':
            description: Success! Cost Center Record created
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter4/{cc}:
      get:
        tags:
          - CostCenters
        summary: Gets a Cost Center 4 record for the provided company
        operationId: CostCenters_GetCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - CostCenters
        summary: Updates a Cost Center 4 record for the provided company
        operationId: CostCenters_UpdateCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '200':
            description: Success! Cost center updated
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or cost center not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - CostCenters
        summary: Deletes a Cost Center 4 record for the provided company
        operationId: CostCenters_DeleteCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Success! Cost center deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter5:
      get:
        tags:
          - CostCenters
        summary: Gets all Cost Center 5 records associated for the provided company
        operationId: CostCenters_GetCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - CostCenters
        summary: Creates a Cost Center 5 record for the provided company
        operationId: CostCenters_CreateCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '201':
            description: Success! Cost Center Record created
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/CostCenter5/{cc}:
      get:
        tags:
          - CostCenters
        summary: Gets a Cost Center 5 record for the provided company
        operationId: CostCenters_GetCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - CostCenters
        summary: Updates a Cost Center 5 record for the provided company
        operationId: CostCenters_UpdateCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CostCenterViewModel'
        responses:
          '200':
            description: Success! Cost center updated
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or cost center not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - CostCenters
        summary: Deletes a Cost Center 5 record for the provided company
        operationId: CostCenters_DeleteCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: cc
            in: path
            description: The cost center id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Success!Cost center deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DailyPay/earnings:
      post:
        tags:
          - DailyPay
        summary: Adds earnings to one or more employee check(s) in the daily pay batch.
        operationId: DailyPay_AddEarnings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EarningImportViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DailyPay/calendars:
      get:
        tags:
          - DailyPay
        summary: Gets a list of current active Daily Pay calendars for the company.
        operationId: DailyPay_GetCurrentCalendars
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DailyPay/calendars/{date}:
      get:
        tags:
          - DailyPay
        summary: >-
          Gets a list of current active Daily Pay calendars for the company by
          date.
        operationId: DailyPay_GetCurrentCalendars
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: date
            in: path
            description: The date
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DailyPay/earnings/{calendarId}:
      get:
        tags:
          - DailyPay
        summary: >-
          Gets earnings details by calendar for the designated daily pay batch,
          optionally filtered by a list of employee ids
        operationId: DailyPay_GetEarnings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarId
            in: path
            description: The calendar id
            required: true
            schema:
              type: string
              format: uuid
          - name: employeeIds
            in: query
            description: Optional comma delimited list of employeeIds
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DeductionCode:
      get:
        tags:
          - DeductionCode
        summary: Gets all deduction code records associated for the provided company
        operationId: DeductionCode_GetDeductionCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_DeductionCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_DeductionCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - DeductionCode
        summary: Creates a deduction code record for the provided company
        operationId: DeductionCode_CreateDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/DeductionCodeViewModel'
        responses:
          '201':
            description: Created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/DeductionCode/{code}:
      get:
        tags:
          - DeductionCode
        summary: Gets a Deduction Code record for the provided company
        operationId: DeductionCode_GetDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_DeductionCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_DeductionCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - DeductionCode
        summary: Updates a Deduction Code record for the provided company
        operationId: DeductionCode_UpdateDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The deduction code
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/DeductionCodeViewModel'
        responses:
          '200':
            description: Success! List of Deduction code records returned
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - DeductionCode
        summary: Deletes a deduction code record for the provided company
        operationId: DeductionCode_DeleteDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/EarningCode:
      get:
        tags:
          - EarningCode
        summary: Gets all earning code records associated for the provided company
        operationId: EarningCode_GetEarningCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EarningCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EarningCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - EarningCode
        summary: Creates a earning code record for the provided company
        operationId: EarningCode_CreateEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EarningCodeViewModel'
        responses:
          '201':
            description: Created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or earning code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/EarningCode/{code}:
      get:
        tags:
          - EarningCode
        summary: Gets a earning code record for the provided company
        operationId: EarningCode_GetEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_EarningCodeViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_EarningCodeViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or earning code not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - EarningCode
        summary: Updates a earning code record for the provided company
        operationId: EarningCode_UpdateEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The earning code
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EarningCodeViewModel'
        responses:
          '200':
            description: Success! List of earning code records returned
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or earning code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - EarningCode
        summary: Deletes a earning code record for the provided company
        operationId: EarningCode_DeleteEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or earning code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Earnings:
      post:
        tags:
          - Earnings
        summary: Adds earnings to one or more employee check(s) in the regular batch.
        operationId: Earnings_AddEarnings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EarningImportViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Earnings/{calendarId}/{batch}:
      get:
        tags:
          - Earnings
        summary: >-
          Gets earnings details by calendar and batch, optionally filtered by a
          list of employee ids
        operationId: Earnings_GetEarnings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarId
            in: path
            description: The calendar id
            required: true
            schema:
              type: string
              format: uuid
          - name: batch
            in: path
            description: The batch
            required: true
            schema:
              type: string
          - name: employeeIds
            in: query
            description: Optional comma delimited list of employeeIds
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Earnings/calendars:
      get:
        tags:
          - Earnings
        summary: >-
          Gets a list of calendars for the company using today as the transaction
          date.
        operationId: Earnings_GetCurrentCalendars
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Earnings/calendars/{date}:
      get:
        tags:
          - Earnings
        summary: Gets a list of calendars for the company by date.
        operationId: Earnings_GetCurrentCalendars
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: date
            in: path
            description: The transaction date
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Earnings/calendars/search:
      get:
        tags:
          - Earnings
        summary: Gets a list of calendars for the company between the start and end date
        operationId: Earnings_GetAllCalendars
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: startDate
            in: query
            description: Start date (defaults to 1980-01-01)
            required: false
            schema:
              type: string
              format: date-time
          - name: endDate
            in: query
            description: End date (defaults to 2100-12-31)
            required: false
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Education:
      get:
        tags:
          - Education
        summary: Gets Educations for an employee in a company
        operationId: Education_GetEmployeeEducations
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeEducationViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeEducationViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Education
        summary: Creates Education for an employee in a company
        operationId: Education_CreateEmployeeEducation
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeEducationViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Education/{educationId}:
      put:
        tags:
          - Education
        summary: Updates Education for an employee in a company
        operationId: Education_UpdateEmployeeEducation
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: educationId
            in: path
            description: The Education id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeEducationViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Education
        summary: Deletes an education record for an employee in a company
        operationId: Education_DeleteEmployeeEducation
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: educationId
            in: path
            description: The education id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee:
      get:
        tags:
          - Employee
        summary: Get employees from a company based on search criteria
        operationId: Employee_GetEmployees
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: searchCriteria.costCenter1
            in: query
            description: Cost center 1
            required: false
            schema:
              type: string
          - name: searchCriteria.costCenter2
            in: query
            description: Cost center 2
            required: false
            schema:
              type: string
          - name: searchCriteria.costCenter3
            in: query
            description: Cost center 3
            required: false
            schema:
              type: string
          - name: searchCriteria.costCenter4
            in: query
            description: Cost center 4
            required: false
            schema:
              type: string
          - name: searchCriteria.costCenter5
            in: query
            description: Cost center 5
            required: false
            schema:
              type: string
          - name: searchCriteria.name
            in: query
            description: The employee name
            required: false
            schema:
              type: string
          - name: searchCriteria.id
            in: query
            description: The employee ID
            required: false
            schema:
              type: string
          - name: searchCriteria.ssn
            in: query
            description: Social security number
            required: false
            schema:
              type: string
          - name: searchCriteria.inclueProfileImage
            in: query
            description: >-
              Whether to return a base64 encoded profile image with the search
              results
            required: false
            schema:
              type: boolean
          - name: searchCriteria.includeDirectDeposits
            in: query
            description: >-
              Whether to include the direct deposit collection associated with
              each employee record
            required: false
            schema:
              type: boolean
          - name: searchCriteria.includeEmergencyContacts
            in: query
            description: >-
              Whether to include the emergency contact collection associated with
              each employee record
            required: false
            schema:
              type: boolean
          - name: searchCriteria.includeTaxes
            in: query
            description: >-
              Whether to include the tax collection associated with each employee
              record
            required: false
            schema:
              type: boolean
          - name: searchCriteria.pageSize
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: searchCriteria.pageNumber
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: searchCriteria.sortByProperty
            in: query
            description: >-
              Property to sort results by. Valid properties include any from the
              return entity.
            required: false
            schema:
              type: string
          - name: searchCriteria.sortDirection
            in: query
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Employee
        summary: Creates an employee for a company
        operationId: Employee_CreateEmployee
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeImportViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeImportViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/EmployeeImportViewModel'
          description: The employee record
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}:
      get:
        tags:
          - Employee
        summary: Gets an employee for a company
        operationId: Employee_GetEmployee
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: activeOnly
            in: query
            description: >-
              Optional query string parameter whether to return only active
              records
            required: false
            schema:
              type: boolean
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeGetRequestViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeGetRequestViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      put:
        tags:
          - Employee
        summary: Updates an employee for a company
        operationId: Employee_UpdateEmployee
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/EmployeeUpdateViewModel'
          description: The employee record
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Employee
        summary: Deletes an employee by company and employee id
        operationId: Employee_DeleteEmployee
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The Employee id
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/DirectDeposits:
      put:
        tags:
          - Employee
        summary: Updates direct deposits for an employee
        operationId: Employee_UpdateEmployeeDirectDeposits
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
            application/x-www-form-urlencoded:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
          description: Employee direct deposits
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Information:
      put:
        tags:
          - Employee
        summary: Updates demographics information for an employee
        operationId: Employee_UpdateEmployeeInformation
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
          description: Employee demographics information
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Taxes:
      put:
        tags:
          - Employee
        summary: Updates taxes for an employee
        operationId: Employee_UpdateEmployeeTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeTaxViewModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeTaxViewModel'
            application/x-www-form-urlencoded:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeTaxViewModel'
          description: Employee taxes
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/EmergencyContacts:
      put:
        tags:
          - Employee
        summary: Updates emergency contacts for an employee
        operationId: Employee_UpdateEmployeeEmerencyContacts
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyContactViewModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyContactViewModel'
            application/x-www-form-urlencoded:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmergencyContactViewModel'
          description: Employee emergency contacts
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/DeductionCode:
      get:
        tags:
          - EmployeeDeductionCode
        summary: Gets all deduction code records associated for the provided company
        operationId: EmployeeDeductionCode_GetDeductionCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - EmployeeDeductionCode
        summary: Creates a deduction code record for the provided company
        operationId: EmployeeDeductionCode_CreateDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeDeductionCodeViewModel'
        responses:
          '201':
            description: Created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/DeductionCode/{code}/{activeDate}:
      get:
        tags:
          - EmployeeDeductionCode
        summary: Gets a Deduction Code record for the provided company
        operationId: EmployeeDeductionCode_GetDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
          - name: activeDate
            in: path
            description: The active date for the deduction code
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeDeductionCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeDeductionCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, Employee, or deduction code not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - EmployeeDeductionCode
        summary: Updates a Deduction Code record for the provided company
        operationId: EmployeeDeductionCode_UpdateDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The deduction code
            required: true
            schema:
              type: string
          - name: activeDate
            in: path
            description: The active date for the deduction code
            required: true
            schema:
              type: string
              format: date-time
        requestBody:
          $ref: '#/components/requestBodies/EmployeeDeductionCodeViewModel'
        responses:
          '200':
            description: Success! List of Deduction code records returned
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - EmployeeDeductionCode
        summary: Deletes a deduction code record for the provided company
        operationId: EmployeeDeductionCode_DeleteDeductionCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
          - name: activeDate
            in: path
            description: The active date for the deduction code
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/EarningCode:
      get:
        tags:
          - EmployeeEarningCode
        summary: >-
          Gets all earning code records associated with the employee for the
          provided company
        operationId: EmployeeEarningCode_GetEarningCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeEarningCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeEarningCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - EmployeeEarningCode
        summary: Creates a earning code record for the provided company
        operationId: EmployeeEarningCode_CreateEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeEarningCodeViewModel'
        responses:
          '201':
            description: Created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee, or earning code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/EarningCode/{code}/{startDate}:
      get:
        tags:
          - EmployeeEarningCode
        summary: Gets a Earning Code record for the provided company
        operationId: EmployeeEarningCode_GetEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: The start date for the earning code
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeEarningCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EmployeeEarningCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, Employee, or earning code not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - EmployeeEarningCode
        summary: Updates a Earning Code record for the employee in the provided company
        operationId: EmployeeEarningCode_UpdateEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The earning code
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: The start date for the earning code
            required: true
            schema:
              type: string
              format: date-time
        requestBody:
          $ref: '#/components/requestBodies/EmployeeEarningCodeViewModel'
        responses:
          '200':
            description: Success! List of Earning code records returned
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee or earning code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - EmployeeEarningCode
        summary: Deletes a earning code record for the employee in the provided company
        operationId: EmployeeEarningCode_DeleteEarningCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
          - name: startDate
            in: path
            description: The start date for the earning code
            required: true
            schema:
              type: string
              format: date-time
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or earning code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Pto:
      get:
        tags:
          - EmployeePto
        summary: Gets all pto requests for an employee in a company
        operationId: EmployeePto_GetEmployeePtos
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
          '400':
            description: Bad Request!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Pto/{ptoGuid}:
      get:
        tags:
          - EmployeePto
        summary: Gets all pto requests for an employee in a company
        operationId: EmployeePto_GetEmployeePto
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: ptoGuid
            in: path
            description: The pto record unique identifier
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
          '400':
            description: Bad Request!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/JobCode:
      get:
        tags:
          - JobCode
        summary: Gets all Job code records associated for the provided company
        operationId: JobCode_GetJobCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_JobCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_JobCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - JobCode
        summary: Creates a job code record for the provided company
        operationId: JobCode_CreateJobCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
          description: The job code to be created
          required: true
        responses:
          '201':
            description: Created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or job code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/JobCode/{code}:
      get:
        tags:
          - JobCode
        summary: Gets a Job code record for the provided company
        operationId: JobCode_GetJobCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_JobCodeViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_JobCodeViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or job code not found
        security:
          - oauth2:
              - Company
      put:
        tags:
          - JobCode
        summary: Updates a Job code record for the provided company
        operationId: JobCode_UpdateJobCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The job code
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/JobCodeViewModel'
          description: The job  code to be created
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or job code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - JobCode
        summary: Deletes a job code record for the provided company
        operationId: JobCode_DeleteJobCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or job code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/License:
      get:
        tags:
          - License
        summary: Gets licenses for an employee in a company
        operationId: License_GetEmployeeLicenses
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeLicenseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeLicenseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - License
        summary: Creates license for an employee in a company
        operationId: License_CreateEmployeeLicense
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeLicenseViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/License/{licenseId}:
      put:
        tags:
          - License
        summary: Updates license for an employee in a company
        operationId: License_UpdateEmployeeLicense
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: licenseId
            in: path
            description: The license id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeLicenseViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - License
        summary: Deletes a license for an employee in a company
        operationId: License_DeleteEmployeeLicense
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: licenseId
            in: path
            description: The license id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Success! License deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee, or license not found
        security:
          - oauth2:
              - Company
    /System/Lookup/Genders:
      get:
        tags:
          - LookupValues
        summary: Gets all gender code options
        operationId: LookupValues_GetGenderCodes
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/MaritalStatuses:
      get:
        tags:
          - LookupValues
        summary: Gets all marital status options
        operationId: LookupValues_GetMaritalStatusCodes
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/TaxForms:
      get:
        tags:
          - LookupValues
        summary: Gets all tax form options
        operationId: LookupValues_GetTaxFormList
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/AutoPays:
      get:
        tags:
          - LookupValues
        summary: Gets base auto pay options
        operationId: LookupValues_GetBaseAutoPayList
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/VisaTypes:
      get:
        tags:
          - LookupValues
        summary: Gets visa type options
        operationId: LookupValues_GetVisaTypes
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/RatePer:
      get:
        tags:
          - LookupValues
        summary: Gets rate per options
        operationId: LookupValues_GetRatePer
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /System/Lookup/TaxOptions:
      get:
        tags:
          - LookupValues
        summary: Gets list of TaxOption values
        operationId: LookupValues_GetTaxOptions
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/PayGrades:
      get:
        tags:
          - LookupValues
        summary: Gets all pay grade options
        operationId: LookupValues_GetCompanyPayGrades
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/PayGroups:
      get:
        tags:
          - LookupValues
        summary: Gets all pay group options
        operationId: LookupValues_GetCompanyPayGroups
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Positions:
      get:
        tags:
          - LookupValues
        summary: Gets all position options
        operationId: LookupValues_GetCompanyPositions
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Unions:
      get:
        tags:
          - LookupValues
        summary: Gets all union options
        operationId: LookupValues_GetCompanyUnions
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/EmployeeStatuses:
      get:
        tags:
          - LookupValues
        summary: Gets all employee status options
        operationId: LookupValues_GetCompanyEmployeeStatuses
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/EmployeeTypes:
      get:
        tags:
          - LookupValues
        summary: Gets all employee type options
        operationId: LookupValues_GetCompanyEmployeeTypes
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/BenefitClasses:
      get:
        tags:
          - LookupValues
        summary: Gets all benefit class options
        operationId: LookupValues_GetCompanyBenefitClasses
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/TimeClockGroups:
      get:
        tags:
          - LookupValues
        summary: Gets all time clock group options
        operationId: LookupValues_GetCompanyTimeClockGroups
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/TimeClockPayClasses:
      get:
        tags:
          - LookupValues
        summary: Gets all time clock pay class options
        operationId: LookupValues_GetCompanyTimeClockPayClasses
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/TimeClockSchedulePatterns:
      get:
        tags:
          - LookupValues
        summary: Gets all time clock schedule pattern options
        operationId: LookupValues_GetCompanyTimeClockSchedulePatterns
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/WorkersCompCodes:
      get:
        tags:
          - LookupValues
        summary: Gets all workers comp code options
        operationId: LookupValues_GetCompanyWorkersCompCodes
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/EEOClasses:
      get:
        tags:
          - LookupValues
        summary: Gets all workers comp code options
        operationId: LookupValues_GetCompanyEqualEmploymentOpportunityClasses
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/EarningCodes:
      get:
        tags:
          - LookupValues
        summary: Gets all Earning code records associated for the provided company
        operationId: LookupValues_GetEarningCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/DeductionCodes:
      get:
        tags:
          - LookupValues
        summary: Gets all Deduction code records associated for the provided company
        operationId: LookupValues_GetDeductionCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/PayFrequencies:
      get:
        tags:
          - LookupValues
        summary: Gets all Pay Frequency records associated for the provided company
        operationId: LookupValues_GetPayFrequencies
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/TerminationReasons:
      get:
        tags:
          - LookupValues
        summary: Gets all Termination reasons records associated for the provided company
        operationId: LookupValues_GetTerminationReasons
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/JobCodes:
      get:
        tags:
          - LookupValues
        summary: Gets all Job code records associated for the provided company
        operationId: LookupValues_GetJobCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/CostCenter1:
      get:
        tags:
          - LookupValues
        summary: Gets all Cost Center 1 records associated for the provided company
        operationId: LookupValues_GetCc1
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/CostCenter2:
      get:
        tags:
          - LookupValues
        summary: Gets all Cost Center 2 records associated for the provided company
        operationId: LookupValues_GetCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/CostCenter3:
      get:
        tags:
          - LookupValues
        summary: Gets all Cost Center 3 records associated for the provided company
        operationId: LookupValues_GetCc3
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/CostCenter4:
      get:
        tags:
          - LookupValues
        summary: Gets all Cost Center 4 records associated for the provided company
        operationId: LookupValues_GetCc4
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/CostCenter5:
      get:
        tags:
          - LookupValues
        summary: Gets all Cost Center 5 records associated for the provided company
        operationId: LookupValues_GetCc5
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/ShiftCodes:
      get:
        tags:
          - LookupValues
        summary: Gets all Shift code records associated for the provided company
        operationId: LookupValues_GetShiftCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Taxes:
      get:
        tags:
          - LookupValues
        summary: Gets all Company Tax records associated for the provided company
        operationId: LookupValues_GetTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Taxes/State/{state}:
      get:
        tags:
          - LookupValues
        summary: >-
          Gets all Company Tax records associated for the provided company and
          state
        operationId: LookupValues_GetStateTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: state
            in: path
            description: The state
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Taxes/Local/{state}:
      get:
        tags:
          - LookupValues
        summary: >-
          Gets all local Company Tax records associated for the provided company
          and state
        operationId: LookupValues_GetLocalTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: state
            in: path
            description: The state
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Taxes/Local:
      get:
        tags:
          - LookupValues
        summary: Gets all Company Tax local records associated for the provided company
        operationId: LookupValues_GetLocalTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Accrual:
      get:
        tags:
          - LookupValues
        summary: Gets all Company accrual records associated for the provided company
        operationId: LookupValues_GetAccruals
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/OnboardingFlow:
      get:
        tags:
          - LookupValues
        summary: >-
          Gets all Company onboarding flow records associated for the provided
          company
        operationId: LookupValues_GetOnboardingFlow
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/HiringManagers:
      get:
        tags:
          - LookupValues
        summary: Gets all Company hiring managers for the provided company
        operationId: LookupValues_GetHiringManagers
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Batches:
      get:
        tags:
          - LookupValues
        summary: Gets all valid batch names for the current calendar period
        operationId: LookupValues_GetCurrentCalendarBatches
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Batches/{calendarId}:
      get:
        tags:
          - LookupValues
        summary: Gets all valid batch names for the specified calendar
        operationId: LookupValues_GetCalendarBatches
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarId
            in: path
            description: The calendar id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/RaiseReasons:
      get:
        tags:
          - LookupValues
        summary: Gets all valid rate change reasons
        operationId: LookupValues_GetRaiseReasons
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Ethnicities:
      get:
        tags:
          - LookupValues
        summary: Gets all ethniticy options
        operationId: LookupValues_GetEthniticties
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Lookup/Rates:
      get:
        tags:
          - LookupValues
        summary: Gets all rates
        operationId: LookupValues_GetRates
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/ManualCheck:
      post:
        tags:
          - ManualCheck
        summary: Adds earnings to one or more employee check(s) in the manual batch.
        operationId: ManualCheck_Calculate
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckRequestModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CheckRequestModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/CheckRequestModel'
          description: >-
            Properties of a check as defined by
            {WebProduct.API.Company.Models.ViewModels.Company.CheckRequestModel}
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '404':
            description: Company or deduction code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Onboarding:
      post:
        tags:
          - Onboarding
        summary: Creates an employee for a company
        operationId: Onboarding_OnboardEmployee
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
          description: The employee record
          required: true
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Onboarding/GetOnboardingSettings:
      get:
        tags:
          - Onboarding
        summary: "Various setting required for onboarding UI that hosted by exteranl system\r\nThese settings provides configured RPO values to external systems which can be mapped to new hire data"
        operationId: Onboarding_GetOnboardingSettings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_OnboardingSettingsViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_OnboardingSettingsViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /Company/{companyId}/PayHistory:
      get:
        tags:
          - PayHistory
        summary: >-
          Gets all Accrual records associated for the provided company and
          employee
        operationId: PayHistory_SearchPayHistory
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: startDate
            in: query
            description: Pay history start date (required)
            required: true
            schema:
              type: string
              format: date-time
          - name: endDate
            in: query
            description: Pay history end date (required)
            required: true
            schema:
              type: string
              format: date-time
          - name: cc1
            in: query
            description: Cost center 1 filter
            required: false
            schema:
              type: string
          - name: cc2
            in: query
            description: Cost center 2 filter
            required: false
            schema:
              type: string
          - name: cc3
            in: query
            description: Cost center 3 filter
            required: false
            schema:
              type: string
          - name: cc4
            in: query
            description: Cost center 4 filter
            required: false
            schema:
              type: string
          - name: cc5
            in: query
            description: Cost center 5 filter
            required: false
            schema:
              type: string
          - name: jobCode
            in: query
            description: Job code filter
            required: false
            schema:
              type: string
          - name: shiftCode
            in: query
            description: Shift code filter
            required: false
            schema:
              type: string
          - name: wcc
            in: query
            description: Workers comp code filter
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayHistorySearchResults_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayHistorySearchResults_
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/PayHistory/Details:
      get:
        tags:
          - PayHistory
        summary: Get pay history for employees including paycheck details
        operationId: PayHistory_GetEmployeePayHistory
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: startDate
            in: query
            description: Pay history start date (required)
            required: true
            schema:
              type: string
              format: date-time
          - name: endDate
            in: query
            description: Pay history end date (required)
            required: true
            schema:
              type: string
              format: date-time
          - name: employeeIds
            in: query
            description: Comma delimited list of employee ids to filter on
            required: false
            schema:
              type: string
          - name: cc1
            in: query
            description: Cost center 1 filter
            required: false
            schema:
              type: string
          - name: cc2
            in: query
            description: Cost center 2 filter
            required: false
            schema:
              type: string
          - name: cc3
            in: query
            description: Cost center 3 filter
            required: false
            schema:
              type: string
          - name: cc4
            in: query
            description: Cost center 4 filter
            required: false
            schema:
              type: string
          - name: cc5
            in: query
            description: Cost center 5 filter
            required: false
            schema:
              type: string
          - name: jobCode
            in: query
            description: Job code filter
            required: false
            schema:
              type: string
          - name: shiftCode
            in: query
            description: Shift code filter
            required: false
            schema:
              type: string
          - name: wcc
            in: query
            description: Workers comp code filter
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayHistoryDetails_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayHistoryDetails_
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/PayHistory/{transactionId}/PayStub:
      get:
        tags:
          - PayHistory
        summary: Get pay history for employees including paycheck details
        operationId: PayHistory_GetEmployeePayStub
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: transactionId
            in: path
            description: The transaction id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: OK
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/start:
      post:
        tags:
          - Payroll
        summary: Starts a scheduled payroll
        operationId: Payroll_StartPayroll
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/restart/{batch}:
      post:
        tags:
          - Payroll
        summary: Restarts an open payroll
        operationId: Payroll_RestartBatch
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
          - name: batch
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/preprocess:
      get:
        tags:
          - Payroll
        summary: >-
          Pre-calculates the payroll to identify any issues and returns a preview
          of all checks in the payroll
        operationId: Payroll_GetPreprocessResults
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Payroll
        summary: Pre-calculates the payroll to identify any issues
        operationId: Payroll_PreprocessPayroll
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
          - name: batch
            in: query
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/approve/{batch}:
      post:
        tags:
          - Payroll
        summary: Approves all batches in the calendar
        operationId: Payroll_ApproveBatches
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
          - name: batch
            in: path
            description: >-
              Specific batch to approve, optional. All batches will be approved if
              excluded
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/verify:
      get:
        tags:
          - Payroll
        summary: >-
          Gets the payroll verification results that were created from the verify
          POST request
        operationId: Payroll_GetVerifications
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Payroll
        summary: Runs payroll verification tests and returns the results
        operationId: Payroll_VerifyPayroll
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/verify/{verificationId}:
      post:
        tags:
          - Payroll
        summary: Approves a verification test
        operationId: Payroll_ApproveVerification
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
          - name: verificationId
            in: path
            description: The id of the verification test to be
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/verify/all:
      post:
        tags:
          - Payroll
        summary: Approves all verification tests
        operationId: Payroll_ApproveVerifications
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Payroll/{calendarGuid}/submit:
      post:
        tags:
          - Payroll
        summary: Submits an approved payroll
        operationId: Payroll_SubmitPayroll
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarGuid
            in: path
            description: The id for the payroll calendar
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or calendar not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Pto:
      get:
        tags:
          - Pto
        summary: Gets all pto requests within a date range for a company
        operationId: Pto_GetPtos
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: startDate
            in: query
            description: PTO request start Date
            required: false
            schema:
              type: string
              format: date-time
          - name: endDate
            in: query
            description: PTO request end Date
            required: false
            schema:
              type: string
              format: date-time
          - name: employeeIds
            in: query
            description: Comma delimited list of employee ids for filtering
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
          '400':
            description: Bad Request!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Rate:
      get:
        tags:
          - Rate
        summary: Gets rates for an employee in a company
        operationId: Rate_GetEmployeeRate
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeRateViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeRateViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Rate
        summary: Creates rate for an employee in a company
        operationId: Rate_CreateEmployeeRate
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeRateViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Rate/{rateId}:
      put:
        tags:
          - Rate
        summary: Updates rate for an employee in a company
        operationId: Rate_UpdateEmployeeRate
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: rateId
            in: path
            description: The rate id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeRateViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Rate
        summary: Deletes a rate for an employee in a company
        operationId: Rate_DeleteEmployeeRate
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: rateId
            in: path
            description: The rate id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Success! rate deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee or rate not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Report:
      get:
        tags:
          - Report
        summary: Gets a list of reports available for run
        operationId: Report_GetReportList
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_ReportListItem_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_ReportListItem_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Report/{reportId}:
      get:
        tags:
          - Report
        summary: Runs and returns content for the report
        operationId: Report_GetReport
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: reportId
            in: path
            description: The report id
            required: true
            schema:
              type: string
              format: uuid
          - name: options.outputFormat
            in: query
            description: File output type (e.g. PDF, Excel, Word). Defaults to PDF
            required: false
            schema:
              type: string
          - name: options.sortBy
            in: query
            description: Comma delimited list of sortby columns
            required: false
            schema:
              type: string
          - name: options.option
            in: query
            description: Run option (e.g. Summary or Detail). Defaults to Detail
            required: false
            schema:
              type: string
          - name: options.beginCheckDate
            in: query
            description: >-
              Start check date. Must be a valid check date. If provided
              EndCheckDate, BeginProcess, and EndProcess is required
            required: false
            schema:
              type: string
              format: date-time
          - name: options.endCheckDate
            in: query
            description: >-
              End check date. Must be a valid check date. If provided
              BeginCheckDate, BeginProcess, and EndProcess is required
            required: false
            schema:
              type: string
              format: date-time
          - name: options.beginProcess
            in: query
            description: The process number associated with the begin check date
            required: false
            schema:
              type: integer
              format: int64
          - name: options.endProcess
            in: query
            description: The process number associated with the end check date
            required: false
            schema:
              type: integer
              format: int64
          - name: options.beginDate
            in: query
            description: Begin date for report date range. If provided, EndDate is required
            required: false
            schema:
              type: string
              format: date-time
          - name: options.endDate
            in: query
            description: End date for report date range. If provided, BeginDate is required
            required: false
            schema:
              type: string
              format: date-time
        responses:
          '200':
            description: OK
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Report/{reportId}/Parameters:
      get:
        tags:
          - Report
        summary: Gets a collection of valid parameters to pass as report options
        operationId: Report_GetReportParameters
        parameters:
          - name: companyId
            in: path
            required: true
            schema:
              type: string
          - name: reportId
            in: path
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_ReportProperties_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_ReportProperties_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or report not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Review:
      get:
        tags:
          - Review
        summary: Gets Reviews for an employee in a company
        operationId: Review_GetEmployeeReviews
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Review/{reviewId}:
      get:
        tags:
          - Review
        summary: Gets Reviews for an employee in a company
        operationId: Review_GetEmployeeReview
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: reviewId
            in: path
            description: The employee review unique identifier
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Review:
      get:
        tags:
          - Review
        summary: Gets Reviews for an employee in a company
        operationId: Review_SearchEmployeeReviews
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: searchCriteria.effectiveStartDate
            in: query
            description: The effective date range start
            required: false
            schema:
              type: string
              format: date-time
          - name: searchCriteria.effectiveEndDate
            in: query
            description: The effective date range end
            required: false
            schema:
              type: string
              format: date-time
          - name: searchCriteria.employeeIds
            in: query
            description: Limit result set to specified comma delimited list of employee ids
            required: false
            schema:
              type: string
          - name: searchCriteria.pageSize
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: searchCriteria.pageNumber
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: searchCriteria.sortByProperty
            in: query
            description: >-
              Property to sort results by. Valid properties include any from the
              return entity.
            required: false
            schema:
              type: string
          - name: searchCriteria.sortDirection
            in: query
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewSearchViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeReviewSearchViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/ShiftCode:
      get:
        tags:
          - ShiftCode
        summary: Gets all Shift code records associated for the provided company
        operationId: ShiftCode_GetShiftCodes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_ShiftCodeViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_ShiftCodeViewModel_
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      post:
        tags:
          - ShiftCode
        summary: Creates a shift code record for the provided company
        operationId: ShiftCode_CreateECode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/ShiftCodeViewModel'
        responses:
          '201':
            description: Success! Record has been created!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or shift code not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/ShiftCode/{code}:
      get:
        tags:
          - ShiftCode
        summary: Gets a shift code record for the provided company
        operationId: ShiftCode_GetCc2
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_ShiftCodeViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_ShiftCodeViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
      put:
        tags:
          - ShiftCode
        summary: Updates a shift code record for the provided company
        operationId: ShiftCode_UpdateShiftCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The shift code
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/ShiftCodeViewModel'
        responses:
          '200':
            description: Success! Record has been updated!
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or shift code not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - ShiftCode
        summary: Deletes a shift code record for the provided company
        operationId: ShiftCode_DeleteShiftCode
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The code
            required: true
            schema:
              type: string
        responses:
          '202':
            description: Accepted
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: NotFound
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Skill:
      get:
        tags:
          - Skill
        summary: Gets skills for an employee in a company
        operationId: Skill_GetEmployeeSkills
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeSkillViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeSkillViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Skill
        summary: Creates Skill for an employee in a company
        operationId: Skill_CreateEmployeeSkill
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeSkillViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Skill/{skillId}:
      put:
        tags:
          - Skill
        summary: Updates Skill for an employee in a company
        operationId: Skill_UpdateEmployeeSkill
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: skillId
            in: path
            description: The Skill id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeSkillViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Skill
        summary: Deletes a skill for an employee in a company
        operationId: Skill_DeleteEmployeeSkill
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: skillId
            in: path
            description: The skill id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Success! Skill deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee or skill not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Tax:
      get:
        tags:
          - Tax
        summary: Gets all Company Tax records associated for the provided company
        operationId: Tax_GetTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Tax/{code}:
      get:
        tags:
          - Tax
        summary: Gets a Company Tax record for the provided company
        operationId: Tax_GetTax
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: code
            in: path
            description: The record id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_TaxViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_TaxViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or tax not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Tax/State/{state}:
      get:
        tags:
          - Tax
        summary: >-
          Gets all Company Tax records associated for the provided company and
          state
        operationId: Tax_GetStateTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: state
            in: path
            description: The state
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Tax/Local/{state}:
      get:
        tags:
          - Tax
        summary: >-
          Gets all local Company Tax records associated for the provided company
          and state
        operationId: Tax_GetLocalTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: state
            in: path
            description: The state
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Tax/Local:
      get:
        tags:
          - Tax
        summary: Gets all Company Tax local records associated for the provided company
        operationId: Tax_GetLocalTaxes
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/TimeImport/{calendarId}:
      get:
        tags:
          - TimeImport
        summary: Gets the result of an existing import by calendar and service provider
        operationId: TimeImport_GetTimeImportResults
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarId
            in: path
            description: The calendar id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - TimeImport
        summary: Starts time import(s) for the calendar
        operationId: TimeImport_RunTimeImport
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: calendarId
            in: path
            description: The calendar id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Training:
      get:
        tags:
          - Training
        summary: Gets training for an employee in a company
        operationId: Training_GetEmployeeTrainings
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeTrainingViewModel_
              text/json:
                schema:
                  $ref: >-
                    #/components/schemas/ResponseDataWrapper_List_EmployeeTrainingViewModel_
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Employee or Company not found
        security:
          - oauth2:
              - Company
      post:
        tags:
          - Training
        summary: Creates training for an employee in a company
        operationId: Training_CreateEmployeeTraining
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmployeeTrainingViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company or employee not found
        security:
          - oauth2:
              - Company
    /Company/{companyId}/Employee/{employeeId}/Training/{trainingId}:
      put:
        tags:
          - Training
        summary: Updates training for an employee in a company
        operationId: Training_UpdateEmployeeTraining
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: trainingId
            in: path
            description: The Training id
            required: true
            schema:
              type: string
              format: uuid
        requestBody:
          $ref: '#/components/requestBodies/EmployeeTrainingViewModel'
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee or training found
        security:
          - oauth2:
              - Company
      delete:
        tags:
          - Training
        summary: Deletes a training record for an employee in a company
        operationId: Training_DeleteEmployeeTraining
        parameters:
          - name: companyId
            in: path
            description: The company id
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: The employee id
            required: true
            schema:
              type: string
          - name: trainingId
            in: path
            description: The training id
            required: true
            schema:
              type: string
              format: uuid
        responses:
          '202':
            description: Success! Training record deleted
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '404':
            description: Company, employee or training not found
        security:
          - oauth2:
              - Company
    /utility/version:
      get:
        tags:
          - Utility
        summary: Gets the current API version
        operationId: Utility_Version
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
        security:
          - oauth2:
              - Company
    /utility/health:
      get:
        tags:
          - Utility
        summary: Gets the API health status
        operationId: Utility_Health
        responses:
          '200':
            description: API Up status, Database access status, and Current API version
            content:
              application/json:
                schema:
                  type: object
              text/json:
                schema:
                  type: object
        security:
          - oauth2:
              - Company
    /utility/allowedPaths:
      get:
        tags:
          - Utility
        summary: Gets a list of allowed paths for the current user.
        operationId: Utility_GetUserApiPaths
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_StringArray_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_StringArray_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
    /utility/clientSecret:
      post:
        tags:
          - Utility
        summary: Creates a new client secret for the API user
        operationId: Utility_ResetClientSecret
        responses:
          '200':
            description: Success!
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
          '400':
            description: BadRequest
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
              text/json:
                schema:
                  $ref: '#/components/schemas/ResponseDataWrapper_String_'
        security:
          - oauth2:
              - Company
  servers:
    - url: https://www.readypayonline.com/CompanyAPI
  components:
    requestBodies:
      EmployeeDeductionCodeViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
        description: The deduction code to be created
        required: true
      EmployeeLicenseViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeLicenseViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeLicenseViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeLicenseViewModel'
        description: The license model
        required: true
      EarningCodeViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarningCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EarningCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarningCodeViewModel'
        description: The earning code to be created
        required: true
      EarningImportViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarningImportViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EarningImportViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EarningImportViewModel'
        description: >-
          Contains a list of earnings record to be added to paychecks, in addition
          to import configuration settings
        required: true
      EmployeeCertificationViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCertificationViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeCertificationViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeCertificationViewModel'
        description: The certification model
        required: true
      EmployeeRateViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRateViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeRateViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeRateViewModel'
        description: The rate model
        required: true
      DeductionCodeViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeductionCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DeductionCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeductionCodeViewModel'
        description: The deduction code to be created
        required: true
      CostCenterViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCenterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CostCenterViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CostCenterViewModel'
        description: The cost center to be created
        required: true
      EmployeeSkillViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkillViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeSkillViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeSkillViewModel'
        description: The Skill model
        required: true
      EmployeeAccrualViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAccrualViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeAccrualViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeAccrualViewModel'
        description: The accrual to be created
        required: true
      CompanyAccrualViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAccrualViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CompanyAccrualViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyAccrualViewModel'
        description: The accrual to be created
        required: true
      EmployeeEducationViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEducationViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEducationViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeEducationViewModel'
        description: The Education model
        required: true
      EmployeeEarningCodeViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
        description: The earning code to be created
        required: true
      ShiftCodeViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ShiftCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShiftCodeViewModel'
        description: The shift code to be created
        required: true
      EmployeeTrainingViewModel:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeTrainingViewModel'
        description: The Training model
        required: true
    securitySchemes:
      oauth2:
        type: oauth2
        description: Client Credentials Flow
        flows:
          clientCredentials:
            tokenUrl: https://www.readypayonline.com/CompanyAPI/identity/connect/token
            scopes:
              Company: Access to Proliant API endpoints
    schemas:
      EmployeeAccrualViewModel:
        required:
          - code
          - startDate
          - lengthOfService
          - lastAccrueDate
        type: object
        properties:
          code:
            description: The benefit code
            type: string
          startDate:
            format: date-time
            description: The start date
            type: string
          endDate:
            format: date-time
            description: The end date
            type: string
          lengthOfService:
            format: date-time
            description: The length of service
            type: string
          rate:
            format: double
            description: The rate
            type: number
          amount:
            format: double
            description: The amount
            type: number
          hours:
            format: double
            description: The hours
            type: number
          maximum:
            format: double
            description: The maximum
            type: number
          carryOverMaximum:
            format: double
            description: The maximum
            type: number
          overrideRate:
            description: Override rate?
            type: boolean
          overrideHours:
            description: Override hours?
            type: boolean
          overrideAmount:
            description: Override amount?
            type: boolean
          usedHours:
            format: double
            description: The used hours
            type: number
          usedAmount:
            format: double
            description: The used amount
            type: number
          availableHours:
            format: double
            description: The available hours
            type: number
          availableAmount:
            format: double
            description: The available amount
            type: number
          lastAccrueDate:
            format: date-time
            description: The last accrue date
            type: string
          lastChangeDateTime:
            format: date-time
            description: The date/time of the last update
            type: string
          lastChangeUser:
            description: The user who last updated this record
            type: string
          probationHours:
            format: double
            description: The probation hours
            type: number
          probationDollars:
            format: double
            description: The probation dollars
            type: number
          accruedHours:
            format: double
            description: The accrued hours
            type: number
          accruedDollars:
            format: double
            description: The accrued dollars
            type: number
          grantedHours:
            format: double
            description: The granted hours
            type: number
          grantedDollars:
            format: double
            description: The granted dollars
            type: number
      CompanyAccrualViewModel:
        required:
          - code
          - probationDays
          - hoursBased
          - hoursOrDollars
          - divisor
          - decimals
          - applyRulesESTA
          - allowRequests
          - allowNegativeRequests
        type: object
        properties:
          code:
            description: The benefit code
            type: string
          description:
            description: "Arbitrary abbreviation company chooses to identify the benefit. \r\nHowever, if this accrual is to satisfy ESTA laws, then bcode should follow a naming standard so that the accrual \r\nscripts can identify the accrual for ESTA calculations. ''SICKCT'' for Connecticut ESTA PTO, \r\n''SICKNYC'' for New York City ESTA PTO, etc."
            type: string
          probationDays:
            format: int32
            description: >-
              Number of days after HireDate before employee is allowed to use
              accrued time.
            maximum: 32767
            minimum: 0
            type: integer
          frequency:
            description: The frequency code
            type: string
          hoursBased:
            description: Is the accrual hours based?
            type: boolean
          benefitEarningCode:
            description: The benefit earning code
            type: string
          workedEarningCode:
            description: The worked earning code
            type: string
          whenCleared:
            description: When the accrual should be cleared
            type: string
          minimumHours:
            format: double
            description: The minimum hours
            type: number
          maximumAccrueAgainstHours:
            format: double
            description: The maximum hours to accrue
            type: number
          newEmployeeFilter:
            description: The new employee filter name
            type: string
          printOnStub:
            description: Code to be used for printing on the check stub
            type: string
          transferBenefitCode:
            description: The transfer benefit code
            type: string
          hoursOrDollars:
            description: >-
              Determines whether accrual is paid as hours or dollars against a
              rate. True means hours, false means dollars
            type: boolean
          checkStubDesc:
            description: Description to be used on the check stub
            type: string
          divisor:
            format: int32
            description: The divisor
            maximum: 9
            minimum: 0
            type: integer
          lastDate:
            format: date-time
            description: The last date in which the accrual can be paid
            type: string
          decimals:
            format: int32
            description: The number of decimals to be used for precision
            maximum: 9
            minimum: 0
            type: integer
          Id:
            format: uuid
            description: The unique identifier for the record
            type: string
            example: 00000000-0000-0000-0000-000000000000
          lastChangeDateTime:
            format: date-time
            description: The date/time of the last update
            type: string
          lastChangeUser:
            description: The user who last updated this record
            type: string
          employeeOverrideMaxIsAvailable:
            description: Employee override max is available
            type: boolean
          transferExcessBenefitCode:
            description: Transfer Excess Benefit Code
            type: string
          transferExcessMaximum:
            format: double
            description: Maximum accrual to be transfered
            type: number
          whenClearedDays:
            format: int32
            description: The when cleared days
            type: integer
          paidEmployeesOnly:
            description: Applies only to employees with pay
            type: boolean
          calcDollarsWithCurrentPayRate:
            description: Calculate dollars against hours using the current pay rate
            type: boolean
          serviceOption:
            description: The service option
            type: string
          applyRulesESTA:
            description: "Used by scripts to calculate accrual mandated by Earned Sick Time Act laws.         \r\nIf this field is false, it does not necessarily mean that this accrual is not an ESTA accrual, \r\njust that certain scripts are not needed."
            type: boolean
          allowRequests:
            type: boolean
          allowNegativeRequests:
            type: boolean
      EmployeeCertificationViewModel:
        required:
          - code
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          code:
            type: string
          description:
            type: string
          number:
            type: string
          effectiveDate:
            format: date-time
            type: string
          expirationDate:
            format: date-time
            type: string
          companyPaid:
            format: double
            type: number
          employeePaid:
            format: double
            type: number
          reimbursed:
            type: boolean
          notes:
            type: string
      LookupCodeViewModel:
        description: Simplified model used for returning lookup lists
        type: object
        properties:
          value:
            description: The value of the lookup item
            type: string
          description:
            description: The description of the lookup item
            type: string
      CompanyInformationViewModel:
        description: The company information view model
        type: object
        properties:
          address1:
            description: Company address line 1
            type: string
          address2:
            description: Company address line 2
            type: string
          adminHold:
            description: Is company on admin hold?
            type: boolean
          aggregateFilings:
            description: Should aggregate filings?
            type: boolean
          aggregateLimits:
            description: Should aggregate limits?
            type: boolean
          allowBackDate:
            description: Should allow back date entries?
            type: boolean
          allowSameDate:
            description: Should allow same date pay?
            type: boolean
          autoPayEmployees:
            description: Should auto pay employees?
            type: boolean
          autoPostRecurring:
            description: Should auto post recurring lines?
            type: boolean
          batchByPaygroup:
            description: Should employees be batched by paygroup?
            type: boolean
          calendarId:
            description: Current calendar id
            type: string
          costCenter1Description:
            description: Value used for cost center 1 labels
            type: string
          costCenter2Description:
            description: Value used for cost center 2 labels
            type: string
          costCenter3Description:
            description: Value used for cost center 3 labels
            type: string
          costCenter4Description:
            description: Value used for cost center 4 labels
            type: string
          costCenter5Description:
            description: Value used for cost center 5 labels
            type: string
          checkCalcSettings:
            description: Check calculation setting string
            type: string
          checkCalcWarnings:
            description: Check calculation warnings
            type: string
          city:
            description: City
            type: string
          co:
            description: Company id
            type: string
          primaryContactName:
            description: Primary contact name
            type: string
          primaryContactEmail:
            description: Primary contact email
            type: string
          primaryContactExtension:
            description: Primary contact extension
            type: string
          primaryContactPhone:
            description: Primary contact phone number
            type: string
          primaryContactTitle:
            description: Primary contact title
            type: string
          secondaryContactName:
            description: Secondary contact name
            type: string
          secondaryContactEmail:
            description: Secondary contact email
            type: string
          secondaryContactExtension:
            description: Secondary contact extension
            type: string
          secondaryContactPhone:
            description: Secondary contact phone number
            type: string
          secondaryContactTitle:
            description: Secondary contact title
            type: string
          otherContact:
            description: Other/Third contact name
            type: string
          otherContactEmail:
            description: Other/Third contact email
            type: string
          otherContactExtension:
            description: Other/third contact extension
            type: string
          otherContactPhone:
            description: Other/thrid contact phone number
            type: string
          otherContactTitle:
            description: Other/third contact title
            type: string
          country:
            description: Country
            type: string
          county:
            description: County
            type: string
          customerServiceRepresentive1:
            description: Primary customer service representative name
            type: string
          customerServiceRepresentive2:
            description: Secondary customer service representative name
            type: string
          customerServiceRepresentiveHold:
            description: Is company on customer service hold?
            type: boolean
          defaultAlwaysBlockDirDepOnVoid:
            description: Should void checks always have direct deposits blocked?
            type: boolean
          defaultBatch:
            description: Default payroll batch
            type: string
          defaultBlockDirDepOnVoid:
            description: Should void checks have direct deposits blocked by default?
            type: boolean
          defaultCostCenter1:
            description: Default cost center 1 value
            type: string
          defaultCostCenter2:
            description: Default cost center 2 value
            type: string
          defaultCostCenter3:
            description: Default cost center 3 value
            type: string
          defaultCostCenter4:
            description: Default cost center 4 value
            type: string
          defaultCostCeter5:
            description: Default cost center 5 value
            type: string
          defaultEmpStatus:
            description: Default employee status
            type: string
          defaultPayFrequency:
            description: Default pay frequency
            type: string
          defaultState:
            description: Default state
            type: string
          defaultTermDate:
            description: Default termination date
            type: string
          deliverAfter:
            description: Deliver after
            type: string
          deliverBy:
            description: Deliver by
            type: string
          deliveryAddress1:
            description: Delivery address line 1
            type: string
          deliveryAddress2:
            description: Delivery address line 2
            type: string
          deliveryCity:
            description: Delivery address city
            type: string
          deliveryMemo:
            description: Delivery address memo
            type: string
          deliveryServiceBureauGroupId:
            description: Delivery service bureau group id
            type: string
          deliveryService:
            description: Delivery service
            type: string
          deliveryState:
            description: Delivery state
            type: string
          deliveryZip:
            description: Delivery zip/postal code
            type: string
          dependentInsuranceAvailable:
            description: Is dependent service available?
            type: boolean
          emailContact:
            description: Company contact email address
            type: string
          employeePrenoteDays:
            format: int32
            description: Employee prenote days
            type: integer
          employerKind:
            description: Employer kind description
            type: string
          employmentType:
            description: Employment type code
            type: string
          endDate:
            format: date-time
            description: Company record end date
            type: string
          fax:
            description: Fax number
            type: string
          fiscalStartDay:
            format: int32
            description: Fiscal start day
            type: integer
          fiscalStartMonth:
            format: int32
            description: Fiscal start month
            type: integer
          fmlaCalculationType:
            description: Family medical leave of absence calculation type
            type: string
          generalLedger1Description:
            description: General Ledger 1 description
            type: string
          generalLedger2Description:
            description: General Ledger 2 description
            type: string
          generalLedger3Description:
            description: General Ledger 3 description
            type: string
          generalLedger4Description:
            description: General Ledger 4 description
            type: string
          generalLedger5Description:
            description: General Ledger 5 description
            type: string
          generalLedger6Description:
            description: General Ledger 6 description
            type: string
          hourlyBatch:
            description: Default hourly batch
            type: string
          inputDay:
            description: Input day
            type: string
          inputNotes:
            description: Input notes
            type: string
          inputTime:
            description: Input time
            type: string
          inputType:
            description: Input type
            type: string
          localQueueDelay:
            format: int32
            description: Local queue delay
            type: integer
          name:
            description: The company name
            type: string
          nextVoucherNumber:
            description: The next voucher number
            type: string
          operationHold:
            description: Is company on operational hold?
            type: boolean
          organizationType:
            description: The company organization type
            type: string
          overtimeCode:
            description: Default overtime code
            type: string
          packoutNotes:
            description: The packout notes
            type: string
          parentCompany:
            description: The parent company ID
            type: string
          payEntryPopOnScreen:
            description: Is pay entry popup on screen?
            type: boolean
          payEntryPopProcessing:
            description: Is pay entry population processing
            type: boolean
          payEntryPopRateFromDept:
            description: Is pay entry populated from department
            type: boolean
          payEntryPopUpdate:
            description: Is pay entry population updating
            type: boolean
          payImportFilename:
            description: The pay import file name
            type: string
          payImportType:
            description: The pay import type
            type: string
          payPeriodEffectiveDateOption:
            description: Is pay period effective date option?
            type: boolean
          payRateDoNotOverride:
            description: Can pay rates be overridden?
            type: boolean
          payRateModifier:
            format: int32
            description: Base pay rate modifier
            type: integer
          payRateSelectCtrl:
            format: int32
            description: Pay rate selection control
            type: integer
          payRateSelectPrecedence:
            description: Pay rate selection prescedence
            type: string
          phone:
            description: Company phone number
            type: string
          recalcDefaultHours:
            format: double
            description: Default hours for recalculation
            type: number
          recalcPayRate:
            description: Is recalc pay rate?
            type: boolean
          recalcSalary:
            description: Is recalc salary?
            type: boolean
          regularCode:
            description: The regular code
            type: string
          remoteQueueDelay:
            format: int32
            description: The remote queue delay
            type: integer
          salaryBatch:
            description: Default salary batch name
            type: string
          salaryCode:
            description: Default salary code
            type: string
          serviceBureauGroupId:
            description: The service bureau group id
            type: string
          scheduledDay:
            description: The scheduled day
            type: string
          seasonal:
            description: Is seasonal?
            type: boolean
          seasonalEndDay:
            format: int32
            description: Seasonal end day
            type: integer
          seasonalEndMonth:
            format: int32
            description: Seasonal end month
            type: integer
          seasonalStartDay:
            format: int32
            description: Seasonal start day
            type: integer
          seasonalStartMonth:
            format: int32
            description: Seasonal start month
            type: integer
          sicCode:
            description: The sic code
            type: string
          startDateField:
            description: The start date field
            type: string
          state:
            description: Address state
            type: string
          status:
            description: Company status
            type: string
          syncLocation:
            description: The sync location
            type: string
          syncManual:
            description: Is manual sync?
            type: boolean
          taxableReimbursementCode:
            description: Code representing taxable reimbursement
            type: string
          taxCloseDate:
            format: date-time
            description: Tax close date
            type: string
          taxHold:
            description: Is tax hold
            type: boolean
          terminated:
            description: Is company terminated
            type: boolean
          terminationWizard:
            description: Does company use the termination wizard
            type: boolean
          testCompany:
            description: Is test company
            type: boolean
          timeclockBatch:
            description: Default batch name to use for timeclock imports
            type: string
          useNewRateOverrideCode:
            description: Is use new rate override code
            type: boolean
          custom1Description:
            description: Label for custom field 1
            type: string
          custom2Description:
            description: Label for custom field 2
            type: string
          custom3Description:
            description: Label for custom field 3
            type: string
          custom4Description:
            description: Label for custom field 4
            type: string
          custom5Description:
            description: Label for custom field 5
            type: string
          custom6Description:
            description: Label for custom field 6
            type: string
          custom7Description:
            description: Label for custom field 7
            type: string
          custom8Description:
            description: Label for custom field 8
            type: string
          customCheck1Description:
            description: Label for custom check box 1
            type: string
          customCheck2Description:
            description: Label for custom check box 2
            type: string
          customCheck3Description:
            description: Label for custom check box 3
            type: string
          customCheck4Description:
            description: Label for custom check box 4
            type: string
          customCheck5Description:
            description: Label for custom check box 5
            type: string
          verifyPayroll:
            description: Does payroll require verification
            type: boolean
          webAddress:
            description: The company web address
            type: string
          zip:
            description: Company address zip/postal code
            type: string
      CostCenterViewModel:
        description: The cost center view model
        required:
          - active
        type: object
        properties:
          active:
            description: Is cost center active?
            type: boolean
          address1:
            description: Cost center address line 1
            type: string
          address2:
            description: Cost center address line 2
            type: string
          code:
            description: Cost center code
            type: string
          city:
            description: Cost center address city
            type: string
          country:
            description: Cost center address country
            type: string
          county:
            description: Cost center address county
            type: string
          name:
            description: Cost center display name
            type: string
          overrideCheckAcctName:
            description: Cost center level override for default checking account
            type: string
          overrideRate:
            format: double
            description: Cost center level override for default rate value
            type: number
          overrideRateCode:
            description: Cost center level override for default rate code
            type: string
          overrideShift:
            description: Cost center level override for default shift code
            type: string
          phone:
            description: Cost center phone number
            type: string
          state:
            description: Cost center address state
            type: string
          supervisor:
            description: Cost center default supervisor
            type: string
          useThisAddrOnChecks:
            description: Use this address on checks
            type: boolean
          wcc:
            description: Workers compensation code
            type: string
          zip:
            description: Cost center address Zip/Postal code
            type: string
      EarningImportViewModel:
        description: The earnings import view model
        required:
          - earnings
        type: object
        properties:
          fullTimecardReload:
            description: >-
              If true, all earnings for each employee provided in the earnings
              list will have their checks reset before importing the new earning
              records.
            type: boolean
          includeCheckDetails:
            description: >-
              If true, details related to processed checks will be returned to the
              client
            type: boolean
          earnings:
            description: List of Earning Records to be applied to employee checks.
            type: array
            items:
              $ref: '#/components/schemas/EarningViewModel'
      EarningViewModel:
        description: The earning view model
        required:
          - employeeId
        type: object
        properties:
          employeeId:
            description: The Id of the employee
            type: string
          comment:
            description: Free text comment field for this earning record.
            type: string
          batch:
            description: >-
              Specific batch name to be used for adding the earning record. If not
              provided, it wil be automatically detected by date.
            type: string
          checkDate:
            format: date-time
            description: "Override for logic surrounding determination of calendar to use by Begin Date. \r\nSetting this forces the system to use calendars with the specified check date value."
            type: string
          hours:
            format: double
            description: The number of hours worked this shift
            type: number
          rate:
            format: double
            description: "The rate to be paid per hour for this shift, this value is optional \r\nand will be defaulted to the employee's current pay rate if missing."
            type: number
          earningCode:
            description: >-
              The earning code to be used for this earning record. The earning
              code must exist at the company level.
            type: string
          deductionCode:
            description: >-
              The deduction code to be used for this earning record. The earning
              code must exist at the company level.
            type: string
          amount:
            format: double
            description: The flat amount to be paid to the employee for this earning record.
            type: number
          rateCode:
            description: >-
              The rate code for this earning record. The rate code, if provided,
              must exist at the company level
            type: string
          costCenter1:
            description: >-
              The Cost Center 1 value to be used for this earning record. The cost
              center, if provided, must exist at the company level.
            type: string
          costCenter2:
            description: >-
              The Cost Center 2 value to be used for this earning record. The cost
              center, if provided, must exist at the company level.
            type: string
          costCenter3:
            description: >-
              The Cost Center 3 value to be used for this earning record. The cost
              center, if provided, must exist at the company level.
            type: string
          costCenter4:
            description: >-
              The Cost Center 4 value to be used for this earning record. The cost
              center, if provided, must exist at the company level.
            type: string
          costCenter5:
            description: >-
              The Cost Center 5 value to be used for this earning record. The cost
              center, if provided, must exist at the company level.
            type: string
          jobCode:
            description: >-
              The job code for this earning record. The job code, if provided,
              must exist at the company level
            type: string
          shiftCode:
            description: >-
              The shift code for this earning record. The shift code, if provided,
              must exist at the company level.
            type: string
          workersCompCode:
            description: The Worker Comp code, if provided, for this earning record.
            type: string
          beginDate:
            format: date-time
            description: The date/time for shift start.
            type: string
          endDate:
            format: date-time
            description: The date/time for shift end.
            type: string
          overrideStateTaxCode:
            description: >-
              State tax code to be used in lieu of the employee's default state
              tax.
            type: string
          overrideLocalTaxCode1:
            description: >-
              Local tax code 1 to be used in lieu of the employee's default local
              tax code 1 tax.
            type: string
          overrideLocalTaxCode2:
            description: >-
              Local tax code 2 to be used in lieu of the employee's default local
              tax code 2 tax.
            type: string
          overrideLocalTaxCode3:
            description: >-
              Local tax code 3 to be used in lieu of the employee's default local
              tax code 3 tax.
            type: string
      CompanyCalendarViewModel:
        description: The company calendar view model
        type: object
        properties:
          co:
            description: The Company Id
            type: string
          checkDate:
            format: date-time
            description: The check date.
            type: string
          periodBegin:
            format: date-time
            description: Date when the calendar period begins
            type: string
          periodEnd:
            format: date-time
            description: Date when the calendar period ends
            type: string
          calendarId:
            format: uuid
            description: The Calendar unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          status:
            description: Current calendar payroll status
            type: string
          periodBegunUserId:
            description: The id of the user that starts the pay period
            type: string
          scheduledProcessDate:
            format: date-time
            description: The scheduled process date
            type: string
          actualProcessDate:
            format: date-time
            description: The actual process date
            type: string
          payrollNotes:
            description: The payroll notes
            type: string
          sequence:
            format: int32
            description: Priority of this calendar
            type: integer
          eDirDepAuditReportApprovedBy:
            description: User who approved the employee direct deposit audit report
            type: string
          eDirDepAuditReportApprovedDate:
            format: date-time
            description: Time stamp for employee direct deposit audit report approval
            type: string
      EarningsResponseViewModel:
        description: The earnings response view model
        type: object
        properties:
          paychecks:
            description: List of paychecks affected by the request
            type: array
            items:
              $ref: '#/components/schemas/PaycheckResponseModel'
          message:
            description: Status summary message
            type: string
          taxSetup:
            description: Errors to indicate any issues
            type: array
            items:
              $ref: '#/components/schemas/EarningErrorViewModel'
      PaycheckResponseModel:
        description: The paycheck model
        type: object
        properties:
          employeeId:
            description: The employee id
            type: string
          companyId:
            description: The company id
            type: string
          grossPay:
            format: double
            description: The calculated sum of earning line amounts
            type: number
            readOnly: true
          earnings:
            description: Breakdown of earnings
            type: array
            items:
              $ref: '#/components/schemas/LineDetailWithHours'
          totalDeductions:
            format: double
            description: The calculated sum of deduction line amounts
            type: number
            readOnly: true
          deductions:
            description: The breakdown of deductions
            type: array
            items:
              $ref: '#/components/schemas/LineDetail'
          totalTaxes:
            format: double
            description: The calculated sum of tax line amounts
            type: number
            readOnly: true
          taxes:
            description: The breakdown of taxes
            type: array
            items:
              $ref: '#/components/schemas/LineDetail'
          totalEmployerTaxes:
            format: double
            description: The calculated sum of employer tax line amounts
            type: number
            readOnly: true
          employerTaxes:
            description: The breakdown of employer taxes
            type: array
            items:
              $ref: '#/components/schemas/LineDetail'
          netPay:
            format: double
            description: The net pay.
            type: number
            readOnly: true
          checkDate:
            format: date-time
            description: The check date
            type: string
          batch:
            description: The batch
            type: string
      EarningErrorViewModel:
        description: Represents an error
        type: object
        properties:
          employeeId:
            description: The employee id
            type: string
          errors:
            description: The employee id
            type: array
            items:
              type: string
      LineDetailWithHours:
        description: Detail information for each line item
        type: object
        properties:
          code:
            description: The code
            type: string
          description:
            description: The description
            type: string
          amount:
            format: double
            description: The amount
            type: number
          type:
            description: The type
            type: string
          rate:
            format: double
            description: The rate
            type: number
          hours:
            format: double
            description: The hours
            type: number
      LineDetail:
        description: Detail information for each line item
        type: object
        properties:
          code:
            description: The code
            type: string
          description:
            description: The description
            type: string
          amount:
            format: double
            description: The amount
            type: number
          type:
            description: The type
            type: string
      DeductionCodeViewModel:
        description: The deduction code view model
        type: object
        properties:
          code:
            description: The deduction code
            type: string
          description:
            description: The description
            type: string
          shortDescription:
            description: The short description
            type: string
          dedType:
            description: Deduction type
            type: string
          priority:
            format: int32
            description: Priority
            type: integer
          w2Field:
            description: W2 Field
            type: string
          printOnCheckStub:
            description: Character used for printing deduction on check stub
            type: string
          minimum:
            format: double
            description: Minimum value
            type: number
          maximum:
            format: double
            description: Maximum value
            type: number
          annualMaximum:
            format: double
            description: Annual maximum
            type: number
          rate:
            format: double
            description: Rate
            type: number
          autoDrop:
            description: Auto drop from check if insufficient funds?
            type: boolean
          dropPartial:
            description: Allow partial deduction?
            type: boolean
          autoMakeup:
            description: Automatically make up partial deduction fulfillment?
            type: boolean
          frequency:
            description: Deduction charge frequency
            type: string
          calculationCode:
            description: Calculation code
            type: string
          agency:
            description: Agency
            type: string
          taxExempt:
            description: Tax exempt
            type: string
          grossCheck:
            description: Is gross check?
            type: boolean
          disallowOverrideCalcCode:
            format: int32
            description: Disallow  calculation code override
            type: integer
          disallowOverrideRate:
            format: int32
            description: Disallow rate override
            type: integer
          disallowOverrideFrequency:
            format: int32
            description: Disallow frequency override
            type: integer
          disallowOverrideAgency:
            format: int32
            description: Disallow agency override
            type: integer
          disallowOverrideMinimum:
            format: int32
            description: Disallow minimum value override
            type: integer
          disallowOverrideMaximum:
            format: int32
            description: Disallow maximum value override
            type: integer
          disallowOverrideAnnualMaximum:
            format: int32
            description: Disallow annual maximum value override
            type: integer
          enrollmentEffective:
            description: Enrollment effective
            type: string
          employeeACH:
            description: Is employee ACH?
            type: boolean
          active:
            description: Is active?
            type: boolean
          usePeriodDates:
            description: Use period dates?
            type: boolean
      EarningCodeViewModel:
        description: The earning code view model
        required:
          - code
        type: object
        properties:
          code:
            description: Earning code
            type: string
          description:
            description: Description
            type: string
          shortDescription:
            description: Short description
            type: string
          earnType:
            description: Earning type
            type: string
          minimum:
            format: double
            description: Minimum value
            type: number
          maximum:
            format: double
            description: Maximum value
            type: number
          annualMaximum:
            format: double
            description: Annual maximum value
            type: number
          overrideRate:
            format: double
            description: Override rate value
            type: number
          addToRate:
            format: double
            description: Add to rate
            type: number
          rateMultiplier:
            format: double
            description: Rate multiplier
            type: number
          overrideShift:
            description: Override shift
            type: string
          unitDescription:
            description: Unit description
            type: string
          autoDrop:
            description: Auto drop
            type: boolean
          calculationCode:
            description: Calculation code
            type: string
          rateCode:
            description: Rate code
            type: string
          amount:
            format: double
            description: Amount value
            type: number
          frequency:
            description: Earning frequency
            type: string
          units:
            format: double
            description: Rate units
            type: number
          rate:
            format: double
            description: Rate
            type: number
          agency:
            description: Agency
            type: string
          dCode:
            description: Deduction code
            type: string
          reduceAutoPay:
            description: Reduce auto pay
            type: boolean
          taxExempt:
            description: Tax exempt
            type: string
          worked:
            format: int32
            description: Worked
            type: integer
          disallowOverrideCalcCode:
            format: int32
            description: Disallow calculation code override?
            type: integer
          disallowOverrideRate:
            format: int32
            description: Disallow rate override?
            type: integer
          disallowOverrideUnits:
            format: int32
            description: Disallow unit override?
            type: integer
          disallowOverrideAmount:
            format: int32
            description: Disallow amount override?
            type: integer
          disallowOverrideFrequency:
            format: int32
            description: Disallow frequency override?
            type: integer
          disallowOverrideAgency:
            format: int32
            description: Disallow agency override?
            type: integer
          disallowOverrideMinimum:
            format: int32
            description: Disallow override minimum?
            type: integer
          disallowOverrideMaximum:
            format: int32
            description: Disallow override maximum?
            type: integer
          disallowOverrideAnnualMaximum:
            format: int32
            description: Disallow annual maximum override?
            type: integer
          active:
            description: Is active?
            type: boolean
          usePeriodDates:
            description: Use period dates?
            type: boolean
          payrollType:
            description: Payroll type
            type: string
          allowCobra:
            description: Allow cobra?
            type: boolean
          subCategory:
            description: Sub category
            type: string
          jobClassificationCode:
            description: Job classification code
            type: string
          includeInWeightedAvgOT:
            description: Include in weighted average overtime?
            type: boolean
          weightedOTAmount:
            description: Is weighted overtime amount?
            type: boolean
          week1Code:
            description: Week 1 code
            type: boolean
          week2Code:
            description: Week 2 code
            type: boolean
      EmployeeEducationViewModel:
        required:
          - school
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          school:
            type: string
          years:
            type: string
          gpa:
            format: double
            type: number
          graduated:
            type: boolean
          major:
            type: string
          degree:
            type: string
          classes:
            type: string
          awards:
            type: string
          notes:
            type: string
      EmployeeImportViewModel:
        description: The employee import view model
        required:
          - employee
        type: object
        properties:
          employee:
            $ref: '#/components/schemas/EmployeeDemographicsPostViewModel'
          directDeposits:
            description: Direct deposits for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
          emergencyContacts:
            description: Emergency contacts for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmergencyContactViewModel'
          taxes:
            description: Taxes for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeTaxViewModel'
          saveEmployee:
            description: >-
              Save employee? If false, employee import will be validated but not
              saved.
            type: boolean
      EmployeeDemographicsPostViewModel:
        description: The employee information view model
        required:
          - taxForm
          - hireDate
          - employeeStatus
          - birthDate
          - city
          - employeeType
          - lastName
          - firstName
          - payFrequency
          - ssn
          - state
          - zipCode
        type: object
        properties:
          co:
            description: The company id
            type: string
          id:
            description: The employee id
            type: string
          taxForm:
            description: Tax form
            type: string
          cellPhone:
            description: The employee's cell phone number
            type: string
          workEmail:
            description: The employee's work email address
            type: string
          homePhone:
            description: The employee's home phone number
            type: string
          personalEmail:
            description: The employee's personal email address
            type: string
          workPhone:
            description: The employee's work phone number
            type: string
          workPhoneExt:
            description: The employee's work phone extension
            type: string
          adjSeniorityDate:
            format: date-time
            description: Adjusted senority date
            type: string
          benefitClass:
            description: Benefit class
            type: string
          healthInsuranceEligibleDate:
            format: date-time
            description: Health insurance eligibility date
            type: string
          rehireDate:
            format: date-time
            description: Rehire date
            type: string
          termDate:
            format: date-time
            description: Termination date
            type: string
          newHireReportDate:
            format: date-time
            description: The first working day for the new hire
            type: string
          termReason:
            description: Termination reason
            type: string
          timeClockGroup:
            description: Time clock group
            type: string
          timeClockPayClass:
            description: Time clock pay class
            type: string
          timeClockSchedulePattern:
            description: Time clock schedule pattern
            type: string
          clockNumber:
            description: Time clock number
            type: string
          flsaOvertimeExempt:
            description: Is Fair labor standards act overtime exempt?
            type: boolean
          jobCode:
            description: Job code
            type: string
          payGrade:
            description: Pay grade
            type: string
          payGroup:
            description: Pay group
            type: string
          tipCode:
            description: Tip code
            type: string
          employee401kDeferral:
            format: double
            description: The amount allocated to the employee's 401k deferral
            type: number
          employer401kMatch:
            format: double
            description: The 401k amount matched by the employer
            type: number
          ownerPercentage:
            format: int32
            description: Percentage ownernership of the company
            maximum: 100
            minimum: 0
            type: integer
          autoPay:
            description: Employee Auto Pay setting (Hours/Salary/NULL)
            type: string
          ethnicity:
            description: Ethnicity
            type: string
          veteranStatus:
            description: Veteran status
            type: string
          maritalStatus:
            description: Marital status
            type: string
          eeoClass:
            description: Equal employment opportunity class
            type: string
          isOfficer:
            description: Is officer
            type: boolean
          positionCode:
            description: Position code
            type: string
          supervisorID:
            description: Supervisor id
            type: string
          supervisorName:
            description: Supervisor name
            type: string
          title:
            description: Title
            type: string
          workersCompCode:
            description: Workers compensation code
            type: string
          cc1:
            description: Cost center 1
            type: string
          cc2:
            description: Cost center 2
            type: string
          cc3:
            description: Cost center 3
            type: string
          cc4:
            description: Cost center 4
            type: string
          cc5:
            description: Cost center 5
            type: string
          hireDate:
            format: date-time
            description: The employee's hire date
            type: string
          employeeStatus:
            description: Current employee status
            type: string
          citizenship:
            description: Employee citizenship status
            type: string
          address1:
            description: Home address line 1
            type: string
          address2:
            description: Home address line 2
            type: string
          birthDate:
            format: date-time
            description: Birth date
            type: string
          city:
            description: Home address city
            type: string
          country:
            description: Home address country
            type: string
          county:
            description: Home address county
            type: string
          defaultHours:
            format: double
            description: Default hours
            type: number
          employeeType:
            description: Employee type
            type: string
          lastName:
            description: Last name
            type: string
          firstName:
            description: First name
            type: string
          middleName:
            description: Middle name
            type: string
          nickName:
            description: Goes-by or Nickname
            type: string
          miscCheck1:
            description: Micellaneous Check 1
            type: boolean
          miscCheck2:
            description: Micellaneous Check 2
            type: boolean
          miscCheck3:
            description: Micellaneous Check 3
            type: boolean
          miscCheck4:
            description: Micellaneous Check 4
            type: boolean
          miscCheck5:
            description: Micellaneous Check 5
            type: boolean
          payFrequency:
            description: Pay frequency
            type: string
          genderCode:
            description: Gender code
            type: string
          ssn:
            description: Social security number
            type: string
          state:
            description: Home address state
            type: string
          unemploymentState:
            description: Unemployment state
            type: string
          workState:
            description: Work state
            type: string
          zipCode:
            description: Home address zip/postal code
            type: string
          employeeMemo:
            description: Employee memo
            type: string
          employeeImage:
            format: byte
            description: The current active employee profile image
            type: string
          employeeImageGuid:
            format: uuid
            description: The current active employee profile image id
            type: string
            example: 00000000-0000-0000-0000-000000000000
          unionCode:
            description: Union code
            type: string
          unionApplicationDate:
            format: date-time
            description: Union application date
            type: string
          unionInitiationFeesCollected:
            description: Has union initiation fees been collected?
            type: boolean
          hasUnionDues:
            description: Has union dues
            type: boolean
          custom1:
            description: Custom field 1
            type: string
          custom2:
            description: Custom field 2
            type: string
          custom3:
            description: Custom field 3
            type: string
          custom4:
            description: Custom field 4
            type: string
          custom5:
            description: Custom field 5
            type: string
          custom6:
            description: Custom field 6
            type: string
          custom7:
            description: Custom field 7
            type: string
          custom8:
            description: Custom field 8
            type: string
      EmployeeDirectDepositViewModel:
        description: The employee direct deposit view model
        required:
          - sequence
          - routingNumber
          - account
          - checking
          - amount
          - nameOnAccount
          - startDate
        type: object
        properties:
          sequence:
            format: int32
            description: Priority for direct deposit application to check
            maximum: 99
            minimum: 1
            type: integer
          routingNumber:
            description: Bank routing number
            type: string
          account:
            description: Bank account number
            type: string
          checking:
            description: Is checking account?
            type: boolean
          amountCode:
            description: Code to be applied to amount for deposit (e.g. Flat, Flat-, %)
            type: string
          amount:
            format: double
            description: Amount to be deposited for this entry
            type: number
          prenoteDate:
            format: date-time
            description: Prenote date
            type: string
          nameOnAccount:
            description: Name on bank account
            type: string
          startDate:
            format: date-time
            description: Start date
            type: string
          endDate:
            format: date-time
            description: End date
            type: string
          excludeSpecial:
            description: Exclude special checks for direct deposit
            type: boolean
      EmergencyContactViewModel:
        description: The emergency contact view model
        type: object
        properties:
          name:
            description: Full name
            type: string
          relationship:
            description: Relationship
            type: string
          homePhone:
            description: Home phone number
            type: string
          workPhone:
            description: Work phone number
            type: string
          cellPhone:
            description: Cell phone number
            type: string
          address1:
            description: Address line 1
            type: string
          address2:
            description: Address line 2
            type: string
          city:
            description: Address city
            type: string
          state:
            description: Address state
            type: string
          zip:
            description: Address zip/postal code
            type: string
          county:
            description: Address county
            type: string
          country:
            description: Adderss country
            type: string
      EmployeeTaxViewModel:
        description: The employee tax view model
        required:
          - taxCode
          - filingStatus
          - startDate
        type: object
        properties:
          taxCode:
            description: Tax code
            type: string
          filingStatus:
            description: Filing status
            type: string
          exemptions:
            format: double
            description: Exemptions
            type: number
          exemptions2:
            format: double
            description: Exemptions 2
            type: number
          additionalAmount:
            format: double
            description: Additional amount
            type: number
          additionalPercentage:
            format: double
            description: Additional percentage
            type: number
          percentageOfGross:
            format: double
            description: Percentage of gross
            type: number
          overrideTaxCalc:
            description: Override tax calulation
            type: boolean
          taxOption:
            description: The FITW tax option (SI - Single Income/DI - Dual Income)
            type: string
          additionalIncome:
            format: double
            description: The additional income
            type: number
          additionalDeductions:
            format: double
            description: The additional deductions
            type: number
          taxCredits:
            format: double
            description: The additional income
            type: number
          startDate:
            format: date-time
            description: Start date
            type: string
          endDate:
            format: date-time
            description: End date (defaults to 2100-12-31)
            type: string
          flatAmount:
            format: double
            description: Calculated flat tax amount in dollars
            type: number
            readOnly: true
          flatPercentage:
            format: double
            description: Calculated flat tax amount as a percentage
            type: number
            readOnly: true
          taxType:
            description: The tax type
            type: string
          description:
            description: The description of the tax
            type: string
          isExempt:
            description: Is the employee exempt from this tax?
            type: boolean
            readOnly: true
      EmployeeSearchCriteriaViewModel:
        type: object
        properties:
          costCenter1:
            description: Cost center 1
            type: string
          costCenter2:
            description: Cost center 2
            type: string
          costCenter3:
            description: Cost center 3
            type: string
          costCenter4:
            description: Cost center 4
            type: string
          costCenter5:
            description: Cost center 5
            type: string
          name:
            description: The employee name
            type: string
          id:
            description: The employee ID
            type: string
          ssn:
            description: Social security number
            type: string
          inclueProfileImage:
            description: >-
              Whether to return a base64 encoded profile image with the search
              results
            type: boolean
          includeDirectDeposits:
            description: >-
              Whether to include the direct deposit collection associated with
              each employee record
            type: boolean
          includeEmergencyContacts:
            description: >-
              Whether to include the emergency contact collection associated with
              each employee record
            type: boolean
          includeTaxes:
            description: >-
              Whether to include the tax collection associated with each employee
              record
            type: boolean
          pageSize:
            format: int32
            type: integer
          pageNumber:
            format: int32
            type: integer
          sortByProperty:
            description: >-
              Property to sort results by. Valid properties include any from the
              return entity.
            type: string
          sortDirection:
            type: string
      EmployeeSearchResultsViewModel:
        required:
          - taxForm
          - hireDate
          - employeeStatus
          - birthDate
          - city
          - employeeType
          - lastName
          - firstName
          - payFrequency
          - ssn
          - state
          - zipCode
        type: object
        properties:
          directDeposits:
            description: List of employee direct deposits
            type: array
            items:
              $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
          taxes:
            description: List of employee taxes
            type: array
            items:
              $ref: '#/components/schemas/EmployeeTaxViewModel'
          emergencyContacts:
            description: List of employee emergency contacts
            type: array
            items:
              $ref: '#/components/schemas/EmergencyContactViewModel'
          i9ExpirationDate:
            format: date-time
            description: I9 expiration date
            type: string
          i9FormsReceived:
            description: I9 verification documentation received
            type: string
          i9Verified:
            description: Is I9 verified
            type: boolean
          visaExpirationDate:
            format: date-time
            description: Visa expiration date
            type: string
          visaType:
            description: Visa type
            type: string
          lastChangeDate:
            format: date-time
            description: The last change date for the employee record
            type: string
          overrideSupervisorCostCenter1:
            description: Override Supervisor for Cost Center 1
            type: string
          overrideSupervisorCostCenter2:
            description: Override Supervisor for Cost Center 2
            type: string
          overrideSupervisorCostCenter3:
            description: Override Supervisor for Cost Center 3
            type: string
          overrideSupervisorCostCenter4:
            description: Override Supervisor for Cost Center 4
            type: string
          overrideSupervisorCostCenter5:
            description: Override Supervisor for Cost Center 5
            type: string
          geid:
            description: The global employee identifier
            type: string
          co:
            description: The company id
            type: string
          id:
            description: The employee id
            type: string
          taxForm:
            description: Tax form
            type: string
          cellPhone:
            description: The employee's cell phone number
            type: string
          workEmail:
            description: The employee's work email address
            type: string
          homePhone:
            description: The employee's home phone number
            type: string
          personalEmail:
            description: The employee's personal email address
            type: string
          workPhone:
            description: The employee's work phone number
            type: string
          workPhoneExt:
            description: The employee's work phone extension
            type: string
          adjSeniorityDate:
            format: date-time
            description: Adjusted senority date
            type: string
          benefitClass:
            description: Benefit class
            type: string
          healthInsuranceEligibleDate:
            format: date-time
            description: Health insurance eligibility date
            type: string
          rehireDate:
            format: date-time
            description: Rehire date
            type: string
          termDate:
            format: date-time
            description: Termination date
            type: string
          newHireReportDate:
            format: date-time
            description: The first working day for the new hire
            type: string
          termReason:
            description: Termination reason
            type: string
          timeClockGroup:
            description: Time clock group
            type: string
          timeClockPayClass:
            description: Time clock pay class
            type: string
          timeClockSchedulePattern:
            description: Time clock schedule pattern
            type: string
          clockNumber:
            description: Time clock number
            type: string
          flsaOvertimeExempt:
            description: Is Fair labor standards act overtime exempt?
            type: boolean
          jobCode:
            description: Job code
            type: string
          payGrade:
            description: Pay grade
            type: string
          payGroup:
            description: Pay group
            type: string
          tipCode:
            description: Tip code
            type: string
          employee401kDeferral:
            format: double
            description: The amount allocated to the employee's 401k deferral
            type: number
          employer401kMatch:
            format: double
            description: The 401k amount matched by the employer
            type: number
          ownerPercentage:
            format: int32
            description: Percentage ownernership of the company
            maximum: 100
            minimum: 0
            type: integer
          autoPay:
            description: Employee Auto Pay setting (Hours/Salary/NULL)
            type: string
          ethnicity:
            description: Ethnicity
            type: string
          veteranStatus:
            description: Veteran status
            type: string
          maritalStatus:
            description: Marital status
            type: string
          eeoClass:
            description: Equal employment opportunity class
            type: string
          isOfficer:
            description: Is officer
            type: boolean
          positionCode:
            description: Position code
            type: string
          supervisorID:
            description: Supervisor id
            type: string
          supervisorName:
            description: Supervisor name
            type: string
          title:
            description: Title
            type: string
          workersCompCode:
            description: Workers compensation code
            type: string
          cc1:
            description: Cost center 1
            type: string
          cc2:
            description: Cost center 2
            type: string
          cc3:
            description: Cost center 3
            type: string
          cc4:
            description: Cost center 4
            type: string
          cc5:
            description: Cost center 5
            type: string
          hireDate:
            format: date-time
            description: The employee's hire date
            type: string
          employeeStatus:
            description: Current employee status
            type: string
          citizenship:
            description: Employee citizenship status
            type: string
          address1:
            description: Home address line 1
            type: string
          address2:
            description: Home address line 2
            type: string
          birthDate:
            format: date-time
            description: Birth date
            type: string
          city:
            description: Home address city
            type: string
          country:
            description: Home address country
            type: string
          county:
            description: Home address county
            type: string
          defaultHours:
            format: double
            description: Default hours
            type: number
          employeeType:
            description: Employee type
            type: string
          lastName:
            description: Last name
            type: string
          firstName:
            description: First name
            type: string
          middleName:
            description: Middle name
            type: string
          nickName:
            description: Goes-by or Nickname
            type: string
          miscCheck1:
            description: Micellaneous Check 1
            type: boolean
          miscCheck2:
            description: Micellaneous Check 2
            type: boolean
          miscCheck3:
            description: Micellaneous Check 3
            type: boolean
          miscCheck4:
            description: Micellaneous Check 4
            type: boolean
          miscCheck5:
            description: Micellaneous Check 5
            type: boolean
          payFrequency:
            description: Pay frequency
            type: string
          genderCode:
            description: Gender code
            type: string
          ssn:
            description: Social security number
            type: string
          state:
            description: Home address state
            type: string
          unemploymentState:
            description: Unemployment state
            type: string
          workState:
            description: Work state
            type: string
          zipCode:
            description: Home address zip/postal code
            type: string
          employeeMemo:
            description: Employee memo
            type: string
          employeeImage:
            format: byte
            description: The current active employee profile image
            type: string
          employeeImageGuid:
            format: uuid
            description: The current active employee profile image id
            type: string
            example: 00000000-0000-0000-0000-000000000000
          unionCode:
            description: Union code
            type: string
          unionApplicationDate:
            format: date-time
            description: Union application date
            type: string
          unionInitiationFeesCollected:
            description: Has union initiation fees been collected?
            type: boolean
          hasUnionDues:
            description: Has union dues
            type: boolean
          custom1:
            description: Custom field 1
            type: string
          custom2:
            description: Custom field 2
            type: string
          custom3:
            description: Custom field 3
            type: string
          custom4:
            description: Custom field 4
            type: string
          custom5:
            description: Custom field 5
            type: string
          custom6:
            description: Custom field 6
            type: string
          custom7:
            description: Custom field 7
            type: string
          custom8:
            description: Custom field 8
            type: string
      EmployeeUpdateViewModel:
        description: The employee import view model
        required:
          - employee
        type: object
        properties:
          employee:
            $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
          directDeposits:
            description: Direct deposits for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
          emergencyContacts:
            description: Emergency contacts for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmergencyContactViewModel'
          taxes:
            description: Taxes for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeTaxViewModel'
          saveEmployee:
            description: >-
              Save employee? If false, employee import will be validated but not
              saved.
            type: boolean
      EmployeeDemographicsPutViewModel:
        description: The employee information view model
        required:
          - hireDate
          - employeeStatus
          - birthDate
          - city
          - employeeType
          - lastName
          - firstName
          - payFrequency
          - ssn
          - state
          - zipCode
        type: object
        properties:
          cellPhone:
            description: The employee's cell phone number
            type: string
          workEmail:
            description: The employee's work email address
            type: string
          homePhone:
            description: The employee's home phone number
            type: string
          personalEmail:
            description: The employee's personal email address
            type: string
          workPhone:
            description: The employee's work phone number
            type: string
          workPhoneExt:
            description: The employee's work phone extension
            type: string
          adjSeniorityDate:
            format: date-time
            description: Adjusted senority date
            type: string
          benefitClass:
            description: Benefit class
            type: string
          healthInsuranceEligibleDate:
            format: date-time
            description: Health insurance eligibility date
            type: string
          rehireDate:
            format: date-time
            description: Rehire date
            type: string
          termDate:
            format: date-time
            description: Termination date
            type: string
          newHireReportDate:
            format: date-time
            description: The first working day for the new hire
            type: string
          termReason:
            description: Termination reason
            type: string
          timeClockGroup:
            description: Time clock group
            type: string
          timeClockPayClass:
            description: Time clock pay class
            type: string
          timeClockSchedulePattern:
            description: Time clock schedule pattern
            type: string
          clockNumber:
            description: Time clock number
            type: string
          flsaOvertimeExempt:
            description: Is Fair labor standards act overtime exempt?
            type: boolean
          jobCode:
            description: Job code
            type: string
          payGrade:
            description: Pay grade
            type: string
          payGroup:
            description: Pay group
            type: string
          tipCode:
            description: Tip code
            type: string
          employee401kDeferral:
            format: double
            description: The amount allocated to the employee's 401k deferral
            type: number
          employer401kMatch:
            format: double
            description: The 401k amount matched by the employer
            type: number
          ownerPercentage:
            format: int32
            description: Percentage ownernership of the company
            maximum: 100
            minimum: 0
            type: integer
          autoPay:
            description: Employee Auto Pay setting (Hours/Salary/NULL)
            type: string
          ethnicity:
            description: Ethnicity
            type: string
          veteranStatus:
            description: Veteran status
            type: string
          maritalStatus:
            description: Marital status
            type: string
          eeoClass:
            description: Equal employment opportunity class
            type: string
          isOfficer:
            description: Is officer
            type: boolean
          positionCode:
            description: Position code
            type: string
          supervisorID:
            description: Supervisor id
            type: string
          supervisorName:
            description: Supervisor name
            type: string
          title:
            description: Title
            type: string
          workersCompCode:
            description: Workers compensation code
            type: string
          cc1:
            description: Cost center 1
            type: string
          cc2:
            description: Cost center 2
            type: string
          cc3:
            description: Cost center 3
            type: string
          cc4:
            description: Cost center 4
            type: string
          cc5:
            description: Cost center 5
            type: string
          hireDate:
            format: date-time
            description: The employee's hire date
            type: string
          employeeStatus:
            description: Current employee status
            type: string
          citizenship:
            description: Employee citizenship status
            type: string
          address1:
            description: Home address line 1
            type: string
          address2:
            description: Home address line 2
            type: string
          birthDate:
            format: date-time
            description: Birth date
            type: string
          city:
            description: Home address city
            type: string
          country:
            description: Home address country
            type: string
          county:
            description: Home address county
            type: string
          defaultHours:
            format: double
            description: Default hours
            type: number
          employeeType:
            description: Employee type
            type: string
          lastName:
            description: Last name
            type: string
          firstName:
            description: First name
            type: string
          middleName:
            description: Middle name
            type: string
          nickName:
            description: Goes-by or Nickname
            type: string
          miscCheck1:
            description: Micellaneous Check 1
            type: boolean
          miscCheck2:
            description: Micellaneous Check 2
            type: boolean
          miscCheck3:
            description: Micellaneous Check 3
            type: boolean
          miscCheck4:
            description: Micellaneous Check 4
            type: boolean
          miscCheck5:
            description: Micellaneous Check 5
            type: boolean
          payFrequency:
            description: Pay frequency
            type: string
          genderCode:
            description: Gender code
            type: string
          ssn:
            description: Social security number
            type: string
          state:
            description: Home address state
            type: string
          unemploymentState:
            description: Unemployment state
            type: string
          workState:
            description: Work state
            type: string
          zipCode:
            description: Home address zip/postal code
            type: string
          employeeMemo:
            description: Employee memo
            type: string
          employeeImage:
            format: byte
            description: The current active employee profile image
            type: string
          employeeImageGuid:
            format: uuid
            description: The current active employee profile image id
            type: string
            example: 00000000-0000-0000-0000-000000000000
          unionCode:
            description: Union code
            type: string
          unionApplicationDate:
            format: date-time
            description: Union application date
            type: string
          unionInitiationFeesCollected:
            description: Has union initiation fees been collected?
            type: boolean
          hasUnionDues:
            description: Has union dues
            type: boolean
          custom1:
            description: Custom field 1
            type: string
          custom2:
            description: Custom field 2
            type: string
          custom3:
            description: Custom field 3
            type: string
          custom4:
            description: Custom field 4
            type: string
          custom5:
            description: Custom field 5
            type: string
          custom6:
            description: Custom field 6
            type: string
          custom7:
            description: Custom field 7
            type: string
          custom8:
            description: Custom field 8
            type: string
      EmployeeGetRequestViewModel:
        description: The employee information view model
        required:
          - employee
        type: object
        properties:
          employee:
            $ref: '#/components/schemas/EmployeeDemographicsGetViewModel'
          directDeposits:
            description: Direct deposits for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
          emergencyContacts:
            description: Emergency contacts for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmergencyContactViewModel'
          taxes:
            description: Taxes for the employee
            type: array
            items:
              $ref: '#/components/schemas/EmployeeTaxViewModel'
      EmployeeDemographicsGetViewModel:
        description: The employee demographics information view model
        required:
          - taxForm
          - hireDate
          - employeeStatus
          - birthDate
          - city
          - employeeType
          - lastName
          - firstName
          - payFrequency
          - ssn
          - state
          - zipCode
        type: object
        properties:
          i9ExpirationDate:
            format: date-time
            description: I9 expiration date
            type: string
          i9FormsReceived:
            description: I9 verification documentation received
            type: string
          i9Verified:
            description: Is I9 verified
            type: boolean
          visaExpirationDate:
            format: date-time
            description: Visa expiration date
            type: string
          visaType:
            description: Visa type
            type: string
          lastChangeDate:
            format: date-time
            description: The last change date for the employee record
            type: string
          overrideSupervisorCostCenter1:
            description: Override Supervisor for Cost Center 1
            type: string
          overrideSupervisorCostCenter2:
            description: Override Supervisor for Cost Center 2
            type: string
          overrideSupervisorCostCenter3:
            description: Override Supervisor for Cost Center 3
            type: string
          overrideSupervisorCostCenter4:
            description: Override Supervisor for Cost Center 4
            type: string
          overrideSupervisorCostCenter5:
            description: Override Supervisor for Cost Center 5
            type: string
          geid:
            description: The global employee identifier
            type: string
          co:
            description: The company id
            type: string
          id:
            description: The employee id
            type: string
          taxForm:
            description: Tax form
            type: string
          cellPhone:
            description: The employee's cell phone number
            type: string
          workEmail:
            description: The employee's work email address
            type: string
          homePhone:
            description: The employee's home phone number
            type: string
          personalEmail:
            description: The employee's personal email address
            type: string
          workPhone:
            description: The employee's work phone number
            type: string
          workPhoneExt:
            description: The employee's work phone extension
            type: string
          adjSeniorityDate:
            format: date-time
            description: Adjusted senority date
            type: string
          benefitClass:
            description: Benefit class
            type: string
          healthInsuranceEligibleDate:
            format: date-time
            description: Health insurance eligibility date
            type: string
          rehireDate:
            format: date-time
            description: Rehire date
            type: string
          termDate:
            format: date-time
            description: Termination date
            type: string
          newHireReportDate:
            format: date-time
            description: The first working day for the new hire
            type: string
          termReason:
            description: Termination reason
            type: string
          timeClockGroup:
            description: Time clock group
            type: string
          timeClockPayClass:
            description: Time clock pay class
            type: string
          timeClockSchedulePattern:
            description: Time clock schedule pattern
            type: string
          clockNumber:
            description: Time clock number
            type: string
          flsaOvertimeExempt:
            description: Is Fair labor standards act overtime exempt?
            type: boolean
          jobCode:
            description: Job code
            type: string
          payGrade:
            description: Pay grade
            type: string
          payGroup:
            description: Pay group
            type: string
          tipCode:
            description: Tip code
            type: string
          employee401kDeferral:
            format: double
            description: The amount allocated to the employee's 401k deferral
            type: number
          employer401kMatch:
            format: double
            description: The 401k amount matched by the employer
            type: number
          ownerPercentage:
            format: int32
            description: Percentage ownernership of the company
            maximum: 100
            minimum: 0
            type: integer
          autoPay:
            description: Employee Auto Pay setting (Hours/Salary/NULL)
            type: string
          ethnicity:
            description: Ethnicity
            type: string
          veteranStatus:
            description: Veteran status
            type: string
          maritalStatus:
            description: Marital status
            type: string
          eeoClass:
            description: Equal employment opportunity class
            type: string
          isOfficer:
            description: Is officer
            type: boolean
          positionCode:
            description: Position code
            type: string
          supervisorID:
            description: Supervisor id
            type: string
          supervisorName:
            description: Supervisor name
            type: string
          title:
            description: Title
            type: string
          workersCompCode:
            description: Workers compensation code
            type: string
          cc1:
            description: Cost center 1
            type: string
          cc2:
            description: Cost center 2
            type: string
          cc3:
            description: Cost center 3
            type: string
          cc4:
            description: Cost center 4
            type: string
          cc5:
            description: Cost center 5
            type: string
          hireDate:
            format: date-time
            description: The employee's hire date
            type: string
          employeeStatus:
            description: Current employee status
            type: string
          citizenship:
            description: Employee citizenship status
            type: string
          address1:
            description: Home address line 1
            type: string
          address2:
            description: Home address line 2
            type: string
          birthDate:
            format: date-time
            description: Birth date
            type: string
          city:
            description: Home address city
            type: string
          country:
            description: Home address country
            type: string
          county:
            description: Home address county
            type: string
          defaultHours:
            format: double
            description: Default hours
            type: number
          employeeType:
            description: Employee type
            type: string
          lastName:
            description: Last name
            type: string
          firstName:
            description: First name
            type: string
          middleName:
            description: Middle name
            type: string
          nickName:
            description: Goes-by or Nickname
            type: string
          miscCheck1:
            description: Micellaneous Check 1
            type: boolean
          miscCheck2:
            description: Micellaneous Check 2
            type: boolean
          miscCheck3:
            description: Micellaneous Check 3
            type: boolean
          miscCheck4:
            description: Micellaneous Check 4
            type: boolean
          miscCheck5:
            description: Micellaneous Check 5
            type: boolean
          payFrequency:
            description: Pay frequency
            type: string
          genderCode:
            description: Gender code
            type: string
          ssn:
            description: Social security number
            type: string
          state:
            description: Home address state
            type: string
          unemploymentState:
            description: Unemployment state
            type: string
          workState:
            description: Work state
            type: string
          zipCode:
            description: Home address zip/postal code
            type: string
          employeeMemo:
            description: Employee memo
            type: string
          employeeImage:
            format: byte
            description: The current active employee profile image
            type: string
          employeeImageGuid:
            format: uuid
            description: The current active employee profile image id
            type: string
            example: 00000000-0000-0000-0000-000000000000
          unionCode:
            description: Union code
            type: string
          unionApplicationDate:
            format: date-time
            description: Union application date
            type: string
          unionInitiationFeesCollected:
            description: Has union initiation fees been collected?
            type: boolean
          hasUnionDues:
            description: Has union dues
            type: boolean
          custom1:
            description: Custom field 1
            type: string
          custom2:
            description: Custom field 2
            type: string
          custom3:
            description: Custom field 3
            type: string
          custom4:
            description: Custom field 4
            type: string
          custom5:
            description: Custom field 5
            type: string
          custom6:
            description: Custom field 6
            type: string
          custom7:
            description: Custom field 7
            type: string
          custom8:
            description: Custom field 8
            type: string
      EmployeeDeductionCodeViewModel:
        description: The deduction code view model
        type: object
        properties:
          code:
            description: The deduction code
            type: string
          calculationCode:
            description: Calculation code
            type: string
          tabled:
            description: Is the deduction code tabled?
            type: boolean
          rate:
            format: double
            description: Rate
            type: number
          amount:
            format: double
            description: The amount
            type: number
          startDate:
            format: date-time
            description: The start date
            type: string
          endDate:
            format: date-time
            description: The end date
            type: string
          costCenter1:
            description: The Cost Center 1
            type: string
          costCenter2:
            description: The Cost Center 2
            type: string
          costCenter3:
            description: The Cost Center 3
            type: string
          costCenter4:
            description: The Cost Center 4
            type: string
          costCenter5:
            description: The Cost Center 1
            type: string
          jobCode:
            description: The job code
            type: string
          overrideTaxCode1:
            description: Override tax code 1
            type: string
          overrideTaxCode2:
            description: Override tax code 2
            type: string
          overrideTaxCode3:
            description: Override tax code 3
            type: string
          goal:
            format: double
            description: The goal
            type: number
          paidTowardsGoal:
            format: double
            description: The amount paid towards the goal
            type: number
          frequency:
            description: Deduction charge frequency
            type: string
          lastDate:
            format: date-time
            description: The last paid date
            type: string
          annualMaximum:
            format: double
            description: Annual maximum
            type: number
          minimum:
            format: double
            description: Minimum value
            type: number
          maximum:
            format: double
            description: Maximum value
            type: number
          agency:
            description: Agency
            type: string
          miscellaneousInformation:
            description: Miscellaneous information
            type: string
          arrear:
            format: double
            description: Arrear
            type: number
          thirdPartyBankTransit:
            description: The third party bank account transit number
            type: string
          thirdPartyBankAccount:
            description: The third party bank account number
            type: string
          prenoteDate:
            format: date-time
            description: The prenote date
            type: string
          bankChecking:
            description: Is account checking?
            type: boolean
          priority:
            format: int32
            description: Priority
            type: integer
          thirdPartyId:
            description: The third party identifier
            type: string
          notes:
            description: The notes
            type: string
      EmployeeEarningCodeViewModel:
        type: object
        properties:
          agency:
            description: The agency
            type: string
          amount:
            format: double
            description: The amount
            type: number
          annualMaximum:
            format: double
            description: The annual maximum
            type: number
          calcCode:
            description: The calc code
            type: string
          description:
            description: The description
            type: string
          costCenter1:
            description: The cost center 1
            type: string
          costCenter2:
            description: The cost center 2
            type: string
          costCenter3:
            description: The cost center 3
            type: string
          costCenter4:
            description: The cost center 4
            type: string
          costCenter5:
            description: The cost center 5
            type: string
          code:
            description: The earning code
            type: string
          jobCode:
            description: The job code
            type: string
          endDate:
            format: date-time
            description: The end date
            type: string
          frequency:
            description: The frequency
            type: string
          goal:
            format: double
            description: The goal
            type: number
          lastDate:
            format: date-time
            description: The last date
            type: string
          maximum:
            format: double
            description: The maximum
            type: number
          minimum:
            format: double
            description: The minimum
            type: number
          miscInfo:
            description: The miscellaneous info
            type: string
          otc1:
            description: Otc 1
            type: string
          otc2:
            description: Otc 2
            type: string
          otc3:
            description: Otc 3
            type: string
          paidTowardsGoal:
            format: double
            description: The amount paid towards goal
            type: number
          rate:
            format: double
            description: The rate
            type: number
          rateCode:
            description: The rate code
            type: string
          ratePer:
            description: The rate per
            type: string
          startDate:
            format: date-time
            description: The start date
            type: string
          tabled:
            description: Is this earning tabled?
            type: boolean
          thirdPartyId:
            description: The third party identifier
            type: string
          units:
            format: double
            description: The unit
            type: number
      PtoRequestViewModel:
        required:
          - approvalStatus
          - code
          - endDate
          - isCancelled
          - ptoTypeCode
          - startDate
        type: object
        properties:
          approvalStatus:
            description: "The current approval status\r\n  Pending = 1\r\n  Approved = 2\r\n  Declined = 3"
            enum:
              - Pending
              - Approved
              - Declined
            type: string
          code:
            description: The benefit code
            type: string
          cancelledByEmployeeGuid:
            format: uuid
            description: The cancelled by employee guid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          cancelledDateTime:
            format: date-time
            description: The cancelled date/time
            type: string
          displayCode:
            description: The code to be displayed in the ReadyPay Online user interface
            type: string
          endDate:
            format: date-time
            description: The end date
            type: string
          guidfield:
            format: uuid
            description: The record unique identifier (automatically assigned)
            type: string
            example: 00000000-0000-0000-0000-000000000000
          id:
            description: The employee id
            type: string
          isCancelled:
            description: Is the request cancelled?
            type: boolean
          notes:
            description: The notes
            type: string
          ptoHours:
            format: double
            description: The total PTO Hours -- Calculated from details
            type: number
            readOnly: true
          ptoHoursAdjusted:
            format: double
            description: The adjusted PTO hours -- Calculated from details
            type: number
            readOnly: true
          ptoTypeCode:
            description: The type code
            type: string
          requestDate:
            format: date-time
            description: The date on which the PTO request was submitted
            type: string
          shiftTypeCode:
            description: The shift type code
            type: string
          startDate:
            format: date-time
            description: The PTO request start date
            type: string
          supervisorComments:
            description: The supervisor comments
            type: string
          ptoRequestDetails:
            description: The PTO request details (Day by day breakdown)
            type: array
            items:
              $ref: '#/components/schemas/PtoRequestDetailViewModel'
      PtoRequestDetailViewModel:
        required:
          - ptoDay
        type: object
        properties:
          adjustedByEmployee:
            format: uuid
            description: The adjusted by employee GUID
            type: string
            example: 00000000-0000-0000-0000-000000000000
          adjustedDateTime:
            format: date-time
            description: The adjusted date
            type: string
          calendarId:
            format: uuid
            description: The calendar ID which the PTO hours were applied to
            type: string
            example: 00000000-0000-0000-0000-000000000000
          guidField:
            format: uuid
            description: The unique identifier for the pto detail record
            type: string
            example: 00000000-0000-0000-0000-000000000000
          ptoDay:
            format: date-time
            description: The day PTO will be taken on
            type: string
          ptoHours:
            format: double
            description: The pto hours for this day
            type: number
          ptoHoursAdjusted:
            format: double
            description: The adjusted PTO hours
            type: number
          ptoNotTaken:
            description: Was the PTO day taken?
            type: boolean
      JobCodeViewModel:
        description: The job code view model
        type: object
        properties:
          code:
            description: The job code
            type: string
          description:
            description: Description of the job code
            type: string
          address1:
            description: Address 1
            type: string
          address2:
            description: Address 2
            type: string
          city:
            description: City
            type: string
          state:
            description: State
            type: string
          zip:
            description: Zip
            type: string
          overrideShift:
            description: Shift code to be used instead of the default
            type: string
          overrideRateCode:
            description: Rate code to be used instead of the default
            type: string
          overrideRate:
            format: double
            description: Rate to be used instead of the default
            type: number
          addToRate:
            format: double
            description: Rate to be added to the default for this job code
            type: number
          certifiedJob:
            description: Is job certified
            type: boolean
          rateMultiplier:
            format: double
            description: Multiplier to be applied to default rate
            type: number
          startDate:
            format: date-time
            description: Record start date
            type: string
          endDate:
            format: date-time
            description: Record end date
            type: string
          projectNumber:
            description: Project number associated with this job code
            type: string
      EmployeeLicenseViewModel:
        required:
          - code
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          code:
            type: string
          state:
            type: string
          number:
            type: string
          issueDate:
            format: date-time
            type: string
          expirationDate:
            format: date-time
            type: string
          notes:
            type: string
          examDate:
            format: date-time
            type: string
      LookupCodeWithScopeViewModel:
        type: object
        properties:
          scope:
            description: >-
              The scope of the lookup item (e.g.  s - system, c - company, e -
              employee)
            type: string
          value:
            description: The value of the lookup item
            type: string
          description:
            description: The description of the lookup item
            type: string
      CheckRequestModel:
        type: object
        properties:
          Autopay:
            type: boolean
          BeginDate:
            format: date-time
            type: string
          BlockInsurance:
            type: boolean
          BlockDirectDeposit:
            type: boolean
          BlockAccruals:
            type: boolean
          BlockDistributions:
            type: boolean
          check:
            $ref: '#/components/schemas/CheckOptionRequestModel'
          EndDate:
            format: date-time
            type: string
          EmployeeId:
            type: string
          LineItems:
            type: array
            items:
              $ref: '#/components/schemas/EarningViewModel'
          SupplementTaxRate:
            type: boolean
          TaxFrequency:
            type: string
          WeeksWorked:
            format: double
            type: number
      CheckOptionRequestModel:
        type: object
        properties:
          IssuedBy:
            enum:
              - ClientIssued
              - NextPayroll
              - YTDOnly
            type: string
          Number:
            type: string
          StubMemo:
            type: string
          Print:
            type: boolean
          Account:
            type: string
          CheckType:
            enum:
              - GrossToNet
              - NetToGross
            type: string
      EmployeeOnboardingPostViewModel:
        required:
          - FirstName
          - LastName
          - StartDate
          - HireDate
          - WorkState
          - EmpType
          - PayFrequency
          - DefaultHours
        type: object
        properties:
          FirstName:
            description: First Name of new hire
            type: string
          LastName:
            description: Last Name of new hire
            type: string
          MiddleName:
            description: Middle Name of new hire
            type: string
          Suffix:
            description: Suffix
            type: string
          StartDate:
            format: date-time
            description: Date on which new hire start his job
            type: string
          OrientationDate:
            format: date-time
            description: Job Orientation Date
            type: string
          HireDate:
            format: date-time
            description: Date on which new hire is hired
            type: string
          IsPaperWorkAtHome:
            description: "New hire complete his/her paperwork at home \r\nFor Remote employee this will be true"
            type: boolean
          IsRemoteEmployee:
            description: Is new hire working remotely
            type: boolean
          EmailAddress:
            description: New hire's email address
            type: string
          CC1:
            description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 1"
            type: string
          CC2:
            description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 2"
            type: string
          CC3:
            description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 3"
            type: string
          CC4:
            description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 4"
            type: string
          CC5:
            description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 5"
            type: string
          PositionCode:
            description: A company's position code. This could be one of the configured value
            type: string
          WorkState:
            description: State where employee work's
            type: string
          EmpType:
            description: One of the configured Employee Types
            type: string
          PayFrequency:
            description: One of the configured Pay Frequencies
            type: string
          AutoPay:
            description: One of the configured Auto Pay
            type: string
          DefaultHours:
            format: double
            description: Default Hours
            type: number
          BaseRate:
            format: double
            description: Base Rate
            type: number
          BaseSalary:
            format: double
            description: Base Salary
            type: number
          AnnualSalary:
            format: double
            description: Annual Salary
            type: number
          FlowGuid:
            format: uuid
            description: One of the onboarding workflow step
            type: string
            example: 00000000-0000-0000-0000-000000000000
          PreferredLanguage:
            description: Preferred Language, currently English and Spanish is supported
            type: string
          SendEmail:
            description: >-
              If True email will be send to address given in Email copy, else use
              email address
            type: boolean
          EmailCopy:
            description: Alternate email address
            type: string
          Address1:
            description: Address 1
            type: string
          Address2:
            description: Address 2
            type: string
          City:
            description: City
            type: string
          State:
            description: State
            type: string
          Zip:
            description: Zip
            type: string
          Phone:
            description: Phone
            type: string
          HiringManager:
            description: Hiring Manager - Pass the Guid
            type: string
          PayGrade:
            description: One of the pay grade value
            type: string
          EmployeeId:
            description: New hire employee Id, If null system generates
            type: string
          ThirdPartyEmployeeID:
            description: Employee Id Client prefere
            type: string
          DisableValidation:
            description: If true CC validation will be disabled
            type: boolean
          RpoUserName:
            description: User that initiate hiring process
            type: string
          DueDate:
            format: date-time
            description: Due Date
            type: string
          SeniorityDate:
            format: date-time
            description: Adj. Seniority Date
            type: string
          EligibilityDate:
            format: date-time
            description: Health Insurance eligibility date
            type: string
          Sms:
            description: SMS number
            type: string
          PayType:
            description: One of the configured pay type
            type: string
          Tipped:
            description: Tipped
            type: string
          Exempt:
            description: Is Excmpt
            type: boolean
          AdditionalRates:
            description: Additional Rates
            type: array
            items:
              $ref: '#/components/schemas/AdditionalRateModel'
          OtherFields:
            description: Misc. Fields. This could be configured field
            type: array
            items:
              $ref: '#/components/schemas/FieldData'
          CanSendWelcomeEmail:
            description: Can Send Welcome Email
            type: boolean
          CanSendSmsLink:
            description: Can Send Sms link
            type: boolean
      AdditionalRateModel:
        type: object
        properties:
          RateCode:
            type: string
          Rate:
            format: double
            type: number
          SalaryPerPayPeriod:
            format: double
            type: number
          RatePer:
            type: string
          Cc1:
            type: string
          Cc2:
            type: string
          Cc3:
            type: string
          Cc4:
            type: string
          Cc5:
            type: string
          JobCode:
            type: string
          Shift:
            type: string
          Paygrade:
            type: string
      FieldData:
        type: object
        properties:
          FieldName:
            type: string
          Value:
            type: object
      OnboardingSettingsViewModel:
        description: >-
          Represents configured data in RPO that External Systems can map to New
          hire
        type: object
        properties:
          WorkflowLookup:
            description: Configured Workflow data
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          LanguageLookup:
            description: Configured Language
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          AutoPayLookup:
            description: Configured Auto Pay
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          TippedLookup:
            description: Configured Tipped values
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          WorkStateLookup:
            description: Configured States
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          PayTypeLookup:
            description: Configured Pay Type
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          ShiftLookup:
            description: Configured Shift
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          RateCodeLookup:
            description: Configured Rate code. Used in Additional rates
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          RatePerLookup:
            description: Configured Rate Per. Used in Additional rates
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          IsRemoteHireAvailable:
            description: Is Remote Hire Available
            type: boolean
          IsAdditionalRatesAllowed:
            description: Can show additional rates
            type: boolean
          AdditionalRatesFields:
            description: Additional Rate fields
            type: array
            items:
              type: string
          NoOfAdditionalRatesReqired:
            format: int32
            description: No of additional rates
            type: integer
          SetUpInfoFields:
            description: Set up info fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          JobPayInfoFields:
            description: Job pay info fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          MiscAdditionalFields:
            description: Misc additional fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          MiscCustomFields:
            description: Misc Custom Fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          MiscTimeClockFields:
            description: Misc Time clock Fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          MiscUnionAffiliationFields:
            description: Misc Union affiliation fields. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/FieldInfo'
          SupervisorLookup:
            description: Supervisor look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          BenefitClassLookup:
            description: Benefit class look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          WccLookup:
            description: Wcc look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          PayClassLookup:
            description: Pay class look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          ClockGroupLookup:
            description: Clock group look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          SchedulePatternLookup:
            description: Schedule Pattern look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          FrequencyLookup:
            description: Freqency look up. Refer HR Setup -&gt; custom in RPO
            type: array
            items:
              $ref: '#/components/schemas/LookupViewModel_String_Int32_'
          IsCC1Required:
            description: Is CC1 required
            type: boolean
          IsCC2Required:
            description: Is CC2 Required
            type: boolean
          IsCC3Required:
            description: Is CC3 Required
            type: boolean
          IsCC4Required:
            description: Is CC4 Required
            type: boolean
          IsCC5Required:
            description: Is CC5 Required
            type: boolean
      FieldInfo:
        type: object
        properties:
          FieldName:
            description: Field Name
            type: string
          FieldLabel:
            description: Field Label
            type: string
          IsRequired:
            description: Is as required field
            type: boolean
          DefaultValue:
            description: Default Value
            type: string
      PayHistorySearchResults:
        type: object
        properties:
          co:
            type: string
          id:
            type: string
          type:
            type: string
          checkDate:
            format: date-time
            type: string
          totalHours:
            format: double
            type: number
          totalAmount:
            format: double
            type: number
          transId:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
      PayHistoryDetails:
        type: object
        properties:
          co:
            type: string
          id:
            type: string
          checkDate:
            format: date-time
            type: string
          transType:
            type: string
          det:
            type: string
          detCode:
            type: string
          hours:
            format: double
            type: number
          rate:
            format: double
            type: number
          amount:
            format: double
            type: number
          rateCode:
            type: string
          tcode1:
            type: string
          tcode2:
            type: string
          tcode3:
            type: string
          tcode4:
            type: string
          beginDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
          shift:
            type: string
          wcc:
            type: string
          cc1:
            type: string
          cc2:
            type: string
          cc3:
            type: string
          cc4:
            type: string
          cc5:
            type: string
          jobCode:
            type: string
          gl1:
            type: string
          gl2:
            type: string
          gl3:
            type: string
          gl4:
            type: string
          gl5:
            type: string
          gl6:
            type: string
          cd:
            type: string
          xgl1:
            type: string
          xgl2:
            type: string
          xgl3:
            type: string
          xgl4:
            type: string
          xgl5:
            type: string
          xgl6:
            type: string
          comment:
            type: string
          trans:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
      PayrollVerificationViewModel:
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          description:
            type: string
          result:
            type: string
          approved:
            type: boolean
          approvedByUser:
            type: string
          details:
            type: array
            items:
              $ref: '#/components/schemas/PayrollVerificationDetailViewModel'
      PayrollVerificationDetailViewModel:
        type: object
        properties:
          text:
            type: string
          result:
            type: string
      EmployeeRateViewModel:
        description: The employee rate view model
        required:
          - code
        type: object
        properties:
          code:
            description: The pay rate code
            type: string
          salary:
            format: double
            description: The salary
            type: number
          rate:
            format: double
            description: The rate
            type: number
          ratePer:
            description: The period over which the rate is paid
            type: string
          costCenter1:
            description: The cost center 1
            type: string
          costCenter2:
            description: The cost center 2
            type: string
          costCenter3:
            description: The cost center 3
            type: string
          costCenter4:
            description: The cost center 4
            type: string
          costCenter5:
            description: The cost center 5
            type: string
          jobCode:
            description: The job code
            type: string
          startDate:
            format: date-time
            description: The start date
            type: string
          endDate:
            format: date-time
            description: The end date
            type: string
          payGrade:
            description: The pay grade
            type: string
          id:
            format: uuid
            description: The identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          changeRateReasonCode:
            description: The reason why the employee's pay rate was changed
            type: string
          raisePercentage:
            format: double
            description: The raise percentage
            type: number
      ReportListItem:
        description: Object describing a report
        type: object
        properties:
          title:
            description: Title of the report
            type: string
          description:
            description: Brief description of the report
            type: string
          id:
            format: uuid
            description: The unique identifier for the report
            type: string
            example: 00000000-0000-0000-0000-000000000000
          format:
            description: Available formats for the report
            type: string
          category:
            description: The report category
            type: string
          options:
            description: Options for running the report if available (Summary/Detail)
            type: string
      ReportOptionsViewModel:
        description: >-
          Options to apply to a report run request. A check date range (with
          process numbers) OR override date range (BeginDate to EndDate) is
          required
        type: object
        properties:
          outputFormat:
            description: File output type (e.g. PDF, Excel, Word). Defaults to PDF
            type: string
          sortBy:
            description: Comma delimited list of sortby columns
            type: string
          option:
            description: Run option (e.g. Summary or Detail). Defaults to Detail
            type: string
          beginCheckDate:
            format: date-time
            description: >-
              Start check date. Must be a valid check date. If provided
              EndCheckDate, BeginProcess, and EndProcess is required
            type: string
          endCheckDate:
            format: date-time
            description: >-
              End check date. Must be a valid check date. If provided
              BeginCheckDate, BeginProcess, and EndProcess is required
            type: string
          beginProcess:
            format: int64
            description: The process number associated with the begin check date
            type: integer
          endProcess:
            format: int64
            description: The process number associated with the end check date
            type: integer
          beginDate:
            format: date-time
            description: Begin date for report date range. If provided, EndDate is required
            type: string
          endDate:
            format: date-time
            description: End date for report date range. If provided, BeginDate is required
            type: string
      ReportProperties:
        description: Options used when requesting a report run
        type: object
        properties:
          outputFormats:
            description: Available output formats (e.g. PDF, Excel, CSV, TXT)
            type: array
            items:
              type: string
          sortList:
            description: List of columns that can be sorted on
            type: array
            items:
              type: string
          availableCheckDates:
            description: Processed calendar check dates and their process id
            type: array
            items:
              $ref: '#/components/schemas/CheckDateListItem'
      CheckDateListItem:
        description: The check data list item
        type: object
        properties:
          checkDate:
            description: The check date
            type: string
          process:
            description: >-
              The id of the process run for the check date (There may be multiple
              process runs per check date)
            type: string
      EmployeeReviewViewModel:
        required:
          - date
          - id
          - score
        type: object
        properties:
          date:
            format: date-time
            type: string
          effectiveDate:
            format: date-time
            type: string
          employeesNotes:
            type: string
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          newPayAmount:
            format: double
            type: number
          newPayPer:
            type: string
          newPosition:
            type: string
          nextReviewDate:
            format: date-time
            type: string
          raiseAmount:
            format: double
            type: number
          rating:
            type: string
          reviewer:
            type: string
          reviewersNotes:
            type: string
          score:
            format: double
            type: number
      ReviewSearchCriteriaViewModel:
        type: object
        properties:
          effectiveStartDate:
            format: date-time
            description: The effective date range start
            type: string
          effectiveEndDate:
            format: date-time
            description: The effective date range end
            type: string
          employeeIds:
            description: Limit result set to specified comma delimited list of employee ids
            type: string
          pageSize:
            format: int32
            type: integer
          pageNumber:
            format: int32
            type: integer
          sortByProperty:
            description: >-
              Property to sort results by. Valid properties include any from the
              return entity.
            type: string
          sortDirection:
            type: string
      EmployeeReviewSearchViewModel:
        required:
          - employeeId
          - date
          - id
        type: object
        properties:
          employeeId:
            type: string
          date:
            format: date-time
            type: string
          effectiveDate:
            format: date-time
            type: string
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          newPayAmount:
            format: double
            type: number
          newPayPer:
            type: string
          raiseAmount:
            format: double
            type: number
      ShiftCodeViewModel:
        description: The shift code view model
        type: object
        properties:
          code:
            description: The shift code
            type: string
          description:
            description: Description for this shift
            type: string
          addToRate:
            format: double
            description: Rate to be added to default rate for this shift
            type: number
          rate:
            format: double
            description: Base rate for this shift
            type: number
          rateMultiplier:
            format: double
            description: Multiplier to be applied to the default rate
            type: number
      EmployeeSkillViewModel:
        required:
          - code
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          code:
            type: string
          description:
            type: string
          date:
            format: date-time
            type: string
          proficiency:
            type: string
          notes:
            type: string
      TaxViewModel:
        description: The tax view model
        type: object
        properties:
          taxCode:
            description: The tax code
            type: string
          description:
            description: The description of the tax code
            type: string
          startDate:
            format: date-time
            description: The start date for the tax record
            type: string
          endDate:
            format: date-time
            description: The end date for the tax record
            type: string
          taxType:
            description: The tax type
            type: string
      TimeImportResultViewModel:
        description: The time import results view model
        type: object
        properties:
          importCurrentlyRunning:
            description: Is the import still running?
            type: boolean
          importsByProvider:
            description: The import statuses by provider
            type: array
            items:
              $ref: '#/components/schemas/TimeImportByProviderViewModel'
          error:
            description: Error messages associated with this import
            type: string
      TimeImportByProviderViewModel:
        description: A breakdown of the status of the time import by one or more providers
        type: object
        properties:
          provider:
            description: The time import provider name
            type: string
          timeImportCurrentlyRunning:
            description: The import statuses by provider
            type: boolean
          isComplete:
            description: Has the import finished for this provider?
            type: boolean
          providerTimeImportResults:
            description: The separate files available from this provider
            type: array
            items:
              $ref: '#/components/schemas/TimeImportByProviderResultsViewModel'
          error:
            description: Error message indicating problem.
            type: string
      TimeImportByProviderResultsViewModel:
        description: A breakdown of imports by provider/service combination
        type: object
        properties:
          serviceId:
            format: uuid
            description: The provider service id.
            type: string
            example: 00000000-0000-0000-0000-000000000000
          batch:
            description: The calendar batch, may be empty if only one batch exists.
            type: string
          configurationName:
            description: Integration configuration name.
            type: string
          description:
            description: Time import service description.
            type: string
          previousImportResult:
            description: Result if time file had been imported previously.
            type: string
          error:
            description: Error message indicating problem.
            type: string
      EmployeeTrainingViewModel:
        required:
          - code
          - category
        type: object
        properties:
          id:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
          code:
            type: string
          description:
            type: string
          level:
            type: string
          status:
            type: string
          startDate:
            format: date-time
            type: string
          endDate:
            format: date-time
            type: string
          companyPaid:
            format: double
            type: number
          employeePaid:
            format: double
            type: number
          reimbursed:
            type: boolean
          notes:
            type: string
          scheduledDate:
            format: date-time
            type: string
          expirationDate:
            format: date-time
            type: string
          renewalFrequency:
            type: string
          instructor:
            type: string
          certificate:
            type: string
          hours:
            format: double
            type: number
          score:
            format: double
            type: number
          category:
            type: string
      ResponseDataWrapper_List_EmployeeAccrualViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeAccrualViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_String_:
        type: object
        properties:
          data:
            type: string
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_EmployeeAccrualViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EmployeeAccrualViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_CompanyAccrualViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/CompanyAccrualViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_CompanyAccrualViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/CompanyAccrualViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeCertificationViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeCertificationViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_LookupCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_CompanyInformationViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/CompanyInformationViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_CostCenterViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/CostCenterViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_CostCenterViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/CostCenterViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_CompanyCalendarViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/CompanyCalendarViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_EarningsResponseViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EarningsResponseViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_DeductionCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/DeductionCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_DeductionCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/DeductionCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EarningCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EarningCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_EarningCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EarningCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeEducationViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeEducationViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/PagedDataResult_EmployeeSearchResultsViewModel_'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      PagedDataResult_EmployeeSearchResultsViewModel_:
        type: object
        properties:
          EntityList:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeSearchResultsViewModel'
          TotalRecords:
            format: int32
            type: integer
          TotalPages:
            format: int32
            type: integer
          ResultIdentifier:
            type: string
          DistinctFieldNames:
            type: array
            items:
              type: string
          DistinctChangedBy:
            type: array
            items:
              type: string
      ResponseDataWrapper_EmployeeGetRequestViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EmployeeGetRequestViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_EmployeeDeductionCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeEarningCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_EmployeeEarningCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_PtoRequestViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PtoRequestViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_JobCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/JobCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_JobCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/JobCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeLicenseViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeLicenseViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_LookupCodeWithScopeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/LookupCodeWithScopeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_OnboardingSettingsViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/OnboardingSettingsViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      LookupViewModel_String_Int32_:
        type: object
        properties:
          Key:
            description: The value of the lookup item
            type: string
          Value:
            format: int32
            description: The description of the lookup item
            type: integer
      ResponseDataWrapper_List_PayHistorySearchResults_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PayHistorySearchResults'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_PayHistoryDetails_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PayHistoryDetails'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_PayrollVerificationViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/PayrollVerificationViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeRateViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeRateViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_ReportListItem_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/ReportListItem'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_ReportProperties_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/ReportProperties'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeReviewViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeReviewViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeReviewSearchViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeReviewSearchViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_ShiftCodeViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/ShiftCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_ShiftCodeViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/ShiftCodeViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeSkillViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeSkillViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_TaxViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TaxViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_TaxViewModel_:
        type: object
        properties:
          data:
            $ref: '#/components/schemas/TaxViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_TimeImportResultViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/TimeImportResultViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_List_EmployeeTrainingViewModel_:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeTrainingViewModel'
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
      ResponseDataWrapper_StringArray_:
        type: object
        properties:
          data:
            type: array
            items:
              type: string
          errors:
            type: array
            items:
              type: string
          messages:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
          validationErrors:
            type: array
            items:
              type: string
          metadata:
            type: object
            additionalProperties:
              type: object
konfigCliVersion: 1.38.37
