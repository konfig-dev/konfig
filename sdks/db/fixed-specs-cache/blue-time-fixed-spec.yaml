publishJson:
  company: BlueTime
  serviceName: false
  sdkName: blue-time-{language}-sdk
  clientName: BlueTime
  metaDescription: >-
    Don’t stress over integrating with multiple providers to fulfill your
    payment needs – Unify your payment processes effortlessly with Orchestra’s
    comprehensive Payment Orchestration Platform. By integrating once, you gain
    access to a powerful, all-encompassing, yet simple-to-integrate API that
    streamlines complex payment procedures, saving you time and resources.
  apiStatusUrls: inherit
  homepage: bluetime.io/
  developerDocumentation: developers.bluetime.io/reference
  categories:
    - payments
    - financial_services
    - fintech
    - online_payments
rawSpecString: |
  openapi: 3.0.1
  info:
    title: Orchestra API
    description: Code Version 1.0.7.15
    version: Prod
  servers:
    - url: https://api.epaytools.com
  paths:
    /CustomForms:
      get:
        tags:
          - CustomForms
        summary: List Custom Forms
        description: >-
          This method allows you to retrieve the list of custom forms stored in
          PCI Booking
        operationId: CustomFormsList
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.CustomFormMetaModel'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /CustomForms/{name}:
      put:
        tags:
          - CustomForms
        summary: Upload a custom form folder (add or replace)
        description: "This method allows you to upload a custom form into PCI Booking. You can design your custom form copletely on your own and upload any and all related content (JavaScript, stylesheet, images, etc) to PCI Booking. All content should be stored in one ZIP file that you will provide in this request.\r\nThe uploaded data should be a zip file, properly encoded as a part named 'zipFile' in the body."
        operationId: CustomFormsUpload
        parameters:
          - name: name
            in: path
            description: >-
              The unique name to identify this form in PCI Booking. You will use
              this value whenever referencing this custom form.
            required: true
            schema:
              type: string
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  ContentType:
                    type: string
                  ContentDisposition:
                    type: string
                  Headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  Length:
                    type: integer
                    format: int64
                  Name:
                    type: string
                  FileName:
                    type: string
              encoding:
                ContentType:
                  style: form
                ContentDisposition:
                  style: form
                Headers:
                  style: form
                Length:
                  style: form
                Name:
                  style: form
                FileName:
                  style: form
            application/json:
              schema:
                type: object
                properties:
                  ContentType:
                    type: string
                  ContentDisposition:
                    type: string
                  Headers:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                  Length:
                    type: integer
                    format: int64
                  Name:
                    type: string
                  FileName:
                    type: string
              encoding:
                ContentType:
                  style: form
                ContentDisposition:
                  style: form
                Headers:
                  style: form
                Length:
                  style: form
                Name:
                  style: form
                FileName:
                  style: form
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.CustomFormUploadModel'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - CustomForms
        summary: Delete a Custom Forms
        description: >-
          This method allows you to delete a custom form that was previously
          stored in PCI Booking.
        operationId: CustomFormsDelete
        parameters:
          - name: name
            in: path
            description: >-
              The unique identifier provided to this custom form when originally
              uploaded
            required: true
            schema:
              type: string
        responses:
          '401':
            description: Not authenticated
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: string
        security:
          - ApiKeyAuth: []
    /ThreeDsMerchants:
      get:
        tags:
          - ThreeDsMerchants
        summary: List Merchants
        operationId: ThreeDsMerchantsList
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/PayTools_Api.Models.ThreeDsMerchantOutputModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /ThreeDsMerchants/{name}:
      get:
        tags:
          - ThreeDsMerchants
        summary: Get a Merchant
        operationId: ThreeDsMerchantsGet
        parameters:
          - name: name
            in: path
            description: Name of merchant
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.ThreeDsMerchantOutputModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
      put:
        tags:
          - ThreeDsMerchants
        summary: Set a merchant
        operationId: ThreeDsMerchantsSet
        parameters:
          - name: name
            in: path
            description: Name of merchant
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        requestBody:
          description: 3DS Merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - ThreeDsMerchants
        summary: Delete a Merchant
        operationId: ThreeDsMerchantsDelete
        parameters:
          - name: name
            in: path
            description: Name of merchant
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        responses:
          '200':
            description: Success
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /CardOperations:
      post:
        tags:
          - CardOperations
        summary: Get a token to start a card operation
        operationId: CreateCardSignedToken
        parameters:
          - name: ttl
            in: query
            description: Time to live for the returned token
            required: true
            schema:
              maximum: 3600
              minimum: 60
              type: integer
              format: int32
        requestBody:
          description: The data to be validated in further requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Bl.Authentication.PreSignedDataModel
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.JwsMultipleOutputModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /CardOperations/validate:
      post:
        tags:
          - CardOperations
        summary: Perform card validation
        operationId: ValidateCard
        parameters:
          - name: iin
            in: query
            description: Card prefix
            required: true
            schema:
              pattern: \d{6,11}
              type: string
        requestBody:
          description: Payer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.PayerBase'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.JwsOutputModel1pciBooking.IINLookup.Library.CardValidationResultpciBooking.IINLookup.LibraryVersion1.0.4.0CultureneutralPublicKeyTokennull
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CardOperations/charge:
      post:
        tags:
          - CardOperations
        summary: Perform Univesal payment gateway charge operation
        operationId: ChargeCard
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CardOpsChargeRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.JwsOutputModel1Payments.OperationResultPaymentsVersion0.0.0.0CultureneutralPublicKeyTokennull
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CardOperations/store:
      post:
        tags:
          - CardOperations
        summary: Tokenize and store card number
        operationId: StoreCardNumber
        requestBody:
          description: Model with card number to be tokenized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.StringTokenIntputModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.JwsOutputModel1PayTools_Api.Models.StringTokenMetaDataOutputModelPayToolsApiVersion1.0.7.15CultureneutralPublicKeyTokennull
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CardOperations/opValidate:
      get:
        tags:
          - CardOperations
        summary: Perform validation of the operation using to signed data
        operationId: ValidateCardOperation
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Bl.Authentication.SignedData'
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CardOperations/topBrands:
      get:
        tags:
          - CardOperations
        summary: >-
          Return top credit card brands for lookup of up to 5 first digits. It
          covers 90% of the cases
        description: "The result is an array of 5 elements, where each element represents iin prefixes for a givel size as well as the list of logo Url's for all brands.\r\nEach element in the top-level array is an object where members are prefixes and data is the brand.\r\nFor a quick lookup:\r\n1. get the element by the size of your prefix.\r\n2. try to obtain the prefix as a member name; The member value is the brand\r\n\r\nFor logo lookup finf thr brand name as the key to the logos member.\r\nIf not found, you can try using 'DEFAULT'."
        operationId: GetTopBrands
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.TopBrands'
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CardOperations/brand:
      get:
        tags:
          - CardOperations
        summary: Return brand of card prefix.
        operationId: CardBrandLookup
        parameters:
          - name: iin
            in: query
            description: Card prefix
            required: true
            schema:
              pattern: \d{6,11}
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.BrandLookupResult'
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /CvvOperations:
      post:
        tags:
          - CvvOperations
        summary: Get a token to start a CVV operation
        operationId: CreateCvvSignedToken
        parameters:
          - name: ttl
            in: query
            description: Time to live for the returned token
            required: true
            schema:
              maximum: 3600
              minimum: 60
              type: integer
              format: int32
        requestBody:
          description: The data to be validated in further requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Bl.Authentication.CvvSignedDataModel
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /CvvOperations/charge:
      post:
        tags:
          - CvvOperations
        summary: Perform Univesal payment gateway charge operation
        operationId: ChargeCardCvv
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CvvOpsChargeRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.JwsOutputModel1PayTools_Bl.Authentication.ChargeCardSignedModelPayToolsBlVersion1.0.0.0CultureneutralPublicKeyTokennull
    /CvvOperations/opValidate:
      get:
        tags:
          - CvvOperations
        summary: >-
          Perform validation of the operation using signed data from charge
          operation
        operationId: ValidateCvvOperation
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Bl.Authentication.CvvSignedDataModel
    /NetworkToken:
      post:
        tags:
          - NetworkToken
        summary: Network-tokenize a card
        operationId: Tokenize
        requestBody:
          description: Tokenization Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Api.Models.NetworkTokenizationTokenizeRequest
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkToken.TokenizationResult'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - NetworkToken
        summary: Delete a Network-token
        operationId: DeleteNetworkToken
        requestBody:
          description: Delete Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Api.Models.NetworkTokenizationDeleteTokenRequest
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: boolean
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /PaymentGatewayAccounts/{name}:
      get:
        tags:
          - PaymentGatewayAccounts
        summary: Retrieve Payment Gateway Account
        description: "A Payment Gateway Account is the set of information necessary for connecting to a specific payment gateway through our system.\r\nThis method allows you to retrieve the information set on a particular payment gateway account. You can then update it using the `[PUT] PaymentGatewayAccounts/{name}` method"
        operationId: PaymentGatewayAccountRetrieve
        parameters:
          - name: name
            in: path
            description: A unique name of this Payment Gateway Account
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.PaymentGatewayAccountFullOutputModel
          '401':
            description: Not authenticated
          '404':
            description: Not found
        security:
          - ApiKeyAuth: []
      put:
        tags:
          - PaymentGatewayAccounts
        summary: Add or Replace a Payment Gateway Account
        description: "A Payment Gateway Account is the set of information necessary for connecting to a specific payment gateway through our system.\r\nThis method allows you to add a new stored Payment Gateway Account in the system or to replace an existing one."
        operationId: PaymentGatewayAccountSet
        parameters:
          - name: name
            in: path
            description: A unique name of this Payment Gateway Account
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        requestBody:
          description: Payment gateway account data
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Api.Models.PaymentGatewayAccountInputModel
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.PaymentGatewayAccountFullOutputModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - PaymentGatewayAccounts
        summary: Delete a Payment Gateway Account
        description: >-
          This method allows you to delete a stored Payment Gateway Account in the
          system.
        operationId: PaymentGatewayAccountDelete
        parameters:
          - name: name
            in: path
            description: A unique name of this Payment Gateway Account
            required: true
            schema:
              pattern: ^[A-Za-z0-9]{3,64}$
              type: string
        responses:
          '200':
            description: Success
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /PaymentGatewayAccounts:
      get:
        tags:
          - PaymentGatewayAccounts
        summary: List Payment Gateway Accounts
        description: >-
          This method allows you to list all stored Payment Gateway Accounts in
          the system
        operationId: PaymentGatewayAccountsList
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/PayTools_Api.Models.PaymentGatewayAccountBriefOutputModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /PaymentGateway:
      get:
        tags:
          - PaymentGateway
        summary: List all payment gateways
        description: "To provide you with full payment orchestration capabilities, we have integrated with many different payment gateways and processors around the world. This method allows you to retrieve the list of all integrated payment gateways in our system and provide you with the relevant connection settings required for each of them.\r\nTo see a graphical list of the supported payment gateways, please visit our website.\r\nIf you would like us to support a new payment gateway not on the list, please contact our support."
        operationId: GatewayList
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/PayTools_Api.Models.PaymentGatewayDescriptionModel
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /PaymentGateway/charge:
      post:
        tags:
          - PaymentGateway
        summary: Perform a payment gateway charge operation
        description: "This method allows you to perform a \"charge\" operation through your payment gateway. A \"charge\" operation will request immediate payment from the card and the card owner will see this listed as a transaction in their card statement.\r\nIf needed, you can void this \"charge\" operation by using the `[DELETE] /PaymentGateway/void` method."
        operationId: GatewayCharge
        requestBody:
          description: Card charge model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.AuthRequestModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payments.OperationResult'
          '202':
            description: Accepted (for future processing by payment gateway)
          '400':
            description: Bad data
          '401':
            description: Not authenticated
          '409':
            description: Conflict - rejected by payment gateway
          '500':
            description: Error with payment gateway
          '503':
            description: Temporary failure with payment gateway
        security:
          - ApiKeyAuth: []
    /PaymentGateway/authorize:
      post:
        tags:
          - PaymentGateway
        summary: Perform a payment gateway authorize operation
        description: "This method allows you to perform an \"authorize\" operation (also called \"preauthorization\" or \"authorization\") through your payment gateway. When you perform the \"authorize\" operation, the bank that issued the credit card will place an authorization of the total amount of the funds. This is how the bank determines if the funds are available to make the purchase. The card will not actually be “charged” until you perform the \"capture\" operation (using our `[PUT] /PaymentGateway/capture` method).\r\n**Please note**, different card brands and different banks allow for different time frames on the lifespan of a payment authorization. You will need to check with your payment processor on how long you would have between performing an \"authorize\" operation and a \"charge\" operation\".\r\nIf needed, you can void this \"authorize\" operation by using the `[DELETE] /PaymentGateway/void` method"
        operationId: GatewayAuthorize
        requestBody:
          description: Card charge model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.AuthRequestModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payments.OperationResult'
          '202':
            description: Accepted (for future processing by payment gateway)
          '400':
            description: Bad data
          '401':
            description: Not authenticated
          '409':
            description: Conflict - rejected by payment gateway
          '500':
            description: Error with payment gateway
          '503':
            description: Temporary failure with payment gateway
        security:
          - ApiKeyAuth: []
    /PaymentGateway/capture:
      put:
        tags:
          - PaymentGateway
        summary: Perform a payment gateway capture operation
        description: "This method allows you to perform a \"capture\" operation on a previously created \"authorize\" operation (see our `[POST] /PaymentGateway/authorize` method for additional information).\r\nWhen you perform the \"authorize\" operation, the bank that issued the credit card will place an authorization of the total amount of the funds. This is how the bank determines if the funds are available to make the purchase. The card will not actually be “charged” until you perform the \"capture\" operation.\r\n**Please note**, different card brands and different banks allow for different time frames on the lifespan of a payment authorization. You will need to check with your payment processor on how long you would have between performing an \"authorize\" operation and a \"charge\" operation\"."
        operationId: GatewayCapture
        requestBody:
          description: Capture or Void Request Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CaptureVoidRequestModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payments.OperationResult'
          '202':
            description: Accepted (for future processing by payment gateway)
          '400':
            description: Bad data
          '401':
            description: Not authenticated
          '409':
            description: Conflict - rejected by payment gateway
          '500':
            description: Error with payment gateway
          '503':
            description: Temporary failure with payment gateway
        security:
          - ApiKeyAuth: []
    /PaymentGateway/refund:
      put:
        tags:
          - PaymentGateway
        summary: Perform a payment gateway refund operation
        description: >-
          This method allows you to submit a "refund" operation against a
          previously created "charge" (using `[POST] /PaymentGateway/charge`) or
          "capture" (using `[POST] /PaymentGateway/capture`) operations.
        operationId: GatewayRefund
        requestBody:
          description: Capture or Void Request Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.RefundRequestModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payments.OperationResult'
          '202':
            description: Accepted (for future processing by payment gateway)
          '400':
            description: Bad data
          '401':
            description: Not authenticated
          '409':
            description: Conflict - rejected by payment gateway
          '500':
            description: Error with payment gateway
          '503':
            description: Temporary failure with payment gateway
        security:
          - ApiKeyAuth: []
    /PaymentGateway/void:
      delete:
        tags:
          - PaymentGateway
        summary: Perform a payment gateway Void operation
        description: >-
          This method allows you to submit a "void" operation against a previously
          created "charge" (using `[POST] /PaymentGateway/charge`) or "authorize"
          (using `[POST] /PaymentGateway/authorize`) operations.
        operationId: GatewayVoid
        requestBody:
          description: Capture or Void Request Model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CaptureVoidRequestModel'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payments.OperationResult'
          '202':
            description: Accepted (for future processing by payment gateway)
          '400':
            description: Bad data
          '401':
            description: Not authenticated
          '409':
            description: Conflict - rejected by payment gateway
          '500':
            description: Error with payment gateway
          '503':
            description: Temporary failure with payment gateway
        security:
          - ApiKeyAuth: []
    /ThreeDsSessions:
      post:
        tags:
          - ThreeDsSessions
        summary: Get a token to start a card operation
        operationId: Create3DsSignedToken
        parameters:
          - name: ttl
            in: query
            description: Time to live for the returned token
            required: true
            schema:
              maximum: 3600
              minimum: 60
              type: integer
              format: int32
        requestBody:
          description: The data to be validated in further requests
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayTools_Bl.Authentication.ThreeDsSessionModel
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /ThreeDsSessions/opValidate:
      get:
        tags:
          - ThreeDsSessions
        summary: Perform validation of the operation using to signed data
        operationId: Validate3DsOperation
        responses:
          '200':
            description: Success
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /ThreeDsSessions/challengeStatus:
      get:
        tags:
          - ThreeDsSessions
        summary: Get challenge ststus, as stored on server
        operationId: GetChallengeStatus
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Shared.Models.ThreeDsClientMessage
          '401':
            description: Not authenticated
        security:
          - JwsAuth: []
    /ThreeDsSessions/mpiChallengeCallback/{sessionId}:
      get:
        tags:
          - ThreeDsSessions
        summary: Handle a callback (redirect from challenge)
        operationId: AcceptMpiCallback
        parameters:
          - name: sessionId
            in: path
            description: The value containing data to designate the client
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
    /ThreeDsSessions/fingerprintCallback/{sessionId}:
      post:
        tags:
          - ThreeDsSessions
        summary: Handle a callback (redirect from device fingerprint)
        operationId: AcceptMpiFingerprintCallback
        parameters:
          - name: sessionId
            in: path
            description: The value containing data to designate the client
            required: true
            schema:
              pattern: '[A-Za-z0-9]{32}'
              type: string
        responses:
          '200':
            description: Success
    /Utils/apiKey:
      get:
        tags:
          - Utils
        summary: Validate Apikey
        description: >-
          This operation allows you to validate your API key and make sure that it
          is operational. Additionally, this method will allow you to test and
          check that the API is functioning properly
        operationId: ValidateApiKey
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.AuthenticationResult'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /Tools/brand:
      get:
        tags:
          - Tools
        summary: Brand Lookup
        description: "This method allows you to lookup the brand of the card provided. \r\n            By providing the card's BIN / IIN (the first 6 to 11 digits of the card number), we lookup and return the brand of the card (Visa, Mastercard, Amex, etc.).\r\n            In addition, we will also provide the URL to the logo of the card brand - you can then reference this image in your card capture form."
        operationId: BrandLookup
        parameters:
          - name: iin
            in: query
            description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
            required: true
            schema:
              pattern: \d{6,11}
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.BrandLookupResult'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /StringTokens:
      post:
        tags:
          - StringTokens
        summary: Store and tokenize a string
        description: "This method allows you to submit a string to be stored and tokenized in our system.\r\nOnce tokenized, the token ID will be returned in the body of the response and the full token URI will be returned in the `Location` header."
        operationId: StoreStringToken
        requestBody:
          description: StringToken input model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.StringTokenIntputModel'
          required: true
        responses:
          '201':
            description: Created
            headers:
              Location:
                description: Token URI representing the stringToken
                schema:
                  type: string
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel
          '400':
            description: Bad data
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /Tools/iin:
      get:
        tags:
          - Tools
        summary: Metadata Lookup
        description: "This method allows you to lookup the metadata of the card provided. \r\nBy providing the card's BIN / IIN (the first 6 to 11 digits of the card number), we lookup and return the full metadata available for this card./r/nI\r\nIn addition, we will also provide the URL to the logo of the card brand - you can then reference this image in your card capture form."
        operationId: MetadataLookup
        parameters:
          - name: iin
            in: query
            description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
            required: true
            schema:
              pattern: \d{6,11}
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.IinData'
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /StringTokens/{token}:
      get:
        tags:
          - StringTokens
        summary: Retrieve content of StringToken
        description: >-
          This method allows you to retrieve the stored content of the
          StringToken.
        operationId: StringTokenRetrieve
        parameters:
          - name: token
            in: path
            description: >-
              The token ID of the StringToken you would like to retrieve the
              content for
            required: true
            schema:
              pattern: '[A-Za-z0-9]{32}'
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.StringTokenOutputModel
          '401':
            description: Not authenticated
          '404':
            description: Not found
        security:
          - ApiKeyAuth: []
      delete:
        tags:
          - StringTokens
        summary: Delete an existing string by token
        description: This method allows you to delete a stringToken by its token
        operationId: Delete
        parameters:
          - name: token
            in: path
            description: The token ID representing the string to be deleted
            required: true
            schema:
              pattern: '[A-Za-z0-9]{32}'
              type: string
        responses:
          '200':
            description: Success
          '401':
            description: Not authenticated
          '404':
            description: Not found
        security:
          - ApiKeyAuth: []
    /StringTokens/{token}/meta:
      get:
        tags:
          - StringTokens
        summary: Retrieve meta data of a StringToken
        description: "This method allows you to retrieve the meta data of a StringToken.\r\nThe response to this method will **not** retrieve the content of the StringToken (you can do that by using `GET /StringTokens/{token}`)"
        operationId: StringTokenRetrieveMetaData
        parameters:
          - name: token
            in: path
            description: Token representing the string to be retrieved
            required: true
            schema:
              pattern: '[A-Za-z0-9]{32}'
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel
          '401':
            description: Not authenticated
          '404':
            description: Not found
        security:
          - ApiKeyAuth: []
    /Tools/validate:
      post:
        tags:
          - Tools
        summary: Card Validation
        description: "This method allows you to validate the card details against the card's meta data. By providing the billing address and IP address of the card owner, we validate those against the metadata of the card and provide a risk assessment for this transaction.\r\nAll you would need is the card's BIN / IIN (the first 6 to 11 digits of the card number), the billing address and IP address.\r\nThe response of this method will include the full metadata information for this BIN including the risk assessment."
        operationId: CardValidate
        parameters:
          - name: iin
            in: query
            description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
            required: true
            schema:
              pattern: \d{6,11}
              type: string
        requestBody:
          description: payer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.PayerBaseWithClientIp'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PayTools_Api.Models.CardValidationResults'
          '400':
            description: Bad data
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
    /Tools/luhn:
      get:
        tags:
          - Tools
        summary: Luhn Algorithm Validation
        description: >-
          This method allows you to provide the card number and validate it
          against the<a href="https://en.wikipedia.org/wiki/Luhn_algorithm"
          target="_blank"> Luhn algorithm</a>.In addition, you can choose to
          receive the card's metadata in the response.
        operationId: CardLuhnValidate
        parameters:
          - name: number
            in: query
            description: The full card number to be validated.
            required: true
            schema:
              type: string
          - name: metaData
            in: query
            description: >-
              An optional indicator to specify whether the card metadata should be
              included in the response.
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PayTools_Api.Models.LuhnCheckResultsWithIinData
          '400':
            description: Bad data
          '401':
            description: Not authenticated
        security:
          - ApiKeyAuth: []
  components:
    schemas:
      NetworkToken.CardSource:
        enum:
          - OnFile
          - UserInput
        type: string
      NetworkToken.RequestSource:
        enum:
          - Merchant
          - CardHolder
          - Issuer
        type: string
      NetworkToken.TokenizationResult:
        type: object
        properties:
          resultCode:
            $ref: '#/components/schemas/NetworkToken.TokenizationResultCode'
          brand:
            $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
          tokenId:
            type: string
            nullable: true
          tokenizedCard:
            $ref: '#/components/schemas/Payments.BankCardBase'
        additionalProperties: false
      NetworkToken.TokenizationResultCode:
        enum:
          - Success
          - Failure
          - NotSupported
        type: string
      PayTools_Api.Models.AuthRequestModel:
        required:
          - amount
          - card
          - currency
        type: object
        properties:
          currency:
            minLength: 1
            type: string
            description: >-
              The currency of the transaction. Based on the <a
              href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
              target="_blank">ISO 4217</a> standard.
          isDigital:
            type: boolean
            description: >-
              This field is an additional optional parameter used by some of our
              payment processors. Please read our additional guidance section for
              payment processors that use this and other parameters
          orderDesc:
            type: string
            description: >-
              This field is an additional optional parameter used by some of our
              payment processors. Please read our additional guidance section for
              payment processors that use this and other parameters
            nullable: true
          payerDetails:
            $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
          card:
            $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
          amount:
            type: number
            description: >-
              The amount to be charged (the amount should be in major units - for
              example, 10.23)
            format: double
          myRef:
            type: string
            description: Your custom reference for this transaction
            nullable: true
          paymentGatewayAccountName:
            type: string
            description: "The reference name provided to the stored Payment Gateway Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please note**, if you provide us with both this parameter and the raw credentials in the `paymentGatewayAccount` object, this parameter will be ignored and the raw credentials will take precedence."
            nullable: true
          certificateName:
            maxLength: 128
            type: string
            description: >-
              Optional parameter if the payment gateway requires authentication
              using a client certificate. The name of the certificate that was
              stored in our system via our <a href="https://portal.epaytools.com"
              target="_blank">users portal</a>
            nullable: true
          paymentGatewayAccount:
            $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
          networkTokenBrand:
            $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        additionalProperties: false
        description: >-
          Model for a Charge/Pre-authorize request for card processing via a
          payment gateway
      PayTools_Api.Models.AuthenticationResult:
        type: object
        properties:
          status:
            type: string
            description: Status
            nullable: true
          userName:
            type: string
            description: Username
            nullable: true
          accountId:
            type: integer
            description: Account Id
            format: int64
          isSandbox:
            type: boolean
            description: Is this a sandbox user
        additionalProperties: false
        description: Model for display authentication results
      PayTools_Api.Models.BrandLookupResult:
        type: object
        properties:
          brand:
            type: string
            description: The card's brand that was identified
            nullable: true
          brandLogoUrl:
            type: string
            description: The url to the brand logo
            nullable: true
        additionalProperties: false
        description: Output model for Brand lookup
      PayTools_Api.Models.CaptureVoidRequestModel:
        required:
          - amount
          - card
          - currency
          - refTransId
        type: object
        properties:
          currency:
            minLength: 1
            type: string
            description: >-
              The currency of the transaction. Based on the <a
              href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
              target="_blank">ISO 4217</a> standard.
          refTransId:
            minLength: 1
            type: string
            description: The transaction ID that this operation is referring to.
          card:
            $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
          amount:
            type: number
            description: >-
              The amount to be charged (the amount should be in major units - for
              example, 10.23)
            format: double
          myRef:
            type: string
            description: Your custom reference for this transaction
            nullable: true
          paymentGatewayAccountName:
            type: string
            description: "The reference name provided to the stored Payment Gateway Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please note**, if you provide us with both this parameter and the raw credentials in the `paymentGatewayAccount` object, this parameter will be ignored and the raw credentials will take precedence."
            nullable: true
          certificateName:
            maxLength: 128
            type: string
            description: >-
              Optional parameter if the payment gateway requires authentication
              using a client certificate. The name of the certificate that was
              stored in our system via our <a href="https://portal.epaytools.com"
              target="_blank">users portal</a>
            nullable: true
          paymentGatewayAccount:
            $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
          networkTokenBrand:
            $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        additionalProperties: false
        description: >-
          Model for a Capturing or voiding a previously Pre-authorize request via
          a payment gateway
      PayTools_Api.Models.CardBaseWithSecurityCode:
        required:
          - cardNumber
          - expirationMonth
          - expirationYear
        type: object
        properties:
          cvv:
            pattern: ^\d{3,4}$
            type: string
            description: Card security code (digits on back of card)
            nullable: true
          cardNumber:
            minLength: 1
            pattern: ^(\d{12,20}|@[A-Za-z0-9]{32})$
            type: string
            description: >-
              Card number (PAN) or a Reference to a Tokenized string. A Token
              should be referenced in the format @TOKEN, e.g
              "@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO"
          expirationYear:
            type: integer
            description: Expiration year
            format: int32
          expirationMonth:
            maximum: 12
            minimum: 1
            type: integer
            description: Expiration month
            format: int32
        additionalProperties: false
        description: Base model for card with Security code
      PayTools_Api.Models.CardInputModel:
        required:
          - cardHolderName
          - cardNumber
          - expirationMonth
          - expirationYear
        type: object
        properties:
          ownerID:
            type: string
            description: Card owner Id
            nullable: true
          issueNumber:
            type: string
            description: Card Issue Number
            nullable: true
          cvv:
            pattern: ^\d{3,4}$
            type: string
            description: Card security code (digits on back of card)
            nullable: true
          threeDSAuthentication:
            $ref: >-
              #/components/schemas/PayTools_Api.Models.ThreeDSAuthenticationInputModel
          cardType:
            $ref: '#/components/schemas/Payments.CardTypes'
          cardHolderName:
            maxLength: 30
            minLength: 3
            type: string
            description: Cardholder name (as apears on card)
          cardNumber:
            minLength: 1
            pattern: ^(\d{12,20}|@[A-Za-z0-9]{32})$
            type: string
            description: >-
              Card number (PAN) or a Reference to a Tokenized string. A Token
              should be referenced in the format @TOKEN, e.g
              "@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO"
          expirationYear:
            type: integer
            description: Expiration year
            format: int32
          expirationMonth:
            maximum: 12
            minimum: 1
            type: integer
            description: Expiration month
            format: int32
        additionalProperties: false
        description: >-
          The card details that should be charged. You can either provide us with
          the raw card details or provide a reference to the stored card details
          in a token.
      PayTools_Api.Models.CardOpsChargeRequest:
        required:
          - card
        type: object
        properties:
          payerDetails:
            $ref: '#/components/schemas/PayTools_Api.Models.PayerDetailsNoIpAddress'
          card:
            $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
          myRef:
            type: string
            description: Your custom reference for this transaction
            nullable: true
        additionalProperties: false
        description: >-
          Model for a Charge request for card processing via a payment gateway
          using Card operations
      PayTools_Api.Models.CardValidationResults:
        type: object
        properties:
          riskLevel:
            type: string
            description: >-
              The risk level associated with this transaction (possible values are
              `VeryLow`, `Low`, `High` and `VeryHigh`)
            nullable: true
          description:
            type: string
            description: A description of the risk that was identified for this transaction.
            nullable: true
          cardBrand:
            type: string
            description: The card brand (AMERICAN EXPRESS, VISA, MASTERCARD, JCB etc)
            nullable: true
          cardType:
            type: string
            description: Type of card (e.g 'CREDIT', 'DEBIT', etc.)
            nullable: true
          cardCategory:
            type: string
            description: Card category (e.g 'GIFT', 'PROPRIETARY' etc.)
            nullable: true
          issuerName:
            type: string
            description: Name of Card issuer (e.g 'Bank of America')
            nullable: true
          issuerCountry:
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>) of the card issuer's country
            nullable: true
          countryByIP:
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>) of the country detected by the Payer's IP address
            nullable: true
          countryFromBillingAddress:
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>) from the Payer's billing address
            nullable: true
          anonymousProxyUsed:
            type: boolean
            description: Is the Payer's IP address coming from an Anonymous Proxy
        additionalProperties: false
        description: Results for a card validation request
      PayTools_Api.Models.CustomFormMetaModel:
        type: object
        properties:
          creationTime:
            type: string
            description: Time the Custom Form was initially created
            format: date-time
          updateTime:
            type: string
            description: Time the Custom Form was lastly updated
            format: date-time
            nullable: true
          name:
            type: string
            description: >-
              The Custom Form name. It should be used for referencing the form for
              management and for usage
            nullable: true
        additionalProperties: false
        description: Model for Custom Form meta-data retrieval
      PayTools_Api.Models.CustomFormUploadModel:
        type: object
        properties:
          formBaseUrl:
            type: string
            description: The base url to an uploaded custom form
            nullable: true
        additionalProperties: false
        description: Model for returning the url to an uploaded custom form
      PayTools_Api.Models.CvvOpsChargeRequest:
        required:
          - cvv
        type: object
        properties:
          cvv:
            minLength: 1
            pattern: ^\d{3,4}$
            type: string
            description: >-
              The card details that should be charged. You can either provide us
              with the raw card details or provide a reference to the stored card
              details in a token.
        additionalProperties: false
        description: >-
          Model for a Charge request of an existing card after capturing security
          code (CVV) for card processing via a payment gateway using Card
          operations
      PayTools_Api.Models.IinData:
        type: object
        properties:
          bin:
            type: string
            description: >-
              The longest match of the first 6 to 11 digits of the card number
              that we were able to match
            nullable: true
          cardBrand:
            type: string
            description: The card brand (AMERICAN EXPRESS, VISA, MASTERCARD, JCB etc)
            nullable: true
          cardType:
            type: string
            description: The type of card (DEBIT, CREDIT, 'DEBIT OR CREDIT', CHARGE CARD)
            nullable: true
          category:
            type: string
            description: >-
              The category of the card (CLASSIC, BUSINESS, STANDARD, PERSONAL,
              etc)
            nullable: true
          issuingOrganization:
            type: string
            description: The name of the entity (usually bank) that issued the card
            nullable: true
          countryCode:
            type: string
            description: >-
              The 2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>) where the card was issued
            nullable: true
          brandLogoUrl:
            type: string
            description: The url to the brand logo
            nullable: true
        additionalProperties: false
        description: IIN data
      PayTools_Api.Models.JwsMultipleOutputModel:
        type: object
        properties:
          threeDsAuthToken:
            type: string
            description: The jws (token) value to be used for 3DS
            nullable: true
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with multiple tokens
      PayTools_Api.Models.JwsOutputModel:
        type: object
        properties:
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with a single Token
      PayTools_Api.Models.JwsOutputModel1PayTools_Api.Models.StringTokenMetaDataOutputModelPayToolsApiVersion1.0.7.15CultureneutralPublicKeyTokennull:
        type: object
        properties:
          payload:
            $ref: >-
              #/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with payload
      PayTools_Api.Models.JwsOutputModel1PayTools_Bl.Authentication.ChargeCardSignedModelPayToolsBlVersion1.0.0.0CultureneutralPublicKeyTokennull:
        type: object
        properties:
          payload:
            $ref: >-
              #/components/schemas/PayTools_Bl.Authentication.ChargeCardSignedModel
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with payload
      PayTools_Api.Models.JwsOutputModel1Payments.OperationResultPaymentsVersion0.0.0.0CultureneutralPublicKeyTokennull:
        type: object
        properties:
          payload:
            $ref: '#/components/schemas/Payments.OperationResult'
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with payload
      PayTools_Api.Models.JwsOutputModel1pciBooking.IINLookup.Library.CardValidationResultpciBooking.IINLookup.LibraryVersion1.0.4.0CultureneutralPublicKeyTokennull:
        type: object
        properties:
          payload:
            $ref: >-
              #/components/schemas/pciBooking.IINLookup.Library.CardValidationResult
          authToken:
            type: string
            description: >-
              The jws (token) value to be used in subsequent card operation
              methods
            nullable: true
        additionalProperties: false
        description: The model used to return a valid Jws with payload
      PayTools_Api.Models.LuhnCheckResultsWithIinData:
        type: object
        properties:
          iinData:
            $ref: '#/components/schemas/PayTools_Api.Models.IinData'
          luhnValid:
            type: boolean
            description: Indicates a successful luhn check
          error:
            type: string
            description: Error description
            nullable: true
        additionalProperties: false
        description: Luhn Check Results with IIn Data
      PayTools_Api.Models.NetworkTokenizationDeleteTokenRequest:
        required:
          - source
          - tokenId
        type: object
        properties:
          source:
            $ref: '#/components/schemas/NetworkToken.RequestSource'
          brand:
            $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
          tokenId:
            maxLength: 255
            minLength: 1
            type: string
            description: Token Id within the Brand
          reason:
            maxLength: 255
            type: string
            description: Reason for deletion
            nullable: true
        additionalProperties: false
        description: Network Tokenization Request
      PayTools_Api.Models.NetworkTokenizationPayer:
        required:
          - clientIPAddress
          - countryCode
          - firstName
          - lastName
        type: object
        properties:
          email:
            type: string
            description: Email address
            format: email
            nullable: true
          firstName:
            minLength: 1
            type: string
            description: First Name
          lastName:
            minLength: 1
            type: string
            description: Lasst Name
          phone:
            type: string
            description: Phone number
            format: tel
            nullable: true
          address1:
            type: string
            description: 1st address line
            nullable: true
          address2:
            type: string
            description: 2nd address line
            nullable: true
          address3:
            type: string
            description: 3rd address line
            nullable: true
          postCode:
            type: string
            description: Postal code or Zip code
            nullable: true
          clientIPAddress:
            minLength: 1
            type: string
            description: Client IP address
          city:
            type: string
            description: City
            nullable: true
          stateProvince:
            type: string
            description: State or Province
            nullable: true
          countryCode:
            minLength: 1
            pattern: '[A-Z]{2}'
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>)
        additionalProperties: false
        description: Model for accepting payer details for Network Tokenization
      PayTools_Api.Models.NetworkTokenizationTokenizeRequest:
        type: object
        properties:
          tokenizationRequest:
            $ref: '#/components/schemas/PayTools_Api.Models.TokenizationRequest'
          card:
            $ref: '#/components/schemas/PayTools_Api.Models.CardBaseWithSecurityCode'
        additionalProperties: false
        description: Network Tokenization Request
      PayTools_Api.Models.PayerBase:
        required:
          - countryCode
        type: object
        properties:
          city:
            type: string
            description: City
            nullable: true
          stateProvince:
            type: string
            description: State or Province
            nullable: true
          countryCode:
            minLength: 1
            pattern: '[A-Z]{2}'
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>)
        additionalProperties: false
        description: The billing information of the card owner to be used for validation
      PayTools_Api.Models.PayerBaseWithClientIp:
        required:
          - clientIPAddress
          - countryCode
        type: object
        properties:
          clientIPAddress:
            minLength: 1
            type: string
            description: Client IP address
          city:
            type: string
            description: City
            nullable: true
          stateProvince:
            type: string
            description: State or Province
            nullable: true
          countryCode:
            minLength: 1
            pattern: '[A-Z]{2}'
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>)
        additionalProperties: false
        description: >-
          The billing information of the card owner to be used for validation,
          incl. Client Ip address
      PayTools_Api.Models.PayerDetails:
        required:
          - clientIPAddress
          - countryCode
        type: object
        properties:
          address1:
            type: string
            description: 1st address line
            nullable: true
          address2:
            type: string
            description: 2nd address line
            nullable: true
          address3:
            type: string
            description: 3rd address line
            nullable: true
          postCode:
            type: string
            description: Postal code or Zip code
            nullable: true
          clientIPAddress:
            minLength: 1
            type: string
            description: Client IP address
          city:
            type: string
            description: City
            nullable: true
          stateProvince:
            type: string
            description: State or Province
            nullable: true
          countryCode:
            minLength: 1
            pattern: '[A-Z]{2}'
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>)
        additionalProperties: false
        description: The billing information of the card owner
      PayTools_Api.Models.PayerDetailsNoIpAddress:
        required:
          - countryCode
        type: object
        properties:
          address1:
            type: string
            description: 1st address line
            nullable: true
          address2:
            type: string
            description: 2nd address line
            nullable: true
          address3:
            type: string
            description: 3rd address line
            nullable: true
          postCode:
            type: string
            description: Postal code or Zip code
            nullable: true
          city:
            type: string
            description: City
            nullable: true
          stateProvince:
            type: string
            description: State or Province
            nullable: true
          countryCode:
            minLength: 1
            pattern: '[A-Z]{2}'
            type: string
            description: >-
              2 letter country code (<a
              href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
              target="_blank">ISO 3166-2 <img
              src="https://files.readme.io/b676144-openNewWindow.png" width="10"
              /></a>)
        additionalProperties: false
        description: The billing information of the card owner, without Ip Address
      PayTools_Api.Models.PaymentGatewayAccount:
        type: object
        properties:
          paymentGatewayName:
            type: string
            description: >-
              Unique name of the Payment Gateway the account information relates
              to.
            nullable: true
          credentials:
            type: array
            items:
              $ref: >-
                #/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e
            description: "A list of key-value pairs that represents your credentials within the Payment gateway. \r\nEach key should represent a parameter listed in the \"CredentialsNames\" element of the response from the list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n       \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
            nullable: true
        additionalProperties: false
        description: "The raw credentials necessary to connect to the chosen payment gateway as defined in `GET /PaymentGateway`.\r\n**Please note**, if you provide us with both the raw details here and a stored Payment Gateway Account in the `paymentGatewayAccountName` parameter, these credentials will take precedence."
      PayTools_Api.Models.PaymentGatewayAccountBriefOutputModel:
        type: object
        properties:
          name:
            type: string
            description: Name of account
            nullable: true
          paymentGatewayName:
            type: string
            description: >-
              Unique name of the Payment Gateway the account information relates
              to.
            nullable: true
          creationTime:
            type: string
            description: Date and time the credentials were stored
            format: date-time
        additionalProperties: false
        description: >-
          Output Model for designating a payment gateway account with a client
          certificate
      PayTools_Api.Models.PaymentGatewayAccountFullOutputModel:
        type: object
        properties:
          name:
            type: string
            description: Name of account
            nullable: true
          creationTime:
            type: string
            description: Date and time the credentials were stored
            format: date-time
          paymentGatewayName:
            type: string
            description: >-
              Unique name of the Payment Gateway the account information relates
              to.
            nullable: true
          credentials:
            type: array
            items:
              $ref: >-
                #/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e
            description: "A list of key-value pairs that represents your credentials within the Payment gateway. \r\nEach key should represent a parameter listed in the \"CredentialsNames\" element of the response from the list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n       \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
            nullable: true
        additionalProperties: false
        description: Output Model for designating a payment gateway account
      PayTools_Api.Models.PaymentGatewayAccountInputModel:
        type: object
        properties:
          paymentGatewayName:
            type: string
            description: >-
              Unique name of the Payment Gateway the account information relates
              to.
            nullable: true
          credentials:
            type: array
            items:
              $ref: >-
                #/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e
            description: "A list of key-value pairs that represents your credentials within the Payment gateway. \r\nEach key should represent a parameter listed in the \"CredentialsNames\" element of the response from the list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n       \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
            nullable: true
        additionalProperties: false
        description: Input Model for designating a payment gateway account
      PayTools_Api.Models.PaymentGatewayDescriptionModel:
        type: object
        properties:
          name:
            type: string
            description: The ePayTools internal identifier for this Payment Gateway
            nullable: true
          displayName:
            type: string
            description: The name of the Payment Gateway in friendly format
            nullable: true
          paymentGatewayUrl:
            type: string
            description: Url to Payment Gateway site (informational)
            nullable: true
          description:
            type: string
            description: Payment Gateway Description (informational)
            nullable: true
          credentialsNames:
            type: array
            items:
              type: string
            description: >-
              A list of all credential parameters needed to provide for this
              Payment Gateway
            nullable: true
          supportsNetworkToken:
            type: boolean
            description: >-
              Indicates whether the Payment gateway supports Network Token (from
              Card schemes)
        additionalProperties: false
        description: Model for Payment Gateway Description
      PayTools_Api.Models.RefundRequestModel:
        required:
          - amount
          - card
          - currency
          - refTransId
        type: object
        properties:
          currency:
            minLength: 1
            type: string
            description: >-
              The currency of the transaction. Based on the <a
              href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
              target="_blank">ISO 4217</a> standard.
          refTransId:
            minLength: 1
            type: string
            description: The transaction ID that this operation is referring to.
          payerDetails:
            $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
          card:
            $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
          amount:
            type: number
            description: >-
              The amount to be charged (the amount should be in major units - for
              example, 10.23)
            format: double
          myRef:
            type: string
            description: Your custom reference for this transaction
            nullable: true
          paymentGatewayAccountName:
            type: string
            description: "The reference name provided to the stored Payment Gateway Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please note**, if you provide us with both this parameter and the raw credentials in the `paymentGatewayAccount` object, this parameter will be ignored and the raw credentials will take precedence."
            nullable: true
          certificateName:
            maxLength: 128
            type: string
            description: >-
              Optional parameter if the payment gateway requires authentication
              using a client certificate. The name of the certificate that was
              stored in our system via our <a href="https://portal.epaytools.com"
              target="_blank">users portal</a>
            nullable: true
          paymentGatewayAccount:
            $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
          networkTokenBrand:
            $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        additionalProperties: false
        description: Model for UPG refund operation
      PayTools_Api.Models.StringTokenIntputModel:
        required:
          - payload
        type: object
        properties:
          payload:
            maxLength: 16384
            minLength: 1
            type: string
            description: The content of the string you would like to tokenize
        additionalProperties: false
        description: Model for providing a string to be tokenized
      PayTools_Api.Models.StringTokenMetaDataOutputModel:
        type: object
        properties:
          token:
            type: string
            description: Token ID representing the stringToken
            nullable: true
          createTime:
            type: string
            description: Date and time the string was stored
            format: date-time
        additionalProperties: false
        description: Model for display a string token meta-data
      PayTools_Api.Models.StringTokenOutputModel:
        type: object
        properties:
          clearPayload:
            type: string
            description: The content of the StringToken that was stored in our system
            nullable: true
          token:
            type: string
            description: Token ID representing the stringToken
            nullable: true
          createTime:
            type: string
            description: Date and time the string was stored
            format: date-time
        additionalProperties: false
        description: Model for display a string token, including the clear text
      PayTools_Api.Models.ThreeDSAuthenticationInputModel:
        required:
          - authenticationValue
          - eci
          - merchantName
          - version
          - xid
        type: object
        properties:
          authenticationValue:
            minLength: 1
            type: string
            description: Authentication value
          eci:
            maxLength: 2
            minLength: 1
            type: string
            description: Electronic Commerce Indicator
          xid:
            maxLength: 40
            minLength: 1
            type: string
            description: transaction ID from the 3D Secure provider
          version:
            maxLength: 5
            minLength: 1
            type: string
            description: 3ds Version
          merchantName:
            maxLength: 40
            minLength: 1
            type: string
            description: Merchant name
        additionalProperties: false
        description: Model for 3DS authentication data
      PayTools_Api.Models.ThreeDsMerchantOutputModel:
        type: object
        properties:
          name:
            type: string
            description: Account name (Name on system)
            nullable: true
          threeDsMerchant:
            $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
        additionalProperties: false
        description: Model for response of 3DS Merchant
      PayTools_Api.Models.TokenizationRequest:
        type: object
        properties:
          consumerLanguage:
            maxLength: 2
            minLength: 2
            type: string
            description: Iso-369-1 2-letter language code
            nullable: true
          cardHolder:
            $ref: '#/components/schemas/PayTools_Api.Models.NetworkTokenizationPayer'
          deviceScore:
            maximum: 5
            minimum: 1
            type: integer
            description: Device score
            format: int32
          accountScore:
            maximum: 5
            minimum: 1
            type: integer
            description: Account score
            format: int32
          deviceLocationLat:
            maximum: 90
            minimum: -90
            type: number
            description: Device latitude -90 to 90
            format: double
            nullable: true
          deviceLocationLon:
            maximum: 180
            minimum: -180
            type: number
            description: Device longitude -90 to 90
            format: double
            nullable: true
          deviceIpAddress:
            type: string
            description: Ip address of device
            nullable: true
          cardSource:
            $ref: '#/components/schemas/NetworkToken.CardSource'
        additionalProperties: false
        description: Model for sending Network Tokenization Request
      PayTools_Api.Models.TopBrands:
        type: object
        properties:
          prefixes:
            type: array
            items:
              type: object
              additionalProperties:
                type: string
            description: >-
              Top credit card brands for lookup of up to 5 first digits. It covers
              90% of the cases
            nullable: true
            readOnly: true
          logos:
            type: object
            additionalProperties:
              type: string
              nullable: true
            description: Dictionary of Brand name => brand logo Url
            nullable: true
            readOnly: true
        additionalProperties: false
        description: List of to brands and logos
      PayTools_Bl.Authentication.ChargeCardSignedModel:
        type: object
        properties:
          crg_rs:
            $ref: '#/components/schemas/Payments.OperationResult'
          card:
            $ref: '#/components/schemas/PayTools_Shared.Models.Card.StoredCard'
          crg_d:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
        additionalProperties: false
        description: Model for charge operation result after providing Cvv
      PayTools_Bl.Authentication.ChargePresetData:
        type: object
        properties:
          dsc:
            type: string
            description: Order description
            nullable: true
          ref:
            type: string
            description: Creator reference
            nullable: true
          dig:
            type: boolean
            description: Is it digital goods
          amt:
            $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
          uan:
            type: string
            description: The Upg Account name
            nullable: true
          ucc:
            type: string
            description: The Upg Client Certificate name
            nullable: true
        additionalProperties: false
        description: Data to be used in Charge request
      PayTools_Bl.Authentication.CvvSignedDataModel:
        type: object
        properties:
          card:
            $ref: '#/components/schemas/PayTools_Shared.Models.Card.StoredCard'
          crg_d:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
        additionalProperties: false
        description: Model for signing a Cvv Operation
      PayTools_Bl.Authentication.PreSignedDataModel:
        type: object
        properties:
          threeDsSessionModel:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsSessionModel'
          vld:
            $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
          3ds:
            $ref: '#/components/schemas/PayTools_Shared.Enums.Perform3ds'
          crg:
            type: boolean
            description: Is Card charge required for this session
          tkn:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.TokenizationAction'
          crg_d:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
        additionalProperties: false
        description: Model for initial request for a Card operation session
      PayTools_Bl.Authentication.SignedData:
        type: object
        properties:
          vld_rq:
            $ref: >-
              #/components/schemas/pciBooking.IINLookup.Library.CardValidationRequest
          vld_rs:
            $ref: >-
              #/components/schemas/pciBooking.IINLookup.Library.CardValidationResult
          crg_rq:
            $ref: '#/components/schemas/Payments.ChargeRequest'
          crg_rs:
            $ref: '#/components/schemas/Payments.OperationResult'
          tkn_rs:
            type: string
            description: Result from tokenization
            nullable: true
          3ds_d:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsPresetData'
          vld:
            $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
          3ds:
            $ref: '#/components/schemas/PayTools_Shared.Enums.Perform3ds'
          crg:
            type: boolean
            description: Is Card charge required for this session
          tkn:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.TokenizationAction'
          crg_d:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
        additionalProperties: false
        description: Class to represent signed data
      PayTools_Bl.Authentication.ThreeDMerchant:
        required:
          - brds
          - cnt
          - mds
          - mnm
          - msf
          - url
        type: object
        properties:
          mnm:
            minLength: 1
            type: string
            description: Merchant name
          mds:
            minLength: 1
            type: string
            description: Merchant's display name
          msf:
            minLength: 1
            type: string
            description: Merchant's Requestor Id suffix
          cnt:
            minLength: 1
            type: string
            description: Merchant's Country (3-digit ISO 3166-1 numeric)
          url:
            minLength: 1
            type: string
            description: Merchant's Url
            format: uri
          brds:
            type: array
            items:
              $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsBrand'
            description: List of supported brands
        additionalProperties: false
        description: The 3DS Merchant data to be signed
      PayTools_Bl.Authentication.ThreeDsBrand:
        required:
          - bin
          - mcc
          - mid
        type: object
        properties:
          brd:
            $ref: '#/components/schemas/Payments.CardTypes'
          bin:
            minLength: 1
            type: string
            description: Brand's Bin
          mid:
            minLength: 1
            type: string
            description: Merchant Id
          mcc:
            minLength: 1
            type: string
            description: Brand's MCC
        additionalProperties: false
        description: A brand for 3DS authentication
      PayTools_Bl.Authentication.ThreeDsPresetData:
        type: object
        properties:
          sid:
            type: string
            description: Session Id with MPI
            nullable: true
          mrc:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDMerchant'
          amt:
            $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
        additionalProperties: false
        description: Data to be used in 3DS authentication request
      PayTools_Bl.Authentication.ThreeDsSessionModel:
        required:
          - amt
          - merchantAccountName
        type: object
        properties:
          merchantAccountName:
            minLength: 1
            type: string
            description: The name of the stored merchant account
          amt:
            $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
        additionalProperties: false
        description: Data to be used in 3DS authentication request
      PayTools_Bl.Authentication.TokenizationAction:
        enum:
          - Always
          - IfChargeSuccessful
          - Never
        type: string
        description: Tokenization Action
      PayTools_Dal.Entities.ThreeDsBrand:
        required:
          - bin
          - mcc
          - merchantId
        type: object
        properties:
          brand:
            $ref: '#/components/schemas/Payments.CardTypes'
          bin:
            minLength: 1
            type: string
          merchantId:
            minLength: 1
            type: string
          mcc:
            minLength: 1
            type: string
        additionalProperties: false
      PayTools_Dal.Entities.ThreeDsMerchant:
        required:
          - acquirerName
          - merchantCountry
          - merchantDisplayName
          - merchantName
          - merchantRequestorIdSuffix
          - merchantUrl
        type: object
        properties:
          merchantName:
            minLength: 1
            type: string
          merchantDisplayName:
            minLength: 1
            type: string
          merchantRequestorIdSuffix:
            minLength: 1
            type: string
          merchantCountry:
            minLength: 1
            type: string
          merchantUrl:
            minLength: 1
            type: string
            format: uri
          acquirerName:
            minLength: 1
            type: string
          brands:
            type: array
            items:
              $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsBrand'
            nullable: true
        additionalProperties: false
      PayTools_Shared.Enums.Perform3ds:
        enum:
          - Mandatory
          - Skip
          - Optional
        type: string
        description: 'Options for performing #DS'
      PayTools_Shared.Models.Card.StoredCard:
        required:
          - cardHolderName
          - cardToken
          - expirationMonth
          - expirationYear
        type: object
        properties:
          cardToken:
            minLength: 1
            pattern: ^@[A-Za-z0-9]{32}$
            type: string
            description: >-
              a Reference to a Tokenized string. A Token should be referenced in
              the format @TOKEN, e.g "@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO"
          expirationYear:
            maximum: 2050
            minimum: 2023
            type: integer
            description: Expiration year
            format: int32
          expirationMonth:
            maximum: 12
            minimum: 1
            type: integer
            description: Expiration year
            format: int32
          cardType:
            $ref: '#/components/schemas/Payments.CardTypes'
          cardHolderName:
            maxLength: 30
            minLength: 3
            type: string
            description: Cardholder name (as apears on card)
        additionalProperties: false
        description: Base model for card with Card holder name and Card Type
      PayTools_Shared.Models.MessageType:
        enum:
          - NeverUsed
          - Authenticated
          - Rejected
          - FingerPrintRequired
          - FingerPrintCompleted
          - ChallengeRequired
          - TechnicalProblem
          - CardNotEnrolled
          - NoResponse
        type: string
        description: Client message type enumeration
      PayTools_Shared.Models.MoneyModel:
        required:
          - amt
          - cur
        type: object
        properties:
          cur:
            $ref: '#/components/schemas/Payments.CurrencyCode'
          amt:
            type: number
            description: Amount
            format: double
        additionalProperties: false
        description: Represents an amount in a given currency
      PayTools_Shared.Models.ThreeDsClientMessage:
        type: object
        properties:
          messageType:
            $ref: '#/components/schemas/PayTools_Shared.Models.MessageType'
        additionalProperties: false
        description: base class for message to client (Http response or over WebSocket)
      Payments.BankCard:
        type: object
        properties:
          type:
            $ref: '#/components/schemas/Payments.CardTypes'
          nameOnCard:
            type: string
            nullable: true
          issueNumber:
            maxLength: 2
            type: string
            nullable: true
          ownerId:
            type: string
            nullable: true
          securityCode:
            type: string
            nullable: true
          number:
            type: string
            nullable: true
          expirationMonth:
            type: integer
            format: int32
          expirationYear:
            type: integer
            format: int32
        additionalProperties: false
      Payments.BankCardBase:
        type: object
        properties:
          number:
            type: string
            nullable: true
          expirationMonth:
            type: integer
            format: int32
          expirationYear:
            type: integer
            format: int32
        additionalProperties: false
      Payments.CardTypes:
        enum:
          - Visa
          - AMEX
          - BC
          - MasterCard
          - MC_Alaska
          - MC_Canada
          - CarteBlanche
          - UnionPay
          - Discover
          - DinersClub
          - CartaSi
          - CarteBleue
          - Dankort
          - Delta
          - Electron
          - JCB
          - Maestro
          - Switch
          - Solo
          - Lazer
          - Elo
          - Hipercard
          - enRoute
          - UATP
        type: string
      Payments.ChargeRequest:
        type: object
        properties:
          bankCard:
            $ref: '#/components/schemas/Payments.BankCard'
          payer:
            $ref: '#/components/schemas/Payments.Payer'
          threeDS:
            $ref: '#/components/schemas/Payments.ThreeDS'
          userToken:
            type: string
            nullable: true
          amount:
            $ref: '#/components/schemas/Payments.Money'
          myReference:
            type: string
            nullable: true
          isDigitalGoods:
            type: boolean
          orderDesc:
            type: string
            nullable: true
          generateToken:
            type: boolean
        additionalProperties: false
      Payments.CurrencyCode:
        enum:
          - AFN
          - EUR
          - ALL
          - DZD
          - USD
          - AOA
          - XCD
          - ARS
          - AMD
          - AWG
          - AUD
          - AZN
          - BSD
          - BHD
          - BDT
          - BBD
          - BYR
          - BZD
          - XOF
          - BMD
          - BTN
          - INR
          - BOB
          - BOV
          - BAM
          - BWP
          - NOK
          - BRL
          - BND
          - BGN
          - BIF
          - KHR
          - XAF
          - CAD
          - CVE
          - KYD
          - CLF
          - CLP
          - CNY
          - COP
          - COU
          - KMF
          - CDF
          - NZD
          - CRC
          - HRK
          - CUC
          - CUP
          - ANG
          - CZK
          - DKK
          - DJF
          - DOP
          - EGP
          - SVC
          - ERN
          - ETB
          - FKP
          - FJD
          - XPF
          - GMD
          - GEL
          - GHS
          - GIP
          - GTQ
          - GBP
          - GNF
          - GYD
          - HTG
          - HNL
          - HKD
          - HUF
          - ISK
          - IDR
          - XDR
          - IRR
          - IQD
          - ILS
          - JMD
          - JPY
          - JOD
          - KZT
          - KES
          - KPW
          - KRW
          - KWD
          - KGS
          - LAK
          - LBP
          - LSL
          - ZAR
          - LRD
          - LYD
          - CHF
          - LTL
          - MOP
          - MKD
          - MGA
          - MWK
          - MYR
          - MVR
          - MRO
          - MUR
          - XUA
          - MXN
          - MXV
          - MDL
          - MNT
          - MAD
          - MZN
          - MMK
          - NAD
          - NPR
          - NIO
          - NGN
          - OMR
          - PKR
          - PAB
          - PGK
          - PYG
          - PEN
          - PHP
          - PLN
          - QAR
          - RON
          - RUB
          - RWF
          - SHP
          - WST
          - STD
          - SAR
          - RSD
          - SCR
          - SLL
          - SGD
          - XSU
          - SBD
          - SOS
          - SSP
          - LKR
          - SDG
          - SRD
          - SZL
          - SEK
          - CHE
          - CHW
          - SYP
          - TWD
          - TJS
          - TZS
          - THB
          - TOP
          - TTD
          - TND
          - TRY
          - TMT
          - UGX
          - UAH
          - AED
          - USN
          - UYI
          - UYU
          - UZS
          - VUV
          - VEF
          - VND
          - YER
          - ZMW
          - ZWL
          - XBA
          - XBB
          - XBC
          - XBD
          - XTS
          - XXX
          - XAU
          - XPD
          - XPT
          - XAG
        type: string
      Payments.Money:
        type: object
        properties:
          amount:
            type: number
            format: double
          currencyCode:
            $ref: '#/components/schemas/Payments.CurrencyCode'
          iso4217CurrencyNumber:
            type: string
            nullable: true
            readOnly: true
          amountInLargestUnits:
            type: number
            format: double
            readOnly: true
          formattedAmount:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Payments.NetworkTokenSchemes:
        enum:
          - Visa
          - MasterCard
          - Amex
        type: string
      Payments.Operation:
        enum:
          - Charge
          - PreAuth
          - Capture
          - Void
          - Refund
          - Tokenize
        type: string
      Payments.OperationResult:
        type: object
        properties:
          authorizationCode:
            type: string
            nullable: true
          operationType:
            $ref: '#/components/schemas/Payments.Operation'
          currency:
            $ref: '#/components/schemas/Payments.CurrencyCode'
          amount:
            type: number
            format: double
          operationResultCode:
            $ref: '#/components/schemas/Payments.Result'
          operationResultDescription:
            type: string
            nullable: true
          customGatewayResponse:
            nullable: true
          gatewayName:
            type: string
            nullable: true
          gatewayReference:
            type: string
            nullable: true
          gatewayResultCode:
            type: string
            nullable: true
          gatewayResultDescription:
            type: string
            nullable: true
          gatewayResultSubCode:
            type: string
            nullable: true
          gatewayResultSubDescription:
            type: string
            nullable: true
          gatewayToken:
            nullable: true
        additionalProperties: false
      Payments.Payer:
        type: object
        properties:
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          phone:
            type: string
            format: tel
            nullable: true
          cardOwnerId:
            type: string
            nullable: true
          address1:
            type: string
            nullable: true
          address2:
            type: string
            nullable: true
          address3:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          stateProvince:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          postCode:
            type: string
            nullable: true
          clientIPAddress:
            type: string
            nullable: true
          address:
            type: string
            nullable: true
            readOnly: true
          fullName:
            type: string
            nullable: true
            readOnly: true
          validIpAddress:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Payments.Result:
        enum:
          - Success
          - Accepted
          - Rejected
          - TemporaryFailure
          - FatalFailure
          - NotImplemented
        type: string
      Payments.ThreeDS:
        type: object
        properties:
          authenticationValue:
            type: string
            nullable: true
          eci:
            type: string
            nullable: true
          xid:
            type: string
            nullable: true
          version:
            type: string
            nullable: true
        additionalProperties: false
      System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e:
        type: object
        properties:
          key:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
        additionalProperties: false
      pciBooking.IINLookup.Library.CardValidationRequest:
        type: object
        properties:
          iin:
            pattern: ^\d{6,11}$
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          stateProvince:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          clientIPAddress:
            type: string
            nullable: true
        additionalProperties: false
      pciBooking.IINLookup.Library.CardValidationResult:
        type: object
        properties:
          riskLevel:
            $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
          description:
            type: string
            nullable: true
          cardBrand:
            type: string
            nullable: true
          cardType:
            type: string
            nullable: true
          cardCategory:
            type: string
            nullable: true
          issuerName:
            type: string
            nullable: true
          issuerCountry:
            type: string
            nullable: true
          countryByIP:
            type: string
            nullable: true
          countryFromBillingAddress:
            type: string
            nullable: true
          anonymousProxyUsed:
            type: boolean
        additionalProperties: false
      pciBooking.IINLookup.Library.RiskLevel:
        enum:
          - VeryHigh
          - High
          - Low
          - VeryLow
        type: string
    securitySchemes:
      ApiKeyAuth:
        type: apiKey
        description: Please enter ApiKey into field
        name: X-Api-Key
        in: header
      JwsAuth:
        type: http
        description: Please enter JWS token into field
        scheme: bearer
        bearerFormat: Jwt
  tags:
    - name: PaymentGateway
      description: Universal Payment Gateway
    - name: StringTokens
      description: Token management
    - name: Tools
      description: Tools
    - name: CardOperations
      description: Card operations controller
    - name: PaymentGatewayAccounts
      description: Payment Gateway Accounts
    - name: Utils
      description: Utils
  x-readme:
    explorer-enabled: true
    proxy-enabled: true
  _id: 6261b17bf938a8020f9cee2e
konfigCliVersion: 1.38.37
