publishJson:
  company: Okta
  serviceName: false
  sdkName: okta-{language}-sdk
  clientName: Okta
  metaDescription: >-
    Okta gives you a neutral, powerful and extensible platform that puts
    identity at the heart of your stack. No matter what industry, use case, or
    level of support you need, we've got you covered.
  apiStatusUrls: false
  homepage: okta.com
  developerDocumentation: developer.okta.com/docs/reference/core-okta-api/
  categories:
    - identity_and_access_management
    - security
    - authentication
    - identity_management
    - access_management
    - single_signon
    - user_management
    - idaas
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Okta API
    description: Allows customers to easily access the Okta API
    termsOfService: https://developer.okta.com/terms/
    contact:
      name: Okta Developer Team
      email: devex-public@okta.com
      url: https://developer.okta.com/
    license:
      name: Apache-2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
    version: 2.16.0
  externalDocs:
    description: Find more info here
    url: https://developer.okta.com/docs/api/getting_started/design_principles.html
  paths:
    /api/v1/apps:
      get:
        description: >-
          Enumerates apps added to your organization with pagination. A subset of
          apps can be returned that match a supported filter expression or query.
        operationId: listApplications
        parameters:
          - in: query
            name: q
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of apps
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of results for a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
          - description: >-
              Filters apps by status, user.id, group.id or credentials.signing.kid
              expression
            in: query
            name: filter
            schema:
              type: string
          - description: >-
              Traverses users link relationship and optionally embeds Application
              User resource
            in: query
            name: expand
            schema:
              type: string
          - in: query
            name: includeNonDeleted
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Application'
                  type: array
        security:
          - api_token: []
        summary: List Applications
        tags:
          - Application
      post:
        description: Adds a new application to your Okta organization.
        operationId: createApplication
        parameters:
          - description: Executes activation lifecycle operation when creating the app
            in: query
            name: activate
            schema:
              type: boolean
              default: true
          - in: header
            name: OktaAccessGateway-Agent
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/Application'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Application'
        security:
          - api_token: []
        summary: Add Application
        tags:
          - Application
    /api/v1/apps/{appId}:
      delete:
        description: Removes an inactive application.
        operationId: deleteApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Delete Application
        tags:
          - Application
      get:
        description: Fetches an application from your Okta organization by `id`.
        operationId: getApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Application'
        security:
          - api_token: []
        summary: Get Application
        tags:
          - Application
      put:
        description: Updates an application in your organization.
        operationId: updateApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/Application'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Application'
        security:
          - api_token: []
        summary: Update Application
        tags:
          - Application
    /api/v1/apps/{appId}/connections/default:
      get:
        description: Get default Provisioning Connection for application
        operationId: getDefaultProvisioningConnectionForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProvisioningConnection'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Fetches the default Provisioning Connection for an application.
        tags:
          - Application
      post:
        description: Set default Provisioning Connection for application
        operationId: setDefaultProvisioningConnectionForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: activate
            schema:
              type: boolean
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningConnectionRequest'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProvisioningConnection'
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Sets the default Provisioning Connection for an application.
        tags:
          - Application
    /api/v1/apps/{appId}/connections/default/lifecycle/activate:
      post:
        description: Activates the default Provisioning Connection for an application.
        operationId: activateDefaultProvisioningConnectionForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Activate default Provisioning Connection for application
        tags:
          - Application
    /api/v1/apps/{appId}/connections/default/lifecycle/deactivate:
      post:
        description: Deactivates the default Provisioning Connection for an application.
        operationId: deactivateDefaultProvisioningConnectionForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Deactivate default Provisioning Connection for application
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/csrs:
      get:
        description: Enumerates Certificate Signing Requests for an application
        operationId: listCsrsForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Csr'
                  type: array
        security:
          - api_token: []
        summary: List Certificate Signing Requests for Application
        tags:
          - Application
      post:
        description: >-
          Generates a new key pair and returns the Certificate Signing Request for
          it.
        operationId: generateCsrForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CsrMetadata'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Csr'
        security:
          - api_token: []
        summary: Generate Certificate Signing Request for Application
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/csrs/{csrId}:
      delete:
        operationId: revokeCsrFromApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Application
      get:
        operationId: getCsrForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Csr'
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish:
      post:
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        tags:
          - Application
        x-okta-multi-operation:
          - consumes:
              - application/x-x509-ca-cert
            encoding: base64
            operationId: publishCerCert
            parameters:
              - in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/x-x509-ca-cert
            operationId: publishBinaryCerCert
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/pkix-cert
            encoding: base64
            operationId: publishDerCert
            parameters:
              - in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/pkix-cert
            operationId: publishBinaryDerCert
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/x-pem-file
            operationId: publishBinaryPemCert
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
    /api/v1/apps/{appId}/credentials/keys:
      get:
        description: Enumerates key credentials for an application
        operationId: listApplicationKeys
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  type: array
        security:
          - api_token: []
        summary: List Key Credentials for Application
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/keys/generate:
      post:
        description: Generates a new X.509 certificate for an application key credential
        operationId: generateApplicationKey
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: validityYears
            schema:
              type: integer
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/keys/{keyId}:
      get:
        description: Gets a specific application key credential by kid
        operationId: getApplicationKey
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: keyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Get Key Credential for Application
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
      post:
        description: >-
          Clones a X.509 certificate for an application key credential from a
          source application to target application.
        operationId: cloneApplicationKey
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: keyId
            required: true
            schema:
              type: string
          - description: Unique key of the target Application
            in: query
            name: targetAid
            required: true
            schema:
              type: string
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Clone Application Key Credential
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/secrets:
      get:
        description: Enumerates the client's collection of secrets
        operationId: listClientSecretsForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ClientSecret'
                  type: array
        security:
          - api_token: []
        summary: List client secrets
        tags:
          - Application
      post:
        description: Adds a new secret to the client's collection of secrets.
        operationId: createNewClientSecretForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSecretMetadata'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientSecret'
        security:
          - api_token: []
        summary: Add new client secret
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/secrets/{secretId}:
      delete:
        description: Removes a secret from the client's collection of secrets.
        operationId: deleteClientSecretForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: secretId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Application
      get:
        description: Gets a specific client secret by secretId
        operationId: getClientSecretForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: secretId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientSecret'
        security:
          - api_token: []
        summary: Get client secret
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/secrets/{secretId}/lifecycle/activate:
      post:
        description: Activates a specific client secret by secretId
        operationId: activateClientSecretForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: secretId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientSecret'
        security:
          - api_token: []
        summary: Activate a client secret
        tags:
          - Application
    /api/v1/apps/{appId}/credentials/secrets/{secretId}/lifecycle/deactivate:
      post:
        description: Deactivates a specific client secret by secretId
        operationId: deactivateClientSecretForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: secretId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientSecret'
        security:
          - api_token: []
        summary: Deactivate a client secret
        tags:
          - Application
    /api/v1/apps/{appId}/features:
      get:
        description: List Features for application
        operationId: listFeaturesForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ApplicationFeature'
                  type: array
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Fetches the Feature objects for an application.
        tags:
          - Application
    /api/v1/apps/{appId}/features/{name}:
      get:
        description: Fetches a Feature object for an application.
        operationId: getFeatureForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: name
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApplicationFeature'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Fetches a Feature object for an application.
        tags:
          - Application
      put:
        description: Updates a Feature object for an application.
        operationId: updateFeatureForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: name
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesObject'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApplicationFeature'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Updates a Feature object for an application.
        tags:
          - Application
    /api/v1/apps/{appId}/grants:
      get:
        description: Lists all scope consent grants for the application
        operationId: listScopeConsentGrants
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                  type: array
        security:
          - api_token: []
        tags:
          - Application
      post:
        description: Grants consent for the application to request an OAuth 2.0 Okta scope
        operationId: grantConsentToScope
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/grants/{grantId}:
      delete:
        description: Revokes permission for the application to request the given scope
        operationId: revokeScopeConsentGrant
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: grantId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Application
      get:
        description: Fetches a single scope consent grant for the application
        operationId: getScopeConsentGrant
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: grantId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/groups:
      get:
        description: Enumerates group assignments for an application.
        operationId: listApplicationGroupAssignments
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: q
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of assignments
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of results for a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ApplicationGroupAssignment'
                  type: array
        security:
          - api_token: []
        summary: List Groups Assigned to Application
        tags:
          - Application
    /api/v1/apps/{appId}/groups/{groupId}:
      delete:
        description: Removes a group assignment from an application.
        operationId: deleteApplicationGroupAssignment
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove Group from Application
        tags:
          - Application
      get:
        description: Fetches an application group assignment
        operationId: getApplicationGroupAssignment
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
        security:
          - api_token: []
        summary: Get Assigned Group for Application
        tags:
          - Application
      put:
        description: Assigns a group to an application
        operationId: createApplicationGroupAssignment
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
        security:
          - api_token: []
        summary: Assign Group to Application
        tags:
          - Application
    /api/v1/apps/{appId}/lifecycle/activate:
      post:
        description: Activates an inactive application.
        operationId: activateApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Activate Application
        tags:
          - Application
    /api/v1/apps/{appId}/lifecycle/deactivate:
      post:
        description: Deactivates an active application.
        operationId: deactivateApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Deactivate Application
        tags:
          - Application
    /api/v1/apps/{appId}/logo:
      post:
        description: Update the logo for an application.
        operationId: uploadApplicationLogo
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/uploadApplicationLogo'
        responses:
          '201':
            description: Created
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: >-
          The file must be in PNG, JPG, or GIF format, and less than 1 MB in size.
          For best results use landscape orientation, a transparent background,
          and a minimum size of 420px by 120px to prevent upscaling.
        tags:
          - Application
    /api/v1/apps/{appId}/policies/{policyId}:
      put:
        description: >-
          Assign an application to a specific policy. This unassigns the
          application from its currently assigned policy.
        operationId: updateApplicationPolicy
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Update application policy
        tags:
          - Application
    /api/v1/apps/{appId}/sso/saml/metadata:
      get:
        description: >-
          Previews SAML metadata based on a specific key credential for an
          application
        operationId: previewSAMLAppMetadata
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - description: unique key identifier of an Application Key Credential
            in: query
            name: kid
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/xml:
                schema:
                  properties:
                    EntityDescriptor:
                      properties:
                        IDPSSODescriptor:
                          properties:
                            KeyDescriptor:
                              properties:
                                KeyInfo:
                                  properties:
                                    X509Data:
                                      properties:
                                        X509Certificate:
                                          type: string
                                      type: object
                                  type: object
                                use:
                                  type: string
                                  xml:
                                    attribute: true
                              type: object
                            NameIDFormat:
                              items:
                                type: string
                              type: array
                            SingleLogoutService:
                              items:
                                type: string
                              properties:
                                Binding:
                                  type: string
                                  xml:
                                    attribute: true
                                Location:
                                  type: string
                                  xml:
                                    attribute: true
                              type: array
                            SingleSignOnService:
                              items:
                                type: string
                              properties:
                                Binding:
                                  type: string
                                  xml:
                                    attribute: true
                                Location:
                                  type: string
                                  xml:
                                    attribute: true
                              type: array
                            WantAuthnRequestsSigned:
                              type: boolean
                              xml:
                                attribute: true
                            protocolSupportEnumeration:
                              type: string
                              xml:
                                attribute: true
                          type: object
                        entityID:
                          type: string
                          xml:
                            attribute: true
                      type: object
                  type: object
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/tokens:
      delete:
        description: Revokes all tokens for the specified application
        operationId: revokeOAuth2TokensForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Application
      get:
        description: Lists all tokens for the application
        operationId: listOAuth2TokensForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2Token'
                  type: array
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/tokens/{tokenId}:
      delete:
        description: Revokes the specified token for the specified application
        operationId: revokeOAuth2TokenForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Application
      get:
        description: Gets a token for the specified application
        operationId: getOAuth2TokenForApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Token'
        security:
          - api_token: []
        tags:
          - Application
    /api/v1/apps/{appId}/users:
      get:
        description: >-
          Enumerates all assigned [application
          users](https://raw.githubusercontent.com) for an application.
        operationId: listApplicationUsers
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: query
            name: q
            schema:
              type: string
          - in: query
            name: query_scope
            schema:
              type: string
          - description: specifies the pagination cursor for the next page of assignments
            in: query
            name: after
            schema:
              type: string
          - description: specifies the number of results for a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
          - in: query
            name: filter
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/AppUser'
                  type: array
        security:
          - api_token: []
        summary: List Users Assigned to Application
        tags:
          - Application
      post:
        description: >-
          Assigns an user to an application with
          [credentials](https://raw.githubusercontent.com) and an app-specific
          [profile](https://raw.githubusercontent.com). Profile mappings defined
          for the application are first applied before applying any profile
          properties specified in the request.
        operationId: assignUserToApplication
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AppUser'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AppUser'
        security:
          - api_token: []
        summary: Assign User to Application for SSO & Provisioning
        tags:
          - Application
    /api/v1/apps/{appId}/users/{userId}:
      delete:
        description: Removes an assignment for a user from an application.
        operationId: deleteApplicationUser
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: sendEmail
            x-okta-added-version: 1.5.0
            schema:
              type: boolean
              default: false
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove User from Application
        tags:
          - Application
      get:
        description: Fetches a specific user assignment for application by `id`.
        operationId: getApplicationUser
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AppUser'
        security:
          - api_token: []
        summary: Get Assigned User for Application
        tags:
          - Application
      post:
        description: Updates a user's profile for an application
        operationId: updateApplicationUser
        parameters:
          - in: path
            name: appId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AppUser'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AppUser'
        security:
          - api_token: []
        summary: Update Application Profile for Assigned User
        tags:
          - Application
    /api/v1/authenticators:
      get:
        description: List Authenticators
        operationId: listAuthenticators
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Authenticator'
                  type: array
        security:
          - api_token: []
        summary: Lists all available Authenticators
        tags:
          - Authenticator
      post:
        description: Create Authenticator
        operationId: createAuthenticator
        parameters:
          - in: query
            name: activate
            schema:
              type: boolean
        requestBody:
          $ref: '#/components/requestBodies/Authenticator'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Authenticator'
        security:
          - api_token: []
        summary: Create an Authenticator
        tags:
          - Authenticator
    /api/v1/authenticators/{authenticatorId}:
      get:
        description: Success
        operationId: getAuthenticator
        parameters:
          - in: path
            name: authenticatorId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Authenticator'
        security:
          - api_token: []
        tags:
          - Authenticator
      put:
        description: Updates an authenticator
        operationId: updateAuthenticator
        parameters:
          - in: path
            name: authenticatorId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/Authenticator'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Authenticator'
        security:
          - api_token: []
        summary: Update Authenticator
        tags:
          - Authenticator
    /api/v1/authenticators/{authenticatorId}/lifecycle/activate:
      post:
        description: Success
        operationId: activateAuthenticator
        parameters:
          - in: path
            name: authenticatorId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Authenticator'
        security:
          - api_token: []
        tags:
          - Authenticator
    /api/v1/authenticators/{authenticatorId}/lifecycle/deactivate:
      post:
        description: Success
        operationId: deactivateAuthenticator
        parameters:
          - in: path
            name: authenticatorId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Authenticator'
        security:
          - api_token: []
        tags:
          - Authenticator
    /api/v1/authorizationServers:
      get:
        description: Success
        operationId: listAuthorizationServers
        parameters:
          - in: query
            name: q
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/AuthorizationServer'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      post:
        description: Success
        operationId: createAuthorizationServer
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServer'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServer'
          '201':
            description: Created
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}:
      delete:
        description: Success
        operationId: deleteAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: getAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServer'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      put:
        description: Success
        operationId: updateAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServer'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServer'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/claims:
      get:
        description: Success
        operationId: listOAuth2Claims
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2Claim'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      post:
        description: Success
        operationId: createOAuth2Claim
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/OAuth2Claim'
        responses:
          '200':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Claim'
          '201':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/claims/{claimId}:
      delete:
        description: Success
        operationId: deleteOAuth2Claim
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: claimId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: getOAuth2Claim
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: claimId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Claim'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      put:
        description: Success
        operationId: updateOAuth2Claim
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: claimId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/OAuth2Claim'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Claim'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/clients:
      get:
        description: Success
        operationId: listOAuth2ClientsForAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2Client'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens:
      delete:
        description: Success
        operationId: revokeRefreshTokensForAuthorizationServerAndClient
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: listRefreshTokensForAuthorizationServerAndClient
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2RefreshToken'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}:
      delete:
        description: Success
        operationId: revokeRefreshTokenForAuthorizationServerAndClient
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: getRefreshTokenForAuthorizationServerAndClient
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/credentials/keys:
      get:
        description: Success
        operationId: listAuthorizationServerKeys
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate:
      post:
        description: Success
        operationId: rotateAuthorizationServerKeys
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwkUse'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/lifecycle/activate:
      post:
        description: Success
        operationId: activateAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/lifecycle/deactivate:
      post:
        description: Success
        operationId: deactivateAuthorizationServer
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies:
      get:
        description: Success
        operationId: listAuthorizationServerPolicies
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/AuthorizationServerPolicy'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      post:
        description: Success
        operationId: createAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServerPolicy'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
          '201':
            description: Created
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}:
      delete:
        description: Success
        operationId: deleteAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: getAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      put:
        description: Success
        operationId: updateAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServerPolicy'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicy'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate:
      post:
        description: Activate Authorization Server Policy
        operationId: activateAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate:
      post:
        description: Deactivate Authorization Server Policy
        operationId: deactivateAuthorizationServerPolicy
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules:
      get:
        description: >-
          Enumerates all policy rules for the specified Custom Authorization
          Server and Policy.
        operationId: listAuthorizationServerPolicyRules
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/AuthorizationServerPolicyRule'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      post:
        description: >-
          Creates a policy rule for the specified Custom Authorization Server and
          Policy.
        operationId: createAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServerPolicyRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}:
      delete:
        description: >-
          Deletes a Policy Rule defined in the specified Custom Authorization
          Server and Policy.
        operationId: deleteAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: >-
          Returns a Policy Rule by ID that is defined in the specified Custom
          Authorization Server and Policy.
        operationId: getAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      put:
        description: >-
          Updates the configuration of the Policy Rule defined in the specified
          Custom Authorization Server and Policy.
        operationId: updateAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/AuthorizationServerPolicyRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
      post:
        description: Activate Authorization Server Policy Rule
        operationId: activateAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
      post:
        description: Deactivate Authorization Server Policy Rule
        operationId: deactivateAuthorizationServerPolicyRule
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/scopes:
      get:
        description: Success
        operationId: listOAuth2Scopes
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: query
            name: q
            schema:
              type: string
          - in: query
            name: filter
            schema:
              type: string
          - in: query
            name: cursor
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2Scope'
                  type: array
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      post:
        description: Success
        operationId: createOAuth2Scope
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/OAuth2Scope'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Scope'
          '201':
            description: Success
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/authorizationServers/{authServerId}/scopes/{scopeId}:
      delete:
        description: Success
        operationId: deleteOAuth2Scope
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: scopeId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      get:
        description: Success
        operationId: getOAuth2Scope
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: scopeId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Scope'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
      put:
        description: Success
        operationId: updateOAuth2Scope
        parameters:
          - in: path
            name: authServerId
            required: true
            schema:
              type: string
          - in: path
            name: scopeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/OAuth2Scope'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2Scope'
        security:
          - api_token: []
        tags:
          - AuthorizationServer
    /api/v1/brands:
      get:
        description: List all the brands in your org.
        operationId: listBrands
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Brand'
                  type: array
        security:
          - api_token: []
        summary: List Brands
        tags:
          - Brand
    /api/v1/brands/{brandId}:
      get:
        description: Fetches a brand by `brandId`
        operationId: getBrand
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Brand'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Get Brand
        tags:
          - Brand
      put:
        description: Updates a brand by `brandId`
        operationId: updateBrand
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Brand'
          '400':
            description: Bad Request
        security:
          - api_token: []
        summary: Update Brand
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email:
      get:
        description: List email templates in your organization with pagination.
        operationId: listEmailTemplates
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - description: >-
              Specifies the pagination cursor for the next page of email
              templates.
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of results returned (maximum 200)
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/EmailTemplate'
                  type: array
        security:
          - api_token: []
        summary: List Email Templates
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}:
      get:
        description: Fetch an email template by templateName
        operationId: getEmailTemplate
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplate'
        security:
          - api_token: []
        summary: Get Email Template
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
      delete:
        description: >-
          Delete all customizations for an email template. Also known as “Reset to
          Default”.
        operationId: deleteEmailTemplateCustomizations
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Success
        security:
          - api_token: []
        summary: Delete Email Template Customization
        tags:
          - Brand
      get:
        description: List all email customizations for an email template
        operationId: listEmailTemplateCustomizations
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/EmailTemplateCustomization'
                  type: array
        security:
          - api_token: []
        summary: List Email Template Customization
        tags:
          - Brand
      post:
        description: Create an email customization
        operationId: createEmailTemplateCustomization
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmailTemplateCustomizationRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateCustomization'
          '409':
            description: Conflict
        security:
          - api_token: []
        summary: Create Email Template Customization
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
      delete:
        description: Delete an email customization
        operationId: deleteEmailTemplateCustomization
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
          - in: path
            name: customizationId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '409':
            description: Conflict
        security:
          - api_token: []
        summary: Delete Email Customization
        tags:
          - Brand
      get:
        description: Fetch an email customization by id.
        operationId: getEmailTemplateCustomization
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
          - in: path
            name: customizationId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateCustomization'
        security:
          - api_token: []
        summary: Get Email Template Customization
        tags:
          - Brand
      put:
        description: Update an email customization
        operationId: updateEmailTemplateCustomization
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
          - in: path
            name: customizationId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EmailTemplateCustomizationRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateCustomization'
          '409':
            description: Conflict
        security:
          - api_token: []
        summary: Update Email Customization
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
      get:
        description: Get a preview of an email template customization.
        operationId: getEmailTemplateCustomizationPreview
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
          - in: path
            name: customizationId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateContent'
        security:
          - api_token: []
        summary: Get Preview Content of Email Customization
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
      get:
        description: Fetch the default content for an email template.
        operationId: getEmailTemplateDefaultContent
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateContent'
        security:
          - api_token: []
        summary: Get Default Content of Email Template
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
      get:
        description: >-
          Fetch a preview of an email template's default content by populating
          velocity references with the current user's environment.
        operationId: getEmailTemplateDefaultContentPreview
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmailTemplateContent'
        security:
          - api_token: []
        summary: Get Preview of Email Template Default Content
        tags:
          - Brand
    /api/v1/brands/{brandId}/templates/email/{templateName}/test:
      post:
        description: >-
          Send a test email to the current users primary and secondary email
          addresses. The email content is selected based on the following
          priority: An email customization specifically for the users locale. The
          default language of email customizations. The email templates default
          content.
        operationId: sendTestEmail
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: templateName
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateTestRequest'
          required: true
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Get Preview of Email Template Default Content
        tags:
          - Brand
    /api/v1/brands/{brandId}/themes:
      get:
        description: List all the themes in your brand
        operationId: listBrandThemes
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ThemeResponse'
                  type: array
        security:
          - api_token: []
        summary: Get Brand Themes
        tags:
          - Brand
    /api/v1/brands/{brandId}/themes/{themeId}:
      get:
        description: Fetches a theme for a brand
        operationId: getBrandTheme
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ThemeResponse'
        security:
          - api_token: []
        summary: Get a theme for a brand
        tags:
          - Brand
      put:
        description: Updates a theme for a brand
        operationId: updateBrandTheme
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ThemeResponse'
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Update a theme for a brand
        tags:
          - Brand
    /api/v1/brands/{brandId}/themes/{themeId}/background-image:
      delete:
        description: Deletes a Theme background image
        operationId: deleteBrandThemeBackgroundImage
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Deletes a Theme background image
        tags:
          - Brand
      post:
        description: Updates the background image for your Theme
        operationId: uploadBrandThemeBackgroundImage
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/uploadApplicationLogo'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ImageUploadResponse'
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Updates the background image for your Theme
        tags:
          - Brand
    /api/v1/brands/{brandId}/themes/{themeId}/favicon:
      delete:
        description: Deletes a Theme favicon. The org then uses the Okta default favicon.
        operationId: deleteBrandThemeFavicon
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Deletes a Theme favicon. The org then uses the Okta default favicon.
        tags:
          - Brand
      post:
        description: Updates the favicon for your theme
        operationId: uploadBrandThemeFavicon
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/uploadApplicationLogo'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ImageUploadResponse'
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Updates the favicon for your theme
        tags:
          - Brand
    /api/v1/brands/{brandId}/themes/{themeId}/logo:
      delete:
        description: Deletes a Theme logo. The org then uses the Okta default logo.
        operationId: deleteBrandThemeLogo
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Deletes a Theme logo. The org then uses the Okta default logo.
        tags:
          - Brand
      post:
        description: Updates the logo for your Theme
        operationId: uploadBrandThemeLogo
        parameters:
          - in: path
            name: brandId
            required: true
            schema:
              type: string
          - in: path
            name: themeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/uploadApplicationLogo'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ImageUploadResponse'
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Update a themes logo
        tags:
          - Brand
    /api/v1/domains:
      get:
        description: List all verified custom Domains for the org.
        operationId: listDomains
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DomainListResponse'
        security:
          - api_token: []
        summary: List Domains
        tags:
          - Domain
      post:
        description: Creates your domain.
        operationId: createDomain
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Domain'
        security:
          - api_token: []
        summary: Create Domain
        tags:
          - Domain
    /api/v1/domains/{domainId}:
      delete:
        description: Deletes a Domain by `id`.
        operationId: deleteDomain
        parameters:
          - in: path
            name: domainId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Delete Domain
        tags:
          - Domain
      get:
        description: Fetches a Domain by `id`.
        operationId: getDomain
        parameters:
          - in: path
            name: domainId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Domain'
        security:
          - api_token: []
        summary: Get Domain
        tags:
          - Domain
    /api/v1/domains/{domainId}/certificate:
      put:
        description: Creates the Certificate for the Domain.
        operationId: createCertificate
        parameters:
          - in: path
            name: domainId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertificate'
          required: true
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Create Certificate
        tags:
          - Domain
    /api/v1/domains/{domainId}/verify:
      post:
        description: Verifies the Domain by `id`.
        operationId: verifyDomain
        parameters:
          - in: path
            name: domainId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Domain'
        security:
          - api_token: []
        summary: Verify Domain
        tags:
          - Domain
    /api/v1/eventHooks:
      get:
        description: Success
        operationId: listEventHooks
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/EventHook'
                  type: array
        security:
          - api_token: []
        tags:
          - EventHook
      post:
        description: Success
        operationId: createEventHook
        requestBody:
          $ref: '#/components/requestBodies/EventHook'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
    /api/v1/eventHooks/{eventHookId}:
      delete:
        description: Success
        operationId: deleteEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - EventHook
      get:
        description: Success
        operationId: getEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
      put:
        description: Success
        operationId: updateEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/EventHook'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
    /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
      post:
        description: Success
        operationId: activateEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
    /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
      post:
        description: Success
        operationId: deactivateEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
    /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
      post:
        description: Success
        operationId: verifyEventHook
        parameters:
          - in: path
            name: eventHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventHook'
        security:
          - api_token: []
        tags:
          - EventHook
    /api/v1/features:
      get:
        description: Success
        operationId: listFeatures
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Feature'
                  type: array
        security:
          - api_token: []
        tags:
          - Feature
    /api/v1/features/{featureId}:
      get:
        description: Success
        operationId: getFeature
        parameters:
          - in: path
            name: featureId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Feature'
        security:
          - api_token: []
        tags:
          - Feature
    /api/v1/features/{featureId}/dependencies:
      get:
        description: Success
        operationId: listFeatureDependencies
        parameters:
          - in: path
            name: featureId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Feature'
                  type: array
        security:
          - api_token: []
        tags:
          - Feature
    /api/v1/features/{featureId}/dependents:
      get:
        description: Success
        operationId: listFeatureDependents
        parameters:
          - in: path
            name: featureId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Feature'
                  type: array
        security:
          - api_token: []
        tags:
          - Feature
    /api/v1/features/{featureId}/{lifecycle}:
      post:
        description: Success
        operationId: updateFeatureLifecycle
        parameters:
          - in: path
            name: featureId
            required: true
            schema:
              type: string
          - in: path
            name: lifecycle
            required: true
            schema:
              type: string
          - in: query
            name: mode
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Feature'
        security:
          - api_token: []
        tags:
          - Feature
    /api/v1/groups:
      get:
        description: >-
          Enumerates groups in your organization with pagination. A subset of
          groups can be returned that match a supported filter expression or
          query.
        operationId: listGroups
        parameters:
          - description: Searches the name property of groups for matching value
            in: query
            name: q
            schema:
              type: string
          - description: Filter expression for groups
            in: query
            name: filter
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of groups
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of group results in a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 10000
          - description: >-
              If specified, it causes additional metadata to be included in the
              response.
            in: query
            name: expand
            schema:
              type: string
          - description: >-
              Searches for groups with a supported filtering expression for all
              attributes except for _embedded, _links, and objectClass
            in: query
            name: search
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Group'
                  type: array
        security:
          - api_token: []
        summary: List Groups
        tags:
          - Group
      post:
        description: Adds a new group with `OKTA_GROUP` type to your organization.
        operationId: createGroup
        requestBody:
          $ref: '#/components/requestBodies/Group'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Group'
        security:
          - api_token: []
        summary: Add Group
        tags:
          - Group
    /api/v1/groups/rules:
      get:
        description: Lists all group rules for your organization.
        operationId: listGroupRules
        parameters:
          - description: Specifies the number of rule results in a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 50
          - description: Specifies the pagination cursor for the next page of rules
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the keyword to search fules for
            in: query
            name: search
            schema:
              type: string
          - description: If specified as `groupIdToGroupNameMap`, then show group names
            in: query
            name: expand
            x-okta-added-version: 1.3.0
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/GroupRule'
                  type: array
        security:
          - api_token: []
        summary: List Group Rules
        tags:
          - Group
      post:
        description: >-
          Creates a group rule to dynamically add users to the specified group if
          they match the condition
        operationId: createGroupRule
        requestBody:
          $ref: '#/components/requestBodies/GroupRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupRule'
        security:
          - api_token: []
        summary: Create Group Rule
        tags:
          - Group
    /api/v1/groups/rules/{ruleId}:
      delete:
        description: Removes a specific group rule by id from your organization
        operationId: deleteGroupRule
        parameters:
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
          - description: >-
              Indicates whether to keep or remove users from groups assigned by
              this rule.
            in: query
            name: removeUsers
            schema:
              type: boolean
        responses:
          '202':
            description: Accepted
        security:
          - api_token: []
        summary: Delete a group Rule
        tags:
          - Group
      get:
        description: Fetches a specific group rule by id from your organization
        operationId: getGroupRule
        parameters:
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupRule'
        security:
          - api_token: []
        summary: Get Group Rule
        tags:
          - Group
      put:
        description: Updates a group rule. Only `INACTIVE` rules can be updated.
        operationId: updateGroupRule
        parameters:
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/GroupRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupRule'
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/rules/{ruleId}/lifecycle/activate:
      post:
        description: Activates a specific group rule by id from your organization
        operationId: activateGroupRule
        parameters:
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Activate a group Rule
        tags:
          - Group
    /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
      post:
        description: Deactivates a specific group rule by id from your organization
        operationId: deactivateGroupRule
        parameters:
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Deactivate a group Rule
        tags:
          - Group
    /api/v1/groups/{groupId}:
      delete:
        description: Removes a group with `OKTA_GROUP` type from your organization.
        operationId: deleteGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove Group
        tags:
          - Group
      get:
        description: Fetches a group from your organization.
        operationId: getGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Group'
        security:
          - api_token: []
        summary: List Group Rules
        tags:
          - Group
      put:
        description: >-
          Updates the profile for a group with `OKTA_GROUP` type from your
          organization.
        operationId: updateGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/Group'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Group'
        security:
          - api_token: []
        summary: Update Group
        tags:
          - Group
    /api/v1/groups/{groupId}/apps:
      get:
        description: Enumerates all applications that are assigned to a group.
        operationId: listAssignedApplicationsForGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of apps
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of app results for a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Application'
                  type: array
        security:
          - api_token: []
        summary: List Assigned Applications
        tags:
          - Group
    /api/v1/groups/{groupId}/roles:
      get:
        description: Success
        operationId: listGroupAssignedRoles
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Role'
                  type: array
        security:
          - api_token: []
        tags:
          - Group
      post:
        description: Assigns a Role to a Group
        operationId: assignRoleToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: query
            name: disableNotifications
            schema:
              type: boolean
        requestBody:
          $ref: '#/components/requestBodies/AssignRoleRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Role'
          '201':
            description: Success
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}:
      delete:
        description: Unassigns a Role from a Group
        operationId: removeRoleFromGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Group
      get:
        description: Success
        operationId: getRole
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Role'
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
      get:
        description: >-
          Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This
          methods return list may include full Applications or Instances. The
          response for an instance will have an `ID` value, while Application will
          not have an ID.
        operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/CatalogApplication'
                  type: array
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
      delete:
        description: Success
        operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Group
      put:
        description: Success
        operationId: addApplicationTargetToAdminRoleGivenToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
      delete:
        description: Remove App Instance Target to App Administrator Role given to a Group
        operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
          - in: path
            name: applicationId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove App Instance Target to App Administrator Role given to a Group
        tags:
          - Group
      put:
        description: Add App Instance Target to App Administrator Role given to a Group
        operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
          - in: path
            name: applicationId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Add App Instance Target to App Administrator Role given to a Group
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
      get:
        description: Success
        operationId: listGroupTargetsForGroupRole
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Group'
                  type: array
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
      delete:
        description: ''
        operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: targetGroupId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Group
      put:
        description: ''
        operationId: addGroupTargetToGroupAdministratorRoleForGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: targetGroupId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Group
    /api/v1/groups/{groupId}/users:
      get:
        description: Enumerates all users that are a member of a group.
        operationId: listGroupUsers
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of users
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of user results in a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 1000
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/User'
                  type: array
        security:
          - api_token: []
        summary: List Group Members
        tags:
          - Group
    /api/v1/groups/{groupId}/users/{userId}:
      delete:
        description: Removes a user from a group with 'OKTA_GROUP' type.
        operationId: removeUserFromGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove User from Group
        tags:
          - Group
      put:
        description: Adds a user to a group with 'OKTA_GROUP' type.
        operationId: addUserToGroup
        parameters:
          - in: path
            name: groupId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Add User to Group
        tags:
          - Group
    /api/v1/idps:
      get:
        description: >-
          Enumerates IdPs in your organization with pagination. A subset of IdPs
          can be returned that match a supported filter expression or query.
        operationId: listIdentityProviders
        parameters:
          - description: Searches the name property of IdPs for matching value
            in: query
            name: q
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of IdPs
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of IdP results in a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
          - description: Filters IdPs by type
            in: query
            name: type
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/IdentityProvider'
                  type: array
        security:
          - api_token: []
        summary: List Identity Providers
        tags:
          - IdentityProvider
      post:
        description: Adds a new IdP to your organization.
        operationId: createIdentityProvider
        requestBody:
          $ref: '#/components/requestBodies/IdentityProvider'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProvider'
        security:
          - api_token: []
        summary: Add Identity Provider
        tags:
          - IdentityProvider
    /api/v1/idps/credentials/keys:
      get:
        description: Enumerates IdP key credentials.
        operationId: listIdentityProviderKeys
        parameters:
          - description: Specifies the pagination cursor for the next page of keys
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of key results in a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  type: array
        security:
          - api_token: []
        summary: List Keys
        tags:
          - IdentityProvider
      post:
        description: Adds a new X.509 certificate credential to the IdP key store.
        operationId: createIdentityProviderKey
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Add X.509 Certificate Public Key
        tags:
          - IdentityProvider
    /api/v1/idps/credentials/keys/{keyId}:
      delete:
        description: >-
          Deletes a specific IdP Key Credential by `kid` if it is not currently
          being used by an Active or Inactive IdP.
        operationId: deleteIdentityProviderKey
        parameters:
          - in: path
            name: keyId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Delete Key
        tags:
          - IdentityProvider
      get:
        description: Gets a specific IdP Key Credential by `kid`
        operationId: getIdentityProviderKey
        parameters:
          - in: path
            name: keyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Get Key
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}:
      delete:
        description: Removes an IdP from your organization.
        operationId: deleteIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Delete Identity Provider
        tags:
          - IdentityProvider
      get:
        description: Fetches an IdP by `id`.
        operationId: getIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProvider'
        security:
          - api_token: []
        summary: Get Identity Provider
        tags:
          - IdentityProvider
      put:
        description: Updates the configuration for an IdP.
        operationId: updateIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/IdentityProvider'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProvider'
        security:
          - api_token: []
        summary: Update Identity Provider
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/csrs:
      get:
        description: Enumerates Certificate Signing Requests for an IdP
        operationId: listCsrsForIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Csr'
                  type: array
        security:
          - api_token: []
        summary: List Certificate Signing Requests for IdP
        tags:
          - IdentityProvider
      post:
        description: >-
          Generates a new key pair and returns a Certificate Signing Request for
          it.
        operationId: generateCsrForIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/CsrMetadata'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Csr'
        security:
          - api_token: []
        summary: Generate Certificate Signing Request for IdP
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
      delete:
        description: >-
          Revoke a Certificate Signing Request and delete the key pair from the
          IdP
        operationId: revokeCsrForIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - IdentityProvider
      get:
        description: Gets a specific Certificate Signing Request model by id
        operationId: getCsrForIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Csr'
        security:
          - api_token: []
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
      post:
        description: >-
          Update the Certificate Signing Request with a signed X.509 certificate
          and add it into the signing key credentials for the IdP.
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: csrId
            required: true
            schema:
              type: string
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        tags:
          - IdentityProvider
        x-okta-multi-operation:
          - consumes:
              - application/x-x509-ca-cert
            encoding: base64
            operationId: publishCerCertForIdentityProvider
            parameters:
              - in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/x-x509-ca-cert
            operationId: publishBinaryCerCertForIdentityProvider
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/pkix-cert
            encoding: base64
            operationId: publishDerCertForIdentityProvider
            parameters:
              - in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/pkix-cert
            operationId: publishBinaryDerCertForIdentityProvider
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
          - consumes:
              - application/x-pem-file
            operationId: publishBinaryPemCertForIdentityProvider
            parameters:
              - format: binary
                in: body
                name: certificate
                required: true
                type: string
    /api/v1/idps/{idpId}/credentials/keys:
      get:
        description: Enumerates signing key credentials for an IdP
        operationId: listIdentityProviderSigningKeys
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/JsonWebKey'
                  type: array
        security:
          - api_token: []
        summary: List Signing Key Credentials for IdP
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/keys/generate:
      post:
        description: >-
          Generates a new X.509 certificate for an IdP signing key credential to
          be used for signing assertions sent to the IdP
        operationId: generateIdentityProviderSigningKey
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - description: expiry of the IdP Key Credential
            in: query
            name: validityYears
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Generate New IdP Signing Key Credential
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/keys/{keyId}:
      get:
        description: Gets a specific IdP Key Credential by `kid`
        operationId: getIdentityProviderSigningKey
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: keyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Get Signing Key Credential for IdP
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
      post:
        description: >-
          Clones a X.509 certificate for an IdP signing key credential from a
          source IdP to target IdP
        operationId: cloneIdentityProviderKey
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: keyId
            required: true
            schema:
              type: string
          - in: query
            name: targetIdpId
            required: true
            schema:
              type: string
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonWebKey'
        security:
          - api_token: []
        summary: Clone Signing Key Credential for IdP
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/lifecycle/activate:
      post:
        description: Activates an inactive IdP.
        operationId: activateIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProvider'
        security:
          - api_token: []
        summary: Activate Identity Provider
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/lifecycle/deactivate:
      post:
        description: Deactivates an active IdP.
        operationId: deactivateIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProvider'
        security:
          - api_token: []
        summary: Deactivate Identity Provider
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/users:
      get:
        description: Find all the users linked to an identity provider
        operationId: listIdentityProviderApplicationUsers
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/IdentityProviderApplicationUser'
                  type: array
        security:
          - api_token: []
        summary: Find Users
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/users/{userId}:
      delete:
        description: Removes the link between the Okta user and the IdP user.
        operationId: unlinkUserFromIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Unlink User from IdP
        tags:
          - IdentityProvider
      get:
        description: Fetches a linked IdP user by ID
        operationId: getIdentityProviderApplicationUser
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
        security:
          - api_token: []
        tags:
          - IdentityProvider
      post:
        description: >-
          Links an Okta user to an existing Social Identity Provider. This does
          not support the SAML2 Identity Provider Type
        operationId: linkUserToIdentityProvider
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
        security:
          - api_token: []
        summary: Link a user to a Social IdP without a transaction
        tags:
          - IdentityProvider
    /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
      get:
        description: >-
          Fetches the tokens minted by the Social Authentication Provider when the
          user authenticates with Okta via Social Auth.
        operationId: listSocialAuthTokens
        parameters:
          - in: path
            name: idpId
            required: true
            schema:
              type: string
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/SocialAuthToken'
                  type: array
        security:
          - api_token: []
        summary: Social Authentication Token Operation
        tags:
          - IdentityProvider
    /api/v1/inlineHooks:
      get:
        description: Success
        operationId: listInlineHooks
        parameters:
          - in: query
            name: type
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/InlineHook'
                  type: array
        security:
          - api_token: []
        tags:
          - InlineHook
      post:
        description: Success
        operationId: createInlineHook
        requestBody:
          $ref: '#/components/requestBodies/InlineHook'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHook'
        security:
          - api_token: []
        tags:
          - InlineHook
    /api/v1/inlineHooks/{inlineHookId}:
      delete:
        description: >-
          Deletes the Inline Hook matching the provided id. Once deleted, the
          Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks
          with a status of INACTIVE are eligible for deletion.
        operationId: deleteInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - InlineHook
      get:
        description: Gets an inline hook by ID
        operationId: getInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHook'
        security:
          - api_token: []
        tags:
          - InlineHook
      put:
        description: Updates an inline hook by ID
        operationId: updateInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/InlineHook'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHook'
        security:
          - api_token: []
        tags:
          - InlineHook
    /api/v1/inlineHooks/{inlineHookId}/execute:
      post:
        description: >-
          Executes the Inline Hook matching the provided inlineHookId using the
          request body as the input. This will send the provided data through the
          Channel and return a response if it matches the correct data contract.
          This execution endpoint should only be used for testing purposes.
        operationId: executeInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookPayload'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHookResponse'
        security:
          - api_token: []
        tags:
          - InlineHook
    /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
      post:
        description: Activates the Inline Hook matching the provided id
        operationId: activateInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHook'
        security:
          - api_token: []
        tags:
          - InlineHook
    /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
      post:
        description: Deactivates the Inline Hook matching the provided id
        operationId: deactivateInlineHook
        parameters:
          - in: path
            name: inlineHookId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InlineHook'
        security:
          - api_token: []
        tags:
          - InlineHook
    /api/v1/logs:
      get:
        description: >-
          The Okta System Log API provides read access to your organization’s
          system log. This API provides more functionality than the Events API
        operationId: getLogs
        parameters:
          - in: query
            name: since
            schema:
              type: string
              format: date-time
          - in: query
            name: until
            schema:
              type: string
              format: date-time
          - in: query
            name: filter
            schema:
              type: string
          - in: query
            name: q
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              default: 100
          - in: query
            name: sortOrder
            schema:
              type: string
              default: ASCENDING
          - in: query
            name: after
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/LogEvent'
                  type: array
        security:
          - api_token: []
        summary: Fetch a list of events from your Okta organization system log.
        tags:
          - Log
    /api/v1/mappings:
      get:
        description: Enumerates Profile Mappings in your organization with pagination.
        operationId: listProfileMappings
        parameters:
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
          - in: query
            name: sourceId
            schema:
              type: string
          - in: query
            name: targetId
            schema:
              type: string
              default: ''
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ProfileMapping'
                  type: array
        security:
          - api_token: []
        tags:
          - ProfileMapping
    /api/v1/mappings/{mappingId}:
      get:
        description: Fetches a single Profile Mapping referenced by its ID.
        operationId: getProfileMapping
        parameters:
          - in: path
            name: mappingId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProfileMapping'
        security:
          - api_token: []
        summary: Get Profile Mapping
        tags:
          - ProfileMapping
      post:
        description: >-
          Updates an existing Profile Mapping by adding, updating, or removing one
          or many Property Mappings.
        operationId: updateProfileMapping
        parameters:
          - in: path
            name: mappingId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProfileMapping'
        security:
          - api_token: []
        summary: Update Profile Mapping
        tags:
          - ProfileMapping
    /api/v1/meta/schemas/apps/{appInstanceId}/default:
      get:
        description: Fetches the Schema for an App User
        operationId: getApplicationUserSchema
        parameters:
          - in: path
            name: appInstanceId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserSchema'
        security:
          - api_token: []
        summary: Fetches the Schema for an App User
        tags:
          - UserSchema
      post:
        description: >-
          Partial updates on the User Profile properties of the Application User
          Schema.
        operationId: updateApplicationUserProfile
        parameters:
          - in: path
            name: appInstanceId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserSchema'
        security:
          - api_token: []
        summary: >-
          Partial updates on the User Profile properties of the Application User
          Schema.
        tags:
          - UserSchema
    /api/v1/meta/schemas/group/default:
      get:
        description: Fetches the group schema
        operationId: getGroupSchema
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupSchema'
        security:
          - api_token: []
        summary: Fetches the group schema
        tags:
          - GroupSchema
      post:
        description: >-
          Updates, adds ore removes one or more custom Group Profile properties in
          the schema
        operationId: updateGroupSchema
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSchema'
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupSchema'
        security:
          - api_token: []
        summary: >-
          Updates, adds ore removes one or more custom Group Profile properties in
          the schema
        tags:
          - GroupSchema
    /api/v1/meta/schemas/user/linkedObjects:
      get:
        description: Success
        operationId: listLinkedObjectDefinitions
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/LinkedObject'
                  type: array
        security:
          - api_token: []
        tags:
          - LinkedObject
      post:
        description: Success
        operationId: addLinkedObjectDefinition
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedObject'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LinkedObject'
        security:
          - api_token: []
        tags:
          - LinkedObject
    /api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}:
      delete:
        description: Success
        operationId: deleteLinkedObjectDefinition
        parameters:
          - in: path
            name: linkedObjectName
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - LinkedObject
      get:
        description: Success
        operationId: getLinkedObjectDefinition
        parameters:
          - in: path
            name: linkedObjectName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LinkedObject'
        security:
          - api_token: []
        tags:
          - LinkedObject
    /api/v1/meta/schemas/user/{schemaId}:
      get:
        description: Fetches the schema for a Schema Id.
        operationId: getUserSchema
        parameters:
          - in: path
            name: schemaId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserSchema'
        security:
          - api_token: []
        summary: Fetches the schema for a Schema Id.
        tags:
          - UserSchema
      post:
        description: Partial updates on the User Profile properties of the user schema.
        operationId: updateUserProfile
        parameters:
          - in: path
            name: schemaId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserSchema'
        security:
          - api_token: []
        tags:
          - UserSchema
    /api/v1/meta/types/user:
      get:
        description: Fetches all User Types in your org
        operationId: listUserTypes
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/UserType'
                  type: array
        security:
          - api_token: []
        tags:
          - UserType
      post:
        description: >-
          Creates a new User Type. A default User Type is automatically created
          along with your org, and you may add another 9 User Types for a maximum
          of 10.
        operationId: createUserType
        requestBody:
          $ref: '#/components/requestBodies/UserType'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserType'
        security:
          - api_token: []
        tags:
          - UserType
    /api/v1/meta/types/user/{typeId}:
      delete:
        description: >-
          Deletes a User Type permanently. This operation is not permitted for the
          default type, nor for any User Type that has existing users
        operationId: deleteUserType
        parameters:
          - in: path
            name: typeId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - UserType
      get:
        description: >-
          Fetches a User Type by ID. The special identifier `default` may be used
          to fetch the default User Type.
        operationId: getUserType
        parameters:
          - in: path
            name: typeId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserType'
        security:
          - api_token: []
        tags:
          - UserType
      post:
        description: Updates an existing User Type
        operationId: updateUserType
        parameters:
          - in: path
            name: typeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/UserType'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserType'
        security:
          - api_token: []
        tags:
          - UserType
      put:
        description: Replace an existing User Type
        operationId: replaceUserType
        parameters:
          - in: path
            name: typeId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/UserType'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserType'
        security:
          - api_token: []
        tags:
          - UserType
    /api/v1/org:
      get:
        description: Get settings of your organization.
        operationId: getOrgSettings
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgSetting'
        security:
          - api_token: []
        summary: Get org settings
        tags:
          - Org
      post:
        description: Partial update settings of your organization.
        operationId: partialUpdateOrgSetting
        requestBody:
          $ref: '#/components/requestBodies/OrgSetting'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgSetting'
        security:
          - api_token: []
        summary: Partial update Org setting
        tags:
          - Org
      put:
        description: Update settings of your organization.
        operationId: updateOrgSetting
        requestBody:
          $ref: '#/components/requestBodies/OrgSetting'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgSetting'
        security:
          - api_token: []
        summary: Update Org setting
        tags:
          - Org
    /api/v1/org/contacts:
      get:
        description: Gets Contact Types of your organization.
        operationId: getOrgContactTypes
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OrgContactTypeObj'
                  type: array
        security:
          - api_token: []
        summary: Get org contact types
        tags:
          - Org
    /api/v1/org/contacts/{contactType}:
      get:
        description: >-
          Retrieves the URL of the User associated with the specified Contact
          Type.
        operationId: getOrgContactUser
        parameters:
          - in: path
            name: contactType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgContactUser'
        security:
          - api_token: []
        summary: Get org contact user
        tags:
          - Org
      put:
        description: Updates the User associated with the specified Contact Type.
        operationId: updateOrgContactUser
        parameters:
          - in: path
            name: contactType
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdString'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgContactUser'
        security:
          - api_token: []
        summary: Update org contact user
        tags:
          - Org
    /api/v1/org/logo:
      post:
        description: Updates the logo for your organization.
        operationId: updateOrgLogo
        requestBody:
          $ref: '#/components/requestBodies/uploadApplicationLogo'
        responses:
          '201':
            description: Created
        security:
          - api_token: []
        summary: Update org logo
        tags:
          - Org
    /api/v1/org/preferences:
      get:
        description: Gets preferences of your organization.
        operationId: getOrgPreferences
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgPreferences'
        security:
          - api_token: []
        summary: Get org preferences
        tags:
          - Org
    /api/v1/org/preferences/hideEndUserFooter:
      post:
        description: Hide the Okta UI footer for all end users of your organization.
        operationId: hideOktaUIFooter
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgPreferences'
        security:
          - api_token: []
        summary: Show Okta UI Footer
        tags:
          - Org
    /api/v1/org/preferences/showEndUserFooter:
      post:
        description: Makes the Okta UI footer visible for all end users of your organization.
        operationId: showOktaUIFooter
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgPreferences'
        security:
          - api_token: []
        summary: Show Okta UI Footer
        tags:
          - Org
    /api/v1/org/privacy/oktaCommunication:
      get:
        description: Gets Okta Communication Settings of your organization.
        operationId: getOktaCommunicationSettings
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        security:
          - api_token: []
        summary: Get Okta Communication Settings
        tags:
          - Org
    /api/v1/org/privacy/oktaCommunication/optIn:
      post:
        description: Opts in all users of this org to Okta Communication emails.
        operationId: optInUsersToOktaCommunicationEmails
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        security:
          - api_token: []
        summary: Opt in all users to Okta Communication emails
        tags:
          - Org
    /api/v1/org/privacy/oktaCommunication/optOut:
      post:
        description: Opts out all users of this org from Okta Communication emails.
        operationId: optOutUsersFromOktaCommunicationEmails
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaCommunicationSetting'
        security:
          - api_token: []
        summary: Opt out all users from Okta Communication emails
        tags:
          - Org
    /api/v1/org/privacy/oktaSupport:
      get:
        description: Gets Okta Support Settings of your organization.
        operationId: getOrgOktaSupportSettings
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        security:
          - api_token: []
        summary: Get Okta Support settings
        tags:
          - Org
    /api/v1/org/privacy/oktaSupport/extend:
      post:
        description: >-
          Extends the length of time that Okta Support can access your org by 24
          hours. This means that 24 hours are added to the remaining access time.
        operationId: extendOktaSupport
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        security:
          - api_token: []
        summary: Extend Okta Support
        tags:
          - Org
    /api/v1/org/privacy/oktaSupport/grant:
      post:
        description: >-
          Enables you to temporarily allow Okta Support to access your org as an
          administrator for eight hours.
        operationId: grantOktaSupport
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        security:
          - api_token: []
        summary: Grant Okta Support
        tags:
          - Org
    /api/v1/org/privacy/oktaSupport/revoke:
      post:
        description: Revokes Okta Support access to your organization.
        operationId: revokeOktaSupport
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OrgOktaSupportSettingsObj'
        security:
          - api_token: []
        summary: Extend Okta Support
        tags:
          - Org
    /api/v1/policies:
      get:
        description: Gets all policies with the specified type.
        operationId: listPolicies
        parameters:
          - in: query
            name: type
            required: true
            schema:
              type: string
          - in: query
            name: status
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
              default: ''
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Policy'
                  type: array
        security:
          - api_token: []
        tags:
          - Policy
      post:
        description: Creates a policy.
        operationId: createPolicy
        parameters:
          - in: query
            name: activate
            schema:
              type: boolean
              default: true
        requestBody:
          $ref: '#/components/requestBodies/Policy'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Policy'
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}:
      delete:
        description: Removes a policy.
        operationId: deletePolicy
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - Policy
      get:
        description: Gets a policy.
        operationId: getPolicy
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
              default: ''
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Policy'
        security:
          - api_token: []
        tags:
          - Policy
      put:
        description: Updates a policy.
        operationId: updatePolicy
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/Policy'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Policy'
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/lifecycle/activate:
      post:
        description: Activates a policy.
        operationId: activatePolicy
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/lifecycle/deactivate:
      post:
        description: Deactivates a policy.
        operationId: deactivatePolicy
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/rules:
      get:
        description: Enumerates all policy rules.
        operationId: listPolicyRules
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/PolicyRule'
                  type: array
        security:
          - api_token: []
        tags:
          - Policy
      post:
        description: Creates a policy rule.
        operationId: createPolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/PolicyRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PolicyRule'
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/rules/{ruleId}:
      delete:
        description: Removes a policy rule.
        operationId: deletePolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Policy
      get:
        description: Gets a policy rule.
        operationId: getPolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PolicyRule'
        security:
          - api_token: []
        tags:
          - Policy
      put:
        description: Updates a policy rule.
        operationId: updatePolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/PolicyRule'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PolicyRule'
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate:
      post:
        description: Activates a policy rule.
        operationId: activatePolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate:
      post:
        description: Deactivates a policy rule.
        operationId: deactivatePolicyRule
        parameters:
          - in: path
            name: policyId
            required: true
            schema:
              type: string
          - in: path
            name: ruleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - Policy
    /api/v1/roles/{roleTypeOrRoleId}/subscriptions:
      get:
        description: >-
          When roleType List all subscriptions of a Role. Else when roleId List
          subscriptions of a Custom Role
        operationId: listRoleSubscriptions
        parameters:
          - in: path
            name: roleTypeOrRoleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Subscription'
                  type: array
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: List all subscriptions of a Custom Role
        tags:
          - Subscription
    /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}:
      get:
        description: >-
          When roleType Get subscriptions of a Role with a specific notification
          type. Else when roleId Get subscription of a Custom Role with a specific
          notification type.
        operationId: getRoleSubscriptionByNotificationType
        parameters:
          - in: path
            name: roleTypeOrRoleId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Get subscriptions of a Custom Role with a specific notification type
        tags:
          - Subscription
    /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/subscribe:
      post:
        description: >-
          When roleType Subscribes a Role to a specific notification type. When
          you change the subscription status of a Role, it overrides the
          subscription of any individual user of that Role. Else when roleId
          Subscribes a Custom Role to a specific notification type. When you
          change the subscription status of a Custom Role, it overrides the
          subscription of any individual user of that Custom Role.
        operationId: subscribeRoleSubscriptionByNotificationType
        parameters:
          - in: path
            name: roleTypeOrRoleId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Subscribe a Custom Role to a specific notification type
        tags:
          - Subscription
    /api/v1/roles/{roleTypeOrRoleId}/subscriptions/{notificationType}/unsubscribe:
      post:
        description: >-
          When roleType Unsubscribes a Role from a specific notification type.
          When you change the subscription status of a Role, it overrides the
          subscription of any individual user of that Role. Else when roleId
          Unsubscribes a Custom Role from a specific notification type. When you
          change the subscription status of a Custom Role, it overrides the
          subscription of any individual user of that Custom Role.
        operationId: unsubscribeRoleSubscriptionByNotificationType
        parameters:
          - in: path
            name: roleTypeOrRoleId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Unsubscribe a Custom Role from a specific notification type
        tags:
          - Subscription
    /api/v1/sessions:
      post:
        description: >-
          Creates a new session for a user with a valid session token. Use this
          API if, for example, you want to set the session cookie yourself instead
          of allowing Okta to set it, or want to hold the session ID in order to
          delete a session via the API instead of visiting the logout URL.
        operationId: createSession
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Session'
          '400':
            description: Bad Request
        security:
          - api_token: []
        summary: Create Session with Session Token
        tags:
          - Session
    /api/v1/sessions/{sessionId}:
      delete:
        description: ''
        operationId: endSession
        parameters:
          - in: path
            name: sessionId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
          '400':
            description: Bad Request
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Close Session
        tags:
          - Session
      get:
        description: Get details about a session.
        operationId: getSession
        parameters:
          - in: path
            name: sessionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Session'
        security:
          - api_token: []
        tags:
          - Session
    /api/v1/sessions/{sessionId}/lifecycle/refresh:
      post:
        description: ''
        operationId: refreshSession
        parameters:
          - in: path
            name: sessionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Session'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Refresh Session
        tags:
          - Session
    /api/v1/templates/sms:
      get:
        description: >-
          Enumerates custom SMS templates in your organization. A subset of
          templates can be returned that match a template type.
        operationId: listSmsTemplates
        parameters:
          - in: query
            name: templateType
            x-openapi-v3-schema-ref: '#/definitions/SmsTemplateType'
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/SmsTemplate'
                  type: array
        security:
          - api_token: []
        summary: List SMS Templates
        tags:
          - Template
      post:
        description: Adds a new custom SMS template to your organization.
        operationId: createSmsTemplate
        requestBody:
          $ref: '#/components/requestBodies/SmsTemplate'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SmsTemplate'
        security:
          - api_token: []
        summary: Add SMS Template
        tags:
          - Template
    /api/v1/templates/sms/{templateId}:
      delete:
        description: Removes an SMS template.
        operationId: deleteSmsTemplate
        parameters:
          - in: path
            name: templateId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove SMS Template
        tags:
          - Template
      get:
        description: Fetches a specific template by `id`
        operationId: getSmsTemplate
        parameters:
          - in: path
            name: templateId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SmsTemplate'
        security:
          - api_token: []
        summary: Get SMS Template
        tags:
          - Template
      post:
        description: 'Updates only some of the SMS template properties:'
        operationId: partialUpdateSmsTemplate
        parameters:
          - in: path
            name: templateId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/SmsTemplate'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SmsTemplate'
        security:
          - api_token: []
        summary: Partial SMS Template Update
        tags:
          - Template
      put:
        description: Updates the SMS template.
        operationId: updateSmsTemplate
        parameters:
          - in: path
            name: templateId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/SmsTemplate'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SmsTemplate'
        security:
          - api_token: []
        summary: Update SMS Template
        tags:
          - Template
    /api/v1/threats/configuration:
      get:
        description: Gets current ThreatInsight configuration
        operationId: getCurrentConfiguration
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ThreatInsightConfiguration'
        security:
          - api_token: []
        tags:
          - ThreatInsight
      post:
        description: Updates ThreatInsight configuration
        operationId: updateConfiguration
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatInsightConfiguration'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ThreatInsightConfiguration'
        security:
          - api_token: []
        tags:
          - ThreatInsight
    /api/v1/trustedOrigins:
      get:
        description: Success
        operationId: listOrigins
        parameters:
          - in: query
            name: q
            schema:
              type: string
          - in: query
            name: filter
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/TrustedOrigin'
                  type: array
        security:
          - api_token: []
        tags:
          - TrustedOrigin
      post:
        description: Success
        operationId: createOrigin
        requestBody:
          $ref: '#/components/requestBodies/TrustedOrigin'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustedOrigin'
        security:
          - api_token: []
        tags:
          - TrustedOrigin
    /api/v1/trustedOrigins/{trustedOriginId}:
      delete:
        description: Success
        operationId: deleteOrigin
        parameters:
          - in: path
            name: trustedOriginId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - TrustedOrigin
      get:
        description: Success
        operationId: getOrigin
        parameters:
          - in: path
            name: trustedOriginId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustedOrigin'
        security:
          - api_token: []
        tags:
          - TrustedOrigin
      put:
        description: Success
        operationId: updateOrigin
        parameters:
          - in: path
            name: trustedOriginId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/TrustedOrigin'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustedOrigin'
        security:
          - api_token: []
        tags:
          - TrustedOrigin
    /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate:
      post:
        description: Success
        operationId: activateOrigin
        parameters:
          - in: path
            name: trustedOriginId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustedOrigin'
        security:
          - api_token: []
        tags:
          - TrustedOrigin
    /api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate:
      post:
        description: Success
        operationId: deactivateOrigin
        parameters:
          - in: path
            name: trustedOriginId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustedOrigin'
        security:
          - api_token: []
        tags:
          - TrustedOrigin
    /api/v1/users:
      get:
        description: >-
          Lists users that do not have a status of 'DEPROVISIONED' (by default),
          up to the maximum (200 for most orgs), with pagination in most cases. A
          subset of users can be returned that match a supported filter expression
          or search criteria.
        operationId: listUsers
        parameters:
          - description: Finds a user that matches firstName, lastName, and email properties
            in: query
            name: q
            schema:
              type: string
          - description: Specifies the pagination cursor for the next page of users
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of results returned
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 10
          - description: Filters users with a supported expression for a subset of properties
            in: query
            name: filter
            schema:
              type: string
          - description: >-
              Searches for users with a supported filtering  expression for most
              properties
            in: query
            name: search
            schema:
              type: string
          - in: query
            name: sortBy
            schema:
              type: string
          - in: query
            name: sortOrder
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/User'
                  type: array
        security:
          - api_token: []
        summary: List Users
        tags:
          - User
      post:
        description: >-
          Creates a new user in your Okta organization with or without
          credentials.
        operationId: createUser
        parameters:
          - description: Executes activation lifecycle operation when creating the user
            in: query
            name: activate
            schema:
              type: boolean
              default: true
          - description: >-
              Indicates whether to create a user with a specified authentication
              provider
            in: query
            name: provider
            schema:
              type: boolean
              default: false
          - description: >-
              With activate=true, set nextLogin to "changePassword" to have the
              password be EXPIRED, so user must change it the next time they log
              in.
            in: query
            name: nextLogin
            x-okta-added-version: 0.14.0
            x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
            schema:
              type: string
              default: ''
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
        security:
          - api_token: []
        summary: Create User
        tags:
          - User
    /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
      put:
        operationId: setLinkedObjectForUser
        parameters:
          - in: path
            name: associatedUserId
            required: true
            schema:
              type: string
          - in: path
            name: primaryRelationshipName
            required: true
            schema:
              type: string
          - in: path
            name: primaryUserId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Success
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}:
      delete:
        description: >-
          Deletes a user permanently.  This operation can only be performed on
          users that have a `DEPROVISIONED` status.  **This action cannot be
          recovered!**
        operationId: deactivateOrDeleteUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: sendEmail
            x-okta-added-version: 1.5.0
            schema:
              type: boolean
              default: false
        responses:
          '202':
            description: ACCEPTED
        security:
          - api_token: []
        summary: Delete User
        tags:
          - User
      get:
        description: Fetches a user from your Okta organization.
        operationId: getUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
        security:
          - api_token: []
        summary: Get User
        tags:
          - User
      post:
        description: Update a user's profile or credentials with partial update semantics.
        operationId: partialUpdateUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: strict
            schema:
              type: boolean
        requestBody:
          $ref: '#/components/requestBodies/User'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
        security:
          - api_token: []
        tags:
          - User
      put:
        description: >-
          Update a user's profile and/or credentials using strict-update
          semantics.
        operationId: updateUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: strict
            x-okta-added-version: 1.10.0
            schema:
              type: boolean
        requestBody:
          $ref: '#/components/requestBodies/User'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
        security:
          - api_token: []
        summary: Update User
        tags:
          - User
    /api/v1/users/{userId}/appLinks:
      get:
        description: >-
          Fetches appLinks for all direct or indirect (via group membership)
          assigned applications.
        operationId: listAppLinks
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/AppLink'
                  type: array
        security:
          - api_token: []
        summary: Get Assigned App Links
        tags:
          - User
    /api/v1/users/{userId}/clients:
      get:
        description: >-
          Lists all client resources for which the specified user has grants or
          tokens.
        operationId: listUserClients
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2Client'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/clients/{clientId}/grants:
      delete:
        description: Revokes all grants for the specified user and client
        operationId: revokeGrantsForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Lists all grants for a specified user and client
        operationId: listGrantsForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/clients/{clientId}/tokens:
      delete:
        description: Revokes all refresh tokens issued for the specified User and Client.
        operationId: revokeTokensForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Lists all refresh tokens issued for the specified User and Client.
        operationId: listRefreshTokensForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2RefreshToken'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
      delete:
        description: Revokes the specified refresh token.
        operationId: revokeTokenForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Gets a refresh token issued for the specified User and Client.
        operationId: getRefreshTokenForUserAndClient
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: clientId
            required: true
            schema:
              type: string
          - in: path
            name: tokenId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              default: 20
          - in: query
            name: after
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/credentials/change_password:
      post:
        description: >-
          Changes a user's password by validating the user's current password.
          This operation can only be performed on users in `STAGED`, `ACTIVE`,
          `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password
          credential
        operationId: changePassword
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: strict
            x-okta-added-version: 1.10.0
            schema:
              type: boolean
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordRequest'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserCredentials'
        security:
          - api_token: []
        summary: Change Password
        tags:
          - User
    /api/v1/users/{userId}/credentials/change_recovery_question:
      post:
        description: >-
          Changes a user's recovery question & answer credential by validating the
          user's current password.  This operation can only be performed on users
          in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid
          password credential
        operationId: changeRecoveryQuestion
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserCredentials'
        security:
          - api_token: []
        summary: Change Recovery Question
        tags:
          - User
    /api/v1/users/{userId}/credentials/forgot_password:
      post:
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForgotPasswordResponse'
        security:
          - api_token: []
        summary: Forgot Password
        tags:
          - User
        x-okta-multi-operation:
          - description: >-
              Generates a one-time token (OTT) that can be used to reset a user's
              password
            operationId: forgotPasswordGenerateOneTimeToken
            parameters:
              - default: true
                in: query
                name: sendEmail
                type: boolean
          - description: >-
              Sets a new password for a user by validating the user's answer to
              their current recovery question
            operationId: forgotPasswordSetNewPassword
            parameters:
              - in: body
                name: user
                required: true
                schema:
                  $ref: '#/components/schemas/UserCredentials'
              - default: true
                in: query
                name: sendEmail
                type: boolean
    /api/v1/users/{userId}/factors:
      get:
        description: Enumerates all the enrolled factors for the specified user
        operationId: listFactors
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/UserFactor'
                  type: array
        security:
          - api_token: []
        tags:
          - UserFactor
      post:
        description: Enrolls a user with a supported factor.
        operationId: enrollFactor
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: updatePhone
            schema:
              type: boolean
              default: false
          - description: id of SMS template (only for SMS factor)
            in: query
            name: templateId
            schema:
              type: string
          - in: query
            name: tokenLifetimeSeconds
            x-okta-added-version: 1.3.0
            schema:
              type: integer
              format: int32
              default: 300
          - in: query
            name: activate
            x-okta-added-version: 1.3.0
            schema:
              type: boolean
              default: false
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
          description: Factor
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserFactor'
        security:
          - api_token: []
        summary: Enroll Factor
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/catalog:
      get:
        description: >-
          Enumerates all the supported factors that can be enrolled for the
          specified user
        operationId: listSupportedFactors
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/UserFactor'
                  type: array
        security:
          - api_token: []
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/questions:
      get:
        description: >-
          Enumerates all available security questions for a user's `question`
          factor
        operationId: listSupportedSecurityQuestions
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/SecurityQuestion'
                  type: array
        security:
          - api_token: []
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/{factorId}:
      delete:
        description: >-
          Unenrolls an existing factor for the specified user, allowing the user
          to enroll a new factor.
        operationId: deleteFactor
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: factorId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - UserFactor
      get:
        description: Fetches a factor for the specified user
        operationId: getFactor
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: factorId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserFactor'
        security:
          - api_token: []
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
      post:
        description: >-
          The `sms` and `token:software:totp` factor types require activation to
          complete the enrollment process.
        operationId: activateFactor
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: factorId
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateFactorRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserFactor'
        security:
          - api_token: []
        summary: Activate Factor
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
      get:
        description: Polls factors verification transaction for status.
        operationId: getFactorTransactionStatus
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: factorId
            required: true
            schema:
              type: string
          - in: path
            name: transactionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/VerifyUserFactorResponse'
        security:
          - api_token: []
        tags:
          - UserFactor
    /api/v1/users/{userId}/factors/{factorId}/verify:
      post:
        description: Verifies an OTP for a `token` or `token:hardware` factor
        operationId: verifyFactor
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: factorId
            required: true
            schema:
              type: string
          - in: query
            name: templateId
            schema:
              type: string
          - in: query
            name: tokenLifetimeSeconds
            x-okta-added-version: 1.3.0
            schema:
              type: integer
              format: int32
              default: 300
          - in: header
            name: X-Forwarded-For
            x-okta-added-version: 1.11.0
            schema:
              type: string
          - in: header
            name: User-Agent
            x-okta-added-version: 1.11.0
            schema:
              type: string
          - in: header
            name: Accept-Language
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyFactorRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/VerifyUserFactorResponse'
        security:
          - api_token: []
        summary: Verify MFA Factor
        tags:
          - UserFactor
    /api/v1/users/{userId}/grants:
      delete:
        description: Revokes all grants for a specified user
        operationId: revokeUserGrants
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Lists all grants for the specified user
        operationId: listUserGrants
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: scopeId
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/grants/{grantId}:
      delete:
        description: Revokes one grant for a specified user
        operationId: revokeUserGrant
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: grantId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Gets a grant for the specified user
        operationId: getUserGrant
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: grantId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/groups:
      get:
        description: Fetches the groups of which the user is a member.
        operationId: listUserGroups
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Group'
                  type: array
        security:
          - api_token: []
        summary: Get Member Groups
        tags:
          - User
    /api/v1/users/{userId}/idps:
      get:
        description: Lists the IdPs associated with the user.
        operationId: listUserIdentityProviders
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/IdentityProvider'
                  type: array
        security:
          - api_token: []
        summary: Listing IdPs associated with a user
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/activate:
      post:
        description: >-
          Activates a user.  This operation can only be performed on users with a
          `STAGED` status.  Activation of a user is an asynchronous operation. The
          user will have the `transitioningToStatus` property with a value of
          `ACTIVE` during activation to indicate that the user hasn't completed
          the asynchronous operation.  The user will have a status of `ACTIVE`
          when the activation process is complete.
        operationId: activateUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - description: Sends an activation email to the user if true
            in: query
            name: sendEmail
            required: true
            schema:
              type: boolean
              default: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserActivationToken'
        security:
          - api_token: []
        summary: Activate User
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/deactivate:
      post:
        description: >-
          Deactivates a user. This operation can only be performed on users that
          do not have a `DEPROVISIONED` status. While the asynchronous operation
          (triggered by HTTP header `Prefer: respond-async`) is proceeding the
          user's `transitioningToStatus` property is `DEPROVISIONED`. The user's
          status is `DEPROVISIONED` when the deactivation process is complete.
        operationId: deactivateUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: sendEmail
            x-okta-added-version: 1.5.0
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: OK
        security:
          - api_token: []
        summary: Deactivate User
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=false:
      post:
        description: >-
          This operation transitions the user to the status of `PASSWORD_EXPIRED`
          so that the user is required to change their password at their next
          login.
        operationId: expirePassword
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
        security:
          - api_token: []
        summary: Expire Password
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=true:
      post:
        description: >-
          This operation transitions the user to the status of `PASSWORD_EXPIRED`
          and the user's password is reset to a temporary password that is
          returned.
        operationId: expirePasswordAndGetTemporaryPassword
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TempPassword'
        security:
          - api_token: []
        summary: Expire Password
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/reactivate:
      post:
        description: >-
          Reactivates a user.  This operation can only be performed on users with
          a `PROVISIONED` status.  This operation restarts the activation workflow
          if for some reason the user activation was not completed when using the
          activationToken from [Activate User](https://raw.githubusercontent.com).
        operationId: reactivateUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - description: Sends an activation email to the user if true
            in: query
            name: sendEmail
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserActivationToken'
        security:
          - api_token: []
        summary: Reactivate User
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/reset_factors:
      post:
        description: >-
          This operation resets all factors for the specified user. All MFA factor
          enrollments returned to the unenrolled state. The user's status remains
          ACTIVE. This link is present only if the user is currently enrolled in
          one or more MFA factors.
        operationId: resetFactors
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
        security:
          - api_token: []
        summary: Reset Factors
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/reset_password:
      post:
        description: >-
          Generates a one-time token (OTT) that can be used to reset a user's
          password.  The OTT link can be automatically emailed to the user or
          returned to the API caller and distributed using a custom flow.
        operationId: resetPassword
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: sendEmail
            required: true
            schema:
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ResetPasswordToken'
        security:
          - api_token: []
        summary: Reset Password
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/suspend:
      post:
        description: >-
          Suspends a user.  This operation can only be performed on users with an
          `ACTIVE` status.  The user will have a status of `SUSPENDED` when the
          process is complete.
        operationId: suspendUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
        security:
          - api_token: []
        summary: Suspend User
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/unlock:
      post:
        description: >-
          Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
          status.  Users will be able to login with their current password.
        operationId: unlockUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Unlock User
        tags:
          - User
    /api/v1/users/{userId}/lifecycle/unsuspend:
      post:
        description: >-
          Unsuspends a user and returns them to the `ACTIVE` state.  This
          operation can only be performed on users that have a `SUSPENDED` status.
        operationId: unsuspendUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Unsuspend User
        tags:
          - User
    /api/v1/users/{userId}/linkedObjects/{relationshipName}:
      delete:
        description: >-
          Delete linked objects for a user, relationshipName can be ONLY a primary
          relationship name
        operationId: removeLinkedObjectForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: relationshipName
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: >-
          Get linked objects for a user, relationshipName can be a primary or
          associated relationship name
        operationId: getLinkedObjectsForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: relationshipName
            required: true
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/ResponseLinks'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles:
      get:
        description: Lists all roles assigned to a user.
        operationId: listAssignedRolesForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: expand
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Role'
                  type: array
        security:
          - api_token: []
        tags:
          - User
      post:
        description: Assigns a role to a user.
        operationId: assignRoleToUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: query
            name: disableNotifications
            schema:
              type: boolean
        requestBody:
          $ref: '#/components/requestBodies/AssignRoleRequest'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Role'
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}:
      delete:
        description: Unassigns a role from a user.
        operationId: removeRoleFromUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      get:
        description: Gets role that is assigne to user.
        operationId: getUserRole
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Role'
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:
      get:
        description: >-
          Lists all App targets for an `APP_ADMIN` Role assigned to a User. This
          methods return list may include full Applications or Instances. The
          response for an instance will have an `ID` value, while Application will
          not have an ID.
        operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/CatalogApplication'
                  type: array
        security:
          - api_token: []
        tags:
          - User
      put:
        description: Success
        operationId: addAllAppsAsTargetToRole
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:
      delete:
        description: Success
        operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      put:
        description: Success
        operationId: addApplicationTargetToAdminRoleForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
      delete:
        description: Remove App Instance Target to App Administrator Role given to a User
        operationId: removeApplicationTargetFromAdministratorRoleForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
          - in: path
            name: applicationId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Remove App Instance Target to App Administrator Role given to a User
        tags:
          - User
      put:
        description: Add App Instance Target to App Administrator Role given to a User
        operationId: addApplicationTargetToAppAdminRoleForUser
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: appName
            required: true
            schema:
              type: string
          - in: path
            name: applicationId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        summary: Add App Instance Target to App Administrator Role given to a User
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}/targets/groups:
      get:
        description: Success
        operationId: listGroupTargetsForRole
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: query
            name: after
            schema:
              type: string
          - in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: 20
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Group'
                  type: array
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
      delete:
        description: Success
        operationId: removeGroupTargetFromRole
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
      put:
        description: Success
        operationId: addGroupTargetToRole
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: roleId
            required: true
            schema:
              type: string
          - in: path
            name: groupId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/sessions:
      delete:
        description: >-
          Removes all active identity provider sessions. This forces the user to
          authenticate on the next operation. Optionally revokes OpenID Connect
          and OAuth refresh and access tokens issued to the user.
        operationId: clearUserSessions
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - description: Revoke issued OpenID Connect and OAuth refresh and access tokens
            in: query
            name: oauthTokens
            schema:
              type: boolean
              default: false
        responses:
          '204':
            description: No Content
        security:
          - api_token: []
        tags:
          - User
    /api/v1/users/{userId}/subscriptions:
      get:
        description: >-
          List subscriptions of a User. Only lists subscriptions for current user.
          An AccessDeniedException message is sent if requests are made from other
          users.
        operationId: listUserSubscriptions
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/Subscription'
                  type: array
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: List subscriptions of a User
        tags:
          - User
    /api/v1/users/{userId}/subscriptions/{notificationType}:
      get:
        description: >-
          Get the subscriptions of a User with a specific notification type. Only
          gets subscriptions for current user. An AccessDeniedException message is
          sent if requests are made from other users.
        operationId: getUserSubscriptionByNotificationType
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Subscription'
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Get the subscription of a User with a specific notification type
        tags:
          - User
    /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
      post:
        description: >-
          Subscribes a User to a specific notification type. Only the current User
          can subscribe to a specific notification type. An AccessDeniedException
          message is sent if requests are made from other users.
        operationId: subscribeUserSubscriptionByNotificationType
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Subscribe to a specific notification type
        tags:
          - Subscription
    /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
      post:
        description: >-
          Unsubscribes a User from a specific notification type. Only the current
          User can unsubscribe from a specific notification type. An
          AccessDeniedException message is sent if requests are made from other
          users.
        operationId: unsubscribeUserSubscriptionByNotificationType
        parameters:
          - in: path
            name: userId
            required: true
            schema:
              type: string
          - in: path
            name: notificationType
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
          '404':
            description: Not Found
        security:
          - api_token: []
        summary: Unsubscribe from a specific notification type
        tags:
          - Subscription
    /api/v1/zones:
      get:
        description: >-
          Enumerates network zones added to your organization with pagination. A
          subset of zones can be returned that match a supported filter expression
          or query.
        operationId: listNetworkZones
        parameters:
          - description: Specifies the pagination cursor for the next page of network zones
            in: query
            name: after
            schema:
              type: string
          - description: Specifies the number of results for a page
            in: query
            name: limit
            schema:
              type: integer
              format: int32
              default: -1
          - description: Filters zones by usage or id expression
            in: query
            name: filter
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  items:
                    $ref: '#/components/schemas/NetworkZone'
                  type: array
        security:
          - api_token: []
        summary: List Network Zones
        tags:
          - NetworkZone
      post:
        description: Adds a new network zone to your Okta organization.
        operationId: createNetworkZone
        requestBody:
          $ref: '#/components/requestBodies/NetworkZone'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkZone'
        security:
          - api_token: []
        summary: Add Network Zone
        tags:
          - NetworkZone
    /api/v1/zones/{zoneId}:
      delete:
        description: Removes network zone.
        operationId: deleteNetworkZone
        parameters:
          - in: path
            name: zoneId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
        security:
          - api_token: []
        summary: Delete Network Zone
        tags:
          - NetworkZone
      get:
        description: Fetches a network zone from your Okta organization by `id`.
        operationId: getNetworkZone
        parameters:
          - in: path
            name: zoneId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkZone'
        security:
          - api_token: []
        summary: Get Network Zone
        tags:
          - NetworkZone
      put:
        description: Updates a network zone in your organization.
        operationId: updateNetworkZone
        parameters:
          - in: path
            name: zoneId
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/NetworkZone'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkZone'
        security:
          - api_token: []
        summary: Update Network Zone
        tags:
          - NetworkZone
    /api/v1/zones/{zoneId}/lifecycle/activate:
      post:
        description: Activate Network Zone
        operationId: activateNetworkZone
        parameters:
          - in: path
            name: zoneId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkZone'
        security:
          - api_token: []
        summary: Activate Network Zone
        tags:
          - NetworkZone
    /api/v1/zones/{zoneId}/lifecycle/deactivate:
      post:
        description: Deactivates a network zone.
        operationId: deactivateNetworkZone
        parameters:
          - in: path
            name: zoneId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NetworkZone'
        security:
          - api_token: []
        summary: Deactivate Network Zone
        tags:
          - NetworkZone
  servers:
    - url: https://your-subdomain.okta.com
  components:
    requestBodies:
      Authenticator:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authenticator'
        required: true
      AuthorizationServerPolicyRule:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicyRule'
        required: true
      SmsTemplate:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsTemplate'
        required: true
      AuthorizationServerPolicy:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServerPolicy'
        required: true
      CsrMetadata:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      UserType:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      Policy:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      AssignRoleRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      InlineHook:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHook'
        required: true
      Application:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      uploadApplicationLogo:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        required: true
      AppUser:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      AuthorizationServer:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationServer'
        required: true
      OAuth2Claim:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Claim'
        required: true
      OAuth2Scope:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2Scope'
        required: true
      EmailTemplateCustomizationRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateCustomizationRequest'
        required: true
      EventHook:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      Group:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      GroupRule:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      IdentityProvider:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      OrgSetting:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSetting'
        required: true
      PolicyRule:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRule'
        required: true
      TrustedOrigin:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrustedOrigin'
        required: true
      User:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      NetworkZone:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkZone'
        required: true
    securitySchemes:
      api_token:
        description: SSWS {API Token}
        in: header
        name: Authorization
        type: apiKey
    schemas:
      AccessPolicy:
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      AccessPolicyConstraint:
        properties:
          methods:
            items:
              type: string
            type: array
          reauthenticateIn:
            type: string
          types:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      AccessPolicyConstraints:
        properties:
          knowledge:
            $ref: '#/components/schemas/KnowledgeConstraint'
          possession:
            $ref: '#/components/schemas/PossessionConstraint'
        type: object
        x-okta-tags:
          - Policy
      AccessPolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/AccessPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/AccessPolicyRuleConditions'
          name:
            type: string
        type: object
        x-okta-parent: '#/definitions/PolicyRule'
        x-okta-tags:
          - Policy
      AccessPolicyRuleActions:
        properties:
          appSignOn:
            $ref: '#/components/schemas/AccessPolicyRuleApplicationSignOn'
        type: object
        x-okta-parent: '#/definitions/PolicyRuleActions'
        x-okta-tags:
          - Policy
      AccessPolicyRuleApplicationSignOn:
        properties:
          access:
            type: string
          verificationMethod:
            $ref: '#/components/schemas/VerificationMethod'
        type: object
        x-okta-tags:
          - Policy
      AccessPolicyRuleConditions:
        properties:
          device:
            $ref: '#/components/schemas/DeviceAccessPolicyRuleCondition'
          elCondition:
            $ref: '#/components/schemas/AccessPolicyRuleCustomCondition'
          userType:
            $ref: '#/components/schemas/UserTypeCondition'
        x-okta-parent: '#/definitions/PolicyRuleConditions'
        x-okta-tags:
          - Policy
      AccessPolicyRuleCustomCondition:
        properties:
          condition:
            type: string
        x-okta-tags:
          - Policy
      AcsEndpoint:
        properties:
          index:
            type: integer
          url:
            type: string
        x-okta-tags:
          - Application
      ActivateFactorRequest:
        properties:
          attestation:
            type: string
          clientData:
            type: string
          passCode:
            type: string
          registrationData:
            type: string
          stateToken:
            type: string
        x-okta-tags:
          - UserFactor
      AllowedForEnum:
        enum:
          - recovery
          - sso
          - any
          - none
        type: string
        x-okta-tags:
          - Authenticator
      AppAndInstanceConditionEvaluatorAppOrInstance:
        properties:
          id:
            readOnly: true
            type: string
          name:
            type: string
          type:
            enum:
              - APP_TYPE
              - APP
            type: string
        type: object
        x-okta-tags:
          - Policy
      AppAndInstancePolicyRuleCondition:
        properties:
          exclude:
            items:
              $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
            type: array
          include:
            items:
              $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
            type: array
        type: object
        x-okta-tags:
          - Policy
      AppInstancePolicyRuleCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      AppLink:
        properties:
          appAssignmentId:
            readOnly: true
            type: string
          appInstanceId:
            readOnly: true
            type: string
          appName:
            readOnly: true
            type: string
          credentialsSetup:
            readOnly: true
            type: boolean
          hidden:
            readOnly: true
            type: boolean
          id:
            readOnly: true
            type: string
          label:
            readOnly: true
            type: string
          linkUrl:
            readOnly: true
            type: string
          logoUrl:
            readOnly: true
            type: string
          sortOrder:
            readOnly: true
            type: integer
        type: object
        x-okta-tags:
          - User
      AppUser:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          credentials:
            $ref: '#/components/schemas/AppUserCredentials'
          externalId:
            readOnly: true
            type: string
          id:
            type: string
          lastSync:
            format: date-time
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          passwordChanged:
            format: date-time
            readOnly: true
            type: string
          profile:
            additionalProperties:
              type: object
            type: object
          scope:
            type: string
          status:
            readOnly: true
            type: string
          statusChanged:
            format: date-time
            readOnly: true
            type: string
          syncState:
            readOnly: true
            type: string
        type: object
        x-okta-crud:
          - alias: update
            arguments:
              - dest: appId
                parentSrc: appId
              - dest: userId
                src: id
              - dest: appUser
                self: true
            operationId: updateApplicationUser
          - alias: delete
            arguments:
              - dest: appId
                parentSrc: appId
              - dest: userId
                src: id
            operationId: deleteApplicationUser
        x-okta-tags:
          - Application
      AppUserCredentials:
        properties:
          password:
            $ref: '#/components/schemas/AppUserPasswordCredential'
          userName:
            type: string
        type: object
        x-okta-tags:
          - Application
      AppUserPasswordCredential:
        properties:
          value:
            format: password
            type: string
        x-okta-tags:
          - Application
      Application:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          accessibility:
            $ref: '#/components/schemas/ApplicationAccessibility'
          created:
            format: date-time
            readOnly: true
            type: string
          credentials:
            $ref: '#/components/schemas/ApplicationCredentials'
          features:
            items:
              type: string
            type: array
          id:
            readOnly: true
            type: string
          label:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          licensing:
            $ref: '#/components/schemas/ApplicationLicensing'
          name:
            readOnly: true
            type: string
          profile:
            additionalProperties:
              type: object
            type: object
          settings:
            $ref: '#/components/schemas/ApplicationSettings'
          signOnMode:
            $ref: '#/components/schemas/ApplicationSignOnMode'
          status:
            enum:
              - ACTIVE
              - INACTIVE
              - DELETED
            readOnly: true
            type: string
          visibility:
            $ref: '#/components/schemas/ApplicationVisibility'
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: appId
                src: id
            operationId: getApplication
          - alias: update
            arguments:
              - dest: appId
                src: id
              - dest: application
                self: true
            operationId: updateApplication
          - alias: delete
            arguments:
              - dest: appId
                src: id
            operationId: deleteApplication
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: appId
                src: id
            operationId: activateApplication
          - alias: deactivate
            arguments:
              - dest: appId
                src: id
            operationId: deactivateApplication
          - alias: listApplicationUsers
            arguments:
              - dest: appId
                src: id
            operationId: listApplicationUsers
          - alias: assignUserToApplication
            arguments:
              - dest: appId
                src: id
            operationId: assignUserToApplication
          - alias: getApplicationUser
            arguments:
              - dest: appId
                src: id
            operationId: getApplicationUser
          - alias: createApplicationGroupAssignment
            arguments:
              - dest: appId
                src: id
            operationId: createApplicationGroupAssignment
          - alias: getApplicationGroupAssignment
            arguments:
              - dest: appId
                src: id
            operationId: getApplicationGroupAssignment
          - alias: cloneApplicationKey
            arguments:
              - dest: appId
                src: id
            operationId: cloneApplicationKey
          - alias: getApplicationKey
            arguments:
              - dest: appId
                src: id
            operationId: getApplicationKey
          - alias: listGroupAssignments
            arguments:
              - dest: appId
                src: id
            operationId: listApplicationGroupAssignments
          - alias: listKeys
            arguments:
              - dest: appId
                src: id
            operationId: listApplicationKeys
          - alias: generateKey
            arguments:
              - dest: appId
                src: id
            operationId: generateApplicationKey
          - alias: generateCsr
            arguments:
              - dest: appId
                src: id
            operationId: generateCsrForApplication
          - alias: getCsr
            arguments:
              - dest: appId
                src: id
            operationId: getCsrForApplication
          - alias: revokeCsr
            arguments:
              - dest: appId
                src: id
            operationId: revokeCsrFromApplication
          - alias: listCsrs
            arguments:
              - dest: appId
                src: id
            operationId: listCsrsForApplication
          - alias: publishCerCert
            arguments:
              - dest: appId
                src: id
            operationId: publishCerCert
          - alias: publishBinaryCerCert
            arguments:
              - dest: appId
                src: id
            operationId: publishBinaryCerCert
          - alias: publishDerCert
            arguments:
              - dest: appId
                src: id
            operationId: publishDerCert
          - alias: publishBinaryDerCert
            arguments:
              - dest: appId
                src: id
            operationId: publishBinaryDerCert
          - alias: publishBinaryPemCert
            arguments:
              - dest: appId
                src: id
            operationId: publishBinaryPemCert
          - alias: listOAuth2Tokens
            arguments:
              - dest: appId
                src: id
            operationId: listOAuth2TokensForApplication
          - alias: revokeOAuth2TokenForApplication
            arguments:
              - dest: appId
                src: id
            operationId: revokeOAuth2TokenForApplication
          - alias: getOAuth2Token
            arguments:
              - dest: appId
                src: id
            operationId: getOAuth2TokenForApplication
          - alias: revokeOAuth2Tokens
            arguments:
              - dest: appId
                src: id
            operationId: revokeOAuth2TokensForApplication
          - alias: listScopeConsentGrants
            arguments:
              - dest: appId
                src: id
            operationId: listScopeConsentGrants
          - alias: grantConsentToScope
            arguments:
              - dest: appId
                src: id
            operationId: grantConsentToScope
          - alias: revokeScopeConsentGrant
            arguments:
              - dest: appId
                src: id
            operationId: revokeScopeConsentGrant
          - alias: getScopeConsentGrant
            arguments:
              - dest: appId
                src: id
            operationId: getScopeConsentGrant
          - alias: uploadApplicationLogo
            operationId: uploadApplicationLogo
          - alias: getFeatureForApplication
            arguments:
              - dest: appId
                src: id
            operationId: getFeatureForApplication
          - alias: updateFeatureForApplication
            arguments:
              - dest: appId
                src: id
            operationId: updateFeatureForApplication
          - alias: updateApplicationPolicy
            arguments:
              - dest: appId
                src: id
            operationId: updateApplicationPolicy
        x-okta-tags:
          - Application
        x-openapi-v3-discriminator:
          mapping:
            AUTO_LOGIN: '#/definitions/AutoLoginApplication'
            BASIC_AUTH: '#/definitions/BasicAuthApplication'
            BOOKMARK: '#/definitions/BookmarkApplication'
            BROWSER_PLUGIN: '#/definitions/BrowserPluginApplication'
            OPENID_CONNECT: '#/definitions/OpenIdConnectApplication'
            SAML_1_1: '#/definitions/SamlApplication'
            SAML_2_0: '#/definitions/SamlApplication'
            SECURE_PASSWORD_STORE: '#/definitions/SecurePasswordStoreApplication'
            WS_FEDERATION: '#/definitions/WsFederationApplication'
          propertyName: signOnMode
      ApplicationAccessibility:
        properties:
          errorRedirectUrl:
            type: string
          loginRedirectUrl:
            type: string
          selfService:
            type: boolean
        type: object
        x-okta-tags:
          - Application
      ApplicationCredentials:
        properties:
          signing:
            $ref: '#/components/schemas/ApplicationCredentialsSigning'
          userNameTemplate:
            $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
        type: object
        x-okta-tags:
          - Application
      ApplicationCredentialsOAuthClient:
        properties:
          autoKeyRotation:
            type: boolean
          client_id:
            type: string
          client_secret:
            type: string
          pkce_required:
            type: boolean
          token_endpoint_auth_method:
            $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
        x-okta-tags:
          - Application
      ApplicationCredentialsScheme:
        enum:
          - SHARED_USERNAME_AND_PASSWORD
          - EXTERNAL_PASSWORD_SYNC
          - EDIT_USERNAME_AND_PASSWORD
          - EDIT_PASSWORD_ONLY
          - ADMIN_SETS_CREDENTIALS
        type: string
        x-okta-tags:
          - Application
      ApplicationCredentialsSigning:
        properties:
          kid:
            type: string
          lastRotated:
            format: date-time
            readOnly: true
            type: string
          nextRotation:
            format: date-time
            readOnly: true
            type: string
          rotationMode:
            type: string
          use:
            $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
        type: object
        x-okta-tags:
          - Application
      ApplicationCredentialsSigningUse:
        enum:
          - sig
        type: string
        x-okta-tags:
          - AuthorizationServer
      ApplicationCredentialsUsernameTemplate:
        properties:
          pushStatus:
            type: string
          suffix:
            type: string
          template:
            type: string
          type:
            type: string
        type: object
        x-okta-tags:
          - Application
      ApplicationFeature:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          capabilities:
            $ref: '#/components/schemas/CapabilitiesObject'
          description:
            type: string
          name:
            type: string
          status:
            $ref: '#/components/schemas/EnabledStatus'
        type: object
        x-okta-operations:
          - alias: listFeaturesForApplication
            operationId: listFeaturesForApplication
        x-okta-tags:
          - Application
      ApplicationGroupAssignment:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          priority:
            type: integer
          profile:
            additionalProperties:
              type: object
            type: object
        type: object
        x-okta-crud:
          - alias: delete
            arguments:
              - dest: appId
                parentSrc: appId
              - dest: groupId
                src: id
            operationId: deleteApplicationGroupAssignment
        x-okta-tags:
          - Application
      ApplicationLicensing:
        properties:
          seatCount:
            type: integer
        type: object
        x-okta-tags:
          - Application
      ApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/ApplicationSettingsApplication'
          implicitAssignment:
            type: boolean
          inlineHookId:
            type: string
          notes:
            $ref: '#/components/schemas/ApplicationSettingsNotes'
          notifications:
            $ref: '#/components/schemas/ApplicationSettingsNotifications'
        type: object
        x-okta-tags:
          - Application
      ApplicationSettingsApplication:
        properties:
          acsUrl:
            type: string
          buttonField:
            type: string
          loginUrlRegex:
            type: string
          orgName:
            type: string
          passwordField:
            type: string
          url:
            type: string
          usernameField:
            type: string
        x-okta-tags:
          - Application
      ApplicationSettingsNotes:
        properties:
          admin:
            type: string
          enduser:
            type: string
        type: object
        x-okta-tags:
          - Application
      ApplicationSettingsNotifications:
        properties:
          vpn:
            $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
        type: object
        x-okta-tags:
          - Application
      ApplicationSettingsNotificationsVpn:
        properties:
          helpUrl:
            type: string
          message:
            type: string
          network:
            $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
        type: object
        x-okta-tags:
          - Application
      ApplicationSettingsNotificationsVpnNetwork:
        properties:
          connection:
            type: string
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Application
      ApplicationSignOnMode:
        enum:
          - BOOKMARK
          - BASIC_AUTH
          - BROWSER_PLUGIN
          - SECURE_PASSWORD_STORE
          - AUTO_LOGIN
          - WS_FEDERATION
          - SAML_2_0
          - OPENID_CONNECT
          - SAML_1_1
        type: string
        x-okta-tags:
          - Application
      ApplicationVisibility:
        properties:
          appLinks:
            additionalProperties:
              type: boolean
            type: object
          autoLaunch:
            type: boolean
          autoSubmitToolbar:
            type: boolean
          hide:
            $ref: '#/components/schemas/ApplicationVisibilityHide'
        type: object
        x-okta-tags:
          - Application
      ApplicationVisibilityHide:
        properties:
          iOS:
            type: boolean
          web:
            type: boolean
        type: object
        x-okta-tags:
          - Application
      AssignRoleRequest:
        properties:
          type:
            $ref: '#/components/schemas/RoleType'
        x-okta-tags:
          - Role
      AuthenticationProvider:
        properties:
          name:
            type: string
          type:
            $ref: '#/components/schemas/AuthenticationProviderType'
        type: object
        x-okta-tags:
          - User
      AuthenticationProviderType:
        enum:
          - ACTIVE_DIRECTORY
          - FEDERATION
          - LDAP
          - OKTA
          - SOCIAL
          - IMPORT
        type: string
        x-okta-tags:
          - User
      Authenticator:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          key:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          provider:
            $ref: '#/components/schemas/AuthenticatorProvider'
          settings:
            $ref: '#/components/schemas/AuthenticatorSettings'
          status:
            $ref: '#/components/schemas/AuthenticatorStatus'
          type:
            $ref: '#/components/schemas/AuthenticatorType'
        type: object
        x-okta-crud:
          - alias: read
            arguments: []
            operationId: getAuthenticator
          - alias: update
            arguments:
              - dest: authenticatorId
                src: id
              - dest: authenticator
                self: true
            operationId: updateAuthenticator
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: authenticatorId
                src: id
            operationId: activateAuthenticator
          - alias: deactivate
            arguments:
              - dest: authenticatorId
                src: id
            operationId: deactivateAuthenticator
        x-okta-tags:
          - Authenticator
      AuthenticatorProvider:
        properties:
          configuration:
            $ref: '#/components/schemas/AuthenticatorProviderConfiguration'
          type:
            type: string
        x-okta-tags:
          - Authenticator
      AuthenticatorProviderConfiguration:
        properties:
          authPort:
            type: integer
          host:
            type: string
          hostName:
            type: string
          instanceId:
            type: string
          integrationKey:
            type: string
          secretKey:
            type: string
          sharedSecret:
            type: string
          userNameTemplate:
            $ref: '#/components/schemas/AuthenticatorProviderConfigurationUserNamePlate'
        x-okta-tags:
          - Authenticator
      AuthenticatorProviderConfigurationUserNamePlate:
        properties:
          template:
            type: string
        x-okta-tags:
          - Authenticator
      AuthenticatorSettings:
        properties:
          allowedFor:
            $ref: '#/components/schemas/AllowedForEnum'
          appInstanceId:
            type: string
          channelBinding:
            $ref: '#/components/schemas/ChannelBinding'
          compliance:
            $ref: '#/components/schemas/Compliance'
          tokenLifetimeInMinutes:
            type: integer
          userVerification:
            $ref: '#/components/schemas/UserVerificationEnum'
        type: object
        x-okta-tags:
          - Authenticator
      AuthenticatorStatus:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
        x-okta-tags:
          - Authenticator
      AuthenticatorType:
        enum:
          - app
          - password
          - security_question
          - phone
          - email
          - security_key
          - federated
        type: string
        x-okta-tags:
          - Authenticator
      AuthorizationServer:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          audiences:
            items:
              type: string
            type: array
          created:
            format: date-time
            readOnly: true
            type: string
          credentials:
            $ref: '#/components/schemas/AuthorizationServerCredentials'
          default:
            readOnly: true
            type: boolean
          description:
            type: string
          id:
            readOnly: true
            type: string
          issuer:
            type: string
          issuerMode:
            enum:
              - ORG_URL
              - CUSTOM_URL
              - DYNAMIC
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: authorizationServer
                self: true
            operationId: createAuthorizationServer
          - alias: read
            arguments: []
            operationId: getAuthorizationServer
          - alias: update
            arguments:
              - dest: authServerId
                src: id
              - dest: authorizationServer
                self: true
            operationId: updateAuthorizationServer
          - alias: delete
            arguments:
              - dest: authServerId
                src: id
              - dest: authorizationServer
                self: true
            operationId: deleteAuthorizationServer
        x-okta-operations:
          - alias: listOAuth2Claims
            arguments:
              - dest: authServerId
                src: id
            operationId: listOAuth2Claims
          - alias: createOAuth2Claim
            arguments:
              - dest: authServerId
                src: id
            operationId: createOAuth2Claim
          - alias: deleteOAuth2Claim
            arguments:
              - dest: authServerId
                src: id
            operationId: deleteOAuth2Claim
          - alias: getOAuth2Claim
            arguments:
              - dest: authServerId
                src: id
            operationId: getOAuth2Claim
          - alias: updateOAuth2Claim
            arguments:
              - dest: authServerId
                src: id
            operationId: updateOAuth2Claim
          - alias: listOAuth2Clients
            arguments:
              - dest: authServerId
                src: id
            operationId: listOAuth2ClientsForAuthorizationServer
          - alias: revokeRefreshTokensForClient
            arguments:
              - dest: authServerId
                src: id
            operationId: revokeRefreshTokensForAuthorizationServerAndClient
          - alias: listRefreshTokensForClient
            arguments:
              - dest: authServerId
                src: id
            operationId: listRefreshTokensForAuthorizationServerAndClient
          - alias: getRefreshTokenForClient
            arguments:
              - dest: authServerId
                src: id
            operationId: getRefreshTokenForAuthorizationServerAndClient
          - alias: revokeRefreshTokenForClient
            arguments:
              - dest: authServerId
                src: id
            operationId: revokeRefreshTokenForAuthorizationServerAndClient
          - alias: listKeys
            arguments:
              - dest: authServerId
                src: id
            operationId: listAuthorizationServerKeys
          - alias: rotateKeys
            arguments:
              - dest: authServerId
                src: id
            operationId: rotateAuthorizationServerKeys
          - alias: activate
            arguments:
              - dest: authServerId
                src: id
            operationId: activateAuthorizationServer
          - alias: deactivate
            arguments:
              - dest: authServerId
                src: id
            operationId: deactivateAuthorizationServer
          - alias: listPolicies
            arguments:
              - dest: authServerId
                src: id
            operationId: listAuthorizationServerPolicies
          - alias: createPolicy
            arguments:
              - dest: authServerId
                src: id
            operationId: createAuthorizationServerPolicy
          - alias: deletePolicy
            arguments:
              - dest: authServerId
                src: id
            operationId: deleteAuthorizationServerPolicy
          - alias: getPolicy
            arguments:
              - dest: authServerId
                src: id
            operationId: getAuthorizationServerPolicy
          - alias: updatePolicy
            arguments:
              - dest: authServerId
                src: id
            operationId: updateAuthorizationServerPolicy
          - alias: listOAuth2Scopes
            arguments:
              - dest: authServerId
                src: id
            operationId: listOAuth2Scopes
          - alias: createOAuth2Scope
            arguments:
              - dest: authServerId
                src: id
            operationId: createOAuth2Scope
          - alias: deleteOAuth2Scope
            arguments:
              - dest: authServerId
                src: id
            operationId: deleteOAuth2Scope
          - alias: getOAuth2Scope
            arguments:
              - dest: authServerId
                src: id
            operationId: getOAuth2Scope
          - alias: updateOAuth2Scope
            arguments:
              - dest: authServerId
                src: id
            operationId: updateOAuth2Scope
        x-okta-tags:
          - AuthorizationServer
      AuthorizationServerCredentials:
        properties:
          signing:
            $ref: '#/components/schemas/AuthorizationServerCredentialsSigningConfig'
        x-okta-tags:
          - Application
      AuthorizationServerCredentialsRotationMode:
        enum:
          - AUTO
          - MANUAL
        type: string
        x-okta-tags:
          - AuthorizationServer
      AuthorizationServerCredentialsSigningConfig:
        properties:
          kid:
            type: string
          lastRotated:
            format: date-time
            readOnly: true
            type: string
          nextRotation:
            format: date-time
            readOnly: true
            type: string
          rotationMode:
            $ref: '#/components/schemas/AuthorizationServerCredentialsRotationMode'
          use:
            $ref: '#/components/schemas/AuthorizationServerCredentialsUse'
        x-okta-tags:
          - AuthorizationServer
      AuthorizationServerCredentialsUse:
        enum:
          - sig
        type: string
        x-okta-tags:
          - AuthorizationServer
      AuthorizationServerPolicy:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
          created:
            format: date-time
            readOnly: true
            type: string
          description:
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          priority:
            type: integer
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          system:
            type: boolean
          type:
            $ref: '#/components/schemas/PolicyType'
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: policyId
                src: id
            operationId: getAuthorizationServerPolicy
          - alias: update
            arguments:
              - dest: policyId
                src: id
              - dest: policy
                self: true
            operationId: updateAuthorizationServerPolicy
          - alias: delete
            arguments:
              - dest: policyId
                src: id
            operationId: deleteAuthorizationServerPolicy
        x-okta-operations:
          - alias: listPolicyRules
            arguments:
              - dest: policyId
                src: id
            operationId: listAuthorizationServerPolicyRules
          - alias: createPolicyRule
            arguments:
              - dest: policyId
                src: id
            operationId: createAuthorizationServerPolicyRule
          - alias: getPolicyRule
            arguments:
              - dest: policyId
                src: id
            operationId: getAuthorizationServerPolicyRule
          - alias: deletePolicyRule
            arguments:
              - dest: policyId
                src: id
            operationId: deleteAuthorizationServerPolicyRule
          - alias: activate
            arguments:
              - dest: policyId
                src: id
            operationId: activateAuthorizationServerPolicy
          - alias: deactivate
            arguments:
              - dest: policyId
                src: id
            operationId: deactivateAuthorizationServerPolicy
        x-okta-tags:
          - AuthorizationServer
      AuthorizationServerPolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/AuthorizationServerPolicyRuleConditions'
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          priority:
            type: integer
          status:
            default: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          system:
            default: false
            type: boolean
          type:
            enum:
              - RESOURCE_ACCESS
            type: string
        type: object
        x-okta-crud:
          - alias: update
            arguments:
              - dest: ruleId
                src: id
              - dest: policyRule
                self: true
              - dest: policyId
                parentSrc: id
            operationId: updateAuthorizationServerPolicyRule
          - alias: delete
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: deleteAuthorizationServerPolicyRule
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: activateAuthorizationServerPolicyRule
          - alias: deactivate
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: deactivateAuthorizationServerPolicyRule
        x-okta-tags:
          - AuthorizationServerPolicy
      AuthorizationServerPolicyRuleActions:
        properties:
          token:
            $ref: '#/components/schemas/TokenAuthorizationServerPolicyRuleAction'
        type: object
        x-okta-tags:
          - AuthorizationServerPolicy
      AuthorizationServerPolicyRuleConditions:
        properties:
          clients:
            $ref: '#/components/schemas/ClientPolicyCondition'
          grantTypes:
            $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
          scopes:
            $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        type: object
        x-okta-tags:
          - AuthorizationServerPolicy
      AutoLoginApplication:
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          settings:
            $ref: '#/components/schemas/AutoLoginApplicationSettings'
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      AutoLoginApplicationSettings:
        properties:
          signOn:
            $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      AutoLoginApplicationSettingsSignOn:
        properties:
          loginUrl:
            type: string
          redirectUrl:
            type: string
        x-okta-tags:
          - Application
      BasicApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/BasicApplicationSettingsApplication'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      BasicApplicationSettingsApplication:
        properties:
          authURL:
            type: string
          url:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      BasicAuthApplication:
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            default: template_basic_auth
          settings:
            $ref: '#/components/schemas/BasicApplicationSettings'
        x-okta-defined-as:
          name: template_basic_auth
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      BeforeScheduledActionPolicyRuleCondition:
        properties:
          duration:
            $ref: '#/components/schemas/Duration'
          lifecycleAction:
            $ref: '#/components/schemas/ScheduledUserLifecycleAction'
        type: object
        x-okta-tags:
          - Policy
      BookmarkApplication:
        properties:
          name:
            default: bookmark
          settings:
            $ref: '#/components/schemas/BookmarkApplicationSettings'
        x-okta-defined-as:
          name: bookmark
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      BookmarkApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      BookmarkApplicationSettingsApplication:
        properties:
          requestIntegration:
            type: boolean
          url:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      Brand:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          agreeToCustomPrivacyPolicy:
            type: boolean
          customPrivacyPolicyUrl:
            type: string
          id:
            readOnly: true
            type: string
          removePoweredByOkta:
            type: boolean
        x-okta-crud:
          - alias: read
            arguments:
              - dest: brandId
                src: id
            operationId: getBrand
          - alias: update
            arguments:
              - dest: brandId
                src: id
              - dest: brand
                self: true
            operationId: updateBrand
        x-okta-tags:
          - Brand
      BrowserPluginApplication:
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
        x-openapi-v3-discriminator:
          mapping:
            template_swa: '#/definitions/SwaApplication'
            template_swa3field: '#/definitions/SwaThreeFieldApplication'
          propertyName: name
      CallUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/CallUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      CallUserFactorProfile:
        properties:
          phoneExtension:
            type: string
          phoneNumber:
            type: string
        x-okta-tags:
          - UserFactor
      CapabilitiesCreateObject:
        properties:
          lifecycleCreate:
            $ref: '#/components/schemas/LifecycleCreateSettingObject'
        type: object
        x-okta-tags:
          - Application
      CapabilitiesObject:
        properties:
          create:
            $ref: '#/components/schemas/CapabilitiesCreateObject'
          update:
            $ref: '#/components/schemas/CapabilitiesUpdateObject'
        type: object
        x-okta-tags:
          - Application
      CapabilitiesUpdateObject:
        properties:
          lifecycleDeactivate:
            $ref: '#/components/schemas/LifecycleDeactivateSettingObject'
          password:
            $ref: '#/components/schemas/PasswordSettingObject'
          profile:
            $ref: '#/components/schemas/ProfileSettingObject'
        type: object
        x-okta-tags:
          - Application
      CatalogApplication:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          category:
            type: string
          description:
            type: string
          displayName:
            type: string
          features:
            items:
              type: string
            type: array
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          signOnModes:
            items:
              type: string
            type: array
          status:
            $ref: '#/components/schemas/CatalogApplicationStatus'
          verificationStatus:
            type: string
          website:
            type: string
        x-okta-tags:
          - Role
      CatalogApplicationStatus:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
        x-okta-tags:
          - Role
      ChangeEnum:
        enum:
          - KEEP_EXISTING
          - CHANGE
        type: string
        x-okta-tags:
          - Application
      ChangePasswordRequest:
        properties:
          newPassword:
            $ref: '#/components/schemas/PasswordCredential'
          oldPassword:
            $ref: '#/components/schemas/PasswordCredential'
        type: object
        x-okta-tags:
          - User
      ChannelBinding:
        properties:
          required:
            $ref: '#/components/schemas/RequiredEnum'
          style:
            type: string
        type: object
        x-okta-tags:
          - Authenticator
      ClientPolicyCondition:
        properties:
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      ClientSecret:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          client_secret:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          secret_hash:
            type: string
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
        x-okta-tags:
          - Application
      ClientSecretMetadata:
        properties:
          client_secret:
            type: string
        x-okta-tags:
          - Application
      Compliance:
        properties:
          fips:
            $ref: '#/components/schemas/FipsEnum'
        type: object
        x-okta-tags:
          - Authenticator
      ContextPolicyRuleCondition:
        properties:
          expression:
            type: string
        type: object
        x-okta-tags:
          - Policy
      CreateSessionRequest:
        properties:
          sessionToken:
            type: string
        type: object
        x-okta-tags:
          - Session
      CreateUserRequest:
        properties:
          credentials:
            $ref: '#/components/schemas/UserCredentials'
          groupIds:
            items:
              type: string
            type: array
          profile:
            $ref: '#/components/schemas/UserProfile'
          type:
            $ref: '#/components/schemas/UserType'
        type: object
        x-okta-tags:
          - User
      Csr:
        properties:
          created:
            format: date-time
            readOnly: true
            type: string
          csr:
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          kty:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Application
      CsrMetadata:
        properties:
          subject:
            $ref: '#/components/schemas/CsrMetadataSubject'
          subjectAltNames:
            $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
        x-okta-tags:
          - Application
      CsrMetadataSubject:
        properties:
          commonName:
            type: string
          countryName:
            type: string
          localityName:
            type: string
          organizationName:
            type: string
          organizationalUnitName:
            type: string
          stateOrProvinceName:
            type: string
        x-okta-tags:
          - Application
      CsrMetadataSubjectAltNames:
        properties:
          dnsNames:
            items:
              type: string
            type: array
        x-okta-tags:
          - Application
      CustomHotpUserFactor:
        properties:
          factorProfileId:
            type: string
          profile:
            $ref: '#/components/schemas/CustomHotpUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      CustomHotpUserFactorProfile:
        properties:
          sharedSecret:
            type: string
        x-okta-tags:
          - UserFactor
      DNSRecord:
        properties:
          expiration:
            type: string
          fqdn:
            type: string
          recordType:
            $ref: '#/components/schemas/DNSRecordType'
          values:
            items:
              type: string
            type: array
        x-okta-tags:
          - Domain
      DNSRecordType:
        enum:
          - TXT
          - CNAME
        type: string
        x-okta-tags:
          - Domain
      DeviceAccessPolicyRuleCondition:
        properties:
          managed:
            type: boolean
          registered:
            type: boolean
        x-okta-parent: '#/definitions/DevicePolicyRuleCondition'
        x-okta-tags:
          - Policy
      DevicePolicyRuleCondition:
        properties:
          migrated:
            type: boolean
          platform:
            $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
          rooted:
            type: boolean
          trustLevel:
            enum:
              - ANY
              - TRUSTED
            type: string
        type: object
        x-okta-tags:
          - Policy
      DevicePolicyRuleConditionPlatform:
        properties:
          supportedMDMFrameworks:
            items:
              enum:
                - AFW
                - SAFE
                - NATIVE
              type: string
            type: array
          types:
            items:
              enum:
                - IOS
                - ANDROID
                - OSX
                - WINDOWS
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      Domain:
        properties:
          certificateSourceType:
            $ref: '#/components/schemas/DomainCertificateSourceType'
          dnsRecords:
            items:
              $ref: '#/components/schemas/DNSRecord'
            type: array
          domain:
            type: string
          id:
            readOnly: true
            type: string
          publicCertificate:
            $ref: '#/components/schemas/DomainCertificateMetadata'
          validationStatus:
            $ref: '#/components/schemas/DomainValidationStatus'
        type: object
        x-okta-tags:
          - Domain
      DomainCertificate:
        properties:
          certificate:
            type: string
          certificateChain:
            type: string
          privateKey:
            type: string
          type:
            $ref: '#/components/schemas/DomainCertificateType'
        x-okta-operations:
          - alias: createCertificate
            arguments:
              - dest: certificate
                self: true
            operationId: createCertificate
        x-okta-tags:
          - Domain
      DomainCertificateMetadata:
        properties:
          expiration:
            type: string
          fingerprint:
            type: string
          subject:
            type: string
        x-okta-tags:
          - Domain
      DomainCertificateSourceType:
        enum:
          - MANUAL
          - OKTA_MANAGED
        type: string
        x-okta-tags:
          - Domain
      DomainCertificateType:
        enum:
          - PEM
        type: string
        x-okta-tags:
          - Domain
      DomainListResponse:
        properties:
          domains:
            items:
              $ref: '#/components/schemas/Domain'
            type: array
        x-okta-tags:
          - Domain
      DomainValidationStatus:
        enum:
          - NOT_STARTED
          - IN_PROGRESS
          - VERIFIED
          - FAILED_TO_VERIFY
          - DOMAIN_TAKEN
          - COMPLETED
        type: string
        x-okta-tags:
          - Domain
      Duration:
        properties:
          number:
            type: integer
          unit:
            type: string
        type: object
        x-okta-tags:
          - Policy
      EmailTemplate:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          name:
            readOnly: true
            type: string
        x-okta-crud:
          - alias: read
            operationId: getEmailTemplate
        x-okta-operations:
          - alias: getEmailTemplate
            operationId: getEmailTemplate
          - alias: deleteEmailTemplateCustomizations
            operationId: deleteEmailTemplateCustomizations
          - alias: listEmailTemplateCustomizations
            operationId: listEmailTemplateCustomizations
          - alias: createEmailTemplateCustomization
            operationId: createEmailTemplateCustomization
          - alias: deleteEmailTemplateCustomization
            operationId: deleteEmailTemplateCustomization
          - alias: getEmailTemplateCustomization
            operationId: getEmailTemplateCustomization
          - alias: updateEmailTemplateCustomization
            operationId: updateEmailTemplateCustomization
          - alias: getEmailTemplateCustomizationPreview
            operationId: getEmailTemplateCustomizationPreview
          - alias: getEmailTemplateDefaultContent
            operationId: getEmailTemplateDefaultContent
          - alias: getEmailTemplateDefaultContentPreview
            operationId: getEmailTemplateDefaultContentPreview
          - alias: sendTestEmail
            operationId: sendTestEmail
        x-okta-tags:
          - Brands
      EmailTemplateContent:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          body:
            type: string
          fromAddress:
            type: string
          fromName:
            type: string
          subject:
            type: string
        x-okta-tags:
          - Brands
      EmailTemplateCustomization:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          body:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          isDefault:
            type: boolean
          language:
            description: unique under each email template
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          subject:
            type: string
        x-okta-tags:
          - Brands
      EmailTemplateCustomizationRequest:
        properties:
          body:
            type: string
          isDefault:
            type: boolean
          language:
            description: unique under each email template
            type: string
          subject:
            type: string
        x-okta-tags:
          - Brands
      EmailTemplateTestRequest:
        properties:
          customizationId:
            type: string
        x-okta-tags:
          - Brands
      EmailTemplateTouchPointVariant:
        enum:
          - OKTA_DEFAULT
          - FULL_THEME
        type: string
        x-okta-tags:
          - Brand
      EmailUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/EmailUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      EmailUserFactorProfile:
        properties:
          email:
            type: string
        x-okta-tags:
          - UserFactor
      EnabledStatus:
        enum:
          - ENABLED
          - DISABLED
        type: string
        x-okta-tags:
          - Common
      EndUserDashboardTouchPointVariant:
        enum:
          - OKTA_DEFAULT
          - WHITE_LOGO_BACKGROUND
          - FULL_THEME
          - LOGO_ON_FULL_WHITE_BACKGROUND
        type: string
        x-okta-tags:
          - Brand
      ErrorPageTouchPointVariant:
        enum:
          - OKTA_DEFAULT
          - BACKGROUND_SECONDARY_COLOR
          - BACKGROUND_IMAGE
        type: string
        x-okta-tags:
          - Brand
      EventHook:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          channel:
            $ref: '#/components/schemas/EventHookChannel'
          created:
            format: date-time
            readOnly: true
            type: string
          createdBy:
            type: string
          events:
            $ref: '#/components/schemas/EventSubscriptions'
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          verificationStatus:
            enum:
              - UNVERIFIED
              - VERIFIED
            type: string
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: eventHook
                self: true
            operationId: createEventHook
          - alias: read
            arguments: []
            operationId: getEventHook
          - alias: update
            arguments:
              - dest: eventHookId
                src: id
              - dest: eventHook
                self: true
            operationId: updateEventHook
          - alias: delete
            arguments:
              - dest: eventHookId
                src: id
            operationId: deleteEventHook
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: eventHookId
                src: id
            operationId: activateEventHook
          - alias: deactivate
            arguments:
              - dest: eventHookId
                src: id
            operationId: deactivateEventHook
          - alias: verify
            arguments:
              - dest: eventHookId
                src: id
            operationId: verifyEventHook
        x-okta-tags:
          - EventHook
      EventHookChannel:
        properties:
          config:
            $ref: '#/components/schemas/EventHookChannelConfig'
          type:
            enum:
              - HTTP
            readOnly: false
            type: string
          version:
            readOnly: false
            type: string
        type: object
        x-okta-tags:
          - EventHook
      EventHookChannelConfig:
        properties:
          authScheme:
            $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
          headers:
            items:
              $ref: '#/components/schemas/EventHookChannelConfigHeader'
            type: array
          uri:
            type: string
        type: object
        x-okta-tags:
          - EventHook
      EventHookChannelConfigAuthScheme:
        properties:
          key:
            type: string
          type:
            $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
          value:
            type: string
        type: object
        x-okta-tags:
          - EventHook
      EventHookChannelConfigAuthSchemeType:
        enum:
          - HEADER
        type: string
        x-okta-tags:
          - EventHook
      EventHookChannelConfigHeader:
        properties:
          key:
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - EventHook
      EventSubscriptions:
        discriminator:
          propertyName: type
        properties:
          items:
            items:
              type: string
            type: array
          type:
            enum:
              - EVENT_TYPE
              - FLOW_EVENT
            type: string
        type: object
        x-okta-tags:
          - EventHook
      FactorProvider:
        enum:
          - OKTA
          - RSA
          - FIDO
          - GOOGLE
          - SYMANTEC
          - DUO
          - YUBICO
          - CUSTOM
          - APPLE
        type: string
        x-okta-tags:
          - UserFactor
      FactorResultType:
        enum:
          - SUCCESS
          - CHALLENGE
          - WAITING
          - FAILED
          - REJECTED
          - TIMEOUT
          - TIME_WINDOW_EXCEEDED
          - PASSCODE_REPLAYED
          - ERROR
          - CANCELLED
        type: string
        x-okta-tags:
          - UserFactor
      FactorStatus:
        enum:
          - PENDING_ACTIVATION
          - ACTIVE
          - INACTIVE
          - NOT_SETUP
          - ENROLLED
          - DISABLED
          - EXPIRED
        type: string
        x-okta-tags:
          - UserFactor
      FactorType:
        enum:
          - call
          - email
          - hotp
          - push
          - question
          - signed_nonce
          - sms
          - token:hardware
          - token:hotp
          - token:software:totp
          - token
          - u2f
          - web
          - webauthn
        type: string
        x-okta-tags:
          - UserFactor
      Feature:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          description:
            type: string
          id:
            readOnly: true
            type: string
          name:
            type: string
          stage:
            $ref: '#/components/schemas/FeatureStage'
          status:
            $ref: '#/components/schemas/EnabledStatus'
          type:
            $ref: '#/components/schemas/FeatureType'
        type: object
        x-okta-crud:
          - alias: read
            arguments: []
            operationId: getFeature
        x-okta-operations:
          - alias: updateLifecycle
            arguments:
              - dest: featureId
                src: id
            operationId: updateFeatureLifecycle
          - alias: getDependents
            arguments:
              - dest: featureId
                src: id
            operationId: listFeatureDependents
          - alias: getDependencies
            arguments:
              - dest: featureId
                src: id
            operationId: listFeatureDependencies
        x-okta-tags:
          - Feature
      FeatureStage:
        properties:
          state:
            $ref: '#/components/schemas/FeatureStageState'
          value:
            $ref: '#/components/schemas/FeatureStageValue'
        type: object
        x-okta-tags:
          - Feature
      FeatureStageState:
        enum:
          - OPEN
          - CLOSED
        type: string
        x-okta-tags:
          - Feature
      FeatureStageValue:
        enum:
          - EA
          - BETA
        type: string
        x-okta-tags:
          - Feature
      FeatureType:
        enum:
          - self-service
        type: string
        x-okta-tags:
          - Feature
      FipsEnum:
        enum:
          - REQUIRED
          - OPTIONAL
        type: string
        x-okta-tags:
          - Authenticator
      ForgotPasswordResponse:
        properties:
          resetPasswordUrl:
            readOnly: true
            type: string
        x-okta-tags:
          - User
      GrantTypePolicyRuleCondition:
        properties:
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      Group:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastMembershipUpdated:
            format: date-time
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          objectClass:
            items:
              type: string
            readOnly: true
            type: array
          profile:
            $ref: '#/components/schemas/GroupProfile'
          type:
            $ref: '#/components/schemas/GroupType'
        type: object
        x-okta-crud:
          - alias: update
            arguments:
              - dest: groupId
                src: id
              - dest: group
                self: true
            operationId: updateGroup
          - alias: delete
            arguments:
              - dest: groupId
                src: id
            operationId: deleteGroup
        x-okta-operations:
          - alias: removeUser
            arguments:
              - dest: groupId
                src: id
            operationId: removeUserFromGroup
          - alias: listUsers
            arguments:
              - dest: groupId
                src: id
            operationId: listGroupUsers
          - alias: listApplications
            arguments:
              - dest: groupId
                src: id
            operationId: listAssignedApplicationsForGroup
          - alias: assignRole
            arguments:
              - dest: groupId
                src: id
            operationId: assignRoleToGroup
        x-okta-tags:
          - Group
      GroupCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        x-okta-tags:
          - Policy
      GroupPolicyRuleCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      GroupProfile:
        properties:
          description:
            type: string
          name:
            type: string
        type: object
        x-okta-extensible: true
        x-okta-tags:
          - Group
      GroupRule:
        properties:
          actions:
            $ref: '#/components/schemas/GroupRuleAction'
          conditions:
            $ref: '#/components/schemas/GroupRuleConditions'
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          status:
            $ref: '#/components/schemas/GroupRuleStatus'
          type:
            type: string
        type: object
        x-okta-crud:
          - alias: update
            arguments:
              - dest: ruleId
                src: id
              - dest: groupRule
                self: true
            operationId: updateGroupRule
          - alias: delete
            arguments:
              - dest: ruleId
                src: id
            operationId: deleteGroupRule
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: ruleId
                src: id
            operationId: activateGroupRule
          - alias: deactivate
            arguments:
              - dest: ruleId
                src: id
            operationId: deactivateGroupRule
        x-okta-tags:
          - GroupRule
      GroupRuleAction:
        properties:
          assignUserToGroups:
            $ref: '#/components/schemas/GroupRuleGroupAssignment'
        type: object
        x-okta-tags:
          - GroupRule
      GroupRuleConditions:
        properties:
          expression:
            $ref: '#/components/schemas/GroupRuleExpression'
          people:
            $ref: '#/components/schemas/GroupRulePeopleCondition'
        type: object
        x-okta-tags:
          - GroupRule
      GroupRuleExpression:
        properties:
          type:
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - GroupRule
      GroupRuleGroupAssignment:
        properties:
          groupIds:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - GroupRule
      GroupRuleGroupCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - GroupRule
      GroupRulePeopleCondition:
        properties:
          groups:
            $ref: '#/components/schemas/GroupRuleGroupCondition'
          users:
            $ref: '#/components/schemas/GroupRuleUserCondition'
        type: object
        x-okta-tags:
          - GroupRule
      GroupRuleStatus:
        enum:
          - ACTIVE
          - INACTIVE
          - INVALID
        type: string
        x-okta-tags:
          - GroupRule
      GroupRuleUserCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - GroupRule
      GroupSchema:
        properties:
          $schema:
            readOnly: true
            type: string
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            readOnly: true
            type: string
          definitions:
            $ref: '#/components/schemas/GroupSchemaDefinitions'
          description:
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            readOnly: true
            type: string
          name:
            readOnly: true
            type: string
          properties:
            $ref: '#/components/schemas/UserSchemaProperties'
          title:
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - GroupSchema
      GroupSchemaAttribute:
        properties:
          description:
            type: string
          enum:
            items:
              type: string
            type: array
          externalName:
            type: string
          externalNamespace:
            type: string
          items:
            $ref: '#/components/schemas/UserSchemaAttributeItems'
          master:
            $ref: '#/components/schemas/UserSchemaAttributeMaster'
          maxLength:
            type: integer
          minLength:
            type: integer
          mutability:
            type: string
          oneOf:
            items:
              $ref: '#/components/schemas/UserSchemaAttributeEnum'
            type: array
          permissions:
            items:
              $ref: '#/components/schemas/UserSchemaAttributePermission'
            type: array
          required:
            type: boolean
          scope:
            $ref: '#/components/schemas/UserSchemaAttributeScope'
          title:
            type: string
          type:
            $ref: '#/components/schemas/UserSchemaAttributeType'
          union:
            $ref: '#/components/schemas/UserSchemaAttributeUnion'
          unique:
            type: string
        type: object
        x-okta-tags:
          - GroupSchema
      GroupSchemaBase:
        properties:
          id:
            readOnly: true
            type: string
          properties:
            $ref: '#/components/schemas/GroupSchemaBaseProperties'
          required:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
        x-okta-tags:
          - GroupSchema
      GroupSchemaBaseProperties:
        properties:
          description:
            $ref: '#/components/schemas/GroupSchemaAttribute'
          name:
            $ref: '#/components/schemas/GroupSchemaAttribute'
        type: object
        x-okta-tags:
          - GroupSchema
      GroupSchemaCustom:
        properties:
          id:
            readOnly: true
            type: string
          properties:
            additionalProperties:
              $ref: '#/components/schemas/GroupSchemaAttribute'
            type: object
          required:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
        x-okta-tags:
          - GroupSchema
      GroupSchemaDefinitions:
        properties:
          base:
            $ref: '#/components/schemas/GroupSchemaBase'
          custom:
            $ref: '#/components/schemas/GroupSchemaCustom'
        type: object
        x-okta-tags:
          - GroupSchema
      GroupType:
        enum:
          - OKTA_GROUP
          - APP_GROUP
          - BUILT_IN
        type: string
        x-okta-tags:
          - Group
      HardwareUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/HardwareUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      HardwareUserFactorProfile:
        properties:
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      IdentityProvider:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          issuerMode:
            enum:
              - ORG_URL
              - CUSTOM_URL
              - DYNAMIC
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          policy:
            $ref: '#/components/schemas/IdentityProviderPolicy'
          protocol:
            $ref: '#/components/schemas/Protocol'
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          type:
            enum:
              - SAML2
              - GOOGLE
              - FACEBOOK
              - LINKEDIN
              - MICROSOFT
              - OIDC
              - OKTA
              - IWA
              - AgentlessDSSO
              - X509
            type: string
            x-okta-known-values:
              - SAML2
              - GOOGLE
              - FACEBOOK
              - LINKEDIN
              - MICROSOFT
              - OIDC
              - OKTA
              - IWA
              - AgentlessDSSO
              - X509
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: idpTrust
                self: true
            operationId: createIdentityProvider
          - alias: read
            arguments: []
            operationId: getIdentityProvider
          - alias: update
            arguments:
              - dest: idpId
                src: id
              - dest: idpTrust
                self: true
            operationId: updateIdentityProvider
          - alias: delete
            arguments:
              - dest: idpId
                src: id
            operationId: deleteIdentityProvider
        x-okta-operations:
          - alias: listSigningCsrs
            arguments:
              - dest: idpId
                src: id
            operationId: listCsrsForIdentityProvider
          - alias: generateCsr
            arguments:
              - dest: idpId
                src: id
            operationId: generateCsrForIdentityProvider
          - alias: deleteSigningCsr
            arguments:
              - dest: idpId
                src: id
            operationId: revokeCsrForIdentityProvider
          - alias: getSigningCsr
            arguments:
              - dest: idpId
                src: id
            operationId: getCsrForIdentityProvider
          - alias: listSigningKeys
            arguments:
              - dest: idpId
                src: id
            operationId: listIdentityProviderSigningKeys
          - alias: generateSigningKey
            arguments:
              - dest: idpId
                src: id
            operationId: generateIdentityProviderSigningKey
          - alias: getSigningKey
            arguments:
              - dest: idpId
                src: id
            operationId: getIdentityProviderSigningKey
          - alias: cloneKey
            arguments:
              - dest: idpId
                src: id
            operationId: cloneIdentityProviderKey
          - alias: activate
            arguments:
              - dest: idpId
                src: id
            operationId: activateIdentityProvider
          - alias: deactivate
            arguments:
              - dest: idpId
                src: id
            operationId: deactivateIdentityProvider
          - alias: listUsers
            arguments:
              - dest: idpId
                src: id
            operationId: listIdentityProviderApplicationUsers
          - alias: unlinkUser
            arguments:
              - dest: idpId
                src: id
            operationId: unlinkUserFromIdentityProvider
          - alias: getUser
            arguments:
              - dest: idpId
                src: id
            operationId: getIdentityProviderApplicationUser
          - alias: linkUser
            arguments:
              - dest: idpId
                src: id
            operationId: linkUserToIdentityProvider
          - alias: listSocialAuthTokens
            arguments:
              - dest: idpId
                src: id
            operationId: listSocialAuthTokens
        x-okta-tags:
          - IdentityProvider
      IdentityProviderApplicationUser:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            type: string
          externalId:
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            type: string
          profile:
            additionalProperties:
              type: object
            type: object
        type: object
        x-okta-tags:
          - IdentityProvider
      IdentityProviderCredentials:
        properties:
          client:
            $ref: '#/components/schemas/IdentityProviderCredentialsClient'
          signing:
            $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
          trust:
            $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
        type: object
        x-okta-tags:
          - IdentityProvider
      IdentityProviderCredentialsClient:
        properties:
          client_id:
            type: string
          client_secret:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      IdentityProviderCredentialsSigning:
        properties:
          kid:
            type: string
          privateKey:
            type: string
          teamId:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      IdentityProviderCredentialsTrust:
        properties:
          audience:
            type: string
          issuer:
            type: string
          kid:
            type: string
          revocation:
            enum:
              - CRL
              - DELTA_CRL
              - OCSP
            type: string
          revocationCacheLifetime:
            type: integer
        type: object
        x-okta-tags:
          - IdentityProvider
      IdentityProviderPolicy:
        properties:
          accountLink:
            $ref: '#/components/schemas/PolicyAccountLink'
          maxClockSkew:
            type: integer
          provisioning:
            $ref: '#/components/schemas/Provisioning'
          subject:
            $ref: '#/components/schemas/PolicySubject'
        type: object
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      IdentityProviderPolicyRuleCondition:
        properties:
          idpIds:
            items:
              type: string
            type: array
          provider:
            enum:
              - ANY
              - OKTA
              - SPECIFIC_IDP
            type: string
        type: object
        x-okta-tags:
          - Policy
      IdpPolicyRuleAction:
        properties:
          providers:
            items:
              $ref: '#/components/schemas/IdpPolicyRuleActionProvider'
            type: array
        type: object
        x-okta-tags:
          - Policy
      IdpPolicyRuleActionProvider:
        properties:
          id:
            readOnly: true
            type: string
          type:
            type: string
        type: object
        x-okta-tags:
          - Policy
      IframeEmbedScopeAllowedApps:
        enum:
          - OKTA_ENDUSER
        type: string
        x-okta-tags:
          - Role
      ImageUploadResponse:
        properties:
          url:
            readOnly: true
            type: string
        x-okta-tags:
          - Brand
      InactivityPolicyRuleCondition:
        properties:
          number:
            type: integer
          unit:
            type: string
        type: object
        x-okta-tags:
          - Policy
      InlineHook:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          channel:
            $ref: '#/components/schemas/InlineHookChannel'
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          status:
            $ref: '#/components/schemas/InlineHookStatus'
          type:
            $ref: '#/components/schemas/InlineHookType'
          version:
            type: string
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: inlineHook
                self: true
            operationId: createInlineHook
          - alias: read
            arguments: []
            operationId: getInlineHook
          - alias: update
            arguments:
              - dest: inlineHookId
                src: id
              - dest: inlineHook
                self: true
            operationId: updateInlineHook
          - alias: delete
            arguments:
              - dest: inlineHookId
                src: id
            operationId: deleteInlineHook
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: inlineHookId
                src: id
            operationId: activateInlineHook
          - alias: deactivate
            arguments:
              - dest: inlineHookId
                src: id
            operationId: deactivateInlineHook
          - alias: execute
            arguments:
              - dest: inlineHookId
                src: id
            operationId: executeInlineHook
        x-okta-tags:
          - InlineHook
      InlineHookChannel:
        properties:
          config:
            $ref: '#/components/schemas/InlineHookChannelConfig'
          type:
            enum:
              - HTTP
            readOnly: false
            type: string
          version:
            readOnly: false
            type: string
        type: object
        x-okta-tags:
          - InlineHook
      InlineHookChannelConfig:
        properties:
          authScheme:
            $ref: '#/components/schemas/InlineHookChannelConfigAuthScheme'
          headers:
            items:
              $ref: '#/components/schemas/InlineHookChannelConfigHeaders'
            type: array
          method:
            type: string
          uri:
            type: string
        type: object
        x-okta-tags:
          - InlineHook
      InlineHookChannelConfigAuthScheme:
        properties:
          key:
            type: string
          type:
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - InlineHook
      InlineHookChannelConfigHeaders:
        properties:
          key:
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - InlineHook
      InlineHookPayload:
        type: object
        x-okta-extensible: true
        x-okta-tags:
          - InlineHook
      InlineHookResponse:
        properties:
          commands:
            items:
              $ref: '#/components/schemas/InlineHookResponseCommands'
            type: array
        type: object
        x-okta-tags:
          - InlineHook
      InlineHookResponseCommandValue:
        properties:
          op:
            type: string
          path:
            type: string
          value:
            type: string
        x-okta-tags:
          - InlineHook
      InlineHookResponseCommands:
        properties:
          type:
            type: string
          value:
            items:
              $ref: '#/components/schemas/InlineHookResponseCommandValue'
            type: array
        x-okta-tags:
          - InlineHook
      InlineHookStatus:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
        x-okta-tags:
          - InlineHook
      InlineHookType:
        enum:
          - com.okta.oauth2.tokens.transform
          - com.okta.import.transform
          - com.okta.saml.tokens.transform
          - com.okta.user.pre-registration
          - com.okta.user.credential.password.import
        type: string
        x-okta-tags:
          - InlineHook
      IonField:
        properties:
          form:
            $ref: '#/components/schemas/IonForm'
          label:
            type: string
          mutable:
            type: boolean
          name:
            type: string
          required:
            type: boolean
          secret:
            type: boolean
          type:
            type: string
          value:
            additionalProperties:
              type: object
            type: object
          visible:
            type: boolean
        type: object
        x-okta-tags:
          - Ion
      IonForm:
        properties:
          accepts:
            type: string
          href:
            type: string
          method:
            type: string
          name:
            type: string
          produces:
            type: string
          refresh:
            type: integer
          rel:
            items:
              type: string
            type: array
          relatesTo:
            items:
              type: string
            type: array
          value:
            items:
              $ref: '#/components/schemas/IonField'
            readOnly: true
            type: array
        type: object
        x-okta-tags:
          - Ion
      JsonWebKey:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          alg:
            readOnly: false
            type: string
          created:
            format: date-time
            readOnly: false
            type: string
          e:
            readOnly: false
            type: string
          expiresAt:
            format: date-time
            readOnly: false
            type: string
          key_ops:
            items:
              type: string
            readOnly: false
            type: array
          kid:
            readOnly: false
            type: string
          kty:
            readOnly: false
            type: string
          lastUpdated:
            format: date-time
            readOnly: false
            type: string
          'n':
            readOnly: false
            type: string
          status:
            readOnly: false
            type: string
          use:
            readOnly: false
            type: string
          x5c:
            items:
              type: string
            readOnly: false
            type: array
          x5t:
            readOnly: false
            type: string
          x5t#S256:
            readOnly: false
            type: string
          x5u:
            readOnly: false
            type: string
        type: object
        x-okta-tags:
          - Application
      JwkUse:
        properties:
          use:
            enum:
              - sig
            type: string
        x-okta-tags:
          - Application
      KnowledgeConstraint:
        x-okta-parent: '#/definitions/AccessPolicyConstraint'
        x-okta-tags:
          - Policy
      LifecycleCreateSettingObject:
        properties:
          status:
            $ref: '#/components/schemas/EnabledStatus'
        type: object
        x-okta-tags:
          - Application
      LifecycleDeactivateSettingObject:
        properties:
          status:
            $ref: '#/components/schemas/EnabledStatus'
        type: object
        x-okta-tags:
          - Application
      LifecycleExpirationPolicyRuleCondition:
        properties:
          lifecycleStatus:
            type: string
          number:
            type: integer
          unit:
            type: string
        type: object
        x-okta-tags:
          - Policy
      LinkedObject:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          associated:
            $ref: '#/components/schemas/LinkedObjectDetails'
          primary:
            $ref: '#/components/schemas/LinkedObjectDetails'
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: linkedObjectDefinition
                self: true
            operationId: addLinkedObjectDefinition
          - alias: read
            arguments: []
            operationId: getLinkedObjectDefinition
          - alias: delete
            arguments:
              - dest: linkedObjectName
                self: true
            operationId: deleteLinkedObjectDefinition
        x-okta-tags:
          - LinkedObject
      LinkedObjectDetails:
        properties:
          description:
            type: string
          name:
            type: string
          title:
            type: string
          type:
            $ref: '#/components/schemas/LinkedObjectDetailsType'
        type: object
        x-okta-tags:
          - LinkedObject
      LinkedObjectDetailsType:
        enum:
          - USER
        type: string
        x-okta-tags:
          - LinkedObject
      LogActor:
        properties:
          alternateId:
            readOnly: true
            type: string
          detail:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          displayName:
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogAuthenticationContext:
        properties:
          authenticationProvider:
            $ref: '#/components/schemas/LogAuthenticationProvider'
          authenticationStep:
            readOnly: true
            type: integer
          credentialProvider:
            $ref: '#/components/schemas/LogCredentialProvider'
          credentialType:
            $ref: '#/components/schemas/LogCredentialType'
          externalSessionId:
            readOnly: true
            type: string
          interface:
            readOnly: true
            type: string
          issuer:
            $ref: '#/components/schemas/LogIssuer'
        type: object
        x-okta-tags:
          - Log
      LogAuthenticationProvider:
        enum:
          - OKTA_AUTHENTICATION_PROVIDER
          - ACTIVE_DIRECTORY
          - LDAP
          - FEDERATION
          - SOCIAL
          - FACTOR_PROVIDER
        type: string
        x-okta-tags:
          - Log
      LogClient:
        properties:
          device:
            readOnly: true
            type: string
          geographicalContext:
            $ref: '#/components/schemas/LogGeographicalContext'
          id:
            readOnly: true
            type: string
          ipAddress:
            readOnly: true
            type: string
          userAgent:
            $ref: '#/components/schemas/LogUserAgent'
          zone:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogCredentialProvider:
        enum:
          - OKTA_AUTHENTICATION_PROVIDER
          - OKTA_CREDENTIAL_PROVIDER
          - RSA
          - SYMANTEC
          - GOOGLE
          - DUO
          - YUBIKEY
          - APPLE
        type: string
        x-okta-tags:
          - Log
      LogCredentialType:
        enum:
          - OTP
          - SMS
          - PASSWORD
          - ASSERTION
          - IWA
          - EMAIL
          - OAUTH2
          - JWT
        type: string
        x-okta-tags:
          - Log
      LogDebugContext:
        properties:
          debugData:
            additionalProperties:
              type: object
            readOnly: true
            type: object
        type: object
        x-okta-tags:
          - Log
      LogEvent:
        properties:
          actor:
            $ref: '#/components/schemas/LogActor'
          authenticationContext:
            $ref: '#/components/schemas/LogAuthenticationContext'
          client:
            $ref: '#/components/schemas/LogClient'
          debugContext:
            $ref: '#/components/schemas/LogDebugContext'
          displayMessage:
            readOnly: true
            type: string
          eventType:
            readOnly: true
            type: string
          legacyEventType:
            readOnly: true
            type: string
          outcome:
            $ref: '#/components/schemas/LogOutcome'
          published:
            format: date-time
            readOnly: true
            type: string
          request:
            $ref: '#/components/schemas/LogRequest'
          securityContext:
            $ref: '#/components/schemas/LogSecurityContext'
          severity:
            $ref: '#/components/schemas/LogSeverity'
          target:
            items:
              $ref: '#/components/schemas/LogTarget'
            readOnly: true
            type: array
          transaction:
            $ref: '#/components/schemas/LogTransaction'
          uuid:
            readOnly: true
            type: string
          version:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogGeographicalContext:
        properties:
          city:
            readOnly: true
            type: string
          country:
            readOnly: true
            type: string
          geolocation:
            $ref: '#/components/schemas/LogGeolocation'
          postalCode:
            readOnly: true
            type: string
          state:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogGeolocation:
        properties:
          lat:
            format: double
            readOnly: true
            type: number
          lon:
            format: double
            readOnly: true
            type: number
        type: object
        x-okta-tags:
          - Log
      LogIpAddress:
        properties:
          geographicalContext:
            $ref: '#/components/schemas/LogGeographicalContext'
          ip:
            readOnly: true
            type: string
          source:
            readOnly: true
            type: string
          version:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogIssuer:
        properties:
          id:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogOutcome:
        properties:
          reason:
            readOnly: true
            type: string
          result:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogRequest:
        properties:
          ipChain:
            items:
              $ref: '#/components/schemas/LogIpAddress'
            readOnly: true
            type: array
        type: object
        x-okta-tags:
          - Log
      LogSecurityContext:
        properties:
          asNumber:
            readOnly: true
            type: integer
          asOrg:
            readOnly: true
            type: string
          domain:
            readOnly: true
            type: string
          isProxy:
            readOnly: true
            type: boolean
          isp:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogSeverity:
        enum:
          - DEBUG
          - INFO
          - WARN
          - ERROR
        type: string
        x-okta-tags:
          - Log
      LogTarget:
        properties:
          alternateId:
            readOnly: true
            type: string
          detailEntry:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          displayName:
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogTransaction:
        properties:
          detail:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          id:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      LogUserAgent:
        properties:
          browser:
            readOnly: true
            type: string
          os:
            readOnly: true
            type: string
          rawUserAgent:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Log
      MDMEnrollmentPolicyRuleCondition:
        properties:
          blockNonSafeAndroid:
            type: boolean
          enrollment:
            enum:
              - OMM
              - ANY_OR_NONE
            type: string
        type: object
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicy:
        allOf:
          - $ref: '#/components/schemas/Policy'
          - properties:
              conditions:
                $ref: '#/components/schemas/PolicyRuleConditions'
              settings:
                $ref: '#/components/schemas/MultifactorEnrollmentPolicySettings'
            type: object
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicyAuthenticatorSettings:
        properties:
          constraints:
            minimum: 0
            properties:
              aaguidGroups:
                items:
                  type: string
                  uniqueItems: true
                type: array
            type: object
            x-okta-lifecycle:
              features:
                - WEBAUTHN_MDS_CATALOG_BASED_AAGUID_ALLOWLIST
          enroll:
            properties:
              self:
                $ref: >-
                  #/components/schemas/MultifactorEnrollmentPolicyAuthenticatorStatus
            type: object
          key:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicyAuthenticatorType'
        type: object
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicyAuthenticatorStatus:
        enum:
          - NOT_ALLOWED
          - OPTIONAL
          - REQUIRED
        type: string
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicyAuthenticatorType:
        enum:
          - custom_app
          - custom_otp
          - duo
          - external_idp
          - google_otp
          - okta_email
          - okta_password
          - okta_verify
          - onprem_mfa
          - phone_number
          - rsa_token
          - security_question
          - symantec_vip
          - webauthn
          - yubikey_token
        type: string
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicySettings:
        properties:
          authenticators:
            items:
              $ref: >-
                #/components/schemas/MultifactorEnrollmentPolicyAuthenticatorSettings
            type: array
          type:
            $ref: '#/components/schemas/MultifactorEnrollmentPolicySettingsType'
        type: object
        x-okta-tags:
          - Policy
      MultifactorEnrollmentPolicySettingsType:
        enum:
          - AUTHENTICATORS
        type: string
        x-okta-tags:
          - Policy
      NetworkZone:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          asns:
            items:
              type: string
            type: array
          created:
            format: date-time
            readOnly: true
            type: string
          gateways:
            items:
              $ref: '#/components/schemas/NetworkZoneAddress'
            type: array
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          locations:
            items:
              $ref: '#/components/schemas/NetworkZoneLocation'
            type: array
          name:
            type: string
          proxies:
            items:
              $ref: '#/components/schemas/NetworkZoneAddress'
            type: array
          proxyType:
            type: string
          status:
            $ref: '#/components/schemas/NetworkZoneStatus'
          system:
            type: boolean
          type:
            $ref: '#/components/schemas/NetworkZoneType'
          usage:
            $ref: '#/components/schemas/NetworkZoneUsage'
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: zoneId
                src: id
            operationId: getNetworkZone
          - alias: update
            arguments:
              - dest: zoneId
                src: id
              - dest: zone
                self: true
            operationId: updateNetworkZone
          - alias: delete
            arguments:
              - dest: zoneId
                src: id
            operationId: deleteNetworkZone
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: zoneId
                src: id
            operationId: activateNetworkZone
          - alias: deactivate
            arguments:
              - dest: zoneId
                src: id
            operationId: deactivateNetworkZone
        x-okta-tags:
          - NetworkZone
      NetworkZoneAddress:
        properties:
          type:
            $ref: '#/components/schemas/NetworkZoneAddressType'
          value:
            type: string
        type: object
        x-okta-tags:
          - NetworkZone
      NetworkZoneAddressType:
        enum:
          - CIDR
          - RANGE
        type: string
        x-okta-tags:
          - NetworkZone
      NetworkZoneLocation:
        properties:
          country:
            type: string
          region:
            type: string
        type: object
        x-okta-tags:
          - NetworkZone
      NetworkZoneStatus:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
        x-okta-tags:
          - NetworkZone
      NetworkZoneType:
        enum:
          - IP
          - DYNAMIC
        type: string
        x-okta-tags:
          - NetworkZone
      NetworkZoneUsage:
        enum:
          - POLICY
          - BLOCKLIST
        type: string
        x-okta-tags:
          - NetworkZone
      NotificationType:
        enum:
          - CONNECTOR_AGENT
          - USER_LOCKED_OUT
          - APP_IMPORT
          - LDAP_AGENT
          - AD_AGENT
          - OKTA_ANNOUNCEMENT
          - OKTA_ISSUE
          - OKTA_UPDATE
          - IWA_AGENT
          - USER_DEPROVISION
          - REPORT_SUSPICIOUS_ACTIVITY
          - RATELIMIT_NOTIFICATION
        type: string
        x-okta-tags:
          - Subscription
      OAuth2Actor:
        properties:
          id:
            readOnly: true
            type: string
          type:
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuth2Claim:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          alwaysIncludeInToken:
            type: boolean
          claimType:
            enum:
              - IDENTITY
              - RESOURCE
            type: string
          conditions:
            $ref: '#/components/schemas/OAuth2ClaimConditions'
          group_filter_type:
            enum:
              - STARTS_WITH
              - EQUALS
              - CONTAINS
              - REGEX
            type: string
          id:
            readOnly: true
            type: string
          name:
            type: string
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          system:
            type: boolean
          value:
            type: string
          valueType:
            enum:
              - EXPRESSION
              - GROUPS
              - SYSTEM
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuth2ClaimConditions:
        properties:
          scopes:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Application
      OAuth2Client:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          client_id:
            readOnly: true
            type: string
          client_name:
            readOnly: true
            type: string
          client_uri:
            readOnly: true
            type: string
          logo_uri:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuth2RefreshToken:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          clientId:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          createdBy:
            $ref: '#/components/schemas/OAuth2Actor'
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          issuer:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          scopes:
            items:
              type: string
            type: array
          status:
            enum:
              - ACTIVE
              - REVOKED
            type: string
          userId:
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuth2Scope:
        properties:
          consent:
            enum:
              - REQUIRED
              - IMPLICIT
              - ADMIN
            type: string
          default:
            type: boolean
          description:
            type: string
          displayName:
            type: string
          id:
            readOnly: true
            type: string
          metadataPublish:
            enum:
              - ALL_CLIENTS
              - NO_CLIENTS
            type: string
          name:
            type: string
          system:
            type: boolean
        type: object
        x-okta-tags:
          - Application
      OAuth2ScopeConsentGrant:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          clientId:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          createdBy:
            $ref: '#/components/schemas/OAuth2Actor'
          id:
            readOnly: true
            type: string
          issuer:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          scopeId:
            type: string
          source:
            $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
          status:
            $ref: '#/components/schemas/OAuth2ScopeConsentGrantStatus'
          userId:
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuth2ScopeConsentGrantSource:
        enum:
          - END_USER
          - ADMIN
        type: string
        x-okta-tags:
          - Application
      OAuth2ScopeConsentGrantStatus:
        enum:
          - ACTIVE
          - REVOKED
        type: string
        x-okta-tags:
          - Application
      OAuth2ScopesMediationPolicyRuleCondition:
        properties:
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Application
      OAuth2Token:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          clientId:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          issuer:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          scopes:
            items:
              type: string
            type: array
          status:
            enum:
              - ACTIVE
              - REVOKED
            type: string
          userId:
            type: string
        type: object
        x-okta-tags:
          - Application
      OAuthApplicationCredentials:
        properties:
          oauthClient:
            $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
        x-okta-parent: '#/definitions/ApplicationCredentials'
        x-okta-tags:
          - Application
      OAuthAuthorizationPolicy:
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      OAuthEndpointAuthenticationMethod:
        enum:
          - none
          - client_secret_post
          - client_secret_basic
          - client_secret_jwt
          - private_key_jwt
        type: string
        x-okta-tags:
          - Application
      OAuthGrantType:
        enum:
          - authorization_code
          - implicit
          - password
          - refresh_token
          - client_credentials
          - saml2_bearer
          - device_code
          - token_exchange
          - interaction_code
        type: string
        x-okta-tags:
          - Application
      OAuthResponseType:
        enum:
          - code
          - token
          - id_token
        type: string
        x-okta-tags:
          - Application
      OktaSignOnPolicy:
        properties:
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyConditions'
        type: object
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      OktaSignOnPolicyConditions:
        properties:
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        x-okta-parent: '#/definitions/PolicyRuleConditions'
        x-okta-tags:
          - Policy
      OktaSignOnPolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleConditions'
          name:
            type: string
        x-okta-parent: '#/definitions/PolicyRule'
        x-okta-tags:
          - Policy
      OktaSignOnPolicyRuleActions:
        properties:
          signon:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
        x-okta-parent: '#/definitions/PolicyRuleActions'
        x-okta-tags:
          - Policy
      OktaSignOnPolicyRuleConditions:
        properties:
          authContext:
            $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        x-okta-parent: '#/definitions/PolicyRuleConditions'
        x-okta-tags:
          - Policy
      OktaSignOnPolicyRuleSignonActions:
        properties:
          access:
            enum:
              - ALLOW
              - DENY
            type: string
          factorLifetime:
            type: integer
          factorPromptMode:
            enum:
              - ALWAYS
              - DEVICE
              - SESSION
            type: string
          rememberDeviceByDefault:
            default: false
            type: boolean
          requireFactor:
            default: false
            type: boolean
          session:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions'
        type: object
        x-okta-tags:
          - Policy
      OktaSignOnPolicyRuleSignonSessionActions:
        properties:
          maxSessionIdleMinutes:
            default: 120
            type: integer
          maxSessionLifetimeMinutes:
            default: 0
            type: integer
          usePersistentCookie:
            default: false
            type: boolean
        type: object
        x-okta-tags:
          - Policy
      OpenIdConnectApplication:
        properties:
          credentials:
            $ref: '#/components/schemas/OAuthApplicationCredentials'
          name:
            default: oidc_client
          settings:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
        x-okta-defined-as:
          name: oidc_client
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      OpenIdConnectApplicationConsentMethod:
        enum:
          - REQUIRED
          - TRUSTED
        type: string
        x-okta-tags:
          - Application
      OpenIdConnectApplicationIdpInitiatedLogin:
        properties:
          default_scope:
            items:
              type: string
            type: array
          mode:
            type: string
        type: object
        x-okta-tags:
          - Application
      OpenIdConnectApplicationIssuerMode:
        enum:
          - CUSTOM_URL
          - ORG_URL
          - DYNAMIC
        type: string
        x-okta-tags:
          - Application
      OpenIdConnectApplicationSettings:
        properties:
          oauthClient:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      OpenIdConnectApplicationSettingsClient:
        properties:
          application_type:
            $ref: '#/components/schemas/OpenIdConnectApplicationType'
          client_uri:
            type: string
          consent_method:
            $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
          grant_types:
            items:
              $ref: '#/components/schemas/OAuthGrantType'
            type: array
          idp_initiated_login:
            $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
          initiate_login_uri:
            type: string
          issuer_mode:
            $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
          jwks:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
          logo_uri:
            type: string
          policy_uri:
            type: string
          post_logout_redirect_uris:
            items:
              type: string
            type: array
          redirect_uris:
            items:
              type: string
            type: array
          refresh_token:
            $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
          response_types:
            items:
              $ref: '#/components/schemas/OAuthResponseType'
            type: array
          tos_uri:
            type: string
          wildcard_redirect:
            type: string
        x-okta-tags:
          - Application
      OpenIdConnectApplicationSettingsClientKeys:
        properties:
          keys:
            items:
              $ref: '#/components/schemas/JsonWebKey'
            type: array
        x-okta-tags:
          - Application
      OpenIdConnectApplicationSettingsRefreshToken:
        properties:
          leeway:
            type: integer
          rotation_type:
            $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
        type: object
        x-okta-tags:
          - Application
      OpenIdConnectApplicationType:
        enum:
          - web
          - native
          - browser
          - service
        type: string
        x-okta-tags:
          - Application
      OpenIdConnectRefreshTokenRotationType:
        enum:
          - rotate
          - static
        type: string
        x-okta-tags:
          - Application
      Org2OrgApplication:
        properties:
          name:
            default: okta_org2org
          settings:
            $ref: '#/components/schemas/Org2OrgApplicationSettings'
        x-okta-defined-as:
          name: okta_org2org
        x-okta-parent: '#/definitions/SamlApplication'
        x-okta-tags:
          - Application
      Org2OrgApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/Org2OrgApplicationSettingsApp'
        x-okta-parent: '#/definitions/SamlApplicationSettings'
        x-okta-tags:
          - Application
      Org2OrgApplicationSettingsApp:
        properties:
          acsUrl:
            type: string
          audRestriction:
            type: string
          baseUrl:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      OrgContactType:
        enum:
          - BILLING
          - TECHNICAL
        type: string
        x-okta-tags:
          - Org
      OrgContactTypeObj:
        properties:
          _links:
            additionalProperties:
              type: object
          contactType:
            $ref: '#/components/schemas/OrgContactType'
        type: object
        x-okta-tags:
          - Org
      OrgContactUser:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          userId:
            type: string
        type: object
        x-okta-operations:
          - alias: updateContactUser
            arguments:
              - dest: userId
                src: userId
            operationId: updateOrgContactUser
        x-okta-tags:
          - Org
      OrgOktaCommunicationSetting:
        properties:
          _links:
            additionalProperties:
              type: object
          optOutEmailUsers:
            readOnly: true
            type: boolean
        type: object
        x-okta-operations:
          - alias: optInUsersToOktaCommunicationEmails
            operationId: optInUsersToOktaCommunicationEmails
          - alias: optOutUsersFromOktaCommunicationEmails
            operationId: optOutUsersFromOktaCommunicationEmails
        x-okta-tags:
          - Org
      OrgOktaSupportSetting:
        enum:
          - DISABLED
          - ENABLED
        type: string
        x-okta-tags:
          - Org
      OrgOktaSupportSettingsObj:
        properties:
          _links:
            additionalProperties:
              type: object
          expiration:
            format: date-time
            readOnly: true
            type: string
          support:
            $ref: '#/components/schemas/OrgOktaSupportSetting'
        type: object
        x-okta-operations:
          - alias: extendOktaSupport
            operationId: extendOktaSupport
          - alias: grantOktaSupport
            operationId: grantOktaSupport
          - alias: revokeOktaSupport
            operationId: revokeOktaSupport
        x-okta-tags:
          - Org
      OrgPreferences:
        properties:
          _links:
            additionalProperties:
              type: object
          showEndUserFooter:
            readOnly: true
            type: boolean
        type: object
        x-okta-operations:
          - alias: hideEndUserFooter
            operationId: hideOktaUIFooter
          - alias: showEndUserFooter
            operationId: showOktaUIFooter
        x-okta-tags:
          - Org
      OrgSetting:
        properties:
          _links:
            additionalProperties:
              type: object
          address1:
            type: string
          address2:
            type: string
          city:
            type: string
          companyName:
            type: string
          country:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          endUserSupportHelpURL:
            type: string
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          phoneNumber:
            type: string
          postalCode:
            type: string
          state:
            type: string
          status:
            readOnly: true
            type: string
          subdomain:
            readOnly: true
            type: string
          supportPhoneNumber:
            type: string
          website:
            type: string
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: orgSetting
                self: true
            operationId: getOrgSettings
          - alias: update
            arguments:
              - dest: orgSetting
                self: true
            operationId: updateOrgSetting
        x-okta-operations:
          - alias: partialUpdate
            arguments:
              - dest: orgSetting
                self: true
            operationId: partialUpdateOrgSetting
          - alias: getContactTypes
            operationId: getOrgContactTypes
          - alias: getOrgContactUser
            operationId: getOrgContactUser
          - alias: getSupportSettings
            operationId: getOrgOktaSupportSettings
          - alias: communicationSettings
            operationId: getOktaCommunicationSettings
          - alias: orgPreferences
            operationId: getOrgPreferences
          - alias: showFooter
            arguments:
              - dest: orgSetting
                self: true
            operationId: showOktaUIFooter
          - alias: hideFooter
            arguments:
              - dest: orgSetting
                self: true
            operationId: hideOktaUIFooter
          - alias: updateOrgLogo
            operationId: updateOrgLogo
        x-okta-tags:
          - Org
      PasswordCredential:
        properties:
          hash:
            $ref: '#/components/schemas/PasswordCredentialHash'
          hook:
            $ref: '#/components/schemas/PasswordCredentialHook'
          value:
            format: password
            type: string
        type: object
        x-okta-tags:
          - User
      PasswordCredentialHash:
        properties:
          algorithm:
            $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
          salt:
            type: string
          saltOrder:
            type: string
          value:
            type: string
          workFactor:
            type: integer
        type: object
        x-okta-tags:
          - User
      PasswordCredentialHashAlgorithm:
        enum:
          - BCRYPT
          - SHA-512
          - SHA-256
          - SHA-1
          - MD5
        type: string
        x-okta-tags:
          - User
      PasswordCredentialHook:
        properties:
          type:
            type: string
        type: object
        x-okta-tags:
          - User
      PasswordDictionary:
        properties:
          common:
            $ref: '#/components/schemas/PasswordDictionaryCommon'
        type: object
        x-okta-tags:
          - Policy
      PasswordDictionaryCommon:
        properties:
          exclude:
            default: false
            type: boolean
        type: object
        x-okta-tags:
          - Policy
      PasswordExpirationPolicyRuleCondition:
        properties:
          number:
            type: integer
          unit:
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicy:
        properties:
          conditions:
            $ref: '#/components/schemas/PasswordPolicyConditions'
          settings:
            $ref: '#/components/schemas/PasswordPolicySettings'
        type: object
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      PasswordPolicyAuthenticationProviderCondition:
        properties:
          include:
            items:
              type: string
            type: array
          provider:
            enum:
              - ACTIVE_DIRECTORY
              - ANY
              - LDAP
              - OKTA
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyConditions:
        properties:
          authProvider:
            $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        x-okta-parent: '#/definitions/PolicyRuleConditions'
        x-okta-tags:
          - Policy
      PasswordPolicyDelegationSettings:
        properties:
          options:
            $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyDelegationSettingsOptions:
        properties:
          skipUnlock:
            type: boolean
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyPasswordSettings:
        properties:
          age:
            $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
          complexity:
            $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
          lockout:
            $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyPasswordSettingsAge:
        properties:
          expireWarnDays:
            default: 0
            type: integer
          historyCount:
            default: 0
            type: integer
          maxAgeDays:
            default: 0
            type: integer
          minAgeMinutes:
            default: 0
            type: integer
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyPasswordSettingsComplexity:
        properties:
          dictionary:
            $ref: '#/components/schemas/PasswordDictionary'
          excludeAttributes:
            default: 1
            items:
              type: string
            type: array
          excludeUsername:
            default: true
            type: boolean
          minLength:
            default: 8
            type: integer
          minLowerCase:
            default: 1
            type: integer
          minNumber:
            default: 1
            type: integer
          minSymbol:
            default: 1
            type: integer
          minUpperCase:
            default: 1
            type: integer
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyPasswordSettingsLockout:
        properties:
          autoUnlockMinutes:
            type: integer
          maxAttempts:
            type: integer
          showLockoutFailures:
            type: boolean
          userLockoutNotificationChannels:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryEmail:
        properties:
          properties:
            $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
          status:
            enum:
              - ACTIVE
              - INACTIVE
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryEmailProperties:
        properties:
          recoveryToken:
            $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryEmailRecoveryToken:
        properties:
          tokenLifetimeMinutes:
            default: 10080
            type: integer
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryFactorSettings:
        properties:
          status:
            default: INACTIVE
            enum:
              - ACTIVE
              - INACTIVE
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryFactors:
        properties:
          okta_call:
            $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
          okta_email:
            $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
          okta_sms:
            $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
          recovery_question:
            $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryQuestion:
        properties:
          properties:
            $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
          status:
            enum:
              - ACTIVE
              - INACTIVE
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryQuestionComplexity:
        properties:
          minLength:
            readOnly: true
            type: integer
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoveryQuestionProperties:
        properties:
          complexity:
            $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRecoverySettings:
        properties:
          factors:
            $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/PasswordPolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/PasswordPolicyRuleConditions'
          name:
            type: string
        type: object
        x-okta-parent: '#/definitions/PolicyRule'
        x-okta-tags:
          - Policy
      PasswordPolicyRuleAction:
        properties:
          access:
            enum:
              - ALLOW
              - DENY
            readOnly: false
            type: string
        type: object
        x-okta-tags:
          - Policy
      PasswordPolicyRuleActions:
        properties:
          passwordChange:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServicePasswordReset:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServiceUnlock:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
        x-okta-parent: '#/definitions/PolicyRuleActions'
        x-okta-tags:
          - Policy
      PasswordPolicyRuleConditions:
        properties:
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
        x-okta-parent: '#/definitions/PolicyRuleConditions'
        x-okta-tags:
          - Policy
      PasswordPolicySettings:
        properties:
          delegation:
            $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
          password:
            $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
          recovery:
            $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
        type: object
        x-okta-tags:
          - Policy
      PasswordSettingObject:
        properties:
          change:
            $ref: '#/components/schemas/ChangeEnum'
          seed:
            $ref: '#/components/schemas/SeedEnum'
          status:
            $ref: '#/components/schemas/EnabledStatus'
        type: object
        x-okta-tags:
          - Application
      PlatformConditionEvaluatorPlatform:
        properties:
          os:
            $ref: >-
              #/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem
          type:
            enum:
              - DESKTOP
              - MOBILE
              - OTHER
              - ANY
            type: string
        type: object
        x-okta-tags:
          - Policy
      PlatformConditionEvaluatorPlatformOperatingSystem:
        properties:
          expression:
            type: string
          type:
            enum:
              - ANDROID
              - IOS
              - WINDOWS
              - OSX
              - OTHER
              - ANY
            type: string
          version:
            $ref: >-
              #/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion
        type: object
        x-okta-tags:
          - Policy
      PlatformConditionEvaluatorPlatformOperatingSystemVersion:
        properties:
          matchType:
            enum:
              - EXPRESSION
              - SEMVER
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - Policy
      PlatformPolicyRuleCondition:
        properties:
          exclude:
            items:
              $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
            type: array
          include:
            items:
              $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
            type: array
        type: object
        x-okta-tags:
          - Policy
      Policy:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
          created:
            format: date-time
            readOnly: true
            type: string
          description:
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          priority:
            type: integer
          status:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          system:
            type: boolean
          type:
            $ref: '#/components/schemas/PolicyType'
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: policyId
                src: id
            operationId: getPolicy
          - alias: update
            arguments:
              - dest: policyId
                src: id
              - dest: policy
                self: true
            operationId: updatePolicy
          - alias: delete
            arguments:
              - dest: policyId
                src: id
            operationId: deletePolicy
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: policyId
                src: id
            operationId: activatePolicy
          - alias: deactivate
            arguments:
              - dest: policyId
                src: id
            operationId: deactivatePolicy
          - alias: listPolicyRules
            arguments:
              - dest: policyId
                src: id
            operationId: listPolicyRules
          - alias: createRule
            arguments:
              - dest: policyId
                src: id
            operationId: createPolicyRule
          - alias: getPolicyRule
            arguments:
              - dest: policyId
                src: id
            operationId: getPolicyRule
        x-okta-tags:
          - Policy
        x-openapi-v3-discriminator:
          mapping:
            ACCESS_POLICY: '#/definitions/AccessPolicy'
            IDP_DISCOVERY: '#/definitions/IdentityProviderPolicy'
            MFA_ENROLL: '#/definitions/MultifactorEnrollmentPolicy'
            OAUTH_AUTHORIZATION_POLICY: '#/definitions/OAuthAuthorizationPolicy'
            OKTA_SIGN_ON: '#/definitions/OktaSignOnPolicy'
            PASSWORD: '#/definitions/PasswordPolicy'
            PROFILE_ENROLLMENT: '#/definitions/ProfileEnrollmentPolicy'
          propertyName: type
      PolicyAccountLink:
        properties:
          action:
            enum:
              - AUTO
              - DISABLED
            type: string
          filter:
            $ref: '#/components/schemas/PolicyAccountLinkFilter'
        type: object
        x-okta-tags:
          - Policy
      PolicyAccountLinkFilter:
        properties:
          groups:
            $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
        type: object
        x-okta-tags:
          - Policy
      PolicyAccountLinkFilterGroups:
        properties:
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      PolicyNetworkCondition:
        properties:
          connection:
            enum:
              - ANYWHERE
              - ZONE
            type: string
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        type: object
        x-okta-tags:
          - Policy
      PolicyPeopleCondition:
        properties:
          groups:
            $ref: '#/components/schemas/GroupCondition'
          users:
            $ref: '#/components/schemas/UserCondition'
        type: object
        x-okta-tags:
          - Policy
      PolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/PolicyRuleActions'
          conditions:
            $ref: '#/components/schemas/PolicyRuleConditions'
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          priority:
            type: integer
          status:
            default: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          system:
            default: false
            type: boolean
          type:
            enum:
              - SIGN_ON
              - PASSWORD
            type: string
        type: object
        x-okta-crud:
          - alias: update
            arguments:
              - dest: ruleId
                src: id
              - dest: policyRule
                self: true
              - dest: policyId
                parentSrc: id
            operationId: updatePolicyRule
          - alias: delete
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: deletePolicyRule
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: activatePolicyRule
          - alias: deactivate
            arguments:
              - dest: ruleId
                src: id
              - dest: policyId
                parentSrc: policyId
            operationId: deactivatePolicyRule
        x-okta-tags:
          - Policy
        x-openapi-v3-discriminator:
          mapping:
            ACCESS_POLICY: '#/definitions/AccessPolicyRule'
            PASSWORD: '#/definitions/PasswordPolicyRule'
            PROFILE_ENROLLMENT: '#/definitions/ProfileEnrollmentPolicyRule'
            SIGN_ON: '#/definitions/OktaSignOnPolicyRule'
          propertyName: type
      PolicyRuleActions:
        properties:
          enroll:
            $ref: '#/components/schemas/PolicyRuleActionsEnroll'
          idp:
            $ref: '#/components/schemas/IdpPolicyRuleAction'
          passwordChange:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServicePasswordReset:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          selfServiceUnlock:
            $ref: '#/components/schemas/PasswordPolicyRuleAction'
          signon:
            $ref: '#/components/schemas/OktaSignOnPolicyRuleSignonActions'
        type: object
        x-okta-tags:
          - Policy
      PolicyRuleActionsEnroll:
        properties:
          self:
            $ref: '#/components/schemas/PolicyRuleActionsEnrollSelf'
        type: object
        x-okta-tags:
          - Policy
      PolicyRuleActionsEnrollSelf:
        enum:
          - CHALLENGE
          - LOGIN
          - NEVER
        type: string
        x-okta-tags:
          - Policy
      PolicyRuleAuthContextCondition:
        properties:
          authType:
            enum:
              - ANY
              - RADIUS
            type: string
        type: object
        x-okta-tags:
          - Policy
      PolicyRuleConditions:
        properties:
          app:
            $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
          apps:
            $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
          authContext:
            $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
          authProvider:
            $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
          beforeScheduledAction:
            $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
          clients:
            $ref: '#/components/schemas/ClientPolicyCondition'
          context:
            $ref: '#/components/schemas/ContextPolicyRuleCondition'
          device:
            $ref: '#/components/schemas/DevicePolicyRuleCondition'
          grantTypes:
            $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
          groups:
            $ref: '#/components/schemas/GroupPolicyRuleCondition'
          identityProvider:
            $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
          mdmEnrollment:
            $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
          network:
            $ref: '#/components/schemas/PolicyNetworkCondition'
          people:
            $ref: '#/components/schemas/PolicyPeopleCondition'
          platform:
            $ref: '#/components/schemas/PlatformPolicyRuleCondition'
          risk:
            $ref: '#/components/schemas/RiskPolicyRuleCondition'
          riskScore:
            $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
          scopes:
            $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
          userIdentifier:
            $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
          userStatus:
            $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
          users:
            $ref: '#/components/schemas/UserPolicyRuleCondition'
        type: object
        x-okta-tags:
          - Policy
      PolicySubject:
        properties:
          filter:
            type: string
          format:
            items:
              type: string
            type: array
          matchAttribute:
            type: string
          matchType:
            $ref: '#/components/schemas/PolicySubjectMatchType'
          userNameTemplate:
            $ref: '#/components/schemas/PolicyUserNameTemplate'
        type: object
        x-okta-tags:
          - Policy
      PolicySubjectMatchType:
        enum:
          - USERNAME
          - EMAIL
          - USERNAME_OR_EMAIL
          - CUSTOM_ATTRIBUTE
        type: string
        x-okta-tags:
          - Policy
      PolicyType:
        enum:
          - OAUTH_AUTHORIZATION_POLICY
          - OKTA_SIGN_ON
          - PASSWORD
          - IDP_DISCOVERY
          - PROFILE_ENROLLMENT
          - ACCESS_POLICY
          - MFA_ENROLL
        type: string
        x-okta-tags:
          - Policy
      PolicyUserNameTemplate:
        properties:
          template:
            type: string
        type: object
        x-okta-tags:
          - Policy
      PossessionConstraint:
        properties:
          deviceBound:
            type: string
          hardwareProtection:
            type: string
          phishingResistant:
            type: string
          userPresence:
            type: string
        x-okta-parent: '#/definitions/AccessPolicyConstraint'
        x-okta-tags:
          - Policy
      PreRegistrationInlineHook:
        properties:
          inlineHookId:
            type: string
        type: object
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicy:
        x-okta-parent: '#/definitions/Policy'
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicyRule:
        properties:
          actions:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleActions'
          name:
            type: string
        type: object
        x-okta-parent: '#/definitions/PolicyRule'
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicyRuleAction:
        properties:
          access:
            type: string
          activationRequirements:
            $ref: >-
              #/components/schemas/ProfileEnrollmentPolicyRuleActivationRequirement
          preRegistrationInlineHooks:
            items:
              $ref: '#/components/schemas/PreRegistrationInlineHook'
            type: array
          profileAttributes:
            items:
              $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleProfileAttribute'
            type: array
          targetGroupIds:
            items:
              type: string
            type: array
          uiSchemaId:
            type: string
          unknownUserAction:
            type: string
        type: object
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicyRuleActions:
        properties:
          profileEnrollment:
            $ref: '#/components/schemas/ProfileEnrollmentPolicyRuleAction'
        type: object
        x-okta-parent: '#/definitions/PolicyRuleActions'
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicyRuleActivationRequirement:
        properties:
          emailVerification:
            type: boolean
        type: object
        x-okta-tags:
          - Policy
      ProfileEnrollmentPolicyRuleProfileAttribute:
        properties:
          label:
            type: string
          name:
            type: string
          required:
            type: boolean
        type: object
        x-okta-tags:
          - Policy
      ProfileMapping:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          id:
            readOnly: true
            type: string
          properties:
            additionalProperties:
              $ref: '#/components/schemas/ProfileMappingProperty'
            readOnly: true
            type: object
          source:
            $ref: '#/components/schemas/ProfileMappingSource'
          target:
            $ref: '#/components/schemas/ProfileMappingSource'
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: mappingId
                src: id
            operationId: getProfileMapping
          - alias: update
            arguments:
              - dest: mappingId
                src: id
            operationId: updateProfileMapping
        x-okta-tags:
          - ProfileMapping
      ProfileMappingProperty:
        properties:
          expression:
            type: string
          pushStatus:
            $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
        type: object
        x-okta-tags:
          - ProfileMapping
      ProfileMappingPropertyPushStatus:
        enum:
          - PUSH
          - DONT_PUSH
        type: object
        x-okta-tags:
          - ProfileMapping
      ProfileMappingSource:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          id:
            readOnly: true
            type: string
          name:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - ProfileMapping
      ProfileSettingObject:
        properties:
          status:
            $ref: '#/components/schemas/EnabledStatus'
        type: object
        x-okta-tags:
          - Application
      Protocol:
        properties:
          algorithms:
            $ref: '#/components/schemas/ProtocolAlgorithms'
          credentials:
            $ref: '#/components/schemas/IdentityProviderCredentials'
          endpoints:
            $ref: '#/components/schemas/ProtocolEndpoints'
          issuer:
            $ref: '#/components/schemas/ProtocolEndpoint'
          relayState:
            $ref: '#/components/schemas/ProtocolRelayState'
          scopes:
            items:
              type: string
            type: array
          settings:
            $ref: '#/components/schemas/ProtocolSettings'
          type:
            enum:
              - SAML2
              - OIDC
              - OAUTH2
              - MTLS
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolAlgorithmType:
        properties:
          signature:
            $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolAlgorithmTypeSignature:
        properties:
          algorithm:
            type: string
          scope:
            enum:
              - RESPONSE
              - TOKEN
              - ANY
              - REQUEST
              - NONE
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolAlgorithms:
        properties:
          request:
            $ref: '#/components/schemas/ProtocolAlgorithmType'
          response:
            $ref: '#/components/schemas/ProtocolAlgorithmType'
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolEndpoint:
        properties:
          binding:
            enum:
              - HTTP-POST
              - HTTP-REDIRECT
            type: string
          destination:
            type: string
          type:
            enum:
              - INSTANCE
              - ORG
            type: string
          url:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolEndpoints:
        properties:
          acs:
            $ref: '#/components/schemas/ProtocolEndpoint'
          authorization:
            $ref: '#/components/schemas/ProtocolEndpoint'
          jwks:
            $ref: '#/components/schemas/ProtocolEndpoint'
          metadata:
            $ref: '#/components/schemas/ProtocolEndpoint'
          slo:
            $ref: '#/components/schemas/ProtocolEndpoint'
          sso:
            $ref: '#/components/schemas/ProtocolEndpoint'
          token:
            $ref: '#/components/schemas/ProtocolEndpoint'
          userInfo:
            $ref: '#/components/schemas/ProtocolEndpoint'
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolRelayState:
        properties:
          format:
            $ref: '#/components/schemas/ProtocolRelayStateFormat'
        type: object
        x-okta-tags:
          - IdentityProvider
      ProtocolRelayStateFormat:
        enum:
          - OPAQUE
          - FROM_URL
        type: string
        x-okta-tags:
          - IdentityProvider
      ProtocolSettings:
        properties:
          nameFormat:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      Provisioning:
        properties:
          action:
            enum:
              - AUTO
              - CALLOUT
              - DISABLED
            type: string
          conditions:
            $ref: '#/components/schemas/ProvisioningConditions'
          groups:
            $ref: '#/components/schemas/ProvisioningGroups'
          profileMaster:
            type: boolean
        type: object
        x-okta-tags:
          - IdentityProvider
      ProvisioningConditions:
        properties:
          deprovisioned:
            $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
          suspended:
            $ref: '#/components/schemas/ProvisioningSuspendedCondition'
        type: object
        x-okta-tags:
          - IdentityProvider
      ProvisioningConnection:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          authScheme:
            $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
          status:
            $ref: '#/components/schemas/ProvisioningConnectionStatus'
        type: object
        x-okta-operations:
          - alias: getDefaultProvisioningConnectionForApplication
            operationId: getDefaultProvisioningConnectionForApplication
          - alias: activateDefaultProvisioningConnectionForApplication
            operationId: activateDefaultProvisioningConnectionForApplication
          - alias: deactivateDefaultProvisioningConnectionForApplication
            operationId: deactivateDefaultProvisioningConnectionForApplication
        x-okta-tags:
          - Application
      ProvisioningConnectionAuthScheme:
        enum:
          - TOKEN
          - UNKNOWN
        type: string
        x-okta-tags:
          - Application
      ProvisioningConnectionProfile:
        properties:
          authScheme:
            $ref: '#/components/schemas/ProvisioningConnectionAuthScheme'
          token:
            type: string
        type: object
        x-okta-operations:
          - alias: setDefaultProvisioningConnectionForApplication
            operationId: setDefaultProvisioningConnectionForApplication
        x-okta-tags:
          - Application
      ProvisioningConnectionRequest:
        properties:
          profile:
            $ref: '#/components/schemas/ProvisioningConnectionProfile'
        type: object
        x-okta-tags:
          - Application
      ProvisioningConnectionStatus:
        enum:
          - DISABLED
          - ENABLED
          - UNKNOWN
        type: string
        x-okta-tags:
          - Application
      ProvisioningDeprovisionedCondition:
        properties:
          action:
            enum:
              - NONE
              - REACTIVATE
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      ProvisioningGroups:
        properties:
          action:
            enum:
              - NONE
              - APPEND
              - SYNC
              - ASSIGN
            type: string
          assignments:
            items:
              type: string
            type: array
          filter:
            items:
              type: string
            type: array
          sourceAttributeName:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      ProvisioningSuspendedCondition:
        properties:
          action:
            enum:
              - NONE
              - UNSUSPEND
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      PushUserFactor:
        properties:
          expiresAt:
            format: date-time
            type: string
          factorResult:
            $ref: '#/components/schemas/FactorResultType'
          profile:
            $ref: '#/components/schemas/PushUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      PushUserFactorProfile:
        properties:
          credentialId:
            type: string
          deviceToken:
            type: string
          deviceType:
            type: string
          name:
            type: string
          platform:
            type: string
          version:
            type: string
        x-okta-tags:
          - UserFactor
      RecoveryQuestionCredential:
        properties:
          answer:
            type: string
          question:
            type: string
        type: object
        x-okta-tags:
          - User
      RequiredEnum:
        enum:
          - ALWAYS
          - HIGH_RISK_ONLY
          - NEVER
        type: string
        x-okta-tags:
          - Authenticator
      ResetPasswordToken:
        properties:
          resetPasswordUrl:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - User
      ResponseLinks:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
        type: object
        x-okta-tags:
          - User
      RiskPolicyRuleCondition:
        properties:
          behaviors:
            items:
              type: string
            type: array
            uniqueItems: true
        type: object
        x-okta-tags:
          - Policy
      RiskScorePolicyRuleCondition:
        properties:
          level:
            type: string
        type: object
        x-okta-tags:
          - Policy
      Role:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          assignmentType:
            $ref: '#/components/schemas/RoleAssignmentType'
          created:
            format: date-time
            readOnly: true
            type: string
          description:
            type: string
          id:
            readOnly: true
            type: string
          label:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          status:
            $ref: '#/components/schemas/RoleStatus'
          type:
            $ref: '#/components/schemas/RoleType'
        type: object
        x-okta-operations:
          - alias: addAdminGroupTarget
            arguments:
              - dest: roleId
                src: id
              - dest: groupId
                parentSrc: id
            operationId: addGroupTargetToGroupAdministratorRoleForGroup
          - alias: addAppInstanceTargetToAdminRole
            arguments:
              - dest: roleId
                src: id
              - dest: groupId
                parentSrc: id
            operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
          - alias: addAppTargetToAdminRole
            arguments:
              - dest: roleId
                src: id
              - dest: groupId
                parentSrc: id
            operationId: addApplicationTargetToAdminRoleGivenToGroup
          - alias: addAllAppsAsTargetToRole
            arguments:
              - dest: roleId
                src: id
              - dest: userId
                parentSrc: id
            operationId: addAllAppsAsTargetToRole
          - alias: addAppTargetToAppAdminRoleForUser
            arguments:
              - dest: roleId
                src: id
              - dest: userId
                parentSrc: id
            operationId: addApplicationTargetToAppAdminRoleForUser
          - alias: addAppTargetToAdminRoleForUser
            arguments:
              - dest: roleId
                src: id
              - dest: userId
                parentSrc: id
            operationId: addApplicationTargetToAdminRoleForUser
        x-okta-tags:
          - User
      RoleAssignmentType:
        enum:
          - GROUP
          - USER
        type: string
        x-okta-tags:
          - Role
      RoleStatus:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
        x-okta-tags:
          - User
      RoleType:
        enum:
          - SUPER_ADMIN
          - ORG_ADMIN
          - APP_ADMIN
          - USER_ADMIN
          - HELP_DESK_ADMIN
          - READ_ONLY_ADMIN
          - MOBILE_ADMIN
          - API_ACCESS_MANAGEMENT_ADMIN
          - REPORT_ADMIN
          - GROUP_MEMBERSHIP_ADMIN
          - CUSTOM
        type: string
        x-okta-tags:
          - Role
      SamlApplication:
        properties:
          settings:
            $ref: '#/components/schemas/SamlApplicationSettings'
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
        x-openapi-v3-discriminator:
          mapping:
            okta_org2org: '#/definitions/Org2OrgApplication'
          propertyName: name
      SamlApplicationSettings:
        properties:
          signOn:
            $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      SamlApplicationSettingsSignOn:
        properties:
          acsEndpoints:
            items:
              $ref: '#/components/schemas/AcsEndpoint'
            type: array
          allowMultipleAcsEndpoints:
            type: boolean
          assertionSigned:
            type: boolean
          attributeStatements:
            items:
              $ref: '#/components/schemas/SamlAttributeStatement'
            type: array
          audience:
            type: string
          audienceOverride:
            type: string
          authnContextClassRef:
            type: string
          defaultRelayState:
            type: string
          destination:
            type: string
          destinationOverride:
            type: string
          digestAlgorithm:
            type: string
          honorForceAuthn:
            type: boolean
          idpIssuer:
            type: string
          inlineHooks:
            items:
              $ref: '#/components/schemas/SignOnInlineHook'
            type: array
          recipient:
            type: string
          recipientOverride:
            type: string
          requestCompressed:
            type: boolean
          responseSigned:
            type: boolean
          samlSignedRequestEnabled:
            type: boolean
          signatureAlgorithm:
            type: string
          slo:
            $ref: '#/components/schemas/SingleLogout'
          spCertificate:
            $ref: '#/components/schemas/SpCertificate'
          spIssuer:
            type: string
          ssoAcsUrl:
            type: string
          ssoAcsUrlOverride:
            type: string
          subjectNameIdFormat:
            type: string
          subjectNameIdTemplate:
            type: string
        x-okta-tags:
          - Application
      SamlAttributeStatement:
        properties:
          filterType:
            type: string
          filterValue:
            type: string
          name:
            type: string
          namespace:
            type: string
          type:
            type: string
          values:
            items:
              type: string
            type: array
        x-okta-tags:
          - Application
      ScheduledUserLifecycleAction:
        properties:
          status:
            enum:
              - ACTIVE
              - INACTIVE
              - PENDING
              - DELETED
              - EXPIRED_PASSWORD
              - ACTIVATING
              - SUSPENDED
              - DELETING
            type: string
        type: object
        x-okta-tags:
          - Policy
      SchemeApplicationCredentials:
        properties:
          password:
            $ref: '#/components/schemas/PasswordCredential'
          revealPassword:
            type: boolean
          scheme:
            $ref: '#/components/schemas/ApplicationCredentialsScheme'
          signing:
            $ref: '#/components/schemas/ApplicationCredentialsSigning'
          userName:
            type: string
        x-okta-parent: '#/definitions/ApplicationCredentials'
        x-okta-tags:
          - Application
      Scope:
        properties:
          allowedOktaApps:
            items:
              $ref: '#/components/schemas/IframeEmbedScopeAllowedApps'
            type: array
          stringValue:
            type: string
          type:
            $ref: '#/components/schemas/ScopeType'
        type: object
        x-okta-tags:
          - Role
      ScopeType:
        enum:
          - CORS
          - REDIRECT
          - IFRAME_EMBED
        type: string
        x-okta-tags:
          - Role
      SecurePasswordStoreApplication:
        properties:
          credentials:
            $ref: '#/components/schemas/SchemeApplicationCredentials'
          name:
            default: template_sps
          settings:
            $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
        x-okta-defined-as:
          name: template_sps
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      SecurePasswordStoreApplicationSettings:
        properties:
          app:
            $ref: >-
              #/components/schemas/SecurePasswordStoreApplicationSettingsApplication
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      SecurePasswordStoreApplicationSettingsApplication:
        properties:
          optionalField1:
            type: string
          optionalField1Value:
            type: string
          optionalField2:
            type: string
          optionalField2Value:
            type: string
          optionalField3:
            type: string
          optionalField3Value:
            type: string
          passwordField:
            type: string
          url:
            type: string
          usernameField:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      SecurityQuestion:
        properties:
          answer:
            type: string
          question:
            type: string
          questionText:
            type: string
        x-okta-tags:
          - UserFactor
      SecurityQuestionUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/SecurityQuestionUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      SecurityQuestionUserFactorProfile:
        properties:
          answer:
            type: string
          question:
            type: string
          questionText:
            type: string
        x-okta-tags:
          - UserFactor
      SeedEnum:
        enum:
          - OKTA
          - RANDOM
        type: string
        x-okta-tags:
          - Application
      Session:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          amr:
            items:
              $ref: '#/components/schemas/SessionAuthenticationMethod'
            readOnly: true
            type: array
          createdAt:
            format: date-time
            readOnly: true
            type: string
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          idp:
            $ref: '#/components/schemas/SessionIdentityProvider'
          lastFactorVerification:
            format: date-time
            readOnly: true
            type: string
          lastPasswordVerification:
            format: date-time
            readOnly: true
            type: string
          login:
            readOnly: true
            type: string
          status:
            $ref: '#/components/schemas/SessionStatus'
          userId:
            readOnly: true
            type: string
        type: object
        x-okta-crud:
          - alias: read
            arguments:
              - dest: sessionId
                src: id
            operationId: getSession
          - alias: delete
            arguments:
              - dest: sessionId
                src: id
            operationId: endSession
        x-okta-operations:
          - alias: refresh
            arguments:
              - dest: sessionId
                src: id
            operationId: refreshSession
        x-okta-tags:
          - Session
      SessionAuthenticationMethod:
        enum:
          - pwd
          - swk
          - hwk
          - otp
          - sms
          - tel
          - geo
          - fpt
          - kba
          - mfa
          - mca
          - sc
        type: string
        x-okta-tags:
          - Session
      SessionIdentityProvider:
        properties:
          id:
            readOnly: true
            type: string
          type:
            $ref: '#/components/schemas/SessionIdentityProviderType'
        type: object
        x-okta-tags:
          - Session
      SessionIdentityProviderType:
        enum:
          - ACTIVE_DIRECTORY
          - LDAP
          - OKTA
          - FEDERATION
          - SOCIAL
        type: string
        x-okta-tags:
          - Session
      SessionStatus:
        enum:
          - ACTIVE
          - MFA_ENROLL
          - MFA_REQUIRED
        type: string
        x-okta-tags:
          - Session
      SignInPageTouchPointVariant:
        enum:
          - OKTA_DEFAULT
          - BACKGROUND_SECONDARY_COLOR
          - BACKGROUND_IMAGE
        type: string
        x-okta-tags:
          - Brand
      SignOnInlineHook:
        properties:
          id:
            type: string
        x-okta-tags:
          - Application
      SingleLogout:
        properties:
          enabled:
            type: boolean
          issuer:
            type: string
          logoutUrl:
            type: string
        x-okta-tags:
          - Application
      SmsTemplate:
        properties:
          created:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          name:
            type: string
          template:
            type: string
          translations:
            $ref: '#/components/schemas/SmsTemplateTranslations'
          type:
            $ref: '#/components/schemas/SmsTemplateType'
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: smsTemplate
                self: true
            operationId: createSmsTemplate
          - alias: read
            arguments: []
            operationId: getSmsTemplate
          - alias: update
            arguments:
              - dest: templateId
                src: id
              - dest: smsTemplate
                self: true
            operationId: updateSmsTemplate
          - alias: delete
            arguments:
              - dest: templateId
                src: id
            operationId: deleteSmsTemplate
        x-okta-operations:
          - alias: partialUpdate
            arguments:
              - dest: templateId
                src: id
              - dest: smsTemplate
                self: true
            operationId: partialUpdateSmsTemplate
        x-okta-tags:
          - Template
      SmsTemplateTranslations:
        type: object
        x-okta-extensible: true
        x-okta-tags:
          - Template
      SmsTemplateType:
        enum:
          - SMS_VERIFY_CODE
        type: string
        x-okta-tags:
          - Template
      SmsUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/SmsUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      SmsUserFactorProfile:
        properties:
          phoneNumber:
            type: string
        x-okta-tags:
          - UserFactor
      SocialAuthToken:
        properties:
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          scopes:
            items:
              type: string
            type: array
          token:
            type: string
          tokenAuthScheme:
            type: string
          tokenType:
            type: string
        type: object
        x-okta-tags:
          - IdentityProvider
      SpCertificate:
        properties:
          x5c:
            items:
              type: string
            readOnly: false
            type: array
        x-okta-tags:
          - Application
      Subscription:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          channels:
            items:
              type: string
            type: array
          notificationType:
            $ref: '#/components/schemas/NotificationType'
          status:
            $ref: '#/components/schemas/SubscriptionStatus'
        type: object
        x-okta-operations:
          - alias: listRoleSubscriptions
            operationId: listRoleSubscriptions
          - alias: getRoleSubscriptionByNotificationType
            operationId: getRoleSubscriptionByNotificationType
          - alias: getUserSubscriptionByNotificationType
            operationId: getUserSubscriptionByNotificationType
          - alias: listUserSubscriptions
            operationId: listUserSubscriptions
          - alias: subscribeUserSubscriptionByNotificationType
            operationId: subscribeUserSubscriptionByNotificationType
          - alias: unsubscribeRoleSubscriptionByNotificationType
            operationId: unsubscribeRoleSubscriptionByNotificationType
          - alias: subscribeRoleSubscriptionByNotificationType
            operationId: subscribeRoleSubscriptionByNotificationType
          - alias: unsubscribeUserSubscriptionByNotificationType
            operationId: unsubscribeUserSubscriptionByNotificationType
        x-okta-tags:
          - Role
      SubscriptionStatus:
        enum:
          - subscribed
          - unsubscribed
        type: string
        x-okta-tags:
          - Role
      SwaApplication:
        properties:
          name:
            default: template_swa
          settings:
            $ref: '#/components/schemas/SwaApplicationSettings'
        x-okta-defined-as:
          name: template_swa
        x-okta-parent: '#/definitions/BrowserPluginApplication'
        x-okta-tags:
          - Application
      SwaApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/SwaApplicationSettingsApplication'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      SwaApplicationSettingsApplication:
        properties:
          buttonField:
            type: string
          checkbox:
            type: string
          loginUrlRegex:
            type: string
          passwordField:
            type: string
          redirectUrl:
            type: string
          url:
            type: string
          usernameField:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      SwaThreeFieldApplication:
        properties:
          name:
            default: template_swa3field
          settings:
            $ref: '#/components/schemas/SwaThreeFieldApplicationSettings'
        x-okta-defined-as:
          name: template_swa3field
        x-okta-parent: '#/definitions/BrowserPluginApplication'
        x-okta-tags:
          - Application
      SwaThreeFieldApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/SwaThreeFieldApplicationSettingsApplication'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      SwaThreeFieldApplicationSettingsApplication:
        properties:
          buttonSelector:
            type: string
          extraFieldSelector:
            type: string
          extraFieldValue:
            type: string
          loginUrlRegex:
            type: string
          passwordSelector:
            type: string
          targetURL:
            type: string
          userNameSelector:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
      TempPassword:
        properties:
          tempPassword:
            readOnly: true
            type: string
        x-okta-tags:
          - User
      Theme:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          backgroundImage:
            readOnly: true
            type: string
          emailTemplateTouchPointVariant:
            $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
          endUserDashboardTouchPointVariant:
            $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
          errorPageTouchPointVariant:
            $ref: '#/components/schemas/ErrorPageTouchPointVariant'
          primaryColorContrastHex:
            type: string
          primaryColorHex:
            type: string
          secondaryColorContrastHex:
            type: string
          secondaryColorHex:
            type: string
          signInPageTouchPointVariant:
            $ref: '#/components/schemas/SignInPageTouchPointVariant'
        x-okta-crud:
          - alias: read
            operationId: getBrandTheme
          - alias: update
            operationId: updateBrandTheme
        x-okta-operations:
          - alias: uploadBrandThemeLogo
            operationId: uploadBrandThemeLogo
          - alias: deleteBrandThemeLogo
            operationId: deleteBrandThemeLogo
          - alias: updateBrandThemeFavicon
            operationId: uploadBrandThemeFavicon
          - alias: deleteBrandThemeFavicon
            operationId: deleteBrandThemeFavicon
          - alias: updateBrandThemeBackgroundImage
            operationId: uploadBrandThemeBackgroundImage
          - alias: deleteBrandThemeBackgroundImage
            operationId: deleteBrandThemeBackgroundImage
        x-okta-tags:
          - Brand
      ThemeResponse:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          backgroundImage:
            readOnly: true
            type: string
          emailTemplateTouchPointVariant:
            $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
          endUserDashboardTouchPointVariant:
            $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
          errorPageTouchPointVariant:
            $ref: '#/components/schemas/ErrorPageTouchPointVariant'
          favicon:
            readOnly: true
            type: string
          id:
            readOnly: true
            type: string
          logo:
            readOnly: true
            type: string
          primaryColorContrastHex:
            type: string
          primaryColorHex:
            type: string
          secondaryColorContrastHex:
            type: string
          secondaryColorHex:
            type: string
          signInPageTouchPointVariant:
            $ref: '#/components/schemas/SignInPageTouchPointVariant'
        x-okta-tags:
          - Brand
      ThreatInsightConfiguration:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          action:
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          excludeZones:
            items:
              type: string
            type: array
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
        x-okta-crud:
          - alias: read
            arguments: []
            operationId: getCurrentConfiguration
          - alias: update
            arguments:
              - dest: threatInsightConfiguration
                self: true
            operationId: updateConfiguration
        x-okta-tags:
          - ThreatInsight
      TokenAuthorizationServerPolicyRuleAction:
        properties:
          accessTokenLifetimeMinutes:
            type: integer
          inlineHook:
            $ref: >-
              #/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook
          refreshTokenLifetimeMinutes:
            type: integer
          refreshTokenWindowMinutes:
            type: integer
        type: object
        x-okta-tags:
          - AuthorizationServerPolicy
      TokenAuthorizationServerPolicyRuleActionInlineHook:
        properties:
          id:
            type: string
        type: object
        x-okta-tags:
          - AuthorizationServerPolicy
      TokenUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/TokenUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      TokenUserFactorProfile:
        properties:
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      TotpUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/TotpUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      TotpUserFactorProfile:
        properties:
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      TrustedOrigin:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          createdBy:
            type: string
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          lastUpdatedBy:
            type: string
          name:
            type: string
          origin:
            type: string
          scopes:
            items:
              $ref: '#/components/schemas/Scope'
            type: array
          status:
            type: string
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: trustedOrigin
                self: true
            operationId: createOrigin
          - alias: read
            arguments: []
            operationId: getOrigin
          - alias: update
            arguments:
              - dest: trustedOriginId
                src: id
              - dest: trustedOrigin
                self: true
            operationId: updateOrigin
          - alias: delete
            arguments:
              - dest: trustedOriginId
                src: id
            operationId: deleteOrigin
        x-okta-tags:
          - TrustedOrigin
      U2fUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/U2fUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      U2fUserFactorProfile:
        properties:
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      User:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          activated:
            format: date-time
            readOnly: true
            type: string
          created:
            format: date-time
            readOnly: true
            type: string
          credentials:
            $ref: '#/components/schemas/UserCredentials'
          id:
            readOnly: true
            type: string
          lastLogin:
            format: date-time
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          passwordChanged:
            format: date-time
            readOnly: true
            type: string
          profile:
            $ref: '#/components/schemas/UserProfile'
          status:
            $ref: '#/components/schemas/UserStatus'
          statusChanged:
            format: date-time
            readOnly: true
            type: string
          transitioningToStatus:
            $ref: '#/components/schemas/UserStatus'
          type:
            $ref: '#/components/schemas/UserType'
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: user
                self: true
            operationId: createUser
          - alias: read
            arguments: []
            operationId: getUser
          - alias: update
            arguments:
              - dest: userId
                src: id
              - dest: user
                self: true
            operationId: updateUser
          - alias: delete
            arguments:
              - dest: userId
                src: id
              - dest: user
                self: true
            operationId: deactivateOrDeleteUser
        x-okta-operations:
          - alias: listAppLinks
            arguments:
              - dest: userId
                src: id
            operationId: listAppLinks
          - alias: changePassword
            arguments:
              - dest: userId
                src: id
            operationId: changePassword
          - alias: changeRecoveryQuestion
            arguments:
              - dest: userId
                src: id
            operationId: changeRecoveryQuestion
          - alias: forgotPasswordSetNewPassword
            arguments:
              - dest: userId
                src: id
            operationId: forgotPasswordSetNewPassword
          - alias: forgotPasswordGenerateOneTimeToken
            arguments:
              - dest: userId
                src: id
            operationId: forgotPasswordGenerateOneTimeToken
          - alias: assignRole
            arguments:
              - dest: userId
                src: id
            operationId: assignRoleToUser
          - alias: getRole
            arguments:
              - dest: userId
                src: id
            operationId: getUserRole
          - alias: removeRole
            arguments:
              - dest: userId
                src: id
            operationId: removeRoleFromUser
          - alias: listGroupTargets
            arguments:
              - dest: userId
                src: id
            operationId: listGroupTargetsForRole
          - alias: removeGroupTarget
            arguments:
              - dest: userId
                src: id
            operationId: removeGroupTargetFromRole
          - alias: addGroupTarget
            arguments:
              - dest: userId
                src: id
            operationId: addGroupTargetToRole
          - alias: listAssignedRoles
            arguments:
              - dest: userId
                src: id
            operationId: listAssignedRolesForUser
          - alias: addAllAppsAsTarget
            arguments:
              - dest: userId
                src: id
            operationId: addAllAppsAsTargetToRole
          - alias: listGroups
            arguments:
              - dest: userId
                src: id
            operationId: listUserGroups
          - alias: listGrants
            arguments:
              - dest: userId
                src: id
            operationId: listUserGrants
          - alias: revokeGrants
            arguments:
              - dest: userId
                src: id
            operationId: revokeUserGrants
          - alias: revokeGrant
            arguments:
              - dest: userId
                src: id
            operationId: revokeUserGrant
          - alias: revokeGrantsForUserAndClient
            arguments:
              - dest: userId
                src: id
            operationId: revokeGrantsForUserAndClient
          - alias: listRefreshTokensForUserAndClient
            arguments:
              - dest: userId
                src: id
            operationId: listRefreshTokensForUserAndClient
          - alias: revokeTokenForUserAndClient
            arguments:
              - dest: userId
                src: id
            operationId: revokeTokenForUserAndClient
          - alias: getRefreshTokenForUserAndClient
            arguments:
              - dest: userId
                src: id
            operationId: getRefreshTokenForUserAndClient
          - alias: revokeTokensForUserAndClient
            arguments:
              - dest: userId
                src: id
            operationId: revokeTokensForUserAndClient
          - alias: listClients
            arguments:
              - dest: userId
                src: id
            operationId: listUserClients
          - alias: activate
            arguments:
              - dest: userId
                src: id
            operationId: activateUser
          - alias: reactivate
            arguments:
              - dest: userId
                src: id
            operationId: reactivateUser
          - alias: deactivate
            arguments:
              - dest: userId
                src: id
            operationId: deactivateUser
          - alias: suspend
            arguments:
              - dest: userId
                src: id
            operationId: suspendUser
          - alias: unsuspend
            arguments:
              - dest: userId
                src: id
            operationId: unsuspendUser
          - alias: resetPassword
            arguments:
              - dest: userId
                src: id
            operationId: resetPassword
          - alias: expirePassword
            arguments:
              - dest: userId
                src: id
            operationId: expirePassword
          - alias: expirePasswordAndGetTemporaryPassword
            arguments:
              - dest: userId
                src: id
            operationId: expirePasswordAndGetTemporaryPassword
          - alias: unlock
            arguments:
              - dest: userId
                src: id
            operationId: unlockUser
          - alias: resetFactors
            arguments:
              - dest: userId
                src: id
            operationId: resetFactors
          - alias: deleteFactor
            arguments:
              - dest: userId
                src: id
            operationId: deleteFactor
          - alias: addToGroup
            arguments:
              - dest: userId
                src: id
            description: Adds a user to a group with 'OKTA_GROUP' type
            operationId: addUserToGroup
          - alias: enrollFactor
            arguments:
              - dest: userId
                src: id
            operationId: enrollFactor
          - alias: listSupportedFactors
            arguments:
              - dest: userId
                src: id
            operationId: listSupportedFactors
          - alias: listFactors
            arguments:
              - dest: userId
                src: id
            operationId: listFactors
          - alias: listSupportedSecurityQuestions
            arguments:
              - dest: userId
                src: id
            operationId: listSupportedSecurityQuestions
          - alias: getFactor
            arguments:
              - dest: userId
                src: id
            operationId: getFactor
          - alias: setLinkedObject
            arguments:
              - dest: associatedUserId
                src: id
            operationId: setLinkedObjectForUser
          - alias: listIdentityProviders
            arguments:
              - dest: userId
                src: id
            operationId: listUserIdentityProviders
          - alias: getLinkedObjects
            arguments:
              - dest: userId
                src: id
            operationId: getLinkedObjectsForUser
          - alias: clearSessions
            arguments:
              - dest: userId
                src: id
            operationId: clearUserSessions
          - alias: removeLinkedObject
            arguments:
              - dest: userId
                src: id
            operationId: removeLinkedObjectForUser
        x-okta-tags:
          - User
      UserActivationToken:
        properties:
          activationToken:
            readOnly: true
            type: string
          activationUrl:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - User
      UserCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        x-okta-tags:
          - Policy
      UserCredentials:
        properties:
          password:
            $ref: '#/components/schemas/PasswordCredential'
          provider:
            $ref: '#/components/schemas/AuthenticationProvider'
          recovery_question:
            $ref: '#/components/schemas/RecoveryQuestionCredential'
        type: object
        x-okta-tags:
          - User
      UserFactor:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          factorType:
            $ref: '#/components/schemas/FactorType'
          id:
            readOnly: true
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          provider:
            $ref: '#/components/schemas/FactorProvider'
          status:
            $ref: '#/components/schemas/FactorStatus'
          verify:
            $ref: '#/components/schemas/VerifyFactorRequest'
        type: object
        x-okta-crud:
          - alias: delete
            arguments:
              - dest: factorId
                src: id
              - dest: userId
                parentSrc: id
            operationId: deleteFactor
        x-okta-operations:
          - alias: activate
            arguments:
              - dest: factorId
                src: id
              - dest: userId
                parentSrc: id
            operationId: activateFactor
          - alias: verify
            arguments:
              - dest: factorId
                src: id
              - dest: userId
                parentSrc: id
            operationId: verifyFactor
        x-okta-tags:
          - UserFactor
        x-openapi-v3-discriminator:
          mapping:
            call: '#/definitions/CallUserFactor'
            email: '#/definitions/EmailUserFactor'
            hotp: '#/definitions/CustomHotpUserFactor'
            push: '#/definitions/PushUserFactor'
            question: '#/definitions/SecurityQuestionUserFactor'
            sms: '#/definitions/SmsUserFactor'
            token: '#/definitions/TokenUserFactor'
            token:hardware: '#/definitions/HardwareUserFactor'
            token:hotp: '#/definitions/CustomHotpUserFactor'
            token:software:totp: '#/definitions/TotpUserFactor'
            u2f: '#/definitions/U2fUserFactor'
            web: '#/definitions/WebUserFactor'
            webauthn: '#/definitions/WebAuthnUserFactor'
          propertyName: factorType
      UserIdString:
        properties:
          userId:
            type: string
        type: object
        x-okta-parent: '#/definitions/OrgContactUser'
        x-okta-tags:
          - Org
      UserIdentifierConditionEvaluatorPattern:
        properties:
          matchType:
            enum:
              - SUFFIX
              - EXPRESSION
              - STARTS_WITH
              - EQUALS
              - CONTAINS
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - Policy
      UserIdentifierPolicyRuleCondition:
        properties:
          attribute:
            type: string
          patterns:
            items:
              $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
            type: array
          type:
            enum:
              - IDENTIFIER
              - ATTRIBUTE
            type: string
        type: object
        x-okta-tags:
          - Policy
      UserIdentityProviderLinkRequest:
        properties:
          externalId:
            type: string
        type: object
        x-okta-tags:
          - Policy
      UserLifecycleAttributePolicyRuleCondition:
        properties:
          attributeName:
            type: string
          matchingValue:
            type: string
        type: object
        x-okta-tags:
          - Policy
      UserNextLogin:
        enum:
          - changePassword
        type: string
        x-okta-tags:
          - User
      UserPolicyRuleCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          inactivity:
            $ref: '#/components/schemas/InactivityPolicyRuleCondition'
          include:
            items:
              type: string
            type: array
          lifecycleExpiration:
            $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
          passwordExpiration:
            $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
          userLifecycleAttribute:
            $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
        type: object
        x-okta-tags:
          - Policy
      UserProfile:
        properties:
          city:
            type: string
          costCenter:
            type: string
          countryCode:
            type: string
          department:
            type: string
          displayName:
            type: string
          division:
            type: string
          email:
            type: string
          employeeNumber:
            type: string
          firstName:
            type: string
          honorificPrefix:
            type: string
          honorificSuffix:
            type: string
          lastName:
            type: string
          locale:
            type: string
          login:
            type: string
          manager:
            type: string
          managerId:
            type: string
          middleName:
            type: string
          mobilePhone:
            type: string
          nickName:
            type: string
          organization:
            type: string
          postalAddress:
            type: string
          preferredLanguage:
            type: string
          primaryPhone:
            type: string
          profileUrl:
            type: string
          secondEmail:
            type: string
          state:
            type: string
          streetAddress:
            type: string
          timezone:
            type: string
          title:
            type: string
          userType:
            type: string
          zipCode:
            type: string
        type: object
        x-okta-extensible: true
        x-okta-tags:
          - User
      UserSchema:
        properties:
          $schema:
            readOnly: true
            type: string
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            readOnly: true
            type: string
          definitions:
            $ref: '#/components/schemas/UserSchemaDefinitions'
          id:
            readOnly: true
            type: string
          lastUpdated:
            readOnly: true
            type: string
          name:
            readOnly: true
            type: string
          properties:
            $ref: '#/components/schemas/UserSchemaProperties'
          title:
            type: string
          type:
            readOnly: true
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttribute:
        properties:
          description:
            type: string
          enum:
            items:
              type: string
            type: array
          externalName:
            type: string
          externalNamespace:
            type: string
          items:
            $ref: '#/components/schemas/UserSchemaAttributeItems'
          master:
            $ref: '#/components/schemas/UserSchemaAttributeMaster'
          maxLength:
            type: integer
          minLength:
            type: integer
          mutability:
            type: string
          oneOf:
            items:
              $ref: '#/components/schemas/UserSchemaAttributeEnum'
            type: array
          pattern:
            type: string
          permissions:
            items:
              $ref: '#/components/schemas/UserSchemaAttributePermission'
            type: array
          required:
            type: boolean
          scope:
            $ref: '#/components/schemas/UserSchemaAttributeScope'
          title:
            type: string
          type:
            $ref: '#/components/schemas/UserSchemaAttributeType'
          union:
            $ref: '#/components/schemas/UserSchemaAttributeUnion'
          unique:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeEnum:
        properties:
          const:
            type: string
          title:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeItems:
        properties:
          enum:
            items:
              type: string
            type: array
          oneOf:
            items:
              $ref: '#/components/schemas/UserSchemaAttributeEnum'
            type: array
          type:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeMaster:
        properties:
          priority:
            items:
              $ref: '#/components/schemas/UserSchemaAttributeMasterPriority'
            type: array
          type:
            $ref: '#/components/schemas/UserSchemaAttributeMasterType'
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeMasterPriority:
        properties:
          type:
            type: string
          value:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeMasterType:
        enum:
          - PROFILE_MASTER
          - OKTA
          - OVERRIDE
        type: string
        x-okta-tags:
          - UserSchema
      UserSchemaAttributePermission:
        properties:
          action:
            type: string
          principal:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeScope:
        enum:
          - SELF
          - NONE
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeType:
        enum:
          - string
          - boolean
          - number
          - integer
          - array
        type: string
        x-okta-tags:
          - UserSchema
      UserSchemaAttributeUnion:
        enum:
          - DISABLE
          - ENABLE
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaBase:
        properties:
          id:
            readOnly: true
            type: string
          properties:
            $ref: '#/components/schemas/UserSchemaBaseProperties'
          required:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaBaseProperties:
        properties:
          city:
            $ref: '#/components/schemas/UserSchemaAttribute'
          costCenter:
            $ref: '#/components/schemas/UserSchemaAttribute'
          countryCode:
            $ref: '#/components/schemas/UserSchemaAttribute'
          department:
            $ref: '#/components/schemas/UserSchemaAttribute'
          displayName:
            $ref: '#/components/schemas/UserSchemaAttribute'
          division:
            $ref: '#/components/schemas/UserSchemaAttribute'
          email:
            $ref: '#/components/schemas/UserSchemaAttribute'
          employeeNumber:
            $ref: '#/components/schemas/UserSchemaAttribute'
          firstName:
            $ref: '#/components/schemas/UserSchemaAttribute'
          honorificPrefix:
            $ref: '#/components/schemas/UserSchemaAttribute'
          honorificSuffix:
            $ref: '#/components/schemas/UserSchemaAttribute'
          lastName:
            $ref: '#/components/schemas/UserSchemaAttribute'
          locale:
            $ref: '#/components/schemas/UserSchemaAttribute'
          login:
            $ref: '#/components/schemas/UserSchemaAttribute'
          manager:
            $ref: '#/components/schemas/UserSchemaAttribute'
          managerId:
            $ref: '#/components/schemas/UserSchemaAttribute'
          middleName:
            $ref: '#/components/schemas/UserSchemaAttribute'
          mobilePhone:
            $ref: '#/components/schemas/UserSchemaAttribute'
          nickName:
            $ref: '#/components/schemas/UserSchemaAttribute'
          organization:
            $ref: '#/components/schemas/UserSchemaAttribute'
          postalAddress:
            $ref: '#/components/schemas/UserSchemaAttribute'
          preferredLanguage:
            $ref: '#/components/schemas/UserSchemaAttribute'
          primaryPhone:
            $ref: '#/components/schemas/UserSchemaAttribute'
          profileUrl:
            $ref: '#/components/schemas/UserSchemaAttribute'
          secondEmail:
            $ref: '#/components/schemas/UserSchemaAttribute'
          state:
            $ref: '#/components/schemas/UserSchemaAttribute'
          streetAddress:
            $ref: '#/components/schemas/UserSchemaAttribute'
          timezone:
            $ref: '#/components/schemas/UserSchemaAttribute'
          title:
            $ref: '#/components/schemas/UserSchemaAttribute'
          userType:
            $ref: '#/components/schemas/UserSchemaAttribute'
          zipCode:
            $ref: '#/components/schemas/UserSchemaAttribute'
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaDefinitions:
        properties:
          base:
            $ref: '#/components/schemas/UserSchemaBase'
          custom:
            $ref: '#/components/schemas/UserSchemaPublic'
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaProperties:
        properties:
          profile:
            $ref: '#/components/schemas/UserSchemaPropertiesProfile'
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaPropertiesProfile:
        properties:
          allOf:
            items:
              $ref: '#/components/schemas/UserSchemaPropertiesProfileItem'
            type: array
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaPropertiesProfileItem:
        properties:
          $ref:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserSchemaPublic:
        properties:
          id:
            readOnly: true
            type: string
          properties:
            additionalProperties:
              $ref: '#/components/schemas/UserSchemaAttribute'
            type: object
          required:
            items:
              type: string
            type: array
          type:
            type: string
        type: object
        x-okta-tags:
          - UserSchema
      UserStatus:
        enum:
          - ACTIVE
          - DEPROVISIONED
          - LOCKED_OUT
          - PASSWORD_EXPIRED
          - PROVISIONED
          - RECOVERY
          - STAGED
          - SUSPENDED
        type: string
        x-okta-tags:
          - User
      UserStatusPolicyRuleCondition:
        properties:
          value:
            enum:
              - ACTIVE
              - INACTIVE
              - PENDING
              - DELETED
              - EXPIRED_PASSWORD
              - ACTIVATING
              - SUSPENDED
              - DELETING
            type: string
        type: object
        x-okta-tags:
          - Policy
      UserType:
        properties:
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          created:
            format: date-time
            readOnly: true
            type: string
          createdBy:
            readOnly: true
            type: string
          default:
            readOnly: true
            type: boolean
          description:
            type: string
          displayName:
            type: string
          id:
            type: string
          lastUpdated:
            format: date-time
            readOnly: true
            type: string
          lastUpdatedBy:
            readOnly: true
            type: string
          name:
            type: string
        type: object
        x-okta-crud:
          - alias: create
            arguments:
              - dest: userType
                self: true
            operationId: createUserType
          - alias: update
            arguments:
              - dest: typeId
                src: id
              - dest: userType
                self: true
            operationId: updateUserType
          - alias: read
            arguments:
              - dest: typeId
                src: id
            operationId: getUserType
          - alias: delete
            arguments:
              - dest: typeId
                src: id
            operationId: deleteUserType
        x-okta-operations:
          - alias: replaceUserType
            arguments:
              - dest: roleId
                src: id
            operationId: replaceUserType
        x-okta-tags:
          - UserType
      UserTypeCondition:
        properties:
          exclude:
            items:
              type: string
            type: array
          include:
            items:
              type: string
            type: array
        x-okta-tags:
          - Policy
      UserVerificationEnum:
        enum:
          - REQUIRED
          - PREFERRED
        type: string
        x-okta-tags:
          - Authenticator
      VerificationMethod:
        properties:
          constraints:
            items:
              $ref: '#/components/schemas/AccessPolicyConstraints'
            type: array
          factorMode:
            type: string
          inactivityPeriod:
            type: string
          reauthenticateIn:
            type: string
          type:
            type: string
        type: object
        x-okta-tags:
          - Policy
      VerifyFactorRequest:
        properties:
          activationToken:
            type: string
          answer:
            type: string
          attestation:
            type: string
          clientData:
            type: string
          nextPassCode:
            type: string
          passCode:
            type: string
          registrationData:
            type: string
          stateToken:
            type: string
        x-okta-tags:
          - UserFactor
      VerifyUserFactorResponse:
        properties:
          _embedded:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          _links:
            additionalProperties:
              type: object
            readOnly: true
            type: object
          expiresAt:
            format: date-time
            readOnly: true
            type: string
          factorResult:
            enum:
              - SUCCESS
              - EXPIRED
              - CHALLENGE
              - WAITING
              - FAILED
              - REJECTED
              - TIMEOUT
              - TIME_WINDOW_EXCEEDED
              - PASSCODE_REPLAYED
              - ERROR
            type: string
          factorResultMessage:
            type: string
        type: object
        x-okta-tags:
          - UserFactor
      WebAuthnUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/WebAuthnUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      WebAuthnUserFactorProfile:
        properties:
          authenticatorName:
            type: string
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      WebUserFactor:
        properties:
          profile:
            $ref: '#/components/schemas/WebUserFactorProfile'
        x-okta-parent: '#/definitions/UserFactor'
        x-okta-tags:
          - UserFactor
      WebUserFactorProfile:
        properties:
          credentialId:
            type: string
        x-okta-tags:
          - UserFactor
      WsFederationApplication:
        properties:
          name:
            default: template_wsfed
          settings:
            $ref: '#/components/schemas/WsFederationApplicationSettings'
        x-okta-defined-as:
          name: template_wsfed
        x-okta-parent: '#/definitions/Application'
        x-okta-tags:
          - Application
      WsFederationApplicationSettings:
        properties:
          app:
            $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
        x-okta-parent: '#/definitions/ApplicationSettings'
        x-okta-tags:
          - Application
      WsFederationApplicationSettingsApplication:
        properties:
          attributeStatements:
            type: string
          audienceRestriction:
            type: string
          authnContextClassRef:
            type: string
          groupFilter:
            type: string
          groupName:
            type: string
          groupValueFormat:
            type: string
          nameIDFormat:
            type: string
          realm:
            type: string
          siteURL:
            type: string
          usernameAttribute:
            type: string
          wReplyOverride:
            type: boolean
          wReplyURL:
            type: string
        x-okta-parent: '#/definitions/ApplicationSettingsApplication'
        x-okta-tags:
          - Application
konfigCliVersion: 1.38.61
