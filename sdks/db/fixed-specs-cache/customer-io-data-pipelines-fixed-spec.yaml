publishJson:
  company: Customer.io
  serviceName: Data Pipelines
  sdkName: customer-io-data-pipelines-{language}-sdk
  clientName: CustomerIoDataPipelines
  metaDescription: >-
    Customer.io is a versatile marketing automation tool for sending relevant
    messages based on behavior across web and mobile products.


    Impersonal messages lead to bad experiences. That's why we use real-time
    data to help you deliver the right message, exactly when it's needed — like
    sending an event reminder over SMS or the perfect onboarding email.


    Our robust platform enables you to:

    - Automate your product messaging, with the ability to build, test, and send
    messages from one platform.

    - Create and manage newsletters, transactional messages, and behavioral
    messages

    - Do more with your behavior and data -- connect our powerful segmentation
    and automation engine with other apps to drive user behavior and save time.


    Learn more: https://customer.io
  apiStatusUrls: inherit
  homepage: customer.io/
  developerDocumentation: customer.io/docs/api/cdp/
  categories:
    - marketing
    - big_data_analytics
    - customer_data_platform
rawSpecString: |
  openapi: 3.0.0
  info:
    version: 1.0.0
    title: Data Pipelines API
    description: >
      This is a reference for the Data Pipelines API. In general, you'll consume
      this API through one of our source libraries—our JavaScript client library
      or any of our server packages. But you can also integrate directly with our
      REST API if you don't want to install one of our libraries or you want to
      support a source that we don't have a native integration with.


      **All endpoints begin with: `https://cdp.customer.io/v1`**


      <div class="fly-panel fly-light regionUS">

      <div class="fly-panel-body us-server">

      <p class="text--bold">You're looking at our US regional endpoints</p>

      <p>The only difference in our US and European Union (EU) regions is the
      subdomain—e.g. <code>cdp-eu</code> for the EU region; there are no other
      differences between the two regions. If your account is based in the
      European Union (EU) data center, <a id='eu-anchor'
      onClick="anchorToRegion(this.id)">click here</a> to show EU endpoints in our
      code samples and documentation below.</p>

      <p>If you don't know your region, you can <b>find your account region</b> on
      <a href="https://fly.customer.io/settings/privacy">your account's privacy
      page</a>, or <a href="#operation/getRegion">get your region using the
      API</a>.</p>

      </div>

      <div class="fly-panel-body eu-server">

      <p class="text--bold">You're looking at our EU regional endpoints</p>

      <p>The only difference in our US and European Union (EU) regions is the
      subdomain—e.g. <code>cdp</code> for our US region rather than
      <code>cdp-eu</code> for the EU; there are no other differences between the
      two regions. If your account is based in the European Union (EU) data
      center, you can <a id='us-anchor' onClick="anchorToRegion(this.id)">click
      here</a> to to show US endpoints in our code samples and documentation
      below.</p>

      <p>If you don't know your region, you can <b>find your account region</b> on
      <a href="https://fly.customer.io/settings/privacy">your account's privacy
      page</a>, or <a href="#operation/getRegion">get your region using the
      API</a>.</p>

      </div></div>


      # API region


      We host services in the United States (US) and European Union (EU, host
      subdomains are suffixed with `-eu`). Select the appropriate region for
      server addresses that apply to your region. 


      If you're in our EU region, you'll need to specify the EU URL when you
      initialize our server-side libraries. If you use our JavaScript client
      library, we'll set your region and route data/calls automatically.


      # Set up a REST API source


      After you add a Rest API source, you'll use endpoints at
      `https://cdp.customer.io/v1/{method}`


      1. Go to the <svg class="icon"><use href="#connection" /></svg> tab and
      click **Sources**.

      1. Click **Add Source**, pick **HTTP**, and click **Next**.

      1. Give the source a *Name* and copy your *API Key*. You'll use this key to
      authenticate with our API. If you don't copy the key now, you can always get
      it later from the *Settings* tab when you're done setting up your source. 

      1. (Optional) Test your connection by sending a test call. You can copy your
      API key into an app like Postman or send a CURL request. If your request is
      successful, and then you click *Test Connection* we'll let you know if your
      request was successful and you've set up your HTTP implementation
      successfully.

      1. Click **Submit**.
        
      Now you can connect your REST API source to destinations.


      # Try out our postman collection


      We've generated a Postman collection with all of the endpoints organized as
      you'll find them on this page, with a starter environment (mainly to contain
      your API key). For our API endpoints, **your API key is your username and
      your password is blank**.


      You'll notice that payloads on this page can contain significantly more
      information than the payloads that appear in our collection. We've limited
      our collections to the fields that you'll _typically_ use when you send
      calls to our APIs and libraries, so it's easier to get started. But you can
      add additional fields to payloads—like `context`, `integrations`, and so
      on—if you want.


      If you fork this collection, you might want to disable the *Watch original
      collection* option. We automatically update our Postman collection whenever
      we release changes to our documentation, even if we don't change our
      APIs—which happens daily! Rather than being flooded with Postman
      notifications, you can check out our [Release
      Notes](https://customer.io/docs/api/cdp/) for updates to our APIs.


      <div class="postman-run-button"

      data-postman-action="collection/fork"

      data-postman-visibility="public"

      data-postman-var-1="23697545-287dd370-3d8b-4a71-80fe-75d6b7c7ff61"

      data-postman-collection-url="entityId=23697545-287dd370-3d8b-4a71-80fe-75d6b7c7ff61&entityType=collection&workspaceId=35e4a70d-66bd-4b3e-8a0c-57f9e32080dc"

      data-postman-param="env%5BCustomer.io%20Data%20Pipelines%20API%20Environment%5D=W3sia2V5IjoiY2RwX2FwaV91cmwiLCJ0eXBlIjoiZGVmYXVsdCIsInZhbHVlIjoiY2RwLmN1c3RvbWVyLmlvIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ3cml0ZV9rZXkiLCJ0eXBlIjoic2VjcmV0IiwidmFsdWUiOiIiLCJlbmFibGVkIjp0cnVlfV0="></div>

      <script type="text/javascript">
        (function (p,o,s,t,m,a,n) {
          !p[s] && (p[s] = function () { (p[t] || (p[t] = [])).push(arguments); });
          !o.getElementById(s+t) && o.getElementsByTagName("head")[0].appendChild((
            (n = o.createElement("script")),
            (n.id = s+t), (n.async = 1), (n.src = m), n
          ));
        }(window, document, "_pm", "PostmanRunObject", "https://run.pstmn.io/button.js"));
      </script>


      # Authentication 


      Our API uses basic authorization with an API Key provided when you set up a
      source. If you use Postman or another platform that helps you send API
      calls, this API key is the *Username*, and the *Password* is blank.


      Our sources are all authenticated using a **API Key** that we generate when
      you create a source.


      <SecurityDefinitions />


      # API limits


      A request is limited to 32KB. A batch request is limited to 500KB total and
      32KB per call in the request. If a request exceeds these limits, you will
      receive a 200 response, but the request will not go through.


      # Backfilling data


      By default, Customer.io records a `timestamp` when we receive requests. If
      you're sending data to Customer.io in real time, you don't need to worry
      about the timestamp.


      If you want to backfill requests, you can send a `timestamp`—an ISO 8601
      date-time string—telling us when the request occurred. This provides a way
      to log `track` and `page` calls when the activities _actually_ took place. 


      # Schemas


      You only need to populate a few fields when you send data to Customer.io.
      Our JavaScript client and server libraries populate additional information
      for each call, which you'll see when you look at individual events in
      Customer.io.


      The information below shows the complete list of information reported to
      Customer.io with each event. 


      See the endpoints below this section for the much smaller list of fields
      you'll actually set when you invoke methods in our client and server-side
      libraries.


      ## Identify Schema


      When you send an identify call, you'll typically include a `userId` and
      `traits`. Most other fields are populated by Customer.io—either by a source
      library or our servers.


      If you provide an `anonymousId`, we'll attribute traits to an anonymous
      user. If you provide both an `anonymousId` and `userId`, we'll associate
      anonymous activity to the `userId`.


      Traits are the same as *Attributes* in Customer.io. If Customer.io Messaging
      is your destination, you'll see that traits map 1-to-1 with attributes. But
      not all systems call the things you know about people `traits` or
      `attributes`. You'll need to check with your destination to understand what
      your destination calls people-data!


      <SchemaDefinition schemaRef="#/components/schemas/identify" />


      ## Track Schema


      When you send a track call, you'll typically include the event name and
      additional properties you want to track. You can provide either an
      `anonymousId` or a `userId`. If you provide both, we attribute the activity
      to the `userId` and ignore the `anonymousId`.


      Most other fields are populated by Customer.io—either by a source library or
      our servers.


      <SchemaDefinition schemaRef="#/components/schemas/track" />


      ## Page Schema


      A `page` call represents a pageview.


      Page events are automatically sent whenever you load our JavaScript library,
      which is typically every page. Customer.io automatically gathers the page
      name and URL, but you can pass additional properties, like the `category`. 


      Most other fields are populated by Customer.io—either by a source library or
      our servers.


      <SchemaDefinition schemaRef="#/components/schemas/page" />


      ## Screen Schema


      A `scren` call indicates that someone went to a screen in your mobile app.


      We don't have mobile libraries supporting the `screen` method just yet, but
      we'll still accept calls with `type: "screen"` if you want to set up your
      own calls.


      <SchemaDefinition schemaRef="#/components/schemas/screen" />


      ## Group Schema


      Group events assign the identified person to a group. You'll typically pass
      the `groupId` that you want to associate a person with, and any `traits`
      that you want to assign to the group.


      Most other fields are populated by Customer.io—either by a source library or
      our servers.


      <SchemaDefinition schemaRef="#/components/schemas/group" />


      ## Common fields


      These are the fields that we augment incoming data with. The shape of this
      data may change depending on the type of call you make (identify, track,
      etc), and the source medium (client side javascript, mobile library, etc).
      We collect many of these values automatically, though you can override some
      of them. See individual methods below for information about which fields are
      accepted in requests.


      <SchemaDefinition schemaRef="#/components/schemas/all_common_fields" />


      ## The Context object


      These are fields that we collect automatically with requests—context for the
      request—but you can override these values.


      <SchemaDefinition schemaRef="#/components/schemas/context" />


      # Customer.io semantic event schemas


      ```javascript

      analytics.track("Device Created or Updated", {
        device: {
          token: "string",
          type: "ios"
        }
      });

      ```


      Journeys, our messaging automation tool, supports a number of actions that
      aren't immediately apparent from the API. For example, I can add a person
      using the `identify` function, but what if I want to remove a person? 


      That's what semantic events are for: they let you send `track` calls with a
      specific event name and payload to perform actions in Journeys. In general,
      the event names map directly to the thing you want to do: like `Create
      Device` or `Delete Person`.


      ## Delete person


      Remove a person from your Customer.io environment. You might do this when
      someone cancels their subscription with you or otherwise leaves your
      service.


      <SchemaDefinition schemaRef="#/components/schemas/delete_person" />


      ## Create or Update a Device


      Add or update a device. If a device (represented by the
      `context.device.token`) exists, does not exist, we'll create it. If the
      device token already exists, we'll update the it.


      <SchemaDefinition schemaRef="#/components/schemas/create_update_device" />


      ## Delete a Device


      Delete a device. You might do this when someone logs out of your app or
      otherwise removes a device.


      <SchemaDefinition schemaRef="#/components/schemas/delete_device" />


      ## Delete a relationship


      Remove a relationship between a person and an object in Customer.io. This is
      basically the opposite of a `group` operation. Where objects represent
      things like accounts, companies, or online classes, you might delete a
      relationship when a person is no longer on an account, leaves a company, or
      drops a class.


      This event requires a `groupId` and an `objectTypeId`. If you don't provide
      an `objectTypeId`, we'll assume it's `1`, but if the `groupId` with the
      associated objectTypeId` (defaulting to 1) does not exist, the event will
      _not_ remove a person from the group.


      <SchemaDefinition schemaRef="#/components/schemas/relationship_deleted" />


      ## Delete a group (object)


      Remove a group (also called an "object") from Customer.io Journeys.
      Groups/objects represent things like accounts, companies, and online
      classes—non-people entities that people can be related to. You might delete
      a group when an account is closed, a company is acquired, or you stop
      offering a class.


      This event requires a `groupId` and an `objectTypeId`. If you don't provide
      an `objectTypeId`, we'll assume it's `1`, but if the `groupId` with the
      associated `objectTypeId` (defaulting to 1) does not exist, the event will
      _not_ find and delete the `groupId`.


      <SchemaDefinition schemaRef="#/components/schemas/group_deleted" />


      ## Suppress a person


      Remove a person from your Customer.io workspace _and_ prevent them from
      being added back to your workspace using the same identifier. In general you
      should **only send this event for compliance reasons**, like when someone
      invokes their right to be forgotten in accordance with GDPR or CAN-SPAM
      regulations.


      <SchemaDefinition schemaRef="#/components/schemas/suppress_person" />


      ## Unsuppress a person


      Allow a userId to be added back to your Customer.io workspace. This does not
      restore information from a person you previously suppressed. It only allows
      you to add a person back to your workspace using the same identifier.


      <SchemaDefinition schemaRef="#/components/schemas/unsuppress_person" />


      ## Report a message delivery


      Reports delivery events for messages. In general, we use this event with our
      JavaScript snippet to report delivery events for in-app messages back to
      your Customer.io workspace.


      While Customer.io knows about messages that are sent, we use this event to
      determine when an in-app message is delivered, clicked, and so on. Each
      message contains a unique `deliveryId` that we trace back to the person,
      campaign/broadcast, and other items in your Customer.io workspace. 


      <SchemaDefinition schemaRef="#/components/schemas/report_delivery_event" />


      # A/B test event schemas

       ```javascript
      analytics.track('Experiment Viewed', {
        experiment_id: "12345",
        experiment_name: "Homepage Hero",
        variant_id: "67890",
        variant_name: "Hero B"
      })

      ```

      If you `track` A/B tests, we recommend that you use the event name
      `Experiment Viewed` and `properties` listed below. Sending uniform events
      that conform to the schema defined here helps ensure that you can use any
      default actions that we set up for destinations that rely on A/B test
      events—now or with destinations we add in the future.


      <div style="height: 140px;"></div>


      <SchemaDefinition schemaRef="#/components/schemas/experiment_viewed" />


      # Ecommerce event schemas

       ```javascript
      analytics.track('Product Viewed', {
        product_id: "coolshoes-123"
        sku: "abc-123-xyz"
        category: "shoes"
        name: "Cool Shoes"
        brand: "A Shoe Brand"
        variant: "red"
        price: 139.99
        quantity: 1
        coupon: "NEWUSER20"
        position: 3
        url: "https://www.example.com/product/123"
        image_url: "https://www.example.com/product/123.jpg"
        currency: "USD"
        value: 119.99
      })

      ```


      We've defined a set of `track` events that you can use to send ecommerce
      activity from your sources. Our default actions and data structures assume
      that you send ecommerce events in the shapes below. [Learn more about our
      ecommerce specification](https://customer.io/docs/api/cdp/).


      If you send an event with a matching name and structure defined below (where
      the schemas below represents the `properties` object), destinations that
      rely on ecommerce events (like "ad" destinations) will already be set up
      with actions to handle your ecommerce source events. For example, sending
      the following `Product Viewed` event would automatically trigger an action
      in most of our "ad" destinations and handle all the fields in the event.


      **The title of each schema below is the name of the event you should pass in
      a `track` call**. 


      While you can map ecommerce events however you want, we recommend that you
      use the events below to take advantage of our default actions and data
      structures. These events make it easy to send uniform data through data
      pipelines to your destinations.


      <div style="height: 140px;"></div>


      ## Products Searched


      Send `Products Searched` when a user searches for products.


      <SchemaDefinition schemaRef="#/components/schemas/products_searched" />


      ## Product List Viewed


      Send the `Product List Viewed` event when a user views a product.


      <SchemaDefinition schemaRef="#/components/schemas/product_viewed" />


      ## Product List Filtered


      Send the `Product List Filtered` event when a user filters a list of
      products.


      <SchemaDefinition schemaRef="#/components/schemas/product_list_filtered" />


      ## Product Clicked


      Send the `Product Clicked` event when a user clicks a product.


      <SchemaDefinition schemaRef="#/components/schemas/product_clicked" />


      ## Product Viewed


      Send the `Product Viewed` event when a user viewed a product. This might
      happen on a page, in a modal window, etc.


      <SchemaDefinition schemaRef="#/components/schemas/product_clicked" />


      ## Product Added


      Send the `Product Added` event when a user adds a product to their cart.


      <SchemaDefinition schemaRef="#/components/schemas/product_added" />


      ## Product Removed


      Send the `Product Removed` event when a user removes a product from their
      cart.


      <SchemaDefinition schemaRef="#/components/schemas/product_removed" />


      ## Cart Viewed


      Send the `Cart Viewed` event when a user views their cart.


      <SchemaDefinition schemaRef="#/components/schemas/cart_viewed" />


      ## Checkout Started


      Send the `Checkout Started` event when a user starts the checkout process.


      <SchemaDefinition schemaRef="#/components/schemas/checkout_started" />


      ## Checkout Step Viewed


      Send the `Checkout Step Viewed` event when a user views a step in the
      checkout process.


      <SchemaDefinition schemaRef="#/components/schemas/checkout_step_viewed" />


      ## Checkout Step Completed


      Send the `Checkout Step Completed` event when a user completes a step in the
      checkout process.


      <SchemaDefinition schemaRef="#/components/schemas/checkout_step_completed"
      />


      ## Payment Info Entered


      Send the `Payment Info Entered` event when a user enters their payment
      information.


      <SchemaDefinition schemaRef="#/components/schemas/payment_info_entered" />


      ## Order Completed


      Send the `Order Completed` event when a user completes an order.


      <SchemaDefinition schemaRef="#/components/schemas/order_completed" />


      ## Order Updated


      Send the `Order Updated` event when a user updates an order.


      <SchemaDefinition schemaRef="#/components/schemas/order_updated" />


      ## Order Refunded


      Send the `Order Refunded` event when you refund an order.


      <SchemaDefinition schemaRef="#/components/schemas/order_refunded" />


      ## Order Cancelled


      Send the `Order Cancelled` event when a customer cancels an order.


      <SchemaDefinition schemaRef="#/components/schemas/order_cancelled" />


      ## Promotion Viewed


      Send the `Promotion Viewed` event when a user views a promotion.


      <SchemaDefinition schemaRef="#/components/schemas/promotion_viewed" />


      ## Promotion Clicked


      Send the `Promotion Clicked` event when a user clicks a promotion.


      <SchemaDefinition schemaRef="#/components/schemas/promotion_clicked" />


      ## Coupon Entered


      Send the `Coupon Entered` event when a user enters a coupon.


      <SchemaDefinition schemaRef="#/components/schemas/coupon_entered" />


      ## Coupon Applied


      Send the `Coupon Applied` event when you apply a coupon the customer entered
      to their order/transaction.


      <SchemaDefinition schemaRef="#/components/schemas/coupon_applied" />


      ## Coupon Denied


      Send the `Coupon Denied` event when you deny a user's coupon. This might
      happen because the coupon code is invalid, expired, etc.


      <SchemaDefinition schemaRef="#/components/schemas/coupon_denied" />


      ## Coupon Removed


      Send the `Coupon Removed` event when a user revmoes a coupon from their cart
      or order.


      <SchemaDefinition schemaRef="#/components/schemas/coupon_removed" />


      ## Product Added to Wishlist


      Send the `Product Added to Wishlist` event when a user adds a product to
      their wishlist.


      <SchemaDefinition schemaRef="#/components/schemas/product_added_to_wishlist"
      />


      ## Product Removed from Wishlist


      Send the `Product Removed from Wishlist` event when a user removes a product
      from their wishlist.


      <SchemaDefinition
      schemaRef="#/components/schemas/product_removed_from_wishlist" />


      ## Wishlist Product Added to Cart


      Send the `Wishlist Product Added to Cart` event when a user adds a product
      from their wishlist to their cart.


      <SchemaDefinition
      schemaRef="#/components/schemas/wishlist_product_added_to_cart" />


      ## Product Shared


      Send the `Product Shared` event when a user shares a product.


      <SchemaDefinition schemaRef="#/components/schemas/product_shared" />


      ## Cart Shared


      Send the `Cart Shared` event when a user shares their cart.


      <SchemaDefinition schemaRef="#/components/schemas/cart_shared" />


      ## Product Reviewed


      Send the `Product Reviewed` event when a user submits a review of a product.


      <SchemaDefinition schemaRef="#/components/schemas/product_reviewed" />    


      # Email event schemas


      If you send events from an email service provider or another application
      that sends and tracks email, we recommend that you use events with the names
      and `properties` specified below. Sending uniform events that conform to the
      schemas defined here ensures that you can use any default actions that we
      set up for destinations that rely on email events—now or with destinations
      we add in the future.


      ## Email Bounced


      This event indicates that your email server/service provider couldn’t
      deliver a message to the recipient.


      <SchemaDefinition schemaRef="#/components/schemas/email_event_bounced" />


      ## Email Delivered


      <SchemaDefinition schemaRef="#/components/schemas/email_event_delivered"
      />    


      ## Email Opened


      <SchemaDefinition schemaRef="#/components/schemas/email_event_opened" />    


      ## Email Link Clicked


      <SchemaDefinition schemaRef="#/components/schemas/email_event_link_clicked"
      />    


      ## Email Marked as Spam


      <SchemaDefinition
      schemaRef="#/components/schemas/email_event_marked_as_spam" />    


      ## Email Unsubscribed


      <SchemaDefinition schemaRef="#/components/schemas/email_event_unsubscribed"
      />    


      # Live chat event schemas


      ```javascript

      analytics.track('Experiment Viewed', {
        experiment_id: "12345",
        experiment_name: "Homepage Hero",
        variant_id: "67890",
        variant_name: "Hero B"
      })

      ```

      If you send events from a live chat application, we recommend that you use
      events with the names and `properties` specified below. Sending uniform
      events that conform to the schemas defined here ensures that you can use any
      default actions that we set up for destinations that rely on Live Chat
      events—now or with destinations we add in the future.


      <div style="height: 140px;"></div>


      ## Live Chat Conversation Started


      Send this event when a user begins a conversation with you or your team (the
      "agent").


      <SchemaDefinition
      schemaRef="#/components/schemas/live_chat_conversation_started" />


      ## Live Chat Conversation Ended


      Send this event when you or a user ends a conversation.


      <SchemaDefinition
      schemaRef="#/components/schemas/live_chat_conversation_ended" />


      ## Live Chat Message Sent


      Send this event when an agent sends a message to a customer/user.


      <SchemaDefinition schemaRef="#/components/schemas/live_chat_message_sent" />


      ## Live Chat Message Received


      Send this event when you receive a message from a customer/user.


      <SchemaDefinition
      schemaRef="#/components/schemas/live_chat_message_received" />


      # Mobile application lifecycle event schemas


      ```swift

      import CioDataPipelines


      CustomerIO.shared.track(
          name: "Application Crashed", 
          properties: [
            "url": "urls://page/in/app"
          ]
      )

      ```


      These events represent your users' activities in your app—like when they
      open, close, or update your app. If you use our iOS 3.x SDK or later, we
      automatically track a number of these events for you. Later versions of our
      other mobile SDKs will support the same events as our iOS 3.x SDK.


      ## Application Installed


      Our CDP-enabled SDKs send this event the *first* time a user opens your
      application. If the user never opens your app, we won't be able to collect
      this event. This event doesn't wait for the SDK to capture attribution or
      campaign information, and is collected automatically. Destinations like
      Facebook and Google require discrete install events to correctly attribute
      installs to ads served through their platforms.


      <SchemaDefinition schemaRef="#/components/schemas/app_installed" />


      ## Application Opened


      Our CDP-enabled SDKs send this event when a user launches or foregrounds
      your mobile application—after the first open. The first open results in an
      `Application Installed` event, so we only send this event on subsequent
      opens. Like the `Application Installed` event, this event also does not wait
      for the SDK to capture attribution information but it _can_ include
      information about referring applications or deep link URLs if available when
      the app opens.


      <SchemaDefinition schemaRef="#/components/schemas/app_opened" />


      ## Application Backgrounded


      Send this event when a user backgrounds the application upon
      [`applicationDidEnterBackground`](https://developer.apple.com/reference/uikit/uiapplicationdelegate/1622997-applicationdidenterbackground). 


      <SchemaDefinition schemaRef="#/components/schemas/app_backgrounded" />


      ## Application Foregrounded


      Send this event when your audience returns to your app after previously
      backgrounding it. This event is distinct from `Application Opened` in that
      the app is considered opened already, even if it's in the background. 


      <SchemaDefinition schemaRef="#/components/schemas/app_foregrounded" />


      ## Application Updated


      Send this event when the user opens your app _after_ updating your app. Our
      iOS 3.x SDK automatically collects this event rather than the "Application
      Opened" event after someone updates your app.


      <SchemaDefinition schemaRef="#/components/schemas/app_updated" />


      ## Application Uninstalled


      You can send this event when a user uninstalls your app. Like similar events
      that happen outside of your app itself, our CDP-enabled SDKs cannot capture
      this event automatically.


      However, some direct-mode destinations detect this for you using silent push
      notifications through their own SDKs. You might also be able to send these
      events to Customer.io using callbacks. 


      <SchemaDefinition schemaRef="#/components/schemas/app_uninstalled" />


      ## Application Crashed


      You can send this event when you receive a crash notification from your app,
      but it is not meant to supplant traditional crash reporting tools. By
      tracking crashes this way, you can analyze which types of users are impacted
      by crashes and how those crashes affect their engagement. You may also want
      to send messages to users who experience crashes through other messaging
      channels. 


      Like similar events that happen outside of your app itself, our CDP-enabled
      SDKs cannot capture this event automatically. But you might be able to
      capture this kind of event with a callback or a webhook.


      <SchemaDefinition schemaRef="#/components/schemas/app_crashed" />


      # Video events


      ```javascript

      analytics.track('Experiment Viewed', {
        experiment_id: "12345",
        experiment_name: "Homepage Hero",
        variant_id: "67890",
        variant_name: "Hero B"
      })

      ```

      If you send events from a live chat application, we recommend that you use
      events with the names and `properties` specified below. Sending uniform
      events that conform to the schemas defined here ensures that you can use any
      default actions that we set up for destinations that rely on Live Chat
      events—now or with destinations we add in the future.


      ## Video playback started


      When a user presses Play; after the last user action required for playback
      to begin (for example, after user login/authentication).


      <SchemaDefinition schemaRef="#/components/schemas/video_playback_started" />


      ## Video playback paused


      When a user pauses playback.


      <SchemaDefinition schemaRef="#/components/schemas/video_playback_paused" />


      ## Video playback interrupted
        
      When a user is watching a video and playback is interrupted by an error,
      network loss, or buffering. With this event, you can send a `method` to
      indicate the reason for the interruption.


      <SchemaDefinition
      schemaRef="#/components/schemas/video_playback_interrupted" />


      ## Video playback buffer started


      Send this event when playback begins buffering content or an ad.


      <SchemaDefinition
      schemaRef="#/components/schemas/video_playback_buffer_started" />


      ## Video playback buffer completed


      Send this event when buffering finishes.


      <SchemaDefinition
      schemaRef="#/components/schemas/video_playback_buffer_completed" />


      ## Video playback seek started


      Send this event when a user begins seeking to a new position in the video.
      Use `position` to show where the user begins seeking from and
      `seek_position` to capture where the user ends.


      <SchemaDefinition
      schemaRef="#/components/schemas/video_playback_seek_started" />


      ## Video playback seek completed


      After a user manually seeks to a certain position of the content or ad in
      the playback. Pass in the position property to denote where the user desires
      to begin the playback from.


      <SchemaDefinition
      schemaRef="#/components/schemas/video_playback_seek_completed" />


      ## Video playback resumed


      Send this event when a user resumes playback after they previously paused
      playback.


      <SchemaDefinition schemaRef="#/components/schemas/video_playback_resumed" />


      ## Video playback completed


      Send this event when a user finishes a playback session.


      <SchemaDefinition schemaRef="#/components/schemas/video_playback_completed"
      />


      ## Video playback exited


      Send this event when a user navigates away from a playback/stream (scrolls
      out of view, goes to a different page, etc).


      <SchemaDefinition schemaRef="#/components/schemas/video_playback_exited" />


      ## Video content started


      Send this event when a user begins watching a video content within a
      playback session.


      <SchemaDefinition schemaRef="#/components/schemas/video_content_started" />


      ## Video content playing


      Send this event as a heartbeat on a regular interval to track how far into
      the video a person is (indicated by the `position`).


      <SchemaDefinition schemaRef="#/components/schemas/video_content_playing" />


      ## Video content completed


      Send this event when a user finishes watching a video content within a
      playback session—`position` and `total_length` are equal.


      <SchemaDefinition schemaRef="#/components/schemas/video_content_completed"
      />


      ## Video ad started 


      Send this event when a user begins watching an ad within a playback session.


      ## Video ad playing


      Send this event as a heartbeat on a regular interval to track how far into
      the ad a person is (indicated by the `position`).


      <SchemaDefinition schemaRef="#/components/schemas/video_ad_playing" />


      ## Video ad completed


      Send this event when a user finishes watching an ad within a playback
      session—`position` and `total_length` are equal.
  servers:
    - url: https://cdp.customer.io/v1
      description: The base URL for all Data Pipelines calls.
  paths:
    /identify:
      post:
        operationId: identify
        summary: Identify
        description: >
          Identifies a person and assigns `traits` to them.


          In most cases, you'll identify people with a `userId` or an
          `anonymousId`. But when you use Customer.io as a destination, you can
          pass an empty `userId` or `anonymousId`, and identify people by their
          `email` trait.


          **When you use our libraries, you'll typically only provide an ID and
          `traits`. The libraries fill in the rest of the payload automatically.**
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - title: Known User
                    allOf:
                      - type: object
                        required:
                          - userId
                        properties:
                          userId:
                            type: string
                            description: >-
                              The unique identifier for a person. This value
                              should be unique across systems, so you recognize
                              the same person in your sources _and_ destinations.
                            example: 241ma8mf4a
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - identify
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          traits:
                            type: object
                            description: >-
                              Additional properties that you know about a person.
                              We've listed some common/reserved traits below, but
                              you can add any traits that you might use in another
                              system.
                            properties:
                              email:
                                type: string
                                description: >-
                                  A person's email address. In some cases, you can
                                  pass an empty `userId` and we'll use this value
                                  to identify a person.
                              createdAt:
                                type: string
                                format: date-time
                                description: >-
                                  We recommend that you pass date-time values as
                                  ISO 8601 date-time strings. We convert this
                                  value to fit destinations where appropriate.
                            additionalProperties:
                              x-additionalPropertiesName: Additional Traits
                              description: >-
                                Traits that you want to set on a person. These can
                                take any JSON shape.
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                  - title: Anonymous User
                    allOf:
                      - type: object
                        required:
                          - anonymousId
                        properties:
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - identify
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          traits:
                            type: object
                            description: >-
                              Additional properties that you know about a person.
                              We've listed some common/reserved traits below, but
                              you can add any traits that you might use in another
                              system.
                            properties:
                              email:
                                type: string
                                description: >-
                                  A person's email address. In some cases, you can
                                  pass an empty `userId` and we'll use this value
                                  to identify a person.
                              createdAt:
                                type: string
                                format: date-time
                                description: >-
                                  We recommend that you pass date-time values as
                                  ISO 8601 date-time strings. We convert this
                                  value to fit destinations where appropriate.
                            additionalProperties:
                              x-additionalPropertiesName: Additional Traits
                              description: >-
                                Traits that you want to set on a person. These can
                                take any JSON shape.
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                example:
                  type: identify
                  traits:
                    name: Cool Person
                    email: cool.person@example.com
                    likes_baseball: true
                    games_attended: 5
                  userId: 97980cfea0067
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/identify \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw '
                {
                    "userId": "97980cfea0067",
                    "traits": {
                        "name": "Cool Person",
                        "email": "cool.person@example.com",
                        "likes_baseball": true,
                        "games_attended": 5
                    }
                }'
          - lang: javascript
            label: JavaScript
            source: |
              analytics.identify("97980cfea0067", {
                name: "Cool Person",
                email: "cool.person@example.com",
                likes_baseball: true,
                games_attended: 5
              });
          - lang: javascript
            label: NodeJS
            source: |
              analytics.identify({
                userId: '019mr8mf4r',
                traits: {
                  name: 'Cool Person',
                  email: 'cool.person@example.com',
                  plan: 'Enterprise',
                  friends: 42
                }
              });
          - lang: python
            label: Python
            source: |
              analytics.identify('f4ca124298', {
                email: 'cool.person@example.com'
                first_name: 'cool',
                last_name: 'person'
              })
          - lang: go
            label: Go
            source: |
              client.Enqueue(analytics.Identify{
                UserId: "019mr8mf4r",
                Traits: analytics.NewTraits().
                  SetName("Cool Person").
                  SetEmail("cool.person@example.com").
                  Set("plan", "Enterprise").
                  Set("fav_number", 42),
              })
        responses:
          '200':
            description: A successful request returns an empty object response.
    /track:
      post:
        operationId: track
        summary: Track
        description: >
          Send an event associated with a person. The `track` call is how you
          record the things that people do on your website or in your app.


          With each event, you'll send an event name, and a dictionary of
          properties that you want to record for the event. For example, if
          someone added a product to a cart, you might call your event
          `added_to_cart` with properties about the item added the the cart,
          quantity, price, etc.


          **When you use our libraries, you'll typically only provide an `event`,
          an ID for the person, and `properties`. The libraries fill in the rest
          of the payload automatically.**
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - title: Known User
                    allOf:
                      - type: object
                        required:
                          - userId
                          - event
                          - type
                        properties:
                          userId:
                            type: string
                            description: >-
                              The unique identifier for a person. This value
                              should be unique across systems, so you recognize
                              the same person in your sources _and_ destinations.
                            example: 241ma8mf4a
                          type:
                            type: string
                            enum:
                              - track
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          event:
                            type: string
                            description: The name of the event
                            example: new_account
                          properties:
                            type: object
                            description: Additional properties for your event.
                            additionalProperties:
                              x-additionalPropertiesName: Event Properties
                              description: >-
                                Additional properties that you want to capture in
                                the event. These can take any JSON shape.
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                  - title: Anonymous User
                    allOf:
                      - type: object
                        required:
                          - event
                          - type
                          - anonymousId
                        properties:
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - track
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          event:
                            type: string
                            description: The name of the event
                            example: new_account
                          properties:
                            type: object
                            description: Additional properties for your event.
                            additionalProperties:
                              x-additionalPropertiesName: Event Properties
                              description: >-
                                Additional properties that you want to capture in
                                the event. These can take any JSON shape.
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                  - title: Group
                    allOf:
                      - type: object
                        required:
                          - event
                          - type
                          - groupId
                        properties:
                          groupId:
                            type: string
                            description: >-
                              The ID of the group you want to attribute an event
                              to. Note that not all destinations allow groups (or
                              their downstream equivalent) to perform groups.
                          type:
                            type: string
                            enum:
                              - track
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          event:
                            type: string
                            description: The name of the event
                            example: new_account
                          properties:
                            type: object
                            description: Additional properties for your event.
                            additionalProperties:
                              x-additionalPropertiesName: Event Properties
                              description: >-
                                Additional properties that you want to capture in
                                the event. These can take any JSON shape.
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                example:
                  anonymousId: 23adfd82-aa0f-45a7-a756-24f2a7a4c895
                  context:
                    library:
                      name: analytics.js
                      version: 2.11.1
                    page:
                      path: /docs/
                      referrer: https://www.google.com/
                      search: '?q=analytics'
                      title: Customer.io Docs
                      url: https://customer.io/docs
                    userAgent: >-
                      Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_0)
                      AppleWebKit/537.36 (KHTML like Gecko) Chrome/46.0.2490.86
                      Safari/537.36
                    ip: 108.0.78.21
                  event: Course Started
                  integrations: null
                  messageId: ajs-f8ca1e4de5024d9430b3928bd8ac6b96
                  properties:
                    title: Intro to Customer.io
                  receivedAt: '2015-12-12T19:11:01.266Z'
                  sentAt: '2015-12-12T19:11:01.169Z'
                  timestamp: '2015-12-12T19:11:01.249Z'
                  type: track
                  userId: AiUGstSDIg
                  originalTimestamp: '2015-12-12T19:11:01.152Z'
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/track \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw '
                {
                    "userId": "97980cfea0067",
                    "event": "Course Started",
                    "properties": {
                        "title": "Intro to Customer.io"
                    }
                }'
          - lang: javascript
            label: JavaScript
            source: |
              analytics.track("video_watched", {
                video_name: "Cool New Video"
                length: 1.56
                speed: 1.25
                finished: false
              });
          - lang: javascript
            label: NodeJS
            source: |
              analytics.track({
                userId: '019mr8mf4r',
                event: 'added_to_cart',
                properties: {
                  product: "shoes",
                  revenue: 39.95,
                  qty: 1
                  size: 9
                }
              });
          - lang: python
            label: Python
            source: |
              analytics.track('f4ca124298', 'class_started', {
                title: 'How to use Customer.io',
                progress: '2%',
                category: 'getting started'
              })
          - lang: go
            label: Go
            source: |
              client.Enqueue(analytics.Track{
                UserId: "f4ca124298",
                Event:  "added_to_cart",
                Properties: analytics.NewProperties().
                  Set("product", "shoes"),
                  Set("price", 39.95),
              })
        responses:
          '200':
            description: A successful request returns an empty object response.
    /page:
      post:
        operationId: page
        summary: Page
        description: >
          Sends a page view event. If you use our JavaScript source, it
          automatically records `page` events whenever it loads (every page). If
          you use a single-page app, you'll need to call the `page` method people
          change routes.


          The request consists of the page `name` and additional properties about
          the page.


          If you use our JavaScript library, the page name and URL are
          automatically gathered and passed as event properties.


          **When you use our libraries, you'll typically only provide a user
          ID/anonymous ID and the `name` of the page. The libraries fill in the
          rest of the payload automatically.** 
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - title: Known User
                    allOf:
                      - type: object
                        required:
                          - userId
                        properties:
                          userId:
                            type: string
                            description: >-
                              The unique identifier for a person. This value
                              should be unique across systems, so you recognize
                              the same person in your sources _and_ destinations.
                            example: 241ma8mf4a
                          type:
                            type: string
                            enum:
                              - page
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          name:
                            type: string
                            description: The name of the page.
                            example: home
                          properties:
                            type: object
                            description: >-
                              Additional `page` properties. Analytics.js
                              automatically collects `url`, `title`, `referrer`,
                              `path`, and `search` properties. But, if you use our
                              other sources or you write your own integration, you
                              should consider sending these properties yourself.
                              Destination actions that take `page` events often
                              rely on the `url` and `title` properties.
                            properties:
                              category:
                                type: string
                                description: >-
                                  The category of the page. This might be useful
                                  if you have a single page routes or have a
                                  flattened URL structure.
                              url:
                                type: string
                                description: >-
                                  The URL of the page. This defaults to a
                                  canonical url if available, and falls back to
                                  `document.location.href`.
                                example: http://www.example.com/page/
                              title:
                                type: string
                                description: >-
                                  The title of the page. This defaults to
                                  `document.title`, but can be overridden.
                                example: Page | Example.com
                              referrer:
                                type: string
                                description: >-
                                  The referrer of the page, if applicable. This
                                  defaults to `document.referrer`, but can be
                                  overridden.
                                example: http://www.google.com/search?q=example
                              path:
                                type: string
                                description: >-
                                  The path of the page. This defaults to
                                  `location.pathname`, but can be overridden.
                                example: /page
                              search:
                                type: string
                                description: >-
                                  The search query in the URL, if present. This
                                  defaults to `location.search`, but can be
                                  overridden.
                                example: '?q=sfgiants'
                            additionalProperties:
                              x-additionalPropertiesName: Page Properties
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                title: Non-mobile
                                allOf:
                                  - type: object
                                    description: >-
                                      Contains contextual information about the
                                      event.
                                    properties:
                                      active:
                                        type: boolean
                                        description: >
                                          Whether a user is active.


                                          This is usually used to flag an
                                          .identify() call to just update the
                                          traits but not “last seen.”
                                      ip:
                                        type: string
                                        description: >-
                                          The user's IP address. This isn't
                                          captured by our libraries, but by our
                                          servers when we receive client-side
                                          events (like from our JavaScript
                                          source).
                                      locale:
                                        type: string
                                        description: >-
                                          The local string for the current user,
                                          e.g. `en-US`.
                                      userAgent:
                                        type: string
                                        description: >-
                                          The user agent of the device making the
                                          request
                                      channel:
                                        type: string
                                        enum:
                                          - browser
                                          - server
                                          - mobile
                                        description: The channel the event originated from.
                                  - type: object
                                    properties:
                                      campaign:
                                        type: object
                                        description: >
                                          Contains information about the campaign
                                          that resulted in the API call, gathered
                                          from, or mapping to, UTM parameters
                                          (e.g. `utm_source`).
                                        properties:
                                          name:
                                            type: string
                                            description: The campaign name.
                                          source:
                                            type: string
                                            description: >-
                                              The source of traffic—like the name of
                                              your email list, Facebook, Google, etc.
                                          medium:
                                            type: string
                                            description: >-
                                              The type of traffic a person/event
                                              originates from, like `email`, or
                                              `referral`.
                                          term:
                                            type: string
                                            description: The keyword term(s) a user came from.
                                          content:
                                            type: string
                                        additionalProperties:
                                          type: string
                                          x-additionalPropertiesName: Additional UTM Parameters
                                      page:
                                        type: object
                                        description: >-
                                          Contains information about the current
                                          page in the browser. This is
                                          automatically collected by our
                                          JavaScript source.
                                        properties:
                                          name:
                                            type: string
                                            description: >
                                              The name of the page. Reserved for
                                              future use.
                                          path:
                                            type: string
                                            description: >-
                                              The path portion of the page's URL.
                                              Equivalent to the canonical `path` 
                                              which defaults to `location.pathname` 
                                              from the DOM API.
                                          referrer:
                                            type: string
                                            description: >-
                                              The previous page's full URL. Equivalent
                                              to `document.referrer`  from the DOM
                                              API.
                                          search:
                                            type: string
                                            description: >-
                                              The query string portion of the page's
                                              URL. Equivalent to `location.search` 
                                              from the DOM API.
                                          title:
                                            type: string
                                            description: >-
                                              The page's title. Equivalent to
                                              `document.title` from the DOM API.
                                          url:
                                            type: string
                                            description: >-
                                              A page's full URL. Segment first looks
                                              for the canonical URL. If the canonical
                                              URL is not provided, Segment uses
                                              `location.href` from the DOM API.
                                          keywords:
                                            type: array
                                            description: >-
                                              A list/array of keywords describing the
                                              page's content. The keywords are likely
                                              the same as, or similar to, the keywords
                                              you would find in an HTML `meta`  tag
                                              for SEO purposes. This property is
                                              mainly used by content publishers that
                                              rely heavily on pageview tracking. This
                                              isn't automatically collected.
                                            items:
                                              type: string
                  - title: Anonymous User
                    allOf:
                      - type: object
                        required:
                          - anonymousId
                        properties:
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - page
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          name:
                            type: string
                            description: The name of the page.
                            example: home
                          properties:
                            type: object
                            description: Additional properties for your event.
                            properties:
                              category:
                                type: string
                                description: >-
                                  The category of the page. This might be useful
                                  if you have a single page routes or have a
                                  flattened URL structure.
                              url:
                                type: string
                                description: The URL of the page.
                              title:
                                type: string
                                description: >-
                                  The title of the page. This defaults to
                                  `document.title`, but can be overridden.
                                example: Page | Example.com
                              referrer:
                                type: string
                                description: >-
                                  The referrer of the page, if applicable. This
                                  defaults to document.referrer, but can be
                                  overridden.
                                example: http://www.google.com/search?q=example
                              path:
                                type: string
                                description: >-
                                  The path of the page. This defaults to
                                  location.pathname, but can be overridden.
                                example: /page
                              search:
                                type: string
                                description: >-
                                  The search query in the URL, if present. This
                                  defaults to location.search, but can be
                                  overridden.
                                example: '?q=sfgiants'
                            additionalProperties:
                              x-additionalPropertiesName: Page Properties
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                title: Non-mobile
                                allOf:
                                  - type: object
                                    description: >-
                                      Contains contextual information about the
                                      event.
                                    properties:
                                      active:
                                        type: boolean
                                        description: >
                                          Whether a user is active.


                                          This is usually used to flag an
                                          .identify() call to just update the
                                          traits but not “last seen.”
                                      ip:
                                        type: string
                                        description: >-
                                          The user's IP address. This isn't
                                          captured by our libraries, but by our
                                          servers when we receive client-side
                                          events (like from our JavaScript
                                          source).
                                      locale:
                                        type: string
                                        description: >-
                                          The local string for the current user,
                                          e.g. `en-US`.
                                      userAgent:
                                        type: string
                                        description: >-
                                          The user agent of the device making the
                                          request
                                      channel:
                                        type: string
                                        enum:
                                          - browser
                                          - server
                                          - mobile
                                        description: The channel the event originated from.
                                  - type: object
                                    properties:
                                      campaign:
                                        type: object
                                        description: >
                                          Contains information about the campaign
                                          that resulted in the API call, gathered
                                          from, or mapping to, UTM parameters
                                          (e.g. `utm_source`).
                                        properties:
                                          name:
                                            type: string
                                            description: The campaign name.
                                          source:
                                            type: string
                                            description: >-
                                              The source of traffic—like the name of
                                              your email list, Facebook, Google, etc.
                                          medium:
                                            type: string
                                            description: >-
                                              The type of traffic a person/event
                                              originates from, like `email`, or
                                              `referral`.
                                          term:
                                            type: string
                                            description: The keyword term(s) a user came from.
                                          content:
                                            type: string
                                        additionalProperties:
                                          type: string
                                          x-additionalPropertiesName: Additional UTM Parameters
                                      page:
                                        type: object
                                        description: >-
                                          Contains information about the current
                                          page in the browser. This is
                                          automatically collected by our
                                          JavaScript source.
                                        properties:
                                          name:
                                            type: string
                                            description: >
                                              The name of the page. Reserved for
                                              future use.
                                          path:
                                            type: string
                                            description: >-
                                              The path portion of the page's URL.
                                              Equivalent to the canonical `path` 
                                              which defaults to `location.pathname` 
                                              from the DOM API.
                                          referrer:
                                            type: string
                                            description: >-
                                              The previous page's full URL. Equivalent
                                              to `document.referrer`  from the DOM
                                              API.
                                          search:
                                            type: string
                                            description: >-
                                              The query string portion of the page's
                                              URL. Equivalent to `location.search` 
                                              from the DOM API.
                                          title:
                                            type: string
                                            description: >-
                                              The page's title. Equivalent to
                                              `document.title` from the DOM API.
                                          url:
                                            type: string
                                            description: >-
                                              A page's full URL. Segment first looks
                                              for the canonical URL. If the canonical
                                              URL is not provided, Segment uses
                                              `location.href` from the DOM API.
                                          keywords:
                                            type: array
                                            description: >-
                                              A list/array of keywords describing the
                                              page's content. The keywords are likely
                                              the same as, or similar to, the keywords
                                              you would find in an HTML `meta`  tag
                                              for SEO purposes. This property is
                                              mainly used by content publishers that
                                              rely heavily on pageview tracking. This
                                              isn't automatically collected.
                                            items:
                                              type: string
                example:
                  anonymousId: 507f191e810c19729de860ea
                  channel: browser
                  context:
                    ip: 8.8.8.8
                    userAgent: >-
                      Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5)
                      AppleWebKit/537.36 (KHTML like Gecko) Chrome/40.0.2214.115
                      Safari/537.36
                  integrations:
                    All: true
                    Mixpanel: false
                    Salesforce: false
                  messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db
                  name: Home
                  properties:
                    title: Welcome | ACME, Inc.
                    url: http://www.example.com
                  receivedAt: '2015-02-23T22:28:55.387Z'
                  sentAt: '2015-02-23T22:28:55.111Z'
                  timestamp: '2015-02-23T22:28:55.111Z'
                  type: page
                  userId: 97980cfea0067
                  version: 1.1
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/page \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw '
                {
                    "userId": "f4ca124298",
                    "name": "Home",
                    "properties": {
                        "title": "Welcome | ACME, Inc.",
                        "url": "http://www.example.com"
                    }
                }'
          - lang: javascript
            label: JavaScript
            source: |
              analytics.page("Retail Page","shoes", {
                affiliate: "Pro annual",
                accountType: "Facebook"
              });
          - lang: javascript
            label: NodeJS
            source: |
              analytics.page({
                userId: '019mr8mf4r',
                category: 'Docs',
                name: 'Customer.io Data Pipelines',
                properties: {
                  url: 'https://customer.io/docs/cdp/',
                  path: '/docs/cdp/',
                  title: 'Customer.io Data Pipelines',
                  referrer: 'https://customer.io'
                }
              });
          - lang: python
            label: Python
            source: |
              analytics.page('<user_id>', 'Retail Page', 'shoes', {
                  'url': 'https://example.com/products/showes'
              })
          - lang: go
            label: Go
            source: |
              client.Enqueue(analytics.Page{
                UserId: "f4ca124298",
                Name:   "Customer.io Data Pipelines",
                Category: "Docs",
                Properties: analytics.NewProperties().
                  SetURL("https://customer.io/docs/cdp/"),
              })
        responses:
          '200':
            description: A successful request returns an empty object response.
    /screen:
      post:
        operationId: screen
        summary: Screen
        description: >
          Sends a screen view event for mobile devices. Screen events help you
          understand the screens that people use in your app. You should send a
          screen call whenever a user requests a page of your app.
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - title: Known User
                    allOf:
                      - type: object
                        required:
                          - userId
                        properties:
                          userId:
                            type: string
                            description: >-
                              The unique identifier for a person. This value
                              should be unique across systems, so you recognize
                              the same person in your sources _and_ destinations.
                            example: 241ma8mf4a
                          type:
                            type: string
                            enum:
                              - screen
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          name:
                            type: string
                            description: The name of the screen the person visited.
                            example: home
                          properties:
                            type: object
                            description: Additional properties for your screen.
                            additionalProperties:
                              x-additionalPropertiesName: Screen Properties
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                title: Mobile
                                allOf:
                                  - type: object
                                    description: >-
                                      Contains contextual information about the
                                      event.
                                    properties:
                                      active:
                                        type: boolean
                                        description: >
                                          Whether a user is active.


                                          This is usually used to flag an
                                          .identify() call to just update the
                                          traits but not “last seen.”
                                      ip:
                                        type: string
                                        description: >-
                                          The user's IP address. This isn't
                                          captured by our libraries, but by our
                                          servers when we receive client-side
                                          events (like from our JavaScript
                                          source).
                                      locale:
                                        type: string
                                        description: >-
                                          The local string for the current user,
                                          e.g. `en-US`.
                                      userAgent:
                                        type: string
                                        description: >-
                                          The user agent of the device making the
                                          request
                                      channel:
                                        type: string
                                        enum:
                                          - browser
                                          - server
                                          - mobile
                                        description: The channel the event originated from.
                                  - type: object
                                    description: >-
                                      Fields included in events from mobile
                                      libraries.
                                    properties:
                                      app:
                                        type: object
                                        description: >
                                          Contains information about the mobile
                                          app the event originated from,
                                          automatically collected by our mobile
                                          libraries when possible.
                                        properties:
                                          name:
                                            type: string
                                            description: The name of the app.
                                          version:
                                            type: string
                                            description: >-
                                              The version of the app the call
                                              originated from.
                                          build:
                                            type: string
                                            description: The specific build number in the app.
                                          namespace:
                                            type: string
                                            description: The app's namespace.
                                      device:
                                        type: object
                                        description: >
                                          Contains information about the device
                                          the event originated from.
                                        properties:
                                          id:
                                            type: string
                                            description: The device ID.
                                          advertisingId:
                                            type: string
                                            description: >-
                                              The advertising ID is a unique,
                                              anonymous ID for advertising.
                                          manufacturer:
                                            type: string
                                            description: The device manufacturer.
                                          model:
                                            type: string
                                            description: The device model.
                                          name:
                                            type: string
                                            description: The device name.
                                          type:
                                            type: string
                                            description: The device type—android, iOS, etc.
                                            enum:
                                              - android
                                              - ios
                                          version:
                                            type: string
                                            description: The firmware version for the device.
                                      network:
                                        type: object
                                        description: >-
                                          Information about the current network
                                          connection, containing `bluetooth`,
                                          `carrier`, `cellular`, and `wifi`. If
                                          the `context.network.cellular` and
                                          `context.network.wifi` fields are empty,
                                          then the user is offline.
                                        properties:
                                          bluetooth:
                                            type: boolean
                                            description: >-
                                              Lets you know if bluetooth is enabled on
                                              a device.
                                          carrier:
                                            type: string
                                            description: The cellular carrier the phone uses.
                                          cellular:
                                            type: boolean
                                            description: >-
                                              Indicates whether the device's cellular
                                              connection is enabled or not.
                                          wifi:
                                            type: boolean
                                            description: >-
                                              Indicates whether a device's wifi
                                              connection is enabled or not.
                                      os:
                                        type: object
                                        description: >
                                          Dictionary of information about the
                                          operating system, containing `name` and
                                          `version`.
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              The operating system running on the
                                              device.
                                          version:
                                            type: string
                                            description: >-
                                              The version of the OS running on the
                                              device.
                  - title: Anonymous User
                    allOf:
                      - type: object
                        required:
                          - anonymousId
                        properties:
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - screen
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                          name:
                            type: string
                            description: The name of the screen the person visited.
                            example: home
                          properties:
                            type: object
                            description: Additional properties for your screen.
                            additionalProperties:
                              x-additionalPropertiesName: Screen Properties
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                title: Mobile
                                allOf:
                                  - type: object
                                    description: >-
                                      Contains contextual information about the
                                      event.
                                    properties:
                                      active:
                                        type: boolean
                                        description: >
                                          Whether a user is active.


                                          This is usually used to flag an
                                          .identify() call to just update the
                                          traits but not “last seen.”
                                      ip:
                                        type: string
                                        description: >-
                                          The user's IP address. This isn't
                                          captured by our libraries, but by our
                                          servers when we receive client-side
                                          events (like from our JavaScript
                                          source).
                                      locale:
                                        type: string
                                        description: >-
                                          The local string for the current user,
                                          e.g. `en-US`.
                                      userAgent:
                                        type: string
                                        description: >-
                                          The user agent of the device making the
                                          request
                                      channel:
                                        type: string
                                        enum:
                                          - browser
                                          - server
                                          - mobile
                                        description: The channel the event originated from.
                                  - type: object
                                    description: >-
                                      Fields included in events from mobile
                                      libraries.
                                    properties:
                                      app:
                                        type: object
                                        description: >
                                          Contains information about the mobile
                                          app the event originated from,
                                          automatically collected by our mobile
                                          libraries when possible.
                                        properties:
                                          name:
                                            type: string
                                            description: The name of the app.
                                          version:
                                            type: string
                                            description: >-
                                              The version of the app the call
                                              originated from.
                                          build:
                                            type: string
                                            description: The specific build number in the app.
                                          namespace:
                                            type: string
                                            description: The app's namespace.
                                      device:
                                        type: object
                                        description: >
                                          Contains information about the device
                                          the event originated from.
                                        properties:
                                          id:
                                            type: string
                                            description: The device ID.
                                          advertisingId:
                                            type: string
                                            description: >-
                                              The advertising ID is a unique,
                                              anonymous ID for advertising.
                                          manufacturer:
                                            type: string
                                            description: The device manufacturer.
                                          model:
                                            type: string
                                            description: The device model.
                                          name:
                                            type: string
                                            description: The device name.
                                          type:
                                            type: string
                                            description: The device type—android, iOS, etc.
                                            enum:
                                              - android
                                              - ios
                                          version:
                                            type: string
                                            description: The firmware version for the device.
                                      network:
                                        type: object
                                        description: >-
                                          Information about the current network
                                          connection, containing `bluetooth`,
                                          `carrier`, `cellular`, and `wifi`. If
                                          the `context.network.cellular` and
                                          `context.network.wifi` fields are empty,
                                          then the user is offline.
                                        properties:
                                          bluetooth:
                                            type: boolean
                                            description: >-
                                              Lets you know if bluetooth is enabled on
                                              a device.
                                          carrier:
                                            type: string
                                            description: The cellular carrier the phone uses.
                                          cellular:
                                            type: boolean
                                            description: >-
                                              Indicates whether the device's cellular
                                              connection is enabled or not.
                                          wifi:
                                            type: boolean
                                            description: >-
                                              Indicates whether a device's wifi
                                              connection is enabled or not.
                                      os:
                                        type: object
                                        description: >
                                          Dictionary of information about the
                                          operating system, containing `name` and
                                          `version`.
                                        properties:
                                          name:
                                            type: string
                                            description: >-
                                              The operating system running on the
                                              device.
                                          version:
                                            type: string
                                            description: >-
                                              The version of the OS running on the
                                              device.
                example:
                  anonymousId: 507f191e810c19729de860ea
                  context:
                    ip: 8.8.8.8
                  integrations:
                    All: true
                    Salesforce: false
                  messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db
                  name: feed
                  properties:
                    subscriptions:
                      - baseball
                      - basketball
                  receivedAt: '2015-02-23T22:28:55.387Z'
                  sentAt: '2015-02-23T22:28:55.111Z'
                  timestamp: '2015-02-23T22:28:55.111Z'
                  type: screen
                  userId: 97980cfea0067
                  version: 1.1
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/screen \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw '
                {
                    "userId": "f4ca124298",
                    "name": "feed",
                    "properties": {
                        "subscriptions": [
                            "baseball",
                            "basketball"
                        ]
                    }
                }'        
        responses:
          '200':
            description: A successful request returns an empty object response.
    /group:
      post:
        operationId: group
        summary: Group
        description: >
          Group calls add people to a group. Groups could be a companies,
          accounts, online classes, and so on. How groups are represented in your
          destination depends on the destination. Some destinations have concepts
          of "groups"; Customer.io's destination calls groups "objects."


          **When you use our libraries, you'll typically only provide an ID for
          the user, the `groupId`, and `traits`. The libraries fill in the rest of
          the payload automatically.**
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - title: Known User
                    allOf:
                      - type: object
                        properties:
                          userId:
                            type: string
                            description: >-
                              The unique identifier for a person. This value
                              should be unique across systems, so you recognize
                              the same person in your sources _and_ destinations.
                            example: 241ma8mf4a
                          type:
                            type: string
                            enum:
                              - group
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                            example: group
                          groupId:
                            type: string
                            description: ID of the group
                            example: 0e8c78ea9d97a7b8185e8632
                          objectTypeId:
                            type: string
                            description: >
                              If you use Customer.io Journeys as a destination,
                              this value is the type of group/object your group
                              belongs to; object type IDs are stringified
                              integers. If you don't include this value, we assume
                              the object type ID is `1`. See [objects in
                              Customer.io
                              Journeys](https://customer.io/docs/api/cdp/) for
                              more information.


                              You can include this value as `objectTypeId` at the
                              top level of your payload or as `object_type_id` in
                              the `traits` object.
                            example: '1'
                          traits:
                            type: object
                            description: Additional information about the group.
                            properties:
                              object_type_id:
                                type: string
                                description: >
                                  If you use Customer.io Journeys as a
                                  destination, this value is the type of
                                  group/object your group belongs to; object type
                                  IDs are stringified integers. If you don't
                                  include this value, we assume the object type ID
                                  is `1`. See [objects in Customer.io
                                  Journeys](https://customer.io/docs/api/cdp/) for
                                  more information.


                                  You can include this value as `objectTypeId` at
                                  the top level of your payload or as
                                  `object_type_id` in the `traits` object.
                                example: '1'
                            additionalProperties:
                              x-additionalPropertiesName: Group Traits
                              example:
                                name: Acme
                                industry: Technology
                                road_runner_accidents: 329,
                                plan: enterprise,
                                total_billed: 830
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                  - title: Anonymous User
                    allOf:
                      - type: object
                        properties:
                          anonymousId:
                            type: string
                            description: >-
                              A unique substitute for a User ID in cases when you
                              don’t have an absolutely unique identifier. Our
                              libraries generate this value automatically to help
                              you track people before they sign up, log in,
                              provide their email, etc.
                            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                          type:
                            type: string
                            enum:
                              - group
                            description: >-
                              The event type. This is set automatically by the
                              request method/endpoint.
                            example: group
                          groupId:
                            type: string
                            description: ID of the group
                            example: 0e8c78ea9d97a7b8185e8632
                          objectTypeId:
                            type: string
                            description: >
                              If you use Customer.io Journeys as a destination,
                              this value is the type of group/object your group
                              belongs to; object type IDs are stringified
                              integers. If you don't include this value, we assume
                              the object type ID is `1`. See [objects in
                              Customer.io
                              Journeys](https://customer.io/docs/api/cdp/) for
                              more information.


                              You can include this value as `objectTypeId` at the
                              top level of your payload or as `object_type_id` in
                              the `traits` object.
                            example: '1'
                          traits:
                            type: object
                            description: Additional information about the group.
                            properties:
                              object_type_id:
                                type: string
                                description: >
                                  If you use Customer.io Journeys as a
                                  destination, this value is the type of
                                  group/object your group belongs to; object type
                                  IDs are stringified integers. If you don't
                                  include this value, we assume the object type ID
                                  is `1`. See [objects in Customer.io
                                  Journeys](https://customer.io/docs/api/cdp/) for
                                  more information.


                                  You can include this value as `objectTypeId` at
                                  the top level of your payload or as
                                  `object_type_id` in the `traits` object.
                                example: '1'
                            additionalProperties:
                              x-additionalPropertiesName: Group Traits
                              example:
                                name: Acme
                                industry: Technology
                                road_runner_accidents: 329,
                                plan: enterprise,
                                total_billed: 830
                      - allOf:
                          - type: object
                            properties:
                              integrations:
                                type: object
                                description: >
                                  Contains a list of booleans indicating the
                                  integrations that are enabled (true) or disabled
                                  (false). By default, all integrations are
                                  enabled (returning an empty object). Set `"All":
                                  false` to reverse this behavior.
                                additionalProperties:
                                  type: boolean
                                  x-additionalPropertiesName: Enabled/Disabled integrations
                                example:
                                  All: true
                                  Salesforce: false
                              messageId:
                                type: string
                                description: >-
                                  A unique identifier for a Data Pipelines call,
                                  ensuring that each individual event is unique.
                                  This is set by Customer.io
                              receivedAt:
                                type: string
                                format: date-time
                                readOnly: true
                                description: >-
                                  The ISO-8601 timestamp when Data Pipelines
                                  receives an event.
                              sentAt:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when a library sends an
                                  event to Data Pipelines.
                              originalTimestamp:
                                type: string
                                format: date-time
                              timestamp:
                                type: string
                                format: date-time
                                description: >-
                                  The ISO-8601 timestamp when the event originally
                                  took place. This is mostly useful when you
                                  backfill data past events. If you're not
                                  backfilling data, you can leave this field empty
                                  and we'll use the current time or server time.
                              type:
                                readOnly: true
                                type: string
                                enum:
                                  - identify
                                  - group
                                  - track
                                  - page
                                  - screen
                                  - alias
                                description: >-
                                  The type of source event. This is implicit and
                                  set by Customer.io based on the endpoint/method
                                  you use (e.g. `identify`).
                              version:
                                readOnly: true
                                type: number
                                description: >-
                                  The version of the API that received the event,
                                  automatically set by Customer.io.
                          - type: object
                            properties:
                              context:
                                description: >-
                                  A dictionary of context about a source
                                  call/event, like the user’s IP address or
                                  locale. Context is automatically collected by
                                  our source libraries.
                                oneOf:
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Non-mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        properties:
                                          campaign:
                                            type: object
                                            description: >
                                              Contains information about the campaign
                                              that resulted in the API call, gathered
                                              from, or mapping to, UTM parameters
                                              (e.g. `utm_source`).
                                            properties:
                                              name:
                                                type: string
                                                description: The campaign name.
                                              source:
                                                type: string
                                                description: >-
                                                  The source of traffic—like the name of
                                                  your email list, Facebook, Google, etc.
                                              medium:
                                                type: string
                                                description: >-
                                                  The type of traffic a person/event
                                                  originates from, like `email`, or
                                                  `referral`.
                                              term:
                                                type: string
                                                description: The keyword term(s) a user came from.
                                              content:
                                                type: string
                                            additionalProperties:
                                              type: string
                                              x-additionalPropertiesName: Additional UTM Parameters
                                          page:
                                            type: object
                                            description: >-
                                              Contains information about the current
                                              page in the browser. This is
                                              automatically collected by our
                                              JavaScript source.
                                            properties:
                                              name:
                                                type: string
                                                description: >
                                                  The name of the page. Reserved for
                                                  future use.
                                              path:
                                                type: string
                                                description: >-
                                                  The path portion of the page's URL.
                                                  Equivalent to the canonical `path` 
                                                  which defaults to `location.pathname` 
                                                  from the DOM API.
                                              referrer:
                                                type: string
                                                description: >-
                                                  The previous page's full URL. Equivalent
                                                  to `document.referrer`  from the DOM
                                                  API.
                                              search:
                                                type: string
                                                description: >-
                                                  The query string portion of the page's
                                                  URL. Equivalent to `location.search` 
                                                  from the DOM API.
                                              title:
                                                type: string
                                                description: >-
                                                  The page's title. Equivalent to
                                                  `document.title` from the DOM API.
                                              url:
                                                type: string
                                                description: >-
                                                  A page's full URL. Segment first looks
                                                  for the canonical URL. If the canonical
                                                  URL is not provided, Segment uses
                                                  `location.href` from the DOM API.
                                              keywords:
                                                type: array
                                                description: >-
                                                  A list/array of keywords describing the
                                                  page's content. The keywords are likely
                                                  the same as, or similar to, the keywords
                                                  you would find in an HTML `meta`  tag
                                                  for SEO purposes. This property is
                                                  mainly used by content publishers that
                                                  rely heavily on pageview tracking. This
                                                  isn't automatically collected.
                                                items:
                                                  type: string
                                  - description: >-
                                      A dictionary of context about a source
                                      call/event, like the user’s IP address or
                                      locale. Context is automatically collected
                                      by our source libraries.
                                    title: Mobile
                                    allOf:
                                      - type: object
                                        description: >-
                                          Contains contextual information about
                                          the event.
                                        properties:
                                          active:
                                            type: boolean
                                            description: >
                                              Whether a user is active.


                                              This is usually used to flag an
                                              .identify() call to just update the
                                              traits but not “last seen.”
                                          ip:
                                            type: string
                                            description: >-
                                              The user's IP address. This isn't
                                              captured by our libraries, but by our
                                              servers when we receive client-side
                                              events (like from our JavaScript
                                              source).
                                          locale:
                                            type: string
                                            description: >-
                                              The local string for the current user,
                                              e.g. `en-US`.
                                          userAgent:
                                            type: string
                                            description: >-
                                              The user agent of the device making the
                                              request
                                          channel:
                                            type: string
                                            enum:
                                              - browser
                                              - server
                                              - mobile
                                            description: The channel the event originated from.
                                      - type: object
                                        description: >-
                                          Fields included in events from mobile
                                          libraries.
                                        properties:
                                          app:
                                            type: object
                                            description: >
                                              Contains information about the mobile
                                              app the event originated from,
                                              automatically collected by our mobile
                                              libraries when possible.
                                            properties:
                                              name:
                                                type: string
                                                description: The name of the app.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the app the call
                                                  originated from.
                                              build:
                                                type: string
                                                description: The specific build number in the app.
                                              namespace:
                                                type: string
                                                description: The app's namespace.
                                          device:
                                            type: object
                                            description: >
                                              Contains information about the device
                                              the event originated from.
                                            properties:
                                              id:
                                                type: string
                                                description: The device ID.
                                              advertisingId:
                                                type: string
                                                description: >-
                                                  The advertising ID is a unique,
                                                  anonymous ID for advertising.
                                              manufacturer:
                                                type: string
                                                description: The device manufacturer.
                                              model:
                                                type: string
                                                description: The device model.
                                              name:
                                                type: string
                                                description: The device name.
                                              type:
                                                type: string
                                                description: The device type—android, iOS, etc.
                                                enum:
                                                  - android
                                                  - ios
                                              version:
                                                type: string
                                                description: The firmware version for the device.
                                          network:
                                            type: object
                                            description: >-
                                              Information about the current network
                                              connection, containing `bluetooth`,
                                              `carrier`, `cellular`, and `wifi`. If
                                              the `context.network.cellular` and
                                              `context.network.wifi` fields are empty,
                                              then the user is offline.
                                            properties:
                                              bluetooth:
                                                type: boolean
                                                description: >-
                                                  Lets you know if bluetooth is enabled on
                                                  a device.
                                              carrier:
                                                type: string
                                                description: The cellular carrier the phone uses.
                                              cellular:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the device's cellular
                                                  connection is enabled or not.
                                              wifi:
                                                type: boolean
                                                description: >-
                                                  Indicates whether a device's wifi
                                                  connection is enabled or not.
                                          os:
                                            type: object
                                            description: >
                                              Dictionary of information about the
                                              operating system, containing `name` and
                                              `version`.
                                            properties:
                                              name:
                                                type: string
                                                description: >-
                                                  The operating system running on the
                                                  device.
                                              version:
                                                type: string
                                                description: >-
                                                  The version of the OS running on the
                                                  device.
                example:
                  anonymousId: 507f191e810c19729de860ea,
                  channel: browser,
                  context:
                    ip: 8.8.8.8
                    userAgent: >-
                      Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5)
                      AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115
                      Safari/537.36
                  integrations:
                    All: true
                    Mixpanel: false
                    Salesforce: false
                  messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db,
                  receivedAt: 2015-02-23T22:28:55.387Z,
                  sentAt: 2015-02-23T22:28:55.111Z,
                  timestamp: 2015-02-23T22:28:55.111Z,
                  traits:
                    name: ACME, Inc.
                    industry: Technology
                    employees: 329
                    plan: enterprise
                    total billed: 830
                  type: group
                  userId: 97980cfea0067
                  groupId: 0e8c78ea9d97a7b8185e8632,
                  version: 1.1
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/group \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw '
                {
                    "userId": "97980cfea0067",
                    "groupId": "0e8c78ea9d97a7b8185e8632",
                    "traits": {
                        "name": "ACME, Inc.",
                        "industry": "Technology",
                        "employees": 329,
                        "plan": "enterprise",
                        "total billed": 830
                    }
                }'   
          - lang: javascript
            label: JavaScript
            source: |
              analytics.group("0e8c78ea9d97a7b8185e8632", {
                name: "Acme",
                industry: "Technology",
                road_runner_accidents: 329,
                plan: "enterprise",
                "total billed": 830
              });
          - lang: javascript
            label: NodeJS
            source: |
              analytics.group({
                userId: '019mr8mf4r',
                groupId: '56',
                traits: {
                  name: 'ACME, Inc.',
                  description: 'Giant anvils'
                }
              });
          - lang: python
            label: Python
            source: |
              analytics.group('user_id', 'group_id', {
                'name': 'ACME, Inc.',
                'domain': 'Giant anvils'
              })
          - lang: go
            label: Go
            source: |
              client.Enqueue(analytics.Group{
                UserId:  "019mr8mf4r",
                GroupId: "56",
                Traits: map[string]interface{}{
                  "name":        "ACME, Inc.",
                  "description": "Giant anvils",
                },
              })
        responses:
          '200':
            description: A successful request returns an empty object response.
    /alias:
      post:
        operationId: alias
        summary: Alias
        description: >
          *You **only** need to use this method to support a few select
          destinations like Mixpanel.*


          The `alias` method reconciles identifiers in systems that don't
          automatically handle identity changes—like when a person graduates from
          an anonymous user to an identified user. 


          For example, a person typically has an `anonymousId` until you identify
          them by `userId`. Most destinations will automatically associate data
          from the anonymous ID with the new user ID when you send an `identify`
          call. But a select few destinations, like
          [Mixpanel](https://customer.io/docs/api/cdp/), won't! The `alias` call
          tells Mixpanel to represent the `anonymousId` with the new `userId`.


          If you need to use the `alias` call, you'll want to send it before you
          identify someone with a `userId`.


          If you use our web or server-side libraries, and you've already
          identified someone, we assume that this is the `userId` that you want to
          keep. Otherwise, you need to pass both the `previousId` and the
          `userId`.


          **When you use our libraries, you'll typically only provide the
          `previousId` and `userId`. The libraries fill in the rest of the payload
          automatically.**
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - previousId
                  - userId
                properties:
                  type:
                    type: string
                    readOnly: true
                    enum:
                      - alias
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  previousId:
                    type: string
                    description: >-
                      The userId that you want to merge into the canonical
                      profile.
                  userId:
                    type: string
                    description: >
                      The userId that you want to keep. This is required if you
                      haven't already identified someone with one of our web or
                      server-side libraries.
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/alias \
                -u api_key: \
                -H 'content-type: application/json' \
                -d '{"previousId":"23adfd82-aa0f-45a7-a756-24f2a7a4c895","userId":"97980cfea0067"}'
          - lang: javascript
            label: JavaScript
            source: |
              analytics.alias("old-id","new-id");
          - lang: javascript
            label: NodeJS
            source: >
              analytics.alias({ previousId: 'anonymous_user', userId:
              'identified@example.com' })
          - lang: python
            label: Python
            source: |
              analytics.alias(previous_id, user_id)
          - lang: go
            label: Go
            source: |
              client.Enqueue(analytics.Alias{
                PreviousId: anonymousUser,
                UserId:     "019mr8mf4r",
              })
        responses:
          '200':
            description: A successful request returns an empty object response.
    /batch:
      post:
        operationId: batch
        summary: Batch
        description: >
          The batch method helps you send an array of `identify`, `group`,
          `track`, `page` and/or `screen` requests in a single call, so you don't
          have to send multiple requests. Our server-side sources use this method
          automatically to increase performance.


          Requests are limited to 500KB total per request and 32KB per call in the
          request. In a batch request, the `context` and `integrations` objects
          apply to _all calls in the request_. You can't set different context or
          integrations values for different calls in the same request.
        servers:
          - url: https://cdp.customer.io/v1
            description: This is a Data Pipeline API.
        security:
          - Basic-Auth: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  batch:
                    type: array
                    description: >-
                      A group of requests you want to send to Data Pipelines in
                      the call.
                    items:
                      anyOf:
                        - title: Identify
                          oneOf:
                            - title: Known User
                              allOf:
                                - type: object
                                  required:
                                    - userId
                                  properties:
                                    userId:
                                      type: string
                                      description: >-
                                        The unique identifier for a person. This
                                        value should be unique across systems, so
                                        you recognize the same person in your
                                        sources _and_ destinations.
                                      example: 241ma8mf4a
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - identify
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    traits:
                                      type: object
                                      description: >-
                                        Additional properties that you know about
                                        a person. We've listed some
                                        common/reserved traits below, but you can
                                        add any traits that you might use in
                                        another system.
                                      properties:
                                        email:
                                          type: string
                                          description: >-
                                            A person's email address. In some cases,
                                            you can pass an empty `userId` and we'll
                                            use this value to identify a person.
                                        createdAt:
                                          type: string
                                          format: date-time
                                          description: >-
                                            We recommend that you pass date-time
                                            values as ISO 8601 date-time strings. We
                                            convert this value to fit destinations
                                            where appropriate.
                                      additionalProperties:
                                        x-additionalPropertiesName: Additional Traits
                                        description: >-
                                          Traits that you want to set on a person.
                                          These can take any JSON shape.
                                - allOf:
                                    - type: object
                                      properties:
                                        integrations:
                                          type: object
                                          description: >
                                            Contains a list of booleans indicating
                                            the integrations that are enabled (true)
                                            or disabled (false). By default, all
                                            integrations are enabled (returning an
                                            empty object). Set `"All": false` to
                                            reverse this behavior.
                                          additionalProperties:
                                            type: boolean
                                            x-additionalPropertiesName: Enabled/Disabled integrations
                                          example:
                                            All: true
                                            Salesforce: false
                                        messageId:
                                          type: string
                                          description: >-
                                            A unique identifier for a Data Pipelines
                                            call, ensuring that each individual
                                            event is unique. This is set by
                                            Customer.io
                                        receivedAt:
                                          type: string
                                          format: date-time
                                          readOnly: true
                                          description: >-
                                            The ISO-8601 timestamp when Data
                                            Pipelines receives an event.
                                        sentAt:
                                          type: string
                                          format: date-time
                                          description: >-
                                            The ISO-8601 timestamp when a library
                                            sends an event to Data Pipelines.
                                        originalTimestamp:
                                          type: string
                                          format: date-time
                                        timestamp:
                                          type: string
                                          format: date-time
                                          description: >-
                                            The ISO-8601 timestamp when the event
                                            originally took place. This is mostly
                                            useful when you backfill data past
                                            events. If you're not backfilling data,
                                            you can leave this field empty and we'll
                                            use the current time or server time.
                                        type:
                                          readOnly: true
                                          type: string
                                          enum:
                                            - identify
                                            - group
                                            - track
                                            - page
                                            - screen
                                            - alias
                                          description: >-
                                            The type of source event. This is
                                            implicit and set by Customer.io based on
                                            the endpoint/method you use (e.g.
                                            `identify`).
                                        version:
                                          readOnly: true
                                          type: number
                                          description: >-
                                            The version of the API that received the
                                            event, automatically set by Customer.io.
                                    - type: object
                                      properties:
                                        context:
                                          description: >-
                                            A dictionary of context about a source
                                            call/event, like the user’s IP address
                                            or locale. Context is automatically
                                            collected by our source libraries.
                                          oneOf:
                                            - description: >-
                                                A dictionary of context about a source
                                                call/event, like the user’s IP address
                                                or locale. Context is automatically
                                                collected by our source libraries.
                                              title: Non-mobile
                                              allOf:
                                                - type: object
                                                  description: >-
                                                    Contains contextual information about
                                                    the event.
                                                  properties:
                                                    active:
                                                      type: boolean
                                                      description: >
                                                        Whether a user is active.


                                                        This is usually used to flag an
                                                        .identify() call to just update the
                                                        traits but not “last seen.”
                                                    ip:
                                                      type: string
                                                      description: >-
                                                        The user's IP address. This isn't
                                                        captured by our libraries, but by our
                                                        servers when we receive client-side
                                                        events (like from our JavaScript
                                                        source).
                                                    locale:
                                                      type: string
                                                      description: >-
                                                        The local string for the current user,
                                                        e.g. `en-US`.
                                                    userAgent:
                                                      type: string
                                                      description: >-
                                                        The user agent of the device making the
                                                        request
                                                    channel:
                                                      type: string
                                                      enum:
                                                        - browser
                                                        - server
                                                        - mobile
                                                      description: The channel the event originated from.
                                                - type: object
                                                  properties:
                                                    campaign:
                                                      type: object
                                                      description: >
                                                        Contains information about the campaign
                                                        that resulted in the API call, gathered
                                                        from, or mapping to, UTM parameters
                                                        (e.g. `utm_source`).
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: The campaign name.
                                                        source:
                                                          type: string
                                                          description: >-
                                                            The source of traffic—like the name of
                                                            your email list, Facebook, Google, etc.
                                                        medium:
                                                          type: string
                                                          description: >-
                                                            The type of traffic a person/event
                                                            originates from, like `email`, or
                                                            `referral`.
                                                        term:
                                                          type: string
                                                          description: The keyword term(s) a user came from.
                                                        content:
                                                          type: string
                                                      additionalProperties:
                                                        type: string
                                                        x-additionalPropertiesName: Additional UTM Parameters
                                                    page:
                                                      type: object
                                                      description: >-
                                                        Contains information about the current
                                                        page in the browser. This is
                                                        automatically collected by our
                                                        JavaScript source.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: >
                                                            The name of the page. Reserved for
                                                            future use.
                                                        path:
                                                          type: string
                                                          description: >-
                                                            The path portion of the page's URL.
                                                            Equivalent to the canonical `path` 
                                                            which defaults to `location.pathname` 
                                                            from the DOM API.
                                                        referrer:
                                                          type: string
                                                          description: >-
                                                            The previous page's full URL. Equivalent
                                                            to `document.referrer`  from the DOM
                                                            API.
                                                        search:
                                                          type: string
                                                          description: >-
                                                            The query string portion of the page's
                                                            URL. Equivalent to `location.search` 
                                                            from the DOM API.
                                                        title:
                                                          type: string
                                                          description: >-
                                                            The page's title. Equivalent to
                                                            `document.title` from the DOM API.
                                                        url:
                                                          type: string
                                                          description: >-
                                                            A page's full URL. Segment first looks
                                                            for the canonical URL. If the canonical
                                                            URL is not provided, Segment uses
                                                            `location.href` from the DOM API.
                                                        keywords:
                                                          type: array
                                                          description: >-
                                                            A list/array of keywords describing the
                                                            page's content. The keywords are likely
                                                            the same as, or similar to, the keywords
                                                            you would find in an HTML `meta`  tag
                                                            for SEO purposes. This property is
                                                            mainly used by content publishers that
                                                            rely heavily on pageview tracking. This
                                                            isn't automatically collected.
                                                          items:
                                                            type: string
                                            - description: >-
                                                A dictionary of context about a source
                                                call/event, like the user’s IP address
                                                or locale. Context is automatically
                                                collected by our source libraries.
                                              title: Mobile
                                              allOf:
                                                - type: object
                                                  description: >-
                                                    Contains contextual information about
                                                    the event.
                                                  properties:
                                                    active:
                                                      type: boolean
                                                      description: >
                                                        Whether a user is active.


                                                        This is usually used to flag an
                                                        .identify() call to just update the
                                                        traits but not “last seen.”
                                                    ip:
                                                      type: string
                                                      description: >-
                                                        The user's IP address. This isn't
                                                        captured by our libraries, but by our
                                                        servers when we receive client-side
                                                        events (like from our JavaScript
                                                        source).
                                                    locale:
                                                      type: string
                                                      description: >-
                                                        The local string for the current user,
                                                        e.g. `en-US`.
                                                    userAgent:
                                                      type: string
                                                      description: >-
                                                        The user agent of the device making the
                                                        request
                                                    channel:
                                                      type: string
                                                      enum:
                                                        - browser
                                                        - server
                                                        - mobile
                                                      description: The channel the event originated from.
                                                - type: object
                                                  description: >-
                                                    Fields included in events from mobile
                                                    libraries.
                                                  properties:
                                                    app:
                                                      type: object
                                                      description: >
                                                        Contains information about the mobile
                                                        app the event originated from,
                                                        automatically collected by our mobile
                                                        libraries when possible.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: The name of the app.
                                                        version:
                                                          type: string
                                                          description: >-
                                                            The version of the app the call
                                                            originated from.
                                                        build:
                                                          type: string
                                                          description: The specific build number in the app.
                                                        namespace:
                                                          type: string
                                                          description: The app's namespace.
                                                    device:
                                                      type: object
                                                      description: >
                                                        Contains information about the device
                                                        the event originated from.
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The device ID.
                                                        advertisingId:
                                                          type: string
                                                          description: >-
                                                            The advertising ID is a unique,
                                                            anonymous ID for advertising.
                                                        manufacturer:
                                                          type: string
                                                          description: The device manufacturer.
                                                        model:
                                                          type: string
                                                          description: The device model.
                                                        name:
                                                          type: string
                                                          description: The device name.
                                                        type:
                                                          type: string
                                                          description: The device type—android, iOS, etc.
                                                          enum:
                                                            - android
                                                            - ios
                                                        version:
                                                          type: string
                                                          description: The firmware version for the device.
                                                    network:
                                                      type: object
                                                      description: >-
                                                        Information about the current network
                                                        connection, containing `bluetooth`,
                                                        `carrier`, `cellular`, and `wifi`. If
                                                        the `context.network.cellular` and
                                                        `context.network.wifi` fields are empty,
                                                        then the user is offline.
                                                      properties:
                                                        bluetooth:
                                                          type: boolean
                                                          description: >-
                                                            Lets you know if bluetooth is enabled on
                                                            a device.
                                                        carrier:
                                                          type: string
                                                          description: The cellular carrier the phone uses.
                                                        cellular:
                                                          type: boolean
                                                          description: >-
                                                            Indicates whether the device's cellular
                                                            connection is enabled or not.
                                                        wifi:
                                                          type: boolean
                                                          description: >-
                                                            Indicates whether a device's wifi
                                                            connection is enabled or not.
                                                    os:
                                                      type: object
                                                      description: >
                                                        Dictionary of information about the
                                                        operating system, containing `name` and
                                                        `version`.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: >-
                                                            The operating system running on the
                                                            device.
                                                        version:
                                                          type: string
                                                          description: >-
                                                            The version of the OS running on the
                                                            device.
                            - title: Anonymous User
                              allOf:
                                - type: object
                                  required:
                                    - anonymousId
                                  properties:
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - identify
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    traits:
                                      type: object
                                      description: >-
                                        Additional properties that you know about
                                        a person. We've listed some
                                        common/reserved traits below, but you can
                                        add any traits that you might use in
                                        another system.
                                      properties:
                                        email:
                                          type: string
                                          description: >-
                                            A person's email address. In some cases,
                                            you can pass an empty `userId` and we'll
                                            use this value to identify a person.
                                        createdAt:
                                          type: string
                                          format: date-time
                                          description: >-
                                            We recommend that you pass date-time
                                            values as ISO 8601 date-time strings. We
                                            convert this value to fit destinations
                                            where appropriate.
                                      additionalProperties:
                                        x-additionalPropertiesName: Additional Traits
                                        description: >-
                                          Traits that you want to set on a person.
                                          These can take any JSON shape.
                                - allOf:
                                    - type: object
                                      properties:
                                        integrations:
                                          type: object
                                          description: >
                                            Contains a list of booleans indicating
                                            the integrations that are enabled (true)
                                            or disabled (false). By default, all
                                            integrations are enabled (returning an
                                            empty object). Set `"All": false` to
                                            reverse this behavior.
                                          additionalProperties:
                                            type: boolean
                                            x-additionalPropertiesName: Enabled/Disabled integrations
                                          example:
                                            All: true
                                            Salesforce: false
                                        messageId:
                                          type: string
                                          description: >-
                                            A unique identifier for a Data Pipelines
                                            call, ensuring that each individual
                                            event is unique. This is set by
                                            Customer.io
                                        receivedAt:
                                          type: string
                                          format: date-time
                                          readOnly: true
                                          description: >-
                                            The ISO-8601 timestamp when Data
                                            Pipelines receives an event.
                                        sentAt:
                                          type: string
                                          format: date-time
                                          description: >-
                                            The ISO-8601 timestamp when a library
                                            sends an event to Data Pipelines.
                                        originalTimestamp:
                                          type: string
                                          format: date-time
                                        timestamp:
                                          type: string
                                          format: date-time
                                          description: >-
                                            The ISO-8601 timestamp when the event
                                            originally took place. This is mostly
                                            useful when you backfill data past
                                            events. If you're not backfilling data,
                                            you can leave this field empty and we'll
                                            use the current time or server time.
                                        type:
                                          readOnly: true
                                          type: string
                                          enum:
                                            - identify
                                            - group
                                            - track
                                            - page
                                            - screen
                                            - alias
                                          description: >-
                                            The type of source event. This is
                                            implicit and set by Customer.io based on
                                            the endpoint/method you use (e.g.
                                            `identify`).
                                        version:
                                          readOnly: true
                                          type: number
                                          description: >-
                                            The version of the API that received the
                                            event, automatically set by Customer.io.
                                    - type: object
                                      properties:
                                        context:
                                          description: >-
                                            A dictionary of context about a source
                                            call/event, like the user’s IP address
                                            or locale. Context is automatically
                                            collected by our source libraries.
                                          oneOf:
                                            - description: >-
                                                A dictionary of context about a source
                                                call/event, like the user’s IP address
                                                or locale. Context is automatically
                                                collected by our source libraries.
                                              title: Non-mobile
                                              allOf:
                                                - type: object
                                                  description: >-
                                                    Contains contextual information about
                                                    the event.
                                                  properties:
                                                    active:
                                                      type: boolean
                                                      description: >
                                                        Whether a user is active.


                                                        This is usually used to flag an
                                                        .identify() call to just update the
                                                        traits but not “last seen.”
                                                    ip:
                                                      type: string
                                                      description: >-
                                                        The user's IP address. This isn't
                                                        captured by our libraries, but by our
                                                        servers when we receive client-side
                                                        events (like from our JavaScript
                                                        source).
                                                    locale:
                                                      type: string
                                                      description: >-
                                                        The local string for the current user,
                                                        e.g. `en-US`.
                                                    userAgent:
                                                      type: string
                                                      description: >-
                                                        The user agent of the device making the
                                                        request
                                                    channel:
                                                      type: string
                                                      enum:
                                                        - browser
                                                        - server
                                                        - mobile
                                                      description: The channel the event originated from.
                                                - type: object
                                                  properties:
                                                    campaign:
                                                      type: object
                                                      description: >
                                                        Contains information about the campaign
                                                        that resulted in the API call, gathered
                                                        from, or mapping to, UTM parameters
                                                        (e.g. `utm_source`).
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: The campaign name.
                                                        source:
                                                          type: string
                                                          description: >-
                                                            The source of traffic—like the name of
                                                            your email list, Facebook, Google, etc.
                                                        medium:
                                                          type: string
                                                          description: >-
                                                            The type of traffic a person/event
                                                            originates from, like `email`, or
                                                            `referral`.
                                                        term:
                                                          type: string
                                                          description: The keyword term(s) a user came from.
                                                        content:
                                                          type: string
                                                      additionalProperties:
                                                        type: string
                                                        x-additionalPropertiesName: Additional UTM Parameters
                                                    page:
                                                      type: object
                                                      description: >-
                                                        Contains information about the current
                                                        page in the browser. This is
                                                        automatically collected by our
                                                        JavaScript source.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: >
                                                            The name of the page. Reserved for
                                                            future use.
                                                        path:
                                                          type: string
                                                          description: >-
                                                            The path portion of the page's URL.
                                                            Equivalent to the canonical `path` 
                                                            which defaults to `location.pathname` 
                                                            from the DOM API.
                                                        referrer:
                                                          type: string
                                                          description: >-
                                                            The previous page's full URL. Equivalent
                                                            to `document.referrer`  from the DOM
                                                            API.
                                                        search:
                                                          type: string
                                                          description: >-
                                                            The query string portion of the page's
                                                            URL. Equivalent to `location.search` 
                                                            from the DOM API.
                                                        title:
                                                          type: string
                                                          description: >-
                                                            The page's title. Equivalent to
                                                            `document.title` from the DOM API.
                                                        url:
                                                          type: string
                                                          description: >-
                                                            A page's full URL. Segment first looks
                                                            for the canonical URL. If the canonical
                                                            URL is not provided, Segment uses
                                                            `location.href` from the DOM API.
                                                        keywords:
                                                          type: array
                                                          description: >-
                                                            A list/array of keywords describing the
                                                            page's content. The keywords are likely
                                                            the same as, or similar to, the keywords
                                                            you would find in an HTML `meta`  tag
                                                            for SEO purposes. This property is
                                                            mainly used by content publishers that
                                                            rely heavily on pageview tracking. This
                                                            isn't automatically collected.
                                                          items:
                                                            type: string
                                            - description: >-
                                                A dictionary of context about a source
                                                call/event, like the user’s IP address
                                                or locale. Context is automatically
                                                collected by our source libraries.
                                              title: Mobile
                                              allOf:
                                                - type: object
                                                  description: >-
                                                    Contains contextual information about
                                                    the event.
                                                  properties:
                                                    active:
                                                      type: boolean
                                                      description: >
                                                        Whether a user is active.


                                                        This is usually used to flag an
                                                        .identify() call to just update the
                                                        traits but not “last seen.”
                                                    ip:
                                                      type: string
                                                      description: >-
                                                        The user's IP address. This isn't
                                                        captured by our libraries, but by our
                                                        servers when we receive client-side
                                                        events (like from our JavaScript
                                                        source).
                                                    locale:
                                                      type: string
                                                      description: >-
                                                        The local string for the current user,
                                                        e.g. `en-US`.
                                                    userAgent:
                                                      type: string
                                                      description: >-
                                                        The user agent of the device making the
                                                        request
                                                    channel:
                                                      type: string
                                                      enum:
                                                        - browser
                                                        - server
                                                        - mobile
                                                      description: The channel the event originated from.
                                                - type: object
                                                  description: >-
                                                    Fields included in events from mobile
                                                    libraries.
                                                  properties:
                                                    app:
                                                      type: object
                                                      description: >
                                                        Contains information about the mobile
                                                        app the event originated from,
                                                        automatically collected by our mobile
                                                        libraries when possible.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: The name of the app.
                                                        version:
                                                          type: string
                                                          description: >-
                                                            The version of the app the call
                                                            originated from.
                                                        build:
                                                          type: string
                                                          description: The specific build number in the app.
                                                        namespace:
                                                          type: string
                                                          description: The app's namespace.
                                                    device:
                                                      type: object
                                                      description: >
                                                        Contains information about the device
                                                        the event originated from.
                                                      properties:
                                                        id:
                                                          type: string
                                                          description: The device ID.
                                                        advertisingId:
                                                          type: string
                                                          description: >-
                                                            The advertising ID is a unique,
                                                            anonymous ID for advertising.
                                                        manufacturer:
                                                          type: string
                                                          description: The device manufacturer.
                                                        model:
                                                          type: string
                                                          description: The device model.
                                                        name:
                                                          type: string
                                                          description: The device name.
                                                        type:
                                                          type: string
                                                          description: The device type—android, iOS, etc.
                                                          enum:
                                                            - android
                                                            - ios
                                                        version:
                                                          type: string
                                                          description: The firmware version for the device.
                                                    network:
                                                      type: object
                                                      description: >-
                                                        Information about the current network
                                                        connection, containing `bluetooth`,
                                                        `carrier`, `cellular`, and `wifi`. If
                                                        the `context.network.cellular` and
                                                        `context.network.wifi` fields are empty,
                                                        then the user is offline.
                                                      properties:
                                                        bluetooth:
                                                          type: boolean
                                                          description: >-
                                                            Lets you know if bluetooth is enabled on
                                                            a device.
                                                        carrier:
                                                          type: string
                                                          description: The cellular carrier the phone uses.
                                                        cellular:
                                                          type: boolean
                                                          description: >-
                                                            Indicates whether the device's cellular
                                                            connection is enabled or not.
                                                        wifi:
                                                          type: boolean
                                                          description: >-
                                                            Indicates whether a device's wifi
                                                            connection is enabled or not.
                                                    os:
                                                      type: object
                                                      description: >
                                                        Dictionary of information about the
                                                        operating system, containing `name` and
                                                        `version`.
                                                      properties:
                                                        name:
                                                          type: string
                                                          description: >-
                                                            The operating system running on the
                                                            device.
                                                        version:
                                                          type: string
                                                          description: >-
                                                            The version of the OS running on the
                                                            device.
                          example:
                            type: identify
                            traits:
                              name: Cool Person
                              email: cool.person@example.com
                              likes_baseball: true
                              games_attended: 5
                            userId: 97980cfea0067
                        - title: Track
                          oneOf:
                            - title: Known User
                              allOf:
                                - type: object
                                  required:
                                    - userId
                                    - event
                                    - type
                                  properties:
                                    userId:
                                      type: string
                                      description: >-
                                        The unique identifier for a person. This
                                        value should be unique across systems, so
                                        you recognize the same person in your
                                        sources _and_ destinations.
                                      example: 241ma8mf4a
                                    type:
                                      type: string
                                      enum:
                                        - track
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    event:
                                      type: string
                                      description: The name of the event
                                      example: new_account
                                    properties:
                                      type: object
                                      description: Additional properties for your event.
                                      additionalProperties:
                                        x-additionalPropertiesName: Event Properties
                                        description: >-
                                          Additional properties that you want to
                                          capture in the event. These can take any
                                          JSON shape.
                            - title: Anonymous User
                              allOf:
                                - type: object
                                  required:
                                    - event
                                    - type
                                  properties:
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - track
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    event:
                                      type: string
                                      description: The name of the event
                                      example: new_account
                                    properties:
                                      type: object
                                      description: Additional properties for your event.
                                      additionalProperties:
                                        x-additionalPropertiesName: Event Properties
                                        description: >-
                                          Additional properties that you want to
                                          capture in the event. These can take any
                                          JSON shape.
                        - title: Page
                          oneOf:
                            - title: Known User
                              allOf:
                                - type: object
                                  required:
                                    - userId
                                    - type
                                  properties:
                                    userId:
                                      type: string
                                      description: >-
                                        The unique identifier for a person. This
                                        value should be unique across systems, so
                                        you recognize the same person in your
                                        sources _and_ destinations.
                                      example: 241ma8mf4a
                                    type:
                                      type: string
                                      enum:
                                        - page
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    name:
                                      type: string
                                      description: The name of the page.
                                      example: home
                                    properties:
                                      type: object
                                      description: Additional properties for your event.
                                      properties:
                                        category:
                                          type: string
                                          description: >-
                                            The category of the page. This might be
                                            useful if you have a single page routes
                                            or have a flattened URL structure.
                                      additionalProperties:
                                        x-additionalPropertiesName: Page Properties
                                        description: >-
                                          A dictionary of properties about the
                                          page.
                            - title: Anonymous User
                              allOf:
                                - type: object
                                  required:
                                    - anonymousId
                                    - type
                                  properties:
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - page
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    name:
                                      type: string
                                      description: The name of the page.
                                      example: home
                                    properties:
                                      type: object
                                      description: Additional properties for your event.
                                      properties:
                                        category:
                                          type: string
                                          description: >-
                                            The category of the page. This might be
                                            useful if you have a single page routes
                                            or have a flattened URL structure.
                                      additionalProperties:
                                        x-additionalPropertiesName: Page Properties
                                        description: >-
                                          A dictionary of properties about the
                                          page.
                        - title: Screen
                          oneOf:
                            - title: Known User
                              allOf:
                                - type: object
                                  required:
                                    - userId
                                    - type
                                  properties:
                                    userId:
                                      type: string
                                      description: >-
                                        The unique identifier for a person. This
                                        value should be unique across systems, so
                                        you recognize the same person in your
                                        sources _and_ destinations.
                                      example: 241ma8mf4a
                                    type:
                                      type: string
                                      enum:
                                        - screen
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    name:
                                      type: string
                                      description: The name of the screen the person visited.
                                      example: home
                                    properties:
                                      type: object
                                      description: Additional properties for your screen.
                                      additionalProperties:
                                        x-additionalPropertiesName: Screen Properties
                                        description: >-
                                          A dictionary of properties about the
                                          screen.
                            - title: Anonymous User
                              allOf:
                                - type: object
                                  required:
                                    - anonymousId
                                    - type
                                  properties:
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - screen
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                    name:
                                      type: string
                                      description: The name of the screen the person visited.
                                      example: home
                                    properties:
                                      type: object
                                      description: Additional properties for your screen.
                                      additionalProperties:
                                        x-additionalPropertiesName: Screen Properties
                                        description: >-
                                          A dictionary of properties about the
                                          screen.
                        - title: Group
                          oneOf:
                            - title: Known User
                              allOf:
                                - type: object
                                  required:
                                    - userId
                                    - groupId
                                    - type
                                  properties:
                                    userId:
                                      type: string
                                      description: >-
                                        The unique identifier for a person. This
                                        value should be unique across systems, so
                                        you recognize the same person in your
                                        sources _and_ destinations.
                                      example: 241ma8mf4a
                                    type:
                                      type: string
                                      enum:
                                        - group
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                      example: group
                                    groupId:
                                      type: string
                                      description: ID of the group
                                      example: 0e8c78ea9d97a7b8185e8632
                                    traits:
                                      type: object
                                      description: Additional information about the group.
                                      additionalProperties:
                                        x-additionalPropertiesName: Group Traits
                                        description: A dictionary of traits for the group.
                                        example:
                                          name: Acme
                                          industry: Technology
                                          road_runner_accidents: 329,
                                          plan: enterprise,
                                          total_billed: 830
                            - title: Anonymous User
                              allOf:
                                - type: object
                                  required:
                                    - anonymousId
                                    - groupId
                                    - type
                                  properties:
                                    anonymousId:
                                      type: string
                                      description: >-
                                        A unique substitute for a User ID in cases
                                        when you don’t have an absolutely unique
                                        identifier. Our libraries generate this
                                        value automatically to help you track
                                        people before they sign up, log in,
                                        provide their email, etc.
                                      example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                                    type:
                                      type: string
                                      enum:
                                        - group
                                      description: >-
                                        The event type. This is set automatically
                                        by the request method/endpoint.
                                      example: group
                                    groupId:
                                      type: string
                                      description: ID of the group
                                      example: 0e8c78ea9d97a7b8185e8632
                                    traits:
                                      type: object
                                      description: Additional information about the group.
                                      additionalProperties:
                                        x-additionalPropertiesName: Group Traits
                                        description: A dictionary of traits for the group.
                                        example:
                                          name: Acme
                                          industry: Technology
                                          road_runner_accidents: 329,
                                          plan: enterprise,
                                          total_billed: 830
                  context:
                    description: >-
                      A dictionary of context about a source call/event, like the
                      user’s IP address or locale. Context is automatically
                      collected by our source libraries.
                    oneOf:
                      - description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Non-mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            properties:
                              campaign:
                                type: object
                                description: >
                                  Contains information about the campaign that
                                  resulted in the API call, gathered from, or
                                  mapping to, UTM parameters (e.g. `utm_source`).
                                properties:
                                  name:
                                    type: string
                                    description: The campaign name.
                                  source:
                                    type: string
                                    description: >-
                                      The source of traffic—like the name of your
                                      email list, Facebook, Google, etc.
                                  medium:
                                    type: string
                                    description: >-
                                      The type of traffic a person/event
                                      originates from, like `email`, or
                                      `referral`.
                                  term:
                                    type: string
                                    description: The keyword term(s) a user came from.
                                  content:
                                    type: string
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Additional UTM Parameters
                              page:
                                type: object
                                description: >-
                                  Contains information about the current page in
                                  the browser. This is automatically collected by
                                  our JavaScript source.
                                properties:
                                  name:
                                    type: string
                                    description: >
                                      The name of the page. Reserved for future
                                      use.
                                  path:
                                    type: string
                                    description: >-
                                      The path portion of the page's URL.
                                      Equivalent to the canonical `path`  which
                                      defaults to `location.pathname`  from the
                                      DOM API.
                                  referrer:
                                    type: string
                                    description: >-
                                      The previous page's full URL. Equivalent to
                                      `document.referrer`  from the DOM API.
                                  search:
                                    type: string
                                    description: >-
                                      The query string portion of the page's URL.
                                      Equivalent to `location.search`  from the
                                      DOM API.
                                  title:
                                    type: string
                                    description: >-
                                      The page's title. Equivalent to
                                      `document.title` from the DOM API.
                                  url:
                                    type: string
                                    description: >-
                                      A page's full URL. Segment first looks for
                                      the canonical URL. If the canonical URL is
                                      not provided, Segment uses `location.href`
                                      from the DOM API.
                                  keywords:
                                    type: array
                                    description: >-
                                      A list/array of keywords describing the
                                      page's content. The keywords are likely the
                                      same as, or similar to, the keywords you
                                      would find in an HTML `meta`  tag for SEO
                                      purposes. This property is mainly used by
                                      content publishers that rely heavily on
                                      pageview tracking. This isn't automatically
                                      collected.
                                    items:
                                      type: string
                      - description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
                  integrations:
                    type: object
                    description: >
                      Contains a list of booleans indicating the integrations that
                      are enabled (true) or disabled (false). By default, all
                      integrations are enabled (returning an empty object). Set
                      `"All": false` to reverse this behavior.
                    additionalProperties:
                      type: boolean
                      x-additionalPropertiesName: Enabled/Disabled integrations
                    example:
                      All: true
                      Salesforce: false
        x-codeSamples:
          - lang: shell
            label: cURL
            source: |
              curl --request POST \
                --url https://cdp.customer.io/v1/batch \
                -u api_key: \
                -H 'content-type: application/json' \
                --data-raw ' 
                {
                    "batch": [
                        {
                            "type": "identify",
                            "traits": {
                                "name": "Cool Person",
                                "email": "cool.person@example.com",
                                "likes_baseball": true,
                                "games_attended": 5
                            },
                            "userId": "97980cfea0067"
                        },
                        {
                            "type": "track",
                            "userId": "97980cfea0067",
                            "event": "Course Started",
                            "properties": {
                                "title": "Intro to Customer.io"
                            }
                        }
                    ]
                }'
        responses:
          '200':
            description: A successful request returns an empty object response.
  components:
    schemas:
      common_utm_properties:
        type: object
        description: UTM Tracking Properties
        properties:
          utm_source:
            type: string
            default: $.context.campaign.source
          utm_medium:
            type: string
            default: $.context.campaign.medium
          utm_campaign:
            type: string
            default: $.context.campaign.name
          utm_term:
            type: string
            default: $.context.campaign.term
          utm_content:
            type: string
            default: $.context.campaign.content
      common_referrer:
        type: string
        description: Referrer url
        default: $.context.page.referrer
      app_name:
        type: string
        description: The name of your application.
        default: $.context.app.name
      app_namespace:
        type: string
        description: The namespace of your application.
        default: $.context.app.namespace
      app_build:
        type: string
        description: The current build of your application.
        default: $.context.app.build
      app_version:
        type: string
        description: The current version of your application.
        default: $.context.app.version
      os_name:
        type: string
        description: >-
          The name of the mobile operating system or browser that the user is
          using.
        default: $.context.os.name
      os_version:
        type: string
        description: The version of the mobile operating system or browser the user is using.
        default: $.context.os.version
      device_id:
        type: string
        description: A unique identifier for the device the user is using.
        default: $.context.device.id
      device_type:
        type: string
        description: The type of the user's device.
        default: $.context.device.type
      device_name:
        type: string
        description: The name of the user's device.
        default: $.context.device.name
      device_manufacturer:
        type: string
        description: The device manufacturer that the user is using.
        default: $.context.device.manufacturer
      device_model:
        type: string
        description: The device model that the user is using.
        default: $.context.device.model
      bluetooth:
        type: boolean
        description: Whether bluetooth is enabled.
        default: $.context.network.bluetooth
      carrier:
        type: string
        description: The carrier that the user is using.
        default: $.context.network.carrier
      cellular:
        type: boolean
        description: Whether cellular is enabled.
        default: $.context.network.cellular
      wifi:
        type: boolean
        description: >-
          Set to true if user’s device has an active, available Wifi connection,
          false if not.
        default: $.context.network.wifi
      experiment_viewed:
        type: object
        properties:
          experiment_id:
            type: string
            description: The ID of the A/B test.
          experiment_name:
            type: string
            description: The A/B test’s human-readable name.
          variation_id:
            type: string
            description: The ID of the individual test variant.
          variation_name:
            type: string
            description: The A/B test variant's human-readable name.
      amplitude_set:
        description: >-
          Set these properties once or with every event depending on the key.
          Relevant to AJS2.
        allOf:
          - type: object
            properties:
              initial_referrer:
                type: string
                description: Referrer url
                default: $.context.page.referrer
          - type: object
            description: UTM Tracking Properties
            properties:
              utm_source:
                type: string
                default: $.context.campaign.source
              utm_medium:
                type: string
                default: $.context.campaign.medium
              utm_campaign:
                type: string
                default: $.context.campaign.name
              utm_term:
                type: string
                default: $.context.campaign.term
              utm_content:
                type: string
                default: $.context.campaign.content
      amplitude_min_id_length:
        type: integer
        description: >-
          Amplitude has a default minimum id length of 5 characters for `user_id`
          and `device_id` fields. This field allows the minimum to be overridden
          to allow shorter id lengths.
      amplitude_groups:
        type: object
        description: >-
          Groups of users for the event as an event-level group. You can only
          track up to 5 groups. **Note:** This Amplitude feature is only available
          to Enterprise customers who have purchased the Accounts add-on.
      amplitude_user_properties:
        type: object
        description: >-
          Additional data tied to the user in Amplitude. Each distinct value
          appears as a user segment in Amplitude. object depth cannot not exceed
          40 layers. Date values are transformed to string strings.
        default: $.traits
      amplitude_user_id:
        type: string
        description: >-
          A unique identifier for a user. If your call references user ID you
          haven't added to Amplitude yet, then the user tied to that ID will not
          be marked "new" until their first event. Required unless device ID is
          present.
        default: $.userId
      amplitude_device_id:
        type: string
        description: >
          A device identifier, like the Identifier for Vendor (IDFV) on iOS.
          Required unless the request includes a `user_id`.
        default: coalesce($.context.device.id, $.anonymousId)
      amplitude_common_event:
        type: object
        properties:
          user_id:
            type: string
            description: >-
              A unique identifier for a user. If your call references user ID you
              haven't added to Amplitude yet, then the user tied to that ID will
              not be marked "new" until their first event. Required unless device
              ID is present.
            default: $.userId
          device_id:
            type: string
            description: >
              A device identifier, like the Identifier for Vendor (IDFV) on iOS.
              Required unless the request includes a `user_id`.
            default: coalesce($.context.device.id, $.anonymousId)
          event_type:
            type: string
            description: A unique identifier for your event.
            default: $.event
          session_id:
            type: string
            format: datetime
            description: >-
              The start time of the session, necessary if you want to associate
              events with a particular system. To use automatic Amplitude session
              tracking in browsers, enable Analytics 2.0 on your connected source.
            default: $.integrations.Actions Amplitude.session_id
          time:
            type: string
            format: datetime
            description: >-
              The timestamp of the event. If time is not sent with the event, it
              will be set to the request upload time.
            default: $.timestamp
          event_properties:
            type: object
            description: >-
              An object of key-value pairs that represent additional data to be
              sent along with the event. You can store property values in an
              array, but note that Amplitude only supports one-dimensional arrays.
              Date values are transformed into string values. object depth may not
              exceed 40 layers.
            default: $.properties
          user_properties:
            type: object
            description: >-
              An object of key-value pairs that represent additional data tied to
              the user. You can store property values in an array, but note that
              Amplitude only supports one-dimensional arrays. Date values are
              transformed into string values. object depth may not exceed 40
              layers.
            default: $.traits
          groups:
            type: object
            description: >-
              Groups of users for the event as an event-level group. You can only
              track up to 5 groups. **Note:** This Amplitude feature is only
              available to Enterprise customers who have purchased the Accounts
              add-on.
          app_version:
            type: string
            description: The current version of your application.
            default: $.context.app.version
          platform:
            type: string
            description: Platform of the device.
            default: $.context.device.type
          os_name:
            type: string
            description: >-
              The name of the mobile operating system or browser that the user is
              using.
            default: $.context.os.name
          os_version:
            type: string
            description: >-
              The version of the mobile operating system or browser the user is
              using.
            default: $.context.os.version
          device_brand:
            type: string
            description: The device brand that the user is using.
            default: $.context.device.brand
          device_manufacturer:
            type: string
            description: The device manufacturer that the user is using.
            default: $.context.device.manufacturer
          device_model:
            type: string
            description: The device model that the user is using.
            default: $.context.device.model
          carrier:
            type: string
            description: The carrier that the user is using.
            default: $.context.network.carrier
          country:
            type: string
            description: The current country of the user.
            default: $.context.location.country
          region:
            type: string
            description: The current region of the user.
            default: $.context.location.region
          city:
            type: string
            description: The current city of the user.
            default: $.context.location.city
          dma:
            type: string
            description: The current Designated Market Area of the user.
          language:
            type: string
            description: The language set by the user.
            default: $.context.locale
          price:
            type: number
            description: >-
              The price of the item purchased. Required for revenue data if the
              revenue field is not sent. You can use negative values to indicate
              refunds.
            default: $.properties.price
          quantity:
            type: integer
            description: The quantity of the item purchased. Defaults to 1 if not specified.
            default: $.properties.quantity
          revenue:
            type: number
            description: >-
              Revenue = price * quantity. If you send all 3 fields of price,
              quantity, and revenue, then (price * quantity) will be used as the
              revenue value. You can use negative values to indicate refunds.
              **Note:** You will need to explicitly set this if you are using the
              Amplitude in cloud-mode.
            default: $.properties.revenue
          productId:
            type: string
            description: >-
              An identifier for the item purchased. You must send a price and
              quantity or revenue with this field.
            default: $.properties.productId
          revenueType:
            type: string
            description: >-
              The type of revenue for the item purchased. You must send a price
              and quantity or revenue with this field.
            default: $.properties.revenueType
          location_lat:
            type: number
            description: The current Latitude of the user.
            default: $.context.location.latitude
          location_lng:
            type: number
            description: The current Longitude of the user.
            default: $.context.location.longitude
          ip:
            type: string
            description: >-
              The IP address of the user. Use "$remote" to use the IP address on
              the upload request. Amplitude will use the IP address to reverse
              lookup a user's location (city, country, region, and DMA). Amplitude
              has the ability to drop the location and IP address from events once
              it reaches our servers. You can submit a request to Amplitude's
              platform specialist team here to configure this for you.
            default: $.context.ip
          idfa:
            type: string
            description: Identifier for Advertiser. _(iOS)_
            default: coalesce($.context.device.advertisingId, $.context.device.idfa)
          idfv:
            type: string
            description: Identifier for Vendor. _(iOS)_
            default: $.context.device.id
          adid:
            type: string
            description: Google Play Services advertising ID. _(Android)_
            default: coalesce($.context.device.advertisingId, $.context.device.idfa)
          android_id:
            type: string
            description: Android ID (not the advertising ID). _(Android)_
          event_id:
            type: integer
            description: >-
              An incrementing counter to distinguish events with the same user ID
              and timestamp from each other. Amplitude recommends you send an
              event ID, increasing over time, especially if you expect events to
              occur simultanenously.
          insert_id:
            type: string
            description: >-
              Amplitude will deduplicate subsequent events sent with this ID we
              have already seen before within the past 7 days. Amplitude
              recommends generating a UUID or using some combination of device ID,
              user ID, event type, event ID, and time.
          library:
            type: string
            description: The name of the library that generated the event.
            default: $.context.library.name
          products:
            type: array
            description: >-
              The list of products purchased, where each object in the array
              represents an individual product.
            default: $.properties.products
            items:
              type: object
              description: An item that a person purchased.
              properties:
                price:
                  type: number
                  description: The product's price.
                  default: price
                revenue:
                  type: number
                  description: Revenue from the product.
                  default: revenue
                quantity:
                  type: integer
                  description: The quantity of the product in the order.
                  default: quantity
                productId:
                  type: string
                  description: >-
                    The product ID, like a SKU or another value unique to the
                    specific product.
                  default: productId
                revenueType:
                  type: string
                  description: The type of revenue.
                  default: revenueType
      amplitude_map_user:
        description: >-
          Merge two users together that would otherwise have different User IDs
          tracked in Amplitude.
        type: object
        properties:
          user_id:
            type: string
            description: The User ID to be associated.
            default: $.previousId
          global_user_id:
            type: string
            description: The Global User ID to associate with the User ID.
            default: $.userId
          min_id_length:
            type: integer
            description: >-
              Amplitude has a default minimum id length of 5 characters for
              `user_id` and `device_id` fields. This field allows the minimum to
              be overridden to allow shorter id lengths.
      amplitude_identify_user:
        type: object
        properties:
          user_id:
            type: string
            description: >-
              A unique identifier for a user. If your call references user ID you
              haven't added to Amplitude yet, then the user tied to that ID will
              not be marked "new" until their first event. Required unless device
              ID is present.
            default: $.userId
          device_id:
            type: string
            description: >
              A device identifier, like the Identifier for Vendor (IDFV) on iOS.
              Required unless the request includes a `user_id`.
            default: coalesce($.context.device.id, $.anonymousId)
          user_properties:
            type: object
            description: >-
              Additional data tied to the user in Amplitude. Each distinct value
              appears as a user segment in Amplitude. object depth cannot not
              exceed 40 layers. Date values are transformed to string strings.
            default: $.traits
          groups:
            type: object
            description: >-
              Groups of users for the event as an event-level group. You can only
              track up to 5 groups. **Note:** This Amplitude feature is only
              available to Enterprise customers who have purchased the Accounts
              add-on.
          app_version:
            type: string
            description: Version of the app the user is on.
            default: $.context.app.version
          platform:
            type: string
            description: The platform of the user's device.
            default: $.context.device.type
          os_name:
            type: string
            description: The mobile operating system or browser of the user's device.
            default: $.context.os.name
          os_version:
            type: string
            description: >-
              The version of the mobile operating system or browser of the user's
              device.
            default: $.context.os.version
          device_brand:
            type: string
            description: The brand of user's the device.
            default: $.context.device.brand
          device_manufacturer:
            type: string
            description: The manufacturer of the user's device.
            default: $.context.device.manufacturer
          device_model:
            type: string
            description: The model of the user's device.
            default: $.context.device.model
          carrier:
            type: string
            description: The user's mobile carrier.
            default: $.context.network.carrier
          country:
            type: string
            description: The country in which the user is located.
            default: $.context.location.country
          region:
            type: string
            description: The geographical region in which the user is located.
            default: $.context.location.region
          city:
            type: string
            description: The city in which the user is located.
            default: $.context.location.city
          dma:
            type: string
            description: The Designated Market Area in which the user is located.
          language:
            type: string
            description: Language the user has set on their device or browser.
            default: $.context.locale
          paying:
            type: boolean
            description: Whether the user is paying or not.
          start_version:
            type: string
            description: The version of the app the user was first on.
          insert_id:
            type: string
            description: >-
              Amplitude will deduplicate subsequent events sent with this ID we
              have already seen before within the past 7 days. Amplitude
              recommends generating a UUID or using some combination of device ID,
              user ID, event type, event ID, and time.
          userAgent:
            type: string
            description: The user agent of the device sending the event.
            default: $.context.userAgent
          userAgentParsing:
            type: boolean
            description: >-
              Enabling this setting will set the Device manufacturer, Device Model
              and OS Name properties based on the user agent string provided in
              the userAgent field
            default: true
          utm_properties:
            type: object
            description: UTM Tracking Properties
            properties:
              utm_source:
                type: string
                default: $.context.campaign.source
              utm_medium:
                type: string
                default: $.context.campaign.medium
              utm_campaign:
                type: string
                default: $.context.campaign.name
              utm_term:
                type: string
                default: $.context.campaign.term
              utm_content:
                type: string
                default: $.context.campaign.content
          referrer:
            type: string
            description: >-
              The referrer of a web request. Sent to Amplitude as both last touch
              “referrer” and first touch “initial_referrer”
            default: $.context.page.referrer
          min_id_length:
            type: integer
            description: >-
              Amplitude has a default minimum id length of 5 characters for
              `user_id`` and `device_id`` fields. This field allows the minimum to
              be overridden to allow shorter id lengths.
          library:
            type: string
            description: The name of the library that generated the event.
            default: $.context.library.name
      amplitude_log_purchase:
        allOf:
          - type: object
            properties:
              user_id:
                type: string
                description: >-
                  A unique identifier for a user. If your call references user ID
                  you haven't added to Amplitude yet, then the user tied to that
                  ID will not be marked "new" until their first event. Required
                  unless device ID is present.
                default: $.userId
              device_id:
                type: string
                description: >
                  A device identifier, like the Identifier for Vendor (IDFV) on
                  iOS. Required unless the request includes a `user_id`.
                default: coalesce($.context.device.id, $.anonymousId)
              event_type:
                type: string
                description: A unique identifier for your event.
                default: $.event
              session_id:
                type: string
                format: datetime
                description: >-
                  The start time of the session, necessary if you want to
                  associate events with a particular system. To use automatic
                  Amplitude session tracking in browsers, enable Analytics 2.0 on
                  your connected source.
                default: $.integrations.Actions Amplitude.session_id
              time:
                type: string
                format: datetime
                description: >-
                  The timestamp of the event. If time is not sent with the event,
                  it will be set to the request upload time.
                default: $.timestamp
              event_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data to
                  be sent along with the event. You can store property values in
                  an array, but note that Amplitude only supports one-dimensional
                  arrays. Date values are transformed into string values. object
                  depth may not exceed 40 layers.
                default: $.properties
              user_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data tied
                  to the user. You can store property values in an array, but note
                  that Amplitude only supports one-dimensional arrays. Date values
                  are transformed into string values. object depth may not exceed
                  40 layers.
                default: $.traits
              groups:
                type: object
                description: >-
                  Groups of users for the event as an event-level group. You can
                  only track up to 5 groups. **Note:** This Amplitude feature is
                  only available to Enterprise customers who have purchased the
                  Accounts add-on.
              app_version:
                type: string
                description: The current version of your application.
                default: $.context.app.version
              platform:
                type: string
                description: Platform of the device.
                default: $.context.device.type
              os_name:
                type: string
                description: >-
                  The name of the mobile operating system or browser that the user
                  is using.
                default: $.context.os.name
              os_version:
                type: string
                description: >-
                  The version of the mobile operating system or browser the user
                  is using.
                default: $.context.os.version
              device_brand:
                type: string
                description: The device brand that the user is using.
                default: $.context.device.brand
              device_manufacturer:
                type: string
                description: The device manufacturer that the user is using.
                default: $.context.device.manufacturer
              device_model:
                type: string
                description: The device model that the user is using.
                default: $.context.device.model
              carrier:
                type: string
                description: The carrier that the user is using.
                default: $.context.network.carrier
              country:
                type: string
                description: The current country of the user.
                default: $.context.location.country
              region:
                type: string
                description: The current region of the user.
                default: $.context.location.region
              city:
                type: string
                description: The current city of the user.
                default: $.context.location.city
              dma:
                type: string
                description: The current Designated Market Area of the user.
              language:
                type: string
                description: The language set by the user.
                default: $.context.locale
              price:
                type: number
                description: >-
                  The price of the item purchased. Required for revenue data if
                  the revenue field is not sent. You can use negative values to
                  indicate refunds.
                default: $.properties.price
              quantity:
                type: integer
                description: >-
                  The quantity of the item purchased. Defaults to 1 if not
                  specified.
                default: $.properties.quantity
              revenue:
                type: number
                description: >-
                  Revenue = price * quantity. If you send all 3 fields of price,
                  quantity, and revenue, then (price * quantity) will be used as
                  the revenue value. You can use negative values to indicate
                  refunds. **Note:** You will need to explicitly set this if you
                  are using the Amplitude in cloud-mode.
                default: $.properties.revenue
              productId:
                type: string
                description: >-
                  An identifier for the item purchased. You must send a price and
                  quantity or revenue with this field.
                default: $.properties.productId
              revenueType:
                type: string
                description: >-
                  The type of revenue for the item purchased. You must send a
                  price and quantity or revenue with this field.
                default: $.properties.revenueType
              location_lat:
                type: number
                description: The current Latitude of the user.
                default: $.context.location.latitude
              location_lng:
                type: number
                description: The current Longitude of the user.
                default: $.context.location.longitude
              ip:
                type: string
                description: >-
                  The IP address of the user. Use "$remote" to use the IP address
                  on the upload request. Amplitude will use the IP address to
                  reverse lookup a user's location (city, country, region, and
                  DMA). Amplitude has the ability to drop the location and IP
                  address from events once it reaches our servers. You can submit
                  a request to Amplitude's platform specialist team here to
                  configure this for you.
                default: $.context.ip
              idfa:
                type: string
                description: Identifier for Advertiser. _(iOS)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              idfv:
                type: string
                description: Identifier for Vendor. _(iOS)_
                default: $.context.device.id
              adid:
                type: string
                description: Google Play Services advertising ID. _(Android)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              android_id:
                type: string
                description: Android ID (not the advertising ID). _(Android)_
              event_id:
                type: integer
                description: >-
                  An incrementing counter to distinguish events with the same user
                  ID and timestamp from each other. Amplitude recommends you send
                  an event ID, increasing over time, especially if you expect
                  events to occur simultanenously.
              insert_id:
                type: string
                description: >-
                  Amplitude will deduplicate subsequent events sent with this ID
                  we have already seen before within the past 7 days. Amplitude
                  recommends generating a UUID or using some combination of device
                  ID, user ID, event type, event ID, and time.
              library:
                type: string
                description: The name of the library that generated the event.
                default: $.context.library.name
              products:
                type: array
                description: >-
                  The list of products purchased, where each object in the array
                  represents an individual product.
                default: $.properties.products
                items:
                  type: object
                  description: An item that a person purchased.
                  properties:
                    price:
                      type: number
                      description: The product's price.
                      default: price
                    revenue:
                      type: number
                      description: Revenue from the product.
                      default: revenue
                    quantity:
                      type: integer
                      description: The quantity of the product in the order.
                      default: quantity
                    productId:
                      type: string
                      description: >-
                        The product ID, like a SKU or another value unique to the
                        specific product.
                      default: productId
                    revenueType:
                      type: string
                      description: The type of revenue.
                      default: revenueType
          - type: object
            properties:
              trackRevenuePerProduct:
                type: boolean
                description: >-
                  When enabled, track revenue with each product within the event.
                  When disabled, track total revenue once for the event.
                default: false
              use_batch_endpoint:
                type: boolean
                description: >-
                  If true, events are sent to Amplitude's `batch` endpoint rather
                  than their `httpapi` events endpoint. Enabling this setting may
                  help reduce 429s – or throttling errors – from Amplitude. More
                  information about Amplitude's throttling is available in [their
                  docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).
                default: false
              userAgent:
                type: string
                description: The user agent of the device sending the event.
                default: $.context.userAgent
              userAgentParsing:
                type: boolean
                description: >-
                  Enabling this setting will set the Device manufacturer, Device
                  Model and OS Name properties based on the user agent string
                  provided in the userAgent field
                default: true
              utm_properties:
                type: object
                description: UTM Tracking Properties
                properties:
                  utm_source:
                    type: string
                    default: $.context.campaign.source
                  utm_medium:
                    type: string
                    default: $.context.campaign.medium
                  utm_campaign:
                    type: string
                    default: $.context.campaign.name
                  utm_term:
                    type: string
                    default: $.context.campaign.term
                  utm_content:
                    type: string
                    default: $.context.campaign.content
              referrer:
                type: string
                description: >-
                  The referrer of the web request. Sent to Amplitude as both last
                  touch “referrer” and first touch “initial_referrer”
                default: $.context.page.referrer
              min_id_length:
                type: integer
                description: >-
                  Amplitude has a default minimum id length of 5 characters for
                  `user_id` and `device_id` fields. This field allows the minimum
                  to be overridden to allow shorter id lengths.
      amplitude_log_event:
        allOf:
          - type: object
            properties:
              user_id:
                type: string
                description: >-
                  A unique identifier for a user. If your call references user ID
                  you haven't added to Amplitude yet, then the user tied to that
                  ID will not be marked "new" until their first event. Required
                  unless device ID is present.
                default: $.userId
              device_id:
                type: string
                description: >
                  A device identifier, like the Identifier for Vendor (IDFV) on
                  iOS. Required unless the request includes a `user_id`.
                default: coalesce($.context.device.id, $.anonymousId)
              event_type:
                type: string
                description: A unique identifier for your event.
                default: $.event
              session_id:
                type: string
                format: datetime
                description: >-
                  The start time of the session, necessary if you want to
                  associate events with a particular system. To use automatic
                  Amplitude session tracking in browsers, enable Analytics 2.0 on
                  your connected source.
                default: $.integrations.Actions Amplitude.session_id
              time:
                type: string
                format: datetime
                description: >-
                  The timestamp of the event. If time is not sent with the event,
                  it will be set to the request upload time.
                default: $.timestamp
              event_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data to
                  be sent along with the event. You can store property values in
                  an array, but note that Amplitude only supports one-dimensional
                  arrays. Date values are transformed into string values. object
                  depth may not exceed 40 layers.
                default: $.properties
              user_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data tied
                  to the user. You can store property values in an array, but note
                  that Amplitude only supports one-dimensional arrays. Date values
                  are transformed into string values. object depth may not exceed
                  40 layers.
                default: $.traits
              groups:
                type: object
                description: >-
                  Groups of users for the event as an event-level group. You can
                  only track up to 5 groups. **Note:** This Amplitude feature is
                  only available to Enterprise customers who have purchased the
                  Accounts add-on.
              app_version:
                type: string
                description: The current version of your application.
                default: $.context.app.version
              platform:
                type: string
                description: Platform of the device.
                default: $.context.device.type
              os_name:
                type: string
                description: >-
                  The name of the mobile operating system or browser that the user
                  is using.
                default: $.context.os.name
              os_version:
                type: string
                description: >-
                  The version of the mobile operating system or browser the user
                  is using.
                default: $.context.os.version
              device_brand:
                type: string
                description: The device brand that the user is using.
                default: $.context.device.brand
              device_manufacturer:
                type: string
                description: The device manufacturer that the user is using.
                default: $.context.device.manufacturer
              device_model:
                type: string
                description: The device model that the user is using.
                default: $.context.device.model
              carrier:
                type: string
                description: The carrier that the user is using.
                default: $.context.network.carrier
              country:
                type: string
                description: The current country of the user.
                default: $.context.location.country
              region:
                type: string
                description: The current region of the user.
                default: $.context.location.region
              city:
                type: string
                description: The current city of the user.
                default: $.context.location.city
              dma:
                type: string
                description: The current Designated Market Area of the user.
              language:
                type: string
                description: The language set by the user.
                default: $.context.locale
              price:
                type: number
                description: >-
                  The price of the item purchased. Required for revenue data if
                  the revenue field is not sent. You can use negative values to
                  indicate refunds.
                default: $.properties.price
              quantity:
                type: integer
                description: >-
                  The quantity of the item purchased. Defaults to 1 if not
                  specified.
                default: $.properties.quantity
              revenue:
                type: number
                description: >-
                  Revenue = price * quantity. If you send all 3 fields of price,
                  quantity, and revenue, then (price * quantity) will be used as
                  the revenue value. You can use negative values to indicate
                  refunds. **Note:** You will need to explicitly set this if you
                  are using the Amplitude in cloud-mode.
                default: $.properties.revenue
              productId:
                type: string
                description: >-
                  An identifier for the item purchased. You must send a price and
                  quantity or revenue with this field.
                default: $.properties.productId
              revenueType:
                type: string
                description: >-
                  The type of revenue for the item purchased. You must send a
                  price and quantity or revenue with this field.
                default: $.properties.revenueType
              location_lat:
                type: number
                description: The current Latitude of the user.
                default: $.context.location.latitude
              location_lng:
                type: number
                description: The current Longitude of the user.
                default: $.context.location.longitude
              ip:
                type: string
                description: >-
                  The IP address of the user. Use "$remote" to use the IP address
                  on the upload request. Amplitude will use the IP address to
                  reverse lookup a user's location (city, country, region, and
                  DMA). Amplitude has the ability to drop the location and IP
                  address from events once it reaches our servers. You can submit
                  a request to Amplitude's platform specialist team here to
                  configure this for you.
                default: $.context.ip
              idfa:
                type: string
                description: Identifier for Advertiser. _(iOS)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              idfv:
                type: string
                description: Identifier for Vendor. _(iOS)_
                default: $.context.device.id
              adid:
                type: string
                description: Google Play Services advertising ID. _(Android)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              android_id:
                type: string
                description: Android ID (not the advertising ID). _(Android)_
              event_id:
                type: integer
                description: >-
                  An incrementing counter to distinguish events with the same user
                  ID and timestamp from each other. Amplitude recommends you send
                  an event ID, increasing over time, especially if you expect
                  events to occur simultanenously.
              insert_id:
                type: string
                description: >-
                  Amplitude will deduplicate subsequent events sent with this ID
                  we have already seen before within the past 7 days. Amplitude
                  recommends generating a UUID or using some combination of device
                  ID, user ID, event type, event ID, and time.
              library:
                type: string
                description: The name of the library that generated the event.
                default: $.context.library.name
              products:
                type: array
                description: >-
                  The list of products purchased, where each object in the array
                  represents an individual product.
                default: $.properties.products
                items:
                  type: object
                  description: An item that a person purchased.
                  properties:
                    price:
                      type: number
                      description: The product's price.
                      default: price
                    revenue:
                      type: number
                      description: Revenue from the product.
                      default: revenue
                    quantity:
                      type: integer
                      description: The quantity of the product in the order.
                      default: quantity
                    productId:
                      type: string
                      description: >-
                        The product ID, like a SKU or another value unique to the
                        specific product.
                      default: productId
                    revenueType:
                      type: string
                      description: The type of revenue.
                      default: revenueType
          - type: object
            properties:
              use_batch_endpoint:
                type: boolean
                description: >-
                  If true, events are sent to Amplitude's `batch` endpoint rather
                  than their `httpapi` events endpoint. Enabling this setting may
                  help reduce 429s – or throttling errors – from Amplitude. More
                  information about Amplitude's throttling is available in [their
                  docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).
                default: false
              userAgent:
                type: string
                description: The user agent of the device sending the event.
                default: $.context.userAgent
              userAgentParsing:
                type: boolean
                description: >-
                  Enabling this setting will set the Device manufacturer, Device
                  Model and OS Name properties based on the user agent string
                  provided in the userAgent field
                default: true
              utm_properties:
                type: object
                description: UTM Tracking Properties
                properties:
                  utm_source:
                    type: string
                    default: $.context.campaign.source
                  utm_medium:
                    type: string
                    default: $.context.campaign.medium
                  utm_campaign:
                    type: string
                    default: $.context.campaign.name
                  utm_term:
                    type: string
                    default: $.context.campaign.term
                  utm_content:
                    type: string
                    default: $.context.campaign.content
              referrer:
                type: string
                description: >-
                  The referrer of the web request. Sent to Amplitude as both last
                  touch “referrer” and first touch “initial_referrer”
                default: $.context.page.referrer
              min_id_length:
                type: integer
                description: >-
                  Amplitude has a default minimum id length of 5 characters for
                  `user_id` and `device_id` fields. This field allows the minimum
                  to be overridden to allow shorter id lengths.
      amplitude_group_identify_user:
        type: object
        properties:
          user_id:
            type: string
            description: >-
              A unique identifier for a user. If your call references user ID you
              haven't added to Amplitude yet, then the user tied to that ID will
              not be marked "new" until their first event. Required unless device
              ID is present.
            default: $.userId
          device_id:
            type: string
            description: >
              A device identifier, like the Identifier for Vendor (IDFV) on iOS.
              Required unless the request includes a `user_id`.
            default: coalesce($.context.device.id, $.anonymousId)
          insert_id:
            type: string
            description: >-
              Amplitude will deduplicate subsequent events sent with this ID we
              have already seen before within the past 7 days. Amplitude
              recommends generating a UUID or using some combination of device ID,
              user ID, event type, event ID, and time.
          time:
            type: string
            description: >-
              The timestamp of the event. If time is not sent with the event, it
              will be set to the request upload time.
            default: $.timestamp
          group_properties:
            type: object
            description: Additional data tied to the group in Amplitude.
            default: $.traits
          group_type:
            type: string
            description: The type of the group
          group_value:
            type: string
            description: The value of the group
          min_id_length:
            type: integer
            description: >-
              Amplitude has a default minimum id length of 5 characters for
              `user_id` and `device_id` fields. This field allows the minimum to
              be overridden to allow shorter id lengths.
      amplitude_session_plugin:
        type: object
        properties:
          sessionLength:
            type: number
            description: Time in milliseconds before a session becomes stale.
      amplitude_log_event_v_2:
        allOf:
          - type: object
            properties:
              user_id:
                type: string
                description: >-
                  A unique identifier for a user. If your call references user ID
                  you haven't added to Amplitude yet, then the user tied to that
                  ID will not be marked "new" until their first event. Required
                  unless device ID is present.
                default: $.userId
              device_id:
                type: string
                description: >
                  A device identifier, like the Identifier for Vendor (IDFV) on
                  iOS. Required unless the request includes a `user_id`.
                default: coalesce($.context.device.id, $.anonymousId)
              event_type:
                type: string
                description: A unique identifier for your event.
                default: $.event
              session_id:
                type: string
                format: datetime
                description: >-
                  The start time of the session, necessary if you want to
                  associate events with a particular system. To use automatic
                  Amplitude session tracking in browsers, enable Analytics 2.0 on
                  your connected source.
                default: $.integrations.Actions Amplitude.session_id
              time:
                type: string
                format: datetime
                description: >-
                  The timestamp of the event. If time is not sent with the event,
                  it will be set to the request upload time.
                default: $.timestamp
              event_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data to
                  be sent along with the event. You can store property values in
                  an array, but note that Amplitude only supports one-dimensional
                  arrays. Date values are transformed into string values. object
                  depth may not exceed 40 layers.
                default: $.properties
              user_properties:
                type: object
                description: >-
                  An object of key-value pairs that represent additional data tied
                  to the user. You can store property values in an array, but note
                  that Amplitude only supports one-dimensional arrays. Date values
                  are transformed into string values. object depth may not exceed
                  40 layers.
                default: $.traits
              groups:
                type: object
                description: >-
                  Groups of users for the event as an event-level group. You can
                  only track up to 5 groups. **Note:** This Amplitude feature is
                  only available to Enterprise customers who have purchased the
                  Accounts add-on.
              app_version:
                type: string
                description: The current version of your application.
                default: $.context.app.version
              platform:
                type: string
                description: Platform of the device.
                default: $.context.device.type
              os_name:
                type: string
                description: >-
                  The name of the mobile operating system or browser that the user
                  is using.
                default: $.context.os.name
              os_version:
                type: string
                description: >-
                  The version of the mobile operating system or browser the user
                  is using.
                default: $.context.os.version
              device_brand:
                type: string
                description: The device brand that the user is using.
                default: $.context.device.brand
              device_manufacturer:
                type: string
                description: The device manufacturer that the user is using.
                default: $.context.device.manufacturer
              device_model:
                type: string
                description: The device model that the user is using.
                default: $.context.device.model
              carrier:
                type: string
                description: The carrier that the user is using.
                default: $.context.network.carrier
              country:
                type: string
                description: The current country of the user.
                default: $.context.location.country
              region:
                type: string
                description: The current region of the user.
                default: $.context.location.region
              city:
                type: string
                description: The current city of the user.
                default: $.context.location.city
              dma:
                type: string
                description: The current Designated Market Area of the user.
              language:
                type: string
                description: The language set by the user.
                default: $.context.locale
              price:
                type: number
                description: >-
                  The price of the item purchased. Required for revenue data if
                  the revenue field is not sent. You can use negative values to
                  indicate refunds.
                default: $.properties.price
              quantity:
                type: integer
                description: >-
                  The quantity of the item purchased. Defaults to 1 if not
                  specified.
                default: $.properties.quantity
              revenue:
                type: number
                description: >-
                  Revenue = price * quantity. If you send all 3 fields of price,
                  quantity, and revenue, then (price * quantity) will be used as
                  the revenue value. You can use negative values to indicate
                  refunds. **Note:** You will need to explicitly set this if you
                  are using the Amplitude in cloud-mode.
                default: $.properties.revenue
              productId:
                type: string
                description: >-
                  An identifier for the item purchased. You must send a price and
                  quantity or revenue with this field.
                default: $.properties.productId
              revenueType:
                type: string
                description: >-
                  The type of revenue for the item purchased. You must send a
                  price and quantity or revenue with this field.
                default: $.properties.revenueType
              location_lat:
                type: number
                description: The current Latitude of the user.
                default: $.context.location.latitude
              location_lng:
                type: number
                description: The current Longitude of the user.
                default: $.context.location.longitude
              ip:
                type: string
                description: >-
                  The IP address of the user. Use "$remote" to use the IP address
                  on the upload request. Amplitude will use the IP address to
                  reverse lookup a user's location (city, country, region, and
                  DMA). Amplitude has the ability to drop the location and IP
                  address from events once it reaches our servers. You can submit
                  a request to Amplitude's platform specialist team here to
                  configure this for you.
                default: $.context.ip
              idfa:
                type: string
                description: Identifier for Advertiser. _(iOS)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              idfv:
                type: string
                description: Identifier for Vendor. _(iOS)_
                default: $.context.device.id
              adid:
                type: string
                description: Google Play Services advertising ID. _(Android)_
                default: coalesce($.context.device.advertisingId, $.context.device.idfa)
              android_id:
                type: string
                description: Android ID (not the advertising ID). _(Android)_
              event_id:
                type: integer
                description: >-
                  An incrementing counter to distinguish events with the same user
                  ID and timestamp from each other. Amplitude recommends you send
                  an event ID, increasing over time, especially if you expect
                  events to occur simultanenously.
              insert_id:
                type: string
                description: >-
                  Amplitude will deduplicate subsequent events sent with this ID
                  we have already seen before within the past 7 days. Amplitude
                  recommends generating a UUID or using some combination of device
                  ID, user ID, event type, event ID, and time.
              library:
                type: string
                description: The name of the library that generated the event.
                default: $.context.library.name
              products:
                type: array
                description: >-
                  The list of products purchased, where each object in the array
                  represents an individual product.
                default: $.properties.products
                items:
                  type: object
                  description: An item that a person purchased.
                  properties:
                    price:
                      type: number
                      description: The product's price.
                      default: price
                    revenue:
                      type: number
                      description: Revenue from the product.
                      default: revenue
                    quantity:
                      type: integer
                      description: The quantity of the product in the order.
                      default: quantity
                    productId:
                      type: string
                      description: >-
                        The product ID, like a SKU or another value unique to the
                        specific product.
                      default: productId
                    revenueType:
                      type: string
                      description: The type of revenue.
                      default: revenueType
          - type: object
            properties:
              setOnce:
                description: >-
                  Set these properties once or with every event depending on the
                  key. Relevant to AJS2.
                allOf:
                  - type: object
                    properties:
                      initial_referrer:
                        type: string
                        description: Referrer url
                        default: $.context.page.referrer
                  - type: object
                    description: UTM Tracking Properties
                    properties:
                      utm_source:
                        type: string
                        default: $.context.campaign.source
                      utm_medium:
                        type: string
                        default: $.context.campaign.medium
                      utm_campaign:
                        type: string
                        default: $.context.campaign.name
                      utm_term:
                        type: string
                        default: $.context.campaign.term
                      utm_content:
                        type: string
                        default: $.context.campaign.content
              setAlways:
                description: >-
                  Set these properties once or with every event depending on the
                  key. Relevant to AJS2.
                allOf:
                  - type: object
                    properties:
                      initial_referrer:
                        type: string
                        description: Referrer url
                        default: $.context.page.referrer
                  - type: object
                    description: UTM Tracking Properties
                    properties:
                      utm_source:
                        type: string
                        default: $.context.campaign.source
                      utm_medium:
                        type: string
                        default: $.context.campaign.medium
                      utm_campaign:
                        type: string
                        default: $.context.campaign.name
                      utm_term:
                        type: string
                        default: $.context.campaign.term
                      utm_content:
                        type: string
                        default: $.context.campaign.content
              add:
                type: object
                description: >-
                  Increment a user property by a number with add. If the user
                  property doesn't have a value set yet, it's initialized to 0.
              use_batch_endpoint:
                type: boolean
                description: >-
                  If true, events are sent to Amplitude's `batch` endpoint rather
                  than their `httpapi` events endpoint. Enabling this setting may
                  help reduce 429s – or throttling errors – from Amplitude. More
                  information about Amplitude's throttling is available in [their
                  docs](https://developers.amplitude.com/docs/batch-event-upload-api#429s-in-depth).
                default: false
              userAgent:
                type: string
                description: The user agent of the device sending the event.
                default: $.context.userAgent
              userAgentParsing:
                type: boolean
                description: >-
                  Enabling this setting will set the Device manufacturer, Device
                  Model and OS Name properties based on the user agent string
                  provided in the userAgent field.
                default: true
              min_id_length:
                type: integer
                description: >-
                  Amplitude has a default minimum id length of 5 characters for
                  `user_id` and `device_id` fields. This field allows the minimum
                  to be overridden to allow shorter id lengths.
      braze_update_user_profile:
        description: Update a user's profile attributes in Braze
        type: object
        properties:
          external_id:
            type: string
            description: The unique user identifier
            default: $.userId
          user_alias:
            type: object
            description: >-
              A user alias object. See [the
              docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).
          braze_id:
            type: string
            description: The unique user identifier
            default: $.properties.braze_id
            nullable: true
          country:
            type: string
            description: The country code of the user
            default: $.context.location.country
            nullable: true
          current_location:
            type: object
            description: The user's current longitude/latitude.
            properties:
              latitude:
                type: number
                description: The current users's latitude.
                default: $.context.location.latitude
              longitude:
                type: number
                description: The user's longitude.
                default: $.context.location.longitude
          date_of_first_session:
            type: string
            format: date-time
            description: The date the user first used the app
            nullable: true
          date_of_last_session:
            type: string
            format: date-time
            description: The date the user last used the app
            nullable: true
          dob:
            type: string
            format: date-time
            description: The user's date of birth
            nullable: true
          email:
            type: string
            description: The user's email
            default: $.traits.email
            nullable: true
          email_subscribe:
            type: string
            description: >-
              The user's email subscription preference: “opted_in” (explicitly
              registered to receive email messages), “unsubscribed” (explicitly
              opted out of email messages), and “subscribed” (neither opted in nor
              out).
          email_open_tracking_disabled:
            type: boolean
            description: >-
              Set to true to disable the open tracking pixel from being added to
              all future emails sent to this user.
          email_click_tracking_disabled:
            type: boolean
            description: >-
              Set to true to disable the click tracking for all links within a
              future email, sent to this user.
          facebook:
            type: object
            description: >-
              Hash of Facebook attribution containing any of `id` (string),
              `likes` (array of strings), `num_friends` (integer).
            properties:
              id:
                type: string
                description: A person's facebook ID/name.
              num_friends:
                type: integer
                description: The number of Facebook friends the user has.
              likes:
                type: array
                description: This person's likes as stated in their bio.
                items:
                  type: string
          first_name:
            type: string
            description: The user's first name
            default: $.traits.firstName
            nullable: true
          gender:
            type: string
            description: >-
              The user's gender: “M”, “F”, “O” (other), “N” (not applicable), “P”
              (prefer not to say) or nil (unknown).
            enum:
              - M
              - F
              - O
              - 'N'
              - P
            nullable: true
          home_city:
            type: string
            description: The user's home city.
            default: $.traits.address.city
            nullable: true
          image_url:
            type: string
            description: URL of image to be associated with user profile.
            default: $.traits.avatar
            nullable: true
          language:
            type: string
            description: The user's preferred language.
            nullable: true
          last_name:
            type: string
            description: The user's last name
            default: $.traits.lastName
          marked_email_as_spam_at:
            type: string
            format: date-time
            description: The date the user marked their email as spam.
            nullable: true
          phone:
            type: string
            description: The user's phone number
            default: $.traits.phone
            nullable: true
          push_subscribe:
            type: string
            description: >-
              The user's push subscription preference: “opted_in” (explicitly
              registered to receive push messages), “unsubscribed” (explicitly
              opted out of push messages), and “subscribed” (neither opted in nor
              out).
          push_tokens:
            type: array
            description: >-
              Array of objects, each containing `app_id` and `token` string. You
              can also provide a `device_id` for each device. But if you don't
              provide this field, one will be randomly generated.
            items:
              type: object
              properties:
                app_id:
                  type: string
                  description: The ID of the application the token belongs to.
                token:
                  type: string
                  description: The device token for this device/app combination.
                device_id:
                  type: string
                  description: >-
                    If you don't provide this field, one will be randomly
                    generated for you.
          time_zone:
            type: string
            description: >-
              The user’s time zone name from the IANA Time Zone Database  (e.g.,
              “America/New_York” or “Eastern Time (US & Canada)”). Only sets valid
              time zone values.
          twitter:
            type: object
            description: >-
              Hash containing any of id (integer), screen_name (string, Twitter
              handle), followers_count (integer), friends_count (integer),
              statuses_count (integer).
            properties:
              id:
                type: integer
                description: The twitter ID.
              screen_name:
                type: string
                description: The user's Twitter handle.
              followers_count:
                type: integer
                description: The number of followers.
              friends_count:
                type: integer
                description: The number of friends/people the account follows.
              statuses_count:
                type: integer
                description: The number of posts/statuses.
          custom_attributes:
            type: object
            description: Hash of custom attributes to send to Braze
            default: $.traits
            additionalProperties:
              x-additionalPropertiesName: Custom Attributes
              description: Key-value pairs you want to set on this person.
          _update_existing_only:
            type: boolean
            description: >-
              Setting this flag to true will put the API in "Update Only" mode.
              When using a "user_alias", "Update Only" mode is always true.
            default: false
      braze_track_event:
        description: Record custom events in Braze
        type: object
        properties:
          external_id:
            type: string
            description: The unique user identifier
            default: $.userId
          user_alias:
            type: object
            description: >-
              A user alias object. See [the
              docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).
          braze_id:
            type: string
            description: The unique user identifier
            default: $.properties.braze_id
            nullable: true
          name:
            type: string
            description: The event name
            default: $.event
          time:
            type: string
            format: date-time
            description: When the event occurred.
            default: $.receivedAt
          properties:
            type: object
            description: Properties of the event
            default: $.properties
            additionalProperties:
              x-additionalPropertiesName: Event Properties
              description: Additional key-value pairs you want to send along with the event.
          _update_existing_only:
            type: boolean
            description: >-
              Setting this flag to true will put the API in "Update Only" mode.
              When using a "user_alias", "Update Only" mode is always true.
            default: false
          enable_batching:
            type: boolean
            description: >-
              If true, Segment will batch events before sending to Braze’s user
              track endpoint. Braze accepts batches of up to 75 events.
            default: false
      braze_debounce_middleware:
        type: boolean
        description: >-
          When enabled, it ensures that only events where at least one changed
          trait value are sent to Braze, and events with duplicate traits are not
          sent.
      braze_identify_user:
        description: >-
          Identifies an unidentified (alias-only) user. Use alongside the Create
          Alias action, or with user aliases you have already defined.
        type: object
        properties:
          external_id:
            type: string
            description: The external ID of the user to identify.
          user_alias:
            type: object
            description: >-
              A user alias object. See [the
              docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).
      braze_track_purchase:
        description: Record purchases in Braze.
        type: object
        properties:
          external_id:
            type: string
            description: The unique user identifier
            default: $.userId
          user_alias:
            type: object
            description: >-
              A user alias object. See [the
              docs](https://www.braze.com/docs/api/objects_filters/user_alias_object/).
          braze_id:
            type: string
            description: The unique user identifier
            default: $.properties.braze_id
            nullable: true
          time:
            type: string
            format: date-time
            description: When the event occurred.
            default: $.receivedAt
          products:
            type: array
            description: >-
              Any array of objects, where each object represents a product in the
              purchase
            default: $.properties.products
            items:
              type: object
              description: Information about the product.
              additionalProperties:
                description: >-
                  Properties about the purchase, like the price, name, quantity,
                  etc.
                x-additionalPropertiesName: Product Properties
          properties:
            type: object
            description: Properties for the purchase event
            default: $.properties
            additionalProperties:
              x-additionalPropertiesName: Event Properties
              description: Additional key-value pairs you want to send along with the event.
          _update_existing_only:
            type: boolean
            description: >-
              Setting this flag to true will put the API in "Update Only" mode.
              When using a "user_alias", "Update Only" mode is always true.
            default: false
      braze_create_alias:
        description: >-
          Create new user aliases for existing identified users, or to create new
          unidentified users.
        type: object
        properties:
          external_id:
            type: string
            description: The external ID of the user to create an alias for.
            nullable: true
          alias_name:
            type: string
            description: The alias identifier
          alias_label:
            type: string
            description: A label indicating the type of alias
      user:
        description: >-
          The person you want to attribute activity to—an `anonymousId` or a
          `userId`. When you identify a person and associate an `anonymousId` with
          a `userId`, we'll associate past, anonymous activity with the `userId`.
        oneOf:
          - title: Known User
            type: object
            required:
              - userId
            properties:
              userId:
                type: string
                description: >-
                  The unique identifier for a person. This value should be unique
                  across systems, so you recognize the same person in your sources
                  _and_ destinations.
                example: 241ma8mf4a
          - title: Anonymous User
            type: object
            required:
              - anonymousId
            properties:
              anonymousId:
                type: string
                description: >-
                  A unique substitute for a User ID in cases when you don’t have
                  an absolutely unique identifier. Our libraries generate this
                  value automatically to help you track people before they sign
                  up, log in, provide their email, etc.
                example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
      previousId:
        type: string
        description: The userId that you want to merge into the canonical profile.
      alias:
        type: object
        required:
          - previousId
          - userId
        properties:
          type:
            type: string
            readOnly: true
            enum:
              - alias
            description: >-
              The event type. This is set automatically by the request
              method/endpoint.
          previousId:
            type: string
            description: The userId that you want to merge into the canonical profile.
          userId:
            type: string
            description: >
              The userId that you want to keep. This is required if you haven't
              already identified someone with one of our web or server-side
              libraries.
      alias_all:
        allOf:
          - type: object
            required:
              - previousId
              - userId
            properties:
              type:
                type: string
                readOnly: true
                enum:
                  - alias
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
              previousId:
                type: string
                description: The userId that you want to merge into the canonical profile.
              userId:
                type: string
                description: >
                  The userId that you want to keep. This is required if you
                  haven't already identified someone with one of our web or
                  server-side libraries.
          - allOf:
              - type: object
                properties:
                  integrations:
                    type: object
                    description: >
                      Contains a list of booleans indicating the integrations that
                      are enabled (true) or disabled (false). By default, all
                      integrations are enabled (returning an empty object). Set
                      `"All": false` to reverse this behavior.
                    additionalProperties:
                      type: boolean
                      x-additionalPropertiesName: Enabled/Disabled integrations
                    example:
                      All: true
                      Salesforce: false
                  messageId:
                    type: string
                    description: >-
                      A unique identifier for a Data Pipelines call, ensuring that
                      each individual event is unique. This is set by Customer.io
                  receivedAt:
                    type: string
                    format: date-time
                    readOnly: true
                    description: >-
                      The ISO-8601 timestamp when Data Pipelines receives an
                      event.
                  sentAt:
                    type: string
                    format: date-time
                    description: >-
                      The ISO-8601 timestamp when a library sends an event to Data
                      Pipelines.
                  originalTimestamp:
                    type: string
                    format: date-time
                  timestamp:
                    type: string
                    format: date-time
                    description: >-
                      The ISO-8601 timestamp when the event originally took place.
                      This is mostly useful when you backfill data past events. If
                      you're not backfilling data, you can leave this field empty
                      and we'll use the current time or server time.
                  type:
                    readOnly: true
                    type: string
                    enum:
                      - identify
                      - group
                      - track
                      - page
                      - screen
                      - alias
                    description: >-
                      The type of source event. This is implicit and set by
                      Customer.io based on the endpoint/method you use (e.g.
                      `identify`).
                  version:
                    readOnly: true
                    type: number
                    description: >-
                      The version of the API that received the event,
                      automatically set by Customer.io.
              - type: object
                properties:
                  context:
                    description: >-
                      A dictionary of context about a source call/event, like the
                      user’s IP address or locale. Context is automatically
                      collected by our source libraries.
                    oneOf:
                      - description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Non-mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            properties:
                              campaign:
                                type: object
                                description: >
                                  Contains information about the campaign that
                                  resulted in the API call, gathered from, or
                                  mapping to, UTM parameters (e.g. `utm_source`).
                                properties:
                                  name:
                                    type: string
                                    description: The campaign name.
                                  source:
                                    type: string
                                    description: >-
                                      The source of traffic—like the name of your
                                      email list, Facebook, Google, etc.
                                  medium:
                                    type: string
                                    description: >-
                                      The type of traffic a person/event
                                      originates from, like `email`, or
                                      `referral`.
                                  term:
                                    type: string
                                    description: The keyword term(s) a user came from.
                                  content:
                                    type: string
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Additional UTM Parameters
                              page:
                                type: object
                                description: >-
                                  Contains information about the current page in
                                  the browser. This is automatically collected by
                                  our JavaScript source.
                                properties:
                                  name:
                                    type: string
                                    description: >
                                      The name of the page. Reserved for future
                                      use.
                                  path:
                                    type: string
                                    description: >-
                                      The path portion of the page's URL.
                                      Equivalent to the canonical `path`  which
                                      defaults to `location.pathname`  from the
                                      DOM API.
                                  referrer:
                                    type: string
                                    description: >-
                                      The previous page's full URL. Equivalent to
                                      `document.referrer`  from the DOM API.
                                  search:
                                    type: string
                                    description: >-
                                      The query string portion of the page's URL.
                                      Equivalent to `location.search`  from the
                                      DOM API.
                                  title:
                                    type: string
                                    description: >-
                                      The page's title. Equivalent to
                                      `document.title` from the DOM API.
                                  url:
                                    type: string
                                    description: >-
                                      A page's full URL. Segment first looks for
                                      the canonical URL. If the canonical URL is
                                      not provided, Segment uses `location.href`
                                      from the DOM API.
                                  keywords:
                                    type: array
                                    description: >-
                                      A list/array of keywords describing the
                                      page's content. The keywords are likely the
                                      same as, or similar to, the keywords you
                                      would find in an HTML `meta`  tag for SEO
                                      purposes. This property is mainly used by
                                      content publishers that rely heavily on
                                      pageview tracking. This isn't automatically
                                      collected.
                                    items:
                                      type: string
                      - description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
      identify:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                required:
                  - userId
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - identify
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  traits:
                    type: object
                    description: >-
                      Additional properties that you know about a person. We've
                      listed some common/reserved traits below, but you can add
                      any traits that you might use in another system.
                    properties:
                      email:
                        type: string
                        description: >-
                          A person's email address. In some cases, you can pass an
                          empty `userId` and we'll use this value to identify a
                          person.
                      createdAt:
                        type: string
                        format: date-time
                        description: >-
                          We recommend that you pass date-time values as ISO 8601
                          date-time strings. We convert this value to fit
                          destinations where appropriate.
                    additionalProperties:
                      x-additionalPropertiesName: Additional Traits
                      description: >-
                        Traits that you want to set on a person. These can take
                        any JSON shape.
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
          - title: Anonymous User
            allOf:
              - type: object
                required:
                  - anonymousId
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - identify
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  traits:
                    type: object
                    description: >-
                      Additional properties that you know about a person. We've
                      listed some common/reserved traits below, but you can add
                      any traits that you might use in another system.
                    properties:
                      email:
                        type: string
                        description: >-
                          A person's email address. In some cases, you can pass an
                          empty `userId` and we'll use this value to identify a
                          person.
                      createdAt:
                        type: string
                        format: date-time
                        description: >-
                          We recommend that you pass date-time values as ISO 8601
                          date-time strings. We convert this value to fit
                          destinations where appropriate.
                    additionalProperties:
                      x-additionalPropertiesName: Additional Traits
                      description: >-
                        Traits that you want to set on a person. These can take
                        any JSON shape.
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
        example:
          type: identify
          traits:
            name: Cool Person
            email: cool.person@example.com
            likes_baseball: true
            games_attended: 5
          userId: 97980cfea0067
      track:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                required:
                  - userId
                  - event
                  - type
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  type:
                    type: string
                    enum:
                      - track
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  event:
                    type: string
                    description: The name of the event
                    example: new_account
                  properties:
                    type: object
                    description: Additional properties for your event.
                    additionalProperties:
                      x-additionalPropertiesName: Event Properties
                      description: >-
                        Additional properties that you want to capture in the
                        event. These can take any JSON shape.
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
          - title: Anonymous User
            allOf:
              - type: object
                required:
                  - event
                  - type
                  - anonymousId
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - track
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  event:
                    type: string
                    description: The name of the event
                    example: new_account
                  properties:
                    type: object
                    description: Additional properties for your event.
                    additionalProperties:
                      x-additionalPropertiesName: Event Properties
                      description: >-
                        Additional properties that you want to capture in the
                        event. These can take any JSON shape.
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
          - title: Group
            allOf:
              - type: object
                required:
                  - event
                  - type
                  - groupId
                properties:
                  groupId:
                    type: string
                    description: >-
                      The ID of the group you want to attribute an event to. Note
                      that not all destinations allow groups (or their downstream
                      equivalent) to perform groups.
                  type:
                    type: string
                    enum:
                      - track
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  event:
                    type: string
                    description: The name of the event
                    example: new_account
                  properties:
                    type: object
                    description: Additional properties for your event.
                    additionalProperties:
                      x-additionalPropertiesName: Event Properties
                      description: >-
                        Additional properties that you want to capture in the
                        event. These can take any JSON shape.
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
        example:
          anonymousId: 23adfd82-aa0f-45a7-a756-24f2a7a4c895
          context:
            library:
              name: analytics.js
              version: 2.11.1
            page:
              path: /docs/
              referrer: https://www.google.com/
              search: '?q=analytics'
              title: Customer.io Docs
              url: https://customer.io/docs
            userAgent: >-
              Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_0) AppleWebKit/537.36
              (KHTML like Gecko) Chrome/46.0.2490.86 Safari/537.36
            ip: 108.0.78.21
          event: Course Started
          integrations: null
          messageId: ajs-f8ca1e4de5024d9430b3928bd8ac6b96
          properties:
            title: Intro to Customer.io
          receivedAt: '2015-12-12T19:11:01.266Z'
          sentAt: '2015-12-12T19:11:01.169Z'
          timestamp: '2015-12-12T19:11:01.249Z'
          type: track
          userId: AiUGstSDIg
          originalTimestamp: '2015-12-12T19:11:01.152Z'
      page:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                required:
                  - userId
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  type:
                    type: string
                    enum:
                      - page
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the page.
                    example: home
                  properties:
                    type: object
                    description: >-
                      Additional `page` properties. Analytics.js automatically
                      collects `url`, `title`, `referrer`, `path`, and `search`
                      properties. But, if you use our other sources or you write
                      your own integration, you should consider sending these
                      properties yourself. Destination actions that take `page`
                      events often rely on the `url` and `title` properties.
                    properties:
                      category:
                        type: string
                        description: >-
                          The category of the page. This might be useful if you
                          have a single page routes or have a flattened URL
                          structure.
                      url:
                        type: string
                        description: >-
                          The URL of the page. This defaults to a canonical url if
                          available, and falls back to `document.location.href`.
                        example: http://www.example.com/page/
                      title:
                        type: string
                        description: >-
                          The title of the page. This defaults to
                          `document.title`, but can be overridden.
                        example: Page | Example.com
                      referrer:
                        type: string
                        description: >-
                          The referrer of the page, if applicable. This defaults
                          to `document.referrer`, but can be overridden.
                        example: http://www.google.com/search?q=example
                      path:
                        type: string
                        description: >-
                          The path of the page. This defaults to
                          `location.pathname`, but can be overridden.
                        example: /page
                      search:
                        type: string
                        description: >-
                          The search query in the URL, if present. This defaults
                          to `location.search`, but can be overridden.
                        example: '?q=sfgiants'
                    additionalProperties:
                      x-additionalPropertiesName: Page Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Non-mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            properties:
                              campaign:
                                type: object
                                description: >
                                  Contains information about the campaign that
                                  resulted in the API call, gathered from, or
                                  mapping to, UTM parameters (e.g. `utm_source`).
                                properties:
                                  name:
                                    type: string
                                    description: The campaign name.
                                  source:
                                    type: string
                                    description: >-
                                      The source of traffic—like the name of your
                                      email list, Facebook, Google, etc.
                                  medium:
                                    type: string
                                    description: >-
                                      The type of traffic a person/event
                                      originates from, like `email`, or
                                      `referral`.
                                  term:
                                    type: string
                                    description: The keyword term(s) a user came from.
                                  content:
                                    type: string
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Additional UTM Parameters
                              page:
                                type: object
                                description: >-
                                  Contains information about the current page in
                                  the browser. This is automatically collected by
                                  our JavaScript source.
                                properties:
                                  name:
                                    type: string
                                    description: >
                                      The name of the page. Reserved for future
                                      use.
                                  path:
                                    type: string
                                    description: >-
                                      The path portion of the page's URL.
                                      Equivalent to the canonical `path`  which
                                      defaults to `location.pathname`  from the
                                      DOM API.
                                  referrer:
                                    type: string
                                    description: >-
                                      The previous page's full URL. Equivalent to
                                      `document.referrer`  from the DOM API.
                                  search:
                                    type: string
                                    description: >-
                                      The query string portion of the page's URL.
                                      Equivalent to `location.search`  from the
                                      DOM API.
                                  title:
                                    type: string
                                    description: >-
                                      The page's title. Equivalent to
                                      `document.title` from the DOM API.
                                  url:
                                    type: string
                                    description: >-
                                      A page's full URL. Segment first looks for
                                      the canonical URL. If the canonical URL is
                                      not provided, Segment uses `location.href`
                                      from the DOM API.
                                  keywords:
                                    type: array
                                    description: >-
                                      A list/array of keywords describing the
                                      page's content. The keywords are likely the
                                      same as, or similar to, the keywords you
                                      would find in an HTML `meta`  tag for SEO
                                      purposes. This property is mainly used by
                                      content publishers that rely heavily on
                                      pageview tracking. This isn't automatically
                                      collected.
                                    items:
                                      type: string
          - title: Anonymous User
            allOf:
              - type: object
                required:
                  - anonymousId
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - page
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the page.
                    example: home
                  properties:
                    type: object
                    description: Additional properties for your event.
                    properties:
                      category:
                        type: string
                        description: >-
                          The category of the page. This might be useful if you
                          have a single page routes or have a flattened URL
                          structure.
                      url:
                        type: string
                        description: The URL of the page.
                      title:
                        type: string
                        description: >-
                          The title of the page. This defaults to
                          `document.title`, but can be overridden.
                        example: Page | Example.com
                      referrer:
                        type: string
                        description: >-
                          The referrer of the page, if applicable. This defaults
                          to document.referrer, but can be overridden.
                        example: http://www.google.com/search?q=example
                      path:
                        type: string
                        description: >-
                          The path of the page. This defaults to
                          location.pathname, but can be overridden.
                        example: /page
                      search:
                        type: string
                        description: >-
                          The search query in the URL, if present. This defaults
                          to location.search, but can be overridden.
                        example: '?q=sfgiants'
                    additionalProperties:
                      x-additionalPropertiesName: Page Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Non-mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            properties:
                              campaign:
                                type: object
                                description: >
                                  Contains information about the campaign that
                                  resulted in the API call, gathered from, or
                                  mapping to, UTM parameters (e.g. `utm_source`).
                                properties:
                                  name:
                                    type: string
                                    description: The campaign name.
                                  source:
                                    type: string
                                    description: >-
                                      The source of traffic—like the name of your
                                      email list, Facebook, Google, etc.
                                  medium:
                                    type: string
                                    description: >-
                                      The type of traffic a person/event
                                      originates from, like `email`, or
                                      `referral`.
                                  term:
                                    type: string
                                    description: The keyword term(s) a user came from.
                                  content:
                                    type: string
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Additional UTM Parameters
                              page:
                                type: object
                                description: >-
                                  Contains information about the current page in
                                  the browser. This is automatically collected by
                                  our JavaScript source.
                                properties:
                                  name:
                                    type: string
                                    description: >
                                      The name of the page. Reserved for future
                                      use.
                                  path:
                                    type: string
                                    description: >-
                                      The path portion of the page's URL.
                                      Equivalent to the canonical `path`  which
                                      defaults to `location.pathname`  from the
                                      DOM API.
                                  referrer:
                                    type: string
                                    description: >-
                                      The previous page's full URL. Equivalent to
                                      `document.referrer`  from the DOM API.
                                  search:
                                    type: string
                                    description: >-
                                      The query string portion of the page's URL.
                                      Equivalent to `location.search`  from the
                                      DOM API.
                                  title:
                                    type: string
                                    description: >-
                                      The page's title. Equivalent to
                                      `document.title` from the DOM API.
                                  url:
                                    type: string
                                    description: >-
                                      A page's full URL. Segment first looks for
                                      the canonical URL. If the canonical URL is
                                      not provided, Segment uses `location.href`
                                      from the DOM API.
                                  keywords:
                                    type: array
                                    description: >-
                                      A list/array of keywords describing the
                                      page's content. The keywords are likely the
                                      same as, or similar to, the keywords you
                                      would find in an HTML `meta`  tag for SEO
                                      purposes. This property is mainly used by
                                      content publishers that rely heavily on
                                      pageview tracking. This isn't automatically
                                      collected.
                                    items:
                                      type: string
        example:
          anonymousId: 507f191e810c19729de860ea
          channel: browser
          context:
            ip: 8.8.8.8
            userAgent: >-
              Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36
              (KHTML like Gecko) Chrome/40.0.2214.115 Safari/537.36
          integrations:
            All: true
            Mixpanel: false
            Salesforce: false
          messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db
          name: Home
          properties:
            title: Welcome | ACME, Inc.
            url: http://www.example.com
          receivedAt: '2015-02-23T22:28:55.387Z'
          sentAt: '2015-02-23T22:28:55.111Z'
          timestamp: '2015-02-23T22:28:55.111Z'
          type: page
          userId: 97980cfea0067
          version: 1.1
      screen:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                required:
                  - userId
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  type:
                    type: string
                    enum:
                      - screen
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the screen the person visited.
                    example: home
                  properties:
                    type: object
                    description: Additional properties for your screen.
                    additionalProperties:
                      x-additionalPropertiesName: Screen Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
          - title: Anonymous User
            allOf:
              - type: object
                required:
                  - anonymousId
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - screen
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the screen the person visited.
                    example: home
                  properties:
                    type: object
                    description: Additional properties for your screen.
                    additionalProperties:
                      x-additionalPropertiesName: Screen Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
        example:
          anonymousId: 507f191e810c19729de860ea
          context:
            ip: 8.8.8.8
          integrations:
            All: true
            Salesforce: false
          messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db
          name: feed
          properties:
            subscriptions:
              - baseball
              - basketball
          receivedAt: '2015-02-23T22:28:55.387Z'
          sentAt: '2015-02-23T22:28:55.111Z'
          timestamp: '2015-02-23T22:28:55.111Z'
          type: screen
          userId: 97980cfea0067
          version: 1.1
      groupId:
        type: string
        description: ID of the group
        example: 0e8c78ea9d97a7b8185e8632
      group:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  type:
                    type: string
                    enum:
                      - group
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                    example: group
                  groupId:
                    type: string
                    description: ID of the group
                    example: 0e8c78ea9d97a7b8185e8632
                  objectTypeId:
                    type: string
                    description: >
                      If you use Customer.io Journeys as a destination, this value
                      is the type of group/object your group belongs to; object
                      type IDs are stringified integers. If you don't include this
                      value, we assume the object type ID is `1`. See [objects in
                      Customer.io Journeys](https://customer.io/docs/api/cdp/) for
                      more information.


                      You can include this value as `objectTypeId` at the top
                      level of your payload or as `object_type_id` in the `traits`
                      object.
                    example: '1'
                  traits:
                    type: object
                    description: Additional information about the group.
                    properties:
                      object_type_id:
                        type: string
                        description: >
                          If you use Customer.io Journeys as a destination, this
                          value is the type of group/object your group belongs to;
                          object type IDs are stringified integers. If you don't
                          include this value, we assume the object type ID is `1`.
                          See [objects in Customer.io
                          Journeys](https://customer.io/docs/api/cdp/) for more
                          information.


                          You can include this value as `objectTypeId` at the top
                          level of your payload or as `object_type_id` in the
                          `traits` object.
                        example: '1'
                    additionalProperties:
                      x-additionalPropertiesName: Group Traits
                      example:
                        name: Acme
                        industry: Technology
                        road_runner_accidents: 329,
                        plan: enterprise,
                        total_billed: 830
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
          - title: Anonymous User
            allOf:
              - type: object
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - group
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                    example: group
                  groupId:
                    type: string
                    description: ID of the group
                    example: 0e8c78ea9d97a7b8185e8632
                  objectTypeId:
                    type: string
                    description: >
                      If you use Customer.io Journeys as a destination, this value
                      is the type of group/object your group belongs to; object
                      type IDs are stringified integers. If you don't include this
                      value, we assume the object type ID is `1`. See [objects in
                      Customer.io Journeys](https://customer.io/docs/api/cdp/) for
                      more information.


                      You can include this value as `objectTypeId` at the top
                      level of your payload or as `object_type_id` in the `traits`
                      object.
                    example: '1'
                  traits:
                    type: object
                    description: Additional information about the group.
                    properties:
                      object_type_id:
                        type: string
                        description: >
                          If you use Customer.io Journeys as a destination, this
                          value is the type of group/object your group belongs to;
                          object type IDs are stringified integers. If you don't
                          include this value, we assume the object type ID is `1`.
                          See [objects in Customer.io
                          Journeys](https://customer.io/docs/api/cdp/) for more
                          information.


                          You can include this value as `objectTypeId` at the top
                          level of your payload or as `object_type_id` in the
                          `traits` object.
                        example: '1'
                    additionalProperties:
                      x-additionalPropertiesName: Group Traits
                      example:
                        name: Acme
                        industry: Technology
                        road_runner_accidents: 329,
                        plan: enterprise,
                        total_billed: 830
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        oneOf:
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Non-mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                properties:
                                  campaign:
                                    type: object
                                    description: >
                                      Contains information about the campaign that
                                      resulted in the API call, gathered from, or
                                      mapping to, UTM parameters (e.g.
                                      `utm_source`).
                                    properties:
                                      name:
                                        type: string
                                        description: The campaign name.
                                      source:
                                        type: string
                                        description: >-
                                          The source of traffic—like the name of
                                          your email list, Facebook, Google, etc.
                                      medium:
                                        type: string
                                        description: >-
                                          The type of traffic a person/event
                                          originates from, like `email`, or
                                          `referral`.
                                      term:
                                        type: string
                                        description: The keyword term(s) a user came from.
                                      content:
                                        type: string
                                    additionalProperties:
                                      type: string
                                      x-additionalPropertiesName: Additional UTM Parameters
                                  page:
                                    type: object
                                    description: >-
                                      Contains information about the current page
                                      in the browser. This is automatically
                                      collected by our JavaScript source.
                                    properties:
                                      name:
                                        type: string
                                        description: >
                                          The name of the page. Reserved for
                                          future use.
                                      path:
                                        type: string
                                        description: >-
                                          The path portion of the page's URL.
                                          Equivalent to the canonical `path` 
                                          which defaults to `location.pathname` 
                                          from the DOM API.
                                      referrer:
                                        type: string
                                        description: >-
                                          The previous page's full URL. Equivalent
                                          to `document.referrer`  from the DOM
                                          API.
                                      search:
                                        type: string
                                        description: >-
                                          The query string portion of the page's
                                          URL. Equivalent to `location.search` 
                                          from the DOM API.
                                      title:
                                        type: string
                                        description: >-
                                          The page's title. Equivalent to
                                          `document.title` from the DOM API.
                                      url:
                                        type: string
                                        description: >-
                                          A page's full URL. Segment first looks
                                          for the canonical URL. If the canonical
                                          URL is not provided, Segment uses
                                          `location.href` from the DOM API.
                                      keywords:
                                        type: array
                                        description: >-
                                          A list/array of keywords describing the
                                          page's content. The keywords are likely
                                          the same as, or similar to, the keywords
                                          you would find in an HTML `meta`  tag
                                          for SEO purposes. This property is
                                          mainly used by content publishers that
                                          rely heavily on pageview tracking. This
                                          isn't automatically collected.
                                        items:
                                          type: string
                          - description: >-
                              A dictionary of context about a source call/event,
                              like the user’s IP address or locale. Context is
                              automatically collected by our source libraries.
                            title: Mobile
                            allOf:
                              - type: object
                                description: Contains contextual information about the event.
                                properties:
                                  active:
                                    type: boolean
                                    description: >
                                      Whether a user is active.


                                      This is usually used to flag an .identify()
                                      call to just update the traits but not “last
                                      seen.”
                                  ip:
                                    type: string
                                    description: >-
                                      The user's IP address. This isn't captured
                                      by our libraries, but by our servers when we
                                      receive client-side events (like from our
                                      JavaScript source).
                                  locale:
                                    type: string
                                    description: >-
                                      The local string for the current user, e.g.
                                      `en-US`.
                                  userAgent:
                                    type: string
                                    description: >-
                                      The user agent of the device making the
                                      request
                                  channel:
                                    type: string
                                    enum:
                                      - browser
                                      - server
                                      - mobile
                                    description: The channel the event originated from.
                              - type: object
                                description: Fields included in events from mobile libraries.
                                properties:
                                  app:
                                    type: object
                                    description: >
                                      Contains information about the mobile app
                                      the event originated from, automatically
                                      collected by our mobile libraries when
                                      possible.
                                    properties:
                                      name:
                                        type: string
                                        description: The name of the app.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the app the call
                                          originated from.
                                      build:
                                        type: string
                                        description: The specific build number in the app.
                                      namespace:
                                        type: string
                                        description: The app's namespace.
                                  device:
                                    type: object
                                    description: >
                                      Contains information about the device the
                                      event originated from.
                                    properties:
                                      id:
                                        type: string
                                        description: The device ID.
                                      advertisingId:
                                        type: string
                                        description: >-
                                          The advertising ID is a unique,
                                          anonymous ID for advertising.
                                      manufacturer:
                                        type: string
                                        description: The device manufacturer.
                                      model:
                                        type: string
                                        description: The device model.
                                      name:
                                        type: string
                                        description: The device name.
                                      type:
                                        type: string
                                        description: The device type—android, iOS, etc.
                                        enum:
                                          - android
                                          - ios
                                      version:
                                        type: string
                                        description: The firmware version for the device.
                                  network:
                                    type: object
                                    description: >-
                                      Information about the current network
                                      connection, containing `bluetooth`,
                                      `carrier`, `cellular`, and `wifi`. If the
                                      `context.network.cellular` and
                                      `context.network.wifi` fields are empty,
                                      then the user is offline.
                                    properties:
                                      bluetooth:
                                        type: boolean
                                        description: >-
                                          Lets you know if bluetooth is enabled on
                                          a device.
                                      carrier:
                                        type: string
                                        description: The cellular carrier the phone uses.
                                      cellular:
                                        type: boolean
                                        description: >-
                                          Indicates whether the device's cellular
                                          connection is enabled or not.
                                      wifi:
                                        type: boolean
                                        description: >-
                                          Indicates whether a device's wifi
                                          connection is enabled or not.
                                  os:
                                    type: object
                                    description: >
                                      Dictionary of information about the
                                      operating system, containing `name` and
                                      `version`.
                                    properties:
                                      name:
                                        type: string
                                        description: >-
                                          The operating system running on the
                                          device.
                                      version:
                                        type: string
                                        description: >-
                                          The version of the OS running on the
                                          device.
        example:
          anonymousId: 507f191e810c19729de860ea,
          channel: browser,
          context:
            ip: 8.8.8.8
            userAgent: >-
              Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36
              (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36
          integrations:
            All: true
            Mixpanel: false
            Salesforce: false
          messageId: 022bb90c-bbac-11e4-8dfc-aa07a5b093db,
          receivedAt: 2015-02-23T22:28:55.387Z,
          sentAt: 2015-02-23T22:28:55.111Z,
          timestamp: 2015-02-23T22:28:55.111Z,
          traits:
            name: ACME, Inc.
            industry: Technology
            employees: 329
            plan: enterprise
            total billed: 830
          type: group
          userId: 97980cfea0067
          groupId: 0e8c78ea9d97a7b8185e8632,
          version: 1.1
      userId:
        type: string
        description: >-
          The unique identifier for a person. This value should be unique across
          systems, so you recognize the same person in your sources _and_
          destinations.
        example: 241ma8mf4a
      anonymousId:
        type: string
        description: >-
          A unique substitute for a User ID in cases when you don’t have an
          absolutely unique identifier. Our libraries generate this value
          automatically to help you track people before they sign up, log in,
          provide their email, etc.
        example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
      all_common_fields:
        allOf:
          - type: object
            properties:
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  All: true
                  Salesforce: false
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines call, ensuring that
                  each individual event is unique. This is set by Customer.io
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
              originalTimestamp:
                type: string
                format: date-time
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              type:
                readOnly: true
                type: string
                enum:
                  - identify
                  - group
                  - track
                  - page
                  - screen
                  - alias
                description: >-
                  The type of source event. This is implicit and set by
                  Customer.io based on the endpoint/method you use (e.g.
                  `identify`).
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - type: object
            properties:
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                oneOf:
                  - description: >-
                      A dictionary of context about a source call/event, like the
                      user’s IP address or locale. Context is automatically
                      collected by our source libraries.
                    title: Non-mobile
                    allOf:
                      - type: object
                        description: Contains contextual information about the event.
                        properties:
                          active:
                            type: boolean
                            description: >
                              Whether a user is active.


                              This is usually used to flag an .identify() call to
                              just update the traits but not “last seen.”
                          ip:
                            type: string
                            description: >-
                              The user's IP address. This isn't captured by our
                              libraries, but by our servers when we receive
                              client-side events (like from our JavaScript
                              source).
                          locale:
                            type: string
                            description: The local string for the current user, e.g. `en-US`.
                          userAgent:
                            type: string
                            description: The user agent of the device making the request
                          channel:
                            type: string
                            enum:
                              - browser
                              - server
                              - mobile
                            description: The channel the event originated from.
                      - type: object
                        properties:
                          campaign:
                            type: object
                            description: >
                              Contains information about the campaign that
                              resulted in the API call, gathered from, or mapping
                              to, UTM parameters (e.g. `utm_source`).
                            properties:
                              name:
                                type: string
                                description: The campaign name.
                              source:
                                type: string
                                description: >-
                                  The source of traffic—like the name of your
                                  email list, Facebook, Google, etc.
                              medium:
                                type: string
                                description: >-
                                  The type of traffic a person/event originates
                                  from, like `email`, or `referral`.
                              term:
                                type: string
                                description: The keyword term(s) a user came from.
                              content:
                                type: string
                            additionalProperties:
                              type: string
                              x-additionalPropertiesName: Additional UTM Parameters
                          page:
                            type: object
                            description: >-
                              Contains information about the current page in the
                              browser. This is automatically collected by our
                              JavaScript source.
                            properties:
                              name:
                                type: string
                                description: |
                                  The name of the page. Reserved for future use.
                              path:
                                type: string
                                description: >-
                                  The path portion of the page's URL. Equivalent
                                  to the canonical `path`  which defaults to
                                  `location.pathname`  from the DOM API.
                              referrer:
                                type: string
                                description: >-
                                  The previous page's full URL. Equivalent to
                                  `document.referrer`  from the DOM API.
                              search:
                                type: string
                                description: >-
                                  The query string portion of the page's URL.
                                  Equivalent to `location.search`  from the DOM
                                  API.
                              title:
                                type: string
                                description: >-
                                  The page's title. Equivalent to `document.title`
                                  from the DOM API.
                              url:
                                type: string
                                description: >-
                                  A page's full URL. Segment first looks for the
                                  canonical URL. If the canonical URL is not
                                  provided, Segment uses `location.href` from the
                                  DOM API.
                              keywords:
                                type: array
                                description: >-
                                  A list/array of keywords describing the page's
                                  content. The keywords are likely the same as, or
                                  similar to, the keywords you would find in an
                                  HTML `meta`  tag for SEO purposes. This property
                                  is mainly used by content publishers that rely
                                  heavily on pageview tracking. This isn't
                                  automatically collected.
                                items:
                                  type: string
                  - description: >-
                      A dictionary of context about a source call/event, like the
                      user’s IP address or locale. Context is automatically
                      collected by our source libraries.
                    title: Mobile
                    allOf:
                      - type: object
                        description: Contains contextual information about the event.
                        properties:
                          active:
                            type: boolean
                            description: >
                              Whether a user is active.


                              This is usually used to flag an .identify() call to
                              just update the traits but not “last seen.”
                          ip:
                            type: string
                            description: >-
                              The user's IP address. This isn't captured by our
                              libraries, but by our servers when we receive
                              client-side events (like from our JavaScript
                              source).
                          locale:
                            type: string
                            description: The local string for the current user, e.g. `en-US`.
                          userAgent:
                            type: string
                            description: The user agent of the device making the request
                          channel:
                            type: string
                            enum:
                              - browser
                              - server
                              - mobile
                            description: The channel the event originated from.
                      - type: object
                        description: Fields included in events from mobile libraries.
                        properties:
                          app:
                            type: object
                            description: >
                              Contains information about the mobile app the event
                              originated from, automatically collected by our
                              mobile libraries when possible.
                            properties:
                              name:
                                type: string
                                description: The name of the app.
                              version:
                                type: string
                                description: The version of the app the call originated from.
                              build:
                                type: string
                                description: The specific build number in the app.
                              namespace:
                                type: string
                                description: The app's namespace.
                          device:
                            type: object
                            description: >
                              Contains information about the device the event
                              originated from.
                            properties:
                              id:
                                type: string
                                description: The device ID.
                              advertisingId:
                                type: string
                                description: >-
                                  The advertising ID is a unique, anonymous ID for
                                  advertising.
                              manufacturer:
                                type: string
                                description: The device manufacturer.
                              model:
                                type: string
                                description: The device model.
                              name:
                                type: string
                                description: The device name.
                              type:
                                type: string
                                description: The device type—android, iOS, etc.
                                enum:
                                  - android
                                  - ios
                              version:
                                type: string
                                description: The firmware version for the device.
                          network:
                            type: object
                            description: >-
                              Information about the current network connection,
                              containing `bluetooth`, `carrier`, `cellular`, and
                              `wifi`. If the `context.network.cellular` and
                              `context.network.wifi` fields are empty, then the
                              user is offline.
                            properties:
                              bluetooth:
                                type: boolean
                                description: >-
                                  Lets you know if bluetooth is enabled on a
                                  device.
                              carrier:
                                type: string
                                description: The cellular carrier the phone uses.
                              cellular:
                                type: boolean
                                description: >-
                                  Indicates whether the device's cellular
                                  connection is enabled or not.
                              wifi:
                                type: boolean
                                description: >-
                                  Indicates whether a device's wifi connection is
                                  enabled or not.
                          os:
                            type: object
                            description: >
                              Dictionary of information about the operating
                              system, containing `name` and `version`.
                            properties:
                              name:
                                type: string
                                description: The operating system running on the device.
                              version:
                                type: string
                                description: The version of the OS running on the device.
      page_common_fields:
        allOf:
          - type: object
            properties:
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  All: true
                  Salesforce: false
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines call, ensuring that
                  each individual event is unique. This is set by Customer.io
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
              originalTimestamp:
                type: string
                format: date-time
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              type:
                readOnly: true
                type: string
                enum:
                  - identify
                  - group
                  - track
                  - page
                  - screen
                  - alias
                description: >-
                  The type of source event. This is implicit and set by
                  Customer.io based on the endpoint/method you use (e.g.
                  `identify`).
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - type: object
            properties:
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
      mobile_common_fields:
        allOf:
          - type: object
            properties:
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  All: true
                  Salesforce: false
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines call, ensuring that
                  each individual event is unique. This is set by Customer.io
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
              originalTimestamp:
                type: string
                format: date-time
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              type:
                readOnly: true
                type: string
                enum:
                  - identify
                  - group
                  - track
                  - page
                  - screen
                  - alias
                description: >-
                  The type of source event. This is implicit and set by
                  Customer.io based on the endpoint/method you use (e.g.
                  `identify`).
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - type: object
            properties:
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
      context:
        description: >-
          A dictionary of context about a source call/event, like the user’s IP
          address or locale. Context is automatically collected by our source
          libraries.
        oneOf:
          - description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            title: Non-mobile
            allOf:
              - type: object
                description: Contains contextual information about the event.
                properties:
                  active:
                    type: boolean
                    description: >
                      Whether a user is active.


                      This is usually used to flag an .identify() call to just
                      update the traits but not “last seen.”
                  ip:
                    type: string
                    description: >-
                      The user's IP address. This isn't captured by our libraries,
                      but by our servers when we receive client-side events (like
                      from our JavaScript source).
                  locale:
                    type: string
                    description: The local string for the current user, e.g. `en-US`.
                  userAgent:
                    type: string
                    description: The user agent of the device making the request
                  channel:
                    type: string
                    enum:
                      - browser
                      - server
                      - mobile
                    description: The channel the event originated from.
              - type: object
                properties:
                  campaign:
                    type: object
                    description: >
                      Contains information about the campaign that resulted in the
                      API call, gathered from, or mapping to, UTM parameters (e.g.
                      `utm_source`).
                    properties:
                      name:
                        type: string
                        description: The campaign name.
                      source:
                        type: string
                        description: >-
                          The source of traffic—like the name of your email list,
                          Facebook, Google, etc.
                      medium:
                        type: string
                        description: >-
                          The type of traffic a person/event originates from, like
                          `email`, or `referral`.
                      term:
                        type: string
                        description: The keyword term(s) a user came from.
                      content:
                        type: string
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Additional UTM Parameters
                  page:
                    type: object
                    description: >-
                      Contains information about the current page in the browser.
                      This is automatically collected by our JavaScript source.
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the page. Reserved for future use.
                      path:
                        type: string
                        description: >-
                          The path portion of the page's URL. Equivalent to the
                          canonical `path`  which defaults to `location.pathname` 
                          from the DOM API.
                      referrer:
                        type: string
                        description: >-
                          The previous page's full URL. Equivalent to
                          `document.referrer`  from the DOM API.
                      search:
                        type: string
                        description: >-
                          The query string portion of the page's URL. Equivalent
                          to `location.search`  from the DOM API.
                      title:
                        type: string
                        description: >-
                          The page's title. Equivalent to `document.title` from
                          the DOM API.
                      url:
                        type: string
                        description: >-
                          A page's full URL. Segment first looks for the canonical
                          URL. If the canonical URL is not provided, Segment uses
                          `location.href` from the DOM API.
                      keywords:
                        type: array
                        description: >-
                          A list/array of keywords describing the page's content.
                          The keywords are likely the same as, or similar to, the
                          keywords you would find in an HTML `meta`  tag for SEO
                          purposes. This property is mainly used by content
                          publishers that rely heavily on pageview tracking. This
                          isn't automatically collected.
                        items:
                          type: string
          - description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            title: Mobile
            allOf:
              - type: object
                description: Contains contextual information about the event.
                properties:
                  active:
                    type: boolean
                    description: >
                      Whether a user is active.


                      This is usually used to flag an .identify() call to just
                      update the traits but not “last seen.”
                  ip:
                    type: string
                    description: >-
                      The user's IP address. This isn't captured by our libraries,
                      but by our servers when we receive client-side events (like
                      from our JavaScript source).
                  locale:
                    type: string
                    description: The local string for the current user, e.g. `en-US`.
                  userAgent:
                    type: string
                    description: The user agent of the device making the request
                  channel:
                    type: string
                    enum:
                      - browser
                      - server
                      - mobile
                    description: The channel the event originated from.
              - type: object
                description: Fields included in events from mobile libraries.
                properties:
                  app:
                    type: object
                    description: >
                      Contains information about the mobile app the event
                      originated from, automatically collected by our mobile
                      libraries when possible.
                    properties:
                      name:
                        type: string
                        description: The name of the app.
                      version:
                        type: string
                        description: The version of the app the call originated from.
                      build:
                        type: string
                        description: The specific build number in the app.
                      namespace:
                        type: string
                        description: The app's namespace.
                  device:
                    type: object
                    description: >
                      Contains information about the device the event originated
                      from.
                    properties:
                      id:
                        type: string
                        description: The device ID.
                      advertisingId:
                        type: string
                        description: >-
                          The advertising ID is a unique, anonymous ID for
                          advertising.
                      manufacturer:
                        type: string
                        description: The device manufacturer.
                      model:
                        type: string
                        description: The device model.
                      name:
                        type: string
                        description: The device name.
                      type:
                        type: string
                        description: The device type—android, iOS, etc.
                        enum:
                          - android
                          - ios
                      version:
                        type: string
                        description: The firmware version for the device.
                  network:
                    type: object
                    description: >-
                      Information about the current network connection, containing
                      `bluetooth`, `carrier`, `cellular`, and `wifi`. If the
                      `context.network.cellular` and `context.network.wifi` fields
                      are empty, then the user is offline.
                    properties:
                      bluetooth:
                        type: boolean
                        description: Lets you know if bluetooth is enabled on a device.
                      carrier:
                        type: string
                        description: The cellular carrier the phone uses.
                      cellular:
                        type: boolean
                        description: >-
                          Indicates whether the device's cellular connection is
                          enabled or not.
                      wifi:
                        type: boolean
                        description: >-
                          Indicates whether a device's wifi connection is enabled
                          or not.
                  os:
                    type: object
                    description: >
                      Dictionary of information about the operating system,
                      containing `name` and `version`.
                    properties:
                      name:
                        type: string
                        description: The operating system running on the device.
                      version:
                        type: string
                        description: The version of the OS running on the device.
      integrations:
        type: object
        description: >
          Contains a list of booleans indicating the integrations that are enabled
          (true) or disabled (false). By default, all integrations are enabled
          (returning an empty object). Set `"All": false` to reverse this
          behavior.
        additionalProperties:
          type: boolean
          x-additionalPropertiesName: Enabled/Disabled integrations
        example:
          All: true
          Salesforce: false
      common_fields:
        type: object
        properties:
          integrations:
            type: object
            description: >
              Contains a list of booleans indicating the integrations that are
              enabled (true) or disabled (false). By default, all integrations are
              enabled (returning an empty object). Set `"All": false` to reverse
              this behavior.
            additionalProperties:
              type: boolean
              x-additionalPropertiesName: Enabled/Disabled integrations
            example:
              All: true
              Salesforce: false
          messageId:
            type: string
            description: >-
              A unique identifier for a Data Pipelines call, ensuring that each
              individual event is unique. This is set by Customer.io
          receivedAt:
            type: string
            format: date-time
            readOnly: true
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sentAt:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          originalTimestamp:
            type: string
            format: date-time
          timestamp:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when the event originally took place. This is
              mostly useful when you backfill data past events. If you're not
              backfilling data, you can leave this field empty and we'll use the
              current time or server time.
          type:
            readOnly: true
            type: string
            enum:
              - identify
              - group
              - track
              - page
              - screen
              - alias
            description: >-
              The type of source event. This is implicit and set by Customer.io
              based on the endpoint/method you use (e.g. `identify`).
          version:
            readOnly: true
            type: number
            description: >-
              The version of the API that received the event, automatically set by
              Customer.io.
      context_common:
        type: object
        description: Contains contextual information about the event.
        properties:
          active:
            type: boolean
            description: >
              Whether a user is active.


              This is usually used to flag an .identify() call to just update the
              traits but not “last seen.”
          ip:
            type: string
            description: >-
              The user's IP address. This isn't captured by our libraries, but by
              our servers when we receive client-side events (like from our
              JavaScript source).
          locale:
            type: string
            description: The local string for the current user, e.g. `en-US`.
          userAgent:
            type: string
            description: The user agent of the device making the request
          channel:
            type: string
            enum:
              - browser
              - server
              - mobile
            description: The channel the event originated from.
      context_page:
        type: object
        description: >-
          Contains information about the current page in the browser. This is
          automatically collected by our JavaScript source.
        properties:
          name:
            type: string
            description: |
              The name of the page. Reserved for future use.
          path:
            type: string
            description: >-
              The path portion of the page's URL. Equivalent to the canonical
              `path`  which defaults to `location.pathname`  from the DOM API.
          referrer:
            type: string
            description: >-
              The previous page's full URL. Equivalent to `document.referrer` 
              from the DOM API.
          search:
            type: string
            description: >-
              The query string portion of the page's URL. Equivalent to
              `location.search`  from the DOM API.
          title:
            type: string
            description: The page's title. Equivalent to `document.title` from the DOM API.
          url:
            type: string
            description: >-
              A page's full URL. Segment first looks for the canonical URL. If the
              canonical URL is not provided, Segment uses `location.href` from the
              DOM API.
          keywords:
            type: array
            description: >-
              A list/array of keywords describing the page's content. The keywords
              are likely the same as, or similar to, the keywords you would find
              in an HTML `meta`  tag for SEO purposes. This property is mainly
              used by content publishers that rely heavily on pageview tracking.
              This isn't automatically collected.
            items:
              type: string
      context_non_mobile:
        description: >-
          A dictionary of context about a source call/event, like the user’s IP
          address or locale. Context is automatically collected by our source
          libraries.
        title: Non-mobile
        allOf:
          - type: object
            description: Contains contextual information about the event.
            properties:
              active:
                type: boolean
                description: >
                  Whether a user is active.


                  This is usually used to flag an .identify() call to just update
                  the traits but not “last seen.”
              ip:
                type: string
                description: >-
                  The user's IP address. This isn't captured by our libraries, but
                  by our servers when we receive client-side events (like from our
                  JavaScript source).
              locale:
                type: string
                description: The local string for the current user, e.g. `en-US`.
              userAgent:
                type: string
                description: The user agent of the device making the request
              channel:
                type: string
                enum:
                  - browser
                  - server
                  - mobile
                description: The channel the event originated from.
          - type: object
            properties:
              campaign:
                type: object
                description: >
                  Contains information about the campaign that resulted in the API
                  call, gathered from, or mapping to, UTM parameters (e.g.
                  `utm_source`).
                properties:
                  name:
                    type: string
                    description: The campaign name.
                  source:
                    type: string
                    description: >-
                      The source of traffic—like the name of your email list,
                      Facebook, Google, etc.
                  medium:
                    type: string
                    description: >-
                      The type of traffic a person/event originates from, like
                      `email`, or `referral`.
                  term:
                    type: string
                    description: The keyword term(s) a user came from.
                  content:
                    type: string
                additionalProperties:
                  type: string
                  x-additionalPropertiesName: Additional UTM Parameters
              page:
                type: object
                description: >-
                  Contains information about the current page in the browser. This
                  is automatically collected by our JavaScript source.
                properties:
                  name:
                    type: string
                    description: |
                      The name of the page. Reserved for future use.
                  path:
                    type: string
                    description: >-
                      The path portion of the page's URL. Equivalent to the
                      canonical `path`  which defaults to `location.pathname` 
                      from the DOM API.
                  referrer:
                    type: string
                    description: >-
                      The previous page's full URL. Equivalent to
                      `document.referrer`  from the DOM API.
                  search:
                    type: string
                    description: >-
                      The query string portion of the page's URL. Equivalent to
                      `location.search`  from the DOM API.
                  title:
                    type: string
                    description: >-
                      The page's title. Equivalent to `document.title` from the
                      DOM API.
                  url:
                    type: string
                    description: >-
                      A page's full URL. Segment first looks for the canonical
                      URL. If the canonical URL is not provided, Segment uses
                      `location.href` from the DOM API.
                  keywords:
                    type: array
                    description: >-
                      A list/array of keywords describing the page's content. The
                      keywords are likely the same as, or similar to, the keywords
                      you would find in an HTML `meta`  tag for SEO purposes. This
                      property is mainly used by content publishers that rely
                      heavily on pageview tracking. This isn't automatically
                      collected.
                    items:
                      type: string
      context_mobile:
        description: >-
          A dictionary of context about a source call/event, like the user’s IP
          address or locale. Context is automatically collected by our source
          libraries.
        title: Mobile
        allOf:
          - type: object
            description: Contains contextual information about the event.
            properties:
              active:
                type: boolean
                description: >
                  Whether a user is active.


                  This is usually used to flag an .identify() call to just update
                  the traits but not “last seen.”
              ip:
                type: string
                description: >-
                  The user's IP address. This isn't captured by our libraries, but
                  by our servers when we receive client-side events (like from our
                  JavaScript source).
              locale:
                type: string
                description: The local string for the current user, e.g. `en-US`.
              userAgent:
                type: string
                description: The user agent of the device making the request
              channel:
                type: string
                enum:
                  - browser
                  - server
                  - mobile
                description: The channel the event originated from.
          - type: object
            description: Fields included in events from mobile libraries.
            properties:
              app:
                type: object
                description: >
                  Contains information about the mobile app the event originated
                  from, automatically collected by our mobile libraries when
                  possible.
                properties:
                  name:
                    type: string
                    description: The name of the app.
                  version:
                    type: string
                    description: The version of the app the call originated from.
                  build:
                    type: string
                    description: The specific build number in the app.
                  namespace:
                    type: string
                    description: The app's namespace.
              device:
                type: object
                description: |
                  Contains information about the device the event originated from.
                properties:
                  id:
                    type: string
                    description: The device ID.
                  advertisingId:
                    type: string
                    description: >-
                      The advertising ID is a unique, anonymous ID for
                      advertising.
                  manufacturer:
                    type: string
                    description: The device manufacturer.
                  model:
                    type: string
                    description: The device model.
                  name:
                    type: string
                    description: The device name.
                  type:
                    type: string
                    description: The device type—android, iOS, etc.
                    enum:
                      - android
                      - ios
                  version:
                    type: string
                    description: The firmware version for the device.
              network:
                type: object
                description: >-
                  Information about the current network connection, containing
                  `bluetooth`, `carrier`, `cellular`, and `wifi`. If the
                  `context.network.cellular` and `context.network.wifi` fields are
                  empty, then the user is offline.
                properties:
                  bluetooth:
                    type: boolean
                    description: Lets you know if bluetooth is enabled on a device.
                  carrier:
                    type: string
                    description: The cellular carrier the phone uses.
                  cellular:
                    type: boolean
                    description: >-
                      Indicates whether the device's cellular connection is
                      enabled or not.
                  wifi:
                    type: boolean
                    description: >-
                      Indicates whether a device's wifi connection is enabled or
                      not.
              os:
                type: object
                description: >
                  Dictionary of information about the operating system, containing
                  `name` and `version`.
                properties:
                  name:
                    type: string
                    description: The operating system running on the device.
                  version:
                    type: string
                    description: The version of the OS running on the device.
      batch:
        type: object
        properties:
          batch:
            type: array
            description: A group of requests you want to send to Data Pipelines in the call.
            items:
              anyOf:
                - title: Identify
                  oneOf:
                    - title: Known User
                      allOf:
                        - type: object
                          required:
                            - userId
                          properties:
                            userId:
                              type: string
                              description: >-
                                The unique identifier for a person. This value
                                should be unique across systems, so you recognize
                                the same person in your sources _and_
                                destinations.
                              example: 241ma8mf4a
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - identify
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            traits:
                              type: object
                              description: >-
                                Additional properties that you know about a
                                person. We've listed some common/reserved traits
                                below, but you can add any traits that you might
                                use in another system.
                              properties:
                                email:
                                  type: string
                                  description: >-
                                    A person's email address. In some cases, you
                                    can pass an empty `userId` and we'll use this
                                    value to identify a person.
                                createdAt:
                                  type: string
                                  format: date-time
                                  description: >-
                                    We recommend that you pass date-time values as
                                    ISO 8601 date-time strings. We convert this
                                    value to fit destinations where appropriate.
                              additionalProperties:
                                x-additionalPropertiesName: Additional Traits
                                description: >-
                                  Traits that you want to set on a person. These
                                  can take any JSON shape.
                        - allOf:
                            - type: object
                              properties:
                                integrations:
                                  type: object
                                  description: >
                                    Contains a list of booleans indicating the
                                    integrations that are enabled (true) or
                                    disabled (false). By default, all integrations
                                    are enabled (returning an empty object). Set
                                    `"All": false` to reverse this behavior.
                                  additionalProperties:
                                    type: boolean
                                    x-additionalPropertiesName: Enabled/Disabled integrations
                                  example:
                                    All: true
                                    Salesforce: false
                                messageId:
                                  type: string
                                  description: >-
                                    A unique identifier for a Data Pipelines call,
                                    ensuring that each individual event is unique.
                                    This is set by Customer.io
                                receivedAt:
                                  type: string
                                  format: date-time
                                  readOnly: true
                                  description: >-
                                    The ISO-8601 timestamp when Data Pipelines
                                    receives an event.
                                sentAt:
                                  type: string
                                  format: date-time
                                  description: >-
                                    The ISO-8601 timestamp when a library sends an
                                    event to Data Pipelines.
                                originalTimestamp:
                                  type: string
                                  format: date-time
                                timestamp:
                                  type: string
                                  format: date-time
                                  description: >-
                                    The ISO-8601 timestamp when the event
                                    originally took place. This is mostly useful
                                    when you backfill data past events. If you're
                                    not backfilling data, you can leave this field
                                    empty and we'll use the current time or server
                                    time.
                                type:
                                  readOnly: true
                                  type: string
                                  enum:
                                    - identify
                                    - group
                                    - track
                                    - page
                                    - screen
                                    - alias
                                  description: >-
                                    The type of source event. This is implicit and
                                    set by Customer.io based on the
                                    endpoint/method you use (e.g. `identify`).
                                version:
                                  readOnly: true
                                  type: number
                                  description: >-
                                    The version of the API that received the
                                    event, automatically set by Customer.io.
                            - type: object
                              properties:
                                context:
                                  description: >-
                                    A dictionary of context about a source
                                    call/event, like the user’s IP address or
                                    locale. Context is automatically collected by
                                    our source libraries.
                                  oneOf:
                                    - description: >-
                                        A dictionary of context about a source
                                        call/event, like the user’s IP address or
                                        locale. Context is automatically collected
                                        by our source libraries.
                                      title: Non-mobile
                                      allOf:
                                        - type: object
                                          description: >-
                                            Contains contextual information about
                                            the event.
                                          properties:
                                            active:
                                              type: boolean
                                              description: >
                                                Whether a user is active.


                                                This is usually used to flag an
                                                .identify() call to just update the
                                                traits but not “last seen.”
                                            ip:
                                              type: string
                                              description: >-
                                                The user's IP address. This isn't
                                                captured by our libraries, but by our
                                                servers when we receive client-side
                                                events (like from our JavaScript
                                                source).
                                            locale:
                                              type: string
                                              description: >-
                                                The local string for the current user,
                                                e.g. `en-US`.
                                            userAgent:
                                              type: string
                                              description: >-
                                                The user agent of the device making the
                                                request
                                            channel:
                                              type: string
                                              enum:
                                                - browser
                                                - server
                                                - mobile
                                              description: The channel the event originated from.
                                        - type: object
                                          properties:
                                            campaign:
                                              type: object
                                              description: >
                                                Contains information about the campaign
                                                that resulted in the API call, gathered
                                                from, or mapping to, UTM parameters
                                                (e.g. `utm_source`).
                                              properties:
                                                name:
                                                  type: string
                                                  description: The campaign name.
                                                source:
                                                  type: string
                                                  description: >-
                                                    The source of traffic—like the name of
                                                    your email list, Facebook, Google, etc.
                                                medium:
                                                  type: string
                                                  description: >-
                                                    The type of traffic a person/event
                                                    originates from, like `email`, or
                                                    `referral`.
                                                term:
                                                  type: string
                                                  description: The keyword term(s) a user came from.
                                                content:
                                                  type: string
                                              additionalProperties:
                                                type: string
                                                x-additionalPropertiesName: Additional UTM Parameters
                                            page:
                                              type: object
                                              description: >-
                                                Contains information about the current
                                                page in the browser. This is
                                                automatically collected by our
                                                JavaScript source.
                                              properties:
                                                name:
                                                  type: string
                                                  description: >
                                                    The name of the page. Reserved for
                                                    future use.
                                                path:
                                                  type: string
                                                  description: >-
                                                    The path portion of the page's URL.
                                                    Equivalent to the canonical `path` 
                                                    which defaults to `location.pathname` 
                                                    from the DOM API.
                                                referrer:
                                                  type: string
                                                  description: >-
                                                    The previous page's full URL. Equivalent
                                                    to `document.referrer`  from the DOM
                                                    API.
                                                search:
                                                  type: string
                                                  description: >-
                                                    The query string portion of the page's
                                                    URL. Equivalent to `location.search` 
                                                    from the DOM API.
                                                title:
                                                  type: string
                                                  description: >-
                                                    The page's title. Equivalent to
                                                    `document.title` from the DOM API.
                                                url:
                                                  type: string
                                                  description: >-
                                                    A page's full URL. Segment first looks
                                                    for the canonical URL. If the canonical
                                                    URL is not provided, Segment uses
                                                    `location.href` from the DOM API.
                                                keywords:
                                                  type: array
                                                  description: >-
                                                    A list/array of keywords describing the
                                                    page's content. The keywords are likely
                                                    the same as, or similar to, the keywords
                                                    you would find in an HTML `meta`  tag
                                                    for SEO purposes. This property is
                                                    mainly used by content publishers that
                                                    rely heavily on pageview tracking. This
                                                    isn't automatically collected.
                                                  items:
                                                    type: string
                                    - description: >-
                                        A dictionary of context about a source
                                        call/event, like the user’s IP address or
                                        locale. Context is automatically collected
                                        by our source libraries.
                                      title: Mobile
                                      allOf:
                                        - type: object
                                          description: >-
                                            Contains contextual information about
                                            the event.
                                          properties:
                                            active:
                                              type: boolean
                                              description: >
                                                Whether a user is active.


                                                This is usually used to flag an
                                                .identify() call to just update the
                                                traits but not “last seen.”
                                            ip:
                                              type: string
                                              description: >-
                                                The user's IP address. This isn't
                                                captured by our libraries, but by our
                                                servers when we receive client-side
                                                events (like from our JavaScript
                                                source).
                                            locale:
                                              type: string
                                              description: >-
                                                The local string for the current user,
                                                e.g. `en-US`.
                                            userAgent:
                                              type: string
                                              description: >-
                                                The user agent of the device making the
                                                request
                                            channel:
                                              type: string
                                              enum:
                                                - browser
                                                - server
                                                - mobile
                                              description: The channel the event originated from.
                                        - type: object
                                          description: >-
                                            Fields included in events from mobile
                                            libraries.
                                          properties:
                                            app:
                                              type: object
                                              description: >
                                                Contains information about the mobile
                                                app the event originated from,
                                                automatically collected by our mobile
                                                libraries when possible.
                                              properties:
                                                name:
                                                  type: string
                                                  description: The name of the app.
                                                version:
                                                  type: string
                                                  description: >-
                                                    The version of the app the call
                                                    originated from.
                                                build:
                                                  type: string
                                                  description: The specific build number in the app.
                                                namespace:
                                                  type: string
                                                  description: The app's namespace.
                                            device:
                                              type: object
                                              description: >
                                                Contains information about the device
                                                the event originated from.
                                              properties:
                                                id:
                                                  type: string
                                                  description: The device ID.
                                                advertisingId:
                                                  type: string
                                                  description: >-
                                                    The advertising ID is a unique,
                                                    anonymous ID for advertising.
                                                manufacturer:
                                                  type: string
                                                  description: The device manufacturer.
                                                model:
                                                  type: string
                                                  description: The device model.
                                                name:
                                                  type: string
                                                  description: The device name.
                                                type:
                                                  type: string
                                                  description: The device type—android, iOS, etc.
                                                  enum:
                                                    - android
                                                    - ios
                                                version:
                                                  type: string
                                                  description: The firmware version for the device.
                                            network:
                                              type: object
                                              description: >-
                                                Information about the current network
                                                connection, containing `bluetooth`,
                                                `carrier`, `cellular`, and `wifi`. If
                                                the `context.network.cellular` and
                                                `context.network.wifi` fields are empty,
                                                then the user is offline.
                                              properties:
                                                bluetooth:
                                                  type: boolean
                                                  description: >-
                                                    Lets you know if bluetooth is enabled on
                                                    a device.
                                                carrier:
                                                  type: string
                                                  description: The cellular carrier the phone uses.
                                                cellular:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the device's cellular
                                                    connection is enabled or not.
                                                wifi:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether a device's wifi
                                                    connection is enabled or not.
                                            os:
                                              type: object
                                              description: >
                                                Dictionary of information about the
                                                operating system, containing `name` and
                                                `version`.
                                              properties:
                                                name:
                                                  type: string
                                                  description: >-
                                                    The operating system running on the
                                                    device.
                                                version:
                                                  type: string
                                                  description: >-
                                                    The version of the OS running on the
                                                    device.
                    - title: Anonymous User
                      allOf:
                        - type: object
                          required:
                            - anonymousId
                          properties:
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - identify
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            traits:
                              type: object
                              description: >-
                                Additional properties that you know about a
                                person. We've listed some common/reserved traits
                                below, but you can add any traits that you might
                                use in another system.
                              properties:
                                email:
                                  type: string
                                  description: >-
                                    A person's email address. In some cases, you
                                    can pass an empty `userId` and we'll use this
                                    value to identify a person.
                                createdAt:
                                  type: string
                                  format: date-time
                                  description: >-
                                    We recommend that you pass date-time values as
                                    ISO 8601 date-time strings. We convert this
                                    value to fit destinations where appropriate.
                              additionalProperties:
                                x-additionalPropertiesName: Additional Traits
                                description: >-
                                  Traits that you want to set on a person. These
                                  can take any JSON shape.
                        - allOf:
                            - type: object
                              properties:
                                integrations:
                                  type: object
                                  description: >
                                    Contains a list of booleans indicating the
                                    integrations that are enabled (true) or
                                    disabled (false). By default, all integrations
                                    are enabled (returning an empty object). Set
                                    `"All": false` to reverse this behavior.
                                  additionalProperties:
                                    type: boolean
                                    x-additionalPropertiesName: Enabled/Disabled integrations
                                  example:
                                    All: true
                                    Salesforce: false
                                messageId:
                                  type: string
                                  description: >-
                                    A unique identifier for a Data Pipelines call,
                                    ensuring that each individual event is unique.
                                    This is set by Customer.io
                                receivedAt:
                                  type: string
                                  format: date-time
                                  readOnly: true
                                  description: >-
                                    The ISO-8601 timestamp when Data Pipelines
                                    receives an event.
                                sentAt:
                                  type: string
                                  format: date-time
                                  description: >-
                                    The ISO-8601 timestamp when a library sends an
                                    event to Data Pipelines.
                                originalTimestamp:
                                  type: string
                                  format: date-time
                                timestamp:
                                  type: string
                                  format: date-time
                                  description: >-
                                    The ISO-8601 timestamp when the event
                                    originally took place. This is mostly useful
                                    when you backfill data past events. If you're
                                    not backfilling data, you can leave this field
                                    empty and we'll use the current time or server
                                    time.
                                type:
                                  readOnly: true
                                  type: string
                                  enum:
                                    - identify
                                    - group
                                    - track
                                    - page
                                    - screen
                                    - alias
                                  description: >-
                                    The type of source event. This is implicit and
                                    set by Customer.io based on the
                                    endpoint/method you use (e.g. `identify`).
                                version:
                                  readOnly: true
                                  type: number
                                  description: >-
                                    The version of the API that received the
                                    event, automatically set by Customer.io.
                            - type: object
                              properties:
                                context:
                                  description: >-
                                    A dictionary of context about a source
                                    call/event, like the user’s IP address or
                                    locale. Context is automatically collected by
                                    our source libraries.
                                  oneOf:
                                    - description: >-
                                        A dictionary of context about a source
                                        call/event, like the user’s IP address or
                                        locale. Context is automatically collected
                                        by our source libraries.
                                      title: Non-mobile
                                      allOf:
                                        - type: object
                                          description: >-
                                            Contains contextual information about
                                            the event.
                                          properties:
                                            active:
                                              type: boolean
                                              description: >
                                                Whether a user is active.


                                                This is usually used to flag an
                                                .identify() call to just update the
                                                traits but not “last seen.”
                                            ip:
                                              type: string
                                              description: >-
                                                The user's IP address. This isn't
                                                captured by our libraries, but by our
                                                servers when we receive client-side
                                                events (like from our JavaScript
                                                source).
                                            locale:
                                              type: string
                                              description: >-
                                                The local string for the current user,
                                                e.g. `en-US`.
                                            userAgent:
                                              type: string
                                              description: >-
                                                The user agent of the device making the
                                                request
                                            channel:
                                              type: string
                                              enum:
                                                - browser
                                                - server
                                                - mobile
                                              description: The channel the event originated from.
                                        - type: object
                                          properties:
                                            campaign:
                                              type: object
                                              description: >
                                                Contains information about the campaign
                                                that resulted in the API call, gathered
                                                from, or mapping to, UTM parameters
                                                (e.g. `utm_source`).
                                              properties:
                                                name:
                                                  type: string
                                                  description: The campaign name.
                                                source:
                                                  type: string
                                                  description: >-
                                                    The source of traffic—like the name of
                                                    your email list, Facebook, Google, etc.
                                                medium:
                                                  type: string
                                                  description: >-
                                                    The type of traffic a person/event
                                                    originates from, like `email`, or
                                                    `referral`.
                                                term:
                                                  type: string
                                                  description: The keyword term(s) a user came from.
                                                content:
                                                  type: string
                                              additionalProperties:
                                                type: string
                                                x-additionalPropertiesName: Additional UTM Parameters
                                            page:
                                              type: object
                                              description: >-
                                                Contains information about the current
                                                page in the browser. This is
                                                automatically collected by our
                                                JavaScript source.
                                              properties:
                                                name:
                                                  type: string
                                                  description: >
                                                    The name of the page. Reserved for
                                                    future use.
                                                path:
                                                  type: string
                                                  description: >-
                                                    The path portion of the page's URL.
                                                    Equivalent to the canonical `path` 
                                                    which defaults to `location.pathname` 
                                                    from the DOM API.
                                                referrer:
                                                  type: string
                                                  description: >-
                                                    The previous page's full URL. Equivalent
                                                    to `document.referrer`  from the DOM
                                                    API.
                                                search:
                                                  type: string
                                                  description: >-
                                                    The query string portion of the page's
                                                    URL. Equivalent to `location.search` 
                                                    from the DOM API.
                                                title:
                                                  type: string
                                                  description: >-
                                                    The page's title. Equivalent to
                                                    `document.title` from the DOM API.
                                                url:
                                                  type: string
                                                  description: >-
                                                    A page's full URL. Segment first looks
                                                    for the canonical URL. If the canonical
                                                    URL is not provided, Segment uses
                                                    `location.href` from the DOM API.
                                                keywords:
                                                  type: array
                                                  description: >-
                                                    A list/array of keywords describing the
                                                    page's content. The keywords are likely
                                                    the same as, or similar to, the keywords
                                                    you would find in an HTML `meta`  tag
                                                    for SEO purposes. This property is
                                                    mainly used by content publishers that
                                                    rely heavily on pageview tracking. This
                                                    isn't automatically collected.
                                                  items:
                                                    type: string
                                    - description: >-
                                        A dictionary of context about a source
                                        call/event, like the user’s IP address or
                                        locale. Context is automatically collected
                                        by our source libraries.
                                      title: Mobile
                                      allOf:
                                        - type: object
                                          description: >-
                                            Contains contextual information about
                                            the event.
                                          properties:
                                            active:
                                              type: boolean
                                              description: >
                                                Whether a user is active.


                                                This is usually used to flag an
                                                .identify() call to just update the
                                                traits but not “last seen.”
                                            ip:
                                              type: string
                                              description: >-
                                                The user's IP address. This isn't
                                                captured by our libraries, but by our
                                                servers when we receive client-side
                                                events (like from our JavaScript
                                                source).
                                            locale:
                                              type: string
                                              description: >-
                                                The local string for the current user,
                                                e.g. `en-US`.
                                            userAgent:
                                              type: string
                                              description: >-
                                                The user agent of the device making the
                                                request
                                            channel:
                                              type: string
                                              enum:
                                                - browser
                                                - server
                                                - mobile
                                              description: The channel the event originated from.
                                        - type: object
                                          description: >-
                                            Fields included in events from mobile
                                            libraries.
                                          properties:
                                            app:
                                              type: object
                                              description: >
                                                Contains information about the mobile
                                                app the event originated from,
                                                automatically collected by our mobile
                                                libraries when possible.
                                              properties:
                                                name:
                                                  type: string
                                                  description: The name of the app.
                                                version:
                                                  type: string
                                                  description: >-
                                                    The version of the app the call
                                                    originated from.
                                                build:
                                                  type: string
                                                  description: The specific build number in the app.
                                                namespace:
                                                  type: string
                                                  description: The app's namespace.
                                            device:
                                              type: object
                                              description: >
                                                Contains information about the device
                                                the event originated from.
                                              properties:
                                                id:
                                                  type: string
                                                  description: The device ID.
                                                advertisingId:
                                                  type: string
                                                  description: >-
                                                    The advertising ID is a unique,
                                                    anonymous ID for advertising.
                                                manufacturer:
                                                  type: string
                                                  description: The device manufacturer.
                                                model:
                                                  type: string
                                                  description: The device model.
                                                name:
                                                  type: string
                                                  description: The device name.
                                                type:
                                                  type: string
                                                  description: The device type—android, iOS, etc.
                                                  enum:
                                                    - android
                                                    - ios
                                                version:
                                                  type: string
                                                  description: The firmware version for the device.
                                            network:
                                              type: object
                                              description: >-
                                                Information about the current network
                                                connection, containing `bluetooth`,
                                                `carrier`, `cellular`, and `wifi`. If
                                                the `context.network.cellular` and
                                                `context.network.wifi` fields are empty,
                                                then the user is offline.
                                              properties:
                                                bluetooth:
                                                  type: boolean
                                                  description: >-
                                                    Lets you know if bluetooth is enabled on
                                                    a device.
                                                carrier:
                                                  type: string
                                                  description: The cellular carrier the phone uses.
                                                cellular:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the device's cellular
                                                    connection is enabled or not.
                                                wifi:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether a device's wifi
                                                    connection is enabled or not.
                                            os:
                                              type: object
                                              description: >
                                                Dictionary of information about the
                                                operating system, containing `name` and
                                                `version`.
                                              properties:
                                                name:
                                                  type: string
                                                  description: >-
                                                    The operating system running on the
                                                    device.
                                                version:
                                                  type: string
                                                  description: >-
                                                    The version of the OS running on the
                                                    device.
                  example:
                    type: identify
                    traits:
                      name: Cool Person
                      email: cool.person@example.com
                      likes_baseball: true
                      games_attended: 5
                    userId: 97980cfea0067
                - title: Track
                  oneOf:
                    - title: Known User
                      allOf:
                        - type: object
                          required:
                            - userId
                            - event
                            - type
                          properties:
                            userId:
                              type: string
                              description: >-
                                The unique identifier for a person. This value
                                should be unique across systems, so you recognize
                                the same person in your sources _and_
                                destinations.
                              example: 241ma8mf4a
                            type:
                              type: string
                              enum:
                                - track
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            event:
                              type: string
                              description: The name of the event
                              example: new_account
                            properties:
                              type: object
                              description: Additional properties for your event.
                              additionalProperties:
                                x-additionalPropertiesName: Event Properties
                                description: >-
                                  Additional properties that you want to capture
                                  in the event. These can take any JSON shape.
                    - title: Anonymous User
                      allOf:
                        - type: object
                          required:
                            - event
                            - type
                          properties:
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - track
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            event:
                              type: string
                              description: The name of the event
                              example: new_account
                            properties:
                              type: object
                              description: Additional properties for your event.
                              additionalProperties:
                                x-additionalPropertiesName: Event Properties
                                description: >-
                                  Additional properties that you want to capture
                                  in the event. These can take any JSON shape.
                - title: Page
                  oneOf:
                    - title: Known User
                      allOf:
                        - type: object
                          required:
                            - userId
                            - type
                          properties:
                            userId:
                              type: string
                              description: >-
                                The unique identifier for a person. This value
                                should be unique across systems, so you recognize
                                the same person in your sources _and_
                                destinations.
                              example: 241ma8mf4a
                            type:
                              type: string
                              enum:
                                - page
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            name:
                              type: string
                              description: The name of the page.
                              example: home
                            properties:
                              type: object
                              description: Additional properties for your event.
                              properties:
                                category:
                                  type: string
                                  description: >-
                                    The category of the page. This might be useful
                                    if you have a single page routes or have a
                                    flattened URL structure.
                              additionalProperties:
                                x-additionalPropertiesName: Page Properties
                                description: A dictionary of properties about the page.
                    - title: Anonymous User
                      allOf:
                        - type: object
                          required:
                            - anonymousId
                            - type
                          properties:
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - page
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            name:
                              type: string
                              description: The name of the page.
                              example: home
                            properties:
                              type: object
                              description: Additional properties for your event.
                              properties:
                                category:
                                  type: string
                                  description: >-
                                    The category of the page. This might be useful
                                    if you have a single page routes or have a
                                    flattened URL structure.
                              additionalProperties:
                                x-additionalPropertiesName: Page Properties
                                description: A dictionary of properties about the page.
                - title: Screen
                  oneOf:
                    - title: Known User
                      allOf:
                        - type: object
                          required:
                            - userId
                            - type
                          properties:
                            userId:
                              type: string
                              description: >-
                                The unique identifier for a person. This value
                                should be unique across systems, so you recognize
                                the same person in your sources _and_
                                destinations.
                              example: 241ma8mf4a
                            type:
                              type: string
                              enum:
                                - screen
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            name:
                              type: string
                              description: The name of the screen the person visited.
                              example: home
                            properties:
                              type: object
                              description: Additional properties for your screen.
                              additionalProperties:
                                x-additionalPropertiesName: Screen Properties
                                description: A dictionary of properties about the screen.
                    - title: Anonymous User
                      allOf:
                        - type: object
                          required:
                            - anonymousId
                            - type
                          properties:
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - screen
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                            name:
                              type: string
                              description: The name of the screen the person visited.
                              example: home
                            properties:
                              type: object
                              description: Additional properties for your screen.
                              additionalProperties:
                                x-additionalPropertiesName: Screen Properties
                                description: A dictionary of properties about the screen.
                - title: Group
                  oneOf:
                    - title: Known User
                      allOf:
                        - type: object
                          required:
                            - userId
                            - groupId
                            - type
                          properties:
                            userId:
                              type: string
                              description: >-
                                The unique identifier for a person. This value
                                should be unique across systems, so you recognize
                                the same person in your sources _and_
                                destinations.
                              example: 241ma8mf4a
                            type:
                              type: string
                              enum:
                                - group
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                              example: group
                            groupId:
                              type: string
                              description: ID of the group
                              example: 0e8c78ea9d97a7b8185e8632
                            traits:
                              type: object
                              description: Additional information about the group.
                              additionalProperties:
                                x-additionalPropertiesName: Group Traits
                                description: A dictionary of traits for the group.
                                example:
                                  name: Acme
                                  industry: Technology
                                  road_runner_accidents: 329,
                                  plan: enterprise,
                                  total_billed: 830
                    - title: Anonymous User
                      allOf:
                        - type: object
                          required:
                            - anonymousId
                            - groupId
                            - type
                          properties:
                            anonymousId:
                              type: string
                              description: >-
                                A unique substitute for a User ID in cases when
                                you don’t have an absolutely unique identifier.
                                Our libraries generate this value automatically to
                                help you track people before they sign up, log in,
                                provide their email, etc.
                              example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                            type:
                              type: string
                              enum:
                                - group
                              description: >-
                                The event type. This is set automatically by the
                                request method/endpoint.
                              example: group
                            groupId:
                              type: string
                              description: ID of the group
                              example: 0e8c78ea9d97a7b8185e8632
                            traits:
                              type: object
                              description: Additional information about the group.
                              additionalProperties:
                                x-additionalPropertiesName: Group Traits
                                description: A dictionary of traits for the group.
                                example:
                                  name: Acme
                                  industry: Technology
                                  road_runner_accidents: 329,
                                  plan: enterprise,
                                  total_billed: 830
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            oneOf:
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
          integrations:
            type: object
            description: >
              Contains a list of booleans indicating the integrations that are
              enabled (true) or disabled (false). By default, all integrations are
              enabled (returning an empty object). Set `"All": false` to reverse
              this behavior.
            additionalProperties:
              type: boolean
              x-additionalPropertiesName: Enabled/Disabled integrations
            example:
              All: true
              Salesforce: false
      identify_bad:
        type: object
        properties:
          userId:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          anonymousId:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          type:
            readOnly: true
            type: string
            enum:
              - identify
            description: >-
              The event type. This is set automatically by the request
              method/endpoint.
          traits:
            type: object
            description: >-
              Additional properties that you know about a person. We've listed
              some common/reserved traits below, but you can add any traits that
              you might use in another system.
            properties:
              email:
                type: string
                description: >-
                  A person's email address. In some cases, you can pass an empty
                  `userId` and we'll use this value to identify a person.
              createdAt:
                type: string
                format: date-time
                description: >-
                  We recommend that you pass date-time values as ISO 8601
                  date-time strings. We convert this value to fit destinations
                  where appropriate.
            additionalProperties:
              x-additionalPropertiesName: Additional Traits
              description: >-
                Traits that you want to set on a person. These can take any JSON
                shape.
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            title: Non-mobile
            allOf:
              - type: object
                description: Contains contextual information about the event.
                properties:
                  active:
                    type: boolean
                    description: >
                      Whether a user is active.


                      This is usually used to flag an .identify() call to just
                      update the traits but not “last seen.”
                  ip:
                    type: string
                    description: >-
                      The user's IP address. This isn't captured by our libraries,
                      but by our servers when we receive client-side events (like
                      from our JavaScript source).
                  locale:
                    type: string
                    description: The local string for the current user, e.g. `en-US`.
                  userAgent:
                    type: string
                    description: The user agent of the device making the request
                  channel:
                    type: string
                    enum:
                      - browser
                      - server
                      - mobile
                    description: The channel the event originated from.
              - type: object
                properties:
                  campaign:
                    type: object
                    description: >
                      Contains information about the campaign that resulted in the
                      API call, gathered from, or mapping to, UTM parameters (e.g.
                      `utm_source`).
                    properties:
                      name:
                        type: string
                        description: The campaign name.
                      source:
                        type: string
                        description: >-
                          The source of traffic—like the name of your email list,
                          Facebook, Google, etc.
                      medium:
                        type: string
                        description: >-
                          The type of traffic a person/event originates from, like
                          `email`, or `referral`.
                      term:
                        type: string
                        description: The keyword term(s) a user came from.
                      content:
                        type: string
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Additional UTM Parameters
                  page:
                    type: object
                    description: >-
                      Contains information about the current page in the browser.
                      This is automatically collected by our JavaScript source.
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the page. Reserved for future use.
                      path:
                        type: string
                        description: >-
                          The path portion of the page's URL. Equivalent to the
                          canonical `path`  which defaults to `location.pathname` 
                          from the DOM API.
                      referrer:
                        type: string
                        description: >-
                          The previous page's full URL. Equivalent to
                          `document.referrer`  from the DOM API.
                      search:
                        type: string
                        description: >-
                          The query string portion of the page's URL. Equivalent
                          to `location.search`  from the DOM API.
                      title:
                        type: string
                        description: >-
                          The page's title. Equivalent to `document.title` from
                          the DOM API.
                      url:
                        type: string
                        description: >-
                          A page's full URL. Segment first looks for the canonical
                          URL. If the canonical URL is not provided, Segment uses
                          `location.href` from the DOM API.
                      keywords:
                        type: array
                        description: >-
                          A list/array of keywords describing the page's content.
                          The keywords are likely the same as, or similar to, the
                          keywords you would find in an HTML `meta`  tag for SEO
                          purposes. This property is mainly used by content
                          publishers that rely heavily on pageview tracking. This
                          isn't automatically collected.
                        items:
                          type: string
          integrations:
            type: object
            description: >
              Contains a list of booleans indicating the integrations that are
              enabled (true) or disabled (false). By default, all integrations are
              enabled (returning an empty object). Set `"All": false` to reverse
              this behavior.
            additionalProperties:
              type: boolean
              x-additionalPropertiesName: Enabled/Disabled integrations
            example:
              Salesforce: false
              Mixpanel: true
          messageId:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
            readOnly: true
          receivedAt:
            type: string
            format: date-time
            readOnly: true
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sentAt:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
            readOnly: true
          timestamp:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when the event originally took place. This is
              mostly useful when you backfill data past events. If you're not
              backfilling data, you can leave this field empty and we'll use the
              current time or server time.
          version:
            readOnly: true
            type: number
            description: >-
              The version of the API that received the event, automatically set by
              Customer.io.
      track_bad:
        oneOf:
          - title: Known user
            type: object
            required:
              - event
              - type
              - userId
            properties:
              userId:
                type: string
                description: >-
                  The unique identifier for a person. This value should be unique
                  across systems, so you recognize the same person in your sources
                  _and_ destinations.
                example: 241ma8mf4a
              type:
                readOnly: true
                type: string
                enum:
                  - track
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
              event:
                type: string
                description: The name of the event
                example: new_account
              properties:
                type: object
                description: Additional properties for your event.
                additionalProperties:
                  x-additionalPropertiesName: Event Properties
                  description: >-
                    Additional properties that you want to capture in the event.
                    These can take any JSON shape.
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - title: Anonymous user
            type: object
            required:
              - event
              - type
              - anonymousId
            properties:
              anonymousId:
                type: string
                description: >-
                  A unique substitute for a User ID in cases when you don’t have
                  an absolutely unique identifier. Our libraries generate this
                  value automatically to help you track people before they sign
                  up, log in, provide their email, etc.
                example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
              type:
                readOnly: true
                type: string
                enum:
                  - track
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
              event:
                type: string
                description: The name of the event
                example: new_account
              properties:
                type: object
                description: Additional properties for your event.
                additionalProperties:
                  x-additionalPropertiesName: Event Properties
                  description: >-
                    Additional properties that you want to capture in the event.
                    These can take any JSON shape.
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
      page_bad:
        oneOf:
          - title: Known user
            type: object
            required:
              - type
              - name
              - userId
            properties:
              userId:
                type: string
                description: >-
                  The unique identifier for a person. This value should be unique
                  across systems, so you recognize the same person in your sources
                  _and_ destinations.
                example: 241ma8mf4a
              type:
                type: string
                readOnly: true
                enum:
                  - page
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
              name:
                type: string
                description: The name of the page.
                example: home
              properties:
                type: object
                description: Additional properties for your event.
                properties:
                  category:
                    type: string
                    description: >-
                      The category of the page. This might be useful if you have a
                      single page routes or have a flattened URL structure.
                additionalProperties:
                  x-additionalPropertiesName: Page Properties
                  description: >-
                    Additional properties tha tyou want to send with the page
                    event. By default, we capture `url`, `title`, and stuff.
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - title: Anonymous user
            type: object
            required:
              - type
              - name
              - anonymousId
            properties:
              anonymousId:
                type: string
                description: >-
                  A unique substitute for a User ID in cases when you don’t have
                  an absolutely unique identifier. Our libraries generate this
                  value automatically to help you track people before they sign
                  up, log in, provide their email, etc.
                example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
              type:
                type: string
                readOnly: true
                enum:
                  - page
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
              name:
                type: string
                description: The name of the page.
                example: home
              properties:
                type: object
                description: Additional properties for your event.
                properties:
                  category:
                    type: string
                    description: >-
                      The category of the page. This might be useful if you have a
                      single page routes or have a flattened URL structure.
                additionalProperties:
                  x-additionalPropertiesName: Page Properties
                  description: >-
                    Additional properties tha tyou want to send with the page
                    event. By default, we capture `url`, `title`, and stuff.
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
      screen_bad:
        oneOf:
          - title: Known User
            allOf:
              - type: object
                required:
                  - userId
                properties:
                  userId:
                    type: string
                    description: >-
                      The unique identifier for a person. This value should be
                      unique across systems, so you recognize the same person in
                      your sources _and_ destinations.
                    example: 241ma8mf4a
                  type:
                    type: string
                    enum:
                      - screen
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the screen the person visited.
                    example: home
                  properties:
                    type: object
                    description: Additional properties for your screen.
                    additionalProperties:
                      x-additionalPropertiesName: Screen Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
          - title: Anonymous User
            allOf:
              - type: object
                required:
                  - anonymousId
                properties:
                  anonymousId:
                    type: string
                    description: >-
                      A unique substitute for a User ID in cases when you don’t
                      have an absolutely unique identifier. Our libraries generate
                      this value automatically to help you track people before
                      they sign up, log in, provide their email, etc.
                    example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
                  type:
                    type: string
                    enum:
                      - screen
                    description: >-
                      The event type. This is set automatically by the request
                      method/endpoint.
                  name:
                    type: string
                    description: The name of the screen the person visited.
                    example: home
                  properties:
                    type: object
                    description: Additional properties for your screen.
                    additionalProperties:
                      x-additionalPropertiesName: Screen Properties
              - allOf:
                  - type: object
                    properties:
                      integrations:
                        type: object
                        description: >
                          Contains a list of booleans indicating the integrations
                          that are enabled (true) or disabled (false). By default,
                          all integrations are enabled (returning an empty
                          object). Set `"All": false` to reverse this behavior.
                        additionalProperties:
                          type: boolean
                          x-additionalPropertiesName: Enabled/Disabled integrations
                        example:
                          All: true
                          Salesforce: false
                      messageId:
                        type: string
                        description: >-
                          A unique identifier for a Data Pipelines call, ensuring
                          that each individual event is unique. This is set by
                          Customer.io
                      receivedAt:
                        type: string
                        format: date-time
                        readOnly: true
                        description: >-
                          The ISO-8601 timestamp when Data Pipelines receives an
                          event.
                      sentAt:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when a library sends an event to
                          Data Pipelines.
                      originalTimestamp:
                        type: string
                        format: date-time
                      timestamp:
                        type: string
                        format: date-time
                        description: >-
                          The ISO-8601 timestamp when the event originally took
                          place. This is mostly useful when you backfill data past
                          events. If you're not backfilling data, you can leave
                          this field empty and we'll use the current time or
                          server time.
                      type:
                        readOnly: true
                        type: string
                        enum:
                          - identify
                          - group
                          - track
                          - page
                          - screen
                          - alias
                        description: >-
                          The type of source event. This is implicit and set by
                          Customer.io based on the endpoint/method you use (e.g.
                          `identify`).
                      version:
                        readOnly: true
                        type: number
                        description: >-
                          The version of the API that received the event,
                          automatically set by Customer.io.
                  - type: object
                    properties:
                      context:
                        description: >-
                          A dictionary of context about a source call/event, like
                          the user’s IP address or locale. Context is
                          automatically collected by our source libraries.
                        title: Mobile
                        allOf:
                          - type: object
                            description: Contains contextual information about the event.
                            properties:
                              active:
                                type: boolean
                                description: >
                                  Whether a user is active.


                                  This is usually used to flag an .identify() call
                                  to just update the traits but not “last seen.”
                              ip:
                                type: string
                                description: >-
                                  The user's IP address. This isn't captured by
                                  our libraries, but by our servers when we
                                  receive client-side events (like from our
                                  JavaScript source).
                              locale:
                                type: string
                                description: >-
                                  The local string for the current user, e.g.
                                  `en-US`.
                              userAgent:
                                type: string
                                description: The user agent of the device making the request
                              channel:
                                type: string
                                enum:
                                  - browser
                                  - server
                                  - mobile
                                description: The channel the event originated from.
                          - type: object
                            description: Fields included in events from mobile libraries.
                            properties:
                              app:
                                type: object
                                description: >
                                  Contains information about the mobile app the
                                  event originated from, automatically collected
                                  by our mobile libraries when possible.
                                properties:
                                  name:
                                    type: string
                                    description: The name of the app.
                                  version:
                                    type: string
                                    description: >-
                                      The version of the app the call originated
                                      from.
                                  build:
                                    type: string
                                    description: The specific build number in the app.
                                  namespace:
                                    type: string
                                    description: The app's namespace.
                              device:
                                type: object
                                description: >
                                  Contains information about the device the event
                                  originated from.
                                properties:
                                  id:
                                    type: string
                                    description: The device ID.
                                  advertisingId:
                                    type: string
                                    description: >-
                                      The advertising ID is a unique, anonymous ID
                                      for advertising.
                                  manufacturer:
                                    type: string
                                    description: The device manufacturer.
                                  model:
                                    type: string
                                    description: The device model.
                                  name:
                                    type: string
                                    description: The device name.
                                  type:
                                    type: string
                                    description: The device type—android, iOS, etc.
                                    enum:
                                      - android
                                      - ios
                                  version:
                                    type: string
                                    description: The firmware version for the device.
                              network:
                                type: object
                                description: >-
                                  Information about the current network
                                  connection, containing `bluetooth`, `carrier`,
                                  `cellular`, and `wifi`. If the
                                  `context.network.cellular` and
                                  `context.network.wifi` fields are empty, then
                                  the user is offline.
                                properties:
                                  bluetooth:
                                    type: boolean
                                    description: >-
                                      Lets you know if bluetooth is enabled on a
                                      device.
                                  carrier:
                                    type: string
                                    description: The cellular carrier the phone uses.
                                  cellular:
                                    type: boolean
                                    description: >-
                                      Indicates whether the device's cellular
                                      connection is enabled or not.
                                  wifi:
                                    type: boolean
                                    description: >-
                                      Indicates whether a device's wifi connection
                                      is enabled or not.
                              os:
                                type: object
                                description: >
                                  Dictionary of information about the operating
                                  system, containing `name` and `version`.
                                properties:
                                  name:
                                    type: string
                                    description: The operating system running on the device.
                                  version:
                                    type: string
                                    description: The version of the OS running on the device.
      objectTypeId:
        type: string
        description: >
          If you use Customer.io Journeys as a destination, this value is the type
          of group/object your group belongs to; object type IDs are stringified
          integers. If you don't include this value, we assume the object type ID
          is `1`. See [objects in Customer.io
          Journeys](https://customer.io/docs/api/cdp/) for more information.


          You can include this value as `objectTypeId` at the top level of your
          payload or as `object_type_id` in the `traits` object.
        example: '1'
      group_bad:
        oneOf:
          - title: Known user
            type: object
            required:
              - type
              - userId
              - groupId
            properties:
              userId:
                type: string
                description: >-
                  The unique identifier for a person. This value should be unique
                  across systems, so you recognize the same person in your sources
                  _and_ destinations.
                example: 241ma8mf4a
              type:
                type: string
                readOnly: true
                enum:
                  - group
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
                example: group
              groupId:
                type: string
                description: ID of the group
                example: 0e8c78ea9d97a7b8185e8632
              objectTypeId:
                type: string
                description: >
                  If you use Customer.io Journeys as a destination, this value is
                  the type of group/object your group belongs to; object type IDs
                  are stringified integers. If you don't include this value, we
                  assume the object type ID is `1`. See [objects in Customer.io
                  Journeys](https://customer.io/docs/api/cdp/) for more
                  information.


                  You can include this value as `objectTypeId` at the top level of
                  your payload or as `object_type_id` in the `traits` object.
                example: '1'
              traits:
                type: object
                description: Additional information about the group.
                properties:
                  object_type_id:
                    type: string
                    description: >
                      If you use Customer.io Journeys as a destination, this value
                      is the type of group/object your group belongs to; object
                      type IDs are stringified integers. If you don't include this
                      value, we assume the object type ID is `1`. See [objects in
                      Customer.io Journeys](https://customer.io/docs/api/cdp/) for
                      more information.


                      You can include this value as `objectTypeId` at the top
                      level of your payload or as `object_type_id` in the `traits`
                      object.
                    example: '1'
                additionalProperties:
                  description: Additional traits you want to associate with this group.
                  x-additionalPropertiesName: Group Traits
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
          - title: Anonymous user
            type: object
            required:
              - type
              - anonymousId
              - groupId
            properties:
              anonymousId:
                type: string
                description: >-
                  A unique substitute for a User ID in cases when you don’t have
                  an absolutely unique identifier. Our libraries generate this
                  value automatically to help you track people before they sign
                  up, log in, provide their email, etc.
                example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
              type:
                type: string
                readOnly: true
                enum:
                  - group
                description: >-
                  The event type. This is set automatically by the request
                  method/endpoint.
                example: group
              groupId:
                type: string
                description: ID of the group
                example: 0e8c78ea9d97a7b8185e8632
              objectTypeId:
                type: string
                description: >
                  If you use Customer.io Journeys as a destination, this value is
                  the type of group/object your group belongs to; object type IDs
                  are stringified integers. If you don't include this value, we
                  assume the object type ID is `1`. See [objects in Customer.io
                  Journeys](https://customer.io/docs/api/cdp/) for more
                  information.


                  You can include this value as `objectTypeId` at the top level of
                  your payload or as `object_type_id` in the `traits` object.
                example: '1'
              traits:
                type: object
                description: Additional information about the group.
                properties:
                  object_type_id:
                    type: string
                    description: >
                      If you use Customer.io Journeys as a destination, this value
                      is the type of group/object your group belongs to; object
                      type IDs are stringified integers. If you don't include this
                      value, we assume the object type ID is `1`. See [objects in
                      Customer.io Journeys](https://customer.io/docs/api/cdp/) for
                      more information.


                      You can include this value as `objectTypeId` at the top
                      level of your payload or as `object_type_id` in the `traits`
                      object.
                    example: '1'
                additionalProperties:
                  description: Additional traits you want to associate with this group.
                  x-additionalPropertiesName: Group Traits
              context:
                description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              integrations:
                type: object
                description: >
                  Contains a list of booleans indicating the integrations that are
                  enabled (true) or disabled (false). By default, all integrations
                  are enabled (returning an empty object). Set `"All": false` to
                  reverse this behavior.
                additionalProperties:
                  type: boolean
                  x-additionalPropertiesName: Enabled/Disabled integrations
                example:
                  Salesforce: false
                  Mixpanel: true
              messageId:
                type: string
                description: >-
                  A unique identifier for a Data Pipelines event, ensuring that
                  each individual event is unique.
                readOnly: true
              receivedAt:
                type: string
                format: date-time
                readOnly: true
                description: The ISO-8601 timestamp when Data Pipelines receives an event.
              sentAt:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when a library sends an event to Data
                  Pipelines.
                readOnly: true
              timestamp:
                type: string
                format: date-time
                description: >-
                  The ISO-8601 timestamp when the event originally took place.
                  This is mostly useful when you backfill data past events. If
                  you're not backfilling data, you can leave this field empty and
                  we'll use the current time or server time.
              version:
                readOnly: true
                type: number
                description: >-
                  The version of the API that received the event, automatically
                  set by Customer.io.
      alias_bad:
        type: object
        required:
          - type
          - previousId
          - userId
        properties:
          type:
            type: string
            readOnly: true
            enum:
              - alias
            description: >-
              The event type. This is set automatically by the request
              method/endpoint.
          previousId:
            type: string
            description: The userId that you want to merge into the canonical profile.
          userId:
            type: string
            description: >
              The userId that you want to keep. This is required if you haven't
              already identified someone with one of our web or server-side
              libraries.
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            title: Non-mobile
            allOf:
              - type: object
                description: Contains contextual information about the event.
                properties:
                  active:
                    type: boolean
                    description: >
                      Whether a user is active.


                      This is usually used to flag an .identify() call to just
                      update the traits but not “last seen.”
                  ip:
                    type: string
                    description: >-
                      The user's IP address. This isn't captured by our libraries,
                      but by our servers when we receive client-side events (like
                      from our JavaScript source).
                  locale:
                    type: string
                    description: The local string for the current user, e.g. `en-US`.
                  userAgent:
                    type: string
                    description: The user agent of the device making the request
                  channel:
                    type: string
                    enum:
                      - browser
                      - server
                      - mobile
                    description: The channel the event originated from.
              - type: object
                properties:
                  campaign:
                    type: object
                    description: >
                      Contains information about the campaign that resulted in the
                      API call, gathered from, or mapping to, UTM parameters (e.g.
                      `utm_source`).
                    properties:
                      name:
                        type: string
                        description: The campaign name.
                      source:
                        type: string
                        description: >-
                          The source of traffic—like the name of your email list,
                          Facebook, Google, etc.
                      medium:
                        type: string
                        description: >-
                          The type of traffic a person/event originates from, like
                          `email`, or `referral`.
                      term:
                        type: string
                        description: The keyword term(s) a user came from.
                      content:
                        type: string
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Additional UTM Parameters
                  page:
                    type: object
                    description: >-
                      Contains information about the current page in the browser.
                      This is automatically collected by our JavaScript source.
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the page. Reserved for future use.
                      path:
                        type: string
                        description: >-
                          The path portion of the page's URL. Equivalent to the
                          canonical `path`  which defaults to `location.pathname` 
                          from the DOM API.
                      referrer:
                        type: string
                        description: >-
                          The previous page's full URL. Equivalent to
                          `document.referrer`  from the DOM API.
                      search:
                        type: string
                        description: >-
                          The query string portion of the page's URL. Equivalent
                          to `location.search`  from the DOM API.
                      title:
                        type: string
                        description: >-
                          The page's title. Equivalent to `document.title` from
                          the DOM API.
                      url:
                        type: string
                        description: >-
                          A page's full URL. Segment first looks for the canonical
                          URL. If the canonical URL is not provided, Segment uses
                          `location.href` from the DOM API.
                      keywords:
                        type: array
                        description: >-
                          A list/array of keywords describing the page's content.
                          The keywords are likely the same as, or similar to, the
                          keywords you would find in an HTML `meta`  tag for SEO
                          purposes. This property is mainly used by content
                          publishers that rely heavily on pageview tracking. This
                          isn't automatically collected.
                        items:
                          type: string
          integrations:
            type: object
            description: >
              Contains a list of booleans indicating the integrations that are
              enabled (true) or disabled (false). By default, all integrations are
              enabled (returning an empty object). Set `"All": false` to reverse
              this behavior.
            additionalProperties:
              type: boolean
              x-additionalPropertiesName: Enabled/Disabled integrations
            example:
              Salesforce: false
              Mixpanel: true
          messageId:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
            readOnly: true
          receivedAt:
            type: string
            format: date-time
            readOnly: true
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sentAt:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
            readOnly: true
          timestamp:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when the event originally took place. This is
              mostly useful when you backfill data past events. If you're not
              backfilling data, you can leave this field empty and we'll use the
              current time or server time.
          version:
            readOnly: true
            type: number
            description: >-
              The version of the API that received the event, automatically set by
              Customer.io.
      errors:
        type: array
        description: An array of errors, where each object represents a different error.
        items:
          type: object
          properties:
            reason:
              type: string
              description: The reason for the error.
            field:
              type: string
              description: The field containing the error.
            message:
              type: string
              description: A detailed description of the error in the offending field.
      id:
        type: string
        description: >-
          A unique identifier for a Data Pipelines event, ensuring that each
          individual event is unique.
      received_at:
        type: string
        format: date-time
        description: The ISO-8601 timestamp when Data Pipelines receives an event.
      sent_at:
        type: string
        format: date-time
        description: The ISO-8601 timestamp when a library sends an event to Data Pipelines.
      etl_identify:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          anonymous_id:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          traits:
            type: object
            description: >-
              Additional properties that you know about a person. We've listed
              some common/reserved traits below, but you can add any traits that
              you might use in another system.
            properties:
              email:
                type: string
                description: >-
                  A person's email address. In some cases, you can pass an empty
                  `userId` and we'll use this value to identify a person.
              createdAt:
                type: string
                format: date-time
                description: >-
                  We recommend that you pass date-time values as ISO 8601
                  date-time strings. We convert this value to fit destinations
                  where appropriate.
            additionalProperties:
              x-additionalPropertiesName: Additional Traits
              description: >-
                Traits that you want to set on a person. These can take any JSON
                shape.
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            oneOf:
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
      etl_group:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          anonymous_id:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          group_id:
            type: string
            description: ID of the group
            example: 0e8c78ea9d97a7b8185e8632
          objectTypeId:
            type: string
            description: >
              If you use Customer.io Journeys as a destination, this value is the
              type of group/object your group belongs to; object type IDs are
              stringified integers. If you don't include this value, we assume the
              object type ID is `1`. See [objects in Customer.io
              Journeys](https://customer.io/docs/api/cdp/) for more information.


              You can include this value as `objectTypeId` at the top level of
              your payload or as `object_type_id` in the `traits` object.
            example: '1'
          traits:
            type: object
            description: Additional data points that the call assigns to the group.
            additionalProperties:
              x-additionalPropertiesName: Additional Traits
              description: >-
                Traits can have any name, like `account_name` or
                `total_employees`. These can take any JSON shape.
      etl_tracks:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          anonymous_id:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          event:
            type: string
            description: The slug of the event name, mapping to an event-specific table.
          event_text:
            type: string
            description: The name of the event.
          properties:
            type: object
            description: >-
              Additional properties sent with the page call. We've listed some
              common/reserved traits captured by our `Analytics.js` library, but
              you can add any properties that you might use in another system.
            additionalProperties:
              x-additionalPropertiesName: Event Properties
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            oneOf:
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
      etl_alias:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          previous_id:
            type: string
            description: The userId that you want to merge into the canonical profile.
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
      etl_page:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          anonymous_id:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          properties:
            type: object
            description: >-
              Additional properties sent with the page call. We've listed some
              common/reserved traits captured by our `Analytics.js` library, but
              you can add any properties that you might use in another system.
            properties:
              category:
                type: string
                description: >-
                  The category of the page. This might be useful if you have a
                  single page routes or have a flattened URL structure.
              url:
                type: string
                description: >-
                  The URL of the page. This defaults to a canonical url if
                  available, and falls back to `document.location.href`.
                example: http://www.example.com/page/
              title:
                type: string
                description: >-
                  The title of the page. This defaults to `document.title`, but
                  can be overridden.
                example: Page | Example.com
              referrer:
                type: string
                description: >-
                  The referrer of the page, if applicable. This defaults to
                  `document.referrer`, but can be overridden.
                example: http://www.google.com/search?q=example
              path:
                type: string
                description: >-
                  The path of the page. This defaults to `location.pathname`, but
                  can be overridden.
                example: /page
              search:
                type: string
                description: >-
                  The search query in the URL, if present. This defaults to
                  `location.search`, but can be overridden.
                example: '?q=sfgiants'
            additionalProperties:
              x-additionalPropertiesName: Page Properties
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            oneOf:
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
      etl_screen:
        type: object
        properties:
          id:
            type: string
            description: >-
              A unique identifier for a Data Pipelines event, ensuring that each
              individual event is unique.
          received_at:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when Data Pipelines receives an event.
          sent_at:
            type: string
            format: date-time
            description: >-
              The ISO-8601 timestamp when a library sends an event to Data
              Pipelines.
          anonymous_id:
            type: string
            description: >-
              A unique substitute for a User ID in cases when you don’t have an
              absolutely unique identifier. Our libraries generate this value
              automatically to help you track people before they sign up, log in,
              provide their email, etc.
            example: c0e5cae6-6f04-46e4-97a8-25076e8bdc0b
          user_id:
            type: string
            description: >-
              The unique identifier for a person. This value should be unique
              across systems, so you recognize the same person in your sources
              _and_ destinations.
            example: 241ma8mf4a
          properties:
            type: object
            description: Additional properties that you sent in your screen event
            additionalProperties:
              x-additionalPropertiesName: Additional event properties
              description: >-
                Properties that you sent in the event. These can take any JSON
                shape.
          context:
            description: >-
              A dictionary of context about a source call/event, like the user’s
              IP address or locale. Context is automatically collected by our
              source libraries.
            oneOf:
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Non-mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    properties:
                      campaign:
                        type: object
                        description: >
                          Contains information about the campaign that resulted in
                          the API call, gathered from, or mapping to, UTM
                          parameters (e.g. `utm_source`).
                        properties:
                          name:
                            type: string
                            description: The campaign name.
                          source:
                            type: string
                            description: >-
                              The source of traffic—like the name of your email
                              list, Facebook, Google, etc.
                          medium:
                            type: string
                            description: >-
                              The type of traffic a person/event originates from,
                              like `email`, or `referral`.
                          term:
                            type: string
                            description: The keyword term(s) a user came from.
                          content:
                            type: string
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Additional UTM Parameters
                      page:
                        type: object
                        description: >-
                          Contains information about the current page in the
                          browser. This is automatically collected by our
                          JavaScript source.
                        properties:
                          name:
                            type: string
                            description: |
                              The name of the page. Reserved for future use.
                          path:
                            type: string
                            description: >-
                              The path portion of the page's URL. Equivalent to
                              the canonical `path`  which defaults to
                              `location.pathname`  from the DOM API.
                          referrer:
                            type: string
                            description: >-
                              The previous page's full URL. Equivalent to
                              `document.referrer`  from the DOM API.
                          search:
                            type: string
                            description: >-
                              The query string portion of the page's URL.
                              Equivalent to `location.search`  from the DOM API.
                          title:
                            type: string
                            description: >-
                              The page's title. Equivalent to `document.title`
                              from the DOM API.
                          url:
                            type: string
                            description: >-
                              A page's full URL. Segment first looks for the
                              canonical URL. If the canonical URL is not provided,
                              Segment uses `location.href` from the DOM API.
                          keywords:
                            type: array
                            description: >-
                              A list/array of keywords describing the page's
                              content. The keywords are likely the same as, or
                              similar to, the keywords you would find in an HTML
                              `meta`  tag for SEO purposes. This property is
                              mainly used by content publishers that rely heavily
                              on pageview tracking. This isn't automatically
                              collected.
                            items:
                              type: string
              - description: >-
                  A dictionary of context about a source call/event, like the
                  user’s IP address or locale. Context is automatically collected
                  by our source libraries.
                title: Mobile
                allOf:
                  - type: object
                    description: Contains contextual information about the event.
                    properties:
                      active:
                        type: boolean
                        description: >
                          Whether a user is active.


                          This is usually used to flag an .identify() call to just
                          update the traits but not “last seen.”
                      ip:
                        type: string
                        description: >-
                          The user's IP address. This isn't captured by our
                          libraries, but by our servers when we receive
                          client-side events (like from our JavaScript source).
                      locale:
                        type: string
                        description: The local string for the current user, e.g. `en-US`.
                      userAgent:
                        type: string
                        description: The user agent of the device making the request
                      channel:
                        type: string
                        enum:
                          - browser
                          - server
                          - mobile
                        description: The channel the event originated from.
                  - type: object
                    description: Fields included in events from mobile libraries.
                    properties:
                      app:
                        type: object
                        description: >
                          Contains information about the mobile app the event
                          originated from, automatically collected by our mobile
                          libraries when possible.
                        properties:
                          name:
                            type: string
                            description: The name of the app.
                          version:
                            type: string
                            description: The version of the app the call originated from.
                          build:
                            type: string
                            description: The specific build number in the app.
                          namespace:
                            type: string
                            description: The app's namespace.
                      device:
                        type: object
                        description: >
                          Contains information about the device the event
                          originated from.
                        properties:
                          id:
                            type: string
                            description: The device ID.
                          advertisingId:
                            type: string
                            description: >-
                              The advertising ID is a unique, anonymous ID for
                              advertising.
                          manufacturer:
                            type: string
                            description: The device manufacturer.
                          model:
                            type: string
                            description: The device model.
                          name:
                            type: string
                            description: The device name.
                          type:
                            type: string
                            description: The device type—android, iOS, etc.
                            enum:
                              - android
                              - ios
                          version:
                            type: string
                            description: The firmware version for the device.
                      network:
                        type: object
                        description: >-
                          Information about the current network connection,
                          containing `bluetooth`, `carrier`, `cellular`, and
                          `wifi`. If the `context.network.cellular` and
                          `context.network.wifi` fields are empty, then the user
                          is offline.
                        properties:
                          bluetooth:
                            type: boolean
                            description: Lets you know if bluetooth is enabled on a device.
                          carrier:
                            type: string
                            description: The cellular carrier the phone uses.
                          cellular:
                            type: boolean
                            description: >-
                              Indicates whether the device's cellular connection
                              is enabled or not.
                          wifi:
                            type: boolean
                            description: >-
                              Indicates whether a device's wifi connection is
                              enabled or not.
                      os:
                        type: object
                        description: >
                          Dictionary of information about the operating system,
                          containing `name` and `version`.
                        properties:
                          name:
                            type: string
                            description: The operating system running on the device.
                          version:
                            type: string
                            description: The version of the OS running on the device.
      create_update_device:
        title: Create or Update Device
        description: >-
          Add or update a device. If a device (represented by `device.token`)
          exists, does not exist, we'll create it. If the device token already
          exists, we'll update the it.
        type: object
        required:
          - properties
          - event
          - userId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - Device Created or Updated
            example: Create Device
          userId:
            type: string
            description: The user's unique identifier.
            example: '42'
          properties:
            type: object
            required:
              - device
            description: Properties for the event.
            properties:
              device:
                type: object
                required:
                  - token
                description: Device information.
                properties:
                  token:
                    type: string
                    description: The device token.
                  type:
                    type: string
                    description: The device type.
                    enum:
                      - ios
                      - android
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: Device Created or Updated
          userId: '42'
          properties:
            device:
              token: string
              type: ios
          timestamp: '2021-07-14T19:10:25.000Z'
      delete_device:
        title: Delete Device
        description: Delete a device.
        type: object
        required:
          - event
          - userId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - Device Deleted
          userId:
            type: string
            description: The user's unique identifier.
          properties:
            type: object
            description: Properties for the event.
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: Delete Device
          userId: '42'
          properties:
            device:
              token: string
              type: ios
          timestamp: '2021-07-14T19:10:25.000Z'
      delete_person:
        title: Delete Person
        description: >-
          Remove a person from your Customer.io environment. You might do this
          when someone cancels their subscription with you or otherwise leaves
          your service.
        type: object
        required:
          - event
          - userId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - User Deleted
          userId:
            type: string
            description: The user's unique identifier.
          properties:
            type: object
            description: >-
              Properties for the event. These aren't typically useful in
              Customer.io when deleting people, but you might use them in other
              places—like an analytics tool (e.g. Mixpanel).
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: User Deleted
          userId: '42'
          properties: {}
          timestamp: '2021-07-14T19:10:25.000Z'
      relationship_deleted:
        title: Delete Relationship
        description: >
          Remove a relationship between a person and an object in Customer.io.
          This is basically the opposite of a `group` operation. Where objects
          represent things like accounts, companies, or online classes, you might
          delete a relationship when a person is no longer on an account, leaves a
          company, or drops a class.


          This event requires a `groupId` and an `objectTypeId`. If you don't
          provide an `objectTypeId`, we'll assume it's `1`, but if the `groupId`
          with the associated objectTypeId` (defaulting to 1) does not exist, the
          event will _not_ remove a person from the group.
        type: object
        required:
          - event
          - userId
          - properties
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - Relationship Deleted
          userId:
            type: string
            description: The user's unique identifier.
          properties:
            type: object
            required:
              - groupId
            description: >-
              Properties for the event. In this case, you'll need to provide the
              `groupId`. You should also provide the `objectTypeId` if you have
              more than 1 object type; if you don't include it, we'll assume it's
              `1`.
            properties:
              groupId:
                type: string
                description: >-
                  A person is related to a group/object. This is the group/object
                  you want to remove the person from.
              objectTypeId:
                type: integer
                description: >
                  The type of group/object the `groupId` represents. In
                  Customer.io, each type of group/object has a an integer value,
                  starting at 1 and incrementing. For example, if you have two
                  types of groups/objects, you might have `1` represent accounts
                  and `2` might represent companies.


                  If you leave this value blank, we'll assume it's `1`.
                default: 1
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          name: Relationship Deleted
          userId: '1'
          properties:
            groupId: acme
            objectTypeId: '1'
      group_deleted:
        title: Delete Group (Object)
        description: >
          Remove a group (also called an "object") from Customer.io Journeys.
          Groups/objects represent things like accounts, companies, and online
          classes—non-people entities that people can be related to. You might
          delete a group when an account is closed, a company is acquired, or you
          stop offering a class.


          This event requires a `groupId` and an `objectTypeId`. If you don't
          provide an `objectTypeId`, we'll assume it's `1`, but if the `groupId`
          with the associated objectTypeId` (defaulting to 1) does not exist, the
          event will _not_ find and delete the groupId.
        type: object
        required:
          - event
          - groupId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - Group Deleted
          properties:
            type: object
            description: >-
              Properties for the event. These aren't typically useful in
              Customer.io when deleting groups, but you might use them in other
              places—like an analytics tool (e.g. Mixpanel).
            properties:
              groupId:
                type: string
                description: >-
                  A person is related to a group/object. This is the group/object
                  you want to remove.
              objectTypeId:
                type: integer
                description: >
                  The type of group/object the `groupId` represents. In
                  Customer.io, each type of group/object has a an integer value,
                  starting at 1 and incrementing. For example, if you have two
                  types of groups/objects, you might have `1` represent accounts
                  and `2` might represent companies.


                  If you leave this value blank, we'll assume it's `1`.
                default: 1
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          name: Group Deleted
          properties:
            groupId: acme
            objectTypeId: '1'
      suppress_person:
        title: Suppress Person
        description: >-
          Remove a person from your Customer.io workspace _and_ prevent them from
          being added back to your workspace using the same identifier. In general
          you should **only send this event for compliance reasons**, like when
          someone invokes their right to be forgotten in accordance with GDPR or
          CAN-SPAM regulations.
        type: object
        required:
          - event
          - userId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - User Deleted
          timestamp:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when the event occurred.
          userId:
            type: string
            description: The user's unique identifier.
          properties:
            type: object
            description: >-
              Properties for the event. These aren't typically useful in
              Customer.io when suppressing people, but you might use them in other
              places—like an analytics tool (e.g. Mixpanel).
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: User Suppressed
          userId: '42'
          properties: {}
          timestamp: '2021-07-14T19:10:25.000Z'
      unsuppress_person:
        title: Unsuppress Person
        description: >-
          Allow a userId to be added back to your Customer.io workspace. This does
          not restore information from a person you previously suppressed. It only
          allows you to add a person back to your workspace using the same
          identifier.
        type: object
        required:
          - event
          - userId
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - User Deleted
          timestamp:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when the event occurred.
          userId:
            type: string
            description: The user's unique identifier.
          properties:
            type: object
            description: >-
              Properties for the event. These aren't typically useful in
              Customer.io when unsuppressing people, but you might use them in
              other places—like an analytics tool (e.g. Mixpanel).
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: User Unsuppressed
          userId: '42'
          properties: {}
          timestamp: '2021-07-14T19:10:25.000Z'
      report_delivery_event:
        title: Report Delivery Event
        description: >
          Reports delivery events for messages. In general, we use this event with
          our JavaScript snippet to report delivery events for in-app messages
          back to your Customer.io workspace.


          While Customer.io knows about messages that are sent, we use this event
          to determine when an in-app message is delivered, clicked, and so on.
          Each message contains a unique `deliveryId` that we trace back to the
          person, campaign/broadcast, and other items in your Customer.io
          workspace. 
        type: object
        required:
          - event
          - properties
        properties:
          event:
            type: string
            description: The event name.
            enum:
              - Report Delivery Event
          timestamp:
            type: string
            format: date-time
            description: The ISO-8601 timestamp when the event occurred.
          properties:
            type: object
            description: >-
              Properties for the event. These aren't typically useful in
              Customer.io when suppressing people, but you might use them in other
              places—like an analytics tool (e.g. Mixpanel).
            properties:
              deliveryId:
                type: string
                description: The ID of the message delivery.
              metric:
                type: string
                enum:
                  - delivered
                  - clicked
                  - converted
                  - opened
                description: >-
                  The metric you're reporting. Remember, these are metrics that
                  occur outside of Customer.io—after the message is sent. Because
                  this event typically tracks in-app messages, you'll generally
                  see metrics like delivered, opened, clicked, etc.
              recipient:
                type: string
                description: >-
                  The recipient of the message. This field changes depending on
                  the type of message. For in-app messages, this is the person's
                  `deviceId`; for SMS it's the recipient's phone number; for push
                  notifications, it's their device token.
              reason:
                type: string
                description: >-
                  If the message failed for some reason, this field contains the
                  reason why.
              actionValue:
                type: string
                description: >-
                  For in-app messages that are `clicked`, this value represents
                  the value of the action the recipient clicked.
              href:
                type: string
                description: >-
                  For in-app messages that are `clicked`, this value represents
                  the URL/link the recipient clicked.
            additionalProperties:
              x-AdditionalPropertiesName: Additional Event Properties
        example:
          type: track
          event: Report Delivery Event
          timestamp: '2021-07-14T19:10:25.000Z'
          properties:
            deliveryId: '42'
            metric: clicked
            recipient: device_token
            actionValue: enable_push
            href: myapp://settings/enable_push
      list_id:
        type: string
        description: The product list a person viewed.
        example: all_shoes
      category:
        type: string
        description: The product category a person viewed.
        example: shoes
      product_id:
        type: string
        description: The product ID.
        example: coolshoes-123
      products:
        type: array
        description: >-
          The products displayed in the product list. Each object in the array
          represents a product.
        items:
          description: An individual product.
          type: object
          properties:
            product_id:
              type: string
              description: The product ID.
              example: coolshoes-123
            sku:
              type: string
              description: The stock keeping unit (SKU) of the product a person viewed.
              example: abc-123-xyz
            category:
              type: string
              description: The product category a person viewed.
              example: shoes
            name:
              type: string
              description: The name of the product a person viewed.
              example: Cool Shoes
            brand:
              type: string
              description: The brand associated with the product.
              example: A Shoe Brand
            variant:
              type: string
              description: The variant of the product a person viewed, if applicable.
              example: red
            price:
              type: number
              description: The price of the product.
              example: 139.99
            quantity:
              type: integer
              description: The quantity of the product.
              example: 1
            coupon:
              type: string
              description: The coupon code associated with the product (like `NEWUSER20`).
              example: NEWUSER20
            position:
              type: number
              description: The position of the product in the list.
              example: 3
            url:
              type: string
              description: The URL of the product page.
              example: https://www.example.com/product/123
            image_url:
              type: string
              description: The URL of the product image.
              example: https://www.example.com/product/123.jpg
      product:
        description: An individual product.
        type: object
        properties:
          product_id:
            type: string
            description: The product ID.
            example: coolshoes-123
          sku:
            type: string
            description: The stock keeping unit (SKU) of the product a person viewed.
            example: abc-123-xyz
          category:
            type: string
            description: The product category a person viewed.
            example: shoes
          name:
            type: string
            description: The name of the product a person viewed.
            example: Cool Shoes
          brand:
            type: string
            description: The brand associated with the product.
            example: A Shoe Brand
          variant:
            type: string
            description: The variant of the product a person viewed, if applicable.
            example: red
          price:
            type: number
            description: The price of the product.
            example: 139.99
          quantity:
            type: integer
            description: The quantity of the product.
            example: 1
          coupon:
            type: string
            description: The coupon code associated with the product (like `NEWUSER20`).
            example: NEWUSER20
          position:
            type: number
            description: The position of the product in the list.
            example: 3
          url:
            type: string
            description: The URL of the product page.
            example: https://www.example.com/product/123
          image_url:
            type: string
            description: The URL of the product image.
            example: https://www.example.com/product/123.jpg
      filters:
        type: array
        description: >-
          The filters a person applied to the product list, where each object in
          the array is a different filter.
        items:
          type: object
          properties:
            type:
              type: string
              description: The ID of the filter type.
            value:
              type: string
              description: The ID of the value of the filter.
      sorts:
        type: array
        description: >-
          The sorts a person applied to the product list, where each object in the
          array is a different sort.
        items:
          type: object
          properties:
            type:
              type: string
              description: The ID of the sort type.
            value:
              type: string
              description: The ID of the selection type, like `ascending` or `descending`.
      promotion:
        description: Describes a promotional offer that a user can view or use.
        type: object
        properties:
          promotion_id:
            type: string
            description: The ID of the promotion a person viewed.
            example: promo_123
          creative:
            type: string
            description: The creative content ID associated with the promotion.
            example: top_banner_2
          name:
            type: string
            description: The name of the promotion a person viewed.
            example: summer_sale
          position:
            type: string
            description: The position of the promotion a person viewed.
            example: banner_slot_1
      checkout_step:
        type: object
        properties:
          checkout_id:
            type: string
            description: The checkout/transaction ID.
          step:
            type: integer
            description: The step number of the checkout process.
            example: 2
          shipping_method:
            type: string
            description: The shipping method selected by the user.
            example: ground
          payment_method:
            type: string
            description: The payment method selected by the user.
            example: Visa
      checkout:
        type: object
        properties:
          order_id:
            type: string
            description: The cart ID a person viewed.
            example: cool_persons_cart_123
          affiliation:
            type: string
            description: >-
              The store or affiliation from the transaction occurred from, like
              "Google Play Store".
            example: Shopify
          revenue:
            type: number
            description: >-
              The total revenue of the transaction without discounts, coupons,
              shipping, and tax.
            example: 139.99
          shipping:
            type: number
            description: The total shipping cost of the transaction.
            example: 5
          tax:
            type: number
            description: The tax associated with the the transaction.
            example: 10
          discount:
            type: number
            description: The total discount applied to the transaction.
            example: 20
          coupon:
            type: string
            description: The coupon code associated with the transaction.
            example: NEWUSER20
          currency:
            type: string
            description: The currency of the transaction.
            example: USD
          products:
            type: array
            description: >-
              The products in the cart. Each object in the array represents a
              product.
            items:
              description: An individual product.
              type: object
              properties:
                product_id:
                  type: string
                  description: The product ID.
                  example: coolshoes-123
                sku:
                  type: string
                  description: The stock keeping unit (SKU) of the product a person viewed.
                  example: abc-123-xyz
                category:
                  type: string
                  description: The product category a person viewed.
                  example: shoes
                name:
                  type: string
                  description: The name of the product a person viewed.
                  example: Cool Shoes
                brand:
                  type: string
                  description: The brand associated with the product.
                  example: A Shoe Brand
                variant:
                  type: string
                  description: The variant of the product a person viewed, if applicable.
                  example: red
                price:
                  type: number
                  description: The price of the product.
                  example: 139.99
                quantity:
                  type: integer
                  description: The quantity of the product.
                  example: 1
                coupon:
                  type: string
                  description: >-
                    The coupon code associated with the product (like
                    `NEWUSER20`).
                  example: NEWUSER20
                position:
                  type: number
                  description: The position of the product in the list.
                  example: 3
                url:
                  type: string
                  description: The URL of the product page.
                  example: https://www.example.com/product/123
                image_url:
                  type: string
                  description: The URL of the product image.
                  example: https://www.example.com/product/123.jpg
      product_list_viewed:
        title: Product List Viewed
        description: >-
          Use the `Product List Viewed` event when a person views a list of
          products.
        type: object
        properties:
          list_id:
            type: string
            description: The product list a person viewed.
            example: all_shoes
          category:
            type: string
            description: The product category a person viewed.
            example: shoes
          products:
            type: array
            description: >-
              The products displayed in the product list. Each object in the array
              represents a product.
            items:
              description: An individual product.
              type: object
              properties:
                product_id:
                  type: string
                  description: The product ID.
                  example: coolshoes-123
                sku:
                  type: string
                  description: The stock keeping unit (SKU) of the product a person viewed.
                  example: abc-123-xyz
                category:
                  type: string
                  description: The product category a person viewed.
                  example: shoes
                name:
                  type: string
                  description: The name of the product a person viewed.
                  example: Cool Shoes
                brand:
                  type: string
                  description: The brand associated with the product.
                  example: A Shoe Brand
                variant:
                  type: string
                  description: The variant of the product a person viewed, if applicable.
                  example: red
                price:
                  type: number
                  description: The price of the product.
                  example: 139.99
                quantity:
                  type: integer
                  description: The quantity of the product.
                  example: 1
                coupon:
                  type: string
                  description: >-
                    The coupon code associated with the product (like
                    `NEWUSER20`).
                  example: NEWUSER20
                position:
                  type: number
                  description: The position of the product in the list.
                  example: 3
                url:
                  type: string
                  description: The URL of the product page.
                  example: https://www.example.com/product/123
                image_url:
                  type: string
                  description: The URL of the product image.
                  example: https://www.example.com/product/123.jpg
      product_list_filtered:
        title: Product List Filtered
        type: object
        description: >-
          Use the `Product List Filtered` event when a person filters a list of
          products.
        properties:
          list_id:
            type: string
            description: The product list a person viewed.
            example: all_shoes
          category:
            type: string
            description: The product category a person viewed.
            example: shoes
          products:
            type: array
            description: >-
              The products displayed in the product list. Each object in the array
              represents a product.
            items:
              description: An individual product.
              type: object
              properties:
                product_id:
                  type: string
                  description: The product ID.
                  example: coolshoes-123
                sku:
                  type: string
                  description: The stock keeping unit (SKU) of the product a person viewed.
                  example: abc-123-xyz
                category:
                  type: string
                  description: The product category a person viewed.
                  example: shoes
                name:
                  type: string
                  description: The name of the product a person viewed.
                  example: Cool Shoes
                brand:
                  type: string
                  description: The brand associated with the product.
                  example: A Shoe Brand
                variant:
                  type: string
                  description: The variant of the product a person viewed, if applicable.
                  example: red
                price:
                  type: number
                  description: The price of the product.
                  example: 139.99
                quantity:
                  type: integer
                  description: The quantity of the product.
                  example: 1
                coupon:
                  type: string
                  description: >-
                    The coupon code associated with the product (like
                    `NEWUSER20`).
                  example: NEWUSER20
                position:
                  type: number
                  description: The position of the product in the list.
                  example: 3
                url:
                  type: string
                  description: The URL of the product page.
                  example: https://www.example.com/product/123
                image_url:
                  type: string
                  description: The URL of the product image.
                  example: https://www.example.com/product/123.jpg
          filters:
            type: array
            description: >-
              The filters a person applied to the product list, where each object
              in the array is a different filter.
            items:
              type: object
              properties:
                type:
                  type: string
                  description: The ID of the filter type.
                value:
                  type: string
                  description: The ID of the value of the filter.
          sorts:
            type: array
            description: >-
              The sorts a person applied to the product list, where each object in
              the array is a different sort.
            items:
              type: object
              properties:
                type:
                  type: string
                  description: The ID of the sort type.
                value:
                  type: string
                  description: >-
                    The ID of the selection type, like `ascending` or
                    `descending`.
      products_searched:
        type: object
        description: Use the `Products Searched` event when a person searches for products.
        properties:
          query:
            type: string
            description: The search query the customer entered.
            example: pepperoni pizza
      promotion_viewed:
        title: Promotion Viewed
        description: Describes a promotional offer that a user can view or use.
        type: object
        properties:
          promotion_id:
            type: string
            description: The ID of the promotion a person viewed.
            example: promo_123
          creative:
            type: string
            description: The creative content ID associated with the promotion.
            example: top_banner_2
          name:
            type: string
            description: The name of the promotion a person viewed.
            example: summer_sale
          position:
            type: string
            description: The position of the promotion a person viewed.
            example: banner_slot_1
      promotion_clicked:
        title: Promotion Clicked
        description: Describes a promotional offer that a user can view or use.
        type: object
        properties:
          promotion_id:
            type: string
            description: The ID of the promotion a person viewed.
            example: promo_123
          creative:
            type: string
            description: The creative content ID associated with the promotion.
            example: top_banner_2
          name:
            type: string
            description: The name of the promotion a person viewed.
            example: summer_sale
          position:
            type: string
            description: The position of the promotion a person viewed.
            example: banner_slot_1
      product_clicked:
        title: Product Clicked
        description: Use the `Product Clicked` event when a person clicks on a product.
        allOf:
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              value:
                type: number
                description: The total value of the product, after multiplying by quantity.
                example: 119.99
      product_viewed:
        title: Product Viewed
        description: Use the `Product Viewed` event when a person views a product.
        allOf:
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              value:
                type: number
                description: The total value of the product, after multiplying by quantity.
                example: 119.99
      product_added:
        title: Product Added
        description: >-
          Use the `Product Added` event when a person adds a product to their
          cart.
        allOf:
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              cart_id:
                type: string
                description: The cart ID the product was added to.
      product_removed:
        title: Product Removed
        description: >-
          Use the `Product Removed` event when a person removes a product from
          their cart.
        allOf:
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              cart_id:
                type: string
                description: The cart ID the product was removed from.
                example: cool_persons_cart_123
      cart_viewed:
        title: Cart Viewed
        description: Use the `Cart_Viewed` event when a person views their cart.
        type: object
        properties:
          cart_id:
            type: string
            description: The cart ID a person viewed.
            example: cool_persons_cart_123
          products:
            type: array
            description: >-
              The products in the cart. Each object in the array represents a
              product.
            items:
              description: An individual product.
              type: object
              properties:
                product_id:
                  type: string
                  description: The product ID.
                  example: coolshoes-123
                sku:
                  type: string
                  description: The stock keeping unit (SKU) of the product a person viewed.
                  example: abc-123-xyz
                category:
                  type: string
                  description: The product category a person viewed.
                  example: shoes
                name:
                  type: string
                  description: The name of the product a person viewed.
                  example: Cool Shoes
                brand:
                  type: string
                  description: The brand associated with the product.
                  example: A Shoe Brand
                variant:
                  type: string
                  description: The variant of the product a person viewed, if applicable.
                  example: red
                price:
                  type: number
                  description: The price of the product.
                  example: 139.99
                quantity:
                  type: integer
                  description: The quantity of the product.
                  example: 1
                coupon:
                  type: string
                  description: >-
                    The coupon code associated with the product (like
                    `NEWUSER20`).
                  example: NEWUSER20
                position:
                  type: number
                  description: The position of the product in the list.
                  example: 3
                url:
                  type: string
                  description: The URL of the product page.
                  example: https://www.example.com/product/123
                image_url:
                  type: string
                  description: The URL of the product image.
                  example: https://www.example.com/product/123.jpg
      checkout_started:
        title: Checkout Started
        description: >-
          Use the `Checkout Started` to represent a checkout process that has been
          started.
        allOf:
          - type: object
            properties:
              order_id:
                type: string
                description: The cart ID a person viewed.
                example: cool_persons_cart_123
              affiliation:
                type: string
                description: >-
                  The store or affiliation from the transaction occurred from,
                  like "Google Play Store".
                example: Shopify
              revenue:
                type: number
                description: >-
                  The total revenue of the transaction without discounts, coupons,
                  shipping, and tax.
                example: 139.99
              shipping:
                type: number
                description: The total shipping cost of the transaction.
                example: 5
              tax:
                type: number
                description: The tax associated with the the transaction.
                example: 10
              discount:
                type: number
                description: The total discount applied to the transaction.
                example: 20
              coupon:
                type: string
                description: The coupon code associated with the transaction.
                example: NEWUSER20
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              products:
                type: array
                description: >-
                  The products in the cart. Each object in the array represents a
                  product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              value:
                type: number
                description: >-
                  The expected total revenue of the transaction calculated with
                  discounts/coupons.
                example: 119.99
      checkout_step_viewed:
        title: Checkout Step Viewed
        description: >-
          Send the `Checkout Step Viewed` event when a person views a step in the
          checkout process.
        type: object
        properties:
          checkout_id:
            type: string
            description: The checkout/transaction ID.
          step:
            type: integer
            description: The step number of the checkout process.
            example: 2
          shipping_method:
            type: string
            description: The shipping method selected by the user.
            example: ground
          payment_method:
            type: string
            description: The payment method selected by the user.
            example: Visa
      checkout_step_completed:
        title: Checkout Step Completed
        description: >-
          Use the `Checkout Step Completed` event when a person completes a step
          in the checkout process.
        type: object
        properties:
          checkout_id:
            type: string
            description: The checkout/transaction ID.
            example: cool_persons_checkout_123
          step:
            type: integer
            description: The step number of the checkout process.
            example: 2
          shipping_method:
            type: string
            description: The shipping method selected by the user.
            example: ground
          payment_method:
            type: string
            description: The payment method selected by the user.
            example: Visa
      payment_info_entered:
        title: Payment Info Updated
        description: >-
          Fire the `Payment Info Updated` event whenever a person's payment info
          has been successfully entered.
        allOf:
          - type: object
            properties:
              checkout_id:
                type: string
                description: The checkout/transaction ID.
              step:
                type: integer
                description: The step number of the checkout process.
                example: 2
              shipping_method:
                type: string
                description: The shipping method selected by the user.
                example: ground
              payment_method:
                type: string
                description: The payment method selected by the user.
                example: Visa
          - type: object
            properties:
              order_id:
                type: string
                description: The order ID.
                example: order123
      order_updated:
        title: Order Updated
        description: Send the `order_updated` event when a person updates their order.
        allOf:
          - type: object
            properties:
              order_id:
                type: string
                description: The cart ID a person viewed.
                example: cool_persons_cart_123
              affiliation:
                type: string
                description: >-
                  The store or affiliation from the transaction occurred from,
                  like "Google Play Store".
                example: Shopify
              revenue:
                type: number
                description: >-
                  The total revenue of the transaction without discounts, coupons,
                  shipping, and tax.
                example: 139.99
              shipping:
                type: number
                description: The total shipping cost of the transaction.
                example: 5
              tax:
                type: number
                description: The tax associated with the the transaction.
                example: 10
              discount:
                type: number
                description: The total discount applied to the transaction.
                example: 20
              coupon:
                type: string
                description: The coupon code associated with the transaction.
                example: NEWUSER20
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              products:
                type: array
                description: >-
                  The products in the cart. Each object in the array represents a
                  product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              products:
                type: array
                description: >-
                  The products displayed in the product list. Each object in the
                  array represents a product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
      order_completed:
        title: Order Completed
        description: >-
          Send the `Order Completed` event when a customer completes an order or a
          transaction.
        allOf:
          - type: object
            properties:
              subtotal:
                type: number
                description: The order total after discounts but before taxes and shipping.
                example: 119.99
              products:
                type: array
                description: >-
                  The products displayed in the product list. Each object in the
                  array represents a product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
              order_id:
                type: string
                description: The order ID.
                example: order123
              checkout_id:
                type: string
                description: The checkout/transaction ID.
                example: checkout123
              total:
                type: number
                description: The total amount of the order.
                example: 119.99
          - type: object
            properties:
              order_id:
                type: string
                description: The cart ID a person viewed.
                example: cool_persons_cart_123
              affiliation:
                type: string
                description: >-
                  The store or affiliation from the transaction occurred from,
                  like "Google Play Store".
                example: Shopify
              revenue:
                type: number
                description: >-
                  The total revenue of the transaction without discounts, coupons,
                  shipping, and tax.
                example: 139.99
              shipping:
                type: number
                description: The total shipping cost of the transaction.
                example: 5
              tax:
                type: number
                description: The tax associated with the the transaction.
                example: 10
              discount:
                type: number
                description: The total discount applied to the transaction.
                example: 20
              coupon:
                type: string
                description: The coupon code associated with the transaction.
                example: NEWUSER20
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              products:
                type: array
                description: >-
                  The products in the cart. Each object in the array represents a
                  product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
      order_refunded:
        title: Order Refunded
        description: >-
          Send the `Order Refunded` event when you refund an order. Be sure to
          include all items refunded from the previous `order_completed` event.
        allOf:
          - type: object
            properties:
              order_id:
                type: string
                description: The cart ID a person viewed.
                example: cool_persons_cart_123
              affiliation:
                type: string
                description: >-
                  The store or affiliation from the transaction occurred from,
                  like "Google Play Store".
                example: Shopify
              revenue:
                type: number
                description: >-
                  The total revenue of the transaction without discounts, coupons,
                  shipping, and tax.
                example: 139.99
              shipping:
                type: number
                description: The total shipping cost of the transaction.
                example: 5
              tax:
                type: number
                description: The tax associated with the the transaction.
                example: 10
              discount:
                type: number
                description: The total discount applied to the transaction.
                example: 20
              coupon:
                type: string
                description: The coupon code associated with the transaction.
                example: NEWUSER20
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              products:
                type: array
                description: >-
                  The products in the cart. Each object in the array represents a
                  product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              products:
                type: array
                description: >-
                  The products displayed in the product list. Each object in the
                  array represents a product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
              total:
                type: number
                description: The total amount refunded.
                example: 119.99
              subtotal:
                type: number
                description: The order total after discounts but before taxes and shipping.
                example: 119.99
              order_id:
                type: string
                description: The order ID.
                example: order123
              checkout_id:
                type: string
                description: The checkout/transaction ID.
                example: checkout123
      order_cancelled:
        title: Order Cancelled
        description: >-
          Send the `Order Cancelled` event when a customer cancells an
          order/transaction.
        allOf:
          - type: object
            properties:
              order_id:
                type: string
                description: The cart ID a person viewed.
                example: cool_persons_cart_123
              affiliation:
                type: string
                description: >-
                  The store or affiliation from the transaction occurred from,
                  like "Google Play Store".
                example: Shopify
              revenue:
                type: number
                description: >-
                  The total revenue of the transaction without discounts, coupons,
                  shipping, and tax.
                example: 139.99
              shipping:
                type: number
                description: The total shipping cost of the transaction.
                example: 5
              tax:
                type: number
                description: The tax associated with the the transaction.
                example: 10
              discount:
                type: number
                description: The total discount applied to the transaction.
                example: 20
              coupon:
                type: string
                description: The coupon code associated with the transaction.
                example: NEWUSER20
              currency:
                type: string
                description: The currency of the transaction.
                example: USD
              products:
                type: array
                description: >-
                  The products in the cart. Each object in the array represents a
                  product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
          - type: object
            properties:
              order_id:
                type: string
                description: The cancelled order ID.
                example: order123
              products:
                type: array
                description: >-
                  The products displayed in the product list. Each object in the
                  array represents a product.
                items:
                  description: An individual product.
                  type: object
                  properties:
                    product_id:
                      type: string
                      description: The product ID.
                      example: coolshoes-123
                    sku:
                      type: string
                      description: >-
                        The stock keeping unit (SKU) of the product a person
                        viewed.
                      example: abc-123-xyz
                    category:
                      type: string
                      description: The product category a person viewed.
                      example: shoes
                    name:
                      type: string
                      description: The name of the product a person viewed.
                      example: Cool Shoes
                    brand:
                      type: string
                      description: The brand associated with the product.
                      example: A Shoe Brand
                    variant:
                      type: string
                      description: The variant of the product a person viewed, if applicable.
                      example: red
                    price:
                      type: number
                      description: The price of the product.
                      example: 139.99
                    quantity:
                      type: integer
                      description: The quantity of the product.
                      example: 1
                    coupon:
                      type: string
                      description: >-
                        The coupon code associated with the product (like
                        `NEWUSER20`).
                      example: NEWUSER20
                    position:
                      type: number
                      description: The position of the product in the list.
                      example: 3
                    url:
                      type: string
                      description: The URL of the product page.
                      example: https://www.example.com/product/123
                    image_url:
                      type: string
                      description: The URL of the product image.
                      example: https://www.example.com/product/123.jpg
              total:
                type: number
                description: The total amount of the order.
                example: 119.99
      coupon_entered:
        title: Coupon Entered
        description: >-
          Fire the `Coupon Entered` event when your audience enters a coupon on a
          cart or an order/transaction.
        type: object
        properties:
          order_id:
            type: string
            description: The order/transaction the coupon applies to (if applicable).
            example: order123
          cart_id:
            type: string
            description: The ID of the cart that the coupon applies to (if applicable).
            example: cool_persons_cart_123
          coupon_id:
            type: string
            description: the coupon ID the person entered.
            example: NEWUSER20
      coupon_applied:
        title: Coupon Applied
        description: >-
          Send the `Coupon Applied` event when you successfully apply a coupon to
          your audience's cart or transaction.
        type: object
        properties:
          order_id:
            type: string
            description: The order/transaction the coupon applies to (if applicable).
            example: order123
          cart_id:
            type: string
            description: The ID of the cart that the coupon applies to (if applicable).
            example: cool_persons_cart_123
          coupon_id:
            type: string
            description: the coupon ID the person entered.
            example: NEWUSER20
          coupon_name:
            type: string
            description: The name of the coupon, if applicable.
            example: NEWUSER20
          discount:
            type: number
            description: >-
              The discount applied through the coupon. This is the ammount
              subtracted from the `total` in other transaction events.
            example: 20
      coupon_denied:
        title: Coupon Denied
        description: >-
          Send the `Coupon Denied` event when you reject a coupon that a customer
          tried to apply to their cart or transaction.
        type: object
        properties:
          order_id:
            type: string
            description: The order/transaction the coupon applies to (if applicable).
            example: order123
          cart_id:
            type: string
            description: The ID of the cart that the coupon applies to (if applicable).
            example: cool_persons_cart_123
          coupon_id:
            type: string
            description: the coupon ID the person entered.
            example: NEWUSER20
          coupon_name:
            type: string
            description: The name of the coupon, if applicable.
            example: NEWUSER20
          reason:
            type: string
            description: The reason the coupon was denied.
            example: Coupon expired
      coupon_removed:
        title: Coupon Removed
        description: >-
          Send the `Coupon Removed` event when a coupon is removed from a
          customer's cart or transaction.
        type: object
        properties:
          order_id:
            type: string
            description: The order/transaction the coupon applies to (if applicable).
            example: order123
          cart_id:
            type: string
            description: The ID of the cart that the coupon applies to (if applicable).
            example: cool_persons_cart_123
          coupon_id:
            type: string
            description: the coupon ID the person entered.
            example: NEWUSER20
          coupon_name:
            type: string
            description: The name of the coupon, if applicable.
            example: NEWUSER20
          discount:
            type: number
            description: >-
              The discount applied through the coupon. This is the ammount
              subtracted from the `total` in other transaction events.
            example: 20
      product_added_to_wishlist:
        title: Product Added to Wishlist
        description: >-
          Send the `Product Added to Wishlist` event when a customer adds a
          product to their wishlist.
        allOf:
          - type: object
            properties:
              wishlist_id:
                type: string
                description: The ID of the wishlist that the product applies to.
              wishlist_name:
                type: string
                description: The name of the wishlist that the product applies to.
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
      product_removed_from_wishlist:
        title: Product Removed From Wishlist
        description: >-
          Send the `Product Removed from Wishlist` event when a customer removes a
          product from their wishlist.
        allOf:
          - type: object
            properties:
              wishlist_id:
                type: string
                description: The ID of the wishlist that the product applies to.
              wishlist_name:
                type: string
                description: The name of the wishlist that the product applies to.
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
      wishlist_product_added_to_cart:
        title: Wishlisted Item Added to Cart
        description: >-
          Send the `Wishlisted Item Added to Cart` event when a customer adds a
          product that was on their wishlist to their cart.
        allOf:
          - type: object
            properties:
              wishlist_id:
                type: string
                description: The ID of the wishlist that the product applies to.
                example: cool_persons_wishlist_123
              wishlist_name:
                type: string
                description: The name of the wishlist that the product applies to.
                example: Cool Person's Wishlist
              cart_id:
                type: string
                description: The ID of the cart that the product was added to.
                example: cool_persons_cart_123
          - description: An individual product.
            type: object
            properties:
              product_id:
                type: string
                description: The product ID.
                example: coolshoes-123
              sku:
                type: string
                description: The stock keeping unit (SKU) of the product a person viewed.
                example: abc-123-xyz
              category:
                type: string
                description: The product category a person viewed.
                example: shoes
              name:
                type: string
                description: The name of the product a person viewed.
                example: Cool Shoes
              brand:
                type: string
                description: The brand associated with the product.
                example: A Shoe Brand
              variant:
                type: string
                description: The variant of the product a person viewed, if applicable.
                example: red
              price:
                type: number
                description: The price of the product.
                example: 139.99
              quantity:
                type: integer
                description: The quantity of the product.
                example: 1
              coupon:
                type: string
                description: The coupon code associated with the product (like `NEWUSER20`).
                example: NEWUSER20
              position:
                type: number
                description: The position of the product in the list.
                example: 3
              url:
                type: string
                description: The URL of the product page.
                example: https://www.example.com/product/123
              image_url:
                type: string
                description: The URL of the product image.
                example: https://www.example.com/product/123.jpg
      product_shared:
        title: Product Shared
        description: >-
          Send the `Product Shared` event when a customer shares a product with
          someone else.
        type: object
        properties:
          share_via:
            type: string
            description: The channel the product was shared through.
            example: email
          share_message:
            type: string
            description: The message the customer sent with the share.
            example: Check out these cool shoes!
          recipient:
            type: string
            description: The person the product was shared with.
            example: friendOfcool.person@example.com
          product_id:
            type: string
            description: The product ID.
            example: coolshoes-123
          sku:
            type: string
            description: The stock keeping unit (SKU) of the product a person viewed.
            example: abc-123-xyz
          category:
            type: string
            description: The product category a person viewed.
            example: shoes
          name:
            type: string
            description: The name of the product a person viewed.
            example: Cool Shoes
          brand:
            type: string
            description: The brand associated with the product.
            example: A Shoe Brand
          variant:
            type: string
            description: The variant of the product a person viewed, if applicable.
            example: red
          price:
            type: number
            description: The price of the product.
            example: 139.99
          url:
            type: string
            description: The URL of the product page.
            example: https://www.example.com/product/123
          image_url:
            type: string
            description: The URL of the product image.
            example: https://www.example.com/product/123.jpg
      cart_shared:
        title: Cart Shared
        description: >-
          Send the `Cart Shared` event when a customer shares their cart with
          someone else.
        type: object
        properties:
          share_via:
            type: string
            description: The channel the product was shared through.
            example: email
          share_message:
            type: string
            description: The message the customer sent with the share.
            example: Check out my cart!
          recipient:
            type: string
            description: The person the product was shared with.
            example: friendOfcool.person@example.com
          cart_id:
            type: string
            description: The shopping cart ID.
            example: cool_persons_cart_123
          products:
            type: array
            description: An array of product IDs contained in the shared cart.
            items:
              type: object
              properties:
                product_id:
                  type: string
                  description: The product ID.
                  example: coolshoes-123
      product_reviewed:
        title: Product Reviewed
        description: >-
          Send the `Product Reviewed` event when a customer submits a review of a
          product.
        type: object
        properties:
          product_id:
            type: string
            description: The product ID.
            example: coolshoes-123
          review_id:
            type: string
            description: The ID of the review.
            example: review_123
          review_body:
            type: string
            description: The body of the review.
            example: These shoes are great!
          rating:
            type: integer
            description: The rating the customer gave the product.
            example: 5
      email_event_bounced:
        type: object
        properties:
          properties:
            type: object
            description: >-
              Event properties that you can send in a semantic email event. You
              should send as many of these properties as are available, but you'll
              almost certainly need the `email_id` to know which email the event
              refers to.
            required:
              - email_id
            properties:
              email_id:
                type: string
                description: The ID of the email/delivery.
              email_subject:
                type: string
                description: The email's subject line.
              campaign_id:
                type: string
                description: The ID of the campaign the email belongs to.
              campaign_name:
                type: string
                description: The campaign's friendly name.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
      email_event_delivered:
        type: object
        properties:
          properties:
            type: object
            description: >-
              Event properties that you can send in a semantic email event. You
              should send as many of these properties as are available, but you'll
              almost certainly need the `email_id` to know which email the event
              refers to.
            required:
              - email_id
            properties:
              email_id:
                type: string
                description: The ID of the email/delivery.
              email_subject:
                type: string
                description: The email's subject line.
              campaign_id:
                type: string
                description: The ID of the campaign the email belongs to.
              campaign_name:
                type: string
                description: The campaign's friendly name.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
      email_event_link_clicked:
        type: object
        properties:
          properties:
            allOf:
              - type: object
                description: >-
                  Event properties that you can send in a semantic email event.
                  You should send as many of these properties as are available,
                  but you'll almost certainly need the `email_id` to know which
                  email the event refers to.
                required:
                  - email_id
                properties:
                  email_id:
                    type: string
                    description: The ID of the email/delivery.
                  email_subject:
                    type: string
                    description: The email's subject line.
                  campaign_id:
                    type: string
                    description: The ID of the campaign the email belongs to.
                  campaign_name:
                    type: string
                    description: The campaign's friendly name.
              - type: object
                properties:
                  link_id:
                    type: string
                    description: The ID of the link that the user clicked.
                  link_url:
                    type: string
                    description: The URL of the link that the user clicked.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
                  ip:
                    type: string
                    description: The IP address of the user who interacted with the email.
                  user_agent:
                    type: string
                    description: The user agent of the user who interacted with the email.
      email_event_marked_as_spam:
        type: object
        properties:
          properties:
            type: object
            description: >-
              Event properties that you can send in a semantic email event. You
              should send as many of these properties as are available, but you'll
              almost certainly need the `email_id` to know which email the event
              refers to.
            required:
              - email_id
            properties:
              email_id:
                type: string
                description: The ID of the email/delivery.
              email_subject:
                type: string
                description: The email's subject line.
              campaign_id:
                type: string
                description: The ID of the campaign the email belongs to.
              campaign_name:
                type: string
                description: The campaign's friendly name.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
                  ip:
                    type: string
                    description: The IP address of the user who interacted with the email.
                  user_agent:
                    type: string
                    description: The user agent of the user who interacted with the email.
      email_event_opened:
        type: object
        properties:
          properties:
            type: object
            description: >-
              Event properties that you can send in a semantic email event. You
              should send as many of these properties as are available, but you'll
              almost certainly need the `email_id` to know which email the event
              refers to.
            required:
              - email_id
            properties:
              email_id:
                type: string
                description: The ID of the email/delivery.
              email_subject:
                type: string
                description: The email's subject line.
              campaign_id:
                type: string
                description: The ID of the campaign the email belongs to.
              campaign_name:
                type: string
                description: The campaign's friendly name.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
                  ip:
                    type: string
                    description: The IP address of the user who interacted with the email.
                  user_agent:
                    type: string
                    description: The user agent of the user who interacted with the email.
      email_event_unsubscribed:
        type: object
        properties:
          properties:
            allOf:
              - $ref: '#/components/schemas/email_properties'
              - type: object
                properties:
                  list_id:
                    type: string
                    description: The ID of the mailing list the user unsubscribed from.
                  list_name:
                    type: string
                    description: The name of the mailing list the user unsubscribed from.
            type: object
            description: >-
              Event properties that you can send in a semantic email event. You
              should send as many of these properties as are available, but you'll
              almost certainly need the `email_id` to know which email the event
              refers to.
            required:
              - email_id
            properties:
              email_id:
                type: string
                description: The ID of the email/delivery.
              email_subject:
                type: string
                description: The email's subject line.
              campaign_id:
                type: string
                description: The ID of the campaign the email belongs to.
              campaign_name:
                type: string
                description: The campaign's friendly name.
          context:
            type: object
            description: >-
              Contextual information about the event. These fields are in addition
              to any [captured automatically by your source
              library](https://customer.io/docs/api/cdp/).
            properties:
              traits:
                type: object
                description: Traits you want to capture as context for the event.
                properties:
                  email:
                    type: string
                    description: The recipient's email address.
                  ip:
                    type: string
                    description: The IP address of the user who interacted with the email.
                  user_agent:
                    type: string
                    description: The user agent of the user who interacted with the email.
      email_properties:
        type: object
        description: >-
          Event properties that you can send in a semantic email event. You should
          send as many of these properties as are available, but you'll almost
          certainly need the `email_id` to know which email the event refers to.
        required:
          - email_id
        properties:
          email_id:
            type: string
            description: The ID of the email/delivery.
          email_subject:
            type: string
            description: The email's subject line.
          campaign_id:
            type: string
            description: The ID of the campaign the email belongs to.
          campaign_name:
            type: string
            description: The campaign's friendly name.
      email_basic_context:
        type: object
        description: >-
          Contextual information about the event. These fields are in addition to
          any [captured automatically by your source
          library](https://customer.io/docs/api/cdp/).
        properties:
          traits:
            type: object
            description: Traits you want to capture as context for the event.
            properties:
              email:
                type: string
                description: The recipient's email address.
      email_total_context:
        type: object
        description: >-
          Contextual information about the event. These fields are in addition to
          any [captured automatically by your source
          library](https://customer.io/docs/api/cdp/).
        properties:
          traits:
            type: object
            description: Traits you want to capture as context for the event.
            properties:
              email:
                type: string
                description: The recipient's email address.
              ip:
                type: string
                description: The IP address of the user who interacted with the email.
              user_agent:
                type: string
                description: The user agent of the user who interacted with the email.
      live_chat_conversation_started:
        type: object
        properties:
          agent_id:
            type: string
            description: The ID of the agent taking the conversation.
          agent_name:
            type: string
            description: The real name of the agent.
          agent_username:
            type: string
            description: The username of the agent.
          conversation_id:
            type: string
            description: The ID of the conversation.
          conversation_duration:
            type: integer
            description: >-
              The duration of the conversation in seconds. 0 when the conversation
              starts, and the number of seconds indicates the time in the
              conversation when each message
          message_id:
            type: string
            description: The ID of the message that starts the conversation.
      live_chat_conversation_ended:
        type: object
        properties:
          agent_id:
            type: string
            description: The ID of the agent taking the conversation.
          agent_name:
            type: string
            description: The real name of the agent.
          agent_username:
            type: string
            description: The username of the agent.
          conversation_id:
            type: string
            description: The ID of the conversation.
          conversation_duration:
            type: integer
            description: >-
              The duration of the conversation in seconds. 0 when the conversation
              starts, and the number of seconds indicates the time in the
              conversation when each message
          message_id:
            type: string
            description: The ID of the message that starts the conversation.
      live_chat_message_sent:
        type: object
        properties:
          agent_id:
            type: string
            description: The ID of the agent taking the conversation.
          agent_name:
            type: string
            description: The real name of the agent.
          agent_username:
            type: string
            description: The username of the agent.
          conversation_id:
            type: string
            description: The ID of the conversation.
          conversation_duration:
            type: integer
            description: >-
              The duration of the conversation in seconds. 0 when the conversation
              starts, and the number of seconds indicates the time in the
              conversation when each message
          message_id:
            type: string
            description: The ID of the message that starts the conversation.
      live_chat_message_received:
        type: object
        properties:
          agent_id:
            type: string
            description: The ID of the agent taking the conversation.
          agent_name:
            type: string
            description: The real name of the agent.
          agent_username:
            type: string
            description: The username of the agent.
          conversation_id:
            type: string
            description: The ID of the conversation.
          conversation_duration:
            type: integer
            description: >-
              The duration of the conversation in seconds. 0 when the conversation
              starts, and the number of seconds indicates the time in the
              conversation when each message
          message_id:
            type: string
            description: The ID of the message that starts the conversation.
      live_chat_general:
        type: object
        properties:
          agent_id:
            type: string
            description: The ID of the agent taking the conversation.
          agent_name:
            type: string
            description: The real name of the agent.
          agent_username:
            type: string
            description: The username of the agent.
          conversation_id:
            type: string
            description: The ID of the conversation.
          conversation_duration:
            type: integer
            description: >-
              The duration of the conversation in seconds. 0 when the conversation
              starts, and the number of seconds indicates the time in the
              conversation when each message
          message_id:
            type: string
            description: The ID of the message that starts the conversation.
      mixpanel_alias:
        type: object
        required:
          - distinct_id
          - alias
        properties:
          distinct_id:
            type: string
            description: The previous ID that you want to set an alias for.
            default: $.previousId
          alias:
            type: string
            description: >-
              The new, unique ID that you want to merge with the `distinct_id`.
              You can only map a single alias, so you'll typically alias a
              `userId` to an `anonymousId` to unify the activities of a person
              before and after you identify them.
            default: coalesce($.userId, $.anonymousId)
      mixpanel_track_purchase:
        type: object
        required:
          - event
        properties:
          generatePurchaseEventPerProduct:
            type: boolean
            description: >-
              If true, we'll send a separate "Product Purchased" event for each
              product in the event.
            default: true
          distinct_id:
            type: string
            description: >-
              The distinct ID for the user. If you've identified the user, this is
              typically the `userId` You can set this to any value using the
              identify method.
            default: coalesce($.userId, $.anonymousId)
          anonymous_id:
            type: string
            description: A distinct ID randomly generated prior to calling identify.
            default: $.anonymousId
          user_id:
            description: The distinct ID after calling identify.
            default: $.userId
          group_id:
            type: string
            description: The unique identifier of the group that performed this event.
            default: $.context.groupId
          insert_id:
            type: string
            description: >-
              A random id that is unique to an event. Mixpanel uses $insert_id to
              deduplicate events.
            default: $.messageId
          time:
            type: integer
            format: datetime
            description: >-
              The timestamp of the event. Mixpanel expects epoch timestamp in
              millisecond or second. Please note, Mixpanel only accepts this field
              as the timestamp. If the field is empty, it will be set to the time
              Mixpanel servers receive it.
            default: $.timestamp
          app_name:
            type: string
            description: The name of your application.
            default: $.context.app.name
          app_namespace:
            type: string
            description: The namespace of your application.
            default: $.context.app.namespace
          app_build:
            type: string
            description: The current build of your application.
            default: $.context.app.build
          app_version:
            type: string
            description: The current version of your application.
            default: $.context.app.version
          os_name:
            type: string
            description: >-
              The name of the mobile operating system or browser that the user is
              using.
            default: $.context.os.name
          os_version:
            type: string
            description: >-
              The version of the mobile operating system or browser the user is
              using.
            default: $.context.os.version
          device_id:
            type: string
            description: A unique identifier for the device the user is using.
            default: $.context.device.id
          device_type:
            type: string
            description: The type of the user's device.
            default: $.context.device.type
          device_name:
            type: string
            description: The name of the user's device.
            default: $.context.device.name
          device_manufacturer:
            type: string
            description: The device manufacturer that the user is using.
            default: $.context.device.manufacturer
          device_model:
            type: string
            description: The device model that the user is using.
            default: $.context.device.model
          bluetooth:
            type: boolean
            description: Whether bluetooth is enabled.
            default: $.context.network.bluetooth
          carrier:
            type: string
            description: The carrier that the user is using.
            default: $.context.network.carrier
          cellular:
            type: boolean
            description: Whether cellular is enabled.
            default: $.context.network.cellular
          wifi:
            type: boolean
            description: >-
              Set to true if user’s device has an active, available Wifi
              connection, false if not.
            default: $.context.network.wifi
          country:
            type: string
            description: The current country of the user.
            default: $.context.location.country
          region:
            type: string
            description: The current region of the user.
            default: $.context.location.region
          language:
            type: string
            description: The language set by the user.
            default: $.context.locale
          library_name:
            type: string
            description: The name of the SDK used to send events.
            default: $.context.library.name
          library_version:
            type: string
            description: The version of the SDK used to send events.
            default: $.context.library.version
          ip:
            type: string
            description: >-
              The IP address of the user. This is only used for geolocation and
              won't be stored.
            default: $.context.ip
          idfa:
            type: string
            description: Identifier for Advertiser. _(iOS)_
            default: coalesce($.context.device.advertisingId, $.context.device.idfa)
          url:
            type: string
            description: The full URL of the webpage on which the event is triggered.
            default: $.context.page.url
          screen_width:
            type: number
            description: Width, in pixels, of the device screen.
            default: $.context.screen.density
          screen_height:
            type: number
            description: Height, in pixels, of the device screen.
            default: $.context.screen.density
          screen_density:
            type: number
            description: Pixel density of the device screen.
            default: $.context.screen.density
          referrer:
            type: string
            description: Referrer url
            default: $.context.page.referrer
          userAgent:
            type: string
            description: User agent
            default: $.context.userAgent
          event_properties:
            type: object
            description: >-
              An object of key-value pairs that represent additional data to be
              sent along with the event.
            default: $.properties
            x-additionalProperties:
              x-additionalPropertiesName: Event Properties
              description: >-
                A dictionry of key-value properties you want to send with this
                event.
          context:
            type: object
            description: >-
              An object of key-value pairs that provides useful context about the
              event. See [the context object](https://customer.io/docs/api/cdp/)
              for more information.
            default: $.context
          utm_properties:
            type: object
            description: UTM Tracking Properties
            properties:
              utm_source:
                type: string
                default: $.context.campaign.source
              utm_medium:
                type: string
                default: $.context.campaign.medium
              utm_campaign:
                type: string
                default: $.context.campaign.name
              utm_term:
                type: string
                default: $.context.campaign.term
              utm_content:
                type: string
                default: $.context.campaign.content
          enable_batching:
            type: boolean
            description: Set as true to ensure CDP sends data to Mixpanel in batches.
            default: true
          event:
            type: string
            description: The name of the action being performed.
            default: $.event
          products:
            type: array
            description: Products in the order.
            default: $.properties.products
            items:
              type: object
              description: Each object in the array represents a product.
              properties:
                product_id:
                  type: string
                  description: The product ID.
                sku:
                  type: string
                  description: The individual product stock keeping unit (SKU).
                category:
                  type: string
                  description: the product category.
                name:
                  type: string
                  description: The product name.
                brand:
                  type: string
                  description: the product brand.
                variant:
                  type: string
                  description: The vairiant of the product, if applicable.
                price:
                  type: number
                  description: The product price.
                quantity:
                  type: integer
                  description: The number of the product purchased.
                coupon:
                  type: string
                  description: The coupon used for the product, if applicable.
                position:
                  type: string
                url:
                  type: string
                image_url:
                  type: string
                  description: The URL of the product image, if applicable.
      mixpanel_group_identify_user:
        type: object
        properties:
          group_key:
            type: string
            description: >-
              The group key you specified in Mixpanel under Project settings. If
              this is not specified, it will be defaulted to "$group_id".
          group_id:
            type: string
            description: >-
              The unique identifier of the group. If there is a trait that matches
              the group key, it will override this value.
            default: $.groupId
          traits:
            type: object
            description: The properties to set on the group profile.
            default: $.traits
            x-additionalProperties:
              x-additionalPropertiesName: trait key-value pairs
              description: A dictionary of traits you want to set on the group.
      mixpanel_track_event:
        type: object
        properties:
          distinct_id:
            type: string
            description: >-
              The distinct ID for the user. If you've identified the user, this is
              typically the `userId` You can set this to any value using the
              identify method.
            default: coalesce($.userId, $.anonymousId)
          anonymous_id:
            type: string
            description: A distinct ID randomly generated prior to calling identify.
            default: $.anonymousId
          user_id:
            description: The distinct ID after calling identify.
            default: $.userId
          group_id:
            type: string
            description: The unique identifier of the group that performed this event.
            default: $.context.groupId
          insert_id:
            type: string
            description: >-
              A random id that is unique to an event. Mixpanel uses $insert_id to
              deduplicate events.
            default: $.messageId
          time:
            type: integer
            format: datetime
            description: >-
              The timestamp of the event. Mixpanel expects epoch timestamp in
              millisecond or second. Please note, Mixpanel only accepts this field
              as the timestamp. If the field is empty, it will be set to the time
              Mixpanel servers receive it.
            default: $.timestamp
          app_name:
            type: string
            description: The name of your application.
            default: $.context.app.name
          app_namespace:
            type: string
            description: The namespace of your application.
            default: $.context.app.namespace
          app_build:
            type: string
            description: The current build of your application.
            default: $.context.app.build
          app_version:
            type: string
            description: The current version of your application.
            default: $.context.app.version
          os_name:
            type: string
            description: >-
              The name of the mobile operating system or browser that the user is
              using.
            default: $.context.os.name
          os_version:
            type: string
            description: >-
              The version of the mobile operating system or browser the user is
              using.
            default: $.context.os.version
          device_id:
            type: string
            description: A unique identifier for the device the user is using.
            default: $.context.device.id
          device_type:
            type: string
            description: The type of the user's device.
            default: $.context.device.type
          device_name:
            type: string
            description: The name of the user's device.
            default: $.context.device.name
          device_manufacturer:
            type: string
            description: The device manufacturer that the user is using.
            default: $.context.device.manufacturer
          device_model:
            type: string
            description: The device model that the user is using.
            default: $.context.device.model
          bluetooth:
            type: boolean
            description: Whether bluetooth is enabled.
            default: $.context.network.bluetooth
          carrier:
            type: string
            description: The carrier that the user is using.
            default: $.context.network.carrier
          cellular:
            type: boolean
            description: Whether cellular is enabled.
            default: $.context.network.cellular
          wifi:
            type: boolean
            description: >-
              Set to true if user’s device has an active, available Wifi
              connection, false if not.
            default: $.context.network.wifi
          country:
            type: string
            description: The current country of the user.
            default: $.context.location.country
          region:
            type: string
            description: The current region of the user.
            default: $.context.location.region
          language:
            type: string
            description: The language set by the user.
            default: $.context.locale
          library_name:
            type: string
            description: The name of the SDK used to send events.
            default: $.context.library.name
          library_version:
            type: string
            description: The version of the SDK used to send events.
            default: $.context.library.version
          ip:
            type: string
            description: >-
              The IP address of the user. This is only used for geolocation and
              won't be stored.
            default: $.context.ip
          idfa:
            type: string
            description: Identifier for Advertiser. _(iOS)_
            default: coalesce($.context.device.advertisingId, $.context.device.idfa)
          url:
            type: string
            description: The full URL of the webpage on which the event is triggered.
            default: $.context.page.url
          screen_width:
            type: number
            description: Width, in pixels, of the device screen.
            default: $.context.screen.density
          screen_height:
            type: number
            description: Height, in pixels, of the device screen.
            default: $.context.screen.density
          screen_density:
            type: number
            description: Pixel density of the device screen.
            default: $.context.screen.density
          referrer:
            type: string
            description: Referrer url
            default: $.context.page.referrer
          userAgent:
            type: string
            description: User agent
            default: $.context.userAgent
          event_properties:
            type: object
            description: >-
              An object of key-value pairs that represent additional data to be
              sent along with the event.
            default: $.properties
            x-additionalProperties:
              x-additionalPropertiesName: Event Properties
              description: >-
                A dictionry of key-value properties you want to send with this
                event.
          context:
            type: object
            description: >-
              An object of key-value pairs that provides useful context about the
              event. See [the context object](https://customer.io/docs/api/cdp/)
              for more information.
            default: $.context
          utm_properties:
            type: object
            description: UTM Tracking Properties
            properties:
              utm_source:
                type: string
                default: $.context.campaign.source
              utm_medium:
                type: string
                default: $.context.campaign.medium
              utm_campaign:
                type: string
                default: $.context.campaign.name
              utm_term:
                type: string
                default: $.context.campaign.term
              utm_content:
                type: string
                default: $.context.campaign.content
          enable_batching:
            type: boolean
            description: Set as true to ensure CDP sends data to Mixpanel in batches.
            default: true
          event:
            type: string
            description: The name of the action being performed.
            default: $.event
      mixpanel_identify_user:
        type: object
        properties:
          ip:
            type: string
            description: >-
              The IP address of the user. This is only used for geolocation and
              won't be stored.
            default: $.context.ip
          user_id:
            type: string
            description: The unique user identifier set by you
            default: $.userId
          anonymous_id:
            type: string
            description: The generated anonymous ID for the user.
            default: $.anonymousId
          traits:
            type: object
            description: Properties to set on the user profile.
            default: $.traits
            additionalProperties:
              x-additionalPropertiesName: User Properties
              description: >-
                A dictionary of key-value pairs you want to set on the identified
                person.
      app_installed:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Installed
                description: A person installed your app.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  version:
                    type: string
                    description: The version of the app installed.
                  build:
                    type: string
                    description: The specific build of the app installed.
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Installed
                description: A person installed your app.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  version:
                    type: string
                    description: The version of the app installed.
                  build:
                    type: string
                    description: The specific build of the app installed.
      app_updated:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Updated
                description: A person updated your app.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  previous_version:
                    type: string
                    description: >-
                      The previous version of the app installed—the version a
                      person is upgrading _from_.
                  previous_build:
                    type: string
                    description: >-
                      The previous build of the app installed—the build a person
                      is upgrading _from_.
                  version:
                    type: string
                    description: The version of the app a person upgraded to.
                  build:
                    type: string
                    description: The specific build of the app the person upgraded to.
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Updated
                description: A person updated your app.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  previous_version:
                    type: string
                    description: >-
                      The previous version of the app installed—the version a
                      person is upgrading _from_.
                  previous_build:
                    type: string
                    description: >-
                      The previous build of the app installed—the build a person
                      is upgrading _from_.
                  version:
                    type: string
                    description: The version of the app a person upgraded to.
                  build:
                    type: string
                    description: The specific build of the app the person upgraded to.
      app_uninstalled:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Uninstalled
                description: A person uninstalled your app.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application
                  uninstalled` event. You can add custom properties to the event
                  payload.
                additionalProperties: {}
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Uninstalled
                description: A person uninstalled your app.
              properties:
                type: object
                description: The properties typically sent with the event.
                additionalProperties: {}
      app_opened:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Opened
                description: >-
                  A person opened your app. Our SDKs automatically send this event
                  when a person opens your app fresh or when they return to the
                  app after sending it to the the background.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  from_background:
                    type: boolean
                    description: If true, the user opened the app from the background.
                  url:
                    type: string
                    description: >-
                      The value of `UIApplicationLaunchOptionsURLKey` from
                      launchOptions. Collected on iOS only.
                  version:
                    type: string
                    description: The version of the app opened.
                  build:
                    type: string
                    description: The specific build of the app opened.
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Opened
                description: >-
                  A person opened your app. Our SDKs automatically send this event
                  when a person opens your app fresh or when they return to the
                  app after sending it to the the background.
              properties:
                type: object
                description: The properties typically sent with the event.
                properties:
                  from_background:
                    type: boolean
                    description: If true, the user opened the app from the background.
                  url:
                    type: string
                    description: >-
                      The value of `UIApplicationLaunchOptionsURLKey` from
                      launchOptions. Collected on iOS only.
                  version:
                    type: string
                    description: The version of the app opened.
                  build:
                    type: string
                    description: The specific build of the app opened.
      app_backgrounded:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Backgrounded
                description: >-
                  A person sent your app to the background. Our SDKs automatically
                  send this event when a person backgrounds your app.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application
                  Backgrounded` event. You can add custom properties to the event
                  payload.
                additionalProperties: {}
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Backgrounded
                description: >-
                  A person sent your app to the background. Our SDKs automatically
                  send this event when a person backgrounds your app.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application
                  Backgrounded` event. You can add custom properties to the event
                  payload.
                additionalProperties: {}
      app_foregrounded:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Foregrounded
                description: >-
                  A person brought your app to the foreground after having
                  backgrounded it, indicating that they're using it again. Our
                  SDKs automatically send this event when a person brings your app
                  back to the foreground.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application
                  Foregrounded` event. You can add custom properties to the event
                  payload.
                additionalProperties: {}
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Foregrounded
                description: >-
                  A person brought your app to the foreground after having
                  backgrounded it, indicating that they're using it again. Our
                  SDKs automatically send this event when a person brings your app
                  back to the foreground.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application
                  Foregrounded` event. You can add custom properties to the event
                  payload.
                additionalProperties: {}
      app_crashed:
        oneOf:
          - title: Identified User
            type: object
            properties:
              userId:
                type: string
                description: The identifier of the user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Crashed
                description: >-
                  A person experienced a crash in your app. Our SDKs automatically
                  send this event when a person experiences a crash in your app.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application Crashed`
                  event. You can add custom properties to the event payload.
                additionalProperties: {}
          - title: Anonymous User
            type: object
            properties:
              anonymousId:
                type: string
                description: The identifier of the anonymous user performing the event.
              type:
                type: string
                enum:
                  - track
                description: Application events are always `track` calls.
              event:
                type: string
                enum:
                  - Application Crashed
                description: >-
                  A person experienced a crash in your app. Our SDKs automatically
                  send this event when a person experiences a crash in your app.
              properties:
                type: object
                description: >-
                  There are no default properties for the `Application Crashed`
                  event. You can add custom properties to the event payload.
                additionalProperties: {}
      app_event_call_type:
        type: string
        enum:
          - track
        description: Application events are always `track` calls.
      app_event_userId:
        type: string
        description: The identifier of the user performing the event.
      app_event_anonymousId:
        type: string
        description: The identifier of the anonymous user performing the event.
      video_playback_started:
        title: Video Playback Started
        allOf:
          - type: object
            properties:
              content_asset_ids:
                type: array
                description: >-
                  The ID of the videos a user started. The array indicates a
                  potential playlist of videos/content IDs a person is starting.
                items:
                  type: string
              content_pod_ids:
                type: array
                description: >-
                  The IDs of the content "pods" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. The
                  array indicates a potential playlist of content pod IDs a person
                  is starting.
                items:
                  type: string
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_paused:
        title: Video Playback Paused
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_interrupted:
        title: Video Playback Interrupted
        allOf:
          - type: object
            properties:
              method:
                type: string
                description: >-
                  For Video Playback Interrupted events only, you can send this
                  property denoting how the playback was interrupted (such as
                  browser redirect, device lock, or call).
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_buffer_started:
        title: Video Playback Buffer Started
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_buffer_completed:
        title: Video Playback Buffer Completed
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_seek_started:
        title: Video Playback Seek Started
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_seek_completed:
        title: Video Playback Seek Completed
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_resumed:
        title: Video Playback Resumed
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_completed:
        title: Video Playback Completed
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      video_playback_exited:
        title: Video Playback Exited
        allOf:
          - type: object
            properties:
              content_asset_id:
                type: string
                description: The ID of the video a user interacted with.
              content_pod_id:
                type: string
                description: >-
                  The ID of the content "pod" in a playback session. Imagine a
                  video that contains content and an ad; that means the video
                  contains two pods—one for the content and one for the ad. This
                  is the specific piece of content that the user interacted with.
          - type: object
            properties:
              session_id:
                type: string
                description: >-
                  The unique ID of the overall session used to tie all events
                  generated from a specific playback. This value should be the
                  same across all playback, content, and ad events if they are
                  from the same playback session.
              ad_asset_id:
                type: string
                description: >-
                  The Ad Asset Id(s) of the ad/ads playing or about to be played
                  in the video player. For Video Playback Started events only, you
                  should send an Array of unique ad asset IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad asset playing at the time of the event.
              ad_pod_id:
                type: string
                description: >-
                  The Ad Pod Id(s) of the ad/ads playing or about to be played in
                  the video player. For Video Playback Started events only, you
                  should send an Array of unique ad pod IDs. For all other
                  playback events, you should send a string with the ID of the
                  current ad pod playing at the time of the event.
              ad_type:
                type: string
                enum:
                  - pre-roll
                  - mid-roll
                  - post-roll
                description: >-
                  The type of ad playing at the time of the event. Values can
                  include pre-roll, mid-roll, and post-roll.
              position:
                type: integer
                description: >-
                  The current index position in **seconds** of the playhead,
                  including the duration of any ads seen (if available). If the
                  playback is a livestream, check the documentation for relevant
                  destinations for details on how to correctly pass the playhead
                  position.
              total_length:
                type: integer
                description: >-
                  The total duration of the playback in seconds. This should
                  include the duration of all your content and ad included in this
                  playback session. For livestream playback, send `null`.
              bitrate:
                type: integer
                description: The current kbps.
              framerate:
                type: integer
                description: The average frames per second (fps).
              video_player:
                type: string
                description: >-
                  The name of the video player the client uses, like `youtube` or
                  `vimeo`.
              sound:
                type: integer
                minimum: 0
                maximum: 100
                description: >-
                  The current volume of the video player as a value between 1 and
                  100.
              full_screen:
                type: boolean
                description: If `true`, playback is in fullscreen mode.
              ad_enabled:
                type: boolean
                description: >-
                  Set to `true` if a viewer can see your ads. You'd set false if a
                  viewer has ad block or other blockers enabled.
              quality:
                type: string
                description: The video quality of playback, like `480p` or `highres`.
              livestream:
                type: boolean
                description: Set to `true` if the playback is a livestream.
      content_assets:
        type: object
        properties:
          content_asset_ids:
            type: array
            description: >-
              The ID of the videos a user started. The array indicates a potential
              playlist of videos/content IDs a person is starting.
            items:
              type: string
          content_pod_ids:
            type: array
            description: >-
              The IDs of the content "pods" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. The array indicates a
              potential playlist of content pod IDs a person is starting.
            items:
              type: string
      content_asset:
        type: object
        properties:
          content_asset_id:
            type: string
            description: The ID of the video a user interacted with.
          content_pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
      method:
        type: string
        description: >-
          For Video Playback Interrupted events only, you can send this property
          denoting how the playback was interrupted (such as browser redirect,
          device lock, or call).
      playback:
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          ad_asset_id:
            type: string
            description: >-
              The Ad Asset Id(s) of the ad/ads playing or about to be played in
              the video player. For Video Playback Started events only, you should
              send an Array of unique ad asset IDs. For all other playback events,
              you should send a string with the ID of the current ad asset playing
              at the time of the event.
          ad_pod_id:
            type: string
            description: >-
              The Ad Pod Id(s) of the ad/ads playing or about to be played in the
              video player. For Video Playback Started events only, you should
              send an Array of unique ad pod IDs. For all other playback events,
              you should send a string with the ID of the current ad pod playing
              at the time of the event.
          ad_type:
            type: string
            enum:
              - pre-roll
              - mid-roll
              - post-roll
            description: >-
              The type of ad playing at the time of the event. Values can include
              pre-roll, mid-roll, and post-roll.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, including
              the duration of any ads seen (if available). If the playback is a
              livestream, check the documentation for relevant destinations for
              details on how to correctly pass the playhead position.
          total_length:
            type: integer
            description: >-
              The total duration of the playback in seconds. This should include
              the duration of all your content and ad included in this playback
              session. For livestream playback, send `null`.
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          video_player:
            type: string
            description: >-
              The name of the video player the client uses, like `youtube` or
              `vimeo`.
          sound:
            type: integer
            minimum: 0
            maximum: 100
            description: The current volume of the video player as a value between 1 and 100.
          full_screen:
            type: boolean
            description: If `true`, playback is in fullscreen mode.
          ad_enabled:
            type: boolean
            description: >-
              Set to `true` if a viewer can see your ads. You'd set false if a
              viewer has ad block or other blockers enabled.
          quality:
            type: string
            description: The video quality of playback, like `480p` or `highres`.
          livestream:
            type: boolean
            description: Set to `true` if the playback is a livestream.
      video_content_started:
        title: Video Content Started
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          program:
            type: string
            description: >-
              The name of the program or show the content belongs to (if
              applicable).
          title:
            type: string
            description: The title of the video content/pod.
          description:
            type: string
            description: The description of the video content/pod.
          season:
            type: string
            description: The season the video content/pod belongs to, if applicable.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, including
              the duration of any ads seen (if available). If the playback is a
              livestream, check the documentation for relevant destinations for
              details on how to correctly pass the playhead position.
          total_length:
            type: integer
            description: >-
              The total duration of the content/asset in seconds. Note that this
              is not the duration of the video itself or the playback, but a piece
              of a complete "pod" of content. If the content is an ad in the
              video, this is the length of the ad.
          genre:
            type: string
            description: The genre of the video content/pod.
          publisher:
            type: string
            description: The publisher of the video content/pod.
          channel:
            type: string
            description: >-
              The channel the video content/pod belongs to or is aired on, like
              `hgtv` or `my_youtube_channel`.
          full_episode:
            type: boolean
            description: Set to `true` if the content is a full episode of a show.
          livestream:
            type: boolean
            description: Set to `true` if the content is a livestream.
          airdate:
            type: string
            format: date-time
            description: >-
              The ISO-8601 date-time when the video content/pod originally aired
              or was published.
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          keywords:
            type: array
            description: Keywords associated with the video content/pod.
            items:
              type: string
      video_content_playing:
        title: Video Content Playing
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          program:
            type: string
            description: >-
              The name of the program or show the content belongs to (if
              applicable).
          title:
            type: string
            description: The title of the video content/pod.
          description:
            type: string
            description: The description of the video content/pod.
          season:
            type: string
            description: The season the video content/pod belongs to, if applicable.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, including
              the duration of any ads seen (if available). If the playback is a
              livestream, check the documentation for relevant destinations for
              details on how to correctly pass the playhead position.
          total_length:
            type: integer
            description: >-
              The total duration of the content/asset in seconds. Note that this
              is not the duration of the video itself or the playback, but a piece
              of a complete "pod" of content. If the content is an ad in the
              video, this is the length of the ad.
          genre:
            type: string
            description: The genre of the video content/pod.
          publisher:
            type: string
            description: The publisher of the video content/pod.
          channel:
            type: string
            description: >-
              The channel the video content/pod belongs to or is aired on, like
              `hgtv` or `my_youtube_channel`.
          full_episode:
            type: boolean
            description: Set to `true` if the content is a full episode of a show.
          livestream:
            type: boolean
            description: Set to `true` if the content is a livestream.
          airdate:
            type: string
            format: date-time
            description: >-
              The ISO-8601 date-time when the video content/pod originally aired
              or was published.
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          keywords:
            type: array
            description: Keywords associated with the video content/pod.
            items:
              type: string
      video_content_completed:
        title: Video Content Completed
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          program:
            type: string
            description: >-
              The name of the program or show the content belongs to (if
              applicable).
          title:
            type: string
            description: The title of the video content/pod.
          description:
            type: string
            description: The description of the video content/pod.
          season:
            type: string
            description: The season the video content/pod belongs to, if applicable.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, including
              the duration of any ads seen (if available). If the playback is a
              livestream, check the documentation for relevant destinations for
              details on how to correctly pass the playhead position.
          total_length:
            type: integer
            description: >-
              The total duration of the content/asset in seconds. Note that this
              is not the duration of the video itself or the playback, but a piece
              of a complete "pod" of content. If the content is an ad in the
              video, this is the length of the ad.
          genre:
            type: string
            description: The genre of the video content/pod.
          publisher:
            type: string
            description: The publisher of the video content/pod.
          channel:
            type: string
            description: >-
              The channel the video content/pod belongs to or is aired on, like
              `hgtv` or `my_youtube_channel`.
          full_episode:
            type: boolean
            description: Set to `true` if the content is a full episode of a show.
          livestream:
            type: boolean
            description: Set to `true` if the content is a livestream.
          airdate:
            type: string
            format: date-time
            description: >-
              The ISO-8601 date-time when the video content/pod originally aired
              or was published.
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          keywords:
            type: array
            description: Keywords associated with the video content/pod.
            items:
              type: string
      content_general:
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          program:
            type: string
            description: >-
              The name of the program or show the content belongs to (if
              applicable).
          title:
            type: string
            description: The title of the video content/pod.
          description:
            type: string
            description: The description of the video content/pod.
          season:
            type: string
            description: The season the video content/pod belongs to, if applicable.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, including
              the duration of any ads seen (if available). If the playback is a
              livestream, check the documentation for relevant destinations for
              details on how to correctly pass the playhead position.
          total_length:
            type: integer
            description: >-
              The total duration of the content/asset in seconds. Note that this
              is not the duration of the video itself or the playback, but a piece
              of a complete "pod" of content. If the content is an ad in the
              video, this is the length of the ad.
          genre:
            type: string
            description: The genre of the video content/pod.
          publisher:
            type: string
            description: The publisher of the video content/pod.
          channel:
            type: string
            description: >-
              The channel the video content/pod belongs to or is aired on, like
              `hgtv` or `my_youtube_channel`.
          full_episode:
            type: boolean
            description: Set to `true` if the content is a full episode of a show.
          livestream:
            type: boolean
            description: Set to `true` if the content is a livestream.
          airdate:
            type: string
            format: date-time
            description: >-
              The ISO-8601 date-time when the video content/pod originally aired
              or was published.
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          keywords:
            type: array
            description: Keywords associated with the video content/pod.
            items:
              type: string
      video_ad_started:
        title: Video Ad Started
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          pod_position:
            type: integer
            description: >-
              The position of the pod/asset relative to other assets in the same
              pod. If your ad pod plays 3 ads, you would indicate if this is add
              number 1, 2, or 3.
          pod_length:
            type: integer
            description: The number of ad assets in the ad-pod
          type:
            type: string
            enum:
              - pre-roll
              - mid-roll
              - post-roll
            description: The ad type. Values can include pre-roll, mid-roll, and post-roll.
          title:
            type: string
            description: The title of the ad.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, with
              respect to the length of the ad.
          total_length:
            type: integer
            description: The total duration of the ad in seconds.
          publisher:
            type: string
            description: The ad's publisher.
          load_type:
            type: string
            enum:
              - dynamic
              - linear
            description: >-
              Set to `dynamic` if you insert ads dynamically and `linear` if ads
              are the same for all viewers.
          content:
            type: object
            description: >-
              For video destinations that require you to send content metadata
              with ad events, you can send all the content metadata in this
              object—like `content.title`, etc.
          quartile:
            type: integer
            description: >-
              Specifies the quartile of the ad that a viewer reached. If you use
              our client-side libraries, we'll automatically track this for you.
      video_ad_playing:
        title: Video Ad Playing
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          pod_position:
            type: integer
            description: >-
              The position of the pod/asset relative to other assets in the same
              pod. If your ad pod plays 3 ads, you would indicate if this is add
              number 1, 2, or 3.
          pod_length:
            type: integer
            description: The number of ad assets in the ad-pod
          type:
            type: string
            enum:
              - pre-roll
              - mid-roll
              - post-roll
            description: The ad type. Values can include pre-roll, mid-roll, and post-roll.
          title:
            type: string
            description: The title of the ad.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, with
              respect to the length of the ad.
          total_length:
            type: integer
            description: The total duration of the ad in seconds.
          publisher:
            type: string
            description: The ad's publisher.
          load_type:
            type: string
            enum:
              - dynamic
              - linear
            description: >-
              Set to `dynamic` if you insert ads dynamically and `linear` if ads
              are the same for all viewers.
          content:
            type: object
            description: >-
              For video destinations that require you to send content metadata
              with ad events, you can send all the content metadata in this
              object—like `content.title`, etc.
          quartile:
            type: integer
            description: >-
              Specifies the quartile of the ad that a viewer reached. If you use
              our client-side libraries, we'll automatically track this for you.
      video_ad_completed:
        title: Video Ad Completed
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          pod_position:
            type: integer
            description: >-
              The position of the pod/asset relative to other assets in the same
              pod. If your ad pod plays 3 ads, you would indicate if this is add
              number 1, 2, or 3.
          pod_length:
            type: integer
            description: The number of ad assets in the ad-pod
          type:
            type: string
            enum:
              - pre-roll
              - mid-roll
              - post-roll
            description: The ad type. Values can include pre-roll, mid-roll, and post-roll.
          title:
            type: string
            description: The title of the ad.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, with
              respect to the length of the ad.
          total_length:
            type: integer
            description: The total duration of the ad in seconds.
          publisher:
            type: string
            description: The ad's publisher.
          load_type:
            type: string
            enum:
              - dynamic
              - linear
            description: >-
              Set to `dynamic` if you insert ads dynamically and `linear` if ads
              are the same for all viewers.
          content:
            type: object
            description: >-
              For video destinations that require you to send content metadata
              with ad events, you can send all the content metadata in this
              object—like `content.title`, etc.
          quartile:
            type: integer
            description: >-
              Specifies the quartile of the ad that a viewer reached. If you use
              our client-side libraries, we'll automatically track this for you.
      ad_general:
        type: object
        properties:
          session_id:
            type: string
            description: >-
              The unique ID of the overall session used to tie all events
              generated from a specific playback. This value should be the same
              across all playback, content, and ad events if they are from the
              same playback session.
          asset_id:
            type: string
            description: The ID of the video a user interacted with.
          pod_id:
            type: string
            description: >-
              The ID of the content "pod" in a playback session. Imagine a video
              that contains content and an ad; that means the video contains two
              pods—one for the content and one for the ad. This is the specific
              piece of content that the user interacted with.
          pod_position:
            type: integer
            description: >-
              The position of the pod/asset relative to other assets in the same
              pod. If your ad pod plays 3 ads, you would indicate if this is add
              number 1, 2, or 3.
          pod_length:
            type: integer
            description: The number of ad assets in the ad-pod
          type:
            type: string
            enum:
              - pre-roll
              - mid-roll
              - post-roll
            description: The ad type. Values can include pre-roll, mid-roll, and post-roll.
          title:
            type: string
            description: The title of the ad.
          position:
            type: integer
            description: >-
              The current index position in **seconds** of the playhead, with
              respect to the length of the ad.
          total_length:
            type: integer
            description: The total duration of the ad in seconds.
          publisher:
            type: string
            description: The ad's publisher.
          load_type:
            type: string
            enum:
              - dynamic
              - linear
            description: >-
              Set to `dynamic` if you insert ads dynamically and `linear` if ads
              are the same for all viewers.
          content:
            type: object
            description: >-
              For video destinations that require you to send content metadata
              with ad events, you can send all the content metadata in this
              object—like `content.title`, etc.
          quartile:
            type: integer
            description: >-
              Specifies the quartile of the ad that a viewer reached. If you use
              our client-side libraries, we'll automatically track this for you.
      video_quality_updated:
        type: object
        properties:
          bitrate:
            type: integer
            description: The current kbps.
          framerate:
            type: integer
            description: The average frames per second (fps).
          startupTime:
            type: integer
            description: The time it takes for the video to start playing.
          droppedFrames:
            type: integer
            description: The number of frames dropped during playback.
    securitySchemes:
      Basic-Auth:
        type: http
        scheme: basic
        description: >
          The Data Pipelines API uses a basic authentication scheme with your API
          key. Because basic authorization typically expects a username and
          password combination, you'll use the API Key as the username and leave
          the password blank—base64 encoding your credentials in the format
          `API_key:`. 
    responses:
      '200':
        description: A successful request returns an empty object response.
      '400':
        description: Invalid or malformed request.
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  type: object
                  properties:
                    errors:
                      type: array
                      description: An array of errors.
                      items:
                        type: string
                        description: Error descriptions.
      '401':
        description: Unauthorized request. Make sure that you provided the right credentials.
      '429':
        description: Your request is over the 10-per-second limit.
konfigCliVersion: 1.38.61
