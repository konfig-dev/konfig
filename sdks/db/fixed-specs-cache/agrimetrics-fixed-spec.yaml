publishJson:
  company: Agrimetrics
  serviceName: false
  sdkName: agrimetrics-{language}-sdk
  clientName: Agrimetrics
  metaDescription: >-
    Radical new answers are needed to feed a growing population and protect our
    planet.


    Agrimetrics provides data and tools to agrifood businesses, researchers and
    policy-makers to address our most pressing global food challenges. This is a
    unique opportunity for the food and farming sectors, working together, to
    drive sustainable productivity.
  apiStatusUrls: inherit
  homepage: agrimetrics.co.uk
  developerDocumentation: developer.agrimetrics.co.uk/reference/retrieve-api-key
  categories:
    - agriculture
    - sustainability
    - agritech
    - data
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Catalog API
    version: ''
    description: This API lists data sets available on Agrimetrics platform.
  servers:
    - url: https://api-test.agrimetrics.co.uk/catalog
  components:
    securitySchemes:
      sec0:
        type: apiKey
        in: header
        name: ocp-apim-subscription-key
      JWT:
        description: For requests to https://app.agrimetrics.co.uk/backend.
        type: http
        scheme: bearer
        bearerFormat: JWT
      apiKeyHeader:
        description: For requests to https://api.agrimetrics.co.uk
        type: apiKey
        name: Ocp-Apim-Subscription-Key
        in: header
      xUserHeader:
        description: For internal use only.
        type: apiKey
        name: x-user-id
        in: header
      apiKeyQuery:
        description: >-
          (NOT RECOMMENDED) For requests where sending custom headers is not
          possible.
        type: apiKey
        name: subscription-key
        in: query
    schemas:
      RestError:
        type: object
        properties:
          message:
            type: string
            example: Error Message
      NewLayers:
        type: object
        properties:
          layers:
            type: array
            items:
              $ref: '#/components/schemas/ServiceDefinitionResponse'
          layerId:
            type: string
            example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      CostSummary:
        type: object
        required:
          - totalCost
          - numberOfChargeableItems
        properties:
          totalCost:
            type: number
            example: 0
          numberOfChargeableItems:
            type: integer
            example: 1
          totalNumberOfItems:
            type: integer
            example: 1
      GeoJSONPolygon:
        type: object
        required:
          - type
          - coordinates
        properties:
          type:
            type: string
            enum:
              - Polygon
          coordinates:
            type: array
            minItems: 1
            maxItems: 1
            items:
              type: array
              minItems: 4
              items:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/EPSG4326Longitude'
                    - $ref: '#/components/schemas/EPSG4326Latitude'
                minItems: 2
                maxItems: 3
              example:
                - - -1.3623046875
                  - 52.8691297276852
                - - -1.16455078125
                  - 52.736291655910925
                - - -0.9228515625
                  - 52.65639394198803
                - - -0.37353515625
                  - 52.76289173758374
                - - -1.3623046875
                  - 52.8691297276852
      GeoJSONMultiPolygon:
        type: object
        required:
          - type
          - coordinates
        properties:
          type:
            type: string
            enum:
              - MultiPolygon
          coordinates:
            type: array
            minItems: 1
            items:
              type: array
              minItems: 1
              maxItems: 1
              items:
                type: array
                minItems: 4
                items:
                  type: array
                  items:
                    anyOf:
                      - $ref: '#/components/schemas/EPSG4326Longitude'
                      - $ref: '#/components/schemas/EPSG4326Latitude'
                  minItems: 2
                  maxItems: 3
                example:
                  - - -1.3623046875
                    - 52.8691297276852
                  - - -1.16455078125
                    - 52.736291655910925
                  - - -0.9228515625
                    - 52.65639394198803
                  - - -0.37353515625
                    - 52.76289173758374
                  - - -1.3623046875
                    - 52.8691297276852
      BinaryFile:
        type: string
        format: binary
      Band:
        type: object
        required:
          - index
          - stats
          - totalNumPixels
          - pixelCounts
        properties:
          index:
            type: string
            example: Band 1
          stats:
            type: object
            required:
              - min
              - mean
              - median
              - max
              - std
            properties:
              min:
                type: number
                example: 14
              mean:
                type: number
                example: 47.695621490478516
              median:
                type: number
                example: 43
              max:
                type: number
                example: 100
              std:
                type: number
                example: 20.756450653076172
          totalNumPixels:
            type: number
            example: 128288
          pixelCounts:
            description: >
              This object represents the number of pixel-value occurrences in the
              band. For example, a pixel-value `12.0` that occurs `3` times would
              be represented as `"12.0": 3` in this object.
            type: object
            example:
              '14.0': 3
              '15.0': 43
              '16.0': 192
              '17.0': 397
              '18.0': 734
            additionalProperties:
              type: number
      Statistics:
        type: object
        required:
          - bands
        properties:
          bands:
            type: array
            items:
              $ref: '#/components/schemas/Band'
      Layer:
        type: object
        additionalProperties: false
        required:
          - layerId
          - description
          - links
        properties:
          layerId:
            type: string
            example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          description:
            type: string
            example: Geospatial Layer
          links:
            type: object
            additionalProperties: false
            required:
              - self
              - search
            properties:
              self:
                type: string
                format: uri
                example: >-
                  https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
              search:
                type: string
                format: uri
                example: >-
                  https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
      BoundingBox:
        type: object
        additionalProperties: false
        required:
          - type
          - coordinates
        properties:
          type:
            type: string
            enum:
              - bounding-box
          coordinates:
            type: object
            required:
              - minlat
              - minlon
              - maxlat
              - maxlon
            properties:
              minlat:
                $ref: '#/components/schemas/EPSG4326Latitude'
              minlon:
                $ref: '#/components/schemas/EPSG4326Longitude'
              maxlat:
                $ref: '#/components/schemas/EPSG4326Latitude'
              maxlon:
                $ref: '#/components/schemas/EPSG4326Longitude'
      EPSG4326Longitude:
        type: number
        minimum: -180
        maximum: 180
        example: 2.1234234
      EPSG4326Latitude:
        type: number
        minimum: -90
        maximum: 90
        example: -1.1234234
      GeoJSONPoint:
        type: object
        additionalProperties: false
        description: >-
          This is a GeoJSON Point. The coordinates array must be EPSG:4326 with
          [longitude,latitude] order.
        required:
          - type
          - coordinates
        properties:
          type:
            type: string
            enum:
              - Point
          coordinates:
            type: array
            minItems: 2
            maxItems: 2
            items:
              anyOf:
                - $ref: '#/components/schemas/EPSG4326Longitude'
                - $ref: '#/components/schemas/EPSG4326Latitude'
            example:
              - -91.85
              - 15.52
      GeneralGeometry:
        oneOf:
          - $ref: '#/components/schemas/BoundingBox'
          - $ref: '#/components/schemas/GeoJSONPolygon'
          - $ref: '#/components/schemas/GeoJSONMultiPolygon'
      Times:
        type: array
        example:
          - '2018-01-01T00:00:00.000Z'
          - '2019-01-01T00:00:00.000Z'
        items:
          type: string
          format: date-time
      ISO8601Datetime:
        type: string
        pattern: '[0-9]{8}T[0-9]{6}Z'
        example: 20130310T180000Z
      OutputFormats:
        type: string
        enum:
          - shape-zip
          - application/json
          - csv
          - GML3
          - image/tiff
          - KML
          - OGR-GDB
          - OGR-MIF
          - OGR-TAB
          - DXF
      DatasetId:
        type: string
        format: uuid
        example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
        description: The ID of a dataset in the catalog
      LayerId:
        type: string
        format: uuid
        example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      PolygonOrBBoxSearchBase:
        type: object
        required:
          - geometry
        properties:
          geometry:
            $ref: '#/components/schemas/GeneralGeometry'
          time:
            type: string
            format: date-time
            example: '2017-01-01T00:00:00.000Z'
      PolygonOrBBoxSearch:
        allOf:
          - $ref: '#/components/schemas/PolygonOrBBoxSearchBase'
          - type: object
            properties:
              outputFormat:
                $ref: '#/components/schemas/OutputFormats'
      PointSearchBase:
        type: object
        required:
          - geometry
          - distance
        properties:
          geometry:
            $ref: '#/components/schemas/GeoJSONPoint'
          distance:
            type: integer
            minimum: 10
            example: 10
          time:
            type: string
            format: date-time
            example: '2017-01-01T00:00:00.000Z'
      PointSearch:
        allOf:
          - $ref: '#/components/schemas/PointSearchBase'
          - type: object
            properties:
              outputFormat:
                $ref: '#/components/schemas/OutputFormats'
      ServiceDefinition:
        type: object
        required:
          - datasetId
          - layerName
          - service
          - WMS
          - WFS
          - WCS
          - OGCApiFeatures
          - OGCApiTiles
          - WMTS
        additionalProperties: false
        properties:
          datasetId:
            type: string
            example: a420450f-ef42-4fc9-a137-69456bdad016
          layerName:
            type: string
            example: Geospatial Layer
          service:
            type: string
            enum:
              - WCS
              - WFS
          WFS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WCS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WMS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WMTS:
            type: string
            enum:
              - 'Y'
              - 'N'
          OGCApiFeatures:
            type: string
            enum:
              - 'Y'
              - 'N'
          OGCApiTiles:
            type: string
            enum:
              - 'Y'
              - 'N'
          temporal:
            type: boolean
            example: true
          datastore:
            type: string
            example: Datastore Name
          geoserverHostName:
            type: string
            example: geoserver-test.agrimetrics.co.uk
          geometryField:
            type: string
            example: geom
          billable:
            $ref: '#/components/schemas/Billable'
          defaultEPSGCode:
            type: number
            example: 4326
      ServiceDefinitionResponse:
        type: object
        required:
          - layerId
          - datasetId
          - layerName
          - service
          - WMS
          - WFS
          - WCS
          - OGCApiFeatures
          - OGCApiTiles
          - WMTS
        additionalProperties: false
        properties:
          layerId:
            type: string
            example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
          datasetId:
            type: string
            example: a420450f-ef42-4fc9-a137-69456bdad016
          layerName:
            type: string
            example: Geospatial Layer
          service:
            type: string
            enum:
              - WCS
              - WFS
          temporal:
            type: boolean
            example: true
          datastore:
            type: string
            example: Datastore Name
          geoserverHostName:
            type: string
            example: geoserver-test.agrimetrics.co.uk
          geometryField:
            type: string
            example: geom
          billable:
            $ref: '#/components/schemas/Billable'
          defaultEPSGCode:
            type: number
            example: 4326
          WMS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WMTS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WFS:
            type: string
            enum:
              - 'Y'
              - 'N'
          WCS:
            type: string
            enum:
              - 'Y'
              - 'N'
          OGCApiFeatures:
            type: string
            enum:
              - 'Y'
              - 'N'
          OGCApiTiles:
            type: string
            enum:
              - 'Y'
              - 'N'
      Billable:
        type: object
        required:
          - billingDataType
          - billingCreditType
          - billingCreditCost
        properties:
          billingDataType:
            type: string
          billingCreditType:
            type: string
          billingCreditCost:
            type: number
      RequestId:
        type: string
        format: uuid
        example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
      uniqueLinkId:
        type: string
      DataRequestResponse:
        type: array
        items:
          type: object
          required:
            - requestId
            - datasetId
            - datasetName
            - status
            - requestedDate
            - requesterEmail
          properties:
            requestId:
              description: The ID of the data request
              type: string
              format: uuid
            datasetId:
              description: The ID of the dataset that the data request relates to
              type: string
              format: uuid
            datasetName:
              description: The name of the dataset that the data request relates to
              type: string
            status:
              description: The status of the data request
              type: string
              enum:
                - pending
                - approved
                - denied
                - cancelled
            requestedDate:
              description: The date the data request was made
              type: string
            requesterEmail:
              description: The requesters email address
      DataRequestDetails:
        type: array
        items:
          type: object
          required:
            - requestId
            - datasetId
            - datasetName
            - status
            - requestedDate
          properties:
            requestId:
              description: The ID of the data request
              type: string
              format: uuid
            datasetId:
              description: The ID of the dataset that the data request relates to
              type: string
              format: uuid
            datasetName:
              description: The name of the dataset that the data request relates to
              type: string
            status:
              description: The status of the data request
              type: string
              enum:
                - pending
                - approved
                - denied
                - cancelled
            requestedDate:
              description: The date the data request was made
              type: string
            reviewedDate:
              description: The date the data request was approved or rejected
            requestedFormat:
              description: The format the user would like the data to be provided in
              type: string
              enum:
                - application/geo+json
                - application/gml+xml; version=3.2
                - application/vnd.google-earth.kml+xml
                - application/zipped-shapefile
                - application/x.gdb+zip
                - application/x.mid-mif+zip
                - application/x.tab+zip
                - application/dxf
                - image/tiff
            projectName:
              description: The name of the project the data is for
              type: string
            projectManagerName:
              description: The name of the project manager who can approve the request
              type: string
            projectManagerEmail:
              description: >-
                The email address of the project manager who can approve the
                request
              type: string
            requesterEmail:
              description: The email of the person who made the data request
              type: string
            expiryDate:
              description: >-
                The date until which the data from an approved request can be
                downloaded
              type: string
            uniqueLinkId:
              type: string
      DataRequest:
        type: object
        additionalProperties: false
        required:
          - projectName
          - projectManagerName
          - projectManagerEmail
          - datasetId
          - datasetName
          - requestedFormat
        properties:
          projectName:
            description: The name of the project the data is for
            type: string
          projectManagerName:
            description: The name of the project manager who can approve the request
            type: string
          projectManagerEmail:
            description: The email address of the project manager who can approve the request
            type: string
          datasetId:
            description: The ID of the dataset that the data request relates to
            type: string
            format: uuid
          datasetName:
            description: The name of the dataset that the data request relates to
            type: string
          geoJsonAOI:
            description: >-
              The area of interest that the user is requesting access to as a
              stringified GeoJSON
            type: string
          shapefileAOI:
            description: >-
              The area of interest that the user is requesting access to as a
              zipped shapefile
            type: string
            format: binary
          requestedFormat:
            description: The format the user would like the data to be provided in
            type: string
            enum:
              - application/geo+json
              - application/gml+xml; version=3.2
              - application/vnd.google-earth.kml+xml
              - application/zipped-shapefile
              - application/x.gdb+zip
              - application/x.mid-mif+zip
              - application/x.tab+zip
              - application/dxf
              - image/tiff
      Category:
        type: object
        properties:
          value:
            $ref: '#/components/schemas/CategoryValue'
          label:
            type: string
            description: The label of the category
      Categories:
        type: array
        items:
          $ref: '#/components/schemas/Category'
      Creator:
        type: object
        properties:
          value:
            type: string
            description: The value of the creator
          label:
            type: string
            description: The label of the creator
      Concept:
        type: object
        required:
          - value
          - label
        properties:
          value:
            type: string
            description: The value of the concept
          label:
            type: string
            description: The label of the concept
      Concepts:
        type: array
        items:
          $ref: '#/components/schemas/Concept'
      TagsOrConcepts:
        type: array
        items:
          $ref: '#/components/schemas/TagOrConcept'
      TagOrConcept:
        type: object
        required:
          - label
          - type
        properties:
          value:
            type: string
            description: The id of the tag
          label:
            type: string
            description: The label of the tag
          type:
            type: string
            description: The type of the tag
            enum:
              - tag
              - concept
      Exchange:
        type: string
        enum:
          - agrimetrics
          - defra
      DataSets:
        type: object
        required:
          - dataSets
        properties:
          dataSets:
            type: array
            description: An array of data sets
            items:
              $ref: '#/components/schemas/DataSet'
          concepts:
            $ref: '#/components/schemas/Concepts'
      BasicDataSetInfo:
        type: object
        required:
          - id
          - title
          - entryType
        properties:
          id:
            $ref: '#/components/schemas/DatasetId'
          entryType:
            $ref: '#/components/schemas/EntryType'
          title:
            description: Title for the data set.
            type: string
      DataSet:
        type: object
        additionalProperties: false
        required:
          - title
          - description
          - entryType
        properties:
          id:
            $ref: '#/components/schemas/DatasetId'
          entryType:
            $ref: '#/components/schemas/EntryType'
          exchange:
            $ref: '#/components/schemas/Exchange'
          title:
            type: string
            description: Title for the data set.
          alternativeTitles:
            type: array
            items:
              type: string
          description:
            type: string
            description: Description of the data set.
          scoringURI:
            type: string
            description: Scoring URI of the model.
          endpointKey:
            type: string
            description: Endpoint key for the model.
          isOwner:
            type: boolean
            description: Whether the current user is the owner of this data set.
          publisher:
            type: string
            description: The ID of the publisher.
          createdAt:
            type: number
            format: int64
            description: Data set creation timestamp.
          published:
            type: number
            format: int64
            description: Data set publication timestamp.
          metadataModified:
            type: number
            format: int64
            description: Metadata last-modification timestmap.
          usedBy:
            description: Other data sets using this data set.
            type: array
            items:
              $ref: '#/components/schemas/BasicDataSetInfo'
          derivedFrom:
            description: >
              Data sets used to generate this data set. When updating a data set,
              use an array of IDs. When GETting the data set, the return type will
              be `BasicDataSetInfo`.
            type: array
            items:
              oneOf:
                - $ref: '#/components/schemas/BasicDataSetInfo'
                - $ref: '#/components/schemas/DatasetId'
          entitlements:
            description: Entitlements for the current user.
            type: array
            items:
              $ref: '#/components/schemas/Entitlement'
          entitlementsByIdentity:
            type: object
            description: Array of entitlements by user identity.
            additionalProperties:
              type: array
              items:
                $ref: '#/components/schemas/Entitlement'
          summary:
            type: string
            description: Summary of the data set.
            maxLength: 140
          creator:
            type: string
            description: Creator of the data set.
          dataReliability:
            type: string
            description: Free text description about the reliability of this dataset.
          license:
            type: string
            description: License of the data set.
            deprecated: true
          licence:
            $ref: '#/components/schemas/Licence'
            description: Licence and use limitations.
          landingPage:
            type: string
            description: >-
              DEPRECATED. This has been replaced with the resources attribute.
              Reference URI of the data set.
            deprecated: true
          resources:
            type: array
            description: Links containing more information on the data set
            items:
              $ref: '#/components/schemas/Resource'
          dataFormats:
            type: array
            description: Format of the data set
            items:
              $ref: '#/components/schemas/DataFormat'
          pricingDescription:
            type: string
            description: Pricing description of the data set.
          spatialCoverage:
            $ref: '#/components/schemas/SpatialCoverage'
          spatialResolution:
            type: number
            description: The resolution of data set in meters.
          geospatialExtent:
            $ref: '#/components/schemas/GeospatialExtent'
            description: The geospatial extent of the data on the data set
          temporalCoverage:
            type: string
            pattern: ^\d{4}-[01]\d-[0-3]\d(?:-\d{4}-[01]\d-[0-3]\d)?$
            description: The time frame this data set covers.
          temporalResolution:
            type: string
            enum:
              - P1Y
              - P1M
              - P1D
              - PT1H
              - PT1M
              - PT1S
            description: The sampling time period of the data set.
          accrualPeriodicity:
            $ref: '#/components/schemas/AccrualPeriodicity'
            description: The frequency at which data set is published.
          distributions:
            type: array
            items:
              type: object
              additionalProperties: false
              properties:
                service:
                  type: string
                  description: A data service that gives access to the data set.
                description:
                  type: string
                  description: Description on how to access the data set.
          issued:
            type: string
            pattern: ^\d{4}-[01]\d-[0-3]\d$
            description: The date when the data set was issued.
          modified:
            type: number
            description: An timestamp of when the data in this dataset was last updated
          keywords:
            type: array
            deprecated: true
            description: >-
              List of keywords on this data set. keywords is deprecated - use tags
              instead
            items:
              type: string
              description: keyword value
          tags:
            type: array
            description: List of tags on this data set.
            items:
              type: string
              description: tag value
              maxLength: 80
          topics:
            description: List of topics on this data set
            type: array
            items:
              $ref: '#/components/schemas/Topic'
          workflowKeywords:
            description: List of workflow keywords on this data set
            type: array
            items:
              $ref: '#/components/schemas/WorkflowKeywords'
          taxonomyKeywords:
            description: List of keywords based on specific taxonomies
            type: array
            items:
              $ref: '#/components/schemas/TaxonomyKeywords'
          category:
            description: Category of this data set.
            $ref: '#/components/schemas/CategoryValue'
          visibility:
            type: string
            description: Whether or not this data set should be displayed in the index.
            enum:
              - visible
              - hidden
          concepts:
            type: array
            description: >-
              List of concepts on this data set. Check the concepts endpoint to
              see valid values.
            items:
              type: string
              description: concept URI
          dataSet:
            type: object
            description: Information about the file data set
            additionalProperties: false
            properties:
              id:
                type: string
              type:
                type: string
                enum:
                  - file
          services:
            type: array
            description: List of services available on the data set
            items:
              type: object
              description: Service URI and Label
              properties:
                uri:
                  type: string
                label:
                  type: string
          sampleData:
            type: object
            description: Optional location to download sample data
            properties:
              csv:
                type: string
              json:
                type: string
          image:
            $ref: '#/components/schemas/ImageRepresentation'
          coordinateReferenceSystemId:
            type: string
            description: URL to the specification of the coordinate system used in the data
          spatialRepresentationType:
            type: string
            description: Type of the geospatial data
          lineage:
            type: string
            description: >-
              Information about the creation and quality assurance process of the
              dataset
          fromTemplate:
            type: string
            description: >-
              Information about which template was used to create the dataset
              record
          contacts:
            type: array
            description: List of contacts for this data set
            items:
              $ref: '#/components/schemas/Contact'
          metadataContact:
            description: Contact for the metadata on this data set
            $ref: '#/components/schemas/Contact'
          publicContact:
            description: Public contact for the metadata on this data set
            $ref: '#/components/schemas/PublicContact'
          approvalForAccessNumber:
            type: number
            description: Approval for access status number
          approvalForAccessStatus:
            type: string
            description: Approval for access status value
            enum:
              - AfA (Information Requests only)
              - AfA (Public Register)
              - AfA (Publication Scheme and Information for Re-Use Register)
              - AfA (Publication Scheme)
              - Not AfA (To be Assessessed with Guidance)
              - Not AfA (To be Assessed)
              - Not Applicable - Third Party Dataset
              - Open Data Risk Assessment
          language:
            type: string
            description: Language used on the data set
          characterSet:
            type: string
            description: Character set used on the data set
          hierarchyLevel:
            type: string
            description: Hierarchy level of the data set
          metadataLanguage:
            type: string
            description: Language used on the metadata
          metadataCharacterSet:
            type: string
            description: Character set used on the metadata
          metadataStandardName:
            type: string
          metadataStandardVersion:
            type: string
          draftStatus:
            $ref: '#/components/schemas/DraftStatus'
          draftNotes:
            description: Any notes added during review of the data set
            type: string
          publishedStatus:
            $ref: '#/components/schemas/PublishedStatus'
      DataSetTemplateMetadata:
        description: Used as params for POST/PUT requests
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
          description:
            type: string
          dataSet:
            $ref: '#/components/schemas/DataSetPatch'
          entitlements:
            $ref: '#/components/schemas/BatchIdentityInputEntitlements'
          creatorEntitlements:
            $ref: '#/components/schemas/Entitlements'
          exchange:
            description: Currently only used when creating templates
            $ref: '#/components/schemas/Exchange'
        required:
          - name
      DataSetTemplatePatchMetadata:
        description: Used as params for PATCH requests
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
          description:
            type: string
          dataSet:
            $ref: '#/components/schemas/DataSetPatch'
          entitlements:
            $ref: '#/components/schemas/BatchIdentityInputEntitlements'
          creatorEntitlements:
            $ref: '#/components/schemas/Entitlements'
      DataSetTemplateEntity:
        description: Returned from API responses, includes id and other required properties
        allOf:
          - type: object
            properties:
              id:
                type: string
            required:
              - id
              - dataSet
              - entitlements
          - $ref: '#/components/schemas/DataSetTemplateMetadata'
      DataSetPatch:
        type: object
        additionalProperties: false
        properties:
          title:
            type: string
            description: Title for the data set.
          alternativeTitles:
            type: array
            items:
              type: string
          scoringURI:
            type: string
            description: ScoringURI for the model.
          endpointKey:
            type: string
            description: Endpoint key for the model.
          description:
            type: string
            description: Description of the data set.
          summary:
            type: string
            description: Summary of the data set.
            maxLength: 140
          derivedFrom:
            description: >
              Data sets used to generate this data set. When updating a data set,
              use an array of IDs. When GETting the data set, the return type will
              be `BasicDataSetInfo`.
            type: array
            items:
              oneOf:
                - $ref: '#/components/schemas/BasicDataSetInfo'
                - $ref: '#/components/schemas/DatasetId'
            nullable: true
          creator:
            type: string
            description: Creator of the data set.
            nullable: true
          dataReliability:
            type: string
            description: Free text description about the reliability of this dataset.
            nullable: true
          license:
            type: string
            description: License of the data set.
            nullable: true
            deprecated: true
          licence:
            type: object
            required:
              - text
            description: Licensing information and access constraint
            properties:
              text:
                type: string
                description: the name or contents of the licence
              url:
                type: string
                description: link to the contents of the licence
              useLimitationStatement:
                type: string
                description: >-
                  INSPIRE Limitations On Public Access, see:
                  https://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess
              attributionStatement:
                type: string
                description: copyright statement
              useConstraints:
                type: string
                description: >-
                  INSPIRE Conditions Applying To Access and Use, see:
                  https://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse
            nullable: true
          resources:
            type: array
            description: Links containing more information on the data set
            items:
              $ref: '#/components/schemas/Resource'
            nullable: true
          dataFormats:
            type: array
            description: Format of the data set
            items:
              $ref: '#/components/schemas/DataFormat'
            nullable: true
          spatialCoverage:
            type: string
            enum:
              - United Kingdom
              - England
              - Northern Ireland
              - Scotland
              - Wales
              - Canada
              - Ethiopia
              - France
              - India
              - Kenya
              - Mexico
              - Netherlands
              - Spain
              - Tanzania
              - Uganda
              - United States
              - Global only
              - null
            description: The geo spatial coverage of the data set.
            nullable: true
          spatialResolution:
            type: number
            description: The resolution of data set in meters.
            nullable: true
          geospatialExtent:
            type: object
            description: The geospatial extent of the data on the data set
            nullable: true
            required:
              - northBoundLatitude
              - eastBoundLongitude
              - southBoundLatitude
              - westBoundLongitude
            properties:
              northBoundLatitude:
                type: number
              eastBoundLongitude:
                type: number
              southBoundLatitude:
                type: number
              westBoundLongitude:
                type: number
          temporalCoverage:
            type: string
            pattern: ^\d{4}-[01]\d-[0-3]\d(?:-\d{4}-[01]\d-[0-3]\d)?$
            description: The time frame this data set covers.
            nullable: true
          temporalExtent:
            type: object
            additionalProperties: false
            properties:
              begin:
                type: string
                description: The beginning of the period of time covered by the data set.
              end:
                type: string
                description: >-
                  The end of the period of time covered by the data set. If empty,
                  the collection of data is ongoing.
            required:
              - begin
          temporalResolution:
            type: string
            enum:
              - P1Y
              - P1M
              - P1D
              - PT1H
              - PT1M
              - PT1S
              - null
            description: The sampling time period of the data set.
            nullable: true
          topics:
            type: array
            items:
              $ref: '#/components/schemas/Topic'
          workflowKeywords:
            description: List of workflow keywords on this data set
            type: array
            items:
              $ref: '#/components/schemas/WorkflowKeywords'
          taxonomyKeywords:
            description: List of keywords based on specific taxonomies
            type: array
            items:
              $ref: '#/components/schemas/TaxonomyKeywords'
          accrualPeriodicity:
            type: string
            enum:
              - Hourly
              - Daily
              - Three times a week
              - Semiweekly
              - Weekly
              - Three times a month
              - Biweekly
              - Semimonthly
              - Monthly
              - Bimonthly
              - Quarterly
              - Three times a year
              - Semiannual
              - Annual
              - Biennial
              - Triennial
              - Continuous
              - Irregular
              - continual
              - daily
              - weekly
              - fortnightly
              - monthly
              - quarterly
              - biannually
              - annually
              - asNeeded
              - irregular
              - notPlanned
              - unknown
              - null
            description: The frequency at which data set is published.
            nullable: true
          issued:
            type: string
            pattern: ^\d{4}-[01]\d-[0-3]\d$
            description: The date when the data set was issued.
            nullable: true
          createdAt:
            type: number
            format: int64
            description: Data set creation timestamp.
            nullable: true
          published:
            type: number
            format: int64
            description: Data set publication timestamp.
            nullable: true
          publishedStatus:
            $ref: '#/components/schemas/PublishedStatus'
          modified:
            type: number
            description: An timestamp of when the data in this dataset was last updated
            nullable: true
          tags:
            type: array
            description: List of tags on this data set.
            items:
              type: string
              description: tag value
              maxLength: 80
            nullable: true
          category:
            description: Category of this data set.
            $ref: '#/components/schemas/CategoryValue'
          visibility:
            type: string
            description: Whether or not this data set should be displayed in the index.
            enum:
              - visible
              - hidden
          pricingDescription:
            type: string
            description: Pricing description of the data set.
          distributions:
            type: array
            items:
              type: object
              additionalProperties: false
              properties:
                service:
                  type: string
                  description: A data service that gives access to the data set.
                description:
                  type: string
                  description: Description on how to access the data set.
          approvalForAccessNumber:
            type: number
            description: Approval for access status number
            nullable: true
          approvalForAccessStatus:
            type: string
            description: Approval for access status value
            enum:
              - AfA (Information Requests only)
              - AfA (Public Register)
              - AfA (Publication Scheme and Information for Re-Use Register)
              - AfA (Publication Scheme)
              - Not AfA (To be Assessessed with Guidance)
              - Not AfA (To be Assessed)
              - Not Applicable - Third Party Dataset
              - Open Data Risk Assessment
              - null
            nullable: true
          contacts:
            type: array
            description: List of contacts for this data set
            items:
              $ref: '#/components/schemas/Contact'
          metadataContact:
            type: object
            description: Contact for the metadata on this data set
            required:
              - organisationName
              - role
            additionalProperties: false
            properties:
              organisationName:
                type: string
                description: Organisation name for this contact
              individualName:
                type: string
                description: Individual name for this contact
              emailAddress:
                type: string
                description: Email address for this contact
              role:
                type: string
                enum:
                  - resourceProvider
                  - custodian
                  - owner
                  - user
                  - distributor
                  - originator
                  - pointOfContact
                  - principalInvestigator
                  - processor
                  - publisher
                  - author
                description: The role of this contact as it relates to the data set
            nullable: true
          lineage:
            type: string
            description: >-
              Information about the creation and quality assurance process of the
              dataset
            nullable: true
          language:
            type: string
            description: Language used on the data set
            nullable: true
          characterSet:
            type: string
            description: Character set used on the data set
            nullable: true
          hierarchyLevel:
            type: string
            description: Hierarchy level of the data set
            nullable: true
          metadataLanguage:
            type: string
            description: Language used on the metadata
            nullable: true
          metadataCharacterSet:
            type: string
            description: Character set used on the metadata
            nullable: true
          metadataStandardName:
            type: string
            nullable: true
          metadataStandardVersion:
            type: string
            nullable: true
          coordinateReferenceSystemId:
            type: string
            description: URL to the specification of the coordinate system used in the data
            nullable: true
          spatialRepresentationType:
            type: string
            description: Type of the geospatial data
            nullable: true
      EntryType:
        description: The type of the entry, data set or model
        type: string
        enum:
          - model
          - dataSet
      GroupCode:
        type: string
        description: Name of group being harvested
        enum:
          - apha
          - defra
          - ea
          - ne
          - rpa
      TemplateId:
        description: The ID of a template in the catalog
        type: string
        format: uuid
      Resource:
        type: object
        required:
          - url
        additionalProperties: false
        properties:
          url:
            type: string
            description: URL to obtain more information on this data set.
          id:
            type: string
            description: ID for this resource item.
          name:
            type: string
            description: Name for what the URL represents.
          description:
            type: string
            description: Description of what the URL represents.
          private:
            type: boolean
            description: Indicates whether the resource metadata is sensitive data.
      Contact:
        type: object
        required:
          - organisationName
          - role
        additionalProperties: false
        properties:
          organisationName:
            type: string
            description: Organisation name for this contact
          individualName:
            type: string
            description: Individual name for this contact
          positionName:
            type: string
            description: Position of this contact within their organisation
          emailAddress:
            type: string
            description: Email address for this contact
          role:
            type: string
            enum:
              - resourceProvider
              - custodian
              - owner
              - user
              - distributor
              - originator
              - pointOfContact
              - principalInvestigator
              - processor
              - publisher
              - author
            description: The role of this contact as it relates to the data set
      PublicContact:
        type: object
        required:
          - organisationName
          - role
        additionalProperties: false
        properties:
          organisationName:
            type: string
            description: Organisation name for this contact
          url:
            type: string
            description: Support url for this contact
          urlLabel:
            type: string
            description: Title of the support website
          emailAddress:
            type: string
            description: Email address for this contact
          role:
            type: string
            enum:
              - pointOfContact
            description: The role of this contact as it relates to the data set
      CreateFromTemplatePayload:
        type: object
        required:
          - templateId
        properties:
          templateId:
            $ref: '#/components/schemas/TemplateId'
          exchange:
            $ref: '#/components/schemas/Exchange'
          title:
            description: Title for the data set.
            type: string
          description:
            type: string
            description: Description of the data set.
      DraftStatus:
        type: string
        enum:
          - submitted
          - approved
          - rejected
        description: The workflow status of this data set's draft
      PublishedStatus:
        type: string
        enum:
          - published
          - retired
        description: >-
          The publication status of this data set. Published data-sets have been
          approved by an admin
      ImageRepresentation:
        type: object
        description: A data set image.
        properties:
          type:
            type: string
          url:
            type: string
            format: uri
          thumbnailUrl:
            type: string
            format: uri
          author:
            type: object
            description: The author of the image and a link to their website.
            properties:
              name:
                type: string
              url:
                type: string
                format: uri
      EntryUpdateResponse:
        type: object
        properties:
          status:
            description: A message describing the result of the operation
            type: string
          id:
            description: The ID for the new catalog entry.
            type: string
      IdentityInput:
        type: object
        description: An entity, such as a user or organisation.
        properties:
          id:
            type: string
            description: The Auth0 id of a user, or uuid of another identity
          email:
            type: string
            description: The email address of a user
          name:
            type: string
            description: >-
              The name of the user. Will be ignored, but allowed so GET data can
              be round-tripped.
          type:
            type: string
            description: The type of the identity
            enum:
              - user
              - organisation
              - public
        required:
          - type
        additionalProperties: false
      Entitlement:
        type: string
        enum:
          - read
          - write
          - grant
      Entitlements:
        type: object
        description: The entitlements an identity has on a resource
        properties:
          catalog:
            type: object
            properties:
              read:
                type: boolean
              readSensitive:
                type: boolean
              write:
                type: boolean
          dataSet:
            type: object
            properties:
              read:
                type: boolean
              write:
                type: boolean
          isAdmin:
            type: boolean
        required:
          - catalog
          - isAdmin
        additionalProperties: false
      BatchIdentityInputEntitlements:
        type: array
        items:
          type: object
          required:
            - identity
            - entitlements
          properties:
            identity:
              $ref: '#/components/schemas/IdentityInput'
            entitlements:
              $ref: '#/components/schemas/Entitlements'
      IdentityEntitlements:
        type: object
        description: Entitlements for an identity on a resource, and details of the identity
        properties:
          identity:
            description: The entity with the entitlements on this resource
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              name:
                type: string
          entitlements:
            $ref: '#/components/schemas/Entitlements'
      DataFormat:
        type: object
        required:
          - dataFormat
        properties:
          dataFormat:
            type: string
          version:
            type: string
      GeospatialExtent:
        type: object
        required:
          - northBoundLatitude
          - eastBoundLongitude
          - southBoundLatitude
          - westBoundLongitude
        properties:
          northBoundLatitude:
            type: number
          eastBoundLongitude:
            type: number
          southBoundLatitude:
            type: number
          westBoundLongitude:
            type: number
      SpatialCoverage:
        type: string
        enum:
          - United Kingdom
          - England
          - Northern Ireland
          - Scotland
          - Wales
          - Canada
          - Ethiopia
          - France
          - India
          - Kenya
          - Mexico
          - Netherlands
          - Spain
          - Tanzania
          - Uganda
          - United States
          - Global only
        description: The geo spatial coverage of the data set.
      CategoryValue:
        type: string
        enum:
          - free
          - standard
          - premium
          - on-request
        description: The value of the category
      TagValue:
        type: string
        description: The value of the tag
      Relationship:
        type: string
        enum:
          - narrower
          - broader
      Licence:
        type: object
        required:
          - text
        description: Licensing information and access constraint
        properties:
          text:
            type: string
            description: the name or contents of the licence
          url:
            type: string
            description: link to the contents of the licence
          useLimitationStatement:
            type: string
            description: >-
              INSPIRE Limitations On Public Access, see:
              https://inspire.ec.europa.eu/metadata-codelist/LimitationsOnPublicAccess
          attributionStatement:
            type: string
            description: copyright statement
          useConstraints:
            type: string
            description: >-
              INSPIRE Conditions Applying To Access and Use, see:
              https://inspire.ec.europa.eu/metadata-codelist/ConditionsApplyingToAccessAndUse
      Topic:
        type: string
        description: topic value
        enum:
          - farming
          - biota
          - boundaries
          - climatologyMeteorologyAtmosphere
          - economy
          - elevation
          - environment
          - geoscientificInformation
          - health
          - imageryBaseMapsEarthCover
          - intelligenceMilitary
          - inlandWaters
          - location
          - oceans
          - planningCadastre
          - society
          - structure
          - transportation
          - utilitiesCommunication
      WorkflowKeywords:
        type: string
        description: Workflow keyword value
        enum:
          - OpenData
          - NonSpatial
          - NotOpen
          - ConditionalData
          - PartnerDataset
          - InternalOnly
          - ThirdParty
          - PartnerDataset
          - DatasetBundle
          - RetiredOpenData
          - RetiredNotOpen
          - RetiredConditionalData
          - RetiredPartnerDataset
          - RetiredInternalOnly
          - RetiredThirdParty
          - RetiredPartnerDataset
          - RetiredDatasetBundle
          - RetiredNonSpatial
      TaxonomyKeywords:
        type: object
        description: Taxonomy keyword values
        required:
          - valueUri
          - valueLabel
          - sourceUri
          - sourceLabel
        properties:
          valueUri:
            type: string
            example: http://www.eionet.europa.eu/gemet/concept/4118
          valueLabel:
            type: string
            example: hydrology
          sourceUri:
            type: string
            example: http://inspire.ec.europa.eu/theme
          sourceLabel:
            type: string
            example: GEMET - INSPIRE themes, version 1.0
      AccrualPeriodicity:
        type: string
        description: Accrual periodicity options
        enum:
          - Hourly
          - Daily
          - Three times a week
          - Semiweekly
          - Weekly
          - Three times a month
          - Biweekly
          - Semimonthly
          - Monthly
          - Bimonthly
          - Quarterly
          - Three times a year
          - Semiannual
          - Annual
          - Biennial
          - Triennial
          - Continuous
          - Irregular
          - continual
          - daily
          - weekly
          - fortnightly
          - monthly
          - quarterly
          - biannually
          - annually
          - asNeeded
          - irregular
          - notPlanned
          - unknown
  security:
    - JWT: []
  paths:
    /authenticate:
      post:
        summary: Get JWT
        description: >-
          Retrieve an Agrimetrics JWT to be used as additional authentication on
          specified endpoints
        operationId: get-jwt
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Agrimetrics Catalog username
                  password:
                    type: string
                    description: Agrimetrics Catalog password
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "jwts": {
                              "agrimetrics": {
                                  "token_type": "Bearer",
                                  "access_token": "9d7e80a0-ad76-4a5c-8810-91ffc9d5858f"
                              }
                          }
                      }
                schema:
                  type: object
                  properties:
                    jwts:
                      type: object
                      properties:
                        agrimetrics:
                          type: object
                          properties:
                            token_type:
                              type: string
                              example: Bearer
                            access_token:
                              type: string
                              example: 9d7e80a0-ad76-4a5c-8810-91ffc9d5858f
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /status:
      get:
        tags:
          - Status
        summary: Get status of catalog API.
        description: Get status of catalog API.
        operationId: GetAPIStatus
        security:
          - {}
          - JWT: []
          - apiKeyQuery: []
        responses:
          '200':
            description: Status of catalog API.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - version
                    - _links
                  properties:
                    version:
                      type: string
                    _links:
                      type: object
                      required:
                        - self
                      properties:
                        self:
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              type: string
    /query:
      post:
        tags:
          - Query Layer
        summary: Query and download sections of one or more layers
        description: >-
          Cut one or more layers to a shape boundary and retrieve the features as
          multiple layers in a single downloadable file
        operationId: QueryLayers
        security: []
        parameters:
          - in: query
            name: layer
            description: A layer to query
            required: true
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LayerId'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJSONPolygon'
            application/zipped-shapefile:
              schema:
                type: string
                format: binary
        responses:
          '200':
            description: Result
            content:
              application/geo+json:
                schema:
                  type: string
                  format: binary
              application/gml+xml; version=3.2:
                schema:
                  type: string
                  format: binary
              application/vnd.google-earth.kml+xml:
                schema:
                  type: string
                  format: binary
              application/zipped-shapefile:
                schema:
                  type: string
                  format: binary
              application/x.gdb+zip:
                schema:
                  type: string
                  format: binary
              application/x.mid-mif+zip:
                schema:
                  type: string
                  format: binary
              application/x.tab+zip:
                schema:
                  type: string
                  format: binary
              application/dxf:
                schema:
                  type: string
                  format: binary
              application/dxf+zip:
                schema:
                  type: string
                  format: binary
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Forbidden. Check permissions to view these layers.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
          '404':
            description: Not found. One or more layers could not be found.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
          '406':
            description: Not acceptable. Cannot produce output type.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
    /datasets/{datasetId}:
      get:
        tags:
          - Query Dataset
        summary: List layers within dataset
        description: Get the list of layers contained in a geospatial data set.
        operationId: GetDataset
        parameters:
          - in: path
            name: datasetId
            description: This parameter corresponds to the Agrimetrics Catalogue dataset ID.
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Successful. Retrived a list of layers for this dataset.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - layers
                  additionalProperties: false
                  properties:
                    layers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Layer'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Forbidden. Check permissions to view this dataset.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
          '404':
            description: Not found. The datasetId cannot be found.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
    /datasets/{datasetId}/layers:
      post:
        tags:
          - Manage Dataset
          - Admin
        summary: Ingest file to new layer
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Ingest a file that has been uploaded to the catalog to create a new
          layer.

          See [supported ingest formats](doc:supported-ingest-formats) for
          supported formats.
        operationId: PostNewLayerToDataset
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - fileUri
                additionalProperties: false
                properties:
                  fileUri:
                    type: string
                    example: >-
                      https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
        responses:
          '201':
            description: >-
              Successful. Layer Created. File ingested correctly and new layer
              created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NewLayers'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: File not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '409':
            description: Lock contention. Try again later.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /shapefile:
      post:
        summary: Receive a shapefile and return GeoJson
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Receive a shapefile and return GeoJson for explore page
        operationId: ConvertShapeFileToGeoJson
        requestBody:
          required: true
          content:
            application/zipped-shapefile:
              schema:
                type: string
                format: binary
        responses:
          '200':
            description: GeoJSON Polygon
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GeoJSONPolygon'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Dataset not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}:
      get:
        tags:
          - Query Layer
        summary: Get layer metadata
        description: |
          Get the metadata for a given layer, including the geospatial extent.
        operationId: GetLayer
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '200':
            description: >-
              Successful. Retreived the geospatial and temporal descriptions of
              the layer
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - geometry
                    - layerId
                    - description
                    - links
                    - outputFormats
                  additionalProperties: false
                  properties:
                    layerId:
                      type: string
                      example: 97130f06-6242-463f-bf19-0dd6f5a58cfb
                    description:
                      type: string
                      example: Geospatial Layer
                    links:
                      type: object
                      additionalProperties: false
                      required:
                        - self
                        - search
                      properties:
                        self:
                          type: string
                          format: uri
                          example: >-
                            https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb
                        search:
                          type: string
                          format: uri
                          example: >-
                            https://api.agrimetrics.co.uk/geospatial/layers/97130f06-6242-463f-bf19-0dd6f5a58cfb/search
                    geometry:
                      $ref: '#/components/schemas/BoundingBox'
                    times:
                      $ref: '#/components/schemas/Times'
                    outputFormats:
                      type: array
                      items:
                        $ref: '#/components/schemas/OutputFormats'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not found. Verify that the layer ID is correct/exists.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      patch:
        tags:
          - Manage Layer
        summary: Add a GeoTIFF to a layer
        description: >
          > :warning: **The maximum file size accepted for this endpoint to work
          is 200 MiB.**


          This endpoint will add a GeoTIFF to an existing GeoTIFF layer.
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  datetime:
                    $ref: '#/components/schemas/ISO8601Datetime'
                  file:
                    description: The file to upload.
                    type: string
                    format: binary
        responses:
          '200':
            description: Successful. Tile created on the specified layer.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
          '400':
            description: Bad request. An error occurred while uploading the file.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Forbidden. The request is not authorised.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not found. Verify that the layer ID is correct/exists.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '409':
            description: Lock contention. Try again later.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '413':
            description: Payload too large. File exceeds the maximum size limit.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      delete:
        tags:
          - Manage Layer
          - Admin
        summary: Delete layer
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Delete the datastore and layer relating to a zip file on a data set.
        operationId: DeleteLayerInDataset
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '204':
            description: Successful. Layer Deleted.
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Not authorized.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: File not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/files:
      delete:
        tags:
          - Manage Layer
          - Admin
        summary: Delete a file from a layer
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Remove a file from a layer. When you are deleting a file from a layer,
          the layer may remain if any other files were ingested onto the same
          layer. If removing a raster file, provide the fileName query parameter;
          if removing a vector file, provide the fileUri.
        operationId: deleteTile
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
          - in: query
            name: fileUri
            required: false
            schema:
              type: string
              format: uri
              pattern: .zip$
              example: >-
                https://api-test.agrimetrics.co.uk/file-management/data-sets/11111111-2222-3333-4444-55555555555/files/example.zip
          - in: query
            name: filename
            required: false
            schema:
              type: string
              pattern: .tif[f]?$
              example: example.tif
        responses:
          '200':
            description: OK
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Auth error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: File not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/ingest:
      post:
        tags:
          - Manage Layer
          - Admin
        summary: Ingest a file to a layer
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Ingest a file that has been uploaded to a data set.
        operationId: PostIngest
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - fileId
                additionalProperties: false
                properties:
                  fileId:
                    type: string
                    example: >-
                      https://api.agrimetrics.co.uk/file-management/data-sets/5e74c298-515d-408d-8926-974abc696092/files/samplehabitats.zip
                  fileName:
                    type: string
                    pattern: .((tif[f]?)|zip)$
                    example: samplehabitats.zip
                  datetime:
                    $ref: '#/components/schemas/ISO8601Datetime'
        responses:
          '200':
            description: Successful. Tile ingested correctly.
          '400':
            description: Bad request. File ingest error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: File not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '409':
            description: Lock contention. Try again later.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/style:
      delete:
        operationId: DeleteLayerStyle
        tags:
          - Manage Layer
        summary: Delete the style from a layer, if one has been set
        description: |
          Delete an SLD style that has been applied to a layer.
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '204':
            description: Style deleted
          '400':
            description: >
              You probably tried to delete the style from an unstyled layer.
              Please verify the layer ID.
      get:
        tags:
          - Manage Layer
        summary: Get the style for a layer, if one has been set
        description: |
          Get the SLD style that has been applied to a layer.
        operationId: GetLayerStyle
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '200':
            description: Style applied to the layer
            content:
              application/vnd.ogc.sld+xml:
                example: null
          '404':
            description: Query was successful but no style found.
      put:
        tags:
          - Manage Layer
        summary: Set layer style
        description: >
          Apply a new style to the given layer. The style must be provided as an
          SLD file (1.0.0 and 1.1.0 supported).
        operationId: PutLayerStyle
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        responses:
          '200':
            description: Successful. Layer style has been updated.
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
          '400':
            description: >-
              Bad request. Verify that the layer supports this operation /
              temporal specifications / output format
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      post:
        tags:
          - Manage Layer
        summary: Auto-generate and set layer style
        description: |
          Generate a new style and apply it to the given layer.
        operationId: GenerateLayerStyle
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
          - in: query
            name: key
            required: true
            schema:
              type: string
              description: The column name used for the legend
              example: LU_CODE
        responses:
          '200':
            description: Successful. Layer style has been updated.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '400':
            description: >-
              Bad request. Verify that the layer supports this operation /
              temporal specifications / output format
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Forbidden. Check permissions to view this dataset.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Layer not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '500':
            description: Internal server error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/search:
      post:
        tags:
          - Query Layer
        summary: Search within layer
        description: >
          > :warning: Search geometries are currently limited to areas up to 500
          square km.


          Search a specific geometry within a layer. You can optionally specify a
          time range and/or choose the format of the response (file type, or
          json).
        operationId: PostSearch
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PolygonOrBBoxSearch'
                  - $ref: '#/components/schemas/PointSearch'
        responses:
          '200':
            description: >-
              Successful. Retrieved the requested geometry in the
              default/specified format.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/BinaryFile'
          '400':
            description: >-
              Bad request. Verify that the layer supports this operation /
              temporal specifications / output format
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '402':
            description: Insufficient credits to complete the request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Resource not found. Verify that the layer ID is correct/exists.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/search/cost:
      post:
        tags:
          - Query Layer
        summary: Calculate query cost
        description: |
          Find out the cost of searching a specific geometry within a layer.
        operationId: PostSearchCost
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PolygonOrBBoxSearchBase'
                  - $ref: '#/components/schemas/PointSearchBase'
        responses:
          '200':
            description: >-
              Successful. Retrieved the requested geometry in the
              default/specified format.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CostSummary'
          '400':
            description: >-
              Bad request. Verify that the layer supports this operation /
              temporal specifications / output format
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '402':
            description: Insufficient credits to complete the request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Resource not found. Verify that the layer ID is correct/exists.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /layers/{layerId}/search/statistics:
      post:
        tags:
          - Query Layer
        summary: Get layer statistics
        description: >
          > :warning: Search geometries are currently limited to areas up to 500
          square km.


          Calculates basic statistics of the raster layer within the specified
          geometry (and optionally time).
        operationId: PostSearchStatistics
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - geometry
                additionalProperties: false
                properties:
                  geometry:
                    $ref: '#/components/schemas/GeneralGeometry'
                  time:
                    type: string
                    format: date-time
                    example: '2017-01-01T00:00:00.000Z'
        responses:
          '200':
            description: >-
              Successful. Retrieved the requested statistics for the specified
              geometry
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Statistics'
          '400':
            description: >-
              Bad request. Verify that the layer supports this operation /
              temporal specifications.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Resource not found. Verify that the layer ID is correct/exists.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /serviceDefinition:
      post:
        tags:
          - Service Definition
          - Admin
        summary: Create new service definition
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Create new service definition within a data set.
        operationId: PostServiceDefinition
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDefinition'
        responses:
          '201':
            description: Successful. Created new service definition.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServiceDefinitionResponse'
          '400':
            description: >-
              Bad request. Verify that the format of the service definition is
              correct.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Not authorised.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /serviceDefinition/{layerId}:
      patch:
        tags:
          - Service Definition
          - Admin
        summary: Update service definition
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Update an existing service definition with billing and coordinates
          reference system metadata.
        operationId: PatchServiceDefinition
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  billable:
                    $ref: '#/components/schemas/Billable'
                  defaultEPSGCode:
                    type: number
                    example: 4326
        responses:
          '200':
            description: Successful. Edited service definition.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServiceDefinitionResponse'
          '400':
            description: >-
              Bad request. Verify that the format of the service definition is
              correct.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Auth error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Service definition not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      delete:
        tags:
          - Service Definition
          - Admin
        summary: Delete service definition
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Delete service definition given layer ID
        operationId: DeleteServiceDefinition
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '200':
            description: OK
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Auth error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Service definition not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      get:
        tags:
          - Service Definition
          - Admin
        summary: Get service definition
        description: >
          > :warning: **This is an Agrimetrics internal operation. It relies on
          information which is not exposed externally.**


          Get the service definition for a given layer ID
        operationId: GetServiceDefinition
        parameters:
          - in: path
            name: layerId
            required: true
            schema:
              $ref: '#/components/schemas/LayerId'
        responses:
          '200':
            description: Successful.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServiceDefinitionResponse'
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Auth error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Service definition not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /data-requests:
      get:
        security:
          - JWT: []
        tags:
          - dataRequest
        summary: lists a users data requests
        description: |
          Query the given users data access requests
        operationId: getDataRequest
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataRequestResponse'
          '400':
            description: Bad Request. Verify that the JWT has a valid user ID on it
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '401':
            description: Not authenticated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      post:
        security:
          - JWT: []
        tags:
          - dataRequest
        operationId: postDataRequest
        summary: create a single access request
        description: Create a single access request for an authenticated user
        requestBody:
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/DataRequest'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '400':
            description: Bad Request. Verify that the JWT has a valid user ID on it
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '401':
            description: Not authenticated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /data-requests/{requestId}:
      get:
        security:
          - JWT: []
        tags:
          - dataRequest
        summary: gets the data for the approved request
        description: Returns the users requested data
        operationId: getDataRequestById
        parameters:
          - in: path
            name: requestId
            required: true
            schema:
              $ref: '#/components/schemas/RequestId'
        responses:
          '200':
            description: Result
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataRequestDetails'
          '400':
            description: Bad Request. Verify that the JWT has a valid user ID on it
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '401':
            description: Not authenticated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has been approved for
              access.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      patch:
        security:
          - JWT: []
        tags:
          - dataRequest
        operationId: patchDataRequestById
        summary: updates a data request
        description: |
          Allows updating of the given data request |
          - For example: cancelling the request
        parameters:
          - in: path
            name: requestId
            required: true
            schema:
              $ref: '#/components/schemas/RequestId'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: The status of the data request
                    type: string
                    enum:
                      - cancelled
                      - pending
        responses:
          '200':
            description: Result
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '400':
            description: Bad Request. Verify that the JWT has a valid user ID on it
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '401':
            description: Not authenticated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has been approved for
              access.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /data-requests/{uniqueLinkId}/approve:
      get:
        tags:
          - dataRequest
        summary: approve data access
        description: Grants access to a user on a given data request
        operationId: approveAccessRequest
        parameters:
          - in: path
            name: uniqueLinkId
            required: true
            schema:
              $ref: '#/components/schemas/uniqueLinkId'
        responses:
          '204':
            description: OK
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Data Access request not found
    /data-requests/{uniqueLinkId}/reject:
      get:
        tags:
          - dataRequest
        summary: reject data access
        description: Rejects access to a user on a given data request
        operationId: rejectAccessRequest
        parameters:
          - in: path
            name: uniqueLinkId
            required: true
            schema:
              $ref: '#/components/schemas/uniqueLinkId'
        responses:
          '204':
            description: OK
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Data Access request not found
    /data-requests/{uniqueLinkId}/geometry:
      get:
        tags:
          - dataRequest
        summary: Get geometry for data request as GeoJSON
        description: Returns the geometry of the data request as GeoJSON
        operationId: getAccessRequestGeometry
        parameters:
          - in: path
            name: uniqueLinkId
            required: true
            schema:
              $ref: '#/components/schemas/uniqueLinkId'
        responses:
          '200':
            description: GeoJSON Polygon
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GeoJSONPolygon'
          '404':
            description: Data Access request not found
    /data-requests/{requestId}/download:
      get:
        tags:
          - dataRequest
        summary: Get the results of your data request
        description: >-
          Once a data access request has been approved, this endpoint returns the
          data requested.
        operationId: getAccessRequestData
        parameters:
          - in: path
            name: requestId
            required: true
            schema:
              $ref: '#/components/schemas/RequestId'
        responses:
          '200':
            description: OK
            content:
              application/geo+json:
                schema:
                  type: string
                  format: binary
              application/gml+xml; version=3.2:
                schema:
                  type: string
                  format: binary
              application/vnd.google-earth.kml+xml:
                schema:
                  type: string
                  format: binary
              application/zipped-shapefile:
                schema:
                  type: string
                  format: binary
              application/x.gdb+zip:
                schema:
                  type: string
                  format: binary
              application/x.mid-mif+zip:
                schema:
                  type: string
                  format: binary
              application/x.tab+zip:
                schema:
                  type: string
                  format: binary
              application/dxf:
                schema:
                  type: string
                  format: binary
          '400':
            description: Bad request.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '401':
            description: Authentication required.
          '403':
            description: >-
              The request has not been approved yet OR it has been rejected OR you
              are not authorised for this data access request.
          '404':
            description: No request found by that ID.
          '406':
            description: Not acceptable. Cannot produce output type.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - message
                  properties:
                    message:
                      type: string
          '410':
            description: This data access request has expired.
    /datasets/swagger-ui/{swaggerFile}:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features Swagger
        description: Get swagger files
        operationId: GetOGCAPIFeaturesSwagger
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: swaggerFile
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
    /datasets/apicss/{cssFile}:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API CSS
        description: Get CSS files
        operationId: GetOGCAPICSS
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: cssFile
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
    /datasets/{datasetId}/wms:
      get:
        security: []
        tags:
          - WMS
        summary: Web Map Service (WMS) query
        description: >
          Query the given layer with the OpenGIS® Web Map Service interface
          standard
        operationId: GetLayerWMS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WMS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      head:
        security: []
        tags:
          - WMS
        summary: Web Maps Service (WMS) query
        description: >
          Query the given data set with the OpenGIS® Web Map Service interface
          standard
        operationId: HeadWMS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WMS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wmts:
      get:
        security: []
        tags:
          - WMTS
        summary: Web Map Tile Service (WMTS) query
        description: >
          Query the given data set with the OpenGIS® Web Map Tile Serice interface
          standard
        operationId: GetLayerWMTS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WMTS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wfs:
      get:
        security: []
        tags:
          - WFS
        summary: Web Feature Service (WFS) query
        description: >
          Query the given data set with the OpenGIS® Web Feature Service interface
          standard
        operationId: GetLayerWFS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WFS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      post:
        security: []
        tags:
          - WFS
        summary: Web Feature Service (WFS) query
        description: >
          Query the given data set with the OpenGIS® Web Feature Service interface
          standard
        operationId: GetLayerWFSpost
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          content:
            text/xml:
              schema:
                type: object
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WMS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      head:
        security: []
        tags:
          - WFS
        summary: Web Feature Service (WFS) query
        description: >
          Query the given data set with the OpenGIS® Web Feature Service interface
          standard
        operationId: HeadWFS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WFS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeatures
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/openapi:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesOpenAPI
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/conformance:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesConformance
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/functions:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesFunctions
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/collections:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesCollections
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesCollection
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/queryables:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesCollectionQueryables
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/items:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesCollectionItems
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/features/v1/collections/{collectionId}/items/{featureId}:
      get:
        security: []
        tags:
          - OGCAPI
        summary: OGC-API-Features query
        description: |
          Query the given data set with the OGC-API Featuresinterface standard
        operationId: GetOGCAPIFeaturesCollectionFeature
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
          - in: path
            name: featureId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via OGC API -
              Features.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTileslanding
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/conformance:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesConformance
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/collections:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesCollections
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesCollectionById
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/queryables:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesQueryablesForCollection
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/tiles/{tileMatrixSetId}:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesTileMatrixSetIdForCollection
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
          - in: path
            name: tileMatrixSetId
            required: true
            schema:
              type: string
            allowReserved: true
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/collections/{collectionId}/map/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesTileMatrixSetIdForCollectionByRowAndCol
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: collectionId
            required: true
            schema:
              type: string
          - in: path
            name: tileMatrixSetId
            required: true
            schema:
              type: string
            allowReserved: true
          - in: path
            name: tileMatrix
            required: true
            schema:
              type: string
            allowReserved: true
          - in: path
            name: tileRow
            required: true
            schema:
              type: integer
          - in: path
            name: tileCol
            required: true
            schema:
              type: integer
          - in: query
            name: f
            required: true
            schema:
              type: string
            allowReserved: true
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/tileMatrixSets:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesTileMatrixSets
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/ogc/tiles/v1/tileMatrixSets/{tileMatrixSetId}:
      get:
        security: []
        tags:
          - OGC API Tiles
        summary: OGC API Tiles query
        description: |
          Query the given data set with OGC API Tiles standard
        operationId: GetOGCApiTilesTileMatrixSetsById
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: tileMatrixSetId
            required: true
            schema:
              type: string
            allowReserved: true
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set has an accessible OGC API
              Tiles service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wmts/rest/{layerName}/{style}/tilejson/{imageFormat}:
      get:
        security: []
        tags:
          - WMTS REST
        summary: WMTS Service query
        description: |
          Query the given data set with theWMTS standard
        operationId: GetWMTSTilejson
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: layerName
            required: true
            schema:
              type: string
          - in: path
            name: style
            required: true
            schema:
              type: string
          - in: path
            name: imageFormat
            required: true
            schema:
              type: string
          - in: query
            name: format
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set has accessible WMTS service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wmts/rest/{layerName}/{style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}:
      get:
        security: []
        tags:
          - WMTS REST
        summary: WMTS Service query
        description: |
          Query the given data set with theWMTS standard
        operationId: GetWMTSTileMatrix
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: layerName
            required: true
            schema:
              type: string
          - in: path
            name: style
            required: true
            schema:
              type: string
          - in: path
            name: TileMatrixSet
            required: true
            schema:
              type: string
          - in: path
            name: TileMatrix
            required: true
            schema:
              type: string
          - in: path
            name: TileRow
            required: true
            schema:
              type: integer
              minimum: 0
          - in: path
            name: TileCol
            required: true
            schema:
              type: integer
              minimum: 0
          - in: query
            name: format
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set has accessible WMTS service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wmts/rest/{layerName}/{style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}/{J}/{I}:
      get:
        security: []
        tags:
          - WMTS REST
        summary: WMTS Service query
        description: |
          Query the given data set with theWMTS standard
        operationId: GetWMTSTileMatrixPixel
        x-allow-unknown-query-parameters: false
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: layerName
            required: true
            schema:
              type: string
          - in: path
            name: style
            required: true
            schema:
              type: string
          - in: path
            name: TileMatrixSet
            required: true
            schema:
              type: string
          - in: path
            name: TileMatrix
            required: true
            schema:
              type: string
          - in: path
            name: TileRow
            required: true
            schema:
              type: integer
              minimum: 0
          - in: path
            name: TileCol
            required: true
            schema:
              type: integer
              minimum: 0
          - in: path
            name: J
            required: true
            schema:
              type: integer
          - in: path
            name: I
            required: true
            schema:
              type: integer
          - in: query
            name: format
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set has accessible WMTS service.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /datasets/{datasetId}/wcs:
      get:
        security: []
        tags:
          - WCS
        summary: Web Coverage Service (WCS) query
        description: >
          Query the given data set with the OpenGIS® Web Coverage Serice interface
          standard
        operationId: GetLayerWCS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WCS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
      head:
        security: []
        tags:
          - WCS
        summary: Web Coverage Service (WMS) query
        description: >
          Query the given data set with the OpenGIS® Web Coverage Service
          interface standard
        operationId: HeadWCS
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: Access Error. Verify that this data set is accessible via WCS.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /rest/services/{datasetId}/{paramOne}:
      get:
        security: []
        tags:
          - ESRI
        summary: ESRI REST Service query
        description: |
          Query the given dataset using ESRI Rest Services
        operationId: GetESRIRest1Param
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: paramOne
            description: Additional path element
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via REST
              endpoint.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /rest/services/{datasetId}/{paramOne}/{paramTwo}:
      get:
        security: []
        tags:
          - ESRI
        summary: ESRI REST Service query
        description: |
          Query the given dataset using ESRI Rest Services
        operationId: GetESRIRest2Params
        x-allow-unknown-query-parameters: true
        parameters:
          - in: path
            name: datasetId
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - in: path
            name: paramOne
            description: Additional path element
            required: true
            schema:
              type: string
          - in: path
            name: paramTwo
            description: Additional path element
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              text/plain:
                schema:
                  type: string
          '400':
            description: Bad Request. Verify that this data set has a geospatial layer.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '403':
            description: >-
              Access Error. Verify that this data set is accessible via REST
              endpoint.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
          '404':
            description: Not Found Error.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RestError'
    /categories:
      get:
        operationId: ListCategories
        description: List all the valid categories of datasets.
        summary: List all the valid categories of datasets.
        security: []
        responses:
          '200':
            description: List of categories
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Categories'
    /tags:
      get:
        operationId: ListTags
        description: List all the valid tags that can be set on a data set.
        summary: List all the valid tags that can be set on a data set.
        security: []
        responses:
          '200':
            description: List of tags the user can use
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    tags:
                      $ref: '#/components/schemas/TagsOrConcepts'
    /linked-data/concepts:
      get:
        operationId: List All Concepts Available in Agrimetrics Ontology Graph
        description: List All Concepts Available in Agrimetrics Ontology Graph.
        summary: List all concepts in linked data graph.
        security: []
        responses:
          '200':
            description: List of all concepts
    /data-sets:
      get:
        operationId: ListDataSets
        description: List all data sets.
        summary: List all data sets.
        security: []
        parameters:
          - in: query
            name: ids
            schema:
              type: array
              items:
                type: string
                example: 52178729-7b5a-4e34-8989-3d2fc8e7a371
            description: List of data set ids
            style: form
            explode: true
          - in: query
            name: creator
            schema:
              type: array
              items:
                type: string
                example: Agrimetrics
            description: The creator of the data set.
            allowReserved: true
            style: form
            explode: true
          - in: query
            name: keywords
            deprecated: true
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TagValue'
            description: >-
              Tags describing the data set. keywords is deprecated - use tags
              instead
            style: form
            allowReserved: true
            explode: true
          - in: query
            name: tags
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TagValue'
            description: Tags describing the data set.
            style: form
            allowReserved: true
            explode: true
          - in: query
            name: tagRelationship
            deprecated: true
            description: >-
              Note - This feature will no longer be available as we are in the
              process of moving to a different backend and will soon be removed.
              If provided, include data sets that have been tagged with concepts
              that are related to the values provided in the `tags` parameter. If
              not provided, only include data sets tagged with exact matches.
            schema:
              $ref: '#/components/schemas/Relationship'
          - in: query
            name: category
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoryValue'
            description: Indicates the type of data
            style: form
            explode: true
          - in: query
            name: spatialCoverage
            allowReserved: true
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SpatialCoverage'
            description: The region the data is applicable to.
            style: form
            explode: true
          - in: query
            name: text
            deprecated: true
            schema:
              type: string
              example: Weather
            description: >-
              Note - Use extendedText. This field has been deprecated. Free text
              search for data sets.
            allowReserved: true
          - in: query
            name: extendedText
            schema:
              type: string
              example: Soil
            description: >-
              Free text search for data sets matching title; summary; description;
              tags; concepts; and source.
            allowReserved: true
          - in: query
            name: identities
            schema:
              type: array
              items:
                type: string
                example: PUBLIC
            description: >-
              Only show datasets accessible by these identities. Can be 'PUBLIC',
              a user ID or an organisation ID.
            style: form
            explode: true
          - in: query
            name: onlyFeatured
            schema:
              type: boolean
            description: Defines whether to return only featured data sets
          - in: query
            name: showEditable
            schema:
              type: boolean
            description: Defines whether my editable data sets should be shown.
          - in: query
            name: showHidden
            schema:
              type: boolean
            description: Defines whether hidden data sets should be shown.
          - in: query
            name: pageNum
            schema:
              type: integer
              minimum: 1
            description: >-
              Set the page number. Should not be specified in conjunction with
              offset or limit.
          - in: query
            name: pageSize
            schema:
              type: integer
              minimum: 1
            description: >-
              Set the page size. Should not be specified in conjunction with
              offset or limit.
          - in: query
            name: offset
            schema:
              type: integer
              minimum: 0
            description: >-
              Set the pagination offset. Should not be specified in conjunction
              with pageNum or pageSize.
          - in: query
            name: searchType
            schema:
              type: string
              enum:
                - title
                - all
            description: >-
              Choose whether to search across all metadata on a data set, or just
              the title.
          - in: query
            name: limit
            schema:
              type: integer
              minimum: 1
            description: >-
              Set the pagination limit. Should not be specified in conjunction
              with pageNum or pageSize.
          - in: query
            name: legacyConcepts
            deprecated: true
            schema:
              type: boolean
            description: >-
              Note - This feature will no longer be available once we move to a
              different backend. "Format response to convert any new concepts to
              legacy concepts"
          - in: query
            name: sort
            schema:
              type: string
              enum:
                - title
                - title-descending
                - relevance
            description: Criterion by which to order the results
          - in: query
            name: exchange
            schema:
              $ref: '#/components/schemas/Exchange'
            description: The private data exchange for which to retrieve records
          - in: query
            name: metadataStandardName
            allowReserved: true
            schema:
              type: array
              items:
                type: string
                example: Environment Agency Metadata Profile
          - in: query
            name: draftStatus
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DraftStatus'
          - in: query
            name: publishedStatus
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/PublishedStatus'
                  - type: string
                    enum:
                      - unpublished
          - in: query
            name: licence
            allowReserved: true
            schema:
              type: array
              items:
                type: string
                example: Open Government Licence
        responses:
          '200':
            description: List all data sets.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSets'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  type: string
                  format: binary
      post:
        operationId: PostDataSet
        summary: Create a single data set catalog entry.
        description: Creates a single catalog entry.
        security: []
        requestBody:
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DataSet'
                  - $ref: '#/components/schemas/CreateFromTemplatePayload'
          description: The data set to create.
        responses:
          '201':
            description: Creates a single catalog entry for a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EntryUpdateResponse'
    /data-sets/{dataSetId}:
      get:
        operationId: GetDataSet
        summary: Get a single data set catalog entry.
        description: Get a single data set catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Returns a single catalog entry from catalog.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSet'
              application/xml:
                schema:
                  type: object
      put:
        operationId: PutDataSet
        summary: Update a single data set catalog entry.
        description: Updates a single catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
          description: The updated data set information.
          required: true
        responses:
          '200':
            description: Updates a single catalog entry for a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSet'
      patch:
        operationId: PatchDataSet
        summary: Update a single data set catalog entry.
        description: Updates a single catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetPatch'
          description: The updated data set information.
          required: true
        responses:
          '200':
            description: Updates a single catalog entry for a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSet'
      delete:
        operationId: DeleteDataSet
        summary: Delete a Data Set
        description: Delete a single Data Set
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Response if deleted properly
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                    id:
                      type: string
    /data-sets/{dataSetId}/draft:
      get:
        operationId: GetDraftDataSet
        summary: Get the draft changes on a data set catalog entry.
        description: Get the draft changes on a data set catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Returns the draft changes on a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSet'
      delete:
        operationId: DeleteDraftDataSet
        summary: Discards the draft changes on a data set catalog entry.
        description: Discards the draft changes on a data set catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Draft changes were discarded.
    /data-sets/{dataSetId}/draft-status:
      put:
        operationId: PutDataSetDraftStatus
        summary: Set the draft status for the data set catalog entry.
        description: Set the draft status for the data set catalog entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    oneOf:
                      - $ref: '#/components/schemas/DraftStatus'
                      - type: string
                        enum:
                          - null
                        nullable: true
                  notes:
                    description: Any notes added during review of the data set
                    type: string
        responses:
          '200':
            description: Updates a single catalog entry for a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EntryUpdateResponse'
    /data-sets/{dataSetId}/fileDataset:
      get:
        operationId: Get file dataset Id
        summary: Get file dataset id from dataset
        description: Get file dataset id from dataset
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Returns the file management Id for this dataset
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    fileDatasetId:
                      type: string
      post:
        operationId: Create and attach file dataset
        summary: Create and attach file dataset
        description: >
          Create and attach file dataset. If the file dataset already exists, this
          will not do anything. Note this should usually be automatically created
          when creating a catalogue entry.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: Returns the file management Id for this dataset
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    fileDatasetId:
                      type: string
    /data-sets/{dataSetId}/access:
      get:
        operationId: GetDataSetAccess
        summary: Get the entitlements on a data set.
        description: Gets the entitlements on a data set.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: The access set on the data set
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    entitlements:
                      type: array
                      items:
                        $ref: '#/components/schemas/IdentityEntitlements'
      patch:
        operationId: PatchDataSetAccess
        summary: Set the entitlements and on a data set for all identities.
        description: Set the entitlements and on a data set for all identities.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - entitlements
                properties:
                  entitlements:
                    $ref: '#/components/schemas/BatchIdentityInputEntitlements'
          description: The access to update.
        responses:
          '200':
            description: The access set on the data set
            content:
              application/json:
                schema:
                  properties:
                    entitlements:
                      type: array
                      items:
                        $ref: '#/components/schemas/IdentityEntitlements'
                    errors:
                      type: array
                      description: >-
                        The list of errors encountered, if any, when trying to
                        update the entity entitlements.
                      items:
                        type: object
                        properties:
                          identity:
                            $ref: '#/components/schemas/IdentityInput'
                          message:
                            type: string
                            description: The error message
    /data-sets/{dataSetId}/validationReport:
      get:
        operationId: GetDataSetValidationReport
        summary: >-
          Get the schematron validation report using the data sets validation
          profile
        description: >-
          Get the schematron validation report using the data sets validation
          profile. Throws an error if there is no validation profile
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: The image for the data set.
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties: false
                  required:
                    - valid
                    - errorMessages
                  properties:
                    valid:
                      type: boolean
                    errorMessages:
                      type: array
                      items:
                        type: string
    /data-sets/{dataSetId}/draft/validationReport:
      get:
        operationId: GetDraftDataSetValidationReport
        summary: >-
          Get the schematron validation report using the data sets validation
          profile
        description: >-
          Get the schematron validation report using the data sets validation
          profile. Throws an error if there is no validation profile
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: The image for the data set.
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties: false
                  required:
                    - valid
                    - errorMessages
                  properties:
                    valid:
                      type: boolean
                    errorMessages:
                      type: array
                      items:
                        type: string
    /images/{imageType}/{imageId}:
      get:
        operationId: GetImage
        summary: Get an image used in the catalogue.
        description: >-
          Get an image referenced on a data set. This will always return the raw
          image data.
        security: []
        parameters:
          - name: imageType
            in: path
            required: true
            schema:
              type: string
              enum:
                - custom
                - unsplash
          - name: imageId
            in: path
            required: true
            schema:
              type: string
          - name: thumbnail
            in: query
            required: false
            schema:
              type: string
              enum:
                - 'true'
                - 'false'
              default: 'false'
            description: >-
              Whether to provide a thumbnail image. If set to true and no
              thumbnail exists, the full image will be returned
        responses:
          '200':
            description: The image for the data set.
    /data-sets/{dataSetId}/image:
      put:
        operationId: SetDataSetImage
        summary: Set the image for a data set.
        description: >-
          Set the image for a data set. Can either be an image upload a plain text
          string representing the unsplash image id.
        security: []
        parameters:
          - name: dataSetId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
        responses:
          '200':
            description: The imageUrl for the data set.
    /access-requests:
      get:
        operationId: GetAccessRequests
        security: []
        parameters:
          - name: dataSetId
            in: query
            schema:
              $ref: '#/components/schemas/DatasetId'
          - name: requestingEntityId
            in: query
            schema:
              type: string
          - name: entityId
            in: query
            schema:
              type: array
              items:
                type: string
            style: form
            explode: true
        responses:
          '200':
            description: The outstanding access requests for the data set.
          '400':
            description: This request is not supported
            content:
              application/xml:
                schema:
                  type: object
      post:
        operationId: CreateAccessRequest
        security: []
        requestBody:
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - dataSetId
                  - requestingEntityId
                  - requestMessage
                properties:
                  dataSetId:
                    $ref: '#/components/schemas/DatasetId'
                  requestingEntityId:
                    type: string
                    description: ID for the entity which is requesting access.
                  requesterName:
                    type: string
                    description: Name of the user who requested access.
                  requesterEmail:
                    type: string
                    description: Contact email address for the user who requested access.
                  requestMessage:
                    type: string
                    description: >-
                      Free text message provided by the user when requesting
                      access.
        responses:
          '200':
            description: The outstanding access requests for the data set.
          '400':
            description: This request is not supported
            content:
              application/xml: {}
    /access-requests/{requestId}:
      delete:
        operationId: DeleteAccessRequest
        security: []
        parameters:
          - name: requestId
            in: path
            required: true
            schema:
              type: string
          - name: dataSetId
            in: query
            required: true
            schema:
              $ref: '#/components/schemas/DatasetId'
          - name: accepted
            in: query
            required: false
            schema:
              type: boolean
        responses:
          '200':
            description: Dismiss access requests for the data set.
    /import:
      post:
        operationId: PostDataSetsImport
        requestBody:
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        responses:
          '200':
            description: Import was successful.
    /templates:
      get:
        operationId: ListTemplate
        summary: List all templates you have permission to view.
        description: List all templates you have permission to view.
        responses:
          '200':
            description: The template result set.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    templates:
                      type: array
                      items:
                        $ref: '#/components/schemas/DataSetTemplateEntity'
                  required:
                    - templates
      post:
        operationId: PostTemplate
        summary: Create a new template for creating catalogue entries.
        description: >-
          Creates a single template that can be used to create similar catalogue
          entries.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplateMetadata'
          description: The data set to create.
        responses:
          '201':
            description: Creates a single catalog entry for a template.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EntryUpdateResponse'
    /templates/{templateId}:
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/TemplateId'
      get:
        operationId: GetTemplateById
        summary: Get a specific template
        security: []
        responses:
          '200':
            description: Get template
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSetTemplateEntity'
      delete:
        operationId: DeleteTemplateById
        summary: Delete a specific template
        security: []
        responses:
          '200':
            description: Creates a single catalog entry for a data set.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EntryUpdateResponse'
      put:
        operationId: PutTemplate
        summary: Update a template
        security: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplateMetadata'
        responses:
          '200':
            description: Updates a Template entry
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSetTemplateEntity'
      patch:
        operationId: PatchTemplate
        summary: Update a template
        security: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSetTemplatePatchMetadata'
        responses:
          '200':
            description: Updates a Template entry
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DataSetTemplateEntity'
    /harvest/{group}/csw:
      parameters:
        - name: group
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/GroupCode'
        - name: service
          in: query
          schema:
            type: string
            description: Name of the service being called
            enum:
              - CSW
        - name: request
          in: query
          schema:
            type: string
            description: Name of the operation being called
            enum:
              - GetRecords
              - GetRecordById
              - GetCapabilities
        - name: version
          in: query
          schema:
            type: string
            description: Version of the operation being called
        - name: startPosition
          in: query
          schema:
            type: number
            description: which record position the catalog should start generating output
            default: 1
            minimum: 1
        - name: maxRecords
          in: query
          schema:
            type: number
            description: >-
              the maximum number of records that should be returned from the
              result set of a query
            default: 10
            minimum: 1
        - name: id
          in: query
          explode: true
          schema:
            type: array
            items:
              type: string
              format: uuid
            description: >-
              A list of record identifiers for the records that a CSW shall return
              to the client
        - name: outputSchema
          in: query
          explode: true
          schema:
            type: string
            enum:
              - http://www.isotc211.org/2005/gmd
            description: >-
              This parameter does not affect the response, it only exists to
              satisfy CSW format
        - name: elementsetname
          in: query
          explode: true
          schema:
            type: string
            enum:
              - full
              - brief
              - summary
            description: >-
              This parameter does not affect the response, it only exists to
              satisfy CSW format
        - name: outputFormat
          in: query
          explode: true
          schema:
            type: string
            enum:
              - application/xml
            description: >-
              This parameter does not affect the response, it only exists to
              satisfy CSW format
        - name: typeNames
          in: query
          explode: true
          schema:
            type: string
            enum:
              - gmd:MD_Metadata
              - csw:Record
            description: >-
              This parameter does not affect the response, it only exists to
              satisfy CSW format
        - name: resultType
          in: query
          explode: true
          schema:
            type: string
            description: >-
              This parameter does not affect the response, it only exists to
              satisfy CSW format
      get:
        operationId: GetHarvestByGroup
        summary: Harvest xml data on the given group
        security: []
        responses:
          '200':
            description: Get harvest data
            content:
              application/xml:
                schema:
                  type: object
      post:
        operationId: GetHarvestByGroupPost
        summary: Harvest xml data on the given group
        security: []
        responses:
          '200':
            description: Get harvest data
            content:
              application/xml:
                schema:
                  type: string
          '400':
            description: Bad request
            content:
              application/xml:
                schema:
                  type: string
    /harvest/{group}/dcat:
      parameters:
        - name: group
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/GroupCode'
      get:
        operationId: GetDCATMetadataByGroup
        summary: >-
          Get the DCAT metadata for the given group. This will retrieve metadata
          for all the non spatial datasets in the public domain.
        security: []
        responses:
          '200':
            description: Get Metadata as DCAT
            content:
              text/turtle:
                schema:
                  type: object
  x-readme:
    headers: []
    explorer-enabled: true
    proxy-enabled: true
  x-readme-fauxas: true
  _id: 64d9ee2bbd209a0ba3d7eeb6
  tags: []
konfigCliVersion: 1.38.61
