publishJson:
  company: Wink
  serviceName: false
  sdkName: wink-{language}-sdk
  clientName: Wink
  metaDescription: >-
    Wink helps hotels improve their products and sell them through innovative
    new sales channels that lets travelers book much more than just the room. We
    manage the content, distribution, engagement, conversion and payment. We let
    hotels and affiliates focus on sales while we do the rest.
  apiStatusUrls: inherit
  homepage: wink.travel/
  developerDocumentation: docs.wink.travel/affiliate
  categories:
    - travel_expenses
    - hotel
    - content_management
    - engagement
    - travel_agent_portal
rawSpecString: |
  openapi: 3.0.1
  info:
    title: Wink API
    description: >-
      ## APIs

      Not every integrator needs every APIs. For that reason, we have separated
      APIs into context.


      - [Affiliate](https://api.wink.travel): All APIs related to selling travel
      inventory as an affiliate.

      - [Analytics](https://api.wink.travel): All APIs related to tracking metrics
      across a wide variety of data source segments including, more entertaining,
      leaderboard metrics.

      - [Booking](https://api.wink.travel): All APIs related to creating platform
      bookings.

      - [Channel Manager](https://api.wink.travel): All APIs related to channel
      managers who want to integrate with our platform.

      - [Extranet](https://api.wink.travel): All APIs related to managing travel
      inventory and suppliers.

      - [Inventory](https://api.wink.travel): All APIs related to retrieve known
      travel inventory as it was found using the Lookup API..

      - [Lookup](https://api.wink.travel): All APIs related to locating inventory
      by region, locale and property flags.

      - [Reference](https://api.wink.travel): All APIs related to retrieving
      platform-supported taxonomies.

      - [TripPay](https://api.wink.travel): All APIs related to TripPay account
      management, booking, mapping and integration features.


      ## SDKs

      We are actively working on supporting the most used languages out there. If
      you don't see your language here, reach out to us with a request to
      officially add your language. In the meantime, if you want to roll your own
      SDK, you can do so by downloading the OpenAPI spec and using one of the many
      available OpenAPI generators available:
      [https://openapi-generator.tech/docs/generators](https://openapi-generator.tech/docs/generators).


      - Java SDK
      [https://github.com/wink-travel/wink-sdk-java](https://github.com/wink-travel/wink-sdk-java)


      ## Usage

      These features are made available to you via a [REST
      API](https://en.wikipedia.org/wiki/Representational_state_transfer). This
      API is language agnostic.


      ## Versioning

      We chose to version our endpoints in a way that we hope affects your
      integration with us the least. You request the version of our API you wish
      to work with via the `Wink-Version` header. When it's time for you to
      upgrade, you only have to change the version number to get access to our
      updated endpoints.


      ## Release history

      - 2022-10-15: v2.0 - Removed HATEOAS and added Wink-Version header

      - 2022-05-08: v1 - Exposed channel manager API

      - 2021-07-01: v1 - Initial release


      # Affiliate API

      Welcome to the Affiliate API - A programmer-friendly way to search for and
      display bespoke travel inventory for your audience. Use this API to help you
      prepare travel inventory for sale.


      # Intended Audience

      Programmers are a requirement to start integrating with wink. You will
      benefit from an API integration if you are new or existing travel related
      company that want easy access to great inventory.## Examples:

      - Hotel brands / chains that want to make their own booking engine

      - Travel tech companies that want to create the next hot mobile travel app

      - Destination sites that want to make their own booking engine

      - Bloggers and influencers who want to sell travel inventory to their
      audience

      - OTAs that want access direct relationships with suppliers and better
      quality hotel inventory
    contact:
      name: Bjorn Harvold
      email: bjorn@wink.travel
    version: 29.54.1
    x-logo:
      backgroundColor: '#FFFFFF'
      altText: wink
      url: >-
        https://res.cloudinary.com/traveliko/image/upload/c_scale,h_129/v1653285543/wink/logo_text_white.svg
  externalDocs:
    description: Affiliate Documentation
    url: https://bearchoke.atlassian.net/l/c/a1buVvfr
  servers:
    - url: https://api.wink.travel
      description: Production endpoint
    - url: https://staging-api.wink.travel
      description: Sandbox endpoint
    - url: https://dev-api.wink.travel
      description: Developer endpoint
  tags:
    - name: Sales channel
      description: Displays relationships between affiliates and suppliers.
    - name: Test
      description: Simple GET request to show that your configuration works.
    - name: Search Categories
      description: Suppliers and inventory by category.
    - name: Supplier
      description: Allows suppliers to browse for suppliers to connect with
    - name: Hotel Relationship Requests
      description: >-
        Account relationships are initiated by either affiliate or company and
        allows for companys to give sales channel specific pricing to affiliates
        on an individual basis.
    - name: Syndication Entry Publisher
      description: Manage curated list entries and categories for your various Wink accounts.
    - name: Affiliate Lead
      description: >-
        Affiliates can connect with suppliers that are not yet in the system by
        creating leads. We will reach out to those suppliers and ask them to join
        and make it easy for them by pre-creating their profile.
    - name: Application
      description: >-
        Use the Application API to create applications to interface with the
        TripPay API.
    - name: Customization
      description: >-
        Manage configuration templates you can assign to our Web Components such
        as look-and-feel, integrations with 3rd parties and more.
    - name: Inventory Grids
      description: >-
        Grids are made up of 3 categories of lists: 


        - Cured lists

        - Saved searches

        - Ranked lists


        The way to display these lists through our Web Components is by creating
        and configuring lists.
    - name: Invoice
      description: Retrieve past and upcoming invoices for company.
    - name: Notification
      description: Notifications API
    - name: Maps
      description: >-
        Configure and manage maps, map data and overlays that you wish to display
        to your users.
    - name: Shareable Links
      description: >-
        Links are the simplest form of travel inventory and can be shared
        everywhere and contains OpenGraph metadata. The same links can also be
        used with our ad banner Web Component.
    - name: Campaign
      description: Campaign API
    - name: Supplier Links
      description: >-
        Supplier links are a direct link to supplier homepage that also includes
        OpenGraph friendly metadata.
    - name: Bookings
      description: Track bookings for a company.
    - name: Discover
      description: >-
        Before you can sell travel inventory, you need to find it. Discover travel
        inventory that fits your niche and your audience.
    - name: Inventory Cards
      description: >-
        Card inventory is a single travel inventory record a seller has configured
        and made available for sale.
    - name: Company
      description: Manage companies.
  paths:
    /api/company/{companyIdentifier}/supplier-url/{supplierUrlIdentifier}:
      get:
        tags:
          - Supplier Links
        summary: Show Link
        description: Retrieve a specific shareable url for this seller
        operationId: showSupplierUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Show link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: supplierUrlIdentifier
            in: path
            description: Show link with this identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SupplierUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Supplier Links
        summary: Update link
        description: Modify a shareable link
        operationId: updateSupplierUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Update link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: supplierUrlIdentifier
            in: path
            description: Update url with this identifier.
            required: true
            schema:
              type: string
            example: seller-url-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSupplierUrlRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SupplierUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Supplier Links
        summary: Delete Link
        description: Delete a shareable link
        operationId: removeSupplierUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: supplierUrlIdentifier
            in: path
            description: Remove url with this identifier.
            required: true
            schema:
              type: string
            example: seller-url-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list/{listIdentifier}:
      put:
        tags:
          - Inventory Grids
        summary: Update Curated List
        description: Update curated list by its unique identifier
        operationId: updateCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Update curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticSellerList_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Inventory Grids
        summary: Remove Curated List
        description: Remove curated list by list identifier
        operationId: removeCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list/{listIdentifier}/item/{itemIdentifier}:
      put:
        tags:
          - Inventory Grids
        summary: Move List Item
        description: Move an existing list item from one list to another.
        operationId: moveInventoryToCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Move inventory to curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: itemIdentifier
            in: path
            description: Item identifier.
            required: true
            schema:
              type: string
            example: item-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CopyMoveStaticSellerListItemRequest_Affiliate
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      post:
        tags:
          - Inventory Grids
        summary: Copy Item to List
        description: Copy an existing list item from one list to another.
        operationId: copyInventoryToCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Copy inventory to curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: itemIdentifier
            in: path
            description: Item identifier.
            required: true
            schema:
              type: string
            example: item-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CopyMoveStaticSellerListItemRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Inventory Grids
        summary: Delete List Item
        description: Delete a list item from a curated list by its unique identifier
        operationId: removeInventoryFromCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove inventory from curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: itemIdentifier
            in: path
            description: Item identifier.
            required: true
            schema:
              type: string
            example: item-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/seller-url/{sellerUrlIdentifier}:
      get:
        tags:
          - Shareable Links
        summary: Show Link
        description: Retrieve a specific shareable url for this seller
        operationId: showSellerUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Show link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: sellerUrlIdentifier
            in: path
            description: Show link with this identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Shareable Links
        summary: Update link
        description: Modify a shareable link
        operationId: updateSellerUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Update link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: sellerUrlIdentifier
            in: path
            description: Update url with this identifier.
            required: true
            schema:
              type: string
            example: seller-url-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerUrlRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Shareable Links
        summary: Delete Link
        description: Delete a shareable link
        operationId: removeSellerUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: sellerUrlIdentifier
            in: path
            description: Remove url with this identifier.
            required: true
            schema:
              type: string
            example: seller-url-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map/{mapIdentifier}:
      get:
        tags:
          - Maps
        summary: Show Map
        description: Retrieve a specific map record
        operationId: showAdvancedMapConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Show map record owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: mapIdentifier
            in: path
            description: Show map record with this identifier.
            required: true
            schema:
              type: string
            example: map-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Maps
        summary: Update Map
        description: Update an advanced map configuration
        operationId: updateAdvancedMapConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Update map owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: mapIdentifier
            in: path
            description: update map record with this identifier.
            required: true
            schema:
              type: string
            example: map-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertAdvancedMapConfigurationRequest_Affiliate
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Maps
        summary: Delete Map
        description: Remove an advanced map configuration
        operationId: removeAdvancedMapConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove map owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: mapIdentifier
            in: path
            description: Remove map record with this identifier.
            required: true
            schema:
              type: string
            example: map-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/ranked/list/{listIdentifier}:
      get:
        tags:
          - Inventory Grids
        summary: Show Ranked Grid
        description: Retrieve a specific ranked grid.
        operationId: showSellerInventoryRankedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Retrieve grid for owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Retrieve grid with this identifier.
            required: true
            schema:
              type: string
            example: ranked-grid-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Inventory Grids
        summary: Update Ranked Grid
        description: Update existing ranked grid
        operationId: updateSellerInventoryRankedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Update list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Update list with this identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertSellerInventoryRankedListRequest_Affiliate
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Inventory Grids
        summary: Delete Ranked Grid
        description: Delete a ranked grid
        operationId: removeSellerInventoryRankedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove grid owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Delete grid with this identifier.
            required: true
            schema:
              type: string
            example: ranked-grid-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/list/{listIdentifier}:
      get:
        tags:
          - Inventory Grids
        summary: Show Grid
        description: Retrieve a specific curated / saved search list.
        operationId: showSellerInventoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: Show seller inventory lists owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Retrieve list with this identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Inventory Grids
        summary: Update Grid
        description: Update an existing curated / saved search list.
        operationId: updateSellerInventoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: Update list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Update list with this identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerInventoryListRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Inventory Grids
        summary: Delete Grid
        description: Remove a curated / saved search list
        operationId: removeSellerInventoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: Update list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Delete curated list with this identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item/{inventoryIdentifier}:
      get:
        tags:
          - Inventory Cards
        summary: Show Card
        description: Retrieve a single inventory card.
        operationId: showSellerInventoryItem
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to retrieve item for
            required: true
            schema:
              type: string
          - name: inventoryIdentifier
            in: path
            description: Retrieve inventory with this identifier.
            required: true
            schema:
              type: string
            example: card-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Inventory Cards
        summary: Update Card
        description: Update an existing card
        operationId: updateSellerInventoryItem
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to update item for
            required: true
            schema:
              type: string
          - name: inventoryIdentifier
            in: path
            description: Update inventory with this identifier.
            required: true
            schema:
              type: string
            example: card-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerInventoryItemRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Inventory Cards
        summary: Delete Card
        description: Remove a unique inventory item
        operationId: removeSellerInventoryItem
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to delete item from
            required: true
            schema:
              type: string
          - name: inventoryIdentifier
            in: path
            description: Delete inventory with this identifier.
            required: true
            schema:
              type: string
            example: card-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/configuration/{engineConfigurationIdentifier}:
      get:
        tags:
          - Customization
        summary: Show Customization
        description: Retrieve the primary customization for an application.
        operationId: showApplicationConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Show customization for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: engineConfigurationIdentifier
            in: path
            description: Load customization with this identifier
            required: true
            schema:
              type: string
            example: customization-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Customization
        summary: Update Customization
        description: Update an existing customization.
        operationId: updateCustomization
        parameters:
          - name: companyIdentifier
            in: path
            description: Update customization for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: engineConfigurationIdentifier
            in: path
            description: Update customization with this application
            required: true
            schema:
              type: string
            example: customization-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertEngineConfigurationRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Customization
        summary: Remove Customization
        description: Remove an existing customization.
        operationId: removeApplicationConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove customization for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: engineConfigurationIdentifier
            in: path
            description: Remove customization with this identifier
            required: true
            schema:
              type: string
            example: customization-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/settings:
      get:
        tags:
          - Syndication Entry Publisher
        summary: Show WinkLinks settings
        description: Load WinkLinks settings.
        operationId: showSyndicationSettings
        parameters:
          - name: companyIdentifier
            in: path
            description: List syndication entries owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationSettings_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Syndication Entry Publisher
        summary: Upsert syndication settings
        description: Upsert a new syndication settings.
        operationId: upsertSyndicationSettings
        parameters:
          - name: companyIdentifier
            in: path
            description: Update settings for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationSettings_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationSettings_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/entry/{syndicationEntryIdentifier}:
      get:
        tags:
          - Syndication Entry Publisher
        summary: Show WinkLinks entry
        description: Retrieve syndication entry.
        operationId: showSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Syndication entry owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationEntryIdentifier
            in: path
            description: Syndication entry identifier.
            required: true
            schema:
              type: string
            example: syndication-entry-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationEntry_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Syndication Entry Publisher
        summary: Update syndication entry
        description: Updates an existing syndication entry.
        operationId: updateSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Create entry for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationEntryIdentifier
            in: path
            description: Syndication entry identifier.
            required: true
            schema:
              type: string
            example: syndication-entry-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationEntry_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Syndication Entry Publisher
        summary: Delete WinkLinks entry
        description: Deletes a syndication entry.
        operationId: removeSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Syndication entry owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationEntryIdentifier
            in: path
            description: Syndication entry identifier.
            required: true
            schema:
              type: string
            example: syndication-entry-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/category/{syndicationCategoryIdentifier}:
      get:
        tags:
          - Syndication Entry Publisher
        summary: Show WinkLinks category
        description: Retrieve syndication category.
        operationId: showSyndicationCategory
        parameters:
          - name: companyIdentifier
            in: path
            description: Syndication category owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationCategoryIdentifier
            in: path
            description: Syndication category identifier.
            required: true
            schema:
              type: string
            example: syndication-category-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationCategory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      put:
        tags:
          - Syndication Entry Publisher
        summary: Update syndication category
        description: Updates an existing syndication category.
        operationId: updateSyndicationCategory
        parameters:
          - name: companyIdentifier
            in: path
            description: Create category for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationCategoryIdentifier
            in: path
            description: Syndication category identifier.
            required: true
            schema:
              type: string
            example: syndication-category-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationCategory_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationCategory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Syndication Entry Publisher
        summary: Delete WinkLinks category
        description: Deletes a syndication category.
        operationId: removeSyndicationCategory
        parameters:
          - name: companyIdentifier
            in: path
            description: Syndication category owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: syndicationCategoryIdentifier
            in: path
            description: Syndication category identifier.
            required: true
            schema:
              type: string
            example: syndication-category-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company:
      post:
        tags:
          - Company
        summary: Create company
        description: Create a new company
        operationId: createCompany
        parameters:
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/supplier-url:
      post:
        tags:
          - Supplier Links
        summary: Create Link
        description: Create a new shareable link
        operationId: createSupplierUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Create link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSupplierUrlRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SupplierUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/supplier-url/syndication/entry:
      post:
        tags:
          - Supplier Links
        summary: Create Supplier URL SyndicationCard
        description: Creates a new WinkLinks card.
        operationId: createSupplierUrlSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateSupplierUrlSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list:
      get:
        tags:
          - Inventory Grids
        summary: Show Curated Lists
        description: Retrieve lists optionally with content.
        operationId: showCuratedLists
        parameters:
          - name: companyIdentifier
            in: path
            description: Show curated lists owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: withItems
            in: query
            description: Indicate whether to include all the list items in the result
            required: false
            schema:
              type: boolean
              default: false
            example: false
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      post:
        tags:
          - Inventory Grids
        summary: Create Curated List
        description: Create a new curated list
        operationId: createCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Create curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateStaticSellerListAndAddItemRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListWrapper_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list/{listIdentifier}/item:
      post:
        tags:
          - Inventory Grids
        summary: Add Item to List
        description: Add some travel inventory to your existing curated list
        operationId: addInventoryToCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Add inventory to curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddStaticSellerListItemRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list/{listIdentifier}/item/supplier:
      post:
        tags:
          - Inventory Grids
        summary: Add Supplier to List
        description: Adds a new list item for a supplier showing the best priced room..
        operationId: addSupplierToCuratedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Add inventory to curated list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AddStaticSellerListSupplierRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/seller-url:
      post:
        tags:
          - Shareable Links
        summary: Create Link
        description: Create a new shareable link
        operationId: createSellerUrl
        parameters:
          - name: companyIdentifier
            in: path
            description: Create link owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerUrlRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/seller-url/syndication/entry:
      post:
        tags:
          - Shareable Links
        summary: Create Seller URL SyndicationCard
        description: Creates a new WinkLinks card.
        operationId: createSupplierUrlSyndicationEntry_1
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateSellerUrlSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/supplier/grid:
      post:
        tags:
          - Supplier
        summary: Show suppliers
        description: Retrieve page of suppliers.
        operationId: browseSuppliers
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageHotelOnMapView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/request:
      post:
        tags:
          - Hotel Relationship Requests
        summary: Create hotel request
        description: Create a new hotel request.
        operationId: createPropertyRequest
        parameters:
          - name: companyIdentifier
            in: path
            description: Create hotel request and associate it with this company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertSalesChannelRelationshipRequestRequest
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/channel/grid:
      post:
        tags:
          - Sales channel
        summary: Show sales channels
        description: Retrieve page of sales channels.
        operationId: browseSalesChannels
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageSalesChannelView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map:
      get:
        tags:
          - Maps
        summary: Show Maps
        description: Retrieve list of existing maps.
        operationId: showAdvancedMapConfigurations
        parameters:
          - name: companyIdentifier
            in: path
            description: List maps owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      post:
        tags:
          - Maps
        summary: Create Map
        description: Create a new advanced map configuration
        operationId: createAdvancedMapConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Create map owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertAdvancedMapConfigurationRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map/syndication/entry:
      post:
        tags:
          - Maps
        summary: Create Map Card
        description: Creates a new WinkLinks map.
        operationId: createAdvancedMapSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateAdvancedMapConfigurationSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map/supplier:
      post:
        tags:
          - Maps
        summary: Create Supplier Map
        description: >-
          Creates a new advanced map configuration with a single marker for a
          supplier showing the best priced room.
        operationId: createAdvancedMapConfigurationForSupplier
        parameters:
          - name: companyIdentifier
            in: path
            description: Create supplier map owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertSupplierAdvancedMapConfigurationRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AdvancedMapConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/lead:
      post:
        tags:
          - Affiliate Lead
        summary: Create lead
        description: >-
          Creates a new supplier lead based on information retrieved from Google
          Places
        operationId: createLead
        parameters:
          - name: companyIdentifier
            in: path
            description: Create lead by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GooglePlaceDetailRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SupplierLead_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/grid:
      post:
        tags:
          - Discover
        summary: Inventory Supplier Search
        description: >-
          Retrieves a paginated result set of suppliers of inventory based on the
          search criteria of the caller.
        operationId: showSuppliersForDynamicSellerInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: >-
              Browse inventory supplier suppliers on behalf of this owner
              identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicSellerListRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageInventorySupplier_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/ranked/list:
      post:
        tags:
          - Inventory Grids
        summary: Create Ranked Grid
        description: Create a new ranked grid
        operationId: createSellerInventoryRankedList
        parameters:
          - name: companyIdentifier
            in: path
            description: Create list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertSellerInventoryRankedListRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/ranked/list/syndication/entry:
      post:
        tags:
          - Inventory Grids
        summary: Create Ranked Grid Card
        description: Creates a new WinkLinks grid.
        operationId: createSellerInventoryRankedListSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateSellerInventoryRankedListSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/list:
      get:
        tags:
          - Discover
        summary: Latest Inventory
        description: Retrieves a list of latest available inventory.
        operationId: showLatestInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: page
            in: query
            description: Skip to page.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
            example: 0
          - name: size
            in: query
            description: Skip to page.
            required: false
            schema:
              maximum: 100
              type: integer
              format: int32
              default: 20
            example: 20
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InventoryView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      post:
        tags:
          - Inventory Grids
        summary: Create Grid
        description: Create a new curated / saved search list
        operationId: createSellerInventoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: Create list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerInventoryListRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/list/syndication/entry:
      post:
        tags:
          - Inventory Grids
        summary: Create Grid Card
        description: Creates a new WinkLinks grid.
        operationId: createSellerInventoryListSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateStaticSellerListSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item:
      post:
        tags:
          - Inventory Cards
        summary: Create Card
        description: Create a new inventory card
        operationId: createSellerInventoryItem
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSellerInventoryItemRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item/syndication/entry:
      post:
        tags:
          - Inventory Cards
        summary: Create Inventory Syndication Card
        description: Creates a new WinkLinks card.
        operationId: createSellerInventoryItemSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CreateSellerInventoryItemSyndicationEntryRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item/supplier:
      post:
        tags:
          - Inventory Cards
        summary: Create Supplier Card
        description: >-
          Creates a new inventory card for a supplier showing the best priced
          room.
        operationId: createSupplierSellerInventoryItem
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to create item for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UpsertSupplierSellerInventoryItemRequest_Affiliate
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/grid:
      post:
        tags:
          - Discover
        summary: Inventory Search
        description: >-
          Retrieves a paginated result set of inventory based on the search
          criteria of the caller.
        operationId: showDynamicSellerInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicSellerListRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageInventoryView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/configuration:
      get:
        tags:
          - Customization
        summary: Show Primary Customization
        description: Retrieve the primary customization for an application.
        operationId: showPrimaryApplicationConfiguration
        parameters:
          - name: companyIdentifier
            in: path
            description: Show customization for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      post:
        tags:
          - Customization
        summary: Create Customization
        description: >-
          Create a new customization and associate it with the specified
          application.
        operationId: createCustomization
        parameters:
          - name: companyIdentifier
            in: path
            description: Create customization for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertEngineConfigurationRequest_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/grid:
      post:
        tags:
          - Bookings
        summary: Show Bookings
        description: >-
          Show bookings for the affiliate company that helped create those
          booking.
        operationId: showBookingsForCompany
        parameters:
          - name: companyIdentifier
            in: path
            description: Show bookings for company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageBookingView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/entry:
      post:
        tags:
          - Syndication Entry Publisher
        summary: Create syndication entry
        description: Creates a new syndication entry.
        operationId: createSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Create entry for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationEntry_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/entry/consume-url:
      post:
        tags:
          - Syndication Entry Publisher
        summary: Consume external URL
        description: Utility method for reading Open Graph data from an external URL.
        operationId: consumeExternalUrlForSyndicationEntry
        parameters:
          - name: companyIdentifier
            in: path
            description: Consume URL for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Body payload filtering and sorting preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsumeExternalUrlRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpsertSyndicationEntry_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/category:
      post:
        tags:
          - Syndication Entry Publisher
        summary: Create syndication category
        description: Creates a new syndication category.
        operationId: createSyndicationCategory
        parameters:
          - name: companyIdentifier
            in: path
            description: Create category for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: Request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSyndicationCategory_Affiliate'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SyndicationCategory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/unique:
      post:
        tags:
          - Company
        summary: Verify company name
        description: Check if company name is unique
        operationId: isCompanyNameUnique
        parameters:
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UniqueResult_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/application:
      post:
        tags:
          - Application
        summary: Create Application
        description: Create a new application
        operationId: createApplication
        parameters:
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertApplicationRequest'
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateApplicationResponse'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}:
      get:
        tags:
          - Company
        summary: Show Company
        description: Retrieve company by identifier
        operationId: showCompany
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Company
        summary: Delete Company
        description: Delete a company by identifier
        operationId: removeCompany
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      patch:
        tags:
          - Company
        summary: Update Company
        description: Update an existing company
        operationId: updateCompany
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/status:
      patch:
        tags:
          - Company
        summary: Toggle Company Status
        description: Update company status
        operationId: updateCompany_1
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertCompanyStatusRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/static/list/{listIdentifier}/sort:
      patch:
        tags:
          - Inventory Grids
        summary: Re-Order List Items
        description: Re-order list items with an existing list
        operationId: sortCuratedListItems
        parameters:
          - name: companyIdentifier
            in: path
            description: Sort curated list items owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: List identifier.
            required: true
            schema:
              type: string
            example: list-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SortStaticSellerListItemsRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/message/{identifier}:
      get:
        tags:
          - Notification
        summary: Show notification
        description: Retrieve messages for a specific company by id
        operationId: showNotifications
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: identifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotificationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Notification
        summary: Delete notification
        description: Remove notification specified by its identifier.
        operationId: removeNotification
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: identifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      patch:
        tags:
          - Notification
        summary: Mark as read
        description: Mark notification as read.
        operationId: markAsRead
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: identifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotificationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/manager/invite:
      patch:
        tags:
          - Company
        summary: Invite Manager
        description: Invite user to be a manager for this company.
        operationId: inviteManager
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteManagerRequest_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/entry/list/sort:
      patch:
        tags:
          - Syndication Entry Publisher
        summary: Sort entire list
        description: Re-sorts all list entries.
        operationId: sortSyndicationEntryList
        parameters:
          - name: companyIdentifier
            in: path
            description: Consume URL for this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          description: List if ids and their new sort slot
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sorted_Affiliate'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/application/{id}:
      get:
        tags:
          - Application
        summary: Show Application
        description: Show a specific application
        operationId: loadApplication
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Application'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      delete:
        tags:
          - Application
        summary: Delete Application
        description: Remove a specific application
        operationId: deleteApplication
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
      patch:
        tags:
          - Application
        summary: Update Application
        description: Update an existing application
        operationId: updateApplication
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertApplicationRequest'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateApplicationResponse'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/hello:
      get:
        tags:
          - Test
        summary: Ping
        description: Simple ping endpoint to test your credentials.
        operationId: ping
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  type: string
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/supplier-url/list:
      get:
        tags:
          - Supplier Links
        summary: Show Links
        description: Retrieve list of shareable urls for this seller
        operationId: showSupplierUrls
        parameters:
          - name: companyIdentifier
            in: path
            description: Show links list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SupplierUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/seller-url/list:
      get:
        tags:
          - Shareable Links
        summary: Show Links
        description: Retrieve list of shareable urls for this seller
        operationId: showSellerUrls
        parameters:
          - name: companyIdentifier
            in: path
            description: Show links list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SellerUrlView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/seller-url/inventory/{channelInventoryIdentifier}/media/list:
      get:
        tags:
          - Shareable Links
        summary: Show Inventory Media
        description: Retrieve a list of media for this channel inventory identifier
        operationId: showInventoryMedia
        parameters:
          - name: companyIdentifier
            in: path
            description: Owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: channelInventoryIdentifier
            in: path
            description: Channel inventory identifier.
            required: true
            schema:
              type: string
            example: channel-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/search/category/list:
      get:
        tags:
          - Search Categories
        summary: Show categories
        description: Retrieve a list of all active supplier and inventory categories.
        operationId: showSearchCategoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: List search categories on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SearchCategory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/supplier/{supplierIdentifier}:
      get:
        tags:
          - Supplier
        summary: Show supplier
        description: Retrieve supplier information specified by identifier
        operationId: showSupplier
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: supplierIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HotelOnMapView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/supplier/list:
      get:
        tags:
          - Supplier
        summary: Latest Inventory
        description: Retrieves a list of latest available inventory.
        operationId: showLatestSupplier
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse suppliers on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: page
            in: query
            description: Skip to page.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
            example: 0
          - name: size
            in: query
            description: Skip to page.
            required: false
            schema:
              maximum: 100
              type: integer
              format: int32
              default: 20
            example: 20
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/HotelOnMapView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/supplier/country/list:
      get:
        tags:
          - Supplier
        summary: Show unique supplier countries
        description: Retrieve a list of unique countries where suppliers live
        operationId: showUniqueCountryList
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/supplier/city/list:
      get:
        tags:
          - Supplier
        summary: Show unique supplier cities
        description: Retrieve a list of unique cities where suppliers live
        operationId: showUniqueCityList
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/request/{salesChannelRequestIdentifier}/re-apply:
      get:
        tags:
          - Hotel Relationship Requests
        summary: Re-apply hotel request
        description: >-
          Allows the affiliate to re-apply a previously rejected hotel request
          after 90 days.
        operationId: reApplyPropertyRequest
        parameters:
          - name: companyIdentifier
            in: path
            description: Re-apply relationship request owned by this company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: salesChannelRequestIdentifier
            in: path
            description: Re-apply relationship request with this identifier
            required: true
            schema:
              type: string
            example: sales-channel-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/request/supplier/{supplierIdentifier}:
      get:
        tags:
          - Hotel Relationship Requests
        summary: Show hotel request
        description: Retrieve a specific hotel request based on a companyId and a supplierId.
        operationId: showPropertyRequest
        parameters:
          - name: companyIdentifier
            in: path
            description: Show hotel request for this company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: supplierIdentifier
            in: path
            description: Show hotel request for this supplier identifier
            required: true
            schema:
              type: string
            example: supplier-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SalesChannelRelationshipRequestView'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/request/list:
      get:
        tags:
          - Hotel Relationship Requests
        summary: Show hotel requests
        description: Retrieve list of all hotel requests for this company.
        operationId: showPropertyRequests
        parameters:
          - name: companyIdentifier
            in: path
            description: Show all hotel requests for this company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/SalesChannelRelationshipRequestView_Affiliate
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/channel/supplier/{supplierIdentifier}:
      get:
        tags:
          - Sales channel
        summary: Show sales channel
        description: Retrieve sales channel specified by the company ID and the supplier ID.
        operationId: showSalesChannel
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: supplierIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SalesChannelView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/message/list:
      get:
        tags:
          - Notification
        summary: Show notifications
        description: Retrieve all the messages for this company
        operationId: showNotifications_1
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/NotificationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/message/count:
      get:
        tags:
          - Notification
        summary: Show unread message count
        description: Retrieve count of unread messages
        operationId: showUnreadMessageCount
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CountResponse_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/marketplace/customer/invoice/upcoming:
      get:
        tags:
          - Invoice
        summary: Show Upcoming Invoice
        description: >-
          Retrieve upcoming invoice. A company might want to know how many API
          calls have been done for the current month.
        operationId: showUpcomingInvoiceForCompanyCustomer
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Invoice_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/marketplace/customer/invoice/upcoming/items:
      get:
        tags:
          - Invoice
        summary: Show Upcoming Invoices
        description: Retrieve all upcoming invoice for a company.
        operationId: showUpcomingInvoiceLineItemsForCompanyCustomer
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceLineItemCollection_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/marketplace/customer/invoice/list:
      get:
        tags:
          - Invoice
        summary: Show Invoices
        description: Retrieve all invoices for a specific company
        operationId: showInvoicesForCompanyCustomer
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceCollection_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map/markers/{listType}/{listIdentifier}:
      get:
        tags:
          - Maps
        summary: Show Map Markers
        description: Retrieve a list of advanced map configuration inventory markers by type
        operationId: showAdvancedMapConfigurationMapMarkers
        parameters:
          - name: companyIdentifier
            in: path
            description: Show map markers for list owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: listIdentifier
            in: path
            description: Show map markers for list.
            required: true
            schema:
              type: string
            example: list-1
          - name: listType
            in: path
            description: Indicate whether this list is a curated or dynamic list.
            required: true
            schema:
              type: string
              enum:
                - LIST
                - SEARCH
            example: LIST
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InventoryMapMarker_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/map/marker/{channelInventoryIdentifier}:
      get:
        tags:
          - Maps
        summary: Show Map Marker
        description: Retrieve map marker for individual channel inventory.
        operationId: showAdvancedMapConfigurationMapMarker
        parameters:
          - name: companyIdentifier
            in: path
            description: Show map markers for map owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: channelInventoryIdentifier
            in: path
            description: Show map marker for specific inventory.
            required: true
            schema:
              type: string
            example: channel-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InventoryMapMarker_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/{supplierIdentifier}/sales-channel/{salesChannelIdentifier}:
      get:
        tags:
          - Discover
        summary: Show Inventory Supplier
        description: Retrieves a list of latest available inventory.
        operationId: showInventorySupplier
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory supplier on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: supplierIdentifier
            in: path
            description: Browse inventory supplier on behalf of this supplier identifier.
            required: true
            schema:
              type: string
            example: supplier-1
          - name: salesChannelIdentifier
            in: path
            description: >-
              Browse inventory supplier on behalf of this sales channel
              identifier.
            required: true
            schema:
              type: string
            example: sales-channel-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InventorySupplier_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/list:
      get:
        tags:
          - Discover
        summary: Latest Inventory Suppliers
        description: Retrieves a list of latest available inventory suppliers.
        operationId: showLatestInventorySupplierList
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory supplier on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: page
            in: query
            description: Skip to page.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
            example: 0
          - name: size
            in: query
            description: Skip to page.
            required: false
            schema:
              maximum: 100
              type: integer
              format: int32
              default: 20
            example: 20
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InventorySupplier_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/grid/{dynamicListIdentifier}:
      get:
        tags:
          - Discover
        summary: Inventory Search by List
        description: Retrieves a paginated result set based on the given list identifier.
        operationId: showDynamicSellerInventoryById
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory supplier on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: dynamicListIdentifier
            in: path
            description: Browse inventory supplier on behalf of this dynamic list identifier.
            required: true
            schema:
              type: string
            example: dynamic-list-1
          - name: page
            in: query
            description: Skip to page.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
            example: 0
          - name: size
            in: query
            description: Skip to page.
            required: false
            schema:
              maximum: 100
              type: integer
              format: int32
              default: 20
            example: 20
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageInventorySupplier_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/country/list:
      get:
        tags:
          - Discover
        summary: Show Inventory Supplier Countries
        description: Retrieve list of countries affiliate has access to.
        operationId: showCountriesForInventorySupplier
        parameters:
          - name: companyIdentifier
            in: path
            description: List countries for inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Country_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/supplier/city/list:
      get:
        tags:
          - Discover
        summary: Show Inventory Supplier Cities
        description: Retrieve list of cities affiliate has access to.
        operationId: showCitiesForInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: List cities for inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GeoName_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/ranked/list/list:
      get:
        tags:
          - Inventory Grids
        summary: Show Ranked Grids
        description: Retrieve list of ranked grids.
        operationId: showSellerInventoryRankedLists
        parameters:
          - name: companyIdentifier
            in: path
            description: Retrieve list for owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SellerInventoryRankedListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/list/list:
      get:
        tags:
          - Inventory Grids
        summary: Show Grids
        description: Retrieve curated / saved search list lists.
        operationId: showSellerInventoryLists
        parameters:
          - name: companyIdentifier
            in: path
            description: Show seller inventory lists owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SellerInventoryListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item/list:
      get:
        tags:
          - Inventory Cards
        summary: Show Inventory Cards
        description: Retrieve a list of all inventory cards for company.
        operationId: showSellerInventoryItemsForCompany
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to retrieve items for
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SellerInventoryItemView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/item/inventory/{channelInventoryIdentifier}/media/list:
      get:
        tags:
          - Inventory Cards
        summary: Show Card Media
        description: >-
          Retrieve list of all media associated with this channel inventory
          identifier.
        operationId: showInventoryMedia_1
        parameters:
          - name: companyIdentifier
            in: path
            description: Company identifier to retrieve items for
            required: true
            schema:
              type: string
          - name: channelInventoryIdentifier
            in: path
            description: Retrieve media for this channel inventory identifier.
            required: true
            schema:
              type: string
            example: channel-inventory-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/grid/{dynamicListIdentifier}:
      get:
        tags:
          - Discover
        summary: Inventory Search by List
        description: Retrieves a paginated result set based on the given list identifier.
        operationId: showDynamicSellerInventoryById_1
        parameters:
          - name: companyIdentifier
            in: path
            description: Browse inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: dynamicListIdentifier
            in: path
            description: Browse inventory on behalf of this dynamic list identifier.
            required: true
            schema:
              type: string
            example: dynamic-list-1
          - name: page
            in: query
            description: Skip to page.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
            example: 0
          - name: size
            in: query
            description: Skip to page.
            required: false
            schema:
              maximum: 100
              type: integer
              format: int32
              default: 20
            example: 20
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageInventoryView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/country/list:
      get:
        tags:
          - Discover
        summary: Show Inventory Countries
        description: Retrieve list of countries affiliate has access to.
        operationId: showCountriesForInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: List countries for inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Country_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/city/list:
      get:
        tags:
          - Discover
        summary: Show Inventory Cities
        description: Retrieve list of cities affiliate has access to.
        operationId: showCitiesForInventory_1
        parameters:
          - name: companyIdentifier
            in: path
            description: List cities for inventory on behalf of this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GeoName_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/inventory/campaign/list:
      get:
        tags:
          - Campaign
        summary: Show campaign inventory
        description: Show array of campaign inventory
        operationId: showCampaignInventory
        parameters:
          - name: companyIdentifier
            in: path
            description: Show campaigns for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CampaignInventory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/dynamic/list:
      get:
        tags:
          - Inventory Grids
        summary: Show Saved Searches
        description: Retrieve all saved searches for owner
        operationId: showSavedSearches
        parameters:
          - name: companyIdentifier
            in: path
            description: List searches owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/DynamicSellerListView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/configuration/list:
      get:
        tags:
          - Customization
        summary: Show Customizations
        description: Retrieve a list of customizations for specified company.
        operationId: showApplicationConfigurationsByOwner
        parameters:
          - name: companyIdentifier
            in: path
            description: Show customizations for this company
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/EngineConfigurationView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/{bookingIdentifier}:
      get:
        tags:
          - Bookings
        summary: Show Booking
        description: Show a booking record by its identifier.
        operationId: showBookingForEngine
        parameters:
          - name: companyIdentifier
            in: path
            description: Show booking for company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: bookingIdentifier
            in: path
            description: Show booking with booking identifier
            required: true
            schema:
              type: string
            example: booking-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BookingView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/roomrate/list:
      get:
        tags:
          - Bookings
        summary: Show Booked Master Rates
        description: Show a list of unique master rates that created a booking.
        operationId: showUniqueMasterRates
        parameters:
          - name: companyIdentifier
            in: path
            description: >-
              Show unique master rates for booking made with the help of company
              identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/hotel/list:
      get:
        tags:
          - Bookings
        summary: Show Booked Hotels
        description: >-
          Show a list of unique hotels that were responsible for creating bookings
          through this affiliate sales channel.
        operationId: showUniqueHotels
        parameters:
          - name: companyIdentifier
            in: path
            description: >-
              Show unique hotels for booking made with the help of company
              identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/engine/list:
      get:
        tags:
          - Bookings
        summary: Show Booked Applications
        description: >-
          Show a list of unique applications that were responsible for creating
          bookings through this affiliate sales channel.
        operationId: showUniqueApplications
        parameters:
          - name: companyIdentifier
            in: path
            description: >-
              Show unique applications for booking made with the help of company
              identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/booking/engine/configuration/list:
      get:
        tags:
          - Bookings
        summary: Show Booked Customizations
        description: >-
          Show a list of unique customizations that were responsible for creating
          bookings through this affiliate sales channel.
        operationId: showUniqueEngineConfigurations
        parameters:
          - name: companyIdentifier
            in: path
            description: >-
              Show unique customizations for booking made with the help of company
              identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyValuePair_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/entry/list:
      get:
        tags:
          - Syndication Entry Publisher
        summary: Show WinkLinks list
        description: Retrieve list of syndication entries.
        operationId: showSyndicationEntryList
        parameters:
          - name: companyIdentifier
            in: path
            description: List syndication entries owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SyndicationEntry_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/syndication/category/list:
      get:
        tags:
          - Syndication Entry Publisher
        summary: Show WinkLinks list
        description: Retrieve list of syndication categories.
        operationId: showSyndicationCategoryList
        parameters:
          - name: companyIdentifier
            in: path
            description: List syndication categories owned by this owner identifier.
            required: true
            schema:
              type: string
            example: owner-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/SyndicationCategory_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/list:
      get:
        tags:
          - Company
        summary: Show Companies
        description: List all companies owned by caller
        operationId: showCompanies
        parameters:
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/application/{id}/revoke:
      get:
        tags:
          - Application
        summary: Revoke Application Credentials
        description: Refreshes the clientId and secretKey properties.
        operationId: revokeApplication
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RevokeClientIdResponse'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/application/list:
      get:
        tags:
          - Application
        summary: Show Applications
        description: List all applications owned by creating entity
        operationId: showApplications
        parameters:
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Application'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/sales/request/{salesChannelRequestIdentifier}:
      delete:
        tags:
          - Hotel Relationship Requests
        summary: Delete request
        description: Delete a relationship request
        operationId: removePropertyRequest
        parameters:
          - name: companyIdentifier
            in: path
            description: Remove hotel request owned by this company identifier
            required: true
            schema:
              type: string
            example: company-1
          - name: salesChannelRequestIdentifier
            in: path
            description: Remove hotel request with this identifier
            required: true
            schema:
              type: string
            example: sales-channel-1
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '202':
            description: Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RemoveEntryResponse'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
    /api/company/{companyIdentifier}/manager/{email}:
      delete:
        tags:
          - Company
        summary: Remove Manager
        description: Disassociate user from this company.
        operationId: removeCompanyUser
        parameters:
          - name: companyIdentifier
            in: path
            required: true
            schema:
              type: string
          - name: email
            in: path
            required: true
            schema:
              type: string
          - name: Wink-Version
            in: header
            schema:
              type: string
              enum:
                - '2.0'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CompanyView_Affiliate'
          '400':
            description: Bad Request
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: string
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/GenericErrorMessage'
                    - type: object
                      additionalProperties:
                        type: object
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '401':
            description: Unauthorized
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '403':
            description: Forbidden
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '405':
            description: Method Not Allowed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '415':
            description: Unsupported Media Type
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              application/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/xml:
                schema:
                  type: object
                  additionalProperties:
                    type: object
              text/plain:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              application/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/xml:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
              text/plain:
                schema:
                  $ref: '#/components/schemas/GenericErrorMessage'
          '503':
            description: Service Unavailable
            content:
              '*/*':
                schema:
                  type: object
        security:
          - oauth2ClientCredentials: []
  components:
    schemas:
      GenericErrorMessage:
        type: object
        properties:
          timestamp:
            type: string
            xml:
              attribute: true
          status:
            type: integer
            format: int32
            xml:
              attribute: true
          error:
            type: string
          message:
            type: string
          path:
            type: string
        description: Generic error message
        xml:
          name: ErrorMessage
      SimpleDescription_Affiliate:
        required:
          - description
          - language
        type: object
        properties:
          name:
            type: string
            description: Use as title or short text description
            example: An example title
          description:
            maxLength: 2147483647
            minLength: 1
            type: string
            description: Longer text description
            example: >-
              This is a longer description that explains its relationship to
              parent nicely.
          language:
            maxLength: 2
            minLength: 2
            type: string
            description: Indicate which language this description is written in.
            example: en
            default: en
        description: Localized link descriptions
      UpsertSupplierUrlRequest_Affiliate:
        required:
          - descriptions
          - engineConfigurationIdentifier
          - keywords
          - multimediaIdentifiers
          - supplierIdentifier
          - supplierUrlName
        type: object
        properties:
          supplierUrlName:
            type: string
            description: Descriptive supplierUrlName of this url for seller use only
            example: My Bali Villa
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Localized link descriptions
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: Keywords
              example: bali
          twitterAccount:
            type: string
            description: Twitter account is used with OpenGraph data
            example: '@travelikoworld'
          facebookAppId:
            type: string
            description: Facebook APP ID is used with OpenGraph data
            example: '19827398721938798237'
          theme:
            type: string
            description: Url theme controls the look and feel of the ad banner.
            example: THEME_1
            enum:
              - THEME_1
          supplierIdentifier:
            type: string
            description: The entity supplying the inventory. Usually a hotel.
            example: hotel-1
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Cloudinary identifiers
            example:
              - cloudinary-image-1
            items:
              type: string
              description: Cloudinary identifiers
              example: '["cloudinary-image-1"]'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: true
            default: false
          animateDelay:
            type: integer
            description: Animation delay in milliseconds
            format: int32
            example: 1000
            default: -1
        description: Upserts a SupplierUrl entity
      SupplierUrlView_Affiliate:
        required:
          - supplierUrl
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          supplierUrl:
            $ref: '#/components/schemas/SupplierUrl_Affiliate'
      SupplierUrl_Affiliate:
        required:
          - descriptions
          - engineConfigurationIdentifier
          - identifier
          - keywords
          - multimediaIdentifiers
          - sellerIdentifier
          - status
          - supplierIdentifier
          - supplierUrlName
          - uniqueId
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          sellerIdentifier:
            type: string
            description: Company identifier
            format: uuid
          supplierUrlName:
            type: string
            description: Descriptive supplierUrlName of this url for seller use only
            example: My Bali Villa
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Localized link descriptions
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: Keywords
              example: bali
          uniqueId:
            type: string
            description: Unique link id
            example: HBDG87f2
          twitterAccount:
            type: string
            description: Twitter account is used with OpenGraph data
            example: '@travelikoworld'
          facebookAppId:
            type: string
            description: Facebook APP ID is used with OpenGraph data
            example: '19827398721938798237'
          theme:
            type: string
            description: Url theme controls the look and feel of the ad banner.
            example: THEME_1
            enum:
              - THEME_1
          status:
            type: string
            description: Url sell status
            example: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
              - REMOVED
          supplierIdentifier:
            type: string
            description: The entity supplying the inventory. Usually a hotel.
            example: hotel-1
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Cloudinary identifiers
            example:
              - cloudinary-image-1
            items:
              type: string
              description: Cloudinary identifiers
              example: '["cloudinary-image-1"]'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: true
            default: false
          animateDelay:
            type: integer
            description: Animation delay in milliseconds
            format: int32
            example: 1000
            default: -1
        description: Supplier URL
      StaticSellerList_Affiliate:
        required:
          - name
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          ownerIdentifier:
            type: string
            description: List creator
            format: uuid
          name:
            type: string
            description: Name of curated list
            example: Top 3 hotels in Chiang Mai
          type:
            type: string
            description: Static seller list type
            example: NORMAL
            enum:
              - FAVORITE
              - NORMAL
        description: A curated list is a bucket that holds any type of travel inventory.
      Address_Affiliate:
        required:
          - address1
          - city
        type: object
        properties:
          address1:
            type: string
            description: Address line 1
            example: 234 Near da beach
          address2:
            type: string
            description: Address line 2
            example: 'Pebble #5001'
          state:
            type: string
            description: State
            example: CA
          postalCode:
            type: string
            description: Postal / zip code
            example: '90210'
          county:
            type: string
            description: County
            example: Alameda county
          city:
            $ref: '#/components/schemas/GeoName_Affiliate'
          valid:
            type: boolean
          fullAddress:
            type: string
        description: Address information
      AdvanceBookingRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to users who want to book in advance.
      ArrivalDaysOfWeekRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific days of the week the guest is arriving.
      AvailableDaysOfWeekRateQualifier_Affiliate:
        type: object
        description: >-
          Restrict promotion to specific days of the week the promotion is
          available.
      BlackoutDate_Affiliate:
        type: object
        description: Exclude this promotion from specific date ranges.
      CityRateQualifier_Affiliate:
        type: object
        description: >-
          Restrict promotion to specific cities. See [Geo-IP city geoname
          data](https://api.wink.travel)
      Contact_Affiliate:
        type: object
        properties:
          firstName:
            type: string
            description: Contact first name
            example: John
          lastName:
            type: string
            description: Contact last name
            example: Smith
          email:
            type: string
            description: Contact E-mail
            example: johnsmith@email.com
          secondaryEmail:
            type: string
            description: Contact secondary Email
            example: johnsmith2@email.com
          phoneNumber:
            type: string
            description: Contact phone number
            example: '+12125551212'
          fullName:
            type: string
            description: First and last name
            example: John Smith
          summary:
            type: string
            description: Summary
            example: |-
              John Smith
              0123456768
              johnsmith@email.com
        description: Contact details for reservations desk
      ContinentRateQualifier_Affiliate:
        type: object
        description: >-
          Restrict promotion to specific continents. See [Geo-IP continent geoname
          data](https://api.wink.travel)
      CountryRateQualifier_Affiliate:
        type: object
        description: >-
          Restrict promotion to specific countries. See [Geo-IP country geoname
          data](https://api.wink.travel)
      Country_Affiliate:
        type: object
        properties:
          iso:
            type: string
            description: ISO code
            example: US
          name:
            type: string
            description: Country name
            example: United States
          capital:
            type: string
            description: Country capital
            example: Washington
          continent:
            type: string
            description: Continent code
            example: NA
          currencyCode:
            type: string
            description: Currency code
            example: USD
          currencyName:
            type: string
            description: Currency name
            example: Dollar
          geoNameId:
            type: string
            description: Country GeoNames identifier
            example: '6252001'
        description: Country
      DepartureDaysOfWeekRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific days of the week the guest is departing.
      GeoJsonPoint_Affiliate:
        type: object
        properties:
          x:
            type: number
            format: double
          'y':
            type: number
            format: double
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: double
      GeoName_Affiliate:
        type: object
        properties:
          geoNameId:
            type: string
            description: GeoName identifier
            example: '5128581'
          type:
            type: string
            description: GeoName type
            enum:
              - CITY
              - ISLAND
              - OTHER
          name:
            type: string
            description: Name of city
            example: New York City
          urlName:
            type: string
            description: Url name
            example: new-york-city-united-states
          asciiName:
            type: string
            description: Ascii name of city
            example: New York City
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          featureCode:
            type: string
          countryCode:
            type: string
          timezone:
            type: string
            description: Timezone
            example: America/New_York
          country:
            $ref: '#/components/schemas/Country_Affiliate'
          subCountry:
            $ref: '#/components/schemas/SubCountry_Affiliate'
          subSubCountry:
            $ref: '#/components/schemas/SubSubCountry_Affiliate'
        description: >-
          GeoNames have been created at
          [https://geonames.org](https://geonames.org) and contain geographical
          destinations we use as geoname data to associate travel inventory with a
          location.
      HotelOnMap_Affiliate:
        type: object
        properties:
          identifier:
            type: string
            description: >-
              Unique record identifier. This is NOT the same as the unique hotel
              record identifier.
            example: document-1
          hotelIdentifier:
            type: string
            description: Unique hotel record identifier.
            format: uuid
          name:
            type: string
            description: Hotel trade name
            example: The Loveliest Hotel
          localName:
            type: string
            description: >-
              Hotel local name if different from the trade name or if it is the
              local language.
            example: Det Beste Hotellet
          chain:
            type: string
            description: Name of hotel chain if applicable.
            example: Hotel chain
          brand:
            type: string
            description: Name of hotel brand
            example: Hotel brand
          urlName:
            type: string
            description: Unique URL-friendly name slug of hotel
            example: the-loveliest-hotel-new-york-united-states
          starRating:
            maximum: 6
            minimum: 0
            type: integer
            description: >-
              Official or self-designated property star rating. Note that in some
              regions there are 6-star hotels. They are the same as 5-star hotels
              everywhere else.
            format: int32
            example: 4
          bookings:
            type: integer
            description: Number of bookings for this property on the wink.travel payment.
            format: int64
            example: 6054
            default: 0
          aggregateReviewRating:
            type: number
            description: Aggregate score based on all current user reviews.
            format: float
            example: 7.8
            default: 0
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          shortDescriptions:
            type: array
            description: A localized list of short property descriptions
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          longDescriptions:
            type: array
            description: A localized list of longer property descriptions
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          aggregateGreendexRating:
            type: number
            description: >-
              Aggregate Green Index score if the property has answered our
              questionnaire available in the Extranet.
            format: float
            example: 7
            default: 0
          lifestyleTypes:
            type: array
            items:
              type: string
              description: A list of lifestyles the property associates with.
              example: LIFESTYLE_HEALTH_FITNESS
              enum:
                - LIFESTYLE_HEALTH_FITNESS
                - LIFESTYLE_RELAX
                - LIFESTYLE_ADULT_ONLY
                - LIFESTYLE_ADVENTURE
                - LIFESTYLE_BUSINESS
                - LIFESTYLE_LGBT
                - LIFESTYLE_SINGLE_PARENT
                - LIFESTYLE_SOLO_FEMALE
                - LIFESTYLE_BEAUTY
                - LIFESTYLE_FOODIE
                - LIFESTYLE_FAMILY
                - LIFESTYLE_ROMANCE
                - LIFESTYLE_COUPLE
                - LIFESTYLE_SOLO
                - LIFESTYLE_BACKPACKER
                - LIFESTYLE_SHOPPING
                - LIFESTYLE_SPORTS
                - LIFESTYLE_MOUNTAIN
                - LIFESTYLE_BEACH
                - LIFESTYLE_CITY
                - LIFESTYLE_COUNTRY
                - LIFESTYLE_CULTURE
                - LIFESTYLE_ECO
          totalReviews:
            type: integer
            description: Count of total reviews left by users at this property.
            format: int32
            example: 989
            default: 0
          available:
            type: boolean
            description: >-
              Flag indicating whether the payment has made this property available
              for sale.
            example: true
            default: false
          hotelAvailable:
            type: boolean
            description: >-
              Flag indicating whether the property has made this property
              available for sale.
            example: true
            default: false
          reservations:
            $ref: '#/components/schemas/Contact_Affiliate'
          socials:
            type: array
            description: Property's social network accounts
            items:
              $ref: '#/components/schemas/Social_Affiliate'
          images:
            type: array
            description: Property images.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          videos:
            type: array
            description: Property videos.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          policy:
            $ref: '#/components/schemas/PropertyPolicy_Affiliate'
          thirdPartyReviews:
            type: array
            description: >-
              Array of awards and third party reviews given to property by
              certified / non-certified providers.
            items:
              $ref: '#/components/schemas/Recognition_Affiliate'
          attractions:
            type: integer
            description: Number of attractions property has listed on its profile.
            format: int32
            example: 5
            default: 0
          recreations:
            type: integer
            description: Number of activites property has listed on its profile.
            format: int32
            example: 3
            default: 0
          pois:
            type: integer
            description: Number of places property has listed on its profile.
            format: int32
            example: 9
            default: 0
          restaurants:
            type: integer
            description: Number of restaurants property has on its profile.
            format: int32
            example: 2
            default: 0
          meetingRooms:
            type: integer
            description: Number of meeting rooms property has on its profile.
            format: int32
            example: 2
            default: 0
          spas:
            type: integer
            description: Number of spas property has on its profile.
            format: int32
            example: 1
            default: 0
          addOns:
            type: integer
            description: Number of add-ons property has on its profile.
            format: int32
            example: 5
            default: 0
          fullNameOfGeneralManager:
            type: string
            description: Full name of the property's current and active general manager.
            example: John Smith
          profilePictureIdentifierGeneralManager:
            type: string
            description: Cloudinary identifier referencing image of general manager.
            example: cloudinary-identifier-1
          messagesOfGeneralManager:
            type: array
            description: >-
              A list of localized welcome messages created by the property's
              general manager.
            example: >-
              We are excited to see you on our premises sooner than you can say
              lickedy split!
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          locationCategory:
            type: string
            description: >-
              Supported OTA specification `LOC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '34'
          segmentCategory:
            type: string
            description: >-
              Supported OTA specification `SEG` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '7'
          hotelCategory:
            type: string
            description: >-
              Supported OTA specification `PCT` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '45'
          architecturalStyle:
            type: string
            description: >-
              Supported OTA specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '7'
          whenBuilt:
            type: string
            description: Year the property was constructed.
            example: '1927'
          multimediaIdentifier:
            type: string
            description: Featured image identifier for this property.
            example: media-1
          imageIdentifier:
            type: string
            description: Featured Cloudinary image identifier for this property.
          imageAngle:
            type: string
            description: >-
              Meta data information about image angle that gives integrators a
              chance to crop this image properly.
            example: '-90'
          videoIdentifier:
            type: string
            description: Featured Cloudinary video identifier for this property.
          currencyCode:
            type: string
            description: Currency code for property.
            example: USD
          membershipRateDiscount:
            type: number
            description: >-
              A property's price score is based on calculating historical pricing
              data. Each property receives a unique score. There is no max score;
              it's there to compare it against other properties.
            format: float
            example: 9
            default: 0
          priceScore:
            type: integer
            description: >-
              A property's price score is based on calculating historical pricing
              data. Each property receives a unique score. There is no max score;
              it's there to compare it against other properties.
            format: int32
            example: 9
            default: 0
          perkScore:
            type: integer
            description: >-
              A property's perk score is based on the type of perks that is
              offered to the guests across all master rates. There is no max
              score; it's there to compare it against other properties.
            format: int32
            example: 4
            default: 0
          packageScore:
            type: integer
            description: >-
              A property's package score is based on general availability and
              price for all packages and add-ons offered by the property. There is
              no max score; it's there to compare it against other properties.
            format: int32
            example: 4
            default: 0
          loyaltyScore:
            type: integer
            description: >-
              A property's loyalty score is based on calculating how many
              available rate plans honor loyalty points. There is no max score;
              it's there to compare it against other properties.
            format: int32
            example: 5
            default: 0
          popularScore:
            type: integer
            description: >-
              A property's popular score is based on calculating number of
              bookings across room types. There is no max score; it's there to
              compare it against other properties.
            format: int32
            example: 45
            default: 0
          experienceScore:
            type: integer
            description: >-
              A property's experience score is based on how calculating how many
              types of experiences are available and at what price ranges. There
              is no max score; it's there to compare it against other properties.
            format: int32
            example: 5
            default: 0
          availabilityScore:
            type: integer
            description: >-
              A property's availability score is based on general availability of
              all room types. If most room types are always unavailable, the
              attractiveness of this property goes down. We use this as our
              primary benchmark to decide how and when to feature properties.
              There is no max score; it's there to compare it against other
              properties.
            format: int32
            example: 5
            default: 0
          views:
            type: integer
            description: Total number of user views of this property.
            format: int64
            example: 10432
            default: 0
          hotelAmenityCodes:
            type: array
            description: >-
              Supported OTA specification `HAC` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
              - '7'
            items:
              type: string
              description: >-
                Supported OTA specification `HAC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '["1","7"]'
          propertyAccessibilityCodes:
            type: array
            description: >-
              Supported OTA specification `PHY` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
              - '7'
            items:
              type: string
              description: >-
                Supported OTA specification `PHY` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '["1","7"]'
          propertySecurityCodes:
            type: array
            description: >-
              Supported OTA specification `SEC` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
              - '7'
            items:
              type: string
              description: >-
                Supported OTA specification `SEC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '["1","7"]'
          numberOfRooms:
            type: integer
            description: Number of rooms / keys for this property.
            format: int32
            example: 32
            default: 0
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          active:
            type: boolean
            description: >-
              A property is considered active when both available and
              hotelAvailable flags are true.
            example: true
          urlParameters:
            type: string
            description: >-
              Convenience data point that creates url friendly query parameters of
              property.
        description: Combined property data.
      IPRangeRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific IP ranges.
      ImageAttribution_Affiliate:
        required:
          - name
        type: object
        properties:
          url:
            type: string
            description: URL to contributor
            example: https://maps.google.com/maps/contrib/111628493169070103594
          name:
            type: string
            description: Name of contributor
            example: Samuel Adams
        description: Whether image has attribution properties
      Inventory_Affiliate:
        required:
          - address
          - bookable
          - commissionable
          - enabled
          - hotel
          - identifier
          - imageIdentifier
          - inventoryIdentifier
          - inventoryName
          - inventoryNameInEnglish
          - inventoryType
          - location
          - pricePoint
          - quantity
          - salesChannel
        type: object
        properties:
          identifier:
            type: string
            description: Inventory identifier
            format: uuid
          salesChannel:
            $ref: '#/components/schemas/SalesChannel_Affiliate'
          inventoryType:
            type: string
            description: Inventory type
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          inventoryIdentifier:
            type: string
            description: Inventory type identifier
            format: uuid
          inventoryName:
            type: string
            description: Name of inventory as hotel is seeing it
          inventoryNameInEnglish:
            type: string
            description: Name of inventory as traveler is seeing it
          enabled:
            type: boolean
            description: Whether this inventory is enabled or not
            example: true
            default: true
          imageIdentifier:
            type: string
            description: Main image of inventory
          pricePoint:
            type: string
            description: Level of expensiveness.
            example: THREE
            default: THREE
            enum:
              - HALF
              - ONE
              - ONE_HALF
              - TWO
              - TWO_HALF
              - THREE
              - THREE_HALF
              - FOUR
              - FOUR_HALF
              - FIVE
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          quantity:
            type: integer
            description: quantity
            format: int32
            example: 100
            default: 0
          commissionable:
            type: boolean
            description: Whether this is commissionable or not
            example: true
            default: false
          bookable:
            type: boolean
            description: Whether inventory can be booked
            example: true
            default: true
          hotel:
            $ref: '#/components/schemas/HotelOnMap_Affiliate'
        description: Channel inventory
      LengthOfStayRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to users who want to stay a certain number of days.
      LocalizedDescription_Affiliate:
        required:
          - description
          - language
        type: object
        properties:
          description:
            maxLength: 2147483647
            minLength: 1
            type: string
            description: Longer text description
            example: >-
              This is a longer description that explains its relationship to
              parent nicely.
          language:
            maxLength: 2
            minLength: 2
            type: string
            description: Indicate which language this description is written in.
            example: en
            default: en
        description: >-
          A list of localized welcome messages created by the property's general
          manager.
        example: >-
          We are excited to see you on our premises sooner than you can say
          lickedy split!
      MinutesBeforeBookingStartDateRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to users who want to book a room close to the date.
      PrepayRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to either prepaid / non-prepaid rates.
      PromotionRateQualifier_Affiliate:
        type: object
        description: Restrict promotion by requiring users to enter a promo code.
      PropertyPolicy_Affiliate:
        required:
          - checkInTime
          - checkOutTime
          - childrenAllowed
          - internetAvailability
          - internetConnectionLocation
          - internetConnectionType
          - parkingAccess
          - parkingAvailability
          - petsAllowed
        type: object
        properties:
          childrenAllowed:
            type: boolean
            description: Indicates whether property allows children
            example: true
            default: false
          childrenMinimumAge:
            type: integer
            description: >-
              When a property allows children, it can also indicate what the
              minimum age is for children to be allowed.
            format: int32
            example: 6
          internetAvailability:
            type: string
            description: Indicates the availability of internet on the property.
            example: 'YES'
            enum:
              - 'YES'
              - 'NO'
              - YES_PAID
          internetConnectionType:
            type: string
            description: Indicates how guests can access the Internet on the property.
            example: WIFI
            enum:
              - WIFI
              - CABLE
          internetConnectionLocation:
            type: string
            description: Indicates where internet is available in and around the property.
            example: ENTIRE_PROPERTY
            enum:
              - ENTIRE_PROPERTY
              - PUBLIC_AREAS
              - ALL_ROOMS
              - SOME_ROOMS
              - BUSINESS_CENTER
          parkingAvailability:
            type: string
            description: Indicates whether parking is available at the property.
            example: 'YES'
            enum:
              - 'YES'
              - 'NO'
              - YES_PAID
          parkingAccess:
            type: string
            description: Indicates what type of parking is available at the property.
            example: PRIVATE
            enum:
              - PRIVATE
              - PUBLIC
          petsAllowed:
            type: boolean
            description: >-
              Indicates whether pets are allowed on the property. Note: There are
              thousand different kinds of pets. Just because the property allows
              small dogs does not mean the guest can bring a python. Always best
              to check with property.
            example: true
            default: false
          checkOutTime:
            type: string
            description: When the guest has to check out.
            example: '10:00'
          checkInTime:
            type: string
            description: When the guest can check in.
            example: '14:00'
        description: Outlines basic policies for the property.
      RateModifierBundle_Affiliate:
        required:
          - enabled
          - hotelIdentifier
          - identifier
          - items
          - name
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          hotelIdentifier:
            type: string
            description: Hotel identifier.
            format: uuid
          name:
            type: string
            description: Internal name of promotion ancillary.
            example: Early bird - Long Term
          enabled:
            type: boolean
            description: Whether this promotion ancillary is enabled or not.
            example: true
            default: true
          items:
            type: array
            items:
              $ref: '#/components/schemas/RateModifier_Affiliate'
          modifierOverride:
            $ref: '#/components/schemas/VariableCharge_Affiliate'
          type:
            type: string
            description: Required if manual override modifier is not null
            example: DISCOUNT
            enum:
              - PREMIUM
              - DISCOUNT
          pricingType:
            type: string
            description: >-
              Determines whether this discount should be applied per night, per
              stay or per person - per night; Required if amount override is not
              null
            enum:
              - PER_STAY
              - PER_DAY
              - PER_NIGHT
              - PER_USE
              - PER_HOUR
              - PER_PERSON
              - PER_PERSON_PER_NIGHT
              - PER_PERSON_PER_HOUR
              - PER_ADULT
              - PER_ADULT_PER_NIGHT
              - PER_ADULT_PER_HOUR
              - PER_CHILD
              - PER_CHILD_PER_NIGHT
              - PER_CHILD_PER_HOUR
          hasFixedDiscountModifier:
            type: boolean
          hasPercentDiscountModifier:
            type: boolean
          isValid:
            type: boolean
            writeOnly: true
          description:
            type: array
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
        description: Promotion bundles for this channel
      RateModifier_Affiliate:
        required:
          - descriptions
          - enabled
          - hotelIdentifier
          - identifier
          - modifier
          - name
          - pricingType
          - type
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          hotelIdentifier:
            type: string
            description: Hotel identifier.
            format: uuid
          name:
            type: string
            description: Internal name of promotion.
            example: Early bird
          type:
            type: string
            description: >-
              Set whether you want the price to go up or down when the rules of
              this promotion have been satisfied.
            example: DISCOUNT
            enum:
              - PREMIUM
              - DISCOUNT
          modifier:
            $ref: '#/components/schemas/VariableCharge_Affiliate'
          enabled:
            type: boolean
            description: Whether this promotion is enabled or not.
            example: true
            default: true
          pricingType:
            type: string
            description: >-
              This determines whether this discount should be applied per night,
              per stay or per person - per night
            example: PER_PERSON_PER_NIGHT
            enum:
              - PER_STAY
              - PER_DAY
              - PER_NIGHT
              - PER_USE
              - PER_HOUR
              - PER_PERSON
              - PER_PERSON_PER_NIGHT
              - PER_PERSON_PER_HOUR
              - PER_ADULT
              - PER_ADULT_PER_NIGHT
              - PER_ADULT_PER_HOUR
              - PER_CHILD
              - PER_CHILD_PER_NIGHT
              - PER_CHILD_PER_HOUR
          descriptions:
            type: array
            description: >-
              Localized descriptions describing promotion. At least one English
              entry is required.
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          cityRateQualifiers:
            type: array
            description: >-
              Restrict promotion to specific cities. See [Geo-IP city geoname
              data](https://api.wink.travel)
            items:
              $ref: '#/components/schemas/CityRateQualifier_Affiliate'
          continentRateQualifiers:
            type: array
            description: >-
              Restrict promotion to specific continents. See [Geo-IP continent
              geoname data](https://api.wink.travel)
            items:
              $ref: '#/components/schemas/ContinentRateQualifier_Affiliate'
          countryRateQualifiers:
            type: array
            description: >-
              Restrict promotion to specific countries. See [Geo-IP country
              geoname data](https://api.wink.travel)
            items:
              $ref: '#/components/schemas/CountryRateQualifier_Affiliate'
          promotionRateQualifiers:
            type: array
            description: Restrict promotion by requiring users to enter a promo code.
            items:
              $ref: '#/components/schemas/PromotionRateQualifier_Affiliate'
          ipRangeRateQualifiers:
            type: array
            description: Restrict promotion to specific IP ranges.
            items:
              $ref: '#/components/schemas/IPRangeRateQualifier_Affiliate'
          roomRangeRateQualifier:
            $ref: '#/components/schemas/RoomRangeRateQualifier_Affiliate'
          prepayRateQualifier:
            $ref: '#/components/schemas/PrepayRateQualifier_Affiliate'
          refundableRateQualifier:
            $ref: '#/components/schemas/RefundableRateQualifier_Affiliate'
          timezoneRateQualifiers:
            type: array
            description: >-
              Restrict promotion to specific time zones. See [Geo-IP timezone
              geoname data](https://api.wink.travel)
            items:
              $ref: '#/components/schemas/TimezoneRateQualifier_Affiliate'
          lastMinuteRateQualifier:
            $ref: >-
              #/components/schemas/MinutesBeforeBookingStartDateRateQualifier_Affiliate
          lengthOfStayRateQualifier:
            $ref: '#/components/schemas/LengthOfStayRateQualifier_Affiliate'
          advanceBookingRateQualifier:
            $ref: '#/components/schemas/AdvanceBookingRateQualifier_Affiliate'
          stayDateRateQualifiers:
            type: array
            description: Restrict promotion to specific stay dates the user wants to arrive.
            items:
              $ref: '#/components/schemas/StayDateRateQualifier_Affiliate'
          sellDateRateQualifiers:
            type: array
            description: Restrict promotion to specific dates the booking is made.
            items:
              $ref: '#/components/schemas/SellDateRateQualifier_Affiliate'
          availableDaysOfWeekRateQualifier:
            $ref: '#/components/schemas/AvailableDaysOfWeekRateQualifier_Affiliate'
          arrivalDaysOfWeekRateQualifier:
            $ref: '#/components/schemas/ArrivalDaysOfWeekRateQualifier_Affiliate'
          departureDaysOfWeekRateQualifier:
            $ref: '#/components/schemas/DepartureDaysOfWeekRateQualifier_Affiliate'
          requiredDaysOfWeekRateQualifier:
            $ref: '#/components/schemas/RequiredDaysOfWeekRateQualifier_Affiliate'
          masterRateIdentifiers:
            type: array
            description: Restrict on specific master rates.
            example:
              - master-rate-1
              - master-rate-2
            items:
              type: string
              description: Restrict on specific master rates.
              example: '["master-rate-1","master-rate-2"]'
          addOnIdentifiers:
            type: array
            description: Restrict on specific add-ons.
            example:
              - add-on-1
              - add-on-2
            items:
              type: string
              description: Restrict on specific add-ons.
              example: '["add-on-1","add-on-2"]'
          ratePlanIdentifiers:
            type: array
            description: Restrict on specific rate plans.
            example:
              - rate-plan-1
              - rate-plan-2
            items:
              type: string
              description: Restrict on specific rate plans.
              example: '["rate-plan-1","rate-plan-2"]'
          blackoutDates:
            type: array
            description: Exclude this promotion from specific date ranges.
            items:
              $ref: '#/components/schemas/BlackoutDate_Affiliate'
        description: Promotions that go together to make up this ancillary.
      Recognition_Affiliate:
        required:
          - category
          - hotelIdentifier
          - identifier
          - provider
          - rating
          - type
        type: object
        properties:
          identifier:
            type: string
            description: Recognition identifier.
            format: uuid
          hotelIdentifier:
            type: string
            description: Unique hotel identifier.
            format: uuid
          type:
            type: string
            description: >-
              Type of rating system the recognition operated on. This allows us to
              display the score properly.
            example: PERCENT_RATING
            enum:
              - STAR_RATING
              - NUMERIC_RATING
              - PERCENT_RATING
          category:
            type: string
            description: Recognition category.
            example: AWARD
            enum:
              - THIRD_PARTY_REVIEW
              - PUBLICATION
              - AWARD
          provider:
            type: string
            description: The name of the entity that administers this recognition.
            example: Michelin
          rating:
            minimum: 0
            exclusiveMinimum: false
            type: number
            description: The actual award or rating received by the hotel facility.
            format: float
            example: 8.5
          maxRating:
            type: number
            description: >-
              Use this to let hotels indicate what the total score for this award
              is.
            format: float
            example: 10
          date:
            type: string
            description: The date the award was received
            format: date
            example: '2020-10-24'
          officialAppointmentInd:
            type: boolean
            description: >-
              When true, this indicates the property has received official
              permission from the award provider to use the rating in publications
              and marketing materials; when false this permission has not been
              granted.
            example: true
          ratingSymbol:
            type: string
            description: >-
              Provides the symbol used in the rating. Used in conjunction with the
              Rating.
            example: '*'
        description: >-
          Array of awards and third party reviews given to property by certified /
          non-certified providers.
      RefundableRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to either refundable / non-refundable rates.
      RequiredDaysOfWeekRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific days of the week the guest has to stay.
      RoomRangeRateQualifier_Affiliate:
        type: object
        description: Restrict promotion by restricting to how many rooms the user wants.
      SalesChannel_Affiliate:
        required:
          - blacklisted
          - identifier
          - ownerIdentifier
          - ownerName
          - subType
          - supplierIdentifier
          - supplierName
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier of this segment / account
            format: uuid
          supplierIdentifier:
            type: string
            description: Channel is owned by this supplier identifier.
            format: uuid
          supplierName:
            type: string
            description: Name of property / supplier that owns this channel
            example: Hotel 1
          supplierAvailable:
            type: boolean
            description: Flag when supplier not available. E.g. Hotel disables property
            example: true
            default: true
          subType:
            type: string
            description: What type of segment of channel is this.
            example: DIRECT
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          ownerIdentifier:
            type: string
            description: >-
              A specific identifier for the company / corporation / travel agency
              that is retrieving the rates
            format: uuid
          ownerName:
            type: string
            description: >-
              Name of the owner / affiliate. `Hotel booking engine` when it's the
              booking engine.
            example: Owner 1
          enabled:
            type: boolean
            description: Flag the supplier can use to enable / disable this channel
            example: true
            default: true
          channelDisabled:
            type: boolean
            description: >-
              System override by payment to disable. E.g. Platform disables
              supplier.
          blacklisted:
            type: boolean
            description: >-
              A way to blacklist a specific channel a property doesn't want to
              send inventory to.
          percentDiscount:
            maximum: 1
            exclusiveMaximum: false
            minimum: 0
            exclusiveMinimum: false
            type: number
            description: >-
              Percent discount on this channel and all its children [unless
              configured at the child level].
            format: float
            example: 0.15
          commission:
            maximum: 1
            exclusiveMaximum: false
            minimum: 0
            exclusiveMinimum: false
            type: number
            description: >-
              Amount of sales commission earned through this channel and all its
              children [unless configured at the child level].
            format: float
            example: 0.2
          rateModifiers:
            type: array
            description: Promotions for this channel
            items:
              $ref: '#/components/schemas/RateModifier_Affiliate'
          rateModifierBundles:
            type: array
            description: Promotion bundles for this channel
            items:
              $ref: '#/components/schemas/RateModifierBundle_Affiliate'
        description: Parent sales channel
      SellDateRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific dates the booking is made.
      SimpleMultimedia_Affiliate:
        required:
          - height
          - identifier
          - multimediaIdentifier
          - source
          - type
          - width
        type: object
        properties:
          multimediaIdentifier:
            type: string
            description: Document identifier
            format: uuid
          identifier:
            type: string
            description: Use this identifier to communicate with Cloudinary.
            example: cloudinary-image-1
          type:
            type: string
            description: Whether Cloudinary media is a VIDEO or IMAGE.
            example: IMAGE
            enum:
              - IMAGE
              - VIDEO
              - AUDIO
              - RAW
          source:
            type: string
            description: Currently ONLY using Cloudinary to store all image / video assets.
            example: CLOUDINARY
            default: CLOUDINARY
            enum:
              - YOUTUBE
              - CLOUDINARY
          sort:
            type: integer
            description: >-
              Sort allows you to control how you want to sort this record in a
              list of media records.
            format: int32
            example: 10
            default: 999
          angle:
            type: string
            description: Media angle
            example: '-90'
          width:
            type: integer
            description: Media width in pixels.
            format: int32
            example: 2560
          height:
            type: integer
            description: Media height in pixels.
            format: int32
            example: 1600
          published:
            type: boolean
            description: >-
              Instead of deleting the media, choose to un-publish it instead for
              later re-use. Could be you keep seasonal images of the property.
            example: true
            default: false
          category:
            type: string
            description: >-
              Supported OTA specification `PIC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '1'
          descriptions:
            type: array
            description: >-
              Localized media captions to give user some context about where this
              media was taken.
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          lifestyleType:
            type: string
            description: >-
              Associate this media with a specific lifestyle type. A user
              searching and filtering inventory based on lifestyles can be shown
              relevant media first.
            example: LIFESTYLE_HEALTH_FITNESS
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
          attribution:
            type: array
            description: Whether image has attribution properties
            items:
              $ref: '#/components/schemas/ImageAttribution_Affiliate'
          isLandscape:
            type: boolean
            description: True if media width is greater or equal to height
            example: true
        description: Multimedia that contains less information than Multimedia object
      Social_Affiliate:
        type: object
        properties:
          type:
            type: string
            description: Type of social network.
            enum:
              - FACEBOOK
              - INSTAGRAM
              - SKYPE
              - TRIP_ADVISOR
              - TWITTER
              - GOOGLE_PLUS
              - WHATSAPP
              - LINE
              - WECHAT
              - VIBER
              - SNAPCHAT
              - WEIBO
              - RENREN
              - WEBSITE
              - QQ
              - TIKTOK
          location:
            type: string
            description: URL or social network identifier to social network profile
          enabled:
            type: boolean
            description: Whether social network is available for use.
        description: Social network
      StaticSellerListItemView_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Unique document identifier
            format: uuid
            readOnly: true
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
            readOnly: true
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
            readOnly: true
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            readOnly: true
            example: 12
          staticSellerListItem:
            $ref: '#/components/schemas/StaticSellerListItem_Affiliate'
      StaticSellerListItem_Affiliate:
        type: object
        properties:
          identifier:
            type: string
            description: Identifier
          parent:
            $ref: '#/components/schemas/StaticSellerList_Affiliate'
          inventory:
            $ref: '#/components/schemas/Inventory_Affiliate'
          hotel:
            $ref: '#/components/schemas/HotelOnMap_Affiliate'
          sort:
            type: integer
            description: Sort key
            format: int32
      StaticSellerListView_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Unique document identifier
            format: uuid
            readOnly: true
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
            readOnly: true
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
            readOnly: true
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            readOnly: true
            example: 12
          staticSellerList:
            $ref: '#/components/schemas/StaticSellerList_Affiliate'
        description: Curated list object
      StaticSellerListWrapper_Affiliate:
        type: object
        properties:
          list:
            $ref: '#/components/schemas/StaticSellerListView_Affiliate'
          items:
            type: array
            description: Travel inventory items contained in list
            items:
              $ref: '#/components/schemas/StaticSellerListItemView_Affiliate'
        description: Contains both the curated list and all its items.
      StayDateRateQualifier_Affiliate:
        type: object
        description: Restrict promotion to specific stay dates the user wants to arrive.
      SubCountry_Affiliate:
        type: object
        properties:
          name:
            type: string
            description: Sub-country name
            example: New York
          asciiName:
            type: string
            description: Sub-country ascii name
            example: New York
          geoNameId:
            type: string
            description: Sub-country GeoNames identifier
            example: '5128638'
        description: Country subdivision such as a state or province
      SubSubCountry_Affiliate:
        type: object
        properties:
          name:
            type: string
          asciiName:
            type: string
          geoNameId:
            type: string
        description: Country sub sub division
      TimezoneRateQualifier_Affiliate:
        type: object
        description: >-
          Restrict promotion to specific time zones. See [Geo-IP timezone geoname
          data](https://api.wink.travel)
      VariableCharge_Affiliate:
        type: object
      CopyMoveStaticSellerListItemRequest_Affiliate:
        required:
          - targetListIdentifier
        type: object
        properties:
          targetListIdentifier:
            type: string
      UpsertSellerUrlRequest_Affiliate:
        required:
          - channelInventoryIdentifier
          - descriptions
          - engineConfigurationIdentifier
          - inventoryType
          - keywords
          - multimediaIdentifiers
          - sellerUrlName
          - supplierIdentifier
          - theme
          - transactionalItemIdentifier
        type: object
        properties:
          sellerUrlName:
            type: string
            description: Descriptive name of this url for seller use only
            example: My Bali Villa
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Localized link descriptions
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Keywords
            example:
              - bali
            items:
              type: string
              description: Keywords
              example: '["bali"]'
          twitterAccount:
            type: string
            description: Twitter account is used with OpenGraph data
            example: '@travelikoworld'
          facebookAppId:
            type: string
            description: Facebook APP ID is used with OpenGraph data
            example: '19827398721938798237'
          theme:
            type: string
            description: Url theme controls the look and feel of the ad banner.
            example: THEME_1
            enum:
              - THEME_1
          inventoryType:
            type: string
            description: Inventory type
            example: GUEST_ROOM
            enum:
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ADD_ON
              - ATTRACTION
              - ACTIVITY
              - PLACE
          supplierIdentifier:
            type: string
            description: The entity supplying the inventory. Usually a hotel.
            example: hotel-1
          channelInventoryIdentifier:
            type: string
            description: Selected inventory record
            example: channel-inventory-1
          transactionalItemIdentifier:
            type: string
            description: >-
              The transactional item to retrieve pricing for. If left empty, will
              find the cheapest priced item.
            example: transactional-item-1
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Cloudinary identifiers
            example:
              - cloudinary-image-1
            items:
              type: string
              description: Cloudinary identifiers
              example: '["cloudinary-image-1"]'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: true
            default: false
          animateDelay:
            type: integer
            description: Animation delay in milliseconds
            format: int32
            example: 1000
            default: -1
        description: Upserts a SellerUrl entity
      SellerUrlView_Affiliate:
        required:
          - sellerUrl
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          sellerUrl:
            $ref: '#/components/schemas/SellerUrl_Affiliate'
      SellerUrl_Affiliate:
        required:
          - channelInventoryIdentifier
          - channelInventoryType
          - descriptions
          - engineConfigurationIdentifier
          - identifier
          - inventoryType
          - keywords
          - multimediaIdentifiers
          - sellerIdentifier
          - sellerUrlName
          - status
          - supplierIdentifier
          - theme
          - transactionalItemIdentifier
          - uniqueId
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          sellerIdentifier:
            type: string
            description: Company identifier
            format: uuid
          sellerUrlName:
            type: string
            description: Descriptive name of this url for seller use only
            example: My Bali Villa
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Localized link descriptions
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Keywords
            example:
              - bali
            items:
              type: string
              description: Keywords
              example: '["bali"]'
          uniqueId:
            type: string
            description: Unique link id
            example: HBDG87f2
          twitterAccount:
            type: string
            description: Twitter account is used with OpenGraph data
            example: '@travelikoworld'
          facebookAppId:
            type: string
            description: Facebook APP ID is used with OpenGraph data
            example: '19827398721938798237'
          theme:
            type: string
            description: Url theme controls the look and feel of the ad banner.
            example: THEME_1
            enum:
              - THEME_1
          status:
            type: string
            description: Url sell status
            example: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
              - REMOVED
          inventoryType:
            type: string
            description: Inventory type
            example: GUEST_ROOM
            enum:
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ADD_ON
              - ATTRACTION
              - ACTIVITY
              - PLACE
          channelInventoryType:
            type: string
            description: >-
              Channel inventory type is a subset of inventory type in that it does
              not include the `HOTEL` type. THe way it works is, as a seller you
              might want to sell a guest room but instead of showing the price of
              that guest room, you would like to display the best room type price
              for the property.
            example: GUEST_ROOM
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          supplierIdentifier:
            type: string
            description: The entity supplying the inventory. Usually a hotel.
            example: hotel-1
          channelInventoryIdentifier:
            type: string
            description: Selected inventory record
            example: channel-inventory-1
          transactionalItemIdentifier:
            type: string
            description: >-
              The transactional item to retrieve pricing for. If left empty, will
              find the cheapest priced item.
            example: transactional-item-1
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Cloudinary identifiers
            example:
              - cloudinary-image-1
            items:
              type: string
              description: Cloudinary identifiers
              example: '["cloudinary-image-1"]'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: true
            default: false
          animateDelay:
            type: integer
            description: Animation delay in milliseconds
            format: int32
            example: 1000
            default: -1
        description: Seller URL
      ConfigurableGeoJsonCircle_Affiliate:
        required:
          - point
          - radius
        type: object
        properties:
          radius:
            type: number
            description: Circle radius from center
            format: double
            example: 2.5
          point:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        description: A way to persist a GeoJSON circle
      ConfigurableGeoJsonPoint_Affiliate:
        required:
          - point
        type: object
        properties:
          point:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        description: A way to persist a GeoJSON map point
      ConfigurableGeoJsonPolygon_Affiliate:
        required:
          - polygon
        type: object
        properties:
          polygon:
            $ref: '#/components/schemas/GeoJsonPolygon_Affiliate'
        description: A way to persist a GeoJSON polygon
      ConfigurableGeoJsonRectangle_Affiliate:
        required:
          - rectangle
        type: object
        properties:
          rectangle:
            $ref: '#/components/schemas/GeoJsonRectangle_Affiliate'
        description: A way to persist a GeoJSON rectangle
      GeoJsonLineString_Affiliate:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              $ref: '#/components/schemas/Point_Affiliate'
      GeoJsonPolygon_Affiliate:
        type: object
        properties:
          points:
            type: array
            items:
              $ref: '#/components/schemas/Point_Affiliate'
          coordinates:
            type: array
            items:
              $ref: '#/components/schemas/GeoJsonLineString_Affiliate'
          type:
            type: string
        description: A GeoJSON polygon
      GeoJsonRectangle_Affiliate:
        required:
          - northEast
          - southWest
        type: object
        properties:
          southWest:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          northEast:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        description: A GeoJSON rectangle
      Point_Affiliate:
        type: object
        properties:
          x:
            type: number
            format: double
          'y':
            type: number
            format: double
      UpsertAdvancedMapConfigurationRequest_Affiliate:
        required:
          - center
          - displayType
          - draggable
          - engineConfigurationIdentifier
          - initialZoomLevel
          - mapHeight
          - mapMarkerColor
          - mapStyle
          - name
          - type
          - typeIdentifier
          - zoomable
        type: object
        properties:
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          name:
            type: string
            description: Name of map
            example: My lovely map
          typeIdentifier:
            type: string
            description: >-
              Inventory type identifier. Either a single channel inventory
              identifier, a list identifier or a dynamic search identifier.
            format: uuid
          type:
            type: string
            description: Type of inventory
            example: LIST
            enum:
              - SINGLE
              - LIST
              - SEARCH
          center:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          draggable:
            type: boolean
            description: User can move around / pan the map
            example: true
            default: true
          zoomable:
            type: boolean
            description: User can zoom in/out of the map
            example: true
            default: true
          initialZoomLevel:
            maximum: 21
            minimum: 0
            type: integer
            description: Valid Google maps zoom level
            format: int32
            example: 15
          mapStyle:
            type: string
            description: Map style
            example: normal
            enum:
              - normal
              - clean
              - bluish
          mapMarkerColor:
            type: string
            description: Map marker color
            example: cc2138
            enum:
              - cc2138
          mapHeight:
            minimum: 1
            type: integer
            description: Map height in pixels
            format: int32
            example: 500
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
          circles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
          rectangles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
          markers:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
          polygons:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
        description: Object to save AdvancedMapConfiguration
      AdvancedMapConfigurationView_Affiliate:
        required:
          - advancedMapConfiguration
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          advancedMapConfiguration:
            $ref: '#/components/schemas/AdvancedMapConfiguration_Affiliate'
      AdvancedMapConfiguration_Affiliate:
        required:
          - center
          - displayType
          - draggable
          - engineConfigurationIdentifier
          - identifier
          - initialZoomLevel
          - mapHeight
          - mapMarkerColor
          - mapStyle
          - name
          - ownerIdentifier
          - type
          - typeIdentifier
          - zoomable
        type: object
        properties:
          identifier:
            type: string
            description: Unique map identifier
            format: uuid
          ownerIdentifier:
            type: string
            description: Map owner identifier
            format: uuid
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          name:
            type: string
            description: Name of map
            example: My lovely map
          typeIdentifier:
            type: string
            description: >-
              Inventory type identifier. Either a single channel inventory
              identifier, a list identifier or a dynamic search identifier.
            format: uuid
          type:
            type: string
            description: Type of inventory
            example: LIST
            enum:
              - SINGLE
              - LIST
              - SEARCH
          center:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          draggable:
            type: boolean
            description: User can move around / pan the map
            example: true
            default: true
          zoomable:
            type: boolean
            description: User can zoom in/out of the map
            example: true
            default: true
          initialZoomLevel:
            maximum: 21
            minimum: 0
            type: integer
            description: Valid Google maps zoom level
            format: int32
            example: 15
          mapStyle:
            type: string
            description: Map style
            example: normal
            enum:
              - normal
              - clean
              - bluish
          mapMarkerColor:
            type: string
            description: Map marker color
            example: cc2138
            enum:
              - cc2138
          mapHeight:
            minimum: 1
            type: integer
            description: Map height in pixels
            format: int32
            example: 500
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
          circles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
          rectangles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
          markers:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
          polygons:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
        description: Advanced map configuration
      Lookup_Affiliate:
        required:
          - location
        type: object
        properties:
          identifier:
            type: string
            description: Unique lookup identifier
            format: uuid
          type:
            type: string
            description: Type of lookup
            example: CITY
            enum:
              - CITY
              - ISLAND
              - HOTEL
              - SPA
              - MEETING_ROOM
              - RESTAURANT
              - ATTRACTION
              - ACTIVITY
              - PLACE
              - COUNTRY
          typeIdentifier:
            type: string
            description: Unique lookup type identifier
            format: uuid
          name:
            type: string
            description: Name of lookup
            example: Archery on horseback
          urlName:
            type: string
            description: Url-friendly slug that uniquely identifies this lookup
            example: archery-on-horseback
          ownerIdentifier:
            type: string
            description: Lookup that is supplier inventory includes the supplier identifier
            format: uuid
          ownerName:
            type: string
            description: Lookup that is supplier inventory includes the supplier name
            example: My Chic Hotel
          cityName:
            type: string
            description: Closest city where lookup entry is located
            example: Los Angeles
          countryName:
            type: string
            description: Country where lookup entry is located
            example: United States
          subCountryName:
            type: string
            description: State where lookup entry is located
            example: California
          subSubCountryName:
            type: string
            description: County where lookup entry is located
            example: Orange County
          countryCode:
            type: string
            description: Country code
            example: US
          ownerType:
            type: string
            description: The type of owner that created this lookup
            example: HOTEL
            enum:
              - TRAVELIKO
              - HOTEL
          languageCode:
            type: string
            description: The language the lookup code was written in
            example: en-US
          sort:
            type: integer
            description: Platform-specific sort
            format: int32
            example: 2
          origin:
            type: boolean
            description: If this lookup is the origin lookup.
            example: true
          lowercaseName:
            type: string
            description: Name in lower case
            example: archery on horseback
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
        description: The destination to display ranked inventory from.
      UpsertSellerInventoryRankedListRequest_Affiliate:
        required:
          - descriptions
          - engineConfigurationIdentifier
          - keywords
          - lookup
          - sellerInventoryRankedListName
        type: object
        properties:
          sellerInventoryRankedListName:
            type: string
            description: Descriptive name of this list for seller use only
            example: My ranked list
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Contains custom title and description of grid
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: >-
                Keywords is meta data for the grid you created that can be used
                for SEO purposes.
              example: bali
          lookup:
            $ref: '#/components/schemas/Lookup_Affiliate'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds. -1 is disabled
            format: int32
            default: -1
          sort:
            type: string
            description: >-
              Determines which badge to show on the Web Component. Is also used to
              sort properties for search grids.
            example: MEMBER
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
      SellerInventoryRankedListView_Affiliate:
        required:
          - sellerInventoryRankedList
        type: object
        properties:
          id:
            type: string
            description: Unique document identifier
            format: uuid
            readOnly: true
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
            readOnly: true
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
            readOnly: true
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            readOnly: true
            example: 12
          sellerInventoryRankedList:
            $ref: '#/components/schemas/SellerInventoryRankedList_Affiliate'
      SellerInventoryRankedList_Affiliate:
        required:
          - descriptions
          - engineConfigurationIdentifier
          - identifier
          - keywords
          - lookup
          - sellerIdentifier
          - sellerInventoryRankedListName
          - status
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          sellerIdentifier:
            type: string
            description: Company identifier
            format: uuid
          sellerInventoryRankedListName:
            type: string
            description: Descriptive name of this list for seller use only
            example: My ranked list
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Contains custom title and description of grid
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: >-
                Keywords is meta data for the grid you created that can be used
                for SEO purposes.
              example: bali
          status:
            type: string
            description: Status
            example: ACTIVE
            default: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
              - REMOVED
          lookup:
            $ref: '#/components/schemas/Lookup_Affiliate'
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds. -1 is disabled
            format: int32
            default: -1
          sort:
            type: string
            description: >-
              Determines which badge to show on the Web Component. Is also used to
              sort properties for search grids.
            example: MEMBER
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
        description: SellerInventoryRankedList  object
      UpsertSellerInventoryListRequest_Affiliate:
        required:
          - descriptions
          - displayType
          - engineConfigurationIdentifier
          - keywords
          - listIdentifier
          - listType
          - sellerInventoryListName
        type: object
        properties:
          sellerInventoryListName:
            type: string
            description: Descriptive name of this list for seller use only
            example: My list
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Contains custom title and description of grid
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: >-
              Keywords is meta data for the grid you created that can be used for
              SEO purposes.
            example:
              - bali
            items:
              type: string
              description: >-
                Keywords is meta data for the grid you created that can be used
                for SEO purposes.
              example: '["bali"]'
          listType:
            type: string
            description: List type
            example: LIST
            enum:
              - SINGLE
              - LIST
              - SEARCH
          listIdentifier:
            type: string
            description: >-
              Depending on the `listType`, this is either the list / search /
              channel inventory identifier.
            format: uuid
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds. -1 is disabled
            format: int32
            default: -1
          sort:
            type: string
            description: >-
              Determines which badge to show on the Web Component. Is also used to
              sort properties for search grids.
            example: MEMBER
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
      SellerInventoryListView_Affiliate:
        required:
          - sellerInventoryList
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          sellerInventoryList:
            $ref: '#/components/schemas/SellerInventoryList_Affiliate'
      SellerInventoryList_Affiliate:
        required:
          - descriptions
          - displayType
          - engineConfigurationIdentifier
          - identifier
          - keywords
          - listIdentifier
          - listType
          - sellerIdentifier
          - sellerInventoryListName
          - status
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          sellerIdentifier:
            type: string
            description: Company identifier
            format: uuid
          sellerInventoryListName:
            type: string
            description: Descriptive name of this list for seller use only
            example: My list
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Contains custom title and description of grid
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: >-
              Keywords is meta data for the grid you created that can be used for
              SEO purposes.
            example:
              - bali
            items:
              type: string
              description: >-
                Keywords is meta data for the grid you created that can be used
                for SEO purposes.
              example: '["bali"]'
          status:
            type: string
            description: Status
            example: ACTIVE
            default: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
              - REMOVED
          listType:
            type: string
            description: List type
            example: LIST
            enum:
              - SINGLE
              - LIST
              - SEARCH
          listIdentifier:
            type: string
            description: >-
              Depending on the `listType`, this is either the list / search /
              channel inventory identifier.
            format: uuid
          animate:
            type: boolean
            description: Create an animated gif instead of a list of images
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds. -1 is disabled
            format: int32
            default: -1
          sort:
            type: string
            description: >-
              Determines which badge to show on the Web Component. Is also used to
              sort properties for search grids.
            example: MEMBER
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
        description: SellerInventoryList  object
      UpsertSellerInventoryItemRequest_Affiliate:
        required:
          - channelInventoryIdentifier
          - channelInventoryType
          - descriptions
          - displayType
          - engineConfigurationIdentifier
          - inventoryType
          - keywords
          - multimediaIdentifiers
          - sellerInventoryItemName
          - supplierIdentifier
        type: object
        properties:
          sellerInventoryItemName:
            type: string
            description: Descriptive name of this item for seller use
            example: My fave travel inventory
          engineConfigurationIdentifier:
            type: string
            description: Which configuration to use with this item
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Title and description of inventory.
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: Keywords
              example: keyword-1
          inventoryType:
            type: string
            description: The type of inventory being offer up for sale
            example: HOTEL
            enum:
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ADD_ON
              - ATTRACTION
              - ACTIVITY
              - PLACE
          channelInventoryType:
            type: string
            description: >-
              Channel inventory type is a subset of inventory type in that it does
              not include the `HOTEL` type. THe way it works is, as a seller you
              might want to sell a guest room but instead of showing the price of
              that guest room, you would like to display the best room type price
              for the property.
            example: GUEST_ROOM
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          supplierIdentifier:
            type: string
            description: Supplier / Hotel identifier that owns this inventory.
            format: uuid
          channelInventoryIdentifier:
            type: string
            description: >-
              The channel inventory record identifier describing the relationship
              between supplier and seller.
            format: uuid
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Reference identifiers to Cloudinary media assets
            example:
              - cloudinary-image-1
              - cloudinary-image-2
            items:
              type: string
              description: Reference identifiers to Cloudinary media assets
              example: '["cloudinary-image-1","cloudinary-image-2"]'
          animate:
            type: boolean
            description: >-
              Create an animated gif instead of a list of images. Feature
              currently not available. Feel free to enable and it will become
              available at a later date.
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds.
            format: int32
            example: 500
          sort:
            type: string
            description: The specific badge to display over the image on the Web Component.
            example: POPULARITY
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
      SellerInventoryItemView_Affiliate:
        required:
          - sellerInventoryItem
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          sellerInventoryItem:
            $ref: '#/components/schemas/SellerInventoryItem_Affiliate'
      SellerInventoryItem_Affiliate:
        required:
          - channelInventoryIdentifier
          - channelInventoryType
          - descriptions
          - displayType
          - engineConfigurationIdentifier
          - identifier
          - inventoryType
          - keywords
          - multimediaIdentifiers
          - sellerIdentifier
          - sellerInventoryItemName
          - status
          - supplierIdentifier
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          sellerIdentifier:
            type: string
            description: Company / Owner identifier
            format: uuid
          sellerInventoryItemName:
            type: string
            description: Descriptive name of this item for seller use
            example: My fave travel inventory
          engineConfigurationIdentifier:
            type: string
            description: Which configuration to use with this item
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Title and description of inventory.
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: Keywords
              example: keyword-1
          status:
            type: string
            description: Availability status
            example: ACTIVE
            default: ACTIVE
            enum:
              - ACTIVE
              - INACTIVE
              - REMOVED
          inventoryType:
            type: string
            description: The type of inventory being offer up for sale
            example: HOTEL
            enum:
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ADD_ON
              - ATTRACTION
              - ACTIVITY
              - PLACE
          channelInventoryType:
            type: string
            description: >-
              Channel inventory type is a subset of inventory type in that it does
              not include the `HOTEL` type. THe way it works is, as a seller you
              might want to sell a guest room but instead of showing the price of
              that guest room, you would like to display the best room type price
              for the property.
            example: GUEST_ROOM
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          supplierIdentifier:
            type: string
            description: Supplier / Hotel identifier that owns this inventory.
            format: uuid
          channelInventoryIdentifier:
            type: string
            description: >-
              The channel inventory record identifier describing the relationship
              between supplier and seller.
            format: uuid
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Reference identifiers to Cloudinary media assets
            example:
              - cloudinary-image-1
              - cloudinary-image-2
            items:
              type: string
              description: Reference identifiers to Cloudinary media assets
              example: '["cloudinary-image-1","cloudinary-image-2"]'
          animate:
            type: boolean
            description: >-
              Create an animated gif instead of a list of images. Feature
              currently not available. Feel free to enable and it will become
              available at a later date.
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds.
            format: int32
            example: 500
          sort:
            type: string
            description: The specific badge to display over the image on the Web Component.
            example: POPULARITY
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
        description: SellerInventoryItem data
      Child_Affiliate:
        required:
          - age
          - quantity
        type: object
        properties:
          quantity:
            minimum: 1
            type: integer
            description: Number of children
            format: int32
          age:
            minimum: 0
            type: integer
            description: Age of children
            format: int32
        description: Child configuration
      EngineConfigurationTheme_Affiliate:
        type: object
        properties:
          primary:
            type: string
            description: Primary color
            example: '#dc3545'
            default: '#dc3545'
          secondary:
            type: string
            description: Secondary color
            example: '#6c757d'
            default: '#6c757d'
          success:
            type: string
            description: Success color
            example: '#28a745'
            default: '#28a745'
          danger:
            type: string
            description: Danger color
            example: '#dc3545'
            default: '#dc3545'
          warning:
            type: string
            description: Warning color
            example: '#ffc107'
            default: '#ffc107'
          info:
            type: string
            description: Info color
            example: '#17a2b8'
            default: '#17a2b8'
          light:
            type: string
            description: Light color
            example: '#f8f9fa'
            default: '#f8f9fa'
          dark:
            type: string
            description: Dark color
            example: '#343a40'
            default: '#343a40'
          body:
            type: string
            description: Body color
            example: '#212529'
            default: '#212529'
          muted:
            type: string
            description: Muted color
            example: '#6c757d'
            default: '#6c757d'
          white:
            type: string
            description: White color
            example: '#ffffff'
            default: '#ffffff'
        description: >-
          Choose how you want our web components to look and more closely match
          with your own site style.
      RoomConfiguration_Affiliate:
        required:
          - adults
        type: object
        properties:
          adults:
            minimum: 1
            type: integer
            description: Number of adults
            format: int32
            example: 2
            default: 1
          children:
            type: array
            description: Children configurations
            items:
              $ref: '#/components/schemas/Child_Affiliate'
          getNumberOfAdultsDeterminedByHotelPolicy:
            type: integer
            format: int32
            writeOnly: true
          getNumberOfChildrenDeterminedByHotelPolicy:
            type: integer
            format: int32
            writeOnly: true
        description: Room Configuration
      UpsertEngineConfigurationRequest_Affiliate:
        required:
          - name
        type: object
        properties:
          name:
            type: string
            description: Engine configuration name
            example: Engine Configuration 1
          appendToPageTitle:
            type: string
            description: Whether to append text to the existing booking engine page title.
          googleAnalyticsMeasurementId:
            type: string
            description: >-
              If you want to track analytics with Google Analytics and GTM for
              your self-hosted booking engine, you need to import our [GTM
              profile](https://www.dropbox.com/s/o6rwluclvsgydma/gtm-template-2020-2.json?dl=0)
              into your GTM container and link it with your Google Analytics
              account. [More about that
              here](https://bearchoke.atlassian.net/wiki/spaces/TC/pages/2941648897/Linking+your+Google+Tag+Manager+account) 
          googleMapsAPIKey:
            type: string
            description: >-
              If you want your users to see Google Maps in your hosted booking
              engine, go to [Google
              Maps](https://console.developers.google.com/projectselector2/apis/credentials?supportedpurview=project)
              and create an API key for your site.
            example: google-maps-api-123
          tawkToKey:
            type: string
            description: >-
              If you want your users to be able to chat with you on your hosted
              booking engine, set yourself up with a [tawk.to
              account](https://dashboard.tawk.to/signup) and add your API key
              here.
            example: tawk-to-1
          defaultCurrency:
            type: string
            description: Control which currency your users see prices in initially.
            example: USD
            default: USD
          defaultLanguage:
            type: string
            description: Control which language your users see text in initially.
            example: en
            default: en
          logos:
            type: array
            description: >-
              Customize booking confirmation emails by adding a custom logo to
              your configuration.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          hostedBookingEngineUrl:
            type: string
            description: >-
              If you are self-hosting our booking engine, let us know where it is
              hosted. Note: This url needs to be secured with SSL.
            example: https://my.customtravelsite.com/book
            default: https://ota.wink.travel
          selfHosted:
            type: boolean
            description: >-
              Flag to indicate you are self-hosting our booking engine and not
              using our default booking engine url.
            example: true
            default: false
          themeColors:
            $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
          numberOfAdvanceDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long and how many days in advance
              (this field), of today's date, you want to display prices for. 2.
              Set a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 10
          numberOfStayDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long (this field) and how many days
              in advance, of today's date, you want to display prices for. 2. Set
              a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 2
          startDate:
            type: string
            description: >-
              Set a fixed itinerary start date. ONLY populate this field if you
              want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
              and `numberOfStayDays` empty.
            format: date
            example: '2021-12-24'
          endDate:
            type: string
            description: >-
              Set a fixed itinerary end date ONLY populate this field if you want
              to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
              `numberOfStayDays` empty.
            format: date
            example: '2021-12-31'
          roomConfigurations:
            type: array
            description: >-
              Control how many adults / children will be staying and how many
              rooms. Defaults to: One room, two adults.
            items:
              $ref: '#/components/schemas/RoomConfiguration_Affiliate'
          useDays:
            type: boolean
            description: >-
              if true, we use numberOfAdvanceDays / numberOfStayDays properties -
              false, we use startDate / endDate
            example: true
          promotionalCodes:
            type: array
            description: >-
              If you've received special promotional codes from suppliers to give
              to your audience, you can choose to bake these code directly into
              the price by entering them here.
            example:
              - promo-1
            items:
              type: string
              description: >-
                If you've received special promotional codes from suppliers to
                give to your audience, you can choose to bake these code directly
                into the price by entering them here.
              example: '["promo-1"]'
          sendBookingNotificationEmailsToProperty:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to properties
              because they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToBooker:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to users because
              they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToChannelManager:
            type: boolean
            description: >-
              An integrator can choose to disable notifying the property's channel
              manager. Note: This should ONLY be done for testing.
            example: true
            default: true
          wcBookClickAction:
            type: string
            description: >-
              Action to complete once a user clicks on the CTA button on
              inventory.
            example: IBE_MODAL
            enum:
              - FORWARD_TO_IBE
              - IBE_MODAL
          showUnavailableCard:
            type: boolean
            description: >-
              Show unavailable inventory card when inventory not currently for
              sale. Otherwise, it displays a normal card but without the price.
          showRankings:
            type: boolean
            description: >-
              Whether to display rankings (lifestyle, eco score and reviews) on
              hotel landing page.
      EngineConfigurationView_Affiliate:
        required:
          - engineConfiguration
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          engineConfiguration:
            $ref: '#/components/schemas/EngineConfiguration_Affiliate'
      EngineConfiguration_Affiliate:
        required:
          - identifier
          - name
          - ownerIdentifier
          - ownerName
          - subType
          - userIdentifier
        type: object
        properties:
          identifier:
            type: string
            description: Unique engine configuration identifier
            format: uuid
          name:
            type: string
            description: Engine configuration name
            example: Engine Configuration 1
          appendToPageTitle:
            type: string
            description: Whether to append text to the existing booking engine page title.
          userIdentifier:
            type: string
            description: Authenticated user identifier
            format: uuid
          ownerIdentifier:
            type: string
            description: Engine configuration record creator identifier
            format: uuid
          ownerName:
            type: string
            description: Name of company owner.
            example: Travel Tech 1
          subType:
            type: string
            description: Sales channel sub-type.
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          primary:
            type: boolean
            description: >-
              Indicates whether this configuration is primary. A primary
              configuration cannot be removed.
            example: true
            default: false
          googleAnalyticsMeasurementId:
            type: string
            description: >-
              If you want to track analytics with Google Analytics and GTM for
              your self-hosted booking engine, you need to import our [GTM
              profile](https://www.dropbox.com/s/o6rwluclvsgydma/gtm-template-2020-2.json?dl=0)
              into your GTM container and link it with your Google Analytics
              account. [More about that
              here](https://bearchoke.atlassian.net/wiki/spaces/TC/pages/2941648897/Linking+your+Google+Tag+Manager+account) 
          googleMapsAPIKey:
            type: string
            description: >-
              If you want your users to see Google Maps in your hosted booking
              engine, go to [Google
              Maps](https://console.developers.google.com/projectselector2/apis/credentials?supportedpurview=project)
              and create an API key for your site.
            example: google-maps-api-123
          tawkToKey:
            type: string
            description: >-
              If you want your users to be able to chat with you on your hosted
              booking engine, set yourself up with a [tawk.to
              account](https://dashboard.tawk.to/signup) and add your API key
              here.
            example: tawk-to-1
          defaultCurrency:
            type: string
            description: Control which currency your users see prices in initially.
            example: USD
            default: USD
          defaultLanguage:
            type: string
            description: Control which language your users see text in initially.
            example: en
            default: en
          logos:
            type: array
            description: >-
              Customize booking confirmation emails by adding a custom logo to
              your configuration.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          hostedBookingEngineUrl:
            type: string
            description: >-
              If you are self-hosting our booking engine, let us know where it is
              hosted. Note: This url needs to be secured with SSL.
            example: https://my.customtravelsite.com/book
            default: https://ota.wink.travel
          selfHosted:
            type: boolean
            description: >-
              Flag to indicate you are self-hosting our booking engine and not
              using our default booking engine url.
            example: true
            default: false
          themeColors:
            $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
          numberOfAdvanceDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long and how many days in advance
              (this field), of today's date, you want to display prices for. 2.
              Set a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 10
          numberOfStayDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long (this field) and how many days
              in advance, of today's date, you want to display prices for. 2. Set
              a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 2
          startDate:
            type: string
            description: >-
              Set a fixed itinerary start date. ONLY populate this field if you
              want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
              and `numberOfStayDays` empty.
            format: date
            example: '2021-12-24'
          endDate:
            type: string
            description: >-
              Set a fixed itinerary end date ONLY populate this field if you want
              to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
              `numberOfStayDays` empty.
            format: date
            example: '2021-12-31'
          roomConfigurations:
            type: array
            description: >-
              Control how many adults / children will be staying and how many
              rooms. Defaults to: One room, two adults.
            items:
              $ref: '#/components/schemas/RoomConfiguration_Affiliate'
          useDays:
            type: boolean
            description: >-
              if true, we use numberOfAdvanceDays / numberOfStayDays properties -
              false, we use startDate / endDate
            example: true
          promotionalCodes:
            type: array
            description: >-
              If you've received special promotional codes from suppliers to give
              to your audience, you can choose to bake these code directly into
              the price by entering them here.
            example:
              - promo-1
            items:
              type: string
              description: >-
                If you've received special promotional codes from suppliers to
                give to your audience, you can choose to bake these code directly
                into the price by entering them here.
              example: '["promo-1"]'
          sendBookingNotificationEmailsToProperty:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to properties
              because they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToBooker:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to users because
              they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToChannelManager:
            type: boolean
            description: >-
              An integrator can choose to disable notifying the property's channel
              manager. Note: This should ONLY be done for testing.
            example: true
            default: true
          wcBookClickAction:
            type: string
            description: >-
              Action to complete once a user clicks on the CTA button on
              inventory.
            example: IBE_MODAL
            enum:
              - FORWARD_TO_IBE
              - IBE_MODAL
          city:
            $ref: '#/components/schemas/GeoName_Affiliate'
          showUnavailableCard:
            type: boolean
            description: >-
              Show unavailable inventory card when inventory not currently for
              sale. Otherwise, it displays a normal card but without the price.
          showRankings:
            type: boolean
            description: >-
              Whether to display rankings (lifestyle, eco score and reviews) on
              hotel landing page.
      UpsertSyndicationSettings_Affiliate:
        required:
          - engineConfigurationIdentifier
          - intelligent
        type: object
        properties:
          intelligent:
            type: boolean
            description: >-
              Whether to treat all links as flat web links or try to embed more
              advanced data.
            example: false
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          initialDisplayType:
            type: string
            description: Which way to display the list when WinkLinks first loads
            example: LIST
            default: GRID_COLUMNS
            enum:
              - LIST
              - GRID_ROWS
              - GRID_COLUMNS
          profilePictureGeometry:
            type: string
            description: Controls how to display profile picture
            example: CIRCLE
            default: CIRCLE
            enum:
              - CIRCLE
              - RECTANGLE
      SyndicationSettings_Affiliate:
        required:
          - engineConfigurationIdentifier
          - intelligent
          - ownerIdentifier
          - userIdentifier
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          userIdentifier:
            type: string
            description: Creator of entry
            format: uuid
          ownerIdentifier:
            type: string
            description: The user's owner company this entry associates with
            format: uuid
          intelligent:
            type: boolean
            description: >-
              Whether to treat all links as flat web links or try to embed more
              advanced data.
            example: false
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          initialDisplayType:
            type: string
            description: Which way to display the list when WinkLinks first loads
            example: LIST
            default: GRID_COLUMNS
            enum:
              - LIST
              - GRID_ROWS
              - GRID_COLUMNS
          profilePictureGeometry:
            type: string
            description: Controls how to display profile picture
            example: CIRCLE
            default: CIRCLE
            enum:
              - CIRCLE
              - RECTANGLE
      KeyValuePair_Affiliate:
        required:
          - label
          - value
        type: object
        properties:
          value:
            type: string
            description: The value that should be persisted.
            example: id-1
          label:
            type: string
            description: English readable text of the value.
            example: Readable text label
        description: Extended metadata
      OpenGraphMedia_Affiliate:
        required:
          - url
        type: object
        properties:
          url:
            type: string
            description: The image url
            example: https://www.google.com/google.png
          secureUrl:
            type: string
            description: The secure url
            example: https://secure.google.com/google.png
          type:
            type: string
            description: Image content type
            example: image/jpg
          width:
            type: string
            description: Image width
            example: '1200'
          height:
            type: string
            description: Image height
            example: '630'
          alt:
            type: string
            description: Alt text
            example: Picture of Cat
        description: The media list
      UpsertSyndicationEntry_Affiliate:
        required:
          - contentUrl
          - ogType
          - sort
          - type
        type: object
        properties:
          contentUrl:
            type: string
            description: The url of this entry
            example: https://www.google.com
          sort:
            type: integer
            description: How the author wants this entry to get sorted
            format: int32
            example: 0
          type:
            type: string
            description: The syndication entry type
            example: WEB_LINK
            enum:
              - WEB_LINK
              - MAP
              - GRID
              - CARD
              - FILE
          imageList:
            type: array
            description: The image list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          videoList:
            type: array
            description: The video list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          audioList:
            type: array
            description: The audio list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          metadata:
            type: array
            description: Extended metadata
            items:
              $ref: '#/components/schemas/KeyValuePair_Affiliate'
          title:
            type: string
            description: The title of this entry
            example: MrBeast goes to town
          description:
            type: string
            description: The description of this entry
            example: And on and on he goes
          ogType:
            type: string
            description: The open graph content ogType
            example: website
          tags:
            type: array
            description: Optional user categories
            items:
              type: string
              description: Optional user categories
          media:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          locale:
            type: string
      SyndicationEntry_Affiliate:
        required:
          - contentUrl
          - description
          - ownerIdentifier
          - sort
          - title
          - type
          - userIdentifier
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          userIdentifier:
            type: string
            description: Creator of entry
            format: uuid
          ownerIdentifier:
            type: string
            description: The user's owner company this entry associates with
            format: uuid
          contentUrl:
            type: string
            description: The url of this entry
            example: https://www.google.com
          sort:
            type: integer
            description: How the author wants this entry to get sorted
            format: int32
            example: 0
          type:
            type: string
            description: The syndication entry type
            example: WEB_LINK
            enum:
              - WEB_LINK
              - MAP
              - GRID
              - CARD
              - FILE
          imageList:
            type: array
            description: The image list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          videoList:
            type: array
            description: The video list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          audioList:
            type: array
            description: The audio list
            items:
              $ref: '#/components/schemas/OpenGraphMedia_Affiliate'
          metadata:
            type: array
            description: Extended metadata
            items:
              $ref: '#/components/schemas/KeyValuePair_Affiliate'
          title:
            type: string
            description: The title of this entry
            example: MrBeast goes to town
          description:
            type: string
            description: The description of this entry
            example: And on and on he goes
          ogType:
            type: string
            description: The open graph content type
            example: website
          tags:
            type: array
            description: Optional user categories
            items:
              $ref: '#/components/schemas/KeyValuePair_Affiliate'
          media:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
      UpsertSyndicationCategory_Affiliate:
        required:
          - name
        type: object
        properties:
          name:
            type: string
            description: The name of this category
            example: Faves
      SyndicationCategory_Affiliate:
        required:
          - name
          - ownerIdentifier
          - userIdentifier
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          userIdentifier:
            type: string
            description: Creator of entry
            format: uuid
          ownerIdentifier:
            type: string
            description: The user's owner company this entry associates with
            format: uuid
          name:
            type: string
            description: The name of this category
            example: Faves
      CreateCompanyRequest_Affiliate:
        required:
          - address
          - companyType
          - name
          - type
          - url
          - vatID
        type: object
        properties:
          name:
            type: string
            description: Name of company
            example: Company 1
          legalName:
            type: string
            description: Legal name of entity if other than name
            example: Legal Company 1
          companyType:
            type: string
            description: Type of company
            example: COMPANY
            enum:
              - COMPANY
              - INDIVIDUAL
          type:
            type: string
            description: Type of company
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          vatID:
            type: string
            description: A VAT id if required
            example: vat-1
          description:
            type: string
            description: A personal message from the company.
          url:
            type: string
            description: Company's main website
            example: https://www.mymainsite.com
          address:
            $ref: '#/components/schemas/UpsertCityOnlyAddressRequest_Affiliate'
          urls:
            type: array
            description: >-
              List of all active accounts that could be used for selling or seeing
              a company's reach.
            items:
              type: string
              description: >-
                List of all active accounts that could be used for selling or
                seeing a company's reach.
      UpsertCityOnlyAddressRequest_Affiliate:
        required:
          - cityGeoNameId
        type: object
        properties:
          address1:
            type: string
            description: Address line 1
            example: 234 Near da beach
          address2:
            type: string
            description: Address line 2
            example: 'Pebble #5001'
          cityGeoNameId:
            type: string
            description: City geo name ID
            example: '897654'
          state:
            type: string
            description: State
            example: CA
          postalCode:
            type: string
            description: Postal / zip code
            example: '90210'
          county:
            type: string
            description: County
            example: Alameda county
          valid:
            type: boolean
        description: This address object only requires that cityGeoNameId be present.
        example: geo-name-1
      CompanyUser_Affiliate:
        required:
          - email
        type: object
        properties:
          email:
            type: string
            description: User email
            example: manager@me.com
          status:
            type: string
            description: Contact phone number
            example: '+12125551212'
            enum:
              - PENDING
              - ACCEPTED
              - DEACTIVATED
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          firstName:
            type: string
            description: Contact first name
            example: John
          lastName:
            type: string
            description: Contact last name
            example: Smith
          secondaryEmail:
            type: string
            description: Contact secondary Email
            example: johnsmith2@email.com
          phoneNumber:
            type: string
            description: Contact phone number
            example: '+12125551212'
          profilePictureUrl:
            type: string
            description: Profile picture is available
          name:
            type: string
      CompanyView_Affiliate:
        required:
          - company
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          company:
            $ref: '#/components/schemas/Company_Affiliate'
      Company_Affiliate:
        required:
          - address
          - approved
          - companyType
          - enabled
          - identifier
          - name
          - owner
          - type
          - url
          - urlName
          - userIdentifier
          - vatID
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          userIdentifier:
            type: string
            description: User or Registered client owner identifier that created this record
            format: uuid
          owner:
            $ref: '#/components/schemas/CompanyUser_Affiliate'
          name:
            type: string
            description: Name of company
            example: Company 1
          urlName:
            type: string
            description: Url slug of company name
            example: company-1
          legalName:
            type: string
            description: Legal name of entity if other than name
            example: Legal Company 1
          enabled:
            type: boolean
            description: Whether this company is enabled by payment.
            example: true
          approved:
            type: boolean
            description: Whether this company has been approved by KYC.
            example: true
            default: false
          companyType:
            type: string
            description: Type of company
            example: COMPANY
            enum:
              - COMPANY
              - INDIVIDUAL
          type:
            type: string
            description: Type of sales channel
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          vatID:
            type: string
            description: An optional VAT ID
            example: vat-1
          description:
            type: string
            description: A personal message from the company.
          url:
            type: string
            description: Company's main website
            example: https://www.mymainsite.com
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          managers:
            maxItems: 30
            minItems: 0
            type: array
            items:
              $ref: '#/components/schemas/CompanyUser_Affiliate'
          urls:
            type: array
            description: >-
              List of all active accounts that could be used for selling or seeing
              a company's reach.
            items:
              type: string
              description: >-
                List of all active accounts that could be used for selling or
                seeing a company's reach.
          logo:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
        description: >-
          A Company is our definition of a sales channel / affiliate. A property
          also has a company record.
      CreateSupplierUrlSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: ID of supplier url to create a syndication entry from
            format: uuid
      BooleanResponse_Affiliate:
        type: object
        properties:
          success:
            type: boolean
            description: Whether call to endpoint was successful or not.
          message:
            type: string
            description: >-
              A message indicating more textual information. Mostly used to convey
              an error message.
        description: Boolean response
      CreateStaticSellerListAndAddItemRequest_Affiliate:
        required:
          - name
        type: object
        properties:
          name:
            type: string
            description: Name of curated list
            example: Top 3 Hotels in Chiang Mai
          channelInventoryIdentifiers:
            type: array
            items:
              type: string
              description: Optionally add inventory to the list upon list creation.
              format: uuid
      AddStaticSellerListItemRequest_Affiliate:
        required:
          - channelInventoryIdentifier
        type: object
        properties:
          channelInventoryIdentifier:
            type: string
            description: The inventory ID
            format: uuid
      AddStaticSellerListSupplierRequest_Affiliate:
        required:
          - supplierIdentifier
        type: object
        properties:
          supplierIdentifier:
            type: string
      CreateSellerUrlSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: ID of seller url to create a syndication entry from
            format: uuid
      AggregateDescriptor_Affiliate:
        type: object
        properties:
          field:
            type: string
            description: Field to run aggregate function on
            example: hotel.bookings
          aggregate:
            type: string
            description: Aggregate function
            example: count
            enum:
              - count
              - sum
              - average
              - min
              - max
        description: Primitive aggregate data points
      CompositeFilterDescriptor_Affiliate:
        type: object
        properties:
          logic:
            type: string
            description: Whether to filter inclusively or exclusively
            example: and
            enum:
              - and
              - or
          filters:
            type: array
            description: Descriptors used for filtering the result set
            items:
              $ref: '#/components/schemas/FilterDescriptor_Affiliate'
        description: Descriptors used for filtering result set
      FilterDescriptor_Affiliate:
        required:
          - field
          - operator
          - value
        type: object
        properties:
          field:
            type: string
            description: Field name to filter on
            example: hotel.name
          operator:
            type: string
            description: Filter operator to use on field
            example: startsWith
            enum:
              - neq
              - eq
              - contains
              - doesnotcontain
              - isnull
              - isnotnull
              - isempty
              - isnotempty
              - startsWith
              - endsWith
              - gte
              - lte
              - gt
              - lt
              - in
              - nin
          value:
            type: object
            description: Value to filter dataset against
            example: Happy Res
          ignoreCase:
            type: boolean
            description: 'Make filter comparison case insensitive. Default: Case sensitive '
            example: true
        description: Descriptors used for filtering the result set
      GroupDescriptor_Affiliate:
        type: object
        properties:
          field:
            type: string
            description: Field to group data set on
            example: createdDate
          dir:
            type: string
            description: Group sort direction
            example: asc
            enum:
              - asc
              - desc
          aggregates:
            type: array
            description: Primitive aggregate data points
            items:
              $ref: '#/components/schemas/AggregateDescriptor_Affiliate'
        description: Descriptors to group result sets by.
      SortDescriptor_Affiliate:
        type: object
        properties:
          dir:
            type: string
            description: Descriptors used for sorting result set
            example: asc
            enum:
              - asc
              - desc
          field:
            type: string
            description: Data set field to sort on
            example: hotel.name
        description: Descriptors used for sorting result set.
      State_Affiliate:
        type: object
        properties:
          skip:
            minimum: 0
            type: integer
            description: Number of records to be skipped by the pager.
            format: int32
            example: 0
            default: 0
          take:
            maximum: 180
            minimum: 1
            type: integer
            description: Number of records to take.
            format: int32
            example: 10
            default: 30
          sort:
            type: array
            description: Descriptors used for sorting result set.
            items:
              $ref: '#/components/schemas/SortDescriptor_Affiliate'
          filter:
            $ref: '#/components/schemas/CompositeFilterDescriptor_Affiliate'
          group:
            type: array
            description: Descriptors to group result sets by.
            items:
              $ref: '#/components/schemas/GroupDescriptor_Affiliate'
      HotelOnMapView_Affiliate:
        required:
          - hotel
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          hotel:
            $ref: '#/components/schemas/HotelOnMap_Affiliate'
      PageHotelOnMapView_Affiliate:
        type: object
        properties:
          totalElements:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          content:
            type: array
            items:
              $ref: '#/components/schemas/HotelOnMapView_Affiliate'
          number:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          numberOfElements:
            type: integer
            format: int32
          pageable:
            $ref: '#/components/schemas/PageableObject_Affiliate'
          first:
            type: boolean
          last:
            type: boolean
          empty:
            type: boolean
      PageableObject_Affiliate:
        type: object
        properties:
          offset:
            type: integer
            format: int64
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          unpaged:
            type: boolean
          paged:
            type: boolean
          pageNumber:
            type: integer
            format: int32
          pageSize:
            type: integer
            format: int32
      SortObject_Affiliate:
        type: object
        properties:
          empty:
            type: boolean
          unsorted:
            type: boolean
          sorted:
            type: boolean
      UpsertSalesChannelRelationshipRequestRequest:
        required:
          - introductoryMessage
          - requestType
          - supplierIdentifier
        type: object
        properties:
          requestType:
            type: string
            description: type of relationship request
            enum:
              - DIRECT_CONNECTION
          supplierIdentifier:
            type: string
            description: >-
              Specific identifier for the company / corporation / travel agency
              that is retrieving the rates
            format: uuid
          introductoryMessage:
            type: string
            description: Owner / affiliate writes an intro to request a connection.
            example: Hi there! Please give me a discount.
        description: A request for relationship between two parties.
      SalesChannelRelationshipRequest:
        required:
          - identifier
          - introductoryMessage
          - ownerIdentifier
          - ownerName
          - requestType
          - status
          - subType
          - supplierIdentifier
          - supplierName
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          status:
            type: string
            description: status of relationship request
            enum:
              - REQUESTING
              - REJECTED
          requestType:
            type: string
            description: type of relationship request
            enum:
              - DIRECT_CONNECTION
          supplierIdentifier:
            type: string
            description: Request goes to this supplier identifier.
            format: uuid
          supplierName:
            type: string
            description: Request goes to this supplier name.
            example: Hotel 1
          subType:
            type: string
            description: What type of segment of channel is this.
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          ownerIdentifier:
            type: string
            description: >-
              Specific identifier for the company / corporation / travel agency
              that is retrieving the rates
            format: uuid
          ownerName:
            type: string
            description: Name of the owner / affiliate.
            example: Owner 1
          introductoryMessage:
            type: string
            description: Owner / affiliate writes an intro to request a connection.
            example: Hi there! Please give me a discount.
        description: A request for relationship between two parties.
      SalesChannelRelationshipRequestView:
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          user:
            $ref: '#/components/schemas/SalesChannelRelationshipRequest'
          request:
            $ref: '#/components/schemas/SalesChannelRelationshipRequest'
      PageSalesChannelView_Affiliate:
        type: object
        properties:
          totalElements:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          content:
            type: array
            items:
              $ref: '#/components/schemas/SalesChannelView_Affiliate'
          number:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          numberOfElements:
            type: integer
            format: int32
          pageable:
            $ref: '#/components/schemas/PageableObject_Affiliate'
          first:
            type: boolean
          last:
            type: boolean
          empty:
            type: boolean
      SalesChannelView_Affiliate:
        required:
          - salesChannel
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          salesChannel:
            $ref: '#/components/schemas/SalesChannel_Affiliate'
      CreateAdvancedMapConfigurationSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: ID of map to create a syndication entry from
            format: uuid
      UpsertSupplierAdvancedMapConfigurationRequest_Affiliate:
        required:
          - displayType
          - draggable
          - engineConfigurationIdentifier
          - initialZoomLevel
          - mapHeight
          - mapMarkerColor
          - mapStyle
          - name
          - supplierIdentifier
          - type
          - zoomable
        type: object
        properties:
          engineConfigurationIdentifier:
            type: string
            description: Customization identifier
            format: uuid
          name:
            type: string
            description: Name of map
            example: My lovely map
          supplierIdentifier:
            type: string
            description: >-
              Inventory type identifier. Either a single channel inventory
              identifier, a list identifier or a dynamic search identifier.
            format: uuid
          type:
            type: string
            description: Type of inventory
            example: LIST
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          draggable:
            type: boolean
            description: User can move around / pan the map
            example: true
            default: true
          zoomable:
            type: boolean
            description: User can zoom in/out of the map
            example: true
            default: true
          initialZoomLevel:
            maximum: 21
            minimum: 0
            type: integer
            description: Valid Google maps zoom level
            format: int32
            example: 15
          mapStyle:
            type: string
            description: Map style
            example: normal
            enum:
              - normal
              - clean
              - bluish
          mapMarkerColor:
            type: string
            description: Map marker color
            example: cc2138
            enum:
              - cc2138
          mapHeight:
            minimum: 1
            type: integer
            description: Map height in pixels
            format: int32
            example: 500
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
          circles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonCircle_Affiliate'
          rectangles:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonRectangle_Affiliate'
          markers:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPoint_Affiliate'
          polygons:
            type: array
            items:
              $ref: '#/components/schemas/ConfigurableGeoJsonPolygon_Affiliate'
        description: Object to save AdvancedMapConfiguration
      GooglePlaceDetailRequest_Affiliate:
        required:
          - name
          - placeId
        type: object
        properties:
          placeId:
            type: string
            description: Unique ID
            example: place-1
          name:
            type: string
            description: Name of lead
            example: Hotel X
          messageFromUser:
            type: string
            description: A personalized message from the inviter
            example: Hi there!
      SimpleAddress_Affiliate:
        required:
          - address1
          - city
          - countryCode
          - postalCode
        type: object
        properties:
          address1:
            type: string
            description: Address line 1
            example: 234 Near da beach
          address2:
            type: string
            description: Address line 2
            example: 'Pebble #5001'
          state:
            type: string
            description: State
            example: CA
          postalCode:
            type: string
            description: Postal / zip code
            example: '90210'
          county:
            type: string
            description: County
            example: Alameda county
          city:
            type: string
            description: City name
          countryCode:
            type: string
            description: Country
        description: Address information
      SupplierLead_Affiliate:
        required:
          - googleMapsUrl
          - location
          - nameInEnglish
          - placeId
          - status
          - user
          - utcOffsetMinutes
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          user:
            $ref: '#/components/schemas/KeyValuePair_Affiliate'
          owner:
            $ref: '#/components/schemas/KeyValuePair_Affiliate'
          status:
            type: string
            description: Lead status
            example: CREATED
            enum:
              - CREATED
              - IN_PROGRESS
              - INVITED
              - CLAIMED
              - REJECTED
              - INACTIVE
          placeId:
            type: string
            description: Unique ID
            example: place-1
          nameInEnglish:
            type: string
            description: Name of lead
            example: Hotel X
          nameInLocalLanguage:
            type: string
            description: Name of lead in local language
            example: Hotel X
          googleMapsUrl:
            type: string
            description: Google Maps URL of the place
          phone:
            type: string
            description: Telephone of lead
            example: +1 212 555 1212
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          addressLocal:
            $ref: '#/components/schemas/SimpleAddress_Affiliate'
          formattedAddress:
            type: string
            description: Formatted address in English
          formattedAddressLocal:
            type: string
            description: Formatted address in local language if available
          htmlAddress:
            type: string
            description: Html address in English
          htmlAddressLocal:
            type: string
            description: Html address in local language if available
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          photos:
            type: array
            description: Photos for property
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          rating:
            type: number
            description: Hotel rating
            format: float
            example: 4.5
          userRatingTotal:
            type: integer
            description: Total umber of user ratings
            format: int32
            example: 8768
          utcOffsetMinutes:
            type: integer
            description: UTC offset minutes
            format: int32
            example: 420
          website:
            type: string
            description: Website
            example: https://www.hotel-x.com
          messageFromUser:
            type: string
            description: A personalized message from the inviter
            example: Hi there!
          cityOptions:
            type: array
            items:
              $ref: '#/components/schemas/GeoName_Affiliate'
      DynamicSellerListRequest_Affiliate:
        required:
          - list
          - page
          - size
        type: object
        properties:
          list:
            $ref: '#/components/schemas/UpsertDynamicSellerListRequest_Affiliate'
          page:
            minimum: 0
            type: integer
            description: Which page to view out of total search results.
            format: int32
            example: 0
            default: 0
          size:
            maximum: 50
            minimum: 1
            type: integer
            description: How many result set to return at the time.
            format: int32
            example: 24
            default: 24
        description: Paginated search for travel inventory.
      UpsertDynamicSellerListRequest_Affiliate:
        type: object
        properties:
          name:
            type: string
            description: Name of dynamic list for when user want to persist it
          propertyName:
            type: string
            description: Regex expression filter matching on property name.
            example: Shera
          locationCategories:
            type: array
            description: >-
              Supported OTA specification `LOC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 34
            items:
              type: string
              description: >-
                Supported OTA specification `LOC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '34'
          segmentCategories:
            type: array
            description: >-
              Supported OTA specification `SEG` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 7
            items:
              type: string
              description: >-
                Supported OTA specification `SEG` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '7'
          hotelCategories:
            type: array
            description: >-
              Supported OTA specification `PCT` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 45
            items:
              type: string
              description: >-
                Supported OTA specification `PCT` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '45'
          architecturalStyles:
            type: array
            description: >-
              Supported OTA specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 7
            items:
              type: string
              description: >-
                Supported OTA specification `ARC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '7'
          inventoryName:
            type: string
            description: Regex expression filter matching on inventory name
            example: Badmint
          continents:
            type: array
            description: Continent filter
            items:
              type: string
              description: Filter on standardized continent codes
              example: NA
          countries:
            type: array
            description: Country filter
            items:
              type: string
              description: Filter on GeoNameId of country
              example: '985678'
          cities:
            type: array
            description: City filter
            items:
              type: string
              description: Filter on GeoNameId of city
              example: '985678'
          showEcoFriendly:
            type: boolean
            description: Filter on eco-friendly hotels
            example: false
            default: false
          showPetFriendly:
            type: boolean
            description: Filter on pet-friendly hotels
            example: false
            default: false
          showChildFriendly:
            type: boolean
            description: Filter on child-friendly hotels
            example: false
            default: false
          showPopular:
            type: boolean
            description: Filter on hotel that has had a certain amount of bookings
            example: false
            default: false
          showDirectOnly:
            type: boolean
            description: Filter on direct inventory
            example: false
            default: false
          lifestyles:
            type: array
            description: Filter on lifestyles
            example: LIFESTYLE_RELAX
            items:
              type: string
              enum:
                - LIFESTYLE_HEALTH_FITNESS
                - LIFESTYLE_RELAX
                - LIFESTYLE_ADULT_ONLY
                - LIFESTYLE_ADVENTURE
                - LIFESTYLE_BUSINESS
                - LIFESTYLE_LGBT
                - LIFESTYLE_SINGLE_PARENT
                - LIFESTYLE_SOLO_FEMALE
                - LIFESTYLE_BEAUTY
                - LIFESTYLE_FOODIE
                - LIFESTYLE_FAMILY
                - LIFESTYLE_ROMANCE
                - LIFESTYLE_COUPLE
                - LIFESTYLE_SOLO
                - LIFESTYLE_BACKPACKER
                - LIFESTYLE_SHOPPING
                - LIFESTYLE_SPORTS
                - LIFESTYLE_MOUNTAIN
                - LIFESTYLE_BEACH
                - LIFESTYLE_CITY
                - LIFESTYLE_COUNTRY
                - LIFESTYLE_CULTURE
                - LIFESTYLE_ECO
          hotelStars:
            type: integer
            description: Filter on number of stars the hotel has.
            format: int32
            example: 4
          aggregateReviewRating:
            type: integer
            description: Filter on aggregate review score the hotel has
            format: int32
            example: 7
          nearPoint:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          radiusInMeters:
            type: integer
            description: >-
              Use this in conjunction with `nearPoint`. Control the distance from
              point we are searching for.
            format: int64
          inventoryTypes:
            type: array
            description: Filter on inventory types
            example: GUEST_ROOM
            items:
              type: string
              enum:
                - GUEST_ROOM
                - ADD_ON
                - MEETING_ROOM
                - RESTAURANT
                - SPA
                - ATTRACTION
                - PLACE
                - ACTIVITY
          primaryOrderBy:
            type: string
            description: |
              Control how you want the search results sorted. Options are: 

              - 1: Inventory name
              - 2: Price: High to low
              - 3: Price: Low to high
              - 4: Commission: High to low
              - 5: Commission: Low to high
              - 6: Discount: High to low
              - 7: Discount: Low to high
            example: '4'
        description: Contains the caller's search criteria.
      InventorySupplier_Affiliate:
        required:
          - hotel
          - salesChannel
        type: object
        properties:
          salesChannel:
            $ref: '#/components/schemas/SalesChannel_Affiliate'
          hotel:
            $ref: '#/components/schemas/HotelOnMap_Affiliate'
      PageInventorySupplier_Affiliate:
        type: object
        properties:
          totalElements:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          content:
            type: array
            items:
              $ref: '#/components/schemas/InventorySupplier_Affiliate'
          number:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          numberOfElements:
            type: integer
            format: int32
          pageable:
            $ref: '#/components/schemas/PageableObject_Affiliate'
          first:
            type: boolean
          last:
            type: boolean
          empty:
            type: boolean
      CreateSellerInventoryRankedListSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: >-
              ID of seller inventory ranked list to create a syndication entry
              from
            format: uuid
      CreateStaticSellerListSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: ID of seller inventory item to create a syndication entry from
            format: uuid
      CreateSellerInventoryItemSyndicationEntryRequest_Affiliate:
        required:
          - identifier
        type: object
        properties:
          identifier:
            type: string
            description: ID of seller inventory item to create a syndication entry from
            format: uuid
      UpsertSupplierSellerInventoryItemRequest_Affiliate:
        required:
          - channelInventoryType
          - descriptions
          - displayType
          - engineConfigurationIdentifier
          - inventoryType
          - keywords
          - multimediaIdentifiers
          - sellerInventoryItemName
          - supplierIdentifier
        type: object
        properties:
          sellerInventoryItemName:
            type: string
            description: Descriptive name of this item for seller use
            example: My fave travel inventory
          engineConfigurationIdentifier:
            type: string
            description: Which configuration to use with this item
            format: uuid
          descriptions:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Title and description of inventory.
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          keywords:
            maxItems: 2147483647
            minItems: 1
            type: array
            items:
              type: string
              description: Keywords
              example: keyword-1
          inventoryType:
            type: string
            description: The type of inventory being offer up for sale
            example: HOTEL
            enum:
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ADD_ON
              - ATTRACTION
              - ACTIVITY
              - PLACE
          channelInventoryType:
            type: string
            description: >-
              Channel inventory type is a subset of inventory type in that it does
              not include the `HOTEL` type. THe way it works is, as a seller you
              might want to sell a guest room but instead of showing the price of
              that guest room, you would like to display the best room type price
              for the property.
            example: GUEST_ROOM
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          supplierIdentifier:
            type: string
            description: Supplier / Hotel identifier that owns this inventory.
            format: uuid
          multimediaIdentifiers:
            maxItems: 2147483647
            minItems: 1
            type: array
            description: Reference identifiers to Cloudinary media assets
            example:
              - cloudinary-image-1
              - cloudinary-image-2
            items:
              type: string
              description: Reference identifiers to Cloudinary media assets
              example: '["cloudinary-image-1","cloudinary-image-2"]'
          animate:
            type: boolean
            description: >-
              Create an animated gif instead of a list of images. Feature
              currently not available. Feel free to enable and it will become
              available at a later date.
            example: false
            default: false
          animateDelay:
            type: integer
            description: Controls animation delay in milliseconds.
            format: int32
            example: 500
          sort:
            type: string
            description: The specific badge to display over the image on the Web Component.
            example: POPULARITY
            enum:
              - MEMBER
              - PRICE_LOW_TO_HIGH
              - PRICE_HIGH_TO_LOW
              - PRICE
              - POPULARITY
              - ECO
              - EXPERIENCE
              - PERK
              - LOYALTY
              - PACKAGE
          displayType:
            type: string
            description: >-
              Indicate which initial values to display first on the front-facing
              card
            example: NATIVE
            default: NATIVE
            enum:
              - NATIVE
              - HOTEL
              - ROOM
      InventoryView_Affiliate:
        required:
          - inventory
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          inventory:
            $ref: '#/components/schemas/Inventory_Affiliate'
      PageInventoryView_Affiliate:
        type: object
        properties:
          totalElements:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          content:
            type: array
            items:
              $ref: '#/components/schemas/InventoryView_Affiliate'
          number:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          numberOfElements:
            type: integer
            format: int32
          pageable:
            $ref: '#/components/schemas/PageableObject_Affiliate'
          first:
            type: boolean
          last:
            type: boolean
          empty:
            type: boolean
      AuthenticatedUser_Affiliate:
        required:
          - email
          - firstName
          - lastName
        type: object
        properties:
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          firstName:
            type: string
            description: First name
            example: John
          lastName:
            type: string
            description: Last name
            example: Smith
          email:
            type: string
            description: Email
            format: email
            example: john.smith@email.com
          fullName:
            type: string
            description: Full name
            readOnly: true
            example: John Smith
        description: The authenticated user ID that made the payment request
        example: user-1
      Bed_Affiliate:
        required:
          - bedTypeCode
          - quantity
        type: object
        properties:
          bedTypeCode:
            type: string
            description: >-
              Indicates the type of bed(s) found in the room. Typical values would
              be Double, Twin, Queen, or King. Supported OTA specification `BED`
              code. See [OTA geoname data](https://api.wink.travel).
            example: '1'
          quantity:
            minimum: 1
            type: integer
            description: Number of beds for this bed type.
            format: int32
            example: 10
      BedroomConfiguration_Affiliate:
        required:
          - bedroomList
          - identifier
          - name
        type: object
        properties:
          identifier:
            type: string
            description: Unique identifier
            format: uuid
          name:
            type: string
            description: Name of layout
          bedroomList:
            type: array
            description: A room type can have more than one bedroom configuration.
            items:
              $ref: '#/components/schemas/Bedroom_Affiliate'
        description: Desired bedroom layout
      Bedroom_Affiliate:
        required:
          - bedList
          - type
        type: object
        properties:
          type:
            type: string
            description: Type of bedroom
            enum:
              - MASTER
              - QUEEN
              - JUNIOR
              - DORMITORY
              - BEDROOM_1
              - BEDROOM_2
              - BEDROOM_3
              - BEDROOM_4
              - BEDROOM_5
              - BEDROOM_6
              - BEDROOM_7
              - BEDROOM_8
              - BEDROOM_9
              - BEDROOM_10
          bedList:
            type: array
            description: A bedroom can have more than one bed type.
            items:
              $ref: '#/components/schemas/Bed_Affiliate'
      BeneficiaryCharge_Affiliate:
        type: object
        properties:
          type:
            type: string
            enum:
              - PERCENTAGE
              - REMAINDER
          percent:
            type: number
        description: A variable charge can be a fixed amount or a percentage.
      Beneficiary_Affiliate:
        type: object
        properties:
          accountIdentifier:
            type: string
            description: accountIdentifier of beneficiary from payment
            format: uuid
          accountName:
            type: string
            description: accountName of beneficiary that can map to an account with us
            example: Account 1
          accountEmail:
            type: string
            description: accountEmail of beneficiary that can map to an account with us
            example: account@one.com
          accountUrl:
            type: string
            description: accountUrl of beneficiary that can map to an account with us
            example: https://some.url
          type:
            type: string
            description: The type of beneficiary payment.
            enum:
              - COMMISSION
              - PLATFORM_FEE
              - SALE
              - TRIP_PAY
          amountDue:
            $ref: '#/components/schemas/BeneficiaryCharge_Affiliate'
          sourceCurrency:
            type: string
            description: The source currency
            example: USD
          displayCurrency:
            type: string
            description: The display currency
            example: USD
          supplierCurrency:
            type: string
            description: The supplier currency
            example: USD
          internalCurrency:
            type: string
            description: The internal currency
            example: USD
          captureCurrency:
            type: string
            description: The capture currency
            example: USD
          sourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          displayAmount:
            type: number
            description: The total display price.
          supplierAmount:
            type: number
            description: The total supplier price.
          internalAmount:
            type: number
          captureAmount:
            type: number
            description: The total capture price.
          sourceAmountRefundModifier:
            type: number
            description: The source amount still due after a partial refund occurs.
          displayAmountRefundModifier:
            type: number
            description: The display amount still due after a partial refund occurs.
          supplierAmountRefundModifier:
            type: number
            description: The supplier amount still due after a partial refund occurs.
          internalAmountRefundModifier:
            type: number
            description: The internal amount still due after a partial refund occurs.
          captureAmountRefundModifier:
            type: number
            description: The capture amount still due after a partial refund occurs.
          netSourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          netDisplayAmount:
            type: number
            description: The total display price.
          netSupplierAmount:
            type: number
            description: The total supplier price.
          netInternalAmount:
            type: number
          netCaptureAmount:
            type: number
            description: The total capture price.
          metadata:
            type: object
            additionalProperties:
              type: string
              description: Place to add more data related to the beneficiary.
            description: Place to add more data related to the beneficiary.
      BookingAncillary_Affiliate:
        required:
          - address
          - attendees
          - commission
          - commissionable
          - contact
          - endDate
          - hotelIdentifier
          - imageIdentifier
          - imageUrl
          - localizedDescription
          - localizedName
          - name
          - price
          - pricingType
          - startDate
          - transactionalTravelInventoryIdentifier
          - type
          - typeIdentifier
        type: object
        properties:
          hotelIdentifier:
            type: string
            description: Hotel identifier
            format: uuid
          typeIdentifier:
            type: string
            description: Travel inventory identifier
            format: uuid
          transactionalTravelInventoryIdentifier:
            type: string
            description: Travel inventory identifier
            format: uuid
          name:
            type: string
            description: Name of inventory
            example: Place 1
          pricingType:
            type: string
            description: Pricing type
            example: PER_USE
            enum:
              - PER_STAY
              - PER_DAY
              - PER_NIGHT
              - PER_USE
              - PER_HOUR
              - PER_PERSON
              - PER_PERSON_PER_NIGHT
              - PER_PERSON_PER_HOUR
              - PER_ADULT
              - PER_ADULT_PER_NIGHT
              - PER_ADULT_PER_HOUR
              - PER_CHILD
              - PER_CHILD_PER_NIGHT
              - PER_CHILD_PER_HOUR
          type:
            type: string
            description: Inventory type
            example: PLACE
            enum:
              - ROOM_TYPE_ANCILLARY
              - ADD_ON
              - MEETING_ROOM
              - SPA
              - RESTAURANT
              - ACTIVITY
              - ATTRACTION
              - PLACE
          price:
            $ref: '#/components/schemas/LocalizedPrice_Affiliate'
          startDate:
            type: string
            description: Date start time when reservation was made for.
            format: date-time
          endDate:
            type: string
            description: Date end time when reservation was made for.
            format: date-time
          attendees:
            type: integer
            description: Number of guests that are part of this reservation.
            format: int32
            example: 2
            default: 1
          imageIdentifier:
            type: string
            description: Cloudinary image identifier
            example: cloudinary-image-1
          imageUrl:
            type: string
            description: Absolute URL to image of inventory
            example: https://path.to.image.com/this-is-me.jpg
          localizedName:
            type: string
            description: >-
              Name of travel inventory in traveler language (if available).
              Defaults to English.
            example: Plass 1
          localizedDescription:
            type: string
            description: >-
              Description of travel inventory in traveler language (if available).
              Defaults to English.
            example: place-1
          contact:
            $ref: '#/components/schemas/Contact_Affiliate'
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          commissionable:
            type: boolean
          commission:
            type: number
            format: float
        description: Spa reservation records.
      BookingContractItem_Affiliate:
        type: object
        properties:
          supplierItemBookingCode:
            type: string
            description: Booking code identifying the supplier line item.
            example: TP-ASDFG1234
          user:
            $ref: '#/components/schemas/GuestUser_Affiliate'
          nameInEnglish:
            type: string
            description: Name of item in English included in booking.
            example: Deluxe King
          descriptionInEnglish:
            type: string
            description: Short description in English of item included in booking.
            example: This is the best deluxe king that money can buy.
          itinerary:
            $ref: '#/components/schemas/Itinerary_Affiliate'
          pricingType:
            type: string
            description: How to calculate the total amount.
            enum:
              - PER_STAY
              - PER_DAY
              - PER_NIGHT
              - PER_USE
              - PER_HOUR
              - PER_PERSON
              - PER_PERSON_PER_NIGHT
              - PER_PERSON_PER_HOUR
              - PER_ADULT
              - PER_ADULT_PER_NIGHT
              - PER_ADULT_PER_HOUR
              - PER_CHILD
              - PER_CHILD_PER_NIGHT
              - PER_CHILD_PER_HOUR
          type:
            type: string
            description: Type of item this is.
            example: LODGING
            enum:
              - LODGING
              - RAIL
              - AIR
              - CAR
              - CRUISE
              - PACKAGE
              - ADD_ON
              - RENTAL
              - EXPERIENCE
              - ANCILLARY_BOOKING
              - ANCILLARY_FEE
          beneficiaryList:
            type: array
            items:
              $ref: '#/components/schemas/Beneficiary_Affiliate'
          payable:
            type: string
            description: When to charge for this item.
            example: PREPAY
            enum:
              - IMMEDIATE
              - ARRIVAL
              - DEPARTURE
              - AGENT
          policy:
            $ref: '#/components/schemas/SupplierContractItemPolicy_Affiliate'
          externalIdentifier:
            type: string
            description: Optional geoname externalIdentifier to remote inventory.
            example: room-type-1
          tokensEarned:
            type: integer
            description: Tokens earned for this item
            format: int64
            example: 12
          dailyRateList:
            type: array
            items:
              $ref: '#/components/schemas/DailyRate_Affiliate'
          cancelled:
            type: boolean
            description: Optional geoname externalIdentifier to remote inventory.
          sourceCurrency:
            type: string
            description: The source currency
            example: USD
          displayCurrency:
            type: string
            description: The display currency
            example: USD
          supplierCurrency:
            type: string
            description: The supplier currency
            example: USD
          internalCurrency:
            type: string
            description: The internal currency
            example: USD
          captureCurrency:
            type: string
            description: The capture currency
            example: USD
          sourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          displayAmount:
            type: number
            description: The total display price.
          supplierAmount:
            type: number
            description: The total supplier price.
          internalAmount:
            type: number
          captureAmount:
            type: number
            description: The total capture price.
          sourceAmountRefundModifier:
            type: number
            description: The source amount still due after a partial refund occurs.
          displayAmountRefundModifier:
            type: number
            description: The display amount still due after a partial refund occurs.
          supplierAmountRefundModifier:
            type: number
            description: The supplier amount still due after a partial refund occurs.
          internalAmountRefundModifier:
            type: number
            description: The internal amount still due after a partial refund occurs.
          captureAmountRefundModifier:
            type: number
            description: The capture amount still due after a partial refund occurs.
          netSourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          netDisplayAmount:
            type: number
            description: The total display price.
          netSupplierAmount:
            type: number
            description: The total supplier price.
          netInternalAmount:
            type: number
          netCaptureAmount:
            type: number
            description: The total capture price.
          metadata:
            type: object
            additionalProperties:
              type: string
              description: Place to add more data related to the booking contract item.
            description: Place to add more data related to the booking contract item.
          cancellableBySupplier:
            type: boolean
            description: >-
              Whether the booking can still be cancelled by the supplier. A
              supplier cancellation overrides the refundable
          isCancellableBySupplier:
            type: boolean
            writeOnly: true
          cancellableByTraveler:
            type: boolean
            description: Whether the booking can still be cancelled by the traveller.
          cancellableWithNoCharges:
            type: boolean
            description: >-
              Whether the booking can still be cancelled and whether cancellation
              charges might still occur.
          cancellableWithPotentialCharges:
            type: boolean
            description: >-
              Whether the booking can still be cancelled and whether cancellation
              charges might still occur.
        description: Returns the lodging item only.
      BookingContractPaymentDetails_Affiliate:
        required:
          - customerIdentifier
          - status
          - transactionIdentifier
          - vendor
          - vendorSpecific
        type: object
        properties:
          acquirerIdentifier:
            type: string
            description: Name of acquirer
            example: stripe-slovakia
          vendor:
            type: string
            description: Name of acquiring vendor
            example: STRIPE
            enum:
              - STRIPE
              - AGENT
              - NMI
              - WISE
          transactionIdentifier:
            type: string
            description: >-
              Unique transaction id from the vendor upon a successful sale. Agent
              adds their transaction identifier.
            example: tx-1
          customerIdentifier:
            type: string
            description: >-
              Unique customer id from the vendor. Agent adds their own customer
              identifier.
            example: customer-1
          status:
            type: string
            description: >-
              Unique transaction id from the vendor upon a successful sale. Agent
              adds their transaction identifier.
            example: INITIALIZED
            enum:
              - INITIALIZED
              - PROCESSING
              - SUCCEEDED
              - FAILED
          agentInvoicedDate:
            type: string
            description: The date/time the invoice was generated
            format: date-time
          agentInvoiceIdentifier:
            type: string
            description: The specific invoice this booking was registered on
            example: invoice-1
          redirectUrl:
            type: string
            description: Where to redirect to after payment [in-]complete
          fees:
            type: array
            items:
              $ref: '#/components/schemas/Fee_Affiliate'
          vendorSpecific:
            type: object
            additionalProperties:
              type: string
              description: Vendor specific values that are returned in a successful response
            description: Vendor specific values that are returned in a successful response
        description: Payment details the merchant provided us at the time of payment.
      BookingContract_Affiliate:
        type: object
        properties:
          bookingContractIdentifier:
            type: string
            description: Document UUID
            format: uuid
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          federatedOrganizationIdentifier:
            type: string
            description: The auth realm owner ID
            example: owner-1
          federatedOrganizationName:
            type: string
            description: The auth realm owner name
            example: Wink
          user:
            $ref: '#/components/schemas/AuthenticatedUser_Affiliate'
          ipAddress:
            type: string
            description: Caller's IP address
            example: 111.222.333.444
          traceId:
            type: string
            description: Way to track which booking contracts were made together
            example: T-123456
          sourceUrl:
            type: string
            description: Where did the booking occur
            example: https://www.traveliko.com
          identifier:
            type: string
            description: >-
              Unique identifier used to track the contract. Create a UUID for this
              purpose.
            format: uuid
          supplierIdentifier:
            type: string
            description: Supplier identifier
            format: uuid
          supplierName:
            type: string
            description: Supplier name
            example: Supplier One
          displayPriceQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          supplierPriceQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          internalPriceQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          capturePriceQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          itemList:
            type: array
            description: Holds one booking line item for a specific supplier.
            items:
              $ref: '#/components/schemas/BookingContractItem_Affiliate'
          externalSupplierIdentifier:
            type: string
            description: >-
              Contract creator can choose to geoname this record with her own
              identifier
            example: supplier-a
          externalSupplierBookingCode:
            type: string
            description: External booking code generated by the affiliate
            example: external-booking-code-1
          payment:
            $ref: '#/components/schemas/BookingContractPaymentDetails_Affiliate'
          cancelled:
            type: boolean
            description: Optional geoname externalIdentifier to remote inventory.
            example: false
            default: false
          cancelledOn:
            type: string
            description: When the booking was cancelled.
            format: date-time
          canceller:
            type: string
            description: Type of entity that cancelled the booking.
            enum:
              - SALES_CHANNEL
              - SUPPLIER
              - TRAVELER
              - ACQUIRER
              - ADMINISTRATOR
          cancellationType:
            type: string
            description: Reason type.
            enum:
              - DUPLICATE
              - CANCELLATION
              - NO_SHOW
              - CC_INVALID
              - CC_INSUFFICIENT
              - DISCRETIONARY
          cancellerUserIdentifier:
            type: string
            description: User identifier that cancelled the entity.
          cancelReason:
            type: string
            description: Reason for cancellation.
          fundsProcessed:
            type: boolean
            description: Whether a funds transfer request has been created for this booking.
            example: false
          refunds:
            type: array
            description: >-
              An optional list of refunds that occurred with this booking. If the
              refund amount(s) is the same as the total price, the booking also
              gets cancelled.
            items:
              $ref: '#/components/schemas/Refund_Affiliate'
          payouts:
            type: array
            description: >-
              An optional list of refunds that occurred with this booking. If the
              refund amount(s) is the same as the total price, the booking also
              gets cancelled.
            items:
              $ref: '#/components/schemas/Payout_Affiliate'
          sourceCurrency:
            type: string
            description: The source currency
            example: USD
          displayCurrency:
            type: string
            description: The display currency
            example: USD
          supplierCurrency:
            type: string
            description: The supplier currency
            example: USD
          internalCurrency:
            type: string
            description: The internal currency
            example: USD
          captureCurrency:
            type: string
            description: The capture currency
            example: USD
          sourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          displayAmount:
            type: number
            description: The total display price.
          supplierAmount:
            type: number
            description: The total supplier price.
          internalAmount:
            type: number
          captureAmount:
            type: number
            description: The total capture price.
          sourceAmountRefundModifier:
            type: number
            description: The source amount still due after a partial refund occurs.
          displayAmountRefundModifier:
            type: number
            description: The display amount still due after a partial refund occurs.
          supplierAmountRefundModifier:
            type: number
            description: The supplier amount still due after a partial refund occurs.
          internalAmountRefundModifier:
            type: number
            description: The internal amount still due after a partial refund occurs.
          captureAmountRefundModifier:
            type: number
            description: The capture amount still due after a partial refund occurs.
          netSourceAmount:
            type: number
            description: The total initial price as quoted in the original TripPay contract.
          netDisplayAmount:
            type: number
            description: The total display price.
          netSupplierAmount:
            type: number
            description: The total supplier price.
          netInternalAmount:
            type: number
          netCaptureAmount:
            type: number
            description: The total capture price.
          totalTokensEarned:
            type: integer
            description: Total amount of tokens minted on this contract.
            format: int64
          metadata:
            type: object
            additionalProperties:
              type: string
              description: Place to add more data related to the booking contract.
            description: Place to add more data related to the booking contract.
          hasRefunds:
            type: boolean
            description: Indicates whether any refund in any state is present.
          totalTripPayFeeInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
            format: float
          originalCommissionsInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
          originalFeesInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
          totalCommissionsInPercentWithRefund:
            type: number
            description: All amounts that are not of type SALE
            format: float
          totalFeesInPercentWithRefund:
            type: number
            description: All amounts that are not of type SALE
            format: float
          totalTripPayFeeInPercentWithRefund:
            type: number
            description: All amounts that are not of type SALE
            format: float
          lodging:
            $ref: '#/components/schemas/BookingContractItem_Affiliate'
          cancellableBySupplier:
            type: boolean
            description: >-
              Whether the booking can still be cancelled completely by the
              supplier.
          cancellableByTraveler:
            type: boolean
            description: >-
              Whether the booking can still be cancelled completely by the
              traveller.
          netTotalFeesSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalTripPayFeeSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalTripPayFeeSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netCommissionableTotalSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          commissionableTotalSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesAndCommissionsSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesAndCommissionsSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          cancellableWithNoCharges:
            type: boolean
            description: Whether the cancellation comes at no cost to the traveler.
          isCancellableWithPotentialCharges:
            type: boolean
            description: >-
              Whether a cancellation comes with partial charges. I.e. Only some of
              the items in contract are not fully refundable.
            writeOnly: true
          netCommissionableTotalSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netCommissionableTotalCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netCommissionableTotalDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netCommissionableTotalInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesAndCommissionsSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesAndCommissionsCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesAndCommissionsDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesAndCommissionsInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalFeesInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalTripPayFeeSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalTripPayFeeCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalTripPayFeeDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalTripPayFeeInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalSalesSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalSalesCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalSalesDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalSalesSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalSalesInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          commissionableTotalSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          commissionableTotalCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          commissionableTotalDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          commissionableTotalInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesAndCommissionsSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesAndCommissionsCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesAndCommissionsDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesAndCommissionsInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalFeesInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalTripPayFeeSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalTripPayFeeCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalTripPayFeeDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalTripPayFeeInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalSalesSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalSalesCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalSalesDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalSalesSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalSalesInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          fundsAvailableDate:
            type: string
            description: Returns the date the funds will be released to the customer.
            format: date
          totalFeesInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
            format: float
          totalCommissionsInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
            format: float
          totalFeesAndCommissionsInPercentWithRefund:
            type: number
            description: All amounts that are not of type SALE
            format: float
          totalFeesAndCommissionsInPercent:
            type: number
            description: All amounts that are not of type SALE before a refund was applied
            format: float
          netTotalCustomersSourceAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalCustomersCaptureAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalCustomersDisplayAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalCustomersSupplierAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          netTotalCustomersInternalAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          hasSuccessfulRefunds:
            type: boolean
            description: Indicates whether a successful refund is present.
          hasPendingRefunds:
            type: boolean
            description: Indicates whether a pending refund is present.
          hasFailedRefunds:
            type: boolean
            description: Indicates whether a failed refund is present.
        description: Booking contract created by TripPay
      BookingUserAddress_Affiliate:
        required:
          - address1
          - city
          - postalCode
        type: object
        properties:
          address1:
            type: string
            description: Address line 1
            example: 234 Near da beach
          address2:
            type: string
            description: Address line 2
            example: 'Pebble #5001'
          city:
            type: string
            description: City name
            example: Los Angeles
          state:
            type: string
            description: State
            example: CA
          postalCode:
            type: string
            description: Postal / zip code
            example: '90210'
          country:
            type: string
            description: Country
            example: US
          fullAddress:
            type: string
            description: Full address
            example: '234 Near da beach, Pebble #5001, Los Angeles, CA 90210, US'
        description: Address entered during booking process
      BookingUser_Affiliate:
        required:
          - email
          - firstName
          - lastName
        type: object
        properties:
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          firstName:
            type: string
            description: First name
            example: John
          lastName:
            type: string
            description: Last name
            example: Smith
          email:
            type: string
            description: Email
            format: email
            example: john.smith@email.com
          telephone:
            type: string
            description: Telephone
            example: +1 212 555 1212
          address:
            $ref: '#/components/schemas/BookingUserAddress_Affiliate'
          profile:
            $ref: '#/components/schemas/Profile_Affiliate'
          fullName:
            type: string
            description: Full name
            readOnly: true
            example: John Smith
        description: User details for the authenticated person that made the booking.
      BookingView_Affiliate:
        required:
          - booking
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          booking:
            $ref: '#/components/schemas/Booking_Affiliate'
      Booking_Affiliate:
        required:
          - address
          - bookingCode
          - contactInfo
          - date
          - emailHeaderLogoUrl
          - engineConfiguration
          - groupIdentifier
          - hotel
          - hotelImageUrl
          - identifier
          - roomImageUrl
          - serverUrl
          - user
          - userSession
        type: object
        properties:
          creation:
            type: string
            description: >-
              Communicates whether the booking was created normally or if it
              failed or was just for testing.
            example: TEST
            default: NORMAL
            enum:
              - NORMAL
              - TEST
              - FAILED
          date:
            type: string
            description: Date and time the booking was made.
            format: date-time
          groupIdentifier:
            type: string
            description: >-
              Unique record identifier for the collection of bookings that were
              made at the same time.
            format: uuid
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          engineConfiguration:
            $ref: '#/components/schemas/EngineConfigurationBookingReport_Affiliate'
          bookingCode:
            type: string
            description: >-
              Unique user-friendly booking geoname. This code should be used when
              corresponding with travelers.
            example: ABC1234
          user:
            $ref: '#/components/schemas/BookingUser_Affiliate'
          userSession:
            $ref: '#/components/schemas/UserSession_Affiliate'
          serverUrl:
            type: string
            description: The URL the booking occurred
          contactInfo:
            $ref: '#/components/schemas/Contact_Affiliate'
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          socials:
            type: array
            description: >-
              List of all social network account property has for the traveler to
              get in touch.
            items:
              $ref: '#/components/schemas/Social_Affiliate'
          review:
            $ref: '#/components/schemas/Review_Affiliate'
          emailHeaderLogoUrl:
            type: string
            description: Full url of the image logo optimized for emails
          logoIdentifier:
            type: string
            description: Logo cloudinary identifier for potential reuse
          hotel:
            $ref: '#/components/schemas/HotelOnMap_Affiliate'
          roomStay:
            $ref: '#/components/schemas/RoomStay_Affiliate'
          specialRequests:
            type: string
            description: Free text where the traveler can add a message to the property.
          comment:
            type: string
            description: >-
              Internal comment field the payment can add and make available to
              channel manager partners.
          earlyCheckInCharge:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          lateCheckOutCharge:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          earlyCheckInChargePercent:
            type: number
            description: >-
              Early check-in charge calculated in percent of first room night
              price.
            format: float
            example: 0.05
          lateCheckOutChargePercent:
            type: number
            description: >-
              Early check-in charge calculated in percent of first room night
              price.
            format: float
            example: 0.05
          hotelImageUrl:
            type: string
            description: Absolute URL of hotel image that can be used as-is
            example: https://path.to/property-image.jpg
          roomImageUrl:
            type: string
            description: Absolute URL of room image that can be used as-is
            example: https://path.to/room-image.jpg
          commissionList:
            type: array
            description: >-
              List of all travel inventory entries that are due a commission to
              the affiliate.
            items:
              $ref: '#/components/schemas/CommissionableEntry_Affiliate'
          ancillaryList:
            type: array
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          bookingContract:
            $ref: '#/components/schemas/BookingContract_Affiliate'
          fullAddress:
            type: string
            description: Convenience data point to return the full hotel address.
            example: 204 At home lane, Singapore, Singapore 224333
          hasAddOns:
            type: boolean
            description: >-
              Convenience data point to check if any add-on offers are in this
              booking.
            example: true
          status:
            type: string
            description: >-
              Convenience data point to show which status the booking currently
              has.
            example: ACTIVE
            enum:
              - CANCELLED_BY_HOTEL
              - CANCELLED_BY_GUEST
              - CANCELLED_BY_ADMIN
              - CANCELLED_BY_SALES_CHANNEL
              - PAST
              - FUTURE
              - CANCELLED_BY_ACQUIRER
              - ACTIVE
              - FAILED
          restaurants:
            type: array
            description: Restaurant reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          hasBreakfast:
            type: boolean
            description: Convenience data point to get to breakfast quickly.
            example: true
          hasBrunch:
            type: boolean
            description: Convenience data point to get to brunch quickly.
            example: true
          hasLunch:
            type: boolean
            description: Convenience data point to get to lunch quickly.
            example: true
          hasDinner:
            type: boolean
            description: Convenience data point to get to dinner quickly.
            example: true
          hasAllInclusive:
            type: boolean
            description: Convenience data point to get to all-inclusive quickly.
            example: true
          hasAllInclusivePlusAlcohol:
            type: boolean
            description: Convenience data point to get to all-inclusive with alcohol quickly.
            example: true
          hasRoomTypeAncillaries:
            type: boolean
            description: >-
              Convenience data point to check if any room type ancillaries are in
              this booking.
            example: true
          hasFood:
            type: boolean
            description: >-
              Convenience data point to check if any food is included in this
              booking.
            example: true
          hasRestaurants:
            type: boolean
            description: >-
              Convenience data point to check if any restaurant reservations are
              included in this booking.
            example: true
          hasMeetingRooms:
            type: boolean
            description: >-
              Convenience data point to check if any meeting room reservations are
              included in this booking.
            example: true
          hasSpas:
            type: boolean
            description: >-
              Convenience data point to check if any spa reservations are included
              in this booking.
            example: true
          hasActivities:
            type: boolean
            description: >-
              Convenience data point to check if any activity reservations are
              included in this booking.
            example: true
          hasAttractions:
            type: boolean
            description: >-
              Convenience data point to check if any attractions reservations are
              included in this booking.
            example: true
          hasPlaces:
            type: boolean
            description: >-
              Convenience data point to check if any place reservations are
              included in this booking.
            example: true
          reportingDailyRateList:
            type: array
            items:
              $ref: '#/components/schemas/ReportingDailyRate_Affiliate'
          reportingAncillaryList:
            type: array
            items:
              $ref: '#/components/schemas/ReportingAncillary_Affiliate'
          reportingExtraChargeList:
            type: array
            items:
              $ref: '#/components/schemas/ReportingExtraCharge_Affiliate'
          rateSource:
            type: string
            description: Rate origin. This is usually the property channel manager.
            example: SITEMINDER
          meetingRooms:
            type: array
            description: Meeting room reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          activities:
            type: array
            description: Activity reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          attractions:
            type: array
            description: Attraction reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          places:
            type: array
            description: Place reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          roomTypeAncillaries:
            type: array
            description: Room type ancillary records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          addOns:
            type: array
            description: Add-on records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          spas:
            type: array
            description: Spa reservation records.
            items:
              $ref: '#/components/schemas/BookingAncillary_Affiliate'
          cancellableBySupplier:
            type: boolean
            description: >-
              Whether the booking can still be cancelled completely by the
              supplier.
          cancellableByTraveler:
            type: boolean
            description: >-
              Whether the booking can still be cancelled completely by the
              traveller.
        description: Booking data object
      CancellationPolicyException_Affiliate:
        required:
          - cancellationPolicy
          - cancellationPolicyIdentifier
          - endDate
          - startDate
        type: object
        properties:
          cancellationPolicyIdentifier:
            type: string
            description: Cancellation policy
            format: uuid
          cancellationPolicy:
            $ref: '#/components/schemas/CancellationPolicy_Affiliate'
          startDate:
            type: string
            description: >-
              Start date for when this cancellation policy should start to
              override the default cancellation policy.
            format: date
          endDate:
            type: string
            description: >-
              End date for when this cancellation policy should end overriding the
              default cancellation policy.
            format: date
      CancellationPolicyExceptions_Affiliate:
        required:
          - list
        type: object
        properties:
          list:
            type: array
            description: List of cancellation policy exceptions
            items:
              $ref: '#/components/schemas/CancellationPolicyException_Affiliate'
        description: >-
          Allows a property to dynamically use another cancellation policy for a
          specific date range
      CancellationPolicy_Affiliate:
        required:
          - hotelIdentifier
          - identifier
          - refundable
        type: object
        properties:
          identifier:
            type: string
            description: Unique cancellation policy identifier
            format: uuid
          hotelIdentifier:
            type: string
            description: Property this cancellation is associated with
            format: uuid
          refundable:
            type: boolean
            description: Whether this cancellation policy is refundable or not
            example: false
            default: false
          advanceCancellationFreeOfCharge:
            type: string
            description: >-
              When the cancellation policy is refundable, this flag can be set and
              indicates there is more rules involved than just a
              no-questions-asked refundable.
            example: UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            enum:
              - UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
              - UNTIL_FOURTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
              - ONE_DAY_BEFORE_ARRIVAL
              - TWO_DAYS_BEFORE_ARRIVAL
              - THREE_DAYS_BEFORE_ARRIVAL
              - FIVE_DAYS_BEFORE_ARRIVAL
              - SEVEN_DAYS_BEFORE_ARRIVAL
              - FOURTEEN_DAYS_BEFORE_ARRIVAL
              - TWENTYONE_DAYS_BEFORE_ARRIVAL
              - THIRTY_DAYS_BEFORE_ARRIVAL
              - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
              - SIXTY_DAYS_BEFORE_ARRIVAL
          refundableCancellationCharge:
            type: string
            description: >-
              If advanceCancellationFreeOfCharge rules is not honored, this
              property explains what the guest will be charged.
            example: FIFTY_PERCENT
            enum:
              - FIRST_NIGHT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SIXTY_PERCENT
              - SEVENTY_PERCENT
              - NINENTY_PERCENT
              - ONE_HUNDRED_PERCENT
          noShowCharge:
            type: string
            description: >-
              In case the 'Refundable cancellation charge' is set, a different no
              show charge can be applied.
            example: SAME_AS_CANCELLATION_FEE
            enum:
              - SAME_AS_CANCELLATION_FEE
              - ONE_HUNDRED_PERCENT_OF_TOTAL_CHARGE
          nonRefundableCancellationCharge:
            type: string
            description: >-
              When the cancellation policy is non-refundable, this flag can be set
              and indicates there is more rules involved to calculate what the
              guest will owe in case of a cancellation.
            example: SEVENTY_PERCENT
            enum:
              - FIRST_NIGHT
              - TEN_PERCENT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SEVENTY_PERCENT
          nonRefundableDeadline:
            type: string
            description: >-
              The non-refundable charge might can have a deadline. If that
              deadline passes, the guest might be charged more.
            example: SEVEN_DAYS_BEFORE_ARRIVAL
            enum:
              - ONE_DAY_BEFORE_ARRIVAL
              - TWO_DAYS_BEFORE_ARRIVAL
              - THREE_DAYS_BEFORE_ARRIVAL
              - FIVE_DAYS_BEFORE_ARRIVAL
              - SEVEN_DAYS_BEFORE_ARRIVAL
              - FOURTEEN_DAYS_BEFORE_ARRIVAL
              - TWENTYONE_DAYS_BEFORE_ARRIVAL
              - THIRTY_DAYS_BEFORE_ARRIVAL
              - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
              - SIXTY_DAYS_BEFORE_ARRIVAL
          nonRefundableAfterDeadlineCancellationCharge:
            type: string
            description: >-
              If the guest does not honor the non-refundable deadline rule, this
              charge dictates what she owes after the deadline passes.
            example: ONE_HUNDRED_PERCENT
            enum:
              - FIRST_NIGHT
              - TEN_PERCENT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SEVENTY_PERCENT
              - ONE_HUNDRED_PERCENT
          policyCode:
            type: string
        description: >-
          Based on the itinerary, the cancellation policy could be taken directly
          from the rate plan or it could be a policy exception also listed on the
          rate plan
      CommissionableEntry_Affiliate:
        required:
          - commissionPercent
          - identifier
          - name
          - type
        type: object
        properties:
          name:
            type: string
          identifier:
            type: string
          type:
            type: string
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          commissionPercent:
            type: number
            format: float
        description: >-
          List of all travel inventory entries that are due a commission to the
          affiliate.
      CustomMonetaryAmount:
        type: object
        properties:
          amount:
            type: number
          currency:
            type: string
      DailyRate_Affiliate:
        required:
          - capturePrice
          - date
          - displayPrice
          - internalPrice
          - price
          - supplierPrice
        type: object
        properties:
          date:
            type: string
            description: The date this rate is applicable for.
            format: date
            example: '2020-08-24'
          price:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          displayPrice:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          supplierPrice:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalPrice:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          capturePrice:
            $ref: '#/components/schemas/CustomMonetaryAmount'
        description: In case of LODGING, include daily rates
      DowPatternGroup_Affiliate:
        type: object
        properties:
          mon:
            type: boolean
            description: Set to `true` to enable Monday.
            example: true
          tue:
            type: boolean
            description: Set to `true` to enable Tuesday.
            example: true
          wed:
            type: boolean
            description: Set to `true` to enable Wednesday.
            example: true
          thu:
            type: boolean
            description: Set to `true` to enable Thursday.
            example: true
          fri:
            type: boolean
            description: Set to `true` to enable Friday.
            example: true
          sat:
            type: boolean
            description: Set to `true` to enable Saturday.
            example: true
          sun:
            type: boolean
            description: Set to `true` to enable Sunday.
            example: true
          disabled:
            type: boolean
            description: >-
              Convenience property to quickly determine if this existing object
              has any active days enabled.
            example: true
      EngineConfigurationBookingReport_Affiliate:
        required:
          - identifier
          - name
          - ownerIdentifier
          - ownerName
          - subType
          - userIdentifier
        type: object
        properties:
          identifier:
            type: string
            description: Unique engine configuration identifier
            format: uuid
          name:
            type: string
            description: Engine configuration name
            example: Engine Configuration 1
          userIdentifier:
            type: string
            description: Authenticated user identifier
            format: uuid
          ownerIdentifier:
            type: string
            description: Engine configuration record creator identifier
            format: uuid
          ownerName:
            type: string
            description: Name of company owner.
            example: Travel Tech 1
          subType:
            type: string
            description: Sales channel sub-type.
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          defaultCurrency:
            type: string
            description: Control which currency your users see prices in initially.
            example: USD
            default: USD
          defaultLanguage:
            type: string
            description: Control which language your users see text in initially.
            example: en
            default: en
          logos:
            type: array
            description: >-
              Customize booking confirmation emails by adding a custom logo to
              your configuration.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          hostedBookingEngineUrl:
            type: string
            description: >-
              If you are self-hosting our booking engine, let us know where it is
              hosted. Note: This url needs to be secured with SSL.
            example: https://my.customtravelsite.com/book
            default: https://ota.wink.travel
          selfHosted:
            type: boolean
            description: >-
              Flag to indicate you are self-hosting our booking engine and not
              using our default booking engine url.
            example: true
            default: false
          themeColors:
            $ref: '#/components/schemas/EngineConfigurationTheme_Affiliate'
          numberOfAdvanceDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long and how many days in advance
              (this field), of today's date, you want to display prices for. 2.
              Set a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 10
          numberOfStayDays:
            type: integer
            description: >-
              You can control the initial itinerary date used to retrieve travel
              inventory prices. You can do it in one of two ways: 1. Dynamically
              set the date by indicating how long (this field) and how many days
              in advance, of today's date, you want to display prices for. 2. Set
              a fixed date to display prices for. Option 1 is the most shared.
              Option 2 is for when you want to create a new customization and
              apply it to a specific event that occurs on a specific date. If you
              don't use either of these options, the itinerary will default to
              today's date with one night stay. ONLY populate this field if you
              want to control the itinerary date. Also, leave `startDate` and
              `endDate` empty.
            format: int32
            example: 2
          startDate:
            type: string
            description: >-
              Set a fixed itinerary start date. ONLY populate this field if you
              want to fix the itinerary date. Also, leave `numberOfAdvanceDays`
              and `numberOfStayDays` empty.
            format: date
            example: '2021-12-24'
          endDate:
            type: string
            description: >-
              Set a fixed itinerary end date ONLY populate this field if you want
              to fix the itinerary date. Also, leave `numberOfAdvanceDays` and
              `numberOfStayDays` empty.
            format: date
            example: '2021-12-31'
          roomConfigurations:
            type: array
            description: >-
              Control how many adults / children will be staying and how many
              rooms. Defaults to: One room, two adults.
            items:
              $ref: '#/components/schemas/RoomConfiguration_Affiliate'
          useDays:
            type: boolean
            description: >-
              if true, we use numberOfAdvanceDays / numberOfStayDays properties -
              false, we use startDate / endDate
            example: true
          promotionalCodes:
            type: array
            description: >-
              If you've received special promotional codes from suppliers to give
              to your audience, you can choose to bake these code directly into
              the price by entering them here.
            example:
              - promo-1
            items:
              type: string
              description: >-
                If you've received special promotional codes from suppliers to
                give to your audience, you can choose to bake these code directly
                into the price by entering them here.
              example: '["promo-1"]'
          sendBookingNotificationEmailsToProperty:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to properties
              because they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToBooker:
            type: boolean
            description: >-
              An integrator can choose to disable outgoing emails to users because
              they want to do that themselves.
            example: true
            default: true
          sendBookingNotificationEmailsToChannelManager:
            type: boolean
            description: >-
              An integrator can choose to disable notifying the property's channel
              manager. Note: This should ONLY be done for testing.
            example: true
            default: true
          wcBookClickAction:
            type: string
            description: >-
              Action to complete once a user clicks on the CTA button on
              inventory.
            example: IBE_MODAL
            enum:
              - FORWARD_TO_IBE
              - IBE_MODAL
          city:
            $ref: '#/components/schemas/GeoName_Affiliate'
          showUnavailableCard:
            type: boolean
            description: >-
              Show unavailable inventory card when inventory not currently for
              sale. Otherwise, it displays a normal card but without the price.
          showRankings:
            type: boolean
            description: >-
              Whether to display rankings (lifestyle, eco score and reviews) on
              hotel landing page.
        description: >-
          Which engine configuration record did the entity application used to
          facilitate in making this booking happen.
      ExtraCharge_Affiliate:
        title: Items
        type: object
        properties:
          ratePlanLevelFee:
            $ref: '#/components/schemas/RatePlanLevelFee_Affiliate'
          unitPrice:
            $ref: '#/components/schemas/LocalizedPrice_Affiliate'
          price:
            $ref: '#/components/schemas/LocalizedPrice_Affiliate'
        description: List of extra charges that applies to the rate plan.
      ExtraCharges_Affiliate:
        type: object
        properties:
          items:
            title: Items
            type: array
            description: List of extra charges that applies to the rate plan.
            items:
              $ref: '#/components/schemas/ExtraCharge_Affiliate'
          userSpecifiedCurrencyTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
        description: Rate plan-level extra charges
      Fee_Affiliate:
        required:
          - description
          - fee
          - identifier
          - type
        type: object
        properties:
          identifier:
            type: string
            description: Unique system ID.
            format: uuid
          fee:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          type:
            type: string
            description: Type of fee
            enum:
              - ACQUIRING
              - FX
              - TAX
          description:
            type: string
            description: Withdrawal fee description
        description: Fees associated with this booking contract.
      GuestRoom_Affiliate:
        required:
          - active
          - address
          - bathroomCount
          - bedroomConfigurationList
          - bookable
          - commissionable
          - composite
          - compositeCount
          - contact
          - descriptions
          - featuredInd
          - hotelIdentifier
          - identifier
          - includedAdultOccupancy
          - includedChildOccupancy
          - livingRoomCount
          - location
          - maxAdultOccupancy
          - maxChildOccupancy
          - maxCribs
          - maxOccupancy
          - maxRollaways
          - minOccupancy
          - multimedias
          - name
          - nonSmoking
          - pricePoint
          - proximityCode
          - quantity
          - roomArchitectureCode
          - roomCategory
          - roomClassificationCode
          - roomLocationCode
          - roomViewCode
          - sharedRoomInd
          - size
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          hotelIdentifier:
            type: string
            description: Hotel identifier.
            format: uuid
          featuredInd:
            type: boolean
            description: >-
              Indicates whether this inventory is featured. Use this flag as a way
              to signify that this inventory is special.
            example: false
          lifestyleType:
            type: string
            description: >-
              Indicate the type of lifestyle this inventory should be associated
              with.
            example: LIFESTYLE_HEALTH_FITNESS
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          descriptions:
            type: array
            description: Localized descriptions describing inventory.
            items:
              $ref: '#/components/schemas/SimpleDescription_Affiliate'
          multimedias:
            type: array
            description: List of images / videos of inventory.
            items:
              $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
          contact:
            $ref: '#/components/schemas/Contact_Affiliate'
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          commissionable:
            type: boolean
            description: >-
              Indicate whether sales channels receive commission for selling this
              inventory.
            example: true
            default: true
          name:
            type: string
            description: Internal name of inventory.
            example: Archery lesson
          proximityCode:
            type: string
            description: >-
              Supported OTA specification `PRX` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '1'
          sort:
            type: integer
            description: Use this property to sort an inventory in a list of activities.
            format: int32
            example: 1
          minAgeAppropriateCode:
            type: string
            description: >-
              Supported OTA specification `AQC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '1'
          bookable:
            type: boolean
            description: >-
              Indicates if this inventory can be added to a booking or if it is
              read-only marketing material only.
            example: true
            default: true
          active:
            type: boolean
            description: Modify inventory availability with this flag.
            example: true
            default: true
          disabilityFeatures:
            type: array
            description: >-
              Supported OTA specification `PHY` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
            items:
              type: string
          securityFeatures:
            type: array
            description: >-
              Supported OTA specification `SEC` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
            items:
              type: string
          socials:
            type: array
            description: Social network accounts for inventory (if applicable).
            items:
              $ref: '#/components/schemas/Social_Affiliate'
          pricePoint:
            type: string
            description: Level of expensiveness.
            example: THREE
            default: THREE
            enum:
              - HALF
              - ONE
              - ONE_HALF
              - TWO
              - TWO_HALF
              - THREE
              - THREE_HALF
              - FOUR
              - FOUR_HALF
              - FIVE
          recognitionList:
            type: array
            description: Inventory-level recognition.
            items:
              $ref: '#/components/schemas/TravelInventoryRecognition_Affiliate'
          maxOccupancy:
            minimum: 1
            type: integer
            description: Maximum number of guest allowed in a room type.
            format: int32
            example: 2
            default: 2
          minOccupancy:
            minimum: 1
            type: integer
            description: Minimum number of guests allowed in a room type.
            format: int32
            example: 1
            default: 1
          quantity:
            minimum: 1
            type: integer
            description: Defines the number of rooms of this type
            format: int32
            example: 40
          nonSmoking:
            type: boolean
            description: Non-smoking indicator
            example: true
          bedroomConfigurationList:
            type: array
            description: A room type can have more than one bed configuration.
            items:
              $ref: '#/components/schemas/BedroomConfiguration_Affiliate'
          size:
            minimum: 1
            type: number
            description: Number of square meters that defines the size of this room type.
            format: float
            example: 55
          maxAdultOccupancy:
            minimum: 1
            type: integer
            description: Maximum number of adults allowed in a room type.
            format: int32
            example: 1
            default: 2
          maxChildOccupancy:
            minimum: 0
            type: integer
            description: Maximum number of children allowed in a room type.
            format: int32
            example: 0
            default: 0
          bathroomCount:
            minimum: 0
            type: integer
            description: Number of bathrooms
            format: int32
            example: 0
            default: 1
          livingRoomCount:
            minimum: 0
            type: integer
            description: Number of living rooms
            format: int32
            example: 0
            default: 1
          maxRollaways:
            minimum: 0
            type: integer
            description: Maximum number of rollaway beds allowed in this room type.
            format: int32
            example: 0
            default: 0
          roomCategory:
            type: string
            description: >-
              Indicates the category of the room. Typical values would be
              Moderate, Standard, or Deluxe. Supported OTA specification `SEG`
              code. See [OTA geoname data](https://api.wink.travel)
            example: '1'
          floor:
            type: string
            description: Floor an which a room is located
          roomLocationCode:
            type: string
            description: >-
              Indicates the location of the room within the hotel structure.
              Typical values would be "Near Exit","Close to elevator", "Low Floor"
              or "High Floor". Supported OTA specification `RLT` code. See [OTA
              geoname data](https://api.wink.travel)
            example: '1'
          roomViewCode:
            type: string
            description: >-
              Indicates the view of the room. Typical values would be "Ocean
              view", "Pool view" or "Garden View". Supported OTA specification
              `RVT` code. See [OTA geoname data](https://api.wink.travel)
            example: '1'
          composite:
            type: boolean
            description: Indicates that the room (suite) is a composite of smaller units.
            example: false
            default: false
          compositeCount:
            minimum: 0
            type: integer
            description: >-
              Number of rooms of this room type that makes up a larger unit
              (composite) such as a two bedroom suite could be comprised of two
              king rooms plus other room types. A 0 means disabled.
            format: int32
            example: 2
            default: 0
          roomClassificationCode:
            type: string
            description: >-
              Specifies the room classification (e.g., cabin, apartment).
              Supported OTA specification `GRI` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '1'
          roomArchitectureCode:
            type: string
            description: >-
              Specifies the architectural style of a room. Supported OTA
              specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: '1'
          roomGender:
            type: string
            description: >-
              Used to request or specify a gender assignment for a room. Note:
              Typically used by Hosteliers.
            example: Female
            default: Unknown
            enum:
              - Male
              - Female
              - MaleAndFemale
              - Unknown
          sharedRoomInd:
            type: boolean
            description: >-
              If TRUE, the room requires or has sharing available. Note: Typically
              used by Hosteliers.
            example: false
            default: false
          maxCribs:
            minimum: 0
            type: integer
            description: Maximum number of cribs allowed in a room type.
            format: int32
            example: 1
            default: 0
          amenities:
            type: array
            description: >-
              Collection of room amenity items available to the guest. Supported
              OTA specification `RMA` code. See [OTA geoname
              data](https://api.wink.travel)
            example:
              - '1'
              - '7'
            items:
              type: string
          includedAdultOccupancy:
            minimum: 0
            type: integer
            description: The number of pax the room price was meant for
            format: int32
            example: 2
            default: 2
          includedChildOccupancy:
            minimum: 0
            type: integer
            description: The number of children the room price was meant for
            format: int32
            example: 0
            default: 0
        description: Guest room details.
      GuestUser_Affiliate:
        required:
          - email
          - firstName
          - lastName
        type: object
        properties:
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          firstName:
            type: string
            description: First name
            example: John
          lastName:
            type: string
            description: Last name
            example: Smith
          email:
            type: string
            description: Email
            format: email
            example: john.smith@email.com
          telephone:
            type: string
            description: Telephone
            example: +1 212 555 1212
          address:
            $ref: '#/components/schemas/BookingUserAddress_Affiliate'
          fullName:
            type: string
            description: Full name
            readOnly: true
            example: John Smith
      IPLocation_Affiliate:
        type: object
        properties:
          cityName:
            type: string
          cityGeoNameId:
            type: integer
            format: int64
          countryName:
            type: string
          countryCode:
            type: string
          countryGeoNameId:
            type: integer
            format: int64
          continentName:
            type: string
          continentCode:
            type: string
          continentGeoNameId:
            type: integer
            format: int64
          timezone:
            type: string
          longitude:
            type: number
            format: double
          latitude:
            type: number
            format: double
      Itinerary_Affiliate:
        required:
          - adults
          - children
          - endDate
          - startDate
        type: object
        properties:
          startDate:
            type: string
            description: Start date
            format: date-time
          endDate:
            type: string
            description: End date
            format: date-time
          adults:
            minimum: 1
            type: integer
            description: Number of adults
            format: int32
          children:
            minimum: 0
            type: integer
            description: Number of children
            format: int32
          guests:
            type: integer
            description: Total number of adults and children
            format: int32
          nights:
            type: integer
            description: Total number of room nights
            format: int64
          hours:
            type: integer
            description: >-
              Number of hours between start and end dates. Used for itineraries
              that require bookings that occur within hours and not days. E.g.
              Meeting room reservation.
            format: int64
      LocalizedPrice_Affiliate:
        required:
          - internalBaseTotal
          - sourceBaseTotal
          - sourceToInternalCurrencyQuote
          - sourceToUserCurrencyQuote
          - userSpecifiedCurrencyBaseTotal
        type: object
        properties:
          sourceToUserCurrencyQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          sourceToInternalCurrencyQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          userSpecifiedCurrencyBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          userSpecifiedCurrencyPromotionalModifier:
            type: number
            description: Promotional modifiers in user specified currency
            example: -40
          sourcePromotionalModifier:
            type: number
            description: Promotional modifiers in hotel currency
            example: -40
          internalPromotionalModifier:
            type: number
            description: Promotional modifiers in wink currency
            example: -40
          userSpecifiedCurrencyPremiumModifier:
            type: number
            description: Premium modifiers in user specified currency
            example: 40
          sourcePremiumModifier:
            type: number
            description: Premium modifiers in hotel currency
            example: 40
          internalPremiumModifier:
            type: number
            description: Premium modifiers in wink currency
            example: 40
          userSpecifiedCurrencyChannelModifier:
            type: number
            description: Channel / Membership modifier in user specified currency
            example: -10
          sourceChannelModifier:
            type: number
            description: Channel / Membership modifier in hotel currency
            example: -10
          internalChannelModifier:
            type: number
            description: Channel / Membership modifier in wink currency
            example: -10
          quantity:
            type: integer
            description: How many of this item is included in this price
            format: int64
            default: 1
          promotionalDiscountPercent:
            type: number
            description: Promotional discount percent
            format: float
          channelDiscountPercent:
            type: number
            description: Channel discount percent
            format: float
          premiumPercent:
            type: number
            description: Premium percent
            format: float
          sourceTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          hasPromotion:
            type: boolean
          hasPremium:
            type: boolean
          userSpecifiedCurrencyTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalDiscountPercent:
            type: number
            format: float
          hasChannelDiscount:
            type: boolean
        description: Pricing information for this ancillary.
      PageBookingView_Affiliate:
        type: object
        properties:
          totalElements:
            type: integer
            format: int64
          totalPages:
            type: integer
            format: int32
          size:
            type: integer
            format: int32
          content:
            type: array
            items:
              $ref: '#/components/schemas/BookingView_Affiliate'
          number:
            type: integer
            format: int32
          sort:
            $ref: '#/components/schemas/SortObject_Affiliate'
          numberOfElements:
            type: integer
            format: int32
          pageable:
            $ref: '#/components/schemas/PageableObject_Affiliate'
          first:
            type: boolean
          last:
            type: boolean
          empty:
            type: boolean
      PayoutFee_Affiliate:
        type: object
        properties:
          identifier:
            type: string
            description: Unique system ID.
            format: uuid
          fee:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          type:
            type: string
            description: Type of fee
            enum:
              - FX
              - SERVICE_CHARGE
          candidate:
            type: string
            description: Who pays for this fee
            enum:
              - PAYOR
              - PAYEE
          description:
            type: string
            description: Withdrawal fee description
        description: Fees incurred when making the withdrawal.
      Payout_Affiliate:
        type: object
        properties:
          vendor:
            type: string
            description: Name of integration vendor
            example: STRIPE
            enum:
              - STRIPE
              - AGENT
              - NMI
              - WISE
          vendorIdentifier:
            type: string
            description: Which acquirer account we return fund from.
          vendorName:
            type: string
            description: Name of regional acquirer account.
          vendorTokenKey:
            type: string
            description: >-
              Key to help load Stripe for the correct region. Could be helpful for
              other vendors as well.
          identifier:
            type: string
            description: Unique system ID.
            format: uuid
          beneficiaryIdentifier:
            type: string
            description: Beneficiary ID.
            format: uuid
          externalPayeeIdentifier:
            type: string
            description: This would be the cardholder ID for VCCs.
            example: stripe-cardholder-1
          type:
            type: string
            description: Type of withdrawal.
            example: BANK_TRANSFER
            enum:
              - BANK_TRANSFER
              - VCC
          entry:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          fees:
            type: array
            description: Fees incurred when making the withdrawal.
            items:
              $ref: '#/components/schemas/PayoutFee_Affiliate'
          created:
            type: string
            description: When the payout record was created.
            format: date-time
          description:
            type: string
            description: Textual response from provider
            example: Card created successfully
          payoutId:
            type: string
            description: >-
              The identifier that was generated when scheduling the payout. This
              will come from the payout provider such as Stripe.
            example: stripe-card-1
          referenceCode:
            type: string
            description: >-
              The transaction code that was generated when the funds move out of
              TripPay's account. This will come from the payout provider such as
              Stripe. E.g. For VCCs, it will occur when an authorization takes
              place.
            example: ABC1234
          referenceCodeDate:
            type: string
            description: The time the funds were withdrawn
            format: date-time
          status:
            type: string
            description: Status of withdrawal.
            example: SCHEDULED
            enum:
              - INITIATED
              - ACTIVE
              - INACTIVE
              - FAILED
              - CANCELLED
              - COMPLETE
        description: Payout keeps track of all outgoing funds for a certain account.
      Personal_Affiliate:
        type: object
        properties:
          gender:
            type: string
            description: Identifier the gender of the customer.
            enum:
              - MALE
              - FEMALE
              - OTHER
          birthDate:
            type: string
            description: >-
              Indicates the date of birth as indicated in the document, in ISO
              8601 prescribed format.
            format: date
          maritalStatus:
            type: string
            description: Marital status of the traveler.
            enum:
              - ANNULLED
              - COHABITATING
              - DIVORCED
              - ENGAGED
              - MARRIED
              - SEPARATED
              - SINGLE
              - WIDOWED
              - UNKNOWN
          childQuantity:
            type: integer
            description: The number of children of the customer.
            format: int32
          citizenship:
            type: string
            description: >-
              Name of the (self-professed) country that is clamided for
              citizenship.
          address1:
            type: string
            description: Address line 1
          address2:
            type: string
            description: Address line 2
          city:
            type: string
            description: City
          state:
            type: string
            description: State
          postalCode:
            type: string
            description: Postal code
          country:
            type: string
            description: Country
          preferredCurrency:
            type: string
            description: >-
              Type of funds preferred for reviewing monetary values, in ISO 4217
              codes
            example: USD
          language:
            type: string
            description: The primary language of the customer
          contactPerson:
            type: array
            items:
              $ref: '#/components/schemas/Contact_Affiliate'
          physChallName:
            type: array
            items:
              type: string
              description: Array of customer's physical challenges
          petInfo:
            type: array
            items:
              $ref: '#/components/schemas/PetInfoDto_Affiliate'
        description: Detailed customer information for this profile
      PetInfoDto_Affiliate:
        required:
          - name
          - type
        type: object
        properties:
          name:
            type: string
            description: Pet name
          type:
            type: string
            description: Pet type
        description: Array of customer's pets
      Preferences_Affiliate:
        type: object
        properties:
          propertyLocationPref:
            type: string
            description: Indicates preference for hotel property locations.
          propertyTypePref:
            type: string
            description: Indicates preference for hotel property types.
          hotelChainPref:
            type: string
            description: Identifies a preferred company by name.
          propertyAmenityPref:
            type: array
            description: Indicates preferences for hotel property amenities.
            items:
              type: string
          recreationSrvcPref:
            type: array
            description: Indicates preference for the type of recreation services in a hotel
            items:
              type: string
          businessSrvcPref:
            type: array
            description: Indicates preference for type of business services in a hotel
            items:
              type: string
          securityFeaturePref:
            type: array
            description: Indicates preference of rtype of security features in a hotel
            items:
              type: string
          physChalFeaturePref:
            type: array
            description: >-
              Indicates preferences for type of features required to meet the
              needs of persons with physical challenges, disabilities, etc.
            items:
              type: string
              description: >-
                Indicates preferences for type of features required to meet the
                needs of persons with physical challenges, disabilities, etc.
          smokingAllowed:
            type: boolean
            description: Indicates preference for smooking allowed rooms..
          roomLocationPref:
            type: string
            description: Indicates preference for hotel room locations.
          bedTypePref:
            type: string
            description: Indicates preferences for the size and features of hotel bed types.
          foodSrvcPref:
            type: string
            description: >-
              Indicates preferences for type of food listener facilities in a
              hotel.
          roomAmenityPref:
            type: array
            description: Indicates preferences for hotel room amenities.
            items:
              type: string
          guestType:
            type: string
            description: Guest type
          mealPref:
            type: string
            description: Indicates meal preference.
          cuisinePref:
            type: string
            description: Indicates cuisine preference.
          interestPref:
            type: array
            description: Indicates interest preference
            items:
              type: string
          beveragePref:
            type: array
            description: Indicates beverage preference.
            items:
              type: string
          foodPref:
            type: array
            description: Indicates food preference.
            items:
              type: string
          allergies:
            type: array
            description: Indicates allergies
            items:
              type: string
          petsPref:
            type: array
            description: Indicates pet preferences
            items:
              type: string
        description: Customer preferences
      ProfileUser_Affiliate:
        type: object
        properties:
          firstName:
            type: string
            description: First name
            example: Avid
          lastName:
            type: string
            description: Last name
            example: Travelman
          email:
            type: string
            description: Email
            format: email
            example: avid@travelman.com
          phone:
            type: string
            description: Telephone
            example: '0123456789'
          profilePictureUrl:
            type: string
            description: Profile picture URL
          fullName:
            type: string
            description: Full name
            example: John Smith
        description: User details
      Profile_Affiliate:
        required:
          - personal
          - preferences
          - profileIdentifier
          - share
          - user
          - userIdentifier
        type: object
        properties:
          profileIdentifier:
            type: string
            description: Profile identifier
            format: uuid
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          share:
            type: boolean
            description: >-
              Indicates whether the user wants to share this profile of themselves
              with hotel(s)
          user:
            $ref: '#/components/schemas/ProfileUser_Affiliate'
          personal:
            $ref: '#/components/schemas/Personal_Affiliate'
          preferences:
            $ref: '#/components/schemas/Preferences_Affiliate'
        description: >-
          A user profile accompanies this booking IF user has created and enabled
          sharing of profile
      Quote_Affiliate:
        required:
          - exchangeRate
          - source
          - target
          - timestamp
        type: object
        properties:
          source:
            type: string
            description: Source
          target:
            type: string
            description: Target
          exchangeRate:
            type: number
            description: Exchange rate
          timestamp:
            type: integer
            description: Timestamp
            format: int64
        description: The quote used to create totalCapturePrice.
      RatePlanLevelFee_Affiliate:
        required:
          - descriptions
          - fixedAmount
          - type
        type: object
        properties:
          descriptions:
            type: array
            description: List of localized descriptions for this fee.
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          fixedAmount:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          type:
            type: string
            description: Rate plan fee type
            example: PER_DAY
            enum:
              - PER_DAY
              - PER_STAY
              - PER_PERSON_PER_DAY
              - PER_PERSON_PER_STAY
        description: What the guest is paying extra for
      RatePlan_Affiliate:
        required:
          - allInclusive
          - allInclusivePlusAlcohol
          - breakfast
          - brunch
          - cancellationPolicyIdentifier
          - dinner
          - hotelIdentifier
          - identifier
          - lunch
          - name
          - prepaid
        type: object
        properties:
          identifier:
            type: string
            description: Rate plan identifier
            format: uuid
          hotelIdentifier:
            type: string
            description: Hotel Identifier
            format: uuid
          name:
            type: string
            description: Provides the name of the rate plan.
            example: BAR 1
          prepaid:
            type: boolean
            description: When true, indicates if the rate is a prepaid rate.
            example: false
            default: false
          breakfast:
            type: boolean
            description: When true, indicates breakfast is included.
            example: false
            default: false
          brunch:
            type: boolean
            description: When true, indicates brunch is included.
            example: false
            default: false
          lunch:
            type: boolean
            description: When true, indicates lunch is included.
            example: false
            default: false
          dinner:
            type: boolean
            description: When true, indicates dinner is included.
            example: false
            default: false
          allInclusive:
            type: boolean
            description: Everything included except alcohol
            example: false
            default: false
          allInclusivePlusAlcohol:
            type: boolean
            description: Everything included with alcohol
            example: false
            default: false
          sellStartDate:
            type: string
            description: >-
              Set a start date for when to start selling this rate. When
              sellStartDate and sellEndDate are set, this rate is only available
              for sale within that date range.
            format: date
          sellEndDate:
            type: string
            description: >-
              Set an end date for when to finish selling this rate. When
              sellStartDate and sellEndDate are set, this rate is only available
              for sale within that date range.
            format: date
          stayStartDate:
            type: string
            description: >-
              Set a start date for when the guest can visit. When stayStartDate
              and stayEndDate are set, this rate is only available for stay within
              that date range.
            format: date
          stayEndDate:
            type: string
            description: >-
              Set an end date for when the guest can visit. When stayStartDate and
              stayEndDate are set, this rate is only available for stay within
              that date range.
            format: date
          loyaltyPointsAccrue:
            type: boolean
            description: Property honors loyalty points with this rate plan.
            example: false
            default: false
          maxAdvanceBookingOffset:
            type: integer
            description: >-
              Maximum days before the arrival date for which this rate plan may be
              booked.
            format: int32
            example: 10
          minAdvanceBookingOffset:
            type: integer
            description: >-
              Minimum days before the arrival date for which this rate plan may be
              booked.
            format: int32
            example: 3
          minTotalOccupancy:
            type: integer
            description: >-
              Defines the minimum number of total occupants required for this rate
              plan.
            format: int32
            example: 4
          maxTotalOccupancy:
            type: integer
            description: >-
              Defines the maximum number of total occupants required for this rate
              plan.
            format: int32
            example: 4
          minLOS:
            type: integer
            description: Indicates the minimum length of stay required for this rate plan.
            format: int32
            example: 3
          maxLOS:
            type: integer
            description: Indicates the maximum length of stay.
            format: int32
            example: 5
          minAge:
            type: integer
            description: The minimum age to qualify for this rate plan.
            format: int32
            example: 26
          maxAge:
            type: integer
            description: The maximum age to qualify for this rate plan.
            format: int32
            example: 50
          availableDaysOfWeek:
            $ref: '#/components/schemas/DowPatternGroup_Affiliate'
          arrivalDaysOfWeek:
            $ref: '#/components/schemas/DowPatternGroup_Affiliate'
          departureDaysOfWeek:
            $ref: '#/components/schemas/DowPatternGroup_Affiliate'
          requiredDaysOfWeek:
            $ref: '#/components/schemas/DowPatternGroup_Affiliate'
          earlyCheckInCharge:
            $ref: '#/components/schemas/VariableCharge_Affiliate'
          lateCheckOutCharge:
            $ref: '#/components/schemas/VariableCharge_Affiliate'
          cancellationPolicyIdentifier:
            type: string
            description: The cancellation policy for this rate plan.
            example: cancellation-policy-1
          cancellationPolicy:
            $ref: '#/components/schemas/CancellationPolicy_Affiliate'
          cancellationPolicyExceptions:
            $ref: '#/components/schemas/CancellationPolicyExceptions_Affiliate'
        description: Rate plan used for this stay
      Refund_Affiliate:
        required:
          - cancelOnRefund
          - created
          - description
          - identifier
          - reasonType
          - refund
          - requestResponse
          - requestStatus
          - requestType
          - statusType
        type: object
        properties:
          identifier:
            type: string
            description: A unique identifier
            example: refund-1
          acquirerRefundIdentifier:
            type: string
            description: >-
              The acquirer refund identifier. Will get attached once it comes in
              on the webhook.
            example: r-123456
          requestedByIdentifier:
            type: string
            description: The SSO person / entity that requested the refund.
            example: user-1
          refund:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          created:
            type: string
            description: When the amount was refunded
            format: date-time
          description:
            type: string
            description: A description of the refund that can be displayed to booker
            example: Customer made a mistake
          reasonType:
            type: string
            description: A description of the refund that can be displayed to booker
            example: DUPLICATE
            enum:
              - DUPLICATE
              - FRAUDULENT
              - REQUESTED_BY_CUSTOMER
              - GUEST_COMPLAINT
              - GUEST_BOOKED_INCORRECT_DATE
              - GUEST_SICK
              - OVERBOOKING
              - EMERGENCY
              - FLIGHT_CANCELLED
              - DEATH_IN_FAMILY
              - OTHER
              - EXPIRED_UNCAPTURED_CHARGE
          cancelOnRefund:
            type: string
            description: Whether to cancel the booking alongside requesting a refund.
            enum:
              - NONE
              - CANCEL_ON_SUCCESSFUL_REFUND
              - CANCEL_REGARDLESS
          statusType:
            type: string
            description: Status of the refund
            example: SUCCEEDED
            enum:
              - PENDING
              - SUCCEEDED
              - CANCELED
              - REQUIRES_ACTION
              - FAILED
          requestType:
            type: string
            description: The entity making the refund request
            example: BY_ADMIN
            enum:
              - BY_SUPPLIER
              - BY_ADMIN
              - BY_STRIPE
              - BY_SYSTEM
          requestStatus:
            type: string
            description: Status of the refund request
            example: APPROVED
            enum:
              - PENDING
              - APPROVED
              - REJECTED
          requestResponse:
            type: string
            description: Admin may choose to respond to the refund request made by the hotel
            example: >-
              We have rejected your request. Your cancellation policy does not
              warrant a manual refund.
          receiptUrl:
            type: string
            description: >-
              This is the receipt url that contains a friendly web confirmation
              page. Comes in on the webhook.
            example: >-
              https://pay.stripe.com/receipts/payment/CAcaFwoVYWNjdF8xSXcxazVBQ3F2UW9nN1IxKIPqo54GMgbHKn45YQY6LBbCZ62655YzamuWDVeWAaw7uApCrxewxjSsZX4C9Lef5jY9JeYFrOVx3IaI
          retries:
            type: integer
            description: >-
              In case a TripPay admin has to go in and re-send the refund request
              to Stripe, we want to not to the same calculations again when a
              retry is executed so we keep track of retries here.
            format: int32
            example: 0
            default: 0
          allocation:
            type: string
            description: >-
              The type of refund determines how the funds are deducted each
              beneficiary.
            example: EQUAL_DISTRIBUTION
            default: EQUAL_DISTRIBUTION
            enum:
              - CUSTOMERS_ONLY
              - FROM_SALE_ONLY
              - EQUAL_DISTRIBUTION
        description: >-
          Refund objects allow you to refund a charge that has previously been
          created but not yet refunded. Funds will be refunded to the credit or
          debit card that was originally charged.
      ReportingAncillary_Affiliate:
        type: object
        properties:
          name:
            type: string
            description: Full name of ancillary in English.
          type:
            type: string
            description: The type
            enum:
              - LODGING
              - RAIL
              - AIR
              - CAR
              - CRUISE
              - PACKAGE
              - ADD_ON
              - RENTAL
              - EXPERIENCE
              - ANCILLARY_BOOKING
              - ANCILLARY_FEE
          grossAmount:
            type: number
            description: The gross amount.
          netAmount:
            type: number
            description: The gross amount minus fees and commissions.
          netAmountWithRefund:
            type: number
            description: The gross amount minus fees and commissions.
          currency:
            type: string
            description: The currency for these amounts.
        description: Displays ancillary accounting details
      ReportingDailyRate_Affiliate:
        type: object
        properties:
          date:
            type: string
            description: The rate date.
            format: date
          baseAmount:
            type: number
            description: The rate given to us by channel manager / CRS / PMS.
          grossAmount:
            type: number
            description: >-
              The derived amount based on promotions, member discounts etc within
              our platform.
          netAmount:
            type: number
            description: The gross amount minus fees and commissions.
          netAmountWithRefund:
            type: number
            description: >-
              The net amount minus potential refund. Null if booking contains no
              refund.
          currency:
            type: string
            description: The currency for these amounts.
        description: Displays rate accounting details
      ReportingExtraCharge_Affiliate:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          grossAmount:
            type: number
          netAmount:
            type: number
          netAmountWithRefund:
            type: number
          currency:
            type: string
        description: Displays extra charge accounting details.
      ReviewAnswer_Affiliate:
        required:
          - category
          - questionIdentifier
          - sort
          - value
        type: object
        properties:
          questionIdentifier:
            type: string
            description: Question identifier
            format: uuid
          category:
            type: string
            description: Question category
            enum:
              - COMFORT
              - CONDITION
              - SERVICE
              - ENVIRONMENT
              - FACILITIES
              - LOCATION
              - LIFESTYLE
              - VALUE
              - FOOD
          sort:
            type: integer
            description: Sort key
            format: int32
          value:
            type: integer
            description: Value
            format: int32
      ReviewUser_Affiliate:
        type: object
        properties:
          userIdentifier:
            type: string
            description: User identifier
            format: uuid
          firstName:
            type: string
            description: First name
            example: John
          lastName:
            type: string
            description: Last name
            example: Smith
          email:
            type: string
            description: Email
            format: email
            example: john.smith@email.com
          telephone:
            type: string
            description: Telephone
            example: '0123456789'
          fullName:
            type: string
            description: Full name
            example: '0123456789'
        description: User details of creator of booking.
      Review_Affiliate:
        type: object
        properties:
          identifier:
            type: string
            description: Unique review identifier identifying this record.
            format: uuid
          bookingIdentifier:
            type: string
            description: >-
              Booking identifier identifier booking this review is associated
              with.
            format: uuid
          hotelIdentifier:
            type: string
            description: Hotel identifier this booking is associated with.
            format: uuid
          user:
            $ref: '#/components/schemas/ReviewUser_Affiliate'
          reviewDate:
            type: string
            description: Date of review.
            format: date-time
          averageScore:
            type: number
            description: Total points divided by number of questions.
            format: double
            example: 8.7
          answers:
            type: array
            description: List of user review answers.
            items:
              $ref: '#/components/schemas/ReviewAnswer_Affiliate'
          messageFromGuest:
            type: string
            description: >-
              Private message from guest to the hotel. Is not displayed on
              property profile.
            example: >-
              Dear GM, I would like to say thank you so much for taking the time
              to show my husband and I around the premises and the secret cave
              behind the property.
          responseFromHotel:
            type: string
            description: >-
              Property can response to traveler review. Response goes on public
              review profile and can be seen by others.
            example: >-
              It was so great to have you at our hotel. Please recommend your
              friends and come again soon.
          imageIdentifier:
            type: string
            description: >-
              Reviewer can upload her best picture from the property. Cloudinary
              image identifier.
            example: cloudinary-image-1
          text:
            type: string
            description: Free text record created by traveler
            example: Our stay was amazing! Can recommend highly to all. Felt like home.
          approvedText:
            type: boolean
            description: >-
              Hotel allows the review text to be displayed as part of their
              profile.
            example: true
          approvedImage:
            type: boolean
            description: >-
              Hotel allows the user-generated image to be displayed as part of
              their profile.
            example: false
          likes:
            type: array
            description: List of member identifiers who liked the textual review
            format: uuid
            example: user-1
            items:
              type: string
          roomNumber:
            type: string
            description: Guest's room number during their stay.
            example: '501'
          roomRating:
            type: integer
            description: Guest's room rating
            format: int32
            example: 7
          responded:
            type: boolean
            description: >-
              Returns true if property has responded to the review given by the
              guest.
            example: false
            default: false
        description: User review created by the traveler after the booking completed.
      RoomStay_Affiliate:
        required:
          - activeCancellationPolicy
          - adults
          - bedroomConfiguration
          - children
          - endDate
          - extraCharges
          - policy
          - price
          - ratePlan
          - room
          - roomRateIdentifier
          - roomRateInternalName
          - rooms
          - startDate
        type: object
        properties:
          policy:
            $ref: '#/components/schemas/PropertyPolicy_Affiliate'
          room:
            $ref: '#/components/schemas/GuestRoom_Affiliate'
          rooms:
            type: integer
            description: >-
              Number of rooms. Always 1 since we switched to creating one booking
              per room.
            format: int32
            example: 1
            default: 1
          bedroomConfiguration:
            $ref: '#/components/schemas/BedroomConfiguration_Affiliate'
          adults:
            type: integer
            description: The actual amount of adults as determined by the hotel's policy.
            format: int32
            example: 2
            default: 2
          children:
            type: integer
            description: The actual amount of children as determined by the hotel's policy.
            format: int32
            example: 0
            default: 0
          startDate:
            type: string
            description: Stay start date
            format: date
            example: '2021-12-24'
          endDate:
            type: string
            description: Stay end date
            format: date
            example: '2021-12-31'
          price:
            $ref: '#/components/schemas/StayRate_Affiliate'
          roomRateIdentifier:
            type: string
            description: Master rate identifier
            format: uuid
          roomRateInternalName:
            type: string
            description: Master rate internal name
            example: Master Rate 1
          ratePlan:
            $ref: '#/components/schemas/RatePlan_Affiliate'
          perkTypes:
            type: array
            description: List of perks that came with the master rate
            example:
              - PERK_FREE_DRINK_VOUCHER
              - PERK_EARLY_CHECKIN
            items:
              type: string
              description: List of perks that came with the master rate
              example: '["PERK_FREE_DRINK_VOUCHER","PERK_EARLY_CHECKIN"]'
              enum:
                - PERK_LOYALTY_POINTS
                - PERK_WINE
                - PERK_FREE_DRINK_VOUCHER
                - PERK_FREE_MEAL_TWO_PEOPLE
                - PERK_FREE_ONE_HOUR_MASSAGE
                - PERK_TWENTY_PERCENT_FOOD_BEVERAGE_DISCOUNT
                - PERK_TWENTY_PERCENT_SPA_DISCOUNT_VOUCHER
                - PERK_GUARANTEED_UPGRADE
                - PERK_EARLY_CHECKIN
                - PERK_ROOM_UPGRADE
                - PERK_LATE_CHECKOUT
                - PERK_AIRPORT_TRANSFER
                - PERK_AIRPORT_PICK_UP
                - PERK_BOTTLE_CHAMPAGNE_ON_ARRIVAL
                - PERK_BOTTLE_SPARKLING_WINE_ON_ARRIVAL
                - PERK_BOTTLE_WINE_ON_ARRIVAL
          extraCharges:
            $ref: '#/components/schemas/ExtraCharges_Affiliate'
          activeCancellationPolicy:
            $ref: '#/components/schemas/CancellationPolicy_Affiliate'
          cancellable:
            type: boolean
          cancellableByHotel:
            type: boolean
          cancellableWithPotentialCharge:
            type: boolean
          sourceTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          rateSource:
            type: string
          guests:
            type: integer
            format: int32
          roomNights:
            type: integer
            description: >-
              Total number of nights the guest stays at the hotel. -1 indicates
              there is an error.
            format: int64
            example: 2
          userSpecifiedCurrencyTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
        description: All information about the room that was booked.
      SearchFilters_Affiliate:
        type: object
        properties:
          maxDistance:
            type: number
            description: A user can query for hotels that are close to UserSession.location
            format: double
            example: 10
          lifestyle:
            type: string
            description: A user can filter inventory on a lifestyle
            example: LIFESTYLE_RELAX
            enum:
              - LIFESTYLE_HEALTH_FITNESS
              - LIFESTYLE_RELAX
              - LIFESTYLE_ADULT_ONLY
              - LIFESTYLE_ADVENTURE
              - LIFESTYLE_BUSINESS
              - LIFESTYLE_LGBT
              - LIFESTYLE_SINGLE_PARENT
              - LIFESTYLE_SOLO_FEMALE
              - LIFESTYLE_BEAUTY
              - LIFESTYLE_FOODIE
              - LIFESTYLE_FAMILY
              - LIFESTYLE_ROMANCE
              - LIFESTYLE_COUPLE
              - LIFESTYLE_SOLO
              - LIFESTYLE_BACKPACKER
              - LIFESTYLE_SHOPPING
              - LIFESTYLE_SPORTS
              - LIFESTYLE_MOUNTAIN
              - LIFESTYLE_BEACH
              - LIFESTYLE_CITY
              - LIFESTYLE_COUNTRY
              - LIFESTYLE_CULTURE
              - LIFESTYLE_ECO
          starRating:
            type: integer
            description: A user can filter on number of hotel stars
            format: int32
            example: 4
          perks:
            type: array
            items:
              type: string
          displayBy:
            type: string
        description: How user likes to have results displayed
      StayRate_Affiliate:
        type: object
        properties:
          userSpecifiedCurrencyBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalBaseTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceExtraPaxModifier:
            type: number
            description: Extra person modifier in hotel currency.
            example: 15
          internalExtraPaxModifier:
            type: number
            description: Extra person modifier in wink currency
            example: 15
          userSpecifiedCurrencyExtraPaxModifier:
            type: number
            description: Extra person modifier in user specified currency
            example: 15
          sourceExtraChildModifier:
            type: number
            description: Extra child modifier in hotel currency
            example: 15
          internalExtraChildModifier:
            type: number
            description: Extra child modifier in wink currency
            example: 15
          userSpecifiedCurrencyExtraChildModifier:
            type: number
            description: Extra child modifier in user specified currcency
            example: 15
          sourceSingleOccupantModifier:
            type: number
            description: Single occupant modifier in hotel currency
            example: -15
          internalSingleOccupantModifier:
            type: number
            description: Singe occupant modifier in wink currency
            example: -15
          userSpecifiedCurrencySingleOccupantModifier:
            type: number
            description: Single occupant modifier in user specified currency
            example: -15
          sourcePromotionalModifier:
            type: number
            description: Rate discount modifiers in hotel currency
            example: -40
          internalPromotionalModifier:
            type: number
            description: Rate discount modifiers in wink currency
            example: -40
          userSpecifiedCurrencyPromotionalModifier:
            type: number
            description: Rate discount modifiers in user specified currency
            example: -40
          sourcePremiumModifier:
            type: number
            description: Rate premiums modifiers in hotel currency
            example: 40
          internalPremiumModifier:
            type: number
            description: Rate premiums modifiers in wink currency
            example: 40
          userSpecifiedCurrencyPremiumModifier:
            type: number
            description: Rate premiums modifiers in user specified currency
            example: 40
          sourceChannelModifier:
            type: number
            description: Channel / Membership modifier in hotel currency
            example: -10
          internalChannelModifier:
            type: number
            description: Channel / Membership modifier in wink currency
            example: -10
          userSpecifiedCurrencyChannelModifier:
            type: number
            description: Channel / Membership modifier in user specified currency
            example: -10
          quantity:
            type: integer
            description: Quantity
            format: int32
          minOccupancy:
            type: integer
            description: Minimum occupancy
            format: int32
          maxOccupancy:
            type: integer
            description: Maximum occupancy
            format: int32
          rateSource:
            type: string
            description: Source
          promotionalDiscountPercent:
            type: number
            description: Promotional discount percent
            format: float
          channelDiscountPercent:
            type: number
            description: Chanel discount percent
            format: float
          premiumPercent:
            type: number
            description: Premium percent
            format: float
          available:
            type: boolean
            description: Available
          sourceToUserCurrencyQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          sourceToInternalCurrencyQuote:
            $ref: '#/components/schemas/Quote_Affiliate'
          offerDetails:
            type: array
            description: Localized text of the discount
            items:
              $ref: '#/components/schemas/LocalizedDescription_Affiliate'
          promotionalCodes:
            type: array
            description: Promotional codes
            items:
              type: string
          userSpecifiedCurrencyTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalTotal:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          userSpecifiedCurrencyAveragePricePerNight:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          internalAveragePricePerNight:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          sourceAveragePricePerNight:
            $ref: '#/components/schemas/CustomMonetaryAmount'
          totalDiscountPercent:
            type: number
            format: float
        description: Price details
      SupplierContractItemPolicy_Affiliate:
        required:
          - refundable
        type: object
        properties:
          refundable:
            type: boolean
            description: Whether this booking is refundable or not.
            example: true
          advanceCancellationFreeOfCharge:
            type: string
            description: >-
              When the cancellation policy is refundable, this flag can be set and
              indicates there is more rules involved than just a
              no-questions-asked refundable.
            example: UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
            enum:
              - UNTIL_EIGHTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
              - UNTIL_FOURTEEN_HUNDRED_HOURS_ON_DAY_OF_ARRIVAL
              - ONE_DAY_BEFORE_ARRIVAL
              - TWO_DAYS_BEFORE_ARRIVAL
              - THREE_DAYS_BEFORE_ARRIVAL
              - FIVE_DAYS_BEFORE_ARRIVAL
              - SEVEN_DAYS_BEFORE_ARRIVAL
              - FOURTEEN_DAYS_BEFORE_ARRIVAL
              - TWENTYONE_DAYS_BEFORE_ARRIVAL
              - THIRTY_DAYS_BEFORE_ARRIVAL
              - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
              - SIXTY_DAYS_BEFORE_ARRIVAL
          refundableCancellationCharge:
            type: string
            description: >-
              If advanceCancellationFreeOfCharge rules is not honored, this
              property explains what the guest will be charged.
            example: FIFTY_PERCENT
            enum:
              - FIRST_NIGHT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SIXTY_PERCENT
              - SEVENTY_PERCENT
              - NINENTY_PERCENT
              - ONE_HUNDRED_PERCENT
          noShowCharge:
            type: string
            description: >-
              In case the 'Refundable cancellation charge' is set, a different no
              show charge can be applied.
            example: SAME_AS_CANCELLATION_FEE
            enum:
              - SAME_AS_CANCELLATION_FEE
              - ONE_HUNDRED_PERCENT_OF_TOTAL_CHARGE
          nonRefundableCancellationCharge:
            type: string
            description: >-
              When the cancellation policy is non-refundable, this flag can be set
              and indicates there is more rules involved to calculate what the
              guest will owe in case of a cancellation.
            example: SEVENTY_PERCENT
            enum:
              - FIRST_NIGHT
              - TEN_PERCENT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SEVENTY_PERCENT
          nonRefundableDeadline:
            type: string
            description: >-
              The non-refundable charge might can have a deadline. If that
              deadline passes, the guest might be charged more.
            example: SEVEN_DAYS_BEFORE_ARRIVAL
            enum:
              - ONE_DAY_BEFORE_ARRIVAL
              - TWO_DAYS_BEFORE_ARRIVAL
              - THREE_DAYS_BEFORE_ARRIVAL
              - FIVE_DAYS_BEFORE_ARRIVAL
              - SEVEN_DAYS_BEFORE_ARRIVAL
              - FOURTEEN_DAYS_BEFORE_ARRIVAL
              - TWENTYONE_DAYS_BEFORE_ARRIVAL
              - THIRTY_DAYS_BEFORE_ARRIVAL
              - FOURTY_TWO_DAYS_BEFORE_ARRIVAL
              - SIXTY_DAYS_BEFORE_ARRIVAL
          nonRefundableAfterDeadlineCancellationCharge:
            type: string
            description: >-
              If the guest does not honor the non-refundable deadline rule, this
              charge dictates what she owes after the deadline passes.
            example: ONE_HUNDRED_PERCENT
            enum:
              - FIRST_NIGHT
              - TEN_PERCENT
              - THIRTY_PERCENT
              - FIFTY_PERCENT
              - SEVENTY_PERCENT
              - ONE_HUNDRED_PERCENT
          externalIdentifier:
            type: string
            description: Optional geoname externalIdentifier to remote policy.
            example: policy-1
          fullyRefundable:
            type: boolean
          partiallyRefundable:
            type: boolean
      TravelInventoryRecognition_Affiliate:
        required:
          - category
          - identifier
          - maxRating
          - provider
          - rating
          - type
        type: object
        properties:
          identifier:
            type: string
            description: Recognition identifier.
            format: uuid
          category:
            type: string
            description: Recognition category.
            example: AWARD
            enum:
              - THIRD_PARTY_REVIEW
              - PUBLICATION
              - AWARD
          type:
            type: string
            description: >-
              Type of rating system the recognition operated on. This allows us to
              display the score properly.
            example: PERCENT_RATING
            enum:
              - STAR_RATING
              - NUMERIC_RATING
              - PERCENT_RATING
          provider:
            type: string
            description: The name of the entity that administers this recognition.
            example: Michelin
          rating:
            minimum: 0
            exclusiveMinimum: false
            type: number
            description: The actual award or rating received by the hotel facility.
            format: float
            example: 8.5
          maxRating:
            type: number
            description: >-
              Use this to let hotels indicate what the total score for this award
              is.
            format: float
            example: 10
          date:
            type: string
            description: The date the award was received
            format: date
            example: '2020-10-24'
          officialAppointmentInd:
            type: boolean
            description: >-
              When true, this indicates the property has received official
              permission from the award provider to use the rating in publications
              and marketing materials; when false this permission has not been
              granted.
            example: true
          ratingSymbol:
            type: string
            description: >-
              Provides the symbol used in the rating. Used in conjunction with the
              Rating.
            example: '*'
        description: Recognition for the ancillary inventory.
      UserSession_Affiliate:
        required:
          - itinerary
        type: object
        properties:
          location:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          ipLocation:
            $ref: '#/components/schemas/IPLocation_Affiliate'
          ipNumber:
            type: string
            description: User's incoming IP number
            example: 203.543.122.021
          bounds:
            $ref: '#/components/schemas/GeoJsonPolygon_Affiliate'
          itinerary:
            $ref: '#/components/schemas/Itinerary_Affiliate'
          searchFilters:
            $ref: '#/components/schemas/SearchFilters_Affiliate'
          language:
            type: string
            description: User's language preference
            example: en
          currency:
            type: string
            description: User's currency preference
            example: USD
          redirectUrl:
            type: string
          userIdentifier:
            type: string
            description: Pass along the user identifier if user is known.
            format: uuid
          promotionalCodes:
            type: array
            items:
              type: string
              description: User can pass promotional codes to system to change prices.
              example: promo-1
          selectedRoomConfiguration:
            $ref: '#/components/schemas/RoomConfiguration_Affiliate'
        description: >-
          User session information containing itinerary and other user related
          data.
      ConsumeExternalUrlRequest_Affiliate:
        required:
          - url
        type: object
        properties:
          url:
            type: string
            description: The url of this entry
            example: https://www.google.com
      UniqueRequest_Affiliate:
        required:
          - name
        type: object
        properties:
          name:
            type: string
            description: The name we want to check uniqueness for
            example: My unique name
          identifier:
            type: string
            description: >-
              An optional accompanying identifier so it doesn't check itself on an
              update
            format: uuid
      UniqueResult_Affiliate:
        type: object
        properties:
          unique:
            type: boolean
      ManagingEntity:
        required:
          - label
          - type
          - value
        type: object
        properties:
          value:
            type: string
            description: The value that should be persisted.
            example: company-1
          label:
            type: string
            description: Text representation of the value.
            example: Company 1
          type:
            type: string
            description: Type of entity.
            example: COMPANY
            enum:
              - USER
              - COMPANY
              - ACCOUNT
        description: Name of the application.
        example: App 1
      UpsertApplicationRequest:
        required:
          - entity
          - name
          - redirectUris
        type: object
        properties:
          name:
            type: string
            description: Name of the application.
            example: App 1
          entity:
            $ref: '#/components/schemas/ManagingEntity'
          redirectUris:
            type: array
            items:
              type: string
              description: Where to redirect after successful OAuth2.
              example: https://my.travel.blog
      CreateApplicationResponse:
        required:
          - clientId
          - id
          - name
          - ownerIdentifier
          - ownerName
          - ownerType
          - secretKey
        type: object
        properties:
          id:
            type: string
            description: Unique identifier.
            format: uuid
          ownerIdentifier:
            type: string
            description: Unique owner record identifier
            format: uuid
          ownerName:
            type: string
            description: Name of company owner.
            example: Travel Tech 1
          ownerType:
            type: string
            description: Type of entity.
            example: COMPANY
            enum:
              - USER
              - COMPANY
              - ACCOUNT
          name:
            type: string
            description: >-
              Name of this engine application. The first engine for every
              integrator will have the same name as its company name.
            example: Engine 1
          redirectUris:
            type: array
            description: >-
              Where to redirect after web components successfully authenticate.
              For OAuth2 purposes.
            example:
              - https://my.travel.blog
            items:
              type: string
              description: >-
                Where to redirect after web components successfully authenticate.
                For OAuth2 purposes.
              example: '["https://my.travel.blog"]'
          clientId:
            type: string
            description: >-
              Client identifier used to authenticate an Oauth2 or web component
              request.
            example: client-id-123
          secretKey:
            type: string
            description: Password used to authenticate an Oauth2 request.
      UpsertAddressRequest_Affiliate:
        required:
          - address1
          - cityGeoNameId
          - postalCode
        type: object
        properties:
          address1:
            type: string
            description: Address line 1
            example: 234 Near da beach
          address2:
            type: string
            description: Address line 2
            example: 'Pebble #5001'
          cityGeoNameId:
            type: string
            description: City geo name ID
            example: '897654'
          state:
            type: string
            description: State
            example: CA
          postalCode:
            type: string
            description: Postal / zip code
            example: '90210'
          county:
            type: string
            description: County
            example: Alameda county
          valid:
            type: boolean
        description: Light-weight Address object
        example: geo-name-1
      UpsertCompanyRequest_Affiliate:
        required:
          - address
          - companyType
          - name
          - type
          - url
          - vatID
        type: object
        properties:
          name:
            type: string
            description: Name of company
            example: Company 1
          legalName:
            type: string
            description: Legal name of entity if other than name
            example: Legal Company 1
          companyType:
            type: string
            description: Type of company
            example: COMPANY
            enum:
              - COMPANY
              - INDIVIDUAL
          type:
            type: string
            description: Type of company
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          vatID:
            type: string
            description: A VAT id if required
            example: vat-1
          description:
            type: string
            description: A personal message from the company.
          url:
            type: string
            description: Company's main website
            example: https://www.mymainsite.com
          address:
            $ref: '#/components/schemas/UpsertAddressRequest_Affiliate'
          urls:
            type: array
            description: >-
              List of all active accounts that could be used for selling or seeing
              a company's reach.
            items:
              type: string
              description: >-
                List of all active accounts that could be used for selling or
                seeing a company's reach.
          logo:
            $ref: '#/components/schemas/SimpleMultimedia_Affiliate'
      UpsertCompanyStatusRequest_Affiliate:
        required:
          - enabled
        type: object
        properties:
          enabled:
            type: boolean
            description: New company status
            example: true
      SortStaticSellerListItemsRequest_Affiliate:
        required:
          - items
        type: object
        properties:
          items:
            type: object
            additionalProperties:
              type: integer
              format: int32
      NotificationView_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Unique document identifier
            format: uuid
            readOnly: true
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
            readOnly: true
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
            readOnly: true
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            readOnly: true
            example: 12
          notification:
            $ref: '#/components/schemas/Notification_Affiliate'
      Notification_Affiliate:
        required:
          - body
          - identifier
          - ownerIdentifier
          - priority
          - recipientType
          - subject
          - type
        type: object
        properties:
          identifier:
            type: string
            description: Notification identifier
            format: uuid
          ownerIdentifier:
            type: string
            description: Owner identifier
            format: uuid
          priority:
            type: string
            description: Importance of message
            enum:
              - HIGH
              - MEDIUM
              - LOW
          type:
            type: string
            description: Message type
            enum:
              - ALERT
              - MESSAGE
          recipientType:
            type: string
            description: Recipient type
            enum:
              - USER
              - COMPANY
          subject:
            type: string
            description: Subject of message
          body:
            type: string
            description: Body of message
          read:
            type: boolean
            description: Company read notification
          markedAsRemoved:
            type: boolean
            description: Message marked as removed
          notifyViaEmail:
            type: boolean
            description: Also send email notification
      InviteManagerRequest_Affiliate:
        required:
          - email
        type: object
        properties:
          email:
            type: string
            description: Existing user account email to make manager
      Sorted_Affiliate:
        required:
          - id
          - index
        type: object
        properties:
          id:
            type: string
            description: List item ID
            example: list-item-1
          index:
            type: integer
            description: List item position
            format: int32
            example: 0
        description: Sorted object strictly to use for sorting of list items
      UpdateApplicationResponse:
        required:
          - entity
          - id
        type: object
        properties:
          id:
            type: string
            description: Unique identifier.
            format: uuid
          name:
            type: string
            description: Name of the application.
            example: App 1
          entity:
            $ref: '#/components/schemas/ManagingEntity'
          redirectUris:
            type: array
            items:
              type: string
              description: Where to redirect after successful OAuth2.
              example: https://my.travel.blog
      SearchCategory_Affiliate:
        required:
          - key
          - type
          - value
        type: object
        properties:
          type:
            type: string
            description: Type of search category.
            example: HOTEL
            enum:
              - HOTEL
              - INVENTORY
          key:
            type: string
            description: Usually the OTA reference code.
            example: GRE
          value:
            type: string
            description: Usually the OTA reference code value.
            example: GRE
          count:
            type: integer
            description: Quantity of items in this category.
            format: int64
            example: 15
      SalesChannelRelationshipRequestView_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Document UUID
            example: doc-1
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            example: 12
          user:
            $ref: '#/components/schemas/SalesChannelRelationshipRequest_Affiliate'
          request:
            $ref: '#/components/schemas/SalesChannelRelationshipRequest_Affiliate'
      SalesChannelRelationshipRequest_Affiliate:
        required:
          - identifier
          - introductoryMessage
          - ownerIdentifier
          - ownerName
          - requestType
          - status
          - subType
          - supplierIdentifier
          - supplierName
        type: object
        properties:
          identifier:
            type: string
            description: Unique record identifier
            format: uuid
          status:
            type: string
            description: status of relationship request
            enum:
              - REQUESTING
              - REJECTED
          requestType:
            type: string
            description: type of relationship request
            enum:
              - DIRECT_CONNECTION
          supplierIdentifier:
            type: string
            description: Request goes to this supplier identifier.
            format: uuid
          supplierName:
            type: string
            description: Request goes to this supplier name.
            example: Hotel 1
          subType:
            type: string
            description: What type of segment of channel is this.
            example: APPLICATION
            enum:
              - DIRECT
              - APPLICATION
              - HOTEL
              - TRAVELIKO
              - CORPORATE
              - TRAVEL_AGENT
              - INFLUENCER
              - BLOGGER
              - DESTINATION
              - CHANNEL_MANAGER
              - PROPERTY_MANAGEMENT_SYSTEM
              - CENTRAL_RESERVATION_SYSTEM
              - GOOGLE_HOTEL_API
              - MANAGEMENT_COMPANY
              - CHAIN
              - BRAND
              - EVENT_ORGANIZER
          ownerIdentifier:
            type: string
            description: >-
              Specific identifier for the company / corporation / travel agency
              that is retrieving the rates
            format: uuid
          ownerName:
            type: string
            description: Name of the owner / affiliate.
            example: Owner 1
          introductoryMessage:
            type: string
            description: Owner / affiliate writes an intro to request a connection.
            example: Hi there! Please give me a discount.
        description: A request for relationship between two parties.
      CountResponse_Affiliate:
        required:
          - count
          - success
        type: object
        properties:
          success:
            type: boolean
            description: True if count query worked.
            example: true
          count:
            type: integer
            description: Number of reviews for this property.
            format: int64
            example: 1543
      Coupon_Affiliate:
        type: object
        properties:
          amountOff:
            type: integer
            format: int64
          created:
            type: integer
            format: int64
          currency:
            type: string
          deleted:
            type: boolean
          duration:
            type: string
          durationInMonths:
            type: integer
            format: int64
          id:
            type: string
          livemode:
            type: boolean
          maxRedemptions:
            type: integer
            format: int64
          metadata:
            type: object
            additionalProperties:
              type: string
          name:
            type: string
          object:
            type: string
          percentOff:
            type: number
          redeemBy:
            type: integer
            format: int64
          timesRedeemed:
            type: integer
            format: int64
          valid:
            type: boolean
      CustomerTaxId_Affiliate:
        type: object
        properties:
          type:
            type: string
          value:
            type: string
      Discount_Affiliate:
        type: object
        properties:
          coupon:
            $ref: '#/components/schemas/Coupon_Affiliate'
          deleted:
            type: boolean
          end:
            type: integer
            format: int64
          object:
            type: string
          start:
            type: integer
            format: int64
          subscription:
            type: string
      InvoiceLineItemCollection_Affiliate:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/InvoiceLineItem_Affiliate'
      InvoiceLineItemPeriod_Affiliate:
        type: object
        properties:
          end:
            type: integer
            format: int64
          start:
            type: integer
            format: int64
      InvoiceLineItem_Affiliate:
        type: object
        properties:
          amount:
            type: integer
            format: int64
          currency:
            type: string
          description:
            type: string
          discountable:
            type: boolean
          id:
            type: string
          invoiceItem:
            type: string
          livemode:
            type: boolean
          metadata:
            type: object
            additionalProperties:
              type: string
          object:
            type: string
          period:
            $ref: '#/components/schemas/InvoiceLineItemPeriod_Affiliate'
          plan:
            $ref: '#/components/schemas/Plan_Affiliate'
          price:
            $ref: '#/components/schemas/Price_Affiliate'
          proration:
            type: boolean
          quantity:
            type: integer
            format: int64
          subscription:
            type: string
          subscriptionItem:
            type: string
          taxAmounts:
            type: array
            items:
              $ref: '#/components/schemas/TaxAmount_Affiliate'
          taxRates:
            type: array
            items:
              $ref: '#/components/schemas/TaxRate_Affiliate'
          type:
            type: string
      Invoice_Affiliate:
        type: object
        properties:
          accountCountry:
            type: string
          accountName:
            type: string
          amountDue:
            type: integer
            format: int64
          amountPaid:
            type: integer
            format: int64
          amountRemaining:
            type: integer
            format: int64
          applicationFeeAmount:
            type: integer
            format: int64
          attemptCount:
            type: integer
            format: int64
          attempted:
            type: boolean
          autoAdvance:
            type: boolean
          billing:
            type: string
          billingReason:
            type: string
          collectionMethod:
            type: string
          created:
            type: integer
            format: int64
          currency:
            type: string
          customerAddress:
            $ref: '#/components/schemas/Address_Affiliate'
          customerEmail:
            type: string
          customerName:
            type: string
          customerPhone:
            type: string
          customerShipping:
            $ref: '#/components/schemas/ShippingDetails_Affiliate'
          customerTaxExempt:
            type: string
          customerTaxIds:
            type: array
            items:
              $ref: '#/components/schemas/CustomerTaxId_Affiliate'
          defaultTaxRates:
            type: array
            items:
              $ref: '#/components/schemas/TaxRate_Affiliate'
          deleted:
            type: boolean
          description:
            type: string
          discount:
            $ref: '#/components/schemas/Discount_Affiliate'
          dueDate:
            type: integer
            format: int64
          endingBalance:
            type: integer
            format: int64
          footer:
            type: string
          hostedInvoiceUrl:
            type: string
          id:
            type: string
          invoicePdf:
            type: string
          lines:
            $ref: '#/components/schemas/InvoiceLineItemCollection_Affiliate'
          livemode:
            type: boolean
          metadata:
            type: object
            additionalProperties:
              type: string
          nextPaymentAttempt:
            type: integer
            format: int64
          number:
            type: string
          object:
            type: string
          paid:
            type: boolean
          periodEnd:
            type: integer
            format: int64
          periodStart:
            type: integer
            format: int64
          postPaymentCreditNotesAmount:
            type: integer
            format: int64
          prePaymentCreditNotesAmount:
            type: integer
            format: int64
          receiptNumber:
            type: string
          startingBalance:
            type: integer
            format: int64
          statementDescriptor:
            type: string
          status:
            type: string
          statusTransitions:
            $ref: '#/components/schemas/StatusTransitions_Affiliate'
          subscriptionProrationDate:
            type: integer
            format: int64
          subtotal:
            type: integer
            format: int64
          tax:
            type: integer
            format: int64
          thresholdReason:
            $ref: '#/components/schemas/ThresholdReason_Affiliate'
          total:
            type: integer
            format: int64
          totalTaxAmounts:
            type: array
            items:
              $ref: '#/components/schemas/TotalTaxAmount_Affiliate'
          transferData:
            $ref: '#/components/schemas/TransferData_Affiliate'
          webhooksDeliveredAt:
            type: integer
            format: int64
      PlanTier_Affiliate:
        type: object
        properties:
          unitAmount:
            type: integer
            format: int64
          flatAmount:
            type: integer
            format: int64
          upTo:
            type: integer
            format: int64
      Plan_Affiliate:
        type: object
        properties:
          active:
            type: boolean
          aggregateUsage:
            type: string
          amount:
            type: integer
            format: int64
          amountDecimal:
            type: number
          billingScheme:
            type: string
          created:
            type: integer
            format: int64
          currency:
            type: string
          deleted:
            type: boolean
          id:
            type: string
          interval:
            type: string
          intervalCount:
            type: integer
            format: int64
          livemode:
            type: boolean
          metadata:
            type: object
            additionalProperties:
              type: string
          nickname:
            type: string
          object:
            type: string
          tiers:
            type: array
            items:
              $ref: '#/components/schemas/PlanTier_Affiliate'
          tiersMode:
            type: string
          transformUsage:
            $ref: '#/components/schemas/TransformUsage_Affiliate'
          trialPeriodDays:
            type: integer
            format: int64
          usageType:
            type: string
          sort:
            type: integer
            format: int32
      PriceTier_Affiliate:
        type: object
        properties:
          flatAmount:
            type: integer
            format: int64
          flatAmountDecimal:
            type: number
          unitAmount:
            type: integer
            format: int64
          unitAmountDecimal:
            type: number
          upTo:
            type: integer
            format: int64
      Price_Affiliate:
        type: object
        properties:
          active:
            type: boolean
          billingScheme:
            type: string
          created:
            type: integer
            format: int64
          currency:
            type: string
          deleted:
            type: boolean
          id:
            type: string
          livemode:
            type: boolean
          lookupKey:
            type: string
          metadata:
            type: object
            additionalProperties:
              type: string
          nickname:
            type: string
          object:
            type: string
          recurring:
            $ref: '#/components/schemas/Recurring_Affiliate'
          tiers:
            type: array
            items:
              $ref: '#/components/schemas/PriceTier_Affiliate'
          tiersMode:
            type: string
          transformQuantity:
            $ref: '#/components/schemas/TransformQuantity_Affiliate'
          type:
            type: string
          unitAmount:
            type: integer
            format: int64
          unitAmountDecimal:
            type: number
          sort:
            type: integer
            format: int32
          priceType:
            type: string
            enum:
              - STARTUP
              - PRO
              - AGENT
              - OTA
          metered:
            type: boolean
      Recurring_Affiliate:
        type: object
        properties:
          aggregateUsage:
            type: string
          interval:
            type: string
          intervalCount:
            type: integer
            format: int64
          trialPeriodDays:
            type: integer
            format: int64
          usageType:
            type: string
      ShippingDetails_Affiliate:
        type: object
        properties:
          address:
            $ref: '#/components/schemas/Address_Affiliate'
          carrier:
            type: string
          name:
            type: string
          phone:
            type: string
          trackingNumber:
            type: string
      StatusTransitions_Affiliate:
        type: object
        properties:
          finalizedAt:
            type: integer
            format: int64
          markedUncollectibleAt:
            type: integer
            format: int64
          paidAt:
            type: integer
            format: int64
          voidedAt:
            type: integer
            format: int64
      TaxAmount_Affiliate:
        type: object
        properties:
          amount:
            type: integer
            format: int64
          inclusive:
            type: boolean
      TaxRate_Affiliate:
        type: object
        properties:
          active:
            type: boolean
          created:
            type: integer
            format: int64
          description:
            type: string
          displayName:
            type: string
          id:
            type: string
          inclusive:
            type: boolean
          jurisdiction:
            type: string
          livemode:
            type: boolean
          metadata:
            type: object
            additionalProperties:
              type: string
          object:
            type: string
          percentage:
            type: number
      ThresholdItemReason_Affiliate:
        type: object
        properties:
          lineItemIds:
            type: array
            items:
              type: string
          usageGte:
            type: integer
            format: int64
      ThresholdReason_Affiliate:
        type: object
        properties:
          amountGte:
            type: integer
            format: int64
          itemReasons:
            type: array
            items:
              $ref: '#/components/schemas/ThresholdItemReason_Affiliate'
      TotalTaxAmount_Affiliate:
        type: object
        properties:
          amount:
            type: integer
            format: int64
          inclusive:
            type: boolean
      TransferData_Affiliate:
        type: object
      TransformQuantity_Affiliate:
        type: object
        properties:
          divideBy:
            type: integer
            format: int64
          round:
            type: string
      TransformUsage_Affiliate:
        type: object
        properties:
          divideBy:
            type: integer
            format: int64
          round:
            type: string
      InvoiceCollection_Affiliate:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/components/schemas/Invoice_Affiliate'
      InventoryMapMarker_Affiliate:
        type: object
        properties:
          channelInventoryIdentifier:
            type: string
            description: Identifier of the list, channel inventory or search
            example: channel-inventory-1
          point:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          supplierIdentifier:
            type: string
            description: Hotel identifier
            format: uuid
          supplierName:
            type: string
            description: Hotel name
            example: Sheraton
          supplierUrlName:
            type: string
            description: Hotel url name
            example: sheraton-hotel-bangkok
          inventoryIdentifier:
            type: string
            description: Actual inventory identifier
            format: uuid
          inventoryType:
            type: string
            description: Type of inventory
            example: GUEST_ROOM
            enum:
              - GUEST_ROOM
              - ADD_ON
              - MEETING_ROOM
              - RESTAURANT
              - SPA
              - ATTRACTION
              - PLACE
              - ACTIVITY
          inventoryName:
            type: string
            description: Name of inventory
            example: Supreme King
        description: Inventory map marker
      CampaignInventory_Affiliate:
        type: object
        properties:
          name:
            type: string
          layout:
            type: string
            enum:
              - AD_BANNER
              - MAP
              - HOTEL
              - GUEST_ROOM
              - MEETING_ROOM
              - SPA
              - RESTAURANT
              - ACTIVITY
              - ATTRACTION
              - PLACE
              - ADD_ON
              - LIST
              - SEARCH
              - RANKED
          id:
            type: string
          placeholderImageUrl:
            type: string
      DynamicSellerListView_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Unique document identifier
            format: uuid
            readOnly: true
          createdDate:
            type: string
            description: Datetime this record was first created
            format: date-time
            readOnly: true
          lastUpdate:
            type: string
            description: Datetime this record was last updated
            format: date-time
            readOnly: true
          version:
            type: integer
            description: >-
              Version property that shows how many times this document has been
              persisted. Document will not persist if the version property is less
              than current version property in the system. Result in an optimistic
              locking exception.
            format: int64
            readOnly: true
            example: 12
          dynamicSellerList:
            $ref: '#/components/schemas/DynamicSellerList_Affiliate'
      DynamicSellerList_Affiliate:
        required:
          - identifier
          - name
          - ownerIdentifier
        type: object
        properties:
          identifier:
            type: string
            description: >-
              Unique search result identifier gets populated for when you want to
              save your query.
            format: uuid
          ownerIdentifier:
            type: string
            description: Entity identifier of record creator
            format: uuid
          name:
            type: string
            description: Name of dynamic list for when user want to persist it
          propertyName:
            type: string
            description: Regex expression filter matching on property name.
            example: Shera
          locationCategories:
            type: array
            description: >-
              Supported OTA specification `LOC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 34
            items:
              type: string
              description: >-
                Supported OTA specification `LOC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '34'
          segmentCategories:
            type: array
            description: >-
              Supported OTA specification `SEG` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 7
            items:
              type: string
              description: >-
                Supported OTA specification `SEG` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '7'
          hotelCategories:
            type: array
            description: >-
              Supported OTA specification `PCT` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 45
            items:
              type: string
              description: >-
                Supported OTA specification `PCT` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '45'
          architecturalStyles:
            type: array
            description: >-
              Supported OTA specification `ARC` code. See [OTA geoname
              data](https://api.wink.travel)
            example: 7
            items:
              type: string
              description: >-
                Supported OTA specification `ARC` code. See [OTA geoname
                data](https://api.wink.travel)
              example: '7'
          inventoryName:
            type: string
            description: Regex expression filter matching on inventory name
            example: Badmint
          continents:
            type: array
            description: Continent filter
            items:
              type: string
              description: Filter on standardized continent codes
              example: NA
          countries:
            type: array
            description: Country filter
            items:
              type: string
              description: Filter on GeoNameId of country
              example: '985678'
          cities:
            type: array
            description: City filter
            items:
              type: string
              description: Filter on GeoNameId of city
              example: '985678'
          showEcoFriendly:
            type: boolean
            description: Filter on eco-friendly hotels
            example: false
            default: false
          showPetFriendly:
            type: boolean
            description: Filter on pet-friendly hotels
            example: false
            default: false
          showChildFriendly:
            type: boolean
            description: Filter on child-friendly hotels
            example: false
            default: false
          showPopular:
            type: boolean
            description: Filter on hotel that has had a certain amount of bookings
            example: false
            default: false
          showDirectOnly:
            type: boolean
            description: Filter on direct inventory
            example: false
            default: false
          lifestyles:
            type: array
            description: Filter on lifestyles
            example:
              - LIFESTYLE_RELAX
            items:
              type: string
              description: Filter on lifestyles
              example: '["LIFESTYLE_RELAX"]'
              enum:
                - LIFESTYLE_HEALTH_FITNESS
                - LIFESTYLE_RELAX
                - LIFESTYLE_ADULT_ONLY
                - LIFESTYLE_ADVENTURE
                - LIFESTYLE_BUSINESS
                - LIFESTYLE_LGBT
                - LIFESTYLE_SINGLE_PARENT
                - LIFESTYLE_SOLO_FEMALE
                - LIFESTYLE_BEAUTY
                - LIFESTYLE_FOODIE
                - LIFESTYLE_FAMILY
                - LIFESTYLE_ROMANCE
                - LIFESTYLE_COUPLE
                - LIFESTYLE_SOLO
                - LIFESTYLE_BACKPACKER
                - LIFESTYLE_SHOPPING
                - LIFESTYLE_SPORTS
                - LIFESTYLE_MOUNTAIN
                - LIFESTYLE_BEACH
                - LIFESTYLE_CITY
                - LIFESTYLE_COUNTRY
                - LIFESTYLE_CULTURE
                - LIFESTYLE_ECO
          hotelStars:
            type: integer
            description: Filter on number of stars the hotel has.
            format: int32
            example: 4
          aggregateReviewRating:
            type: integer
            description: Filter on aggregate review score the hotel has
            format: int32
            example: 7
          nearPoint:
            $ref: '#/components/schemas/GeoJsonPoint_Affiliate'
          radiusInMeters:
            type: integer
            description: >-
              Use this in conjunction with `nearPoint`. Control the distance from
              point we are searching for.
            format: int64
          inventoryTypes:
            type: array
            description: Filter on inventory types
            example:
              - GUEST_ROOM
            items:
              type: string
              enum:
                - GUEST_ROOM
                - ADD_ON
                - MEETING_ROOM
                - RESTAURANT
                - SPA
                - ATTRACTION
                - PLACE
                - ACTIVITY
          primaryOrderBy:
            type: string
            description: |
              Control how you want the search results sorted. Options are: 

              - 1: Inventory name
              - 2: Price: High to low
              - 3: Price: Low to high
              - 4: Commission: High to low
              - 5: Commission: Low to high
              - 6: Discount: High to low
              - 7: Discount: Low to high
            example: '4'
      Application:
        required:
          - clientId
          - id
          - name
          - ownerIdentifier
          - ownerName
          - ownerType
        type: object
        properties:
          id:
            type: string
            description: Unique identifier.
            format: uuid
          ownerIdentifier:
            type: string
            description: Unique owner record identifier
            format: uuid
          ownerName:
            type: string
            description: Name of company owner.
            example: Travel Tech 1
          ownerType:
            type: string
            description: Type of entity.
            example: COMPANY
            enum:
              - USER
              - COMPANY
              - ACCOUNT
          name:
            type: string
            description: >-
              Name of this engine application. The first engine for every
              integrator will have the same name as its company name.
            example: Engine 1
          redirectUris:
            type: array
            description: >-
              Where to redirect after web components successfully authenticate.
              For OAuth2 purposes.
            example:
              - https://my.travel.blog
            items:
              type: string
              description: >-
                Where to redirect after web components successfully authenticate.
                For OAuth2 purposes.
              example: '["https://my.travel.blog"]'
          clientId:
            type: string
            description: >-
              Client identifier used to authenticate an Oauth2 or web component
              request.
            example: client-id-123
      RevokeClientIdResponse:
        required:
          - clientId
          - id
          - secretKey
        type: object
        properties:
          id:
            type: string
            description: Unique identifier.
            format: uuid
          clientId:
            type: string
            description: >-
              Client identifier used to authenticate an Oauth2 or web component
              request.
            example: client-id-123
          secretKey:
            type: string
            description: Password used to authenticate an Oauth2 request.
      RemoveEntryResponse_Affiliate:
        type: object
        properties:
          id:
            type: string
            description: Identifier of removed document
            example: document-1
          success:
            type: boolean
            description: Whether the removal was successful or not.
            example: true
          message:
            type: string
            description: >-
              Message with additional information; mostly if the removal request
              was a failure.
            example: Record successfully removed
        description: Response object for when a system document is removed.
      RemoveEntryResponse:
        type: object
        properties:
          id:
            type: string
            description: Identifier of removed document
            example: document-1
          success:
            type: boolean
            description: Whether the removal was successful or not.
            example: true
          message:
            type: string
            description: >-
              Message with additional information; mostly if the removal request
              was a failure.
            example: Record successfully removed
        description: Response object for when a system document is removed.
    securitySchemes:
      oauth2ClientCredentials:
        type: oauth2
        description: >-
          ## Retrieve access token

          Make a POST (`Content-Type: application/x-www-form-urlencoded`) request
          to the Token URL below. Include one POST key/value entry:
          `grant_type=client_credentials` and include your clientID / secretKey
          credentials in a Basic Auth header. E.g. `Authorization: Basic
          base64_encode($clientId + ':' + $secretKey)`.

          ## Add Bearer access token to all API requests

          Once you have the access token, you can pass that along on all API
          requests in the authentication header: `'Authorization: Bearer
          $accessToken`.

          Note: Tokens expire after 3 hours. Please make sure you refresh your
          token before that time.
        flows:
          clientCredentials:
            authorizationUrl: https://iam.wink.travel/oauth2/authorize
            tokenUrl: https://iam.wink.travel/oauth2/token
            refreshUrl: https://iam.wink.travel/oauth2/refresh
            scopes:
              inventory.read: Read wink data
              inventory.write: Create wink data
              inventory.remove: Remove wink data
konfigCliVersion: 1.38.37
