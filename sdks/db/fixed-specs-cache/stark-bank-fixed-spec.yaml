publishJson:
  company: Stark Bank
  serviceName: false
  sdkName: stark-bank-{language}-sdk
  clientName: StarkBank
  metaDescription: >-
    Nós somos um challenger bank focado em enterprise no Brasil.


    Tudo que fazemos é para impulsionar empresas e empreendedores a desafiarem o
    status quo e mudarem o Brasil para melhor.
  apiStatusUrls: inherit
  homepage: starkbank.com/en
  developerDocumentation: www.starkbank.com/docs/api
  categories:
    - fintech
    - banking
    - boletos
    - open_banking
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Stark Bank API
    version: v2
    description: Stark Bank API for financial services in Brazil
    contact:
      email: help@starkbank.com
      name: Stark Bank Developers
      url: https://starkbank.com
    license:
      name: Stark Bank License
  externalDocs:
    url: https://starkbank.com/docs/api
    description: StarkBank API documentation
  servers:
    - url: https://sandbox.api.starkbank.com/
    - url: https://api.starkbank.com/
  paths:
    /transaction:
      post:
        summary: Create transactions
        requestBody:
          description: Transactions to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        operationId: createTransaction
        tags:
          - transaction
        responses:
          '200':
            description: Created transactions
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transactions'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List transactions
        operationId: listTransactions
        tags:
          - transaction
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: externalIds
            in: query
            description: List of strings to get specific entities by externalIds.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of transactions and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transactions'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transaction/{transactionId}:
      get:
        summary: Get transaction by ID
        operationId: getTransaction
        tags:
          - transaction
        parameters:
          - name: transactionId
            in: path
            description: Transaction unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated transaction json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /balance:
      get:
        summary: List balances
        operationId: listBalances
        tags:
          - balance
        responses:
          '200':
            description: An array of balances and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Balances'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transfer:
      post:
        summary: Create transfers
        requestBody:
          description: Transfers to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
        operationId: createTransfers
        tags:
          - transfer
        responses:
          '200':
            description: Created transfers
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transfers'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List transfers
        operationId: listTransfers
        tags:
          - transfer
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: transactionIds
            in: query
            description: Filter entities that are linked to the specified transactions.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter boletos by the specified status.
            required: false
            schema:
              type: string
          - name: taxId
            in: query
            description: Filter transfers sent to the specified taxId.
            required: false
            schema:
              type: string
              pattern: >-
                ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          - name: sort
            in: query
            description: >-
              Sort entities by the specified sort order. Options are "-created",
              "created", "-updated", "updated".
            required: false
            schema:
              type: string
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of transfers and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transfers'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transfer/{transferId}:
      get:
        summary: Get transfer by ID
        operationId: getTransfer
        tags:
          - transfer
        parameters:
          - name: transferId
            in: path
            description: Transfer unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated transfer json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransferInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transfer/{transferId}/pdf:
      get:
        summary: Get transfer PDF receipt by ID
        operationId: getTransferPDF
        tags:
          - transfer
        parameters:
          - name: transferId
            in: path
            description: Transfer unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Transfer PDF receipt blob
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transfer/log:
      get:
        summary: List transfer logs
        operationId: listTransferLogs
        tags:
          - transfer
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: transferIds
            in: query
            description: Array of transfer ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of transfer logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransferLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /transfer/log/{logId}:
      get:
        summary: Get transfer log by ID
        operationId: getTransferLog
        tags:
          - transfer
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated transfer log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransferLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice:
      post:
        summary: Create invoices
        requestBody:
          description: Invoices to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoices'
        operationId: createInvoices
        tags:
          - invoice
        responses:
          '200':
            description: Created invoices
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Invoices'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List invoices
        operationId: listInvoices
        tags:
          - invoice
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: Filter invoices by the specified status.
            required: false
            schema:
              type: string
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of invoices and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Invoices'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice/{invoiceId}:
      get:
        summary: Get invoice by ID
        operationId: getInvoice
        tags:
          - invoice
        parameters:
          - name: invoiceId
            in: path
            description: Invoice unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated invoice json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      patch:
        summary: Update or refund an invoice by ID
        operationId: patchInvoice
        tags:
          - invoice
        parameters:
          - name: invoiceId
            in: path
            description: Invoice unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        requestBody:
          description: Invoice fields to be patched
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePatch'
        responses:
          '200':
            description: Updated invoice json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice/{invoiceId}/pdf:
      get:
        summary: Get invoice PDF by ID
        operationId: getInvoicePDF
        tags:
          - invoice
        parameters:
          - name: invoiceId
            in: path
            description: Invoice unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Invoice QR code
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice/{invoiceId}/qrcode:
      get:
        summary: Get invoice QR Code by ID
        operationId: getInvoiceQRCode
        tags:
          - invoice
        parameters:
          - name: invoiceId
            in: path
            description: Invoice unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: format
            in: query
            description: output file format
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Invoice QR code
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice/log:
      get:
        summary: List invoice logs
        operationId: listInvoiceLogs
        tags:
          - invoice
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: invoiceIds
            in: query
            description: Array of invoice ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of invoice logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /invoice/log/{logId}:
      get:
        summary: Get invoice log by ID
        operationId: getInvoiceLog
        tags:
          - invoice
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated invoice log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvoiceLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /deposit:
      get:
        summary: List deposits
        operationId: listDeposits
        tags:
          - deposit
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: Filter deposits by the specified status.
            required: false
            schema:
              type: string
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: sort
            in: query
            description: >-
              Sort entities by the specified sort order. Options are "-created"
              and "created".
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of deposits and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Deposits'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /deposit/{depositId}:
      get:
        summary: Get deposit by ID
        operationId: getDeposit
        tags:
          - deposit
        parameters:
          - name: depositId
            in: path
            description: Deposit unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated deposit json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DepositInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /deposit/log:
      get:
        summary: List deposit logs
        operationId: listDepositLogs
        tags:
          - deposit
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: depositIds
            in: query
            description: Array of deposit ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of deposit logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DepositLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /deposit/log/{logId}:
      get:
        summary: Get deposit log by ID
        operationId: getDepositLog
        tags:
          - deposit
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated deposit log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DepositLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto:
      post:
        summary: Create boletos
        requestBody:
          description: Boletos to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boletos'
        operationId: createBoletos
        tags:
          - boleto
        responses:
          '200':
            description: Created boletos
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Boletos'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List boletos
        operationId: listBoletos
        tags:
          - boleto
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: Filter boletos by the specified status.
            required: false
            schema:
              type: string
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of boletos and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Boletos'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto/{boletoId}:
      get:
        summary: Get boleto by ID
        operationId: getBoleto
        tags:
          - boleto
        parameters:
          - name: boletoId
            in: path
            description: Boleto unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated boleto json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      delete:
        summary: Cancel and delete a boleto by ID
        operationId: cancelAndDeleteBoleto
        tags:
          - boleto
        parameters:
          - name: boletoId
            in: path
            description: Boleto unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        responses:
          '200':
            description: Canceled/Deleted boleto json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto/{boletoId}/pdf:
      get:
        summary: Get boleto PDF by ID
        operationId: getBoletoPDF
        tags:
          - boleto
        parameters:
          - name: boletoId
            in: path
            description: Boleto unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Boleto PDF blob
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto/log:
      get:
        summary: List boleto logs
        operationId: listBoletoLogs
        tags:
          - boleto
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: boletoIds
            in: query
            description: Array of boleto ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of boleto logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto/log/{logId}:
      get:
        summary: Get boleto log by ID
        operationId: getBoletoLog
        tags:
          - boleto
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated boleto log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-holmes:
      post:
        summary: Create boleto holmes
        requestBody:
          description: Holmes to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoletoHolmes'
        operationId: createBoletoHolmes
        tags:
          - boletoHolmes
        responses:
          '200':
            description: Created boleto holmes
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoHolmes'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List boleto holmes
        operationId: listBoletoHolmes
        tags:
          - boletoHolmes
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter holmes by the specified status.
            required: false
            schema:
              type: string
          - name: boletoId
            in: query
            description: Filter holmes by the specified boleto.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of holmes and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoHolmes'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-holmes/{holmesId}:
      get:
        summary: Get boleto holmes by ID
        operationId: getBoletoHolmes
        tags:
          - boletoHolmes
        parameters:
          - name: holmesId
            in: path
            description: Holmes unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated holmes json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoHolmesInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-holmes/log:
      get:
        summary: List boleto holmes logs
        operationId: listBoletoHolmesLogs
        tags:
          - boletoHolmes
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: holmesIds
            in: query
            description: Array of holmes ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of holmes logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoHolmesLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-holmes/log/{logId}:
      get:
        summary: Get boleto holmes log by ID
        operationId: getBoletoHolmesLog
        tags:
          - boletoHolmes
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated holmes log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoHolmesLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-preview:
      get:
        summary: Process BR Codes before creating BrcodePayments
        operationId: ListBrcodePreviews
        tags:
          - brcodePreview
        parameters:
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: brcodes
            in: query
            description: List of BR Codes to be processed.
            required: false
            schema:
              type: string
              format: date
        responses:
          '200':
            description: A paged array of previews
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePreviews'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-payment:
      post:
        summary: Create BR Code payments
        requestBody:
          description: Payments to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrcodePayments'
        operationId: createBrcodePayments
        tags:
          - brcodePayment
        responses:
          '200':
            description: Created BR Code payments
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List BR Code payments
        operationId: listBrcodePayments
        tags:
          - brcodePayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter payments by the specified status.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of payments and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-payment/{paymentId}:
      get:
        summary: Get BR Code payment by ID
        operationId: getBrcodePayment
        tags:
          - brcodePayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      patch:
        summary: Update a BR Code payment by ID
        operationId: updateBrcodePayment
        tags:
          - brcodePayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        requestBody:
          description: Payment fields to be patched
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrcodePaymentPatch'
        responses:
          '200':
            description: Updated payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-payment/{paymentId}/pdf:
      get:
        summary: Get BR Code payment PDF receipt by payment ID
        operationId: getBrcodePaymentPDF
        tags:
          - brcodePayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: BR Code payment PDF blob
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-payment/log:
      get:
        summary: List BR Code payment logs
        operationId: listBrcodePaymentLogs
        tags:
          - brcodePayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: paymentIds
            in: query
            description: Array of payment ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of payment logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePaymentLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /brcode-payment/log/{logId}:
      get:
        summary: Get BR Code payment log by ID
        operationId: getBrcodePaymentLog
        tags:
          - brcodePayment
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BrcodePaymentLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-payment:
      post:
        summary: Create boleto payments
        requestBody:
          description: Payments to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoletoPayments'
        operationId: createBoletoPayments
        tags:
          - boletoPayment
        responses:
          '200':
            description: Created boleto payments
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List boleto payments
        operationId: listBoletoPayments
        tags:
          - boletoPayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter payments by the specified status.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of payments and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-payment/{paymentId}:
      get:
        summary: Get boleto payment by ID
        operationId: getBoletoPayment
        tags:
          - boletoPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      delete:
        summary: Cancel and delete a boleto payment by ID
        operationId: cancelAndDeleteBoletoPayment
        tags:
          - boletoPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        responses:
          '200':
            description: Canceled/Deleted payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-payment/{paymentId}/pdf:
      get:
        summary: Get boleto payment PDF receipt by payment ID
        operationId: getBoletoPaymentPDF
        tags:
          - boletoPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Boleto payment PDF blob
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-payment/log:
      get:
        summary: List boleto payment logs
        operationId: listBoletoPaymentLogs
        tags:
          - boletoPayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: paymentIds
            in: query
            description: Array of payment ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of payment logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPaymentLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /boleto-payment/log/{logId}:
      get:
        summary: Get boleto payment log by ID
        operationId: getBoletoPaymentLog
        tags:
          - boletoPayment
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BoletoPaymentLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /utility-payment:
      post:
        summary: Create utility payments
        requestBody:
          description: Payments to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityPayments'
        operationId: createUtilityPayments
        tags:
          - utilityPayment
        responses:
          '200':
            description: Created utility payments
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List utility payments
        operationId: listUtilityPayments
        tags:
          - utilityPayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter payments by the specified status.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of payments and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPayments'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /utility-payment/{paymentId}:
      get:
        summary: Get utility payment by ID
        operationId: getUtilityPayment
        tags:
          - utilityPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      delete:
        summary: Cancel and delete a utility payment by ID
        operationId: cancelAndDeleteUtilityPayment
        tags:
          - utilityPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        responses:
          '200':
            description: Canceled/Deleted payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPaymentInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /utility-payment/{paymentId}/pdf:
      get:
        summary: Get utility payment PDF receipt by payment ID
        operationId: getUtilityPaymentPDF
        tags:
          - utilityPayment
        parameters:
          - name: paymentId
            in: path
            description: Payment unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Utility payment PDF receipt blob
            content:
              application/json:
                schema:
                  type: string
                  format: binary
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /utility-payment/log:
      get:
        summary: List utility payment logs
        operationId: listUtilityPaymentLogs
        tags:
          - utilityPayment
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: types
            in: query
            description: Filter logs by log types.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: paymentIds
            in: query
            description: Array of payment ids that are linked to the desired logs.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of payment logs and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPaymentLogs'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /utility-payment/log/{logId}:
      get:
        summary: Get utility payment log by ID
        operationId: getUtilityPaymentLog
        tags:
          - utilityPayment
        parameters:
          - name: logId
            in: path
            description: Log unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated payment log json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UtilityPaymentLogInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /payment-request:
      post:
        summary: Create payment requests
        requestBody:
          description: Requests to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequests'
        operationId: createPaymentRequests
        tags:
          - paymentRequest
        responses:
          '200':
            description: Created payment requests
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentRequests'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List payment requests
        operationId: listPaymentRequests
        tags:
          - paymentRequest
        parameters:
          - name: centerId
            in: query
            description: Cost center ID that contains the desired PaymentRequests.
            required: true
            schema:
              type: string
              format: byte
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: sort
            in: query
            description: >-
              Sort entities by the specified sort order. Options are "-created"
              and "-due".
            required: false
            schema:
              type: string
          - name: tags
            in: query
            description: Filter entities that contain the specified tags.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter payments by the specified status.
            required: false
            schema:
              type: string
          - name: type
            in: query
            description: >-
              Filter payments by the specified payment type. Options are
              "transfer", "brcode-payment", ...
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of payment requests and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentRequests'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /webhook:
      post:
        summary: Create a webhook
        requestBody:
          description: Webhook to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        operationId: createWebhook
        tags:
          - webhook
        responses:
          '200':
            description: Created webhook
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Webhook'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List webhooks
        operationId: listWebhooks
        tags:
          - webhook
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of webhooks and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Webhooks'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /webhook/{webhookId}:
      get:
        summary: Get webhook by ID
        operationId: getWebhook
        tags:
          - webhook
        parameters:
          - name: webhookId
            in: path
            description: Webhook unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated webhook json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WebhookInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      delete:
        summary: Delete a webhook by ID
        operationId: cancelAndDeleteWebhook
        tags:
          - webhook
        parameters:
          - name: webhookId
            in: path
            description: Webhook unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        responses:
          '200':
            description: Deleted webhook json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WebhookInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /event:
      get:
        summary: List webhook events
        operationId: listWebhookEvents
        tags:
          - event
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of events and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Events'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /event/{eventId}:
      get:
        summary: Get event by ID
        operationId: getWebhookEvent
        tags:
          - event
        parameters:
          - name: eventId
            in: path
            description: Event unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated event json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      patch:
        summary: Update a webhook event by ID
        operationId: updateWebhookEvent
        tags:
          - event
        parameters:
          - name: eventId
            in: path
            description: Event unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        requestBody:
          description: Event fields to be patched
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPatch'
        responses:
          '200':
            description: Deleted event payment json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      delete:
        summary: Delete a webhook event by ID
        operationId: deleteWebhookEvent
        tags:
          - event
        parameters:
          - name: eventId
            in: path
            description: Event unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
        responses:
          '200':
            description: Deleted event json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EventInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /dict-key:
      get:
        summary: List the DICT (Pix) keys associated with your Stark Bank Workspace
        operationId: listDictKeys
        tags:
          - dictKey
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: after
            in: query
            description: Filter entities created after this date.
            required: false
            schema:
              type: string
              format: date
          - name: before
            in: query
            description: Filter entities created before this date.
            required: false
            schema:
              type: string
              format: date
          - name: ids
            in: query
            description: List of strings to get specific entities by ids.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: status
            in: query
            description: Filter DictKeys by the specified status.
            required: false
            schema:
              type: string
          - name: type
            in: query
            description: >-
              Filter DictKeys by the specified type. Options are "cpf", "cnpj",
              "email", "phone" and "evp"
            required: false
            schema:
              type: string
        responses:
          '200':
            description: A paged array of keys and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DictKeys'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /dict-key/{keyId}:
      get:
        summary: Get DictKey by ID
        operationId: getDictKey
        tags:
          - dictKey
        parameters:
          - name: keyId
            in: path
            description: DICT key unique identifier.
            required: true
            schema:
              type: string
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated DICT key json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DictKeyInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /workspace:
      post:
        summary: Create a workspace
        requestBody:
          description: Workspace to be created
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        operationId: createWorkspace
        tags:
          - workspace
        responses:
          '200':
            description: Created workspace
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Workspace'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
      get:
        summary: List workspaces that your user has access to
        operationId: listWorkspaces
        tags:
          - workspace
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: username
            in: query
            description: Workspace username to be searched.
            required: false
            schema:
              type: array
              items:
                type: string
          - name: ids
            in: query
            description: Workspace ids to be searched.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: A paged array of workspaces and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Workspaces'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /workspace/{workspaceId}:
      get:
        summary: Get workspace by ID
        operationId: getWorkspace
        tags:
          - workspace
        parameters:
          - name: workspaceId
            in: path
            description: Workspace unique identifier.
            required: true
            schema:
              type: string
              format: ^\d{16}$
          - name: fields
            in: query
            description: List of strings to filter response JSON keys.
            required: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Updated workspace json
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WorkspaceInfo'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
    /public-key:
      get:
        summary: List the public keys Stark Bank uses to sign webhooks and receipts
        operationId: listStarkBankPublicKeys
        tags:
          - publicKey
        parameters:
          - name: cursor
            in: query
            description: String used to get the next batch of results.
            required: false
            schema:
              type: string
              format: byte
          - name: limit
            in: query
            description: Number of results per cursor. Max = 100.
            required: false
            schema:
              type: integer
              minimum: 1
              maximum: 100
        responses:
          '200':
            description: A paged array of keys and the next page cursor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PublicKeys'
          '400':
            description: Input error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Errors'
          default:
            description: Unexpected error
  components:
    schemas:
      Error:
        type: object
        properties:
          code:
            type: string
            readOnly: true
          message:
            type: string
            readOnly: true
      Errors:
        type: object
        properties:
          errors:
            type: array
            items:
              $ref: '#/components/schemas/Error'
      Transaction:
        type: object
        required:
          - amount
          - receiverId
          - description
          - externalId
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            minimum: 0
          receiverId:
            type: string
          description:
            type: string
          externalId:
            type: string
          tags:
            items:
              type: string
          senderId:
            type: string
            readOnly: true
          balance:
            type: integer
            readOnly: true
          source:
            type: string
            readOnly: true
          fee:
            type: integer
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
      TransactionInfo:
        type: object
        properties:
          transaction:
            $ref: '#/components/schemas/Transaction'
      Transactions:
        type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/components/schemas/Transaction'
      Balance:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            readOnly: true
          currency:
            type: string
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      Balances:
        type: object
        properties:
          balances:
            type: array
            items:
              $ref: '#/components/schemas/Balance'
      Transfer:
        type: object
        required:
          - amount
          - name
          - taxId
          - bankCode
          - branchCode
          - accountNumber
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            minimum: 0
          name:
            type: string
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          bankCode:
            type: string
            pattern: ˆ^\d{1,8}$
          branchCode:
            type: string
            pattern: ˆ^\d{4}(\-\d{1})?$
          accountNumber:
            type: string
            pattern: ˆ^\d{1,20}$|^\d{1,19}-\d{1}$
          accountType:
            type: string
          externalId:
            type: string
          scheduled:
            type: string
            format: datetime
          tags:
            items:
              type: string
          fee:
            type: integer
            readOnly: true
          transactionIds:
            type: array
            readOnly: true
            items:
              type: string
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      TransferInfo:
        type: object
        properties:
          transfer:
            $ref: '#/components/schemas/Transfer'
      Transfers:
        type: object
        properties:
          transfers:
            type: array
            items:
              $ref: '#/components/schemas/Transfer'
      TransferLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          transfer:
            $ref: '#/components/schemas/Transfer'
      TransferLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/TransferLog'
      TransferLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/TransferLog'
      InvoiceDiscount:
        type: object
        required:
          - due
          - percentage
        properties:
          due:
            type: string
            format: datetime
          percentage:
            type: number
      InvoiceDiscounts:
        type: array
        items:
          $ref: '#/components/schemas/InvoiceDiscount'
      InvoiceDescription:
        type: object
        required:
          - key
          - value
        properties:
          key:
            type: string
          value:
            type: string
      InvoiceDescriptions:
        type: array
        items:
          $ref: '#/components/schemas/InvoiceDescription'
      Invoice:
        type: object
        required:
          - amount
          - taxId
          - name
        properties:
          id:
            type: string
            readOnly: true
          name:
            type: string
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          amount:
            type: integer
          due:
            type: string
            format: datetime
          expiration:
            type: integer
            minimum: 0
            default: 5097600
          tags:
            items:
              type: string
          fine:
            type: number
            minimum: 0
            maximum: 99.9
            default: 2
          interest:
            type: number
            minimum: 0
            maximum: 99.9
            default: 1
          discounts:
            $ref: '#/components/schemas/InvoiceDiscounts'
          descriptions:
            $ref: '#/components/schemas/InvoiceDescriptions'
          status:
            type: string
            readOnly: true
          fee:
            type: integer
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      InvoiceInfo:
        type: object
        properties:
          deposit:
            $ref: '#/components/schemas/Invoice'
      Invoices:
        type: object
        properties:
          invoices:
            type: array
            items:
              $ref: '#/components/schemas/Invoice'
      InvoicePatch:
        type: object
        properties:
          status:
            type: string
          amount:
            type: integer
          due:
            type: string
            format: datetime
          expiration:
            type: integer
      InvoiceLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          invoice:
            $ref: '#/components/schemas/Invoice'
      InvoiceLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/InvoiceLog'
      InvoiceLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/InvoiceLog'
      Deposit:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          amount:
            readOnly: true
            type: integer
            minimum: 0
          name:
            readOnly: true
            type: string
          taxId:
            readOnly: true
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          bankCode:
            readOnly: true
            type: string
            pattern: ˆ^\d{1,8}$
          branchCode:
            readOnly: true
            type: string
            pattern: ˆ^\d{4}(\-\d{1})?$
          accountNumber:
            readOnly: true
            type: string
            pattern: ˆ^\d{1,20}$|^\d{1,19}-\d{1}$
          accountType:
            readOnly: true
            type: string
          type:
            readOnly: true
            type: string
          tags:
            readOnly: true
            items:
              type: string
          fee:
            type: integer
            readOnly: true
          transactionIds:
            type: array
            readOnly: true
            items:
              type: string
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      DepositInfo:
        type: object
        properties:
          deposit:
            $ref: '#/components/schemas/Deposit'
      Deposits:
        type: object
        properties:
          Deposits:
            type: array
            items:
              $ref: '#/components/schemas/Deposit'
      DepositLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          Deposit:
            $ref: '#/components/schemas/Deposit'
      DepositLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/DepositLog'
      DepositLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/DepositLog'
      Boleto:
        type: object
        required:
          - amount
          - name
          - taxId
          - streetLine1
          - streetLine2
          - disctrict
          - city
          - stateCode
          - zipCode
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            minimum: 200
            maximum: 999999999
          name:
            type: string
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          streetLine1:
            type: string
          streetLine2:
            type: string
          disctrict:
            type: string
          city:
            type: string
          stateCode:
            type: string
          zipCode:
            type: string
          due:
            type: string
            format: date
            default: today + 2
          fine:
            type: number
            minimum: 0
            maximum: 99.9
            default: 2
          interest:
            type: number
            minimum: 0
            maximum: 99.9
            default: 1
          overdueLimit:
            type: integer
            minimum: 0
            maximum: 59
            default: 59
          receiverName:
            type: string
            default: ownerName
          receiverTaxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
            default: ownerTaxId
          descriptions:
            $ref: '#/components/schemas/BoletoDescriptions'
          discounts:
            $ref: '#/components/schemas/BoletoDiscounts'
          tags:
            items:
              type: string
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
      BoletoDescription:
        type: object
        required:
          - text
        properties:
          text:
            type: string
          amount:
            type: integer
            minimum: 0
      BoletoDescriptions:
        type: array
        items:
          $ref: '#/components/schemas/BoletoDescription'
      BoletoDiscount:
        type: object
        required:
          - date
          - percentage
        properties:
          date:
            type: string
          percentage:
            type: number
      BoletoDiscounts:
        type: array
        items:
          $ref: '#/components/schemas/BoletoDiscount'
      BoletoInfo:
        type: object
        properties:
          boleto:
            $ref: '#/components/schemas/Boleto'
      Boletos:
        type: object
        properties:
          boletos:
            type: array
            items:
              $ref: '#/components/schemas/Boleto'
      BoletoLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          boleto:
            $ref: '#/components/schemas/Boleto'
      BoletoLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/BoletoLog'
      BoletoLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/BoletoLog'
      BoletoSherlock:
        type: object
        required:
          - boletoId
        properties:
          id:
            type: string
            readOnly: true
          boletoId:
            type: string
          result:
            type: string
            readOnly: true
          tags:
            items:
              type: string
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      BoletoHolmesInfo:
        type: object
        properties:
          holmes:
            $ref: '#/components/schemas/BoletoSherlock'
      BoletoHolmes:
        type: object
        properties:
          holmes:
            type: array
            items:
              $ref: '#/components/schemas/BoletoSherlock'
      BoletoHolmesLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          holmes:
            $ref: '#/components/schemas/BoletoSherlock'
      BoletoHolmesLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/BoletoHolmesLog'
      BoletoHolmesLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/BoletoHolmesLog'
      BrcodePreview:
        type: object
        required:
          - brcode
          - taxId
          - description
        properties:
          id:
            type: string
            readOnly: true
          name:
            type: string
            readOnly: true
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
            readOnly: true
          bankCode:
            type: string
            readOnly: true
          branchCode:
            type: string
            readOnly: true
          accountNumber:
            type: string
            readOnly: true
          accountType:
            type: string
            readOnly: true
          allowChange:
            type: boolean
            readOnly: true
          amount:
            type: integer
            readOnly: true
          reconciliationId:
            type: string
            readOnly: true
      BrcodePreviews:
        type: object
        properties:
          previews:
            type: array
            items:
              $ref: '#/components/schemas/BrcodePreview'
      BrcodePayment:
        type: object
        required:
          - brcode
          - taxId
          - description
        properties:
          id:
            type: string
            readOnly: true
          brcode:
            type: string
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          description:
            type: string
          amount:
            type: integer
          scheduled:
            type: string
            format: date
          tags:
            items:
              type: string
          name:
            type: string
            readOnly: true
          status:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          fee:
            type: integer
            readOnly: true
          transactionIds:
            type: array
            items:
              type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      BrcodePaymentInfo:
        type: object
        properties:
          payment:
            $ref: '#/components/schemas/BrcodePayment'
      BrcodePayments:
        type: object
        properties:
          payments:
            type: array
            items:
              $ref: '#/components/schemas/BrcodePayment'
      BrcodePaymentPatch:
        type: object
        properties:
          status:
            type: string
      BrcodePaymentLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          payment:
            $ref: '#/components/schemas/BrcodePayment'
      BrcodePaymentLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/BrcodePaymentLog'
      BrcodePaymentLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/BrcodePaymentLog'
      BoletoPayment:
        type: object
        required:
          - taxId
          - description
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            readOnly: true
          taxId:
            type: string
            pattern: >-
              ^((\d{3}\.\d{3}\.\d{3}\-\d{2})|(\d{11})|(\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2})|(\d{14}))$
          line:
            type: string
            pattern: ^\d{5}\.\d{5}\s\d{5}\.\d{6}\s\d{5}\.\d{6}\s\d{1}\s\d{14}$
          barCode:
            type: string
            pattern: ^\d{44}$
          description:
            type: string
          scheduled:
            type: string
            format: date
          tags:
            items:
              type: string
          fee:
            type: integer
            readOnly: true
          transactionIds:
            type: array
            items:
              type: string
            readOnly: true
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
      BoletoPaymentInfo:
        type: object
        properties:
          payment:
            $ref: '#/components/schemas/BoletoPayment'
      BoletoPayments:
        type: object
        properties:
          payments:
            type: array
            items:
              $ref: '#/components/schemas/BoletoPayment'
      BoletoPaymentLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          payment:
            $ref: '#/components/schemas/BoletoPayment'
      BoletoPaymentLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/BoletoPaymentLog'
      BoletoPaymentLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/BoletoPaymentLog'
      UtilityPayment:
        type: object
        required:
          - taxId
          - description
        properties:
          id:
            type: string
            readOnly: true
          amount:
            type: integer
            readOnly: true
          line:
            type: string
            pattern: ^\d{5}\.\d{5}\s\d{5}\.\d{6}\s\d{5}\.\d{6}\s\d{1}\s\d{14}$
          barCode:
            type: string
            pattern: ^\d{44}$
          description:
            type: string
          scheduled:
            type: string
            format: date
          tags:
            items:
              type: string
          fee:
            type: integer
            readOnly: true
          transactionIds:
            type: array
            items:
              type: string
            readOnly: true
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
      UtilityPaymentInfo:
        type: object
        properties:
          payment:
            $ref: '#/components/schemas/UtilityPayment'
      UtilityPayments:
        type: object
        properties:
          payments:
            type: array
            items:
              $ref: '#/components/schemas/UtilityPayment'
      UtilityPaymentLog:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          errors:
            type: array
            readOnly: true
            items:
              type: string
          payment:
            $ref: '#/components/schemas/UtilityPayment'
      UtilityPaymentLogInfo:
        type: object
        properties:
          log:
            $ref: '#/components/schemas/UtilityPaymentLog'
      UtilityPaymentLogs:
        type: object
        properties:
          logs:
            type: array
            items:
              $ref: '#/components/schemas/UtilityPaymentLog'
      PaymentRequestAction:
        type: object
        properties:
          action:
            type: string
            readOnly: true
          type:
            type: string
            readOnly: true
          id:
            type: string
            readOnly: true
          name:
            type: string
            readOnly: true
          pictureUrl:
            type: string
            readOnly: true
          email:
            type: string
            readOnly: true
      PaymentRequest:
        type: object
        required:
          - centerId
          - type
          - payment
        properties:
          id:
            type: string
            readOnly: true
          centerId:
            type: string
          type:
            type: string
          payment:
            type: object
          due:
            type: string
            format: date
          tags:
            items:
              type: string
          amount:
            type: integer
            readOnly: true
          actions:
            type: array
            items:
              $ref: '#/components/schemas/PaymentRequestAction'
            readOnly: true
          status:
            type: string
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
          updated:
            type: string
            format: date
            readOnly: true
      PaymentRequests:
        type: object
        properties:
          requests:
            type: array
            items:
              $ref: '#/components/schemas/PaymentRequest'
      Webhook:
        type: object
        required:
          - url
          - subscriptions
        properties:
          id:
            type: string
            readOnly: true
          url:
            type: string
          subscriptions:
            type: array
            items:
              type: string
      WebhookInfo:
        type: object
        properties:
          webhook:
            $ref: '#/components/schemas/Webhook'
      Webhooks:
        type: object
        properties:
          webhooks:
            type: array
            items:
              $ref: '#/components/schemas/Webhook'
      Event:
        type: object
        required:
          - url
          - subscriptions
        properties:
          id:
            type: string
            readOnly: true
          isDelivered:
            type: boolean
          subscription:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
          log:
            type: object
            readOnly: true
            oneOf:
              - $ref: '#/components/schemas/BoletoLog'
              - $ref: '#/components/schemas/TransferLog'
              - $ref: '#/components/schemas/BoletoPaymentLog'
              - $ref: '#/components/schemas/UtilityPaymentLog'
      EventInfo:
        type: object
        properties:
          event:
            $ref: '#/components/schemas/Event'
      Events:
        type: object
        properties:
          events:
            type: array
            items:
              $ref: '#/components/schemas/Event'
      EventPatch:
        type: object
        properties:
          isDelivered:
            type: boolean
      DictKey:
        type: object
        properties:
          id:
            type: string
            readOnly: true
          name:
            type: string
            readOnly: true
          taxId:
            type: string
            readOnly: true
          ownerType:
            type: string
            readOnly: true
          ispb:
            type: string
            pattern: ˆ^\d{1,8}$
            readOnly: true
          branchCode:
            type: string
            pattern: ˆ^\d{4}(\-\d{1})?$
            readOnly: true
          accountNumber:
            type: string
            pattern: ˆ^\d{1,20}$|^\d{1,19}-\d{1}$
            readOnly: true
          accountType:
            type: string
            readOnly: true
          status:
            type: string
            readOnly: true
          account_created:
            type: string
            format: date
            readOnly: true
          owned:
            type: string
            format: date
            readOnly: true
          created:
            type: string
            format: date
            readOnly: true
      DictKeyInfo:
        type: object
        properties:
          key:
            $ref: '#/components/schemas/DictKey'
      DictKeys:
        type: object
        properties:
          keys:
            type: array
            items:
              $ref: '#/components/schemas/DictKey'
      Workspace:
        type: object
        required:
          - username
          - name
        properties:
          id:
            type: string
            readOnly: true
          username:
            type: string
          name:
            type: string
      WorkspaceInfo:
        type: object
        properties:
          workspace:
            $ref: '#/components/schemas/Workspace'
      Workspaces:
        type: object
        properties:
          workspaces:
            type: array
            items:
              $ref: '#/components/schemas/Workspace'
      PublicKey:
        type: object
        required:
          - url
          - subscriptions
        properties:
          content:
            type: string
            readOnly: true
          created:
            type: string
            readOnly: true
      PublicKeys:
        type: object
        properties:
          publicKeys:
            type: array
            items:
              $ref: '#/components/schemas/PublicKey'
konfigCliVersion: 1.38.37
