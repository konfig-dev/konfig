publishJson:
  company: SpotDraft
  serviceName: false
  sdkName: spot-draft-{language}-sdk
  clientName: SpotDraft
  metaDescription: >-
    Businesses like Notion, ChargeBee, Turing, Airbnb, CRED, and more trust
    SpotDraft to help:


    - their in-house legal team automate repetitive, mind-numbing aspects of
    contracting and free up time so they can focus on high-leverage work.

    - their business teams close more contracts on their own without depending
    on legal for every small edit and review.

    - bring more speed, visibility, efficiency & structure to the entire
    contracting process, and more.


    Founded by a Harvard Law School lawyer and two Carnegie Mellon computer
    scientists, SpotDraft is the perfect co-pilot for your legal team that
    democratizes legal paperwork and speeds up the contract lifecycle.
  apiStatusUrls: inherit
  homepage: spotdraft.com
  developerDocumentation: api.spotdraft.com/api/docs
  categories:
    - doc_management
    - legal
    - contract_management_software
    - contract_lifecycle_management
    - clm
rawSpecString: |
  openapi: 3.0.0
  info:
    title: SpotDraft API
    description: "## SpotDraft Public API\n\n## API Reference\n\nThe SpotDraft API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable resource-oriented URLs, accepts [form-encoded](<https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms>) request bodies, returns [JSON-encoded](http://www.json.org/) responses, and uses standard HTTP response codes, authentication, and verbs.\n\n### Note on redirects\n\nOur API will respond with `302 Found` if a redirect is needed. There are two situations in which this usually happens:\n\n- If the API is accessed using `http` instead of `https`.\n- If a trailing slash is added or removed in a way that is inconsitent with this documentation.\n\nCertain libraries can have unexpected behavior if they encounter a redirect.\n\nFor example the python `requests` library will follow the redirect but not using the same HTTP Verb, and instead falling back on `GET`. This can lead to hard to debug issues where the API is seemingly responding with an unexpected body and response code. It is thus advisable to configure `requests` (or any other library) to not follow redirects and instead fail the request if it encounters a redirect. This can be achieved by passing `allow_redirects=False` when making the request (in case of python `requests`).\n\n## Authentication\n\nAll API requests expect a Client ID to be sent as a HTTP Header.\n\n**Requests as the Application**\n\nIn addition to the Client ID, a Client Secret must also be sent in the HTTP Headers. All requests made using this method will be audited as the calling Application.\n\nWhen making requests as the Application, the Application can impersonate a user by passing the `user-email` header with the email\naddress of the user to impersonate. The user must be an active member of the workspace for this to work.\n\nIf impersonation is not used the Application will act as the user who is linked to the credentials. This can be updated by reaching\nout to your Customer Success Associate.\n\n<table>\n  <tr>\n   <td><strong>Type</strong>\n   </td>\n   <td><strong>Params</strong>\n   </td>\n   <td><strong>Values</strong>\n   </td>\n  </tr>\n  <tr>\n   <td><code>HEADER</code>\n   </td>\n   <td><code>client-id</code>\n   </td>\n   <td><code>string</code>\n   </td>\n  </tr>\n  <tr>\n   <td><code>HEADER</code>\n   </td>\n   <td><code>client-secret</code>\n   </td>\n   <td><code>string</code>\n   </td>\n  </tr>\n  <tr>\n   <td><code>HEADER</code>\n   </td>\n   <td><code>user-email</code>\n   </td>\n   <td><code>string (optional)</code>\n   </td>\n  </tr>\n</table>\n\n\\*\\*(<code>Client-Secret</code> must be set in addition to <code>Client-Id</code>)</strong>\n\n## Webhooks\n\nThe SpotDraft API allows API Consumers to receive webhooks when certain actions are taken by Users on the platform.\n\nAt the time of writing webhooks need to be enabled by the SpotDraft Customer Success team. Please reach out to your CS Manager if you need access to this.\n\n**Webhook Schemantics**\n\n- The URL provided must have HTTPS with a valid certificate. Self-signed certificates are not accepted.\n- The webhook will be paused if more than 5 failures occur for a given URL.\n- Multiple webhook URLs can be added for a given SpotDraft account.\n- It is possible to filter to a specific subset of activities to get webhooks on.\n\n**Verifying Webhooks**\n\nAll requests sent by SpotDraft to your server include the header X-SD-CONTENT-HASH which can be used to verify that the webhook was sent by SpotDraft. \\\n \\\nThe content of the X-SD-CONTENT-HASH header is created by computing the HMAC-SHA512 on the JSON payload using the Callback Secret which is shared privately. \\\n \\\nIt can be verified by generating a using the same process on the Consumer end and ensuring that the signatures match. A Python snippet is provided below for clarity.\n\n```\nimport hmac\nimport hashlib\n\nhmac_instance = hmac.new(\n  callback_secret.encode(\"utf-8\"),\n  request.body,\n  digestmod=hashlib.sha512,\n)\nsignature = hmac_instance.hexdigest()\n\nassert signature == request.headers[\"X-SD-CONTENT-HASH\"]\n```\n\n### Webhook Activity Types\n\nThe following are the different activies for which webhooks are sent. The table is sorted by the order in which these activity events are expected.\n\n<table>\n  <tr>\n    <th><code>activity</code> field value</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_CREATED</code></strong></td>\n   <td>When a contract is created</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_SENT_TO_COUNTERPARTY</code></strong></td>\n   <td>When the contract is sent via email to the counterparty for review</td>\n  </tr>\n  <tr>\n   <td><strong><code>REDLINING_EMAIL_DELIVERED</code></strong></td>\n   <td>When the email sent to the counterparty for review is delivered</td>\n  </tr>\n  <tr>\n   <td><strong><code>REDLINING_EMAIL_NOT_DELIVERED</code></strong></td>\n   <td>When the email sent to the counterparty for review could not be delivered for some reason</td>\n  </tr>\n  <tr>\n   <td><strong><code>REDLINING_EMAIL_OPENED</code></strong></td>\n   <td>When the contract sent to the counterparty for review is opened</td>\n  </tr>\n  <tr>\n   <td><strong><code>REDLINING_EMAIL_LINK_CLICKED</code></strong></td>\n   <td>When the counterparty clicks on the contract link sent for review</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_SIGNATURE_REQUESTED</code></strong></td>\n   <td>When a contract is sent for signature</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_SIGNATURE_REQUESTED_NOTIFICATION_SENT</code></strong></td>\n   <td>When someone is notified that they need to add their signature. One per signatory who receives the email</td>\n  </tr>\n  <tr>\n   <td><strong><code>SIGNING_EMAIL_DELIVERED</code></strong></td>\n   <td>When the email sent to the counterparty for signing is delivered</td>\n  </tr>\n  <tr>\n   <td><strong><code>SIGNING_EMAIL_NOT_DELIVERED</code></strong></td>\n   <td>When the email sent to the counterparty for signing could not be delivered for some reason</td>\n  </tr>\n  <tr>\n   <td><strong><code>SIGNING_EMAIL_OPENED</code></strong></td>\n   <td>When the contract sent to the counterparty for signing is opened</td>\n  </tr>\n  <tr>\n   <td><strong><code>SIGNING_EMAIL_LINK_CLICKED</code></strong></td>\n   <td>When the counterparty clicks on the contract link sent for singing</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_SIGNED</code></strong></td>\n   <td>When any user signs a contract</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_EXECUTED</code></strong></td>\n   <td>When all signatures are collected</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_DELETED</code></strong></td>\n   <td>When a contract is moved to the deleted tab</td>\n  </tr>\n  <tr>\n   <td><strong><code>CONTRACT_SIGNATURE_DECLINED</code></strong></td>\n   <td>When a user declines to sign a contract</td>\n  </tr>\n</table>\n\n### Webhook Payload\n\nSee the [webhook section](https://api.spotdraft.com)\n\n## Errors\n\nThe SpotDraft API uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with SpotDraft's servers (these are rare).\n\n**HTTP Status Code Summary**\n\n<table>\n  <tr>\n   <td><strong>200 - OK</strong>\n   </td>\n   <td>Everything worked as expected.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>400 - Bad Request</strong>\n   </td>\n   <td>The request was unacceptable, often due to missing a required parameter.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>401 - Unauthorized</strong>\n   </td>\n   <td>No valid API key provided.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>402 - Request Failed</strong>\n   </td>\n   <td>The parameters were valid but the request failed.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>403 - Forbidden</strong>\n   </td>\n   <td>The API key doesn't have permissions to perform the request.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>404 - Not Found</strong>\n   </td>\n   <td>The requested resource doesn't exist.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>409 - Conflict</strong>\n   </td>\n   <td>The request conflicts with another request (perhaps due to using the same idempotent key).\n   </td>\n  </tr>\n  <tr>\n   <td><strong>429 - Too Many Requests</strong>\n   </td>\n   <td>Too many requests hitting the API, exceeding the rate limit of 10 requests/second. We recommend an exponential backoff of your requests.\n   </td>\n  </tr>\n  <tr>\n   <td><strong>500, 502, 503, 504 - Server Errors</strong>\n   </td>\n   <td>Something went wrong on SpotDraft’s end. (These are rare.)\n   </td>\n  </tr>\n</table>\n\n## Embedded Contract API\n\nThis section explains the steps to integrate SpotDraft\\'s Embedded\nsigning experience into your app.\n\n#### Step 1. Creating a Contract from the data collected\n\n<ol type=\"a\">\n    <li>\n        <b>Authentication</b>\n        <p style=\"font-weight: normal;\">The API credentials (<code>client-id</code> and <code>client-secret</code>) should be generated  by the user who needs to receive notifications when a user signs agreements using Embedded. The same user will also be assigned as the Business User for all contracts created using this flow. Please refer to <a href=\"#section/Authentication\">Authentication</a> for more details.</p>\n    </li><br/>\n    <li>\n        <b>Payload</b>\n        <p style=\"font-weight: normal;\">Once a user fills out the form on your web application, the information provided by them should be passed to the SpotDraft <a href=\"#operation/v2.1_public_contracts_create\">Create Contract API</a>.</p>\n    </li>\n</ol>\n\n#### Step 2. Generate URL\n\nThe call to [Create Contract API](#operation/v2.1_public_contracts_create) made in previous step will return a Contract ID in the response payload. This Contract ID and the email address of the counterparty need to be passed to the [Counterparty Embedded Url](#operation/v2.1_public_contracts_embedded_contracts_counter_party_list) to get the URL which can be iframed in your application.\n\n#### Step 3. Render & Close iframe\n\nThe call to [CounterParty Embedded Url](#operation/v2.1_public_contracts_embedded_contracts_counter_party_list) made in previous step will return a url that can be used to render the iframe. Once the SpotDraft signing experience gets loaded in the iframe, SpotDraft will emit messages using the [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) API to allow your app to react to user actions in the SpotDraft Embedded flow. The following messages are emitted.\n\n<table>\n  <tr>\n   <th>Event</th>\n   <th>Message Name</th>\n   <th>Payload</th>\n  </tr>\n  <tr>\n   <td>Sign Completed Successfully</td>\n   <td>spotdraft.embedded.sign_successful</td>\n   <td>{contract_id}</td>\n  </tr>\n  <tr>\n   <td>Sign Declined by User</td>\n   <td>spotdraft.embedded.sign_declined</td>\n   <td>{contract_id}</td>\n  </tr>\n  <tr>\n   <td>Sign API Fail</td>\n   <td>spotdraft.embedded.sign_error</td>\n   <td>{contract_id, error: {code, upstream_error}} <br/> <br/>\n    code: SD_SIGN_API_ERROR\n   </td>\n  </tr>\n  <tr>\n   <td>PDF Generation Fail</td>\n   <td>spotdraft.embedded.sign_error</td>\n   <td>{contract_id, error: {code, upstream_error}} <br/><br/>\n    code: SD_SIGN_DOC_GENERATION_ERROR\n   </td>\n  </tr>\n</table>\n\n### Points to be noted\n\n<ul>\n    <li>\n        <b>Loader</b>\n        <p>As generating large contracts can take a few seconds, we recommend showing a loader or progress indicator in your application to provide users a visual cue while your app is waiting for the completion of the initial API calls for the Embedded flow. The approach for implementing this loader depends on your app and tech stack.</p>\n    </li><br/>\n    <li>\n        <b>Cluster Id</b>\n        <p>To best serve our users in different regions and be compliant with data residency requirements, we have multiple data centres. The following are the region and the relevant Id: </p>\n        <ul>\n            <li>\n                USA: <code>us</code>\n            </li>\n            <li>\n                Europe: <code>eu</code>\n            </li>\n            <li>\n                India: <code>in</code>\n            </li>\n            <li>\n                Middle East: <code>me</code>\n            </li>\n        </ul>\n    </li>\n</ul>\n\n## Spotdraft Clickthrough SDK\n\n### Introduction\n\nThe Clickthrough JavaScript SDK allows developers to integrate Clickthrough functionality into their web applications. Clickthrough enables you to require users to acknowledge contractual agreements before proceeding with certain actions.\n\nThis documentation provides instructions on how to include and use the Clickthrough JavaScript SDK in your web application.\n\n### Getting Started\n\n#### Prerequisites\n\nBefore you start integrating the Clickthrough JavaScript SDK, make sure you have the following prerequisites in place:\n\n- A SpotDraft Clickthrough account: To use the Clickthrough JavaScript SDK, you need an active SpotDraft Clickthrough account. If you don't have one, you can request a demo by visiting https://www.spotdraft.com/requestfordemo. This account is necessary for creating Clickthroughs and managing contracts.\n  - Clickthrough creation: Within your SpotDraft Clickthrough account, you should have created atleast one Clickthrough. A Clickthrough represents the agreement that your end users will be consenting to. Make sure to configure the necessary contract details, such as name, content, and any other relevant information.\n  - Contract addition: Within your Clickthrough, you need to add contracts that will be a part of the Clickthrough. These contracts define the specific terms and conditions or legal agreements that users must accept.\n- Supported Domains: In the `Clickthrough Settings` tab of your Clickthrough, ensure that you have added the domains where your Clickthrough will be hosted to `Supported Domains`.\n  - For example, if your Clickthrough will be hosted on `https://my_domain.com/clickwraps/test.html`, make sure to add `my_domain.com` to `Supported Domains`.\n- Development environment with SSL enabled\n  - To ensure secure communication between your web application and the Clickthrough JavaScript SDK, it is recommended to have SSL (HTTPS) enabled in your development environment. This ensures that the SDK functions properly and maintains data privacy and security.\n\n### Installation\n\n> **_NOTE:_** All the following code snippets, with the right values for each, can be directly copied from the Spotdraft Clickthrough console by clicking on the `View Snippet` on the Clickthrough page.\n\nAdd the following script tag to your HTML file (ideally in the head tag) to include the SDK:\n\n```\n<script type=\"module\" src=\"https://sdk.spotdraft.com/clickwrap/v1/sdk.js\"></script>\n```\n\n`SdClickthrough` class will be attached to the window and spotdraft Clickthrough will be loaded into your application.\n\n### Initialization\n\nYou must initialize the Spotdraft Clickthrough SDK to include it in your application.\n\n- Initialise `new SdClickthrough` instance to configure the SDK.\n  - Provide the `clickwrapId`, `hostLocationDomId`, and `baseUrl` as shown in the example below:\n    - `clickwrapId` - `UUID` - The Clickthrough public ID from the Clickthrough settings page on SD.\n    - `hostLocationDomId` - `str` - The ID of the dom element where you want to load the Clickthrough.\n    - `baseUrl` - `str` - You can find the base URL on clicking the `View Snippet` on the Clickthrough settings page on SD.\n- Use the `init` method to attach the clickthrough to the HTML DOM.\n\n```\nwindow.addEventListener(\"sdClickthroughLoaded\", function () {\n    const clickthrough = new SdClickthrough({\n      clickwrapId: \"CLICKWRAP_ID_FROM_CONSOLE\",\n      hostLocationDomId: \"HOST_ELEMENT_DOM_ID\",\n      baseUrl: \"BASE_URL_FROM_CONSOLE\"\n    });\n    clickthrough.init();\n})\n```\n\n### Creating Clickthrough Contract\n\nThe `submit` method enables you to create a Clickthrough contract based on the provided agreement. Here's an example of how to use the submit method to create a Clickthrough contract:\n\n```\n// Define the payload object\nconst payload = {\n  user_identifier: 'johndoe@example.com', // this is a required field\n  first_name: 'John',\n  last_name: 'Doe',\n  user_email: 'johndoe@example.com',\n};\n\nclickthrough.submit(payload).then(data => {\n\t// continue to submit the form\n})\n```\n\n> **_NOTE:_** `user_identifier` is a required field and its data type is string. It can be an email, phone number or anything else that uniquely identifies a user on your system.\n\n### Checking Clickthrough Agreement Acceptance\n\nAfter showing the user the Clickthrough agreement, you might want to restrict some operations, including submitting forms, until they have accepted the agreement. The 'isAccepted()' method of the SDK enables you to determine whether a particular Clickthrough agreement has been accepted by the user. Here is how to apply it:\n\n```\nif(clickthrough.isAccepted) {\n    // continue submitting your form\n}\n```\n\n### Passing Custom User Data\n\nThe Spotdraft Clickthrough SDK enables you to create Clickthrough contracts in Spotdraft with customized payload data in addition to obtaining user approval. You can send a payload object to the submit method to be linked to the newly generated Clickthrough contract. Any additional data or metadata pertinent to your application or operational procedures may be included in this payload.\n\nAs part of the submit payload\n\n```\nconst payload = {\n  user_identifier: '123',\n  ...\n    additional_custom_information: {\n    customField1: 'Value 1',\n    customField2: 'Value 2',\n    // Add more custom fields as needed\n  },\n};\n\nclickthrough.submit(payload).then(data => {\n\t// continue to submit the form\n})\n```\n\n### Styling Clickthrough Elements\n\nYou can utilize the class names provided by the Spotdraft Clickthrough SDK to style the items that the SDK renders. To make these elements match the appearance and feel of your application, you can apply unique CSS styles. The list of class names includes:\n\n- sd-clickthrough-checkbox: This class name can be used to target the checkbox element rendered by the SDK.\n\n- sd-clickthrough-text: This class name can be used to target the text content displayed in the Clickthrough agreement.\n\n### Event Handling\n\nYou can listen to events provided by the Spotdraft Clickthrough SDK in order to carry out particular tasks or react to user activities. To add event listeners to the SDK and record these events, use the 'on' method. Here's an example:\n\n```\nclickthrough.on(\"sdClickthroughLoaded\", function (data) {\n  // Event listener callback function\n  console.log(\"Clickthrough object loaded succesfully!!\");\n});\n```\n\nThe followings are the type of events you can listen to:\n\n- acceptanceToggled - When users checks/unchecks the checkbox.\n- sdClickthroughLoaded - When Spotdraft Clickthrough object successfully loads.\n- sdClickthroughLoadFailed - When Spotdraft Clickthrough object failed to load.\n\n### Full example\n\n```\n<html lang=\"en\">\n  <body>\n    <head>\n      <script\n        type=\"module\"\n        src=\"https://sdk.spotdraft.com/clickwrap/v1/sdk.js\"\n      ></script>\n    </head>\n    <form id=\"form\">\n      <!-- Form goes here -->\n      <input id=\"email\" type=\"text\" />\n      <div id=\"my-clickthrough-host\"></div>\n      <button id=\"submit-button\"></button>\n    </form>\n    <script type=\"module\">\n      window.addEventListener(\"sdClickthroughLoaded\", function () {\n        const clickthrough = new SdClickthrough({\n          clickwrapId: \"<CLICKWRAP_ID_FROM_CONSOLE>\",\n          hostLocationDomId: \"my-clickthrough-host\",\n          baseUrl: \"<BASEURL_FROM_CONSOLE>\",\n        });\n        clickthrough.init();\n        clickthrough.on(\"acceptanceToggled\", function (data) {\n          console.log(\"accepted Event triggered:\", data);\n        });\n\n        const button = document.getElementById(\"submit-button\");\n        const form = document.getElementById(\"form\");\n        const email = document.getElementById(\"email\");\n        button.addEventListener(\"click\", function (event) {\n          event.preventDefault();\n          if (!email.value) {\n            alert(\"Please fill all the details\");\n          }\n          if (clickthrough.isAccepted()) {\n            clickthrough.submit({ user_identifier: email.value })\n              .then((_) => {\n                form.submit();\n              });\n          } else {\n            alert(\"Pease accept the policies to continue\");\n          }\n        });\n\n      });\n    </script>\n  </body>\n</html>\n\n```\n\n## Clickthrough KeyPointers\n\n### Generating Reports for Clickthrough Contracts\n\nYou have the option to create reports for Clickthrough contracts on SpotDraft using Key Pointers for each specific Clickthrough Packet. Before using this API, make sure to set up the necessary key pointers for your Clickthrough packet\n\n### Passing Data to Key Pointers\n\nTo send data from your website to a Clickthrough Packet's key pointer, use the `key_pointer_information` field in the clickthrough API payload. Data should be in key-value pairs. The values will be checked against their respective key pointer types for validation.\n\n### Validation and Display\n\nIf the validation fails, the key pointer values won't be shown in the key pointer section. However, this won't cause the contract generation to fail. You can find a list of key pointer values in the table below.\n\n<table>\n  <tr>\n   <th>KeyPointer Types</th>\n   <th>Syntax</th>\n   <th>Sample</th>\n  </tr>\n  <tr>\n   <td><strong>STRING</strong></td>\n   <td>“keypointer_field_name”: “Any_string_value”</td>\n   <td>“slug_name”: \"Harvey Specter\"</td>\n  </tr>\n  <tr>\n   <td><strong>DATE</strong></td>\n   <td>“keypointer_field_name”: “YYYY-MM-DD” <br/> <br/> NB: Date should be in the aforementioned format as a string.</td>\n   <td>\"slug_dob\": \"2023-01-01\"</td>\n  </tr>\n  <tr>\n   <td><strong>NUMBER</strong></td>\n   <td>“keypointer_field_name”: Integer</td>\n   <td>\"slug_age\":24 </td>\n  </tr>\n  <tr>\n   <td><strong>CHECK BOX</strong></td>\n   <td>“keypointer_field_name”: bool</td>\n   <td>“slug_is_admin”: true</td>\n  </tr>\n  <tr>\n   <td><strong>CURRENCY</strong></td>\n   <td>“keypointer_field_name”:{ \"type\": \"Currency_type_code\", \"value\": Integer} </td>\n   <td>\"slug_salary\": {\"type\": \"USD\", \"value\": 1000}</td>\n  </tr>\n  <tr>\n   <td><strong>PHONE NUMBER</strong></td>\n   <td>“keypointer_field_name”:\n{\"number\": \"number_value\",\n\"country_code\": \"country_code_string\",\"code\": \"country_code_integer\"}</td>\n   <td>\"slug_mobile\": {\"number\": \"9999912345\",\"country_code\": \"IN\",\"code\": \"+91\"}\n   </td>\n  </tr>\n  <tr>\n   <td><strong>DURATION</strong></td>\n   <td>“keypointer_field_name”: {\"days\": Integer, \"type\": \"DAY /WEEK / MONTH /YEARS\", \"value\": Integer}</td>\n   <td>“slug_term”:\n{\"days\": 730, \"type\": \"YEARS\", \"value\": 2}\n   </td>\n  </tr>\n  <tr>\n   <td><strong>DROPDOWN</strong></td>\n   <td>“keypointer_field_name”: “value” <br/><br/>NB:Value should be in the dropdown list.</td>\n   <td>\"slug_country\": \"India\"\n   </td>\n  </tr>\n  <tr>\n   <td><strong>MULTI DROPDOWN</strong></td>\n   <td>“keypointer_field_name”: [“value1”, “value2”] <br/><br/> NB:Value1 and Value2 should be in the multi-dropdown list.</td>\n   <td>\"slug_multi\": [\"L1\",\"L2\"]\n   </td>\n  </tr>\n  <tr>\n   <td><strong>PARAGRAPH</strong></td>\n   <td>keypointer_field_name”: “Any_string_values”</td>\n   <td>“slug_paragraph: “It’s Paragraph KP”\n   </td>\n  </tr>\n</table>\n\n## Clickthrough Agreement Reacceptance\n\nThe \"Clickthrough Re-Acceptance\" feature enables users to gather re-acceptance for the currently published version of the agreement. This allows users to obtain acceptance from individuals who have previously agreed to any earlier versions.\n\nUsers have the capability to specify whether a currently published version requires re-acceptance, both during the publishing process and after the current version is published. It's important to note that at any given time, only the latest published version can be designated for re-acceptance.\n\nOnce re-acceptance is collected, the SDK will provide users with information indicating whether a specific user has accepted the currently published version of the agreement. This information can be utilized to trigger a pop-up for re-acceptance or to notify users about modifications made to the prior agreement version.\n\nThe `isReacceptanceRequired` method of the SDK enables you to determine whether the current user needs to reaccept the updated agreement or not:\n\n```\nclickthrough.isReacceptanceRequired(<user_identifier>)\n  .then(status) {\n    // check if reaccapence is required or not\n    if (status.trigger_acceptance) {\n      // show the clickthrough elements\n      // so users can reaccept the updated agreements\n      clickthrough.init();\n    }\n  }\n```\n"
    contact:
      email: help@spotdraft.com
    license:
      name: (C) Draftspotting Technologies Pvt Ltd. All Rights Reserved.
    x-logo:
      url: /static/images/logo-blue.svg
      backgroundColor: transparent
      altText: SpotDraft Logo
    version: v1
  security:
    - Bearer: []
  paths:
    /v1/public/auth/roles:
      get:
        operationId: v1_public_auth_roles_list
        summary: Get Roles
        description: Get list of active roles for Client's account
        responses:
          '200':
            description: List of Roles
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalUserActiveRole'
                examples:
                  response:
                    value:
                      - id: 1
                        name: Admin
                      - id: 2
                        name: Signatory
        tags:
          - V1 User APIs
      parameters: []
    /v1/public/auth/users:
      get:
        operationId: v1_public_auth_users_list
        summary: Get User List
        description: Gets the list of all the users in the Client's account.
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: user_email
            in: query
            description: >-
              User email address for which that user list should be filtered.
              Please make sure that the value is url encoded. So for example, if
              the email address is `abc+123@xyz.com` the value passed should be
              `abc%2B123%40xyz.com`.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: User List
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalUserPaginated'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - first_name: Sonia
                          last_name: Sotomayor
                          roles:
                            - Admin
                            - Signatory
                          username: sonia_sotomayor@notreally.supremecourt.gov
                          created: '2009-08-06T00:00:00Z'
                          modified: '2009-08-06T00:00:00Z'
                        - first_name: Elena
                          last_name: Kagan
                          roles:
                            - Admin
                            - Signatory
                          username: elena_kagan@notreally.supremecourt.gov
                          created: '2010-08-05T00:00:00Z'
                          modified: '2010-08-05T00:00:00Z'
          '400':
            description: Invalid page number or page limit too big
        tags:
          - V1 User APIs
      post:
        operationId: v1_public_auth_users_create
        summary: Create User
        description: >-
          Creates a User in the Client Account.


          An existing de-activated user can be re-activated by passing the email
          address

          or username of the de-activated user.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalUserCreate'
          required: true
        responses:
          '201':
            description: Created User
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalUser'
                examples:
                  response:
                    value:
                      first_name: Sonia
                      last_name: Sotomayor
                      roles:
                        - Admin
                        - Signatory
                      username: sonia_sotomayor@notreally.supremecourt.gov
                      created: '2009-08-06T00:00:00Z'
                      modified: '2009-08-06T00:00:00Z'
          '400':
            description: Invalid Request body or User already exists
        tags:
          - V1 User APIs
      parameters: []
    /v1/public/auth/users/{user_id}:
      patch:
        operationId: v1_public_auth_users_partial_update
        summary: Update User roles
        description: ''
        parameters:
          - name: user_id
            in: path
            description: ID of the user as returned by the List Users API.
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalUserEdit'
          required: true
        responses:
          '200':
            description: Updated User
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalUser'
                examples:
                  response:
                    value:
                      first_name: Sonia
                      last_name: Sotomayor
                      roles:
                        - Admin
                        - Signatory
                      username: sonia_sotomayor@notreally.supremecourt.gov
                      created: '2009-08-06T00:00:00Z'
                      modified: '2009-08-06T00:00:00Z'
          '400':
            description: Invalid Role ID
        tags:
          - V1 User APIs
      delete:
        operationId: v1_public_auth_users_delete
        summary: Deactivate a User
        description: Deactivates a User in the Client Account.
        parameters:
          - name: user_id
            in: path
            description: ID of the user as returned by the List Users API.
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: User deactivated
          '400':
            description: User already deactivated
        tags:
          - V1 User APIs
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/contracts:
      get:
        operationId: v1_public_contracts_list
        summary: Get Contract List
        description: >-
          This method returns the list of contracts belonging to the related
          workspace.
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractV3List'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - id: 1234
                          created: '2021-05-20T04:52:04Z'
                          created_by: Elena Kagan
                          contract_link: https://app.spotdraft.com/contracts/v2/1234
                          contract_status: REDLINING
                          contract_name: Standard NDA
                          counter_party_name: Microsoft
                          contract_type_name: Standard NDA
                        - id: 4322
                          created: '2021-05-10T04:42:00Z'
                          created_by: Sonia Sotomayor
                          contract_link: https://app.spotdraft.com/contracts/v2/4322
                          contract_status: EXECUTED
                          contract_name: Standard NDA - With Apple
                          counter_party_name: Apple Inc.
                          contract_type_name: Standard NDA
        tags:
          - V1 Contract APIs
      post:
        operationId: v1_public_contracts_create
        summary: Create Contract
        description: >
          *

          In signatories list, sign_order should be set for either all items or no
          items of the list. Additionally when

          sign_order is set for all items of signatories list then at-least one
          counter party signatory user should also be part

          of the list.

          *

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: '#/components/requestBodies/ExternalCreateContract'
        responses:
          '201':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractV3'
        tags:
          - V1 Contract APIs
      parameters: []
    /v1/public/contracts/by_external_metadata/{external_metadata_id}:
      get:
        operationId: v1_public_contracts_by_external_metadata_read
        summary: Get Contract by External Metadata ID
        description: >-
          Returns the list of first 50 contracts that are linked to the external
          id. If contracts list exceeds 50 then please contact customer support
          for further assistance.
        parameters:
          - name: external_metadata_id
            in: path
            description: >-
              External Metadata ID of the Contract. This can be used to search for
              contracts based on an ID specified when creating the contract using
              the external API.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractV3'
                examples:
                  response:
                    value:
                      - id: 1234
                        created: '2021-05-20T04:52:04Z'
                        created_by: Elena Kagan
                        contract_link: https://app.spotdraft.com/contracts/v2/1234
                        contract_status: REDLINING
                        contract_name: Standard NDA
                        counter_party_name: Microsoft
                        contract_type_name: Standard NDA
                      - id: 4322
                        created: '2021-05-10T04:42:00Z'
                        created_by: Sonia Sotomayor
                        contract_link: https://app.spotdraft.com/contracts/v2/4322
                        contract_status: EXECUTED
                        contract_name: Standard NDA - With Apple
                        counter_party_name: Apple Inc.
                        contract_type_name: Standard NDA
        tags:
          - V1 Contract APIs
      parameters:
        - name: external_metadata_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/contracts/{contract_id}/download:
      post:
        operationId: v1_public_contracts_download_create
        summary: Download Contract File
        description: Returns a copy of the contract
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: PDF copy of the Contract
            content:
              application/json:
                schema:
                  type: string
                  format: binary
        tags:
          - V1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/contracts/{contract_id}/download_link:
      post:
        operationId: v1_public_contracts_download_link_create
        summary: Get Contract Download Link
        description: Returns a link for the copy of the contract
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Download Link
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DownloadUrl'
                examples:
                  response:
                    value:
                      url: https://storage.googleapis.com/some/path?signature=ASDASD
                      file_name: Standard NDA a3b2.pdf
        tags:
          - V1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/contracts/{contract_id}/send_to_counterparties:
      post:
        operationId: v1_public_contracts_send_to_counterparties_create
        summary: Send Contract to Counterparties
        description: Returns status code 200 if successful
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/SendToCounterparty'
        responses:
          '200':
            description: OK
        tags:
          - V1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/contracts/{contract_id}/status:
      get:
        operationId: v1_public_contracts_status_list
        summary: Get Contract Status
        description: Get the status for the requested contract id
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Contract Status
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractStatus'
                examples:
                  response:
                    value:
                      contract_status: EXECUTED
        tags:
          - V1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/templates/:
      get:
        operationId: v1_public_templates_list
        summary: Get Template List
        description: Get list of active templates for Client's account
        parameters:
          - name: tags
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the Template tags are a subset
              of the tags passed will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: tags_all
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the tags passed are a subset of
              the Template tags will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Template List
            content:
              application/json:
                schema:
                  title: TemplateListResponse
                  description: A list of template as returned by the public API
                  required:
                    - items
                  type: object
                  properties:
                    items:
                      title: Items
                      description: The list of templates supported for this Client.
                      type: array
                      items:
                        $ref: '#/components/schemas/TemplateResponse'
                examples:
                  response:
                    value:
                      items:
                        - id: 1
                          name: Basic Non Disclosure Agreement
        tags:
          - V1 Template APIs
      parameters: []
    /v1/public/templates/{template_id}/metadata:
      get:
        operationId: v1_public_templates_metadata_list
        summary: Get Template Metadata
        description: ''
        responses:
          '200':
            description: Template Metadata
            content:
              application/json:
                schema:
                  title: TemplateMetaDataResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - attributes
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      description: The list of attributes for this contract template.
                      type: array
                      items:
                        $ref: '#/components/schemas/TemplateMetaItem'
                examples:
                  response:
                    value:
                      attributes:
                        - variable: start_date
                          mandatory: true
                          type: date
                        - variable: kind_of_nda
                          mandatory: true
                          type: dropdown
                          options:
                            - label: Mutual
                              value: mutual
                            - label: Exclusive
                              value: exclusive
        tags:
          - V1 Template APIs
        deprecated: true
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
    /v1/public/webhook-sample/:
      post:
        operationId: v1_public_webhook-sample_create
        summary: Sample Webhook Request
        description: >-
          This is a sample webhook request as sent to the listener of the webhook.
          Sample payloads for each activity type can be seen in the responses
          section by changing the mime type on the right side.


          Please note that this API does not exist and will throw a 404.
        requestBody:
          content:
            application/json:
              schema:
                title: ContractActivityDomainModel
                description: SD Base Model from which all other Models should inherit
                required:
                  - activity_data
                  - activity
                  - contract_id
                  - contract_title
                  - contract_type
                  - contract_type_name
                  - contract_type_id
                  - contract_status
                  - contract_kind
                  - business_user
                  - created_at
                type: object
                properties:
                  activity_data:
                    title: Activity Data
                    description: Details of the action taken which caused this webhook
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/BaseActivityData'
                  activity:
                    description: >-
                      The name of the activity. See [Webhook Activity
                      Types](https://api.spotdraft.com)
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/ContractWebhookActivityType'
                  contract_id:
                    title: Contract Id
                    description: The ID of the contract for which the webhook is sent
                    type: integer
                  contract_title:
                    title: Contract Title
                    description: The title of the contract as set by the user
                    type: string
                  contract_type:
                    title: Contract Type
                    description: The type of the contract
                    type: string
                  contract_type_name:
                    title: Contract Type Name
                    description: The contract type name of the contract
                    type: string
                  contract_type_id:
                    title: Contract Type Id
                    description: The contract type id of the contract
                    type: integer
                  contract_status:
                    title: Contract Status
                    description: >-
                      The status of the contract. One of DRAFT, REDLINING, SIGN,
                      EXECUTED
                    type: string
                  contract_kind:
                    description: >-
                      The workflow kind of the contract. One of TEMPLATE_CONTRACT,
                      EDITED_TEMPLATE_CONTRACT, THIRD_PARTY_CONTRACT,
                      SIGN_CONTRACT, EXECUTED_CONTRACT, EXPRESS_TEMPLATE_CONTRACT
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/ContractKindActivityData'
                  business_user:
                    title: Business User
                    description: The Business User details
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/ContractActivityUser'
                  created_at:
                    title: Created At
                    description: The time the contract was created
                    type: string
                    format: date-time
                  counterparties:
                    title: Counterparties
                    description: >-
                      The details of the counter parties of this contract. Only
                      set if set by the user
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractActivityCounterparty'
                  external_metadata:
                    title: External Metadata
                    description: The external metadata for this contract, if set
                    type: object
                  entity:
                    title: Entity
                    description: The entity information for this contract, if set
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/ContractEntityInformationViewModel'
                  contract_reference_id:
                    title: Contract Reference Id
                    description: Reference id of the contract.
                    type: string
                  contract_template_id:
                    title: Contract Template Id
                    description: Template id of the template contract.
                    type: integer
                example:
                  contract_id: 19589
                  contract_kind: EXECUTED_CONTRACT
                  contract_title: SpotDraft Standard DPA
                  contract_type: Data Processing Agreement
                  contract_type_name: Data Processing Agreement
                  contract_type_id: 135
                  contract_status: DRAFT
                  business_user:
                    name: Rohith Salim
                    email: rohith+core@spotdraft.com
                  created_at: '2021-08-22T03:48:52.370635Z'
                  counterparties:
                    - type: Organization
                      organization_name: Test Customer
                      poc_name: Rohith Salim
                      poc_email: rohith+test@spotdraft.com
                  activity_data:
                    performed_by:
                      name: Rohith Salim
                      email: rohith+core@spotdraft.com
                    timestamp: '2021-08-22T03:48:56.491054Z'
                  activity: CONTRACT_CREATED
          required: true
        responses:
          '200':
            description: Sample Payloads
            content:
              application/json:
                schema:
                  title: ContractActivityDomainModel
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - activity_data
                    - activity
                    - contract_id
                    - contract_title
                    - contract_type
                    - contract_type_name
                    - contract_type_id
                    - contract_status
                    - contract_kind
                    - business_user
                    - created_at
                  type: object
                  properties:
                    activity_data:
                      title: Activity Data
                      description: Details of the action taken which caused this webhook
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/BaseActivityData'
                    activity:
                      description: >-
                        The name of the activity. See [Webhook Activity
                        Types](https://api.spotdraft.com)
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractWebhookActivityType'
                    contract_id:
                      title: Contract Id
                      description: The ID of the contract for which the webhook is sent
                      type: integer
                    contract_title:
                      title: Contract Title
                      description: The title of the contract as set by the user
                      type: string
                    contract_type:
                      title: Contract Type
                      description: The type of the contract
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The contract type name of the contract
                      type: string
                    contract_type_id:
                      title: Contract Type Id
                      description: The contract type id of the contract
                      type: integer
                    contract_status:
                      title: Contract Status
                      description: >-
                        The status of the contract. One of DRAFT, REDLINING, SIGN,
                        EXECUTED
                      type: string
                    contract_kind:
                      description: >-
                        The workflow kind of the contract. One of
                        TEMPLATE_CONTRACT, EDITED_TEMPLATE_CONTRACT,
                        THIRD_PARTY_CONTRACT, SIGN_CONTRACT, EXECUTED_CONTRACT,
                        EXPRESS_TEMPLATE_CONTRACT
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractKindActivityData'
                    business_user:
                      title: Business User
                      description: The Business User details
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractActivityUser'
                    created_at:
                      title: Created At
                      description: The time the contract was created
                      type: string
                      format: date-time
                    counterparties:
                      title: Counterparties
                      description: >-
                        The details of the counter parties of this contract. Only
                        set if set by the user
                      type: array
                      items:
                        $ref: '#/components/schemas/ContractActivityCounterparty'
                    external_metadata:
                      title: External Metadata
                      description: The external metadata for this contract, if set
                      type: object
                    entity:
                      title: Entity
                      description: The entity information for this contract, if set
                      type: object
                      allOf:
                        - $ref: >-
                            #/components/schemas/ContractEntityInformationViewModel
                    contract_reference_id:
                      title: Contract Reference Id
                      description: Reference id of the contract.
                      type: string
                    contract_template_id:
                      title: Contract Template Id
                      description: Template id of the template contract.
                      type: integer
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: EXECUTED_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: DRAFT
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:48:56.491054Z'
                      activity: CONTRACT_CREATED
              application/json-CONTRACT_CREATED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: EXECUTED_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: DRAFT
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:48:56.491054Z'
                      activity: CONTRACT_CREATED
              application/json-CONTRACT_SENT_TO_COUNTERPARTY:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: REDLINING
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:49:21.713506Z'
                        counterparty_email_recipients:
                          to_recipients:
                            - rohith+test@spotdraft.com
                          cc_recipients:
                            - rohith+core@spotdraft.com
                      activity: CONTRACT_SENT_TO_COUNTERPARTY
              application/json-REDLINING_EMAIL_OPENED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: REDLINING
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:49:41.983699Z'
                        email_event_data:
                          recipient_email: rohith+core@spotdraft.com
                          email_mode: cc
                          occured_at: '2021-08-22T03:49:37Z'
                      activity: REDLINING_EMAIL_OPENED
              application/json-REDLINING_EMAIL_LINK_CLICKED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: REDLINING
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:50:03.407226Z'
                        email_event_data:
                          recipient_email: rohith+core@spotdraft.com
                          email_mode: cc
                          occured_at: '2021-08-22T03:49:59Z'
                      activity: REDLINING_EMAIL_LINK_CLICKED
              application/json-REDLINING_EMAIL_DELIVERED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: REDLINING
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:50:07.275986Z'
                        email_event_data:
                          recipient_email: rohith+core@spotdraft.com
                          email_mode: cc
                          occured_at: '2021-08-22T03:49:26Z'
                      activity: REDLINING_EMAIL_DELIVERED
              application/json-CONTRACT_SIGNATURE_REQUESTED_NOTIFICATION_SENT:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: EDITED_TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: SIGN
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:51:07.532908Z'
                        signatory:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                      activity: CONTRACT_SIGNATURE_REQUESTED_NOTIFICATION_SENT
              application/json-SIGNING_EMAIL_DELIVERED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: EDITED_TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: SIGN
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:51:44.797406Z'
                        email_event_data:
                          recipient_email: rohith+test@spotdraft.com
                          email_mode: to
                          occured_at: '2021-08-22T03:51:11Z'
                      activity: SIGNING_EMAIL_DELIVERED
              application/json-SIGNING_EMAIL_OPENED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: EDITED_TEMPLATE_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: SIGN
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:52:11.355880Z'
                        email_event_data:
                          recipient_email: rohith+core@spotdraft.com
                          email_mode: to
                          occured_at: '2021-08-22T03:52:08Z'
                      activity: SIGNING_EMAIL_OPENED
              application/json-SIGNING_EMAIL_LINK_CLICKED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: THIRD_PARTY_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: SIGN
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:52:36.374731Z'
                        email_event_data:
                          recipient_email: rohith+core@spotdraft.com
                          email_mode: to
                          occured_at: '2021-08-22T03:52:31Z'
                      activity: SIGNING_EMAIL_LINK_CLICKED
              application/json-CONTRACT_SIGNED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: THIRD_PARTY_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: SIGN
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:53:27.630482Z'
                      activity: CONTRACT_SIGNED
              application/json-CONTRACT_EXECUTED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: THIRD_PARTY_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: EXECUTED
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: SYSTEM
                        timestamp: '2021-08-22T03:53:52.201442Z'
                      activity: CONTRACT_EXECUTED
              application/json-CONTRACT_DELETED:
                examples:
                  response:
                    value:
                      contract_id: 19589
                      contract_kind: SIGN_CONTRACT
                      contract_title: SpotDraft Standard DPA
                      contract_type: Data Processing Agreement
                      contract_type_name: Data Processing Agreement
                      contract_type_id: 135
                      contract_status: EXECUTED
                      business_user:
                        name: Rohith Salim
                        email: rohith+core@spotdraft.com
                      created_at: '2021-08-22T03:48:52.370635Z'
                      counterparties:
                        - type: Organization
                          organization_name: Test Customer
                          poc_name: Rohith Salim
                          poc_email: rohith+test@spotdraft.com
                      activity_data:
                        performed_by:
                          name: Rohith Salim
                          email: rohith+core@spotdraft.com
                        timestamp: '2021-08-22T03:53:52.201442Z'
                      activity: CONTRACT_DELETED
              application/json-CONTRACT_SIGNATURE_DECLINED:
                examples:
                  response:
                    value:
                      contract_id: 193
                      contract_kind: EXPRESS_TEMPLATE
                      contract_title: Master Lease Agreement
                      contract_type: Type
                      contract_type_id: 135
                      contract_type_name: Type
                      contract_status: DRAFT
                      business_user:
                        name: Madhav Bhagat
                        email: madhav89@gmail.com
                      created_at: '2020-10-28T11:35:11.119130Z'
                      counterparties:
                        - type: Organization
                          organization_name: first last org
                      activity_data:
                        performed_by:
                          name: Madhav Bhagat
                          email: madhav89@gmail.com
                        timestamp: '2021-09-13T07:30:15.470887Z'
                      activity: CONTRACT_SIGNATURE_DECLINED
        tags:
          - V1 Webhooks
      parameters: []
    /v2.1/public/auth/roles/:
      get:
        operationId: v2.1_public_auth_roles_list
        summary: Get active roles for a workspace
        description: ''
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalUserActiveRolesResponseList
                  description: |-
                    Pydantic Model that takes in the list if active
                    roles pydantic response
                  required:
                    - active_roles
                  type: object
                  properties:
                    active_roles:
                      title: Active Roles
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalUserActiveRolesData'
        tags:
          - V2.1 User APIs
      parameters: []
    /v2.1/public/auth/roles/{role_id}/members:
      post:
        operationId: v2.1_public_auth_roles_members_create
        summary: Add Role Member
        description: ''
        parameters:
          - name: role_id
            in: path
            description: >-
              Use the [Get Active
              Roles](#tag/V2.1-User-APIs/operation/v2.1_public_auth_roles_list)
              API to get the role ID.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_auth_roles_members_createData'
        responses:
          '200':
            description: Add Role Member
            content:
              application/json:
                schema:
                  title: PublicRoleMemberAddResponse
                  description: The updated members of the role.
                  type: array
                  items:
                    $ref: '#/components/schemas/PublicMinimalUserResponse'
        tags:
          - V2.1 User APIs
      delete:
        operationId: v2.1_public_auth_roles_members_delete
        summary: Delete Role Member
        description: ''
        parameters:
          - name: role_id
            in: path
            description: >-
              Use the [Get Active
              Roles](#tag/V2.1-User-APIs/operation/v2.1_public_auth_roles_list)
              API to get the role ID.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_auth_roles_members_deleteData'
        responses:
          '204':
            description: Delete Role Member
        tags:
          - V2.1 User APIs
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/auth/users/:
      get:
        operationId: v2.1_public_auth_users_list
        summary: Get User List
        description: Gets all the users of your organization
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: user_email
            in: query
            description: >-
              User email address for which that user list should be filtered.
              Please make sure that the value is url encoded. So for example, if
              the email address is `abc+123@xyz.com` the value passed should be
              `abc%2B123%40xyz.com`.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: User List
            content:
              application/json:
                schema:
                  title: PublicUserMinimalListResponse
                  description: >-
                    SD Generic Model from which all other Generic Models should
                    inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      description: The current page number. Page numbers start at 1.
                      type: integer
                    limit:
                      title: Limit
                      description: The number of items returned per page.
                      type: integer
                    total_results:
                      title: Total Results
                      description: Total number of items in the result set.
                      type: integer
                    results:
                      title: Results
                      description: The actual results.
                      type: array
                      items:
                        $ref: '#/components/schemas/PublicMinimalUserResponse'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - id: 100
                          first_name: Sonia
                          last_name: Sotomayor
                          email: sonia_sotomayor@notreally.supremecourt.gov
                          designation: Lawyer
                        - id: 101
                          first_name: Elena
                          last_name: Kagan
                          email: elena_kagan@notreally.supremecourt.gov
                          designation: Lead Lawyer
        tags:
          - V2.1 User APIs
      parameters: []
    /v2.1/public/clickwrap/{clickwrap_public_id}/consent_status/:
      post:
        operationId: v2.1_public_clickwrap_consent_status_create
        summary: Get consent status
        description: |

          Returns one of the following values as consent status for the user.
          <table>
              <thead>
              <tr>
                  <th>Status field value</td>
                  <th>Details</td>
              </tr>
              </thead>
              <tbody>
                  <tr>
                      <td>NOT_ACCEPTED</td>
                      <td>When the user hasn’t accepted this clickwrap before.</td>
                  </tr>
                  <tr>
                      <td>ACCEPTED_OLDER_VERSION</td>
                      <td>When the user has accepted the clickwrap, but a new published version exists.</td>
                  </tr>
                  <tr>
                      <td>ACCEPTED_LATEST_VERSION</td>
                      <td>When the user has accepted the latest published version of the clickwrap.</td>
                  </tr>
              </tbody>
          </table>
        parameters:
          - name: clickwrap_public_id
            in: path
            description: Public Id of Clickwrap
            required: true
            schema:
              type: uuid
        requestBody:
          content:
            application/json:
              schema:
                title: PublicGetClickwrapConsentStatusRequestData
                required:
                  - user_identifier
                type: object
                properties:
                  user_identifier:
                    title: User Identifier
                    description: >-
                      An identifier for the user whose consent status is being
                      queried.
                    type: string
                    minLength: 1
                example:
                  user_identifier: 10f9a299-9e9a-4bc9-9299-5b89bc06d370
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: PublicClickwrapConsentStatusResponse
                  required:
                    - status
                    - trigger_acceptance
                  type: object
                  properties:
                    status:
                      $ref: '#/components/schemas/ClickwrapConsentStatus'
                    trigger_acceptance:
                      title: Trigger Acceptance
                      type: boolean
                examples:
                  response:
                    value:
                      status: NOT_ACCEPTED
        tags:
          - V2.1 Clickwrap APIs
      parameters:
        - name: clickwrap_public_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contract_types/:
      get:
        operationId: v2.1_public_contract_types_list
        summary: Get Contract Type List
        description: ''
        responses:
          '200':
            description: Contract Type List
            content:
              application/json:
                schema:
                  title: ContractTypeResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    name:
                      title: Name
                      type: string
        tags:
          - V2.1 Contract Type APIs
      parameters: []
    /v2.1/public/contract_types/{contract_type_id}/entities:
      get:
        operationId: v2.1_public_contract_types_entities_list
        summary: List Contract Type Entities
        description: Get the list of contract type entities
        parameters:
          - name: contract_type_id
            in: path
            description: ID of the Contract Type.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List Contract Type Entities
            content:
              application/json:
                schema:
                  title: ExternalContractTypeEntityListResponse
                  description: The list of entities for the contract type
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractTypeEntityResponse'
        tags:
          - V2.1 Contract Type APIs
      parameters:
        - name: contract_type_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contract_types/{contract_type_id}/intake_form/questionnaire/:
      get:
        operationId: v2.1_public_contract_types_intake_form_questionnaire_list
        summary: Get Intake Form Questionnaire Details
        description: ''
        parameters:
          - name: contract_type_id
            in: path
            description: ID of the Contract Type.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Intake Form Questionnaire Details
            content:
              application/json:
                schema:
                  title: IntakeFormQuestionnairePublicResponse
                  description: The list of attributes for this contract template.
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/IntakeFormQuestionnaireDetailsPublicResponse
                examples:
                  response:
                    value:
                      display_label: >-
                        Always she crime daughter task positive employee. Already
                        mission popular ahead civil term.
                      variable: >-
                        Always she crime daughter task positive employee. Already
                        mission popular ahead civil term.
                      type: enum
                      parent_type: dropdown
                      options:
                        - label: test option 1
                          value: test option 1
                        - label: test option 2
                          value: test option 2
                        - label: test option 3
                          value: test option 3
                      required: false
                      default_value: null
                      question: >-
                        Today down gas marriage kid. South think reality always.
                        Management effort ground machine reality when impact.

                        Accept anyone picture him air.
                      attributes: null
        tags:
          - V2.1 Contract Type APIs
      parameters:
        - name: contract_type_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/:
      get:
        operationId: v2.1_public_contracts_list
        summary: Get Contract List
        description: ''
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: filter__client_email_address
            in: query
            description: Filters on the counter party email. Does an exact match.
            schema:
              type: string
          - name: filter__client_name
            in: query
            description: Filters on the counter party name. Does an exact match.
            schema:
              type: string
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  title: ContractListResponseV2
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/ContractResponseV2'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - id: 1234
                          created: '2021-05-20T04:52:04Z'
                          created_by: Elena Kagan
                          contract_link: https://app.spotdraft.com/contracts/v2/1234
                          contract_status: REDLINING
                          contract_name: Standard NDA
                          counter_party_name: Microsoft
                          contract_type_name: Standard NDA
                        - id: 4322
                          created: '2021-05-10T04:42:00Z'
                          created_by: Sonia Sotomayor
                          contract_link: https://app.spotdraft.com/contracts/v2/4322
                          contract_status: EXECUTED
                          contract_name: Standard NDA - With Apple
                          counter_party_name: Apple Inc.
                          contract_type_name: Standard NDA
        tags:
          - V2.1 Contract APIs
      post:
        operationId: v2.1_public_contracts_create
        summary: Create Contract
        description: >
          *

          In signatories list, sign_order should be set for either all items or no
          items of the list. Additionally when

          sign_order is set for all items of signatories list then at-least one
          counter party signatory user should also be part

          of the list.

          *

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        parameters:
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalCreateContractSerializerV2_1'
          required: true
        responses:
          '201':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractV3'
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/approvals/{contract_id}/:
      get:
        operationId: v2.1_public_contracts_approvals_read
        summary: Get contract approvals
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: PublicContractApprovalListResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - results
                  type: object
                  properties:
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: >-
                          #/components/schemas/PublicContractApprovalExpandedResponse
        tags:
          - V2.1 Contract APIs
      post:
        operationId: v2.1_public_contracts_approvals_create
        summary: Create and send adhoc approvals
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_approvals_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalApprovalListResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalApprovalResponse'
                examples:
                  response:
                    value:
                      - id: 1001
                        contract_id: 211270
                        name: Legal Approval
                        approver_user_id: 10324
                        approver_role_id: null
                        is_sent: true
                        notes: Please take a look need your approval.
                        order: 1
                      - id: 1002
                        contract_id: 211270
                        name: Finance team Approval
                        approver_user_id: null
                        approver_role_id: 60414
                        is_sent: true
                        notes: Hi team need your approval on this contract.
                        order: 2
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/by_external_metadata/{external_metadata_id}:
      get:
        operationId: v2.1_public_contracts_by_external_metadata_read
        summary: Get Contract by External Metadata ID
        description: >-
          Returns the list of first 50 contracts that are linked to the external
          id. If contracts list exceeds 50 then please contact customer support
          for further assistance.
        parameters:
          - name: external_metadata_id
            in: path
            description: >-
              External Metadata ID of the Contract. This can be used to search for
              contracts based on an ID specified when creating the contract using
              the external API.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractV3'
                examples:
                  response:
                    value:
                      - id: 1234
                        created: '2021-05-20T04:52:04Z'
                        created_by: Elena Kagan
                        contract_link: https://app.spotdraft.com/contracts/v2/1234
                        contract_status: REDLINING
                        contract_name: Standard NDA
                        counter_party_name: Microsoft
                        contract_type_name: Standard NDA
                      - id: 4322
                        created: '2021-05-10T04:42:00Z'
                        created_by: Sonia Sotomayor
                        contract_link: https://app.spotdraft.com/contracts/v2/4322
                        contract_status: EXECUTED
                        contract_name: Standard NDA - With Apple
                        counter_party_name: Apple Inc.
                        contract_type_name: Standard NDA
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: external_metadata_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/embedded/contracts/{contract_id}/counter_party/:
      get:
        operationId: v2.1_public_contracts_embedded_contracts_counter_party_list
        summary: Get CounterParty Embedded Url
        description: ''
        parameters:
          - name: cp_email_id
            in: query
            description: Email address of the CP for which the url needs to be returned.
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: CounterPartyEmbeddedUrlResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - url
                  type: object
                  properties:
                    url:
                      title: Url
                      type: string
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/executed_contracts/:
      post:
        operationId: v2.1_public_contracts_executed_contracts_create
        summary: Upload Executed Contract Api
        description: |

          This API can be used to upload existing executed contracts to SpotDraft.
        requestBody:
          content:
            application/json:
              schema:
                title: CreateExecutedContractAPIRequest
                description: SD Base Model from which all other Models should inherit
                required:
                  - contract_name
                  - file_name
                  - file_content
                  - contract_type_id
                  - organization_entity_id
                type: object
                properties:
                  contract_name:
                    title: Contract Name
                    description: The name of the executed contract that is visible to users.
                    type: string
                  file_name:
                    title: File Name
                    description: >-
                      The name of the file being uploaded. This is used when the
                      file is downloaded. Expected to be a fully qualified file
                      name with an extension. 
                    type: string
                  file_content:
                    title: File Content
                    description: The contents of the file as a base64 encoded string.
                    type: string
                  contract_type_id:
                    title: Contract Type Id
                    description: >-
                      The ID of the contract type for this executed contract. Use
                      the [Get Contract Types](https://api.spotdraft.com) API to
                      get this ID. 
                    type: integer
                  organization_entity_id:
                    title: Organization Entity Id
                    description: >-
                      The ID of the organization entity for this executed
                      contract. Use the [Get Organization
                      Entity](https://api.spotdraft.com) API to get this ID. 
                    type: integer
                  counterparty_details:
                    title: Counterparty Details
                    description: >-
                      The list of Counterparties involved in the executed
                      contract.
                    type: array
                    items:
                      $ref: '#/components/schemas/CounterPartyDetails'
                example:
                  contract_name: Acme Corporation NDA
                  file_name: Acme_nda.pdf
                  file_content: base64 encoded string of the file content
                  contract_type_id: 103
                  counterparty_details:
                    - is_individual: true
                      organization_type: Private Limited
                      organization_name: Acme Corporation
                      organization_details: {}
                      poc_details:
                        first_name: Mike
                        last_name: Reed
                        email: Mike_reed@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
          required: true
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractResponseV2
                  description: Must be kept in sync with ExternalContractV3Serializer
                  required:
                    - id
                    - created
                    - contract_name
                    - contract_link
                    - contract_status
                    - created_by
                    - counter_party_name
                    - contract_type_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The Id of the contract on SpotDraft's Platform.
                      type: string
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract was created or
                        uploaded on SpotDraft's platform.
                      type: string
                      format: date-time
                    contract_name:
                      title: Contract Name
                      description: The name of the contract that is visible to users.
                      type: string
                    contract_link:
                      title: Contract Link
                      description: The Url to view the contract.
                      type: string
                    contract_status:
                      title: Contract Status
                      description: The status of the contract.
                      type: string
                    created_by:
                      title: Created By
                      description: >-
                        The full name of user who created or uploaded the executed
                        contract on to SpotDraft's platform.
                      type: string
                    counter_party_name:
                      title: Counter Party Name
                      description: >-
                        The full name of the counter party involved in the
                        contract.
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The type of the contract.
                      type: string
                    external_metadata:
                      title: External Metadata
                      type: object
                examples:
                  response:
                    value:
                      id: T-1234
                      created: '2021-05-20T04:52:04Z'
                      contract_name: Acme Corporation NDA
                      contract_link: https://app.spotdraft.com/contracts/v2/4322
                      contract_status: EXECUTED
                      created_by: Morgan Freeman
                      counter_party_name: Mike Reed
                      contract_type_name: Historic
                      external_metadata: {}
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/preview/:
      post:
        operationId: v2.1_public_contracts_preview_create
        summary: Generate Contract Preview
        description: >2

                  Generate contract preview for contract data.

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_preview_createData'
        responses:
          '200':
            description: Preview PDF File
            content:
              application/json:
                schema:
                  type: string
                  format: binary
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/upload_review_contracts/:
      post:
        operationId: v2.1_public_contracts_upload_review_contracts_create
        summary: Upload Contract For Review
        description: >2

                          This method takes in intake_form_data to be used for contract creation.

          The Intake Form Data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Intake Form Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_upload_review_contracts_createData
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractResponseV2
                  description: Must be kept in sync with ExternalContractV3Serializer
                  required:
                    - id
                    - created
                    - contract_name
                    - contract_link
                    - contract_status
                    - created_by
                    - counter_party_name
                    - contract_type_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The Id of the contract on SpotDraft's Platform.
                      type: string
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract was created or
                        uploaded on SpotDraft's platform.
                      type: string
                      format: date-time
                    contract_name:
                      title: Contract Name
                      description: The name of the contract that is visible to users.
                      type: string
                    contract_link:
                      title: Contract Link
                      description: The Url to view the contract.
                      type: string
                    contract_status:
                      title: Contract Status
                      description: The status of the contract.
                      type: string
                    created_by:
                      title: Created By
                      description: >-
                        The full name of user who created or uploaded the executed
                        contract on to SpotDraft's platform.
                      type: string
                    counter_party_name:
                      title: Counter Party Name
                      description: >-
                        The full name of the counter party involved in the
                        contract.
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The type of the contract.
                      type: string
                    external_metadata:
                      title: External Metadata
                      type: object
                examples:
                  response:
                    value:
                      id: T-1234
                      created: '2021-05-20T04:52:04Z'
                      contract_name: Acme Corporation NDA
                      contract_link: https://app.spotdraft.com/contracts/v2/4322
                      contract_status: EXECUTED
                      created_by: Morgan Freeman
                      counter_party_name: Mike Reed
                      contract_type_name: Historic
                      external_metadata: {}
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/upload_sign_contracts/:
      post:
        operationId: v2.1_public_contracts_upload_sign_contracts_create
        summary: Upload Contract For Signature
        description: >2

                          This method takes in intake_form_data to be used for contract creation.

          The Intake Form Data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Intake Form Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_upload_sign_contracts_createData
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractResponseV2
                  description: Must be kept in sync with ExternalContractV3Serializer
                  required:
                    - id
                    - created
                    - contract_name
                    - contract_link
                    - contract_status
                    - created_by
                    - counter_party_name
                    - contract_type_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The Id of the contract on SpotDraft's Platform.
                      type: string
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract was created or
                        uploaded on SpotDraft's platform.
                      type: string
                      format: date-time
                    contract_name:
                      title: Contract Name
                      description: The name of the contract that is visible to users.
                      type: string
                    contract_link:
                      title: Contract Link
                      description: The Url to view the contract.
                      type: string
                    contract_status:
                      title: Contract Status
                      description: The status of the contract.
                      type: string
                    created_by:
                      title: Created By
                      description: >-
                        The full name of user who created or uploaded the executed
                        contract on to SpotDraft's platform.
                      type: string
                    counter_party_name:
                      title: Counter Party Name
                      description: >-
                        The full name of the counter party involved in the
                        contract.
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The type of the contract.
                      type: string
                    external_metadata:
                      title: External Metadata
                      type: object
                examples:
                  response:
                    value:
                      id: T-1234
                      created: '2021-05-20T04:52:04Z'
                      contract_name: Acme Corporation NDA
                      contract_link: https://app.spotdraft.com/contracts/v2/4322
                      contract_status: EXECUTED
                      created_by: Morgan Freeman
                      counter_party_name: Mike Reed
                      contract_type_name: Historic
                      external_metadata: {}
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/webhooks/re_trigger_latest/:
      post:
        operationId: v2.1_public_contracts_webhooks_re_trigger_latest_create
        summary: Re-trigger Contract Webhooks
        description: |

          Re-trigger the last webhook call made for all given contracts.
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_webhooks_re_trigger_latest_createData
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      default: Success
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    detail:
                      type: string
                      default: Not Found
        tags:
          - V2.1 Contract APIs
      parameters: []
    /v2.1/public/contracts/{composite_id}/download:
      post:
        operationId: v2.1_public_contracts_download_create
        summary: Download Contract File
        description: Returns a copy of the contract
        parameters:
          - name: composite_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: PDF copy of the Contract
            content:
              application/json:
                schema:
                  type: string
                  format: binary
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/download_link:
      post:
        operationId: v2.1_public_contracts_download_link_create
        summary: Get Contract Download Link
        description: Returns a link for the copy of the contract
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Download Link
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DownloadUrl'
                examples:
                  response:
                    value:
                      url: https://storage.googleapis.com/some/path?signature=ASDASD
                      file_name: Standard NDA a3b2.pdf
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/key_pointers/bulk:
      post:
        operationId: v2.1_public_contracts_key_pointers_bulk_create
        summary: Bulk Update Key Pointer Value
        description: Updates the specified list of key pointers
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                title: ContractKeyPointerBulkRequest
                description: SD Base Model from which all other Models should inherit
                required:
                  - key_pointers
                type: object
                properties:
                  key_pointers:
                    title: Key Pointers
                    description: List of keypointers to be created/updated for a contract.
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractKeyPointerRequest'
                example:
                  key_pointers:
                    - key_pointer_id: 100
                      value:
                        type: MONTHS
                        value: 6
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractKeyPointerMinimalListResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/ContractKeyPointerMinimalResponse'
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/mark_for_execution/:
      post:
        operationId: v2.1_public_contracts_mark_for_execution_create
        summary: Marks the contract for execution
        description: Marks the contract for execution
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Successfully Marked for Execution
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/send_to_counterparties:
      post:
        operationId: v2.1_public_contracts_send_to_counterparties_create
        summary: Send Contract to Counterparties
        description: Returns status code 200 if successful
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/SendToCounterparty'
        responses:
          '200':
            description: OK
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/signatories/resend_email/:
      post:
        operationId: v2.1_public_contracts_signatories_resend_email_create
        summary: Resend Email to the signatory of a Contract.
        description: >

          This API can be used to resend email to signatory associated to the
          contract.
        parameters:
          - name: composite_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                title: CreateSignatoryResendEmailAPIRequest
                description: SD Base Model from which all other Models should inherit
                required:
                  - email_id
                type: object
                properties:
                  email_id:
                    title: Email Id
                    description: >-
                      The Email Address of the signatory to whom email should be
                      resent to.
                    type: string
                example:
                  email_id: mike_reed@yahoo.com
          required: true
        responses:
          '200':
            description: Success
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{composite_id}/unmark_for_execution:
      post:
        operationId: v2.1_public_contracts_unmark_for_execution_create
        summary: Unmarks the contract for execution
        description: >-
          Unmarks the contract for execution and voids the signature service
          resource (For eg. DocuSign's envelope if enabled).
        parameters:
          - name: composite_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                title: ContractUnMarkForExecutionRequest
                description: SD Base Model from which all other Models should inherit
                type: object
                properties:
                  note:
                    title: Note
                    description: >-
                      Optional note explaining the reason for un-marking the
                      contract for execution.
                    type: string
                example:
                  note: Client requested some edits to the contract
          required: true
        responses:
          '200':
            description: Success
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/comments/:
      get:
        operationId: v2.1_public_contracts_comments_list
        summary: Get comments in contract activity log.
        description: ''
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalCommentListResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalCommentResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 2
                      results:
                        - id: 1001
                          contract_id: 211270
                          comment: This is sample comment.
                          replies:
                            - id: 2021
                              comment: This is a sample reply.
                        - id: 1002
                          contract_id: 211270
                          comment: Hi team this contract need your review.
                          replies: []
        tags:
          - V2.1 Contract APIs
      post:
        operationId: v2.1_public_contracts_comments_create
        summary: Add comment to contract activity log.
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_comments_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalCommentResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - contract_id
                    - comment
                    - replies
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    contract_id:
                      title: Contract Id
                      description: The id of the contract to which the comment belongs.
                      type: integer
                    comment:
                      title: Comment
                      description: The content of the comment.
                      type: string
                    replies:
                      title: Replies
                      description: The replies associated with the comment.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalReplyResponse'
                examples:
                  response:
                    value:
                      id: 1001
                      contract_id: 211270
                      comment: Hey test.user@spotdraft.com please review this contract.
                      replies: []
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/contract_data:
      patch:
        operationId: v2.1_public_contracts_contract_data_partial_update
        summary: Update Contract Data
        description: >2

                  Updates the contract data for given contract id.

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        parameters:
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_contract_data_partial_updateData
        responses:
          '200':
            description: Updated Data
            content:
              application/json:
                schema:
                  title: ContractDataUpdateRequest
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - data
                  type: object
                  properties:
                    data:
                      title: Data
                      description: data dictionary
                      type: object
                examples:
                  response:
                    value:
                      data:
                        term:
                          days: 180
                          type: MONTHS
                          value: 6
                        notes: Not Applicable
                        capacity: 15
                        setup_fee:
                          type: INR
                          value: 30000
                        start_date: '2019-11-29'
                        yes_discounts: false
                        payment_method: '1'
                        suggestions: No suggestions
          '400':
            description: ''
            content:
              application/json:
                schema:
                  title: Invalid contract status
                  description: body
                  type: object
                  properties:
                    detail:
                      type: string
                      default: Contract cannot be updated because it has been executed.
                    code:
                      type: string
                      default: SD_PUBLIC_00009
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/contract_relation/:
      post:
        operationId: v2.1_public_contracts_contract_relation_create
        summary: Create Contract relations
        description: >

          This 'Create Contract relations' API can be used to create a relation
          between two contracts,

          identifying &lt;related_contract_id&gt; as a &lt;relation_type&gt; of
          &lt;contract_id&gt;.
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                title: ExternalContractRelationCreateRequest
                description: SD Base Model from which all other Models should inherit
                required:
                  - related_contract_id
                  - relation_type
                type: object
                properties:
                  related_contract_id:
                    title: Related Contract Id
                    description: ID of the contract that is being related.
                    type: integer
                  relation_type:
                    description: Type of relationship established with the related contract.
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/ContractRelationType'
                example:
                  related_contract_id: 1234
                  relation_type: CHILD
          required: true
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalContractRelationResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - related_contract_id
                    - relation_type
                    - created
                  type: object
                  properties:
                    id:
                      title: Id
                      description: Contract Relation ID
                      type: integer
                    related_contract_id:
                      title: Related Contract Id
                      description: ID of the contract that is being related.
                      type: integer
                    relation_type:
                      description: >-
                        Type of relationship established with the related
                        contract.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractRelationType'
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract relation was
                        created
                      type: string
                      format: date-time
                examples:
                  response:
                    value:
                      id: 1000
                      related_contract_id: 1234
                      relation_type: CHILD
                      created: '2021-05-20T04:52:04Z'
          '400':
            description: ''
            content:
              application/json:
                schema:
                  title: Circular dependency between the contracts
                  description: body
                  type: object
                  properties:
                    detail:
                      type: string
                      default: >-
                        Unable to set relation as it is leading to a circular
                        dependency between the contracts.
                    code:
                      type: string
                      default: SD_CONTRACTS_00093
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/contract_version/:
      post:
        operationId: v2.1_public_contracts_contract_version_create
        summary: Upload Contract Version.
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_contract_version_createData
        responses:
          '201':
            description: Success
        tags:
          - V2.1 Contract Version APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/external_metadata:
      post:
        operationId: v2.1_public_contracts_external_metadata_create
        summary: Create or Update Contract External Metadata
        description: ''
        requestBody:
          content:
            application/json:
              schema:
                title: PublicExternalMetadataCreateOrUpdateRequest
                description: SD Base Model from which all other Models should inherit
                required:
                  - external_metadata
                type: object
                properties:
                  external_metadata:
                    title: External Metadata
                    description: Details of the external metadata associated with a contract
                    type: object
                example:
                  id: external_record_id
                  integration_name: HubSpot
                  record_type: Account
                  record_data: {}
          required: true
        responses:
          '200':
            description: ''
            content:
              application/json:
                schema:
                  title: External Metadata for Contract
                  description: body
                  type: object
                  properties:
                    external_metadata:
                      type: object
                      properties:
                        id:
                          type: string
                          default: external_id
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/invite/:
      post:
        operationId: v2.1_public_contracts_invite_create
        summary: Invite Users & Roles
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_invite_createData'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalContractInviteResponse
                  description: SD Base Model from which all other Models should inherit
                  type: object
                  properties:
                    impacted_users:
                      title: Impacted Users
                      description: The list of users invited.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalUserPublicResponse'
                      default: []
                    impacted_roles:
                      title: Impacted Roles
                      description: The list of roles invited.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalRolePublicResponse'
                      default: []
                examples:
                  response:
                    value:
                      impacted_users: []
                      impacted_roles:
                        - id: 34
                          name: Legal
                          description: Legal team
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/key_pointers:
      get:
        operationId: v2.1_public_contracts_key_pointers_list
        summary: Get Key Pointers
        description: Returns list of key pointers for given contract id
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractKeyPointerMinimalListResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/ContractKeyPointerMinimalResponse'
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/key_pointers/{contract_key_pointer_id}:
      patch:
        operationId: v2.1_public_contracts_key_pointers_partial_update
        summary: Update Key Pointer Value
        description: Updates the specified key pointer
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
          - name: contract_key_pointer_id
            in: path
            description: ID of the contract key pointer value.
            required: true
            schema:
              type: string
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_key_pointers_partial_updateData
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractKeyPointerMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - value
                    - label
                    - field_name
                    - data_type
                    - format_option
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    value:
                      title: Value
                      description: Value of the key pointer
                      anyOf:
                        - type: integer
                        - type: string
                        - type: array
                          items: {}
                        - type: object
                        - type: boolean
                      oneOf:
                        - type: integer
                        - type: string
                        - type: array
                          items: {}
                        - type: object
                        - type: boolean
                    label:
                      title: Label
                      type: string
                    field_name:
                      title: Field Name
                      type: string
                    data_type:
                      title: Data Type
                      type: string
                    format_option:
                      title: Format Option
                      type: object
                examples:
                  response:
                    value:
                      id: 1
                      value: sample
                      label: Sample Label
                      filed_name: sample_field_name
                      data_type: string
                      format_option:
                        data: sample format option
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
        - name: contract_key_pointer_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/notes:
      get:
        operationId: v2.1_public_contracts_notes_list
        summary: Get Contract Notes
        description: Gets all the notes associated with the contract
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Notes
            content:
              application/json:
                schema:
                  title: ContractNoteMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - text
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    text:
                      title: Text
                      type: string
                    note_tag:
                      title: Note Tag
                      type: string
                examples:
                  response:
                    value:
                      id: 1
                      text: sample note for contract
                      note_tag: sample_tag
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/notes/{note_id}:
      put:
        operationId: v2.1_public_contracts_notes_update
        summary: Update Contract Note
        description: Returns the updated note
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
          - name: key_pointer_id
            in: path
            description: ID of the key pointer value.
            required: true
            schema:
              type: string
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_notes_updateData'
        responses:
          '200':
            description: Notes
            content:
              application/json:
                schema:
                  title: ContractNoteMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - text
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    text:
                      title: Text
                      type: string
                    note_tag:
                      title: Note Tag
                      type: string
                examples:
                  response:
                    value:
                      id: 1
                      text: sample note for contract
                      note_tag: sample_tag
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/questionnaire/responses/:
      get:
        operationId: v2.1_public_contracts_questionnaire_responses_list
        summary: Get Questionnaire Response
        description: ''
        parameters:
          - name: page
            in: query
            description: A page number within the paginated result set.
            required: false
            schema:
              type: integer
          - name: limit
            in: query
            description: Number of results to return per page.
            required: false
            schema:
              type: integer
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
          - name: questionnaire_type
            in: query
            description: >-
              Enum: `INTAKE_FORM/TEMPLATE`. Type of the questionnaire for which
              response needs to be returned.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalContractQuestionnairePublicResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - questionnaire_response_data
                  type: object
                  properties:
                    questionnaire_response_data:
                      title: Questionnaire Response Data
                      description: Questionnaire response data for the contract.
                      type: object
                    respondents:
                      title: Respondents
                      description: List of users who answered the questionnaire.
                      type: array
                      items:
                        $ref: >-
                          #/components/schemas/ExternalContractQuestionnaireRespondentPublicData
                examples:
                  response:
                    value:
                      questionnaire_response_data:
                        department: product
                      respondents:
                        - created_at: '2023-06-14T10:46:15.205587Z'
                          created_by: Mike Reed
                          org_name: Acme Inc.
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/recipients/recipient_link/:
      get:
        operationId: v2.1_public_contracts_recipients_recipient_link_list
        summary: Get Recipient Link
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
          - name: recipient_email
            in: query
            description: Email of the recipient for whom the link needs to be generated.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalGetRecipientLinkResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - link
                  type: object
                  properties:
                    link:
                      title: Link
                      description: >-
                        Link that can be used by the recipient to take an action
                        like signing, approval, etc.
                      type: string
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/review_request/:
      post:
        operationId: v2.1_public_contracts_review_request_create
        summary: Create and assign a legal review task
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                title: ReviewRequestCreateRequest
                description: SD Base Model from which all other Models should inherit
                type: object
                properties:
                  description:
                    title: Description
                    description: Description of the review request. Visible to the reviewer
                    type: string
                    default: ''
                    minLength: 1
                  assignee_user_id:
                    title: Assignee User Id
                    description: >-
                      The ID of the org user to whom the review request should be
                      assigned. Either assignee_user_id or assignee_role_id should
                      be set, but not both.
                    type: integer
                  assignee_role_id:
                    title: Assignee Role Id
                    description: >-
                      The ID of the role to which the review request should be
                      assigned. Either assignee_user_id or assignee_role_id should
                      be set, but not both.
                    type: integer
          required: true
        responses:
          '200':
            description: Success
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/status:
      get:
        operationId: v2.1_public_contracts_status_list
        summary: Get Contract Status
        description: Get the status for the requested contract id
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Contract Status
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractStatus'
                examples:
                  response:
                    value:
                      contract_status: EXECUTED
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/uninvite/:
      post:
        operationId: v2.1_public_contracts_uninvite_create
        summary: Un-Invite a User or Role
        description: >-
          Un-Invite a specific user or roles to this contract who have been
          invited. This does not change contract type based access.
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                title: ExternalContractUnInviteRequest
                description: SD Base Model from which all other Models should inherit
                type: object
                properties:
                  user_id:
                    title: User Id
                    description: ID of the used that is to be uninvited
                    type: integer
                  role_id:
                    title: Role Id
                    description: ID of the role that is to be uninvited
                    type: integer
                example:
                  user_id: 100
                  role_id: 101
          required: true
        responses:
          '200':
            description: Success
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/contracts/{contract_id}/uninvite_all/:
      post:
        operationId: v2.1_public_contracts_uninvite_all_create
        summary: Un-Invite all Users & Roles
        description: >-
          Un-Invite all the users and roles who have been invited to this
          contract. This does not change contract type based access.
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/:
      get:
        operationId: v2.1_public_counter_parties_list
        summary: List Counterparties
        description: Get the list of counterparties
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: filter__client_email_address
            in: query
            description: Filters on the counter party email. Does an exact match.
            schema:
              type: string
          - name: filter_custom__<custom_field_name>
            in: query
            description: >-
              Filters all the counterparties which have the custom field values
              present.
            examples:
              example1:
                description: filter_custom__vendor_id=1234
            schema:
              type: string
        responses:
          '200':
            description: Counterparty
            content:
              application/json:
                schema:
                  title: CounterpartyListAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyAPIResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 50
                      results:
                        - id: 102
                          name: Mike Reed
                          is_individual: false
                          contacts:
                            - id: 100
                              name: Susan Ervin
                              email: SueErvin@yahoo.com
                          primary_address:
                            city_name: Cincinnati
                            state_name: Ohio
                            country_name: USA
                            zipcode: '513'
                            line_one: 'st: 3, block: 2, Jenkins Road'
                          status: ACTIVE
                          custom_fields:
                            vendor_id: '1234'
                            gst_number: 22AAAAA0000A1Z5
        tags:
          - V2.1 Counterparty APIs
      post:
        operationId: v2.1_public_counter_parties_create
        summary: Create Counter Party
        description: >

          This method takes in counter party details to be used for counter Party
          creation
           and returns status code 201 along with the counterparty workspace id if successfully created.
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_counter_parties_createData'
        responses:
          '201':
            description: CounterParty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2.1 Counterparty APIs
      parameters: []
    /v2.1/public/counter_parties/{counterparty_id}:
      get:
        operationId: v2.1_public_counter_parties_read
        summary: Get Counterparty
        description: Get the details of a counterparty by its ID
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Counterparty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2.1 Counterparty APIs
      patch:
        operationId: v2.1_public_counter_parties_partial_update
        summary: Update Counterparty
        description: Update counterparty details
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_partial_updateData
        responses:
          '200':
            description: Update Counterparty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/{counterparty_id}/addresses/:
      get:
        operationId: v2.1_public_counter_parties_addresses_list
        summary: List Counterparty Addresses
        description: Get the list of counterparty addresses
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
        responses:
          '200':
            description: List Counterparty Addresses
            content:
              application/json:
                schema:
                  title: CounterpartyListAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyAddressResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 50
                      results:
                        - id: 100
                          line_one: 'st: 3, block: 2, Jenkins Road'
                          city_name: Cincinnati
                          state_name: Ohio
                          zipcode: '513'
                          country_name: USA
                          email: john.doe@gmail.com
                          phone: (415) 555-0198
        tags:
          - V2.1 Counterparty APIs
      post:
        operationId: v2.1_public_counter_parties_addresses_create
        summary: Create Counterparty Address
        description: Create counterparty address
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_addresses_createData
        responses:
          '201':
            description: Create Counterparty Address
            content:
              application/json:
                schema:
                  title: CounterPartyAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - line_one
                    - city_name
                    - state_name
                    - zipcode
                    - country_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this address. Globally Unique.
                      type: integer
                    line_one:
                      title: Line One
                      description: >-
                        The first line of the address. Usually the apartment,
                        floor, and street information.
                      type: string
                    city_name:
                      title: City Name
                      description: The city name for this address.
                      type: string
                    state_name:
                      title: State Name
                      description: The state name for this address.
                      type: string
                    zipcode:
                      title: Zipcode
                      description: The zip/pin/postal code for this address.
                      type: string
                    country_name:
                      title: Country Name
                      description: >-
                        The name of the country associated with this counterparty
                        address.
                      type: string
                    email:
                      title: Email
                      description: >-
                        The email address associated with this counterparty
                        address (if any).
                      type: string
                    phone:
                      title: Phone
                      description: >-
                        The phone number associated with this counterparty address
                        (if any).
                      type: string
                examples:
                  response:
                    value:
                      id: 100
                      line_one: 'st: 3, block: 2, Jenkins Road'
                      city_name: Cincinnati
                      state_name: Ohio
                      zipcode: '513'
                      country_name: USA
                      email: john.doe@gmail.com
                      phone: (415) 555-0198
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/{counterparty_id}/addresses/{address_id}/:
      patch:
        operationId: v2.1_public_counter_parties_addresses_partial_update
        summary: Update Counterparty Address
        description: Update counterparty address
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: address_id
            in: path
            description: ID of the Counterparty address.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_addresses_partial_updateData
        responses:
          '200':
            description: Update Counterparty Address
            content:
              application/json:
                schema:
                  title: CounterPartyAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - line_one
                    - city_name
                    - state_name
                    - zipcode
                    - country_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this address. Globally Unique.
                      type: integer
                    line_one:
                      title: Line One
                      description: >-
                        The first line of the address. Usually the apartment,
                        floor, and street information.
                      type: string
                    city_name:
                      title: City Name
                      description: The city name for this address.
                      type: string
                    state_name:
                      title: State Name
                      description: The state name for this address.
                      type: string
                    zipcode:
                      title: Zipcode
                      description: The zip/pin/postal code for this address.
                      type: string
                    country_name:
                      title: Country Name
                      description: >-
                        The name of the country associated with this counterparty
                        address.
                      type: string
                    email:
                      title: Email
                      description: >-
                        The email address associated with this counterparty
                        address (if any).
                      type: string
                    phone:
                      title: Phone
                      description: >-
                        The phone number associated with this counterparty address
                        (if any).
                      type: string
                examples:
                  response:
                    value:
                      id: 100
                      line_one: 'st: 3, block: 2, Jenkins Road'
                      city_name: Cincinnati
                      state_name: Ohio
                      zipcode: '513'
                      country_name: USA
                      email: john.doe@gmail.com
                      phone: (415) 555-0198
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/{counterparty_id}/contacts:
      get:
        operationId: v2.1_public_counter_parties_contacts_list
        summary: List Counterparty Contacts
        description: Get the list of counterparty contacts
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List Counterparty Contacts
            content:
              application/json:
                schema:
                  title: CounterPartyContactsListAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyContactResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 1
                      results:
                        - id: 100
                          name: Susan Ervin
                          email: dummy@email.com
                          is_primary: false
        tags:
          - V2.1 Counterparty APIs
      post:
        operationId: v2.1_public_counter_parties_contacts_create
        summary: Create Counterparty Contact
        description: Create Counterparty Contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_createData
        responses:
          '201':
            description: Create Counterparty Contact
            content:
              application/json:
                schema:
                  title: CounterPartyContactResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - email
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this contact. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this contact.
                      type: string
                    email:
                      title: Email
                      description: The email of this contact.
                      type: string
                    is_primary:
                      title: Is Primary
                      description: >-
                        Defines if this contact is the primary contact for the
                        associated counterparty.
                      type: boolean
                examples:
                  response:
                    value:
                      id: 100
                      name: Susan Ervin
                      email: dummy@email.com
                      is_primary: false
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/{counterparty_id}/contacts/bulk/:
      patch:
        operationId: v2.1_public_counter_parties_contacts_bulk_partial_update
        summary: Bulk Update Counterparty Contacts
        description: Bulk Update counterparty contacts
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_bulk_partial_updateData
        responses:
          '200':
            description: Bulk Update Counterparty Contacts
            content:
              application/json:
                schema:
                  title: ExternalCounterpartyContactBulkUpdateResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/CounterPartyContactResponse'
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/counter_parties/{counterparty_id}/contacts/{contact_id}/:
      patch:
        operationId: v2.1_public_counter_parties_contacts_partial_update
        summary: Update Counterparty Contact
        description: Update counterparty contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: contact_id
            in: path
            description: ID of the Counterparty contact.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_partial_updateData
        responses:
          '200':
            description: Update Counterparty Contact
            content:
              application/json:
                schema:
                  title: CounterPartyContactResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - email
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this contact. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this contact.
                      type: string
                    email:
                      title: Email
                      description: The email of this contact.
                      type: string
                    is_primary:
                      title: Is Primary
                      description: >-
                        Defines if this contact is the primary contact for the
                        associated counterparty.
                      type: boolean
                examples:
                  response:
                    value:
                      id: 100
                      name: Susan Ervin
                      email: dummy@email.com
                      is_primary: false
        tags:
          - V2.1 Counterparty APIs
      delete:
        operationId: v2.1_public_counter_parties_contacts_delete
        summary: Delete Counterparty Contact
        description: Delete counterparty contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: contact_id
            in: path
            description: ID of the Counterparty contact.
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: Delete Counterparty Contact
        tags:
          - V2.1 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/key_pointers/:
      get:
        operationId: v2.1_public_key_pointers_list
        summary: Get KeyPointers
        description: Gets all the key pointers for the Organization
        parameters:
          - name: contract_type_id
            in: query
            description: ID of the Contract type.
            required: true
            schema:
              type: integer
          - name: is_external
            in: query
            description: Set to True to get only key pointers from external sections.
            required: false
            schema:
              type: boolean
        responses:
          '200':
            description: KeyPointers
            content:
              application/json:
                schema:
                  title: KeyPointerListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyPointerDomainModel'
        tags:
          - V2.1 KeyPointer APIs
      parameters: []
    /v2.1/public/organizations/entities/:
      get:
        operationId: v2.1_public_organizations_entities_list
        summary: Get Organization Entities
        description: Gets all the entity associated with the Organization
        responses:
          '200':
            description: Entities
            content:
              application/json:
                schema:
                  title: OrganizationEntityListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/OrganizationEntityDomainModel'
        tags:
          - V2.1 Organization APIs
      post:
        operationId: v2.1_public_organizations_entities_create
        summary: Create Entity
        description: Create an entity associated with the Organization
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_organizations_entities_createData
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  title: OrganizationEntityDomainModel
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - reference_id
                    - jurisdiction
                    - organization_type
                    - primary_address
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the Entity
                      type: integer
                    name:
                      title: Name
                      description: >-
                        The name of Entity as rendered in the contracts and shown
                        to users.
                      type: string
                    reference_id:
                      title: Reference Id
                      description: >-
                        The Reference ID of the entity which is used to identify
                        the entity in templates.
                      type: string
                    jurisdiction:
                      title: Jurisdiction
                      description: The Jurisdiction associated with the entity.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CountryDomainModel'
                    organization_type:
                      title: Organization Type
                      description: >-
                        The type of this entity. This identifies the company type.
                        For example LLP vs LLC vs S Corp in the US
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationTypeBaseDomainModel'
                    primary_address:
                      title: Primary Address
                      description: The address details of the entity.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/PrimaryAddressDomainModel'
                    is_primary:
                      title: Is Primary
                      description: This identify the entity as the primary entity or not
                      type: boolean
                examples:
                  response:
                    value:
                      id: 1045
                      name: Acme Inc.
                      reference_id: US20
                      jurisdiction:
                        id: 234
                        name: United States
                        iso_code: US
                      organization_type:
                        id: 1
                        name: Private Company
                      primary_address:
                        id: 5073
                        line_one: 3659 Burwell Heights Road
                        city_name: Houston
                        state_name: Texas
                        zipcode: '77020'
                        country:
                          id: 234
                          name: United States
                          iso_code: US
                      is_primary: true
        tags:
          - V2.1 Organization APIs
      parameters: []
    /v2.1/public/organizations/types/:
      get:
        operationId: v2.1_public_organizations_types_list
        summary: Get Organization Types
        description: Gets all the organization types available for a jurisdiction
        parameters:
          - name: jurisdiction_iso_code
            in: query
            description: >-
              The ISO-3166-1 Alpha-2 code of the jurisdiction associated with this
              organization. Any value passed here is overrides `jurisdiction`.
              Valid values can be found
              [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Organization Type List
            content:
              application/json:
                schema:
                  title: OrganizationTypeListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/OrganizationTypeDomainModel'
        tags:
          - V2.1 Organization APIs
      parameters: []
    /v2.1/public/supported_documents/{contract_id}/:
      post:
        operationId: v2.1_public_supported_documents_create
        summary: Upload supported documents for a given contract
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_supported_documents_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: SupportedDocumentResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - created
                  type: object
                  properties:
                    id:
                      title: Id
                      description: Id of supported document
                      type: integer
                    name:
                      title: Name
                      description: Name of the document
                      type: string
                    created:
                      title: Created
                      description: Datetime when document was created
                      type: string
                      format: date-time
                examples:
                  response:
                    value:
                      id: '199'
                      name: Acme Corporation Related Document
                      created: '2022-10-10'
        tags:
          - V2.1 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/templates/:
      get:
        operationId: v2.1_public_templates_list
        summary: Get Template List
        description: >-
          V2.1 API for listing of published templates available in the given
          Client workspace.
        parameters:
          - name: tags
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the Template tags are a subset
              of the tags passed will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: tags_all
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the tags passed are a subset of
              the Template tags will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Template List
            content:
              application/json:
                schema:
                  title: TemplateListResponse
                  description: A list of template as returned by the public API
                  required:
                    - items
                  type: object
                  properties:
                    items:
                      title: Items
                      description: The list of templates supported for this Client.
                      type: array
                      items:
                        $ref: '#/components/schemas/TemplateResponse'
                examples:
                  response:
                    value:
                      items:
                        - id: 1
                          name: Basic Non Disclosure Agreement
        tags:
          - V2.1 Template APIs
      parameters: []
    /v2.1/public/templates/{template_id}/:
      get:
        operationId: v2.1_public_templates_read
        summary: Get Template Details
        description: Get details for a contract template.
        parameters:
          - name: template_id
            in: path
            description: The ID of the template.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Template Details
            content:
              application/json:
                schema:
                  title: TemplateResponseV2
                  description: >-
                    A template along with the updated data as updated by the
                    public API.
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the template
                      type: integer
                    name:
                      title: Name
                      description: The name of the template
                      type: string
                    tags:
                      title: Tags
                      description: The tags to be updated for the requested template id.
                      type: array
                      items:
                        type: string
                examples:
                  response:
                    value:
                      id: 1
                      name: Basic Non Disclosure Agreement
                      tags:
                        - Tag1
                        - Tag2
        tags:
          - V2.1 Template APIs
      patch:
        operationId: v2.1_public_templates_partial_update
        summary: Update Template Data
        description: Update data for a contract template.
        parameters:
          - name: template_id
            in: path
            description: The ID of the template.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_templates_partial_updateData'
        responses:
          '200':
            description: Updated Template
            content:
              application/json:
                schema:
                  title: TemplateResponseV2
                  description: >-
                    A template along with the updated data as updated by the
                    public API.
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the template
                      type: integer
                    name:
                      title: Name
                      description: The name of the template
                      type: string
                    tags:
                      title: Tags
                      description: The tags to be updated for the requested template id.
                      type: array
                      items:
                        type: string
                examples:
                  response:
                    value:
                      id: 1
                      name: Basic Non Disclosure Agreement
                      tags:
                        - Tag1
                        - Tag2
        tags:
          - V2.1 Template APIs
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/templates/{template_id}/metadata:
      get:
        operationId: v2.1_public_templates_metadata_list
        summary: Get Template Metadata
        description: >

          Gets the list of fields required to create a contract with a given
          template.


          The list of attributes returned define how a `contract_data` payload is
          to be

          constructed for the [V2 Create Contract](https://api.spotdraft.com)
          request.

          V2.1 must be used for templates created using the DraftMate Add-on.
        responses:
          '200':
            description: Template Metadata
            content:
              application/json:
                schema:
                  title: TemplateMetaDataResponseV2
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - attributes
                    - counter_party_kind
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      description: The list of attributes for this contract template.
                      type: array
                      items:
                        $ref: '#/components/schemas/CfPublicDescriptor'
                    counter_party_kind:
                      description: >-
                        The kind of Counter Party for this contract template.
                        Signfies if the Counter Party is an individual or an
                        organization. Data sent to create an instance of this
                        template changes based on the kind returned here.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/PartyOrganizationKind'
                examples:
                  response:
                    value: {}
        tags:
          - V2.1 Template APIs
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
    /v2.1/public/user_tasks/:
      post:
        operationId: v2.1_public_user_tasks_create
        summary: V2.1 Create User Tasks List
        description: >

          This API can be used to create User Tasks List for Task Creation on
          SpotDraft.
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_user_tasks_createData'
        responses:
          '201':
            description: V2.1 User Tasks with Reminders List
            content:
              application/json:
                schema:
                  title: UserTaskPublicResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - title
                    - created_by_org_user
                    - created_by_workspace
                    - assignees
                  type: object
                  properties:
                    id:
                      title: Id
                      description: ID of the Task
                      type: integer
                    title:
                      title: Title
                      description: Title of the Task
                      type: string
                    notes:
                      title: Notes
                      description: Notes for the Task
                      type: string
                    contract:
                      title: Contract
                      description: The Details of the Contract
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractV3MinimalDomainModel'
                    created_by_org_user:
                      title: Created By Org User
                      description: The Details of the Org User who created the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationUserResponse'
                    completed_by_org_user:
                      title: Completed By Org User
                      description: The Details of the Org User who completed the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationUserResponse'
                    completed_at:
                      title: Completed At
                      description: The date and time when the Task got completed
                      type: string
                      format: date-time
                    absolute_due_date:
                      title: Absolute Due Date
                      description: The date and time when the Task is due for completion
                      type: string
                      format: date-time
                    created:
                      title: Created
                      description: The date and time when the task got created
                      type: string
                      format: date-time
                    created_by_workspace:
                      title: Created By Workspace
                      description: The Details of the Workspace who created the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/WorkspaceResponse'
                    assignees:
                      title: Assignees
                      description: The Details of Assignees for the Task
                      type: array
                      items:
                        $ref: '#/components/schemas/TaskAssigneeDomainModel'
                    status:
                      type: object
                      default: NO_DATE
                      allOf:
                        - $ref: '#/components/schemas/UserTaskStatus'
                    deleted_at:
                      title: Deleted At
                      description: The date and time when the task got deleted
                      type: string
                      format: date-time
                    due_date_key_pointer_id:
                      title: Due Date Key Pointer Id
                      description: >-
                        The ID of the key pointer that has the due date for the
                        task
                      type: integer
                    reminders:
                      title: Reminders
                      description: List of Reminders for the Task
                      type: array
                      items:
                        $ref: '#/components/schemas/ReminderDomainModel'
                      default: ''
        tags:
          - V2.1 Tasks and Reminders APIs
      parameters: []
    /v2/public/auth/roles/:
      get:
        operationId: v2_public_auth_roles_list
        summary: Get active roles for a workspace
        description: Get list of active roles for Client's Workspace
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalUserActiveRolesResponseList
                  description: |-
                    Pydantic Model that takes in the list if active
                    roles pydantic response
                  required:
                    - active_roles
                  type: object
                  properties:
                    active_roles:
                      title: Active Roles
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalUserActiveRolesData'
        tags:
          - V2 User APIs
      parameters: []
    /v2/public/auth/roles/{role_id}/members:
      post:
        operationId: v2_public_auth_roles_members_create
        summary: Add Role Member
        description: ''
        parameters:
          - name: role_id
            in: path
            description: >-
              Use the [Get Active
              Roles](#tag/V2.1-User-APIs/operation/v2.1_public_auth_roles_list)
              API to get the role ID.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_auth_roles_members_createData'
        responses:
          '200':
            description: Add Role Member
            content:
              application/json:
                schema:
                  title: PublicRoleMemberAddResponse
                  description: The updated members of the role.
                  type: array
                  items:
                    $ref: '#/components/schemas/PublicMinimalUserResponse'
        tags:
          - V2 User APIs
      delete:
        operationId: v2_public_auth_roles_members_delete
        summary: Delete Role Member
        description: ''
        parameters:
          - name: role_id
            in: path
            description: >-
              Use the [Get Active
              Roles](#tag/V2.1-User-APIs/operation/v2.1_public_auth_roles_list)
              API to get the role ID.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_auth_roles_members_deleteData'
        responses:
          '204':
            description: Delete Role Member
        tags:
          - V2 User APIs
      parameters:
        - name: role_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/auth/users/:
      get:
        operationId: v2_public_auth_users_list
        summary: Get User List
        description: Gets all the users of your organization
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: user_email
            in: query
            description: >-
              User email address for which that user list should be filtered.
              Please make sure that the value is url encoded. So for example, if
              the email address is `abc+123@xyz.com` the value passed should be
              `abc%2B123%40xyz.com`.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: User List
            content:
              application/json:
                schema:
                  title: PublicUserMinimalListResponse
                  description: >-
                    SD Generic Model from which all other Generic Models should
                    inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      description: The current page number. Page numbers start at 1.
                      type: integer
                    limit:
                      title: Limit
                      description: The number of items returned per page.
                      type: integer
                    total_results:
                      title: Total Results
                      description: Total number of items in the result set.
                      type: integer
                    results:
                      title: Results
                      description: The actual results.
                      type: array
                      items:
                        $ref: '#/components/schemas/PublicMinimalUserResponse'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - id: 100
                          first_name: Sonia
                          last_name: Sotomayor
                          email: sonia_sotomayor@notreally.supremecourt.gov
                          designation: Lawyer
                        - id: 101
                          first_name: Elena
                          last_name: Kagan
                          email: elena_kagan@notreally.supremecourt.gov
                          designation: Lead Lawyer
        tags:
          - V2 User APIs
      parameters: []
    /v2/public/contract_types/:
      get:
        operationId: v2_public_contract_types_list
        summary: Get Contract Type List
        description: ''
        responses:
          '200':
            description: Contract Type List
            content:
              application/json:
                schema:
                  title: ContractTypeResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    name:
                      title: Name
                      type: string
        tags:
          - V2 Contract Type APIs
      parameters: []
    /v2/public/contract_types/{contract_type_id}/entities:
      get:
        operationId: v2_public_contract_types_entities_list
        summary: List Contract Type Entities
        description: Get the list of contract type entities
        parameters:
          - name: contract_type_id
            in: path
            description: ID of the Contract Type.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List Contract Type Entities
            content:
              application/json:
                schema:
                  title: ExternalContractTypeEntityListResponse
                  description: The list of entities for the contract type
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractTypeEntityResponse'
        tags:
          - V2 Contract Type APIs
      parameters:
        - name: contract_type_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contract_types/{contract_type_id}/intake_form/questionnaire/:
      get:
        operationId: v2_public_contract_types_intake_form_questionnaire_list
        summary: Get Intake Form Questionnaire Details
        description: ''
        parameters:
          - name: contract_type_id
            in: path
            description: ID of the Contract Type.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Intake Form Questionnaire Details
            content:
              application/json:
                schema:
                  title: IntakeFormQuestionnairePublicResponse
                  description: The list of attributes for this contract template.
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/IntakeFormQuestionnaireDetailsPublicResponse
                examples:
                  response:
                    value:
                      display_label: >-
                        Always she crime daughter task positive employee. Already
                        mission popular ahead civil term.
                      variable: >-
                        Always she crime daughter task positive employee. Already
                        mission popular ahead civil term.
                      type: enum
                      parent_type: dropdown
                      options:
                        - label: test option 1
                          value: test option 1
                        - label: test option 2
                          value: test option 2
                        - label: test option 3
                          value: test option 3
                      required: false
                      default_value: null
                      question: >-
                        Today down gas marriage kid. South think reality always.
                        Management effort ground machine reality when impact.

                        Accept anyone picture him air.
                      attributes: null
        tags:
          - V2 Contract Type APIs
      parameters:
        - name: contract_type_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/:
      get:
        operationId: v2_public_contracts_list
        summary: Get Contract List
        description: >-
          This method returns the list of contracts belonging to the related
          workspace.
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: filter__client_email_address
            in: query
            description: Filters on the counter party email. Does an exact match.
            schema:
              type: string
          - name: filter__client_name
            in: query
            description: Filters on the counter party name. Does an exact match.
            schema:
              type: string
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  title: ContractListResponseV2
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/ContractResponseV2'
                examples:
                  response:
                    value:
                      total_results: 2
                      page: 1
                      limit: 10
                      results:
                        - id: T-34211
                          created: '2021-05-20T04:52:04Z'
                          created_by: Elena Kagan
                          contract_link: https://app.spotdraft.com/contracts/v2/1234
                          contract_status: REDLINING
                          contract_name: Standard NDA
                          counter_party_name: Microsoft
                          contract_type_name: Standard NDA
                        - id: H-2342
                          created: '2021-05-10T04:42:00Z'
                          created_by: Sonia Sotomayor
                          contract_link: https://app.spotdraft.com/contracts/v2/4322
                          contract_status: EXECUTED
                          contract_name: Standard NDA - With Apple
                          counter_party_name: Apple Inc.
                          contract_type_name: Standard NDA
        tags:
          - V2 Contract APIs
      post:
        operationId: v2_public_contracts_create
        summary: Create Contract
        description: >
          *

          In signatories list, sign_order should be set for either all items or no
          items of the list. Additionally when

          sign_order is set for all items of signatories list then at-least one
          counter party signatory user should also be part

          of the list.

          *

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        parameters:
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/ExternalCreateContract'
        responses:
          '201':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractV3'
        tags:
          - V2 Contract APIs
      parameters: []
    /v2/public/contracts/approvals/{contract_id}/:
      get:
        operationId: v2_public_contracts_approvals_read
        summary: Get contract approvals
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: PublicContractApprovalListResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - results
                  type: object
                  properties:
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: >-
                          #/components/schemas/PublicContractApprovalExpandedResponse
        tags:
          - V2 Contract APIs
      post:
        operationId: v2_public_contracts_approvals_create
        summary: Create and send adhoc approvals
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_approvals_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalApprovalListResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalApprovalResponse'
                examples:
                  response:
                    value:
                      - id: 1001
                        contract_id: 211270
                        name: Legal Approval
                        approver_user_id: 10324
                        approver_role_id: null
                        is_sent: true
                        notes: Please take a look need your approval.
                        order: 1
                      - id: 1002
                        contract_id: 211270
                        name: Finance team Approval
                        approver_user_id: null
                        approver_role_id: 60414
                        is_sent: true
                        notes: Hi team need your approval on this contract.
                        order: 2
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/by_external_metadata/{external_metadata_id}:
      get:
        operationId: v2_public_contracts_by_external_metadata_read
        summary: Get Contract by External Metadata ID
        description: >-
          Returns the list of first 50 contracts that are linked to the external
          id. If contracts list exceeds 50 then please contact customer support
          for further assistance.
        parameters:
          - name: external_metadata_id
            in: path
            description: >-
              External Metadata ID of the Contract. This can be used to search for
              contracts based on an ID specified when creating the contract using
              the external API.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Contract List
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractV3'
                examples:
                  response:
                    value:
                      - id: T-34211
                        created: '2021-05-20T04:52:04Z'
                        created_by: Elena Kagan
                        contract_link: https://app.spotdraft.com/contracts/v2/1234
                        contract_status: REDLINING
                        contract_name: Standard NDA
                        counter_party_name: Microsoft
                        contract_type_name: Standard NDA
                      - id: H-2342
                        created: '2021-05-10T04:42:00Z'
                        created_by: Sonia Sotomayor
                        contract_link: https://app.spotdraft.com/contracts/v2/4322
                        contract_status: EXECUTED
                        contract_name: Standard NDA - With Apple
                        counter_party_name: Apple Inc.
                        contract_type_name: Standard NDA
        tags:
          - V2 Contract APIs
      parameters:
        - name: external_metadata_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/embedded/contracts/{contract_id}/counter_party/:
      get:
        operationId: v2_public_contracts_embedded_contracts_counter_party_list
        summary: Get CounterParty Embedded Url
        description: ''
        parameters:
          - name: cp_email_id
            in: query
            description: Email address of the CP for which the url needs to be returned.
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: CounterPartyEmbeddedUrlResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - url
                  type: object
                  properties:
                    url:
                      title: Url
                      type: string
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/preview/:
      post:
        operationId: v2_public_contracts_preview_create
        summary: Generate Contract Preview
        description: >2

                  Generate contract preview for contract data.

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_preview_createData'
        responses:
          '200':
            description: Preview PDF File
            content:
              application/json:
                schema:
                  type: string
                  format: binary
        tags:
          - V2 Contract APIs
      parameters: []
    /v2/public/contracts/upload_review_contracts/:
      post:
        operationId: v2_public_contracts_upload_review_contracts_create
        summary: Upload Contract For Review
        description: >2

                          This method takes in intake_form_data to be used for contract creation.

          The Intake Form Data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Intake Form Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_upload_review_contracts_createData
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractResponseV2
                  description: Must be kept in sync with ExternalContractV3Serializer
                  required:
                    - id
                    - created
                    - contract_name
                    - contract_link
                    - contract_status
                    - created_by
                    - counter_party_name
                    - contract_type_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The Id of the contract on SpotDraft's Platform.
                      type: string
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract was created or
                        uploaded on SpotDraft's platform.
                      type: string
                      format: date-time
                    contract_name:
                      title: Contract Name
                      description: The name of the contract that is visible to users.
                      type: string
                    contract_link:
                      title: Contract Link
                      description: The Url to view the contract.
                      type: string
                    contract_status:
                      title: Contract Status
                      description: The status of the contract.
                      type: string
                    created_by:
                      title: Created By
                      description: >-
                        The full name of user who created or uploaded the executed
                        contract on to SpotDraft's platform.
                      type: string
                    counter_party_name:
                      title: Counter Party Name
                      description: >-
                        The full name of the counter party involved in the
                        contract.
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The type of the contract.
                      type: string
                    external_metadata:
                      title: External Metadata
                      type: object
                examples:
                  response:
                    value:
                      id: T-1234
                      created: '2021-05-20T04:52:04Z'
                      contract_name: Acme Corporation NDA
                      contract_link: https://app.spotdraft.com/contracts/v2/4322
                      contract_status: EXECUTED
                      created_by: Morgan Freeman
                      counter_party_name: Mike Reed
                      contract_type_name: Historic
                      external_metadata: {}
        tags:
          - V2 Contract APIs
      parameters: []
    /v2/public/contracts/upload_sign_contracts/:
      post:
        operationId: v2_public_contracts_upload_sign_contracts_create
        summary: Upload Contract For Signature
        description: >2

                          This method takes in intake_form_data to be used for contract creation.

          The Intake Form Data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Intake Form Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_upload_sign_contracts_createData
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractResponseV2
                  description: Must be kept in sync with ExternalContractV3Serializer
                  required:
                    - id
                    - created
                    - contract_name
                    - contract_link
                    - contract_status
                    - created_by
                    - counter_party_name
                    - contract_type_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The Id of the contract on SpotDraft's Platform.
                      type: string
                    created:
                      title: Created
                      description: >-
                        The date and time at which the contract was created or
                        uploaded on SpotDraft's platform.
                      type: string
                      format: date-time
                    contract_name:
                      title: Contract Name
                      description: The name of the contract that is visible to users.
                      type: string
                    contract_link:
                      title: Contract Link
                      description: The Url to view the contract.
                      type: string
                    contract_status:
                      title: Contract Status
                      description: The status of the contract.
                      type: string
                    created_by:
                      title: Created By
                      description: >-
                        The full name of user who created or uploaded the executed
                        contract on to SpotDraft's platform.
                      type: string
                    counter_party_name:
                      title: Counter Party Name
                      description: >-
                        The full name of the counter party involved in the
                        contract.
                      type: string
                    contract_type_name:
                      title: Contract Type Name
                      description: The type of the contract.
                      type: string
                    external_metadata:
                      title: External Metadata
                      type: object
                examples:
                  response:
                    value:
                      id: T-1234
                      created: '2021-05-20T04:52:04Z'
                      contract_name: Acme Corporation NDA
                      contract_link: https://app.spotdraft.com/contracts/v2/4322
                      contract_status: EXECUTED
                      created_by: Morgan Freeman
                      counter_party_name: Mike Reed
                      contract_type_name: Historic
                      external_metadata: {}
        tags:
          - V2 Contract APIs
      parameters: []
    /v2/public/contracts/webhooks/re_trigger_latest/:
      post:
        operationId: v2_public_contracts_webhooks_re_trigger_latest_create
        summary: Re-trigger Contract Webhooks
        description: |

          Re-trigger the last webhook call made for all given contracts.
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_webhooks_re_trigger_latest_createData
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      default: Success
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    detail:
                      type: string
                      default: Not Found
        tags:
          - V2 Contract APIs
      parameters: []
    /v2/public/contracts/{composite_id}/download:
      post:
        operationId: v2_public_contracts_download_create
        summary: Download Contract File
        description: Returns a copy of the contract
        parameters:
          - name: composite_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: PDF copy of the Contract
            content:
              application/json:
                schema:
                  type: string
                  format: binary
        tags:
          - V2 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{composite_id}/download_link:
      post:
        operationId: v2_public_contracts_download_link_create
        summary: Get Contract Download Link
        description: Returns a link for the copy of the contract
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Download Link
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DownloadUrl'
                examples:
                  response:
                    value:
                      url: https://storage.googleapis.com/some/path?signature=ASDASD
                      file_name: Standard NDA a3b2.pdf
        tags:
          - V2 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{composite_id}/send_to_counterparties:
      post:
        operationId: v2_public_contracts_send_to_counterparties_create
        summary: Send Contract to Counterparties
        description: Returns status code 200 if successful
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/SendToCounterparty'
        responses:
          '200':
            description: OK
        tags:
          - V2 Contract APIs
      parameters:
        - name: composite_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/comments/:
      get:
        operationId: v2_public_contracts_comments_list
        summary: Get comments in contract activity log.
        description: ''
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalCommentListResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalCommentResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 2
                      results:
                        - id: 1001
                          contract_id: 211270
                          comment: This is sample comment.
                          replies:
                            - id: 2021
                              comment: This is a sample reply.
                        - id: 1002
                          contract_id: 211270
                          comment: Hi team this contract need your review.
                          replies: []
        tags:
          - V2 Contract APIs
      post:
        operationId: v2_public_contracts_comments_create
        summary: Add comment to contract activity log.
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_comments_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalCommentResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - contract_id
                    - comment
                    - replies
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    contract_id:
                      title: Contract Id
                      description: The id of the contract to which the comment belongs.
                      type: integer
                    comment:
                      title: Comment
                      description: The content of the comment.
                      type: string
                    replies:
                      title: Replies
                      description: The replies associated with the comment.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalReplyResponse'
                examples:
                  response:
                    value:
                      id: 1001
                      contract_id: 211270
                      comment: Hey test.user@spotdraft.com please review this contract.
                      replies: []
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/contract_data:
      patch:
        operationId: v2_public_contracts_contract_data_partial_update
        summary: Update Contract Data
        description: >2

                  Updates the contract data for given contract id.

          The contract data should have the following data types with the
          following output:

          <table>
              <thead>
              <tr>
                  <td>Type</td>
                  <td>Data Format</td>
                  <td>Sample</td>
              </tr>
              </thead>
          <tbody>
              <tr>
              <td>Duration</td>
              <td>
                  <code>{"days": int, "type": DurationKind, "value": int}</code><br/>
                  `DurationKind`: `DAYS` or `MONTHS` or `YEARS`
              </td>
              <td><code>{"days": 180, "type": "MONTHS", "value": 6}</code></td>
              </tr>
              <tr>
              <td>Date</td>
              <td>
                  String formatted date in form <code>YYYY-MM-dd</code>
              </td>
              <td><code>"2019-11-29"</code></td>
              </tr>
              <tr>
              <td>Dropdown</td>
              <td>
                  Value as returned in <code>options</code>. Can be string or number.
              </td>
              <td><code>"1"</code></td>
              </tr>
              <tr>
              <td>String</td>
              <td>
                  A string value.
              </td>
              <td><code>"Something"</code></td>
              </tr>
              <tr>
              <td>Currency</td>
              <td>
                  <code>{"type": CurrencyCode, "value": float}</code><br/>
                  Where currencyCode: "INR", "USD", "SGD", "EUR"
              </td>
              <td><code>{"type": "INR", "value": 15000.00}</code></td>
              </tr>
              <tr>
              <td>Check-box</td>
              <td>
                  A boolean value
              </td>
              <td><code>true</code></td>
              </tr>
              <tr>
              <td>text-box</td>
              <td>
                  A string value. Can be multi-line
              </td>
              <td><code>"Not Applicable\nBecause..."</code></td>
              </tr>
              <tr>
              <td>number</td>
              <td>
                  A numeric value. Can be int or float
              </td>
              <td><code>4</code> or <code>3.14</code></td>
              </tr>
          </tbody>

          </table>



          ### Sample Contract Data:

          ```

          {
              "term": {"days": 180, "type": "MONTHS", "value": 6},
              "notes": "Not Applicable",
              "capacity": 15,
              "setup_fee": {"type": "INR", "value": 30000.00},
              "start_date": "2019-11-29",
              "yes_discounts": false,
              "payment_method": "1",
              "suggestions": "No suggestions"
          }

          ```
        parameters:
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_contract_data_partial_updateData
        responses:
          '200':
            description: Updated Data
            content:
              application/json:
                schema:
                  title: ContractDataUpdateRequest
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - data
                  type: object
                  properties:
                    data:
                      title: Data
                      description: data dictionary
                      type: object
                examples:
                  response:
                    value:
                      data:
                        term:
                          days: 180
                          type: MONTHS
                          value: 6
                        notes: Not Applicable
                        capacity: 15
                        setup_fee:
                          type: INR
                          value: 30000
                        start_date: '2019-11-29'
                        yes_discounts: false
                        payment_method: '1'
                        suggestions: No suggestions
          '400':
            description: ''
            content:
              application/json:
                schema:
                  title: Invalid contract status
                  description: body
                  type: object
                  properties:
                    detail:
                      type: string
                      default: Contract cannot be updated because it has been executed.
                    code:
                      type: string
                      default: SD_PUBLIC_00009
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/contract_version/:
      post:
        operationId: v2_public_contracts_contract_version_create
        summary: Upload Contract Version.
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_contract_version_createData
        responses:
          '201':
            description: Success
        tags:
          - V2 Contract Version APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/invite/:
      post:
        operationId: v2_public_contracts_invite_create
        summary: Invite Users & Roles
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_invite_createData'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalContractInviteResponse
                  description: SD Base Model from which all other Models should inherit
                  type: object
                  properties:
                    impacted_users:
                      title: Impacted Users
                      description: The list of users invited.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalUserPublicResponse'
                      default: []
                    impacted_roles:
                      title: Impacted Roles
                      description: The list of roles invited.
                      type: array
                      items:
                        $ref: '#/components/schemas/ExternalRolePublicResponse'
                      default: []
                examples:
                  response:
                    value:
                      impacted_users: []
                      impacted_roles:
                        - id: 34
                          name: Legal
                          description: Legal team
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/key_pointers:
      get:
        operationId: v2_public_contracts_key_pointers_list
        summary: Get Key Pointers
        description: Returns list of key pointers for given contract id
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractKeyPointerMinimalListResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/ContractKeyPointerMinimalResponse'
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/key_pointers/{contract_key_pointer_id}:
      patch:
        operationId: v2_public_contracts_key_pointers_partial_update
        summary: Update Key Pointer Value
        description: Updates the specified key pointer
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
          - name: contract_key_pointer_id
            in: path
            description: ID of the contract key pointer value.
            required: true
            schema:
              type: string
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_contracts_key_pointers_partial_updateData
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ContractKeyPointerMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - value
                    - label
                    - field_name
                    - data_type
                    - format_option
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    value:
                      title: Value
                      description: Value of the key pointer
                      anyOf:
                        - type: integer
                        - type: string
                        - type: array
                          items: {}
                        - type: object
                        - type: boolean
                      oneOf:
                        - type: integer
                        - type: string
                        - type: array
                          items: {}
                        - type: object
                        - type: boolean
                    label:
                      title: Label
                      type: string
                    field_name:
                      title: Field Name
                      type: string
                    data_type:
                      title: Data Type
                      type: string
                    format_option:
                      title: Format Option
                      type: object
                examples:
                  response:
                    value:
                      id: 1
                      value: sample
                      label: Sample Label
                      filed_name: sample_field_name
                      data_type: string
                      format_option:
                        data: sample format option
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
        - name: contract_key_pointer_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/notes:
      get:
        operationId: v2_public_contracts_notes_list
        summary: Get Contract Notes
        description: Gets all the notes associated with the contract
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Notes
            content:
              application/json:
                schema:
                  title: ContractNoteMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - text
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    text:
                      title: Text
                      type: string
                    note_tag:
                      title: Note Tag
                      type: string
                examples:
                  response:
                    value:
                      id: 1
                      text: sample note for contract
                      note_tag: sample_tag
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/notes/{note_id}:
      put:
        operationId: v2_public_contracts_notes_update
        summary: Update Contract Note
        description: Returns the updated note
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
          - name: key_pointer_id
            in: path
            description: ID of the key pointer value.
            required: true
            schema:
              type: string
          - name: user-email
            in: header
            description: >-
              The email address of the user to act as (when using client-secret
              authentication). This header attributes actions taken using the API
              to the given user.
            required: false
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_contracts_notes_updateData'
        responses:
          '200':
            description: Notes
            content:
              application/json:
                schema:
                  title: ContractNoteMinimalResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - text
                  type: object
                  properties:
                    id:
                      title: Id
                      type: integer
                    text:
                      title: Text
                      type: string
                    note_tag:
                      title: Note Tag
                      type: string
                examples:
                  response:
                    value:
                      id: 1
                      text: sample note for contract
                      note_tag: sample_tag
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
        - name: note_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/questionnaire/responses/:
      get:
        operationId: v2_public_contracts_questionnaire_responses_list
        summary: Get Questionnaire Response
        description: ''
        parameters:
          - name: page
            in: query
            description: A page number within the paginated result set.
            required: false
            schema:
              type: integer
          - name: limit
            in: query
            description: Number of results to return per page.
            required: false
            schema:
              type: integer
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
          - name: questionnaire_type
            in: query
            description: >-
              Enum: `INTAKE_FORM/TEMPLATE`. Type of the questionnaire for which
              response needs to be returned.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalContractQuestionnairePublicResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - questionnaire_response_data
                  type: object
                  properties:
                    questionnaire_response_data:
                      title: Questionnaire Response Data
                      description: Questionnaire response data for the contract.
                      type: object
                    respondents:
                      title: Respondents
                      description: List of users who answered the questionnaire.
                      type: array
                      items:
                        $ref: >-
                          #/components/schemas/ExternalContractQuestionnaireRespondentPublicData
                examples:
                  response:
                    value:
                      questionnaire_response_data:
                        department: product
                      respondents:
                        - created_at: '2023-06-14T10:46:15.205587Z'
                          created_by: Mike Reed
                          org_name: Acme Inc.
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/recipients/recipient_link/:
      get:
        operationId: v2_public_contracts_recipients_recipient_link_list
        summary: Get Recipient Link
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: ID of the Contract.
            required: true
            schema:
              type: integer
          - name: recipient_email
            in: query
            description: Email of the recipient for whom the link needs to be generated.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  title: ExternalGetRecipientLinkResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - link
                  type: object
                  properties:
                    link:
                      title: Link
                      description: >-
                        Link that can be used by the recipient to take an action
                        like signing, approval, etc.
                      type: string
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/contracts/{contract_id}/status:
      get:
        operationId: v2_public_contracts_status_list
        summary: Get Contract Status
        description: Get the status for the requested contract id
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Contract Status
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExternalContractStatus'
                examples:
                  response:
                    value:
                      contract_status: EXECUTED
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/:
      get:
        operationId: v2_public_counter_parties_list
        summary: List Counterparties
        description: Get the list of counterparties
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: filter__client_email_address
            in: query
            description: Filters on the counter party email. Does an exact match.
            schema:
              type: string
          - name: filter_custom__<custom_field_name>
            in: query
            description: >-
              Filters all the counterparties which have the custom field values
              present.
            examples:
              example1:
                description: filter_custom__vendor_id=1234
            schema:
              type: string
        responses:
          '200':
            description: Counterparty
            content:
              application/json:
                schema:
                  title: CounterpartyListAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyAPIResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 50
                      results:
                        - id: 102
                          name: Mike Reed
                          is_individual: false
                          contacts:
                            - id: 100
                              name: Susan Ervin
                              email: SueErvin@yahoo.com
                          primary_address:
                            city_name: Cincinnati
                            state_name: Ohio
                            country_name: USA
                            zipcode: '513'
                            line_one: 'st: 3, block: 2, Jenkins Road'
                          status: ACTIVE
                          custom_fields:
                            vendor_id: '1234'
                            gst_number: 22AAAAA0000A1Z5
        tags:
          - V2 Counterparty APIs
      post:
        operationId: v2_public_counter_parties_create
        summary: Create Counterparty
        description: >

          This method takes in counter party details to be used for counter Party
          creation
           and returns status code 201 along with the counterparty workspace id if successfully created.
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_counter_parties_createData'
        responses:
          '201':
            description: Counterparty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2 Counterparty APIs
      parameters: []
    /v2/public/counter_parties/{counterparty_id}:
      get:
        operationId: v2_public_counter_parties_read
        summary: Get Counterparty
        description: Get the details of a counterparty by its ID
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Counterparty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2 Counterparty APIs
      patch:
        operationId: v2_public_counter_parties_partial_update
        summary: Update Counterparty
        description: Update counterparty details
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_partial_updateData
        responses:
          '200':
            description: Update Counterparty
            content:
              application/json:
                schema:
                  title: CounterPartyAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - is_individual
                    - contacts
                    - status
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this Counterparty. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this Counterparty. Unique within a workspace.
                      type: string
                    is_individual:
                      title: Is Individual
                      description: >-
                        Defines if this Counterparty is an individual or an
                        organization like a company.
                      type: boolean
                    contacts:
                      title: Contacts
                      description: The list of contacts associated with this counterparty.
                      type: array
                      items:
                        $ref: '#/components/schemas/ContactResponse'
                    primary_address:
                      title: Primary Address
                      description: >-
                        The address details of the counterparty. Used to render
                        the address in the contract templates.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CounterPartyAddressResponse'
                    status:
                      description: >-
                        Status of the Counterparty. Valid values are ACTIVE and
                        ARCHIVED.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationStatus'
                    custom_fields:
                      title: Custom Fields
                      description: Custom field values for the Counterparty
                      type: object
                examples:
                  response:
                    value:
                      id: 102
                      name: Mike Reed
                      is_individual: false
                      contacts:
                        - id: 100
                          name: Susan Ervin
                          email: SueErvin@yahoo.com
                      primary_address:
                        city_name: Cincinnati
                        state_name: Ohio
                        country_name: USA
                        zipcode: '513'
                        line_one: 'st: 3, block: 2, Jenkins Road'
                      status: ACTIVE
                      custom_fields:
                        vendor_id: '1234'
                        gst_number: 22AAAAA0000A1Z5
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/{counterparty_id}/addresses/:
      get:
        operationId: v2_public_counter_parties_addresses_list
        summary: List Counterparty Addresses
        description: Get the list of counterparty addresses
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
        responses:
          '200':
            description: List Counterparty Addresses
            content:
              application/json:
                schema:
                  title: CounterpartyListAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyAddressResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 50
                      results:
                        - id: 100
                          line_one: 'st: 3, block: 2, Jenkins Road'
                          city_name: Cincinnati
                          state_name: Ohio
                          zipcode: '513'
                          country_name: USA
                          email: john.doe@gmail.com
                          phone: (415) 555-0198
        tags:
          - V2 Counterparty APIs
      post:
        operationId: v2_public_counter_parties_addresses_create
        summary: Create Counterparty Address
        description: Create counterparty address
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_addresses_createData
        responses:
          '201':
            description: Create Counterparty Address
            content:
              application/json:
                schema:
                  title: CounterPartyAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - line_one
                    - city_name
                    - state_name
                    - zipcode
                    - country_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this address. Globally Unique.
                      type: integer
                    line_one:
                      title: Line One
                      description: >-
                        The first line of the address. Usually the apartment,
                        floor, and street information.
                      type: string
                    city_name:
                      title: City Name
                      description: The city name for this address.
                      type: string
                    state_name:
                      title: State Name
                      description: The state name for this address.
                      type: string
                    zipcode:
                      title: Zipcode
                      description: The zip/pin/postal code for this address.
                      type: string
                    country_name:
                      title: Country Name
                      description: >-
                        The name of the country associated with this counterparty
                        address.
                      type: string
                    email:
                      title: Email
                      description: >-
                        The email address associated with this counterparty
                        address (if any).
                      type: string
                    phone:
                      title: Phone
                      description: >-
                        The phone number associated with this counterparty address
                        (if any).
                      type: string
                examples:
                  response:
                    value:
                      id: 100
                      line_one: 'st: 3, block: 2, Jenkins Road'
                      city_name: Cincinnati
                      state_name: Ohio
                      zipcode: '513'
                      country_name: USA
                      email: john.doe@gmail.com
                      phone: (415) 555-0198
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/{counterparty_id}/addresses/{address_id}/:
      patch:
        operationId: v2_public_counter_parties_addresses_partial_update
        summary: Update Counterparty Address
        description: Update counterparty address
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: address_id
            in: path
            description: ID of the Counterparty address.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_addresses_partial_updateData
        responses:
          '200':
            description: Update Counterparty Address
            content:
              application/json:
                schema:
                  title: CounterPartyAddressResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - line_one
                    - city_name
                    - state_name
                    - zipcode
                    - country_name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this address. Globally Unique.
                      type: integer
                    line_one:
                      title: Line One
                      description: >-
                        The first line of the address. Usually the apartment,
                        floor, and street information.
                      type: string
                    city_name:
                      title: City Name
                      description: The city name for this address.
                      type: string
                    state_name:
                      title: State Name
                      description: The state name for this address.
                      type: string
                    zipcode:
                      title: Zipcode
                      description: The zip/pin/postal code for this address.
                      type: string
                    country_name:
                      title: Country Name
                      description: >-
                        The name of the country associated with this counterparty
                        address.
                      type: string
                    email:
                      title: Email
                      description: >-
                        The email address associated with this counterparty
                        address (if any).
                      type: string
                    phone:
                      title: Phone
                      description: >-
                        The phone number associated with this counterparty address
                        (if any).
                      type: string
                examples:
                  response:
                    value:
                      id: 100
                      line_one: 'st: 3, block: 2, Jenkins Road'
                      city_name: Cincinnati
                      state_name: Ohio
                      zipcode: '513'
                      country_name: USA
                      email: john.doe@gmail.com
                      phone: (415) 555-0198
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
        - name: address_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/{counterparty_id}/contacts:
      get:
        operationId: v2_public_counter_parties_contacts_list
        summary: List Counterparty Contacts
        description: Get the list of counterparty contacts
        parameters:
          - name: page
            in: query
            description: The page to return. Page numbers start at 1.
            schema:
              type: integer
              minimum: 1
              default: 1
          - name: limit
            in: query
            description: The number of items to return per page.
            schema:
              type: integer
              minimum: 1
              maximum: 100
              default: 10
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: List Counterparty Contacts
            content:
              application/json:
                schema:
                  title: CounterPartyContactsListAPIResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - page
                    - limit
                    - total_results
                    - results
                  type: object
                  properties:
                    page:
                      title: Page
                      type: integer
                    limit:
                      title: Limit
                      type: integer
                    total_results:
                      title: Total Results
                      type: integer
                    results:
                      title: Results
                      type: array
                      items:
                        $ref: '#/components/schemas/CounterPartyContactResponse'
                examples:
                  response:
                    value:
                      page: 1
                      limit: 10
                      total_results: 1
                      results:
                        - id: 100
                          name: Susan Ervin
                          email: dummy@email.com
                          is_primary: false
        tags:
          - V2 Counterparty APIs
      post:
        operationId: v2_public_counter_parties_contacts_create
        summary: Create Counterparty Contact
        description: Create Counterparty Contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_createData
        responses:
          '201':
            description: Create Counterparty Contact
            content:
              application/json:
                schema:
                  title: CounterPartyContactResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - email
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this contact. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this contact.
                      type: string
                    email:
                      title: Email
                      description: The email of this contact.
                      type: string
                    is_primary:
                      title: Is Primary
                      description: >-
                        Defines if this contact is the primary contact for the
                        associated counterparty.
                      type: boolean
                examples:
                  response:
                    value:
                      id: 100
                      name: Susan Ervin
                      email: dummy@email.com
                      is_primary: false
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/{counterparty_id}/contacts/bulk/:
      patch:
        operationId: v2_public_counter_parties_contacts_bulk_partial_update
        summary: Bulk Update Counterparty Contacts
        description: Bulk Update counterparty contacts
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_bulk_partial_updateData
        responses:
          '200':
            description: Bulk Update Counterparty Contacts
            content:
              application/json:
                schema:
                  title: ExternalCounterpartyContactBulkUpdateResponse
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/CounterPartyContactResponse'
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/counter_parties/{counterparty_id}/contacts/{contact_id}/:
      patch:
        operationId: v2_public_counter_parties_contacts_partial_update
        summary: Update Counterparty Contact
        description: Update counterparty contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: contact_id
            in: path
            description: ID of the Counterparty contact.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_counter_parties_contacts_partial_updateData
        responses:
          '200':
            description: Update Counterparty Contact
            content:
              application/json:
                schema:
                  title: CounterPartyContactResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - email
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of this contact. Globally Unique.
                      type: integer
                    name:
                      title: Name
                      description: The name of this contact.
                      type: string
                    email:
                      title: Email
                      description: The email of this contact.
                      type: string
                    is_primary:
                      title: Is Primary
                      description: >-
                        Defines if this contact is the primary contact for the
                        associated counterparty.
                      type: boolean
                examples:
                  response:
                    value:
                      id: 100
                      name: Susan Ervin
                      email: dummy@email.com
                      is_primary: false
        tags:
          - V2 Counterparty APIs
      delete:
        operationId: v2_public_counter_parties_contacts_delete
        summary: Delete Counterparty Contact
        description: Delete counterparty contact
        parameters:
          - name: counterparty_id
            in: path
            description: ID of the Counterparty.
            required: true
            schema:
              type: integer
          - name: contact_id
            in: path
            description: ID of the Counterparty contact.
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: Delete Counterparty Contact
        tags:
          - V2 Counterparty APIs
      parameters:
        - name: counterparty_id
          in: path
          required: true
          schema:
            type: string
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/key_pointers/:
      get:
        operationId: v2_public_key_pointers_list
        summary: Get KeyPointers
        description: Gets all the key pointers for the Organization
        parameters:
          - name: contract_type_id
            in: query
            description: ID of the Contract type.
            required: true
            schema:
              type: integer
          - name: is_external
            in: query
            description: Set to True to get only key pointers from external sections.
            required: false
            schema:
              type: boolean
        responses:
          '200':
            description: KeyPointers
            content:
              application/json:
                schema:
                  title: KeyPointerListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyPointerDomainModel'
        tags:
          - V2 KeyPointer APIs
      parameters: []
    /v2/public/organizations/entities/:
      get:
        operationId: v2_public_organizations_entities_list
        summary: Get Organization Entities
        description: Gets all the entity associated with the Organization
        responses:
          '200':
            description: Entities
            content:
              application/json:
                schema:
                  title: OrganizationEntityListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/OrganizationEntityDomainModel'
        tags:
          - V2 Organization APIs
      post:
        operationId: v2_public_organizations_entities_create
        summary: Create Entity
        description: Create an entity associated with the Organization
        requestBody:
          $ref: >-
            #/components/requestBodies/v2.1_public_organizations_entities_createData
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  title: OrganizationEntityDomainModel
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - reference_id
                    - jurisdiction
                    - organization_type
                    - primary_address
                    - is_primary
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the Entity
                      type: integer
                    name:
                      title: Name
                      description: >-
                        The name of Entity as rendered in the contracts and shown
                        to users.
                      type: string
                    reference_id:
                      title: Reference Id
                      description: >-
                        The Reference ID of the entity which is used to identify
                        the entity in templates.
                      type: string
                    jurisdiction:
                      title: Jurisdiction
                      description: The Jurisdiction associated with the entity.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/CountryDomainModel'
                    organization_type:
                      title: Organization Type
                      description: >-
                        The type of this entity. This identifies the company type.
                        For example LLP vs LLC vs S Corp in the US
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationTypeBaseDomainModel'
                    primary_address:
                      title: Primary Address
                      description: The address details of the entity.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/PrimaryAddressDomainModel'
                    is_primary:
                      title: Is Primary
                      description: This identify the entity as the primary entity or not
                      type: boolean
                examples:
                  response:
                    value:
                      id: 1045
                      name: Acme Inc.
                      reference_id: US20
                      jurisdiction:
                        id: 234
                        name: United States
                        iso_code: US
                      organization_type:
                        id: 1
                        name: Private Company
                      primary_address:
                        id: 5073
                        line_one: 3659 Burwell Heights Road
                        city_name: Houston
                        state_name: Texas
                        zipcode: '77020'
                        country:
                          id: 234
                          name: United States
                          iso_code: US
                      is_primary: true
        tags:
          - V2 Organization APIs
      parameters: []
    /v2/public/organizations/types/:
      get:
        operationId: v2_public_organizations_types_list
        summary: Get Organization Types
        description: Gets all the organization types available for a jurisdiction
        parameters:
          - name: jurisdiction_iso_code
            in: query
            description: >-
              The ISO-3166-1 Alpha-2 code of the jurisdiction associated with this
              organization. Any value passed here is overrides `jurisdiction`.
              Valid values can be found
              [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Organization Type List
            content:
              application/json:
                schema:
                  title: OrganizationTypeListDomainModel
                  description: SD Base Model from which all other Models should inherit
                  type: array
                  items:
                    $ref: '#/components/schemas/OrganizationTypeDomainModel'
        tags:
          - V2 Organization APIs
      parameters: []
    /v2/public/supported_documents/{contract_id}/:
      post:
        operationId: v2_public_supported_documents_create
        summary: Upload supported documents for a given contract
        description: ''
        parameters:
          - name: contract_id
            in: path
            description: >-
              ID of the Contract. Should be of the form T-123 or H-123. T stands
              for Template contracts and H stands for Historical contracts.
            required: true
            schema:
              type: string
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_supported_documents_createData'
        responses:
          '201':
            description: Success
            content:
              application/json:
                schema:
                  title: SupportedDocumentResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - name
                    - created
                  type: object
                  properties:
                    id:
                      title: Id
                      description: Id of supported document
                      type: integer
                    name:
                      title: Name
                      description: Name of the document
                      type: string
                    created:
                      title: Created
                      description: Datetime when document was created
                      type: string
                      format: date-time
                examples:
                  response:
                    value:
                      id: '199'
                      name: Acme Corporation Related Document
                      created: '2022-10-10'
        tags:
          - V2 Contract APIs
      parameters:
        - name: contract_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/templates/:
      get:
        operationId: v2_public_templates_list
        summary: Get Template List
        description: >-
          V2 API for listing of published templates available in the given Client
          workspace.
        parameters:
          - name: tags
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the Template tags are a subset
              of the tags passed will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: tags_all
            in: query
            description: >-
              The tags (if any) to filter the templates by.


              Multiple tags can be specified by specifying the query param
              multiple times. Only templates where the tags passed are a subset of
              the Template tags will be returned.
            required: false
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: Template List
            content:
              application/json:
                schema:
                  title: TemplateListResponse
                  description: A list of template as returned by the public API
                  required:
                    - items
                  type: object
                  properties:
                    items:
                      title: Items
                      description: The list of templates supported for this Client.
                      type: array
                      items:
                        $ref: '#/components/schemas/TemplateResponse'
                examples:
                  response:
                    value:
                      items:
                        - id: 1
                          name: Basic Non Disclosure Agreement
        tags:
          - V2 Template APIs
      parameters: []
    /v2/public/templates/{template_id}/:
      get:
        operationId: v2_public_templates_read
        summary: Get Template Details
        description: Get details for a contract template.
        parameters:
          - name: template_id
            in: path
            description: The ID of the template.
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Template Details
            content:
              application/json:
                schema:
                  title: TemplateResponseV2
                  description: >-
                    A template along with the updated data as updated by the
                    public API.
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the template
                      type: integer
                    name:
                      title: Name
                      description: The name of the template
                      type: string
                    tags:
                      title: Tags
                      description: The tags to be updated for the requested template id.
                      type: array
                      items:
                        type: string
                examples:
                  response:
                    value:
                      id: 1
                      name: Basic Non Disclosure Agreement
                      tags:
                        - Tag1
                        - Tag2
        tags:
          - V2 Template APIs
      patch:
        operationId: v2_public_templates_partial_update
        summary: Update Template Data
        description: Update data for a contract template.
        parameters:
          - name: template_id
            in: path
            description: The ID of the template.
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_templates_partial_updateData'
        responses:
          '200':
            description: Updated Template
            content:
              application/json:
                schema:
                  title: TemplateResponseV2
                  description: >-
                    A template along with the updated data as updated by the
                    public API.
                  required:
                    - id
                    - name
                  type: object
                  properties:
                    id:
                      title: Id
                      description: The ID of the template
                      type: integer
                    name:
                      title: Name
                      description: The name of the template
                      type: string
                    tags:
                      title: Tags
                      description: The tags to be updated for the requested template id.
                      type: array
                      items:
                        type: string
                examples:
                  response:
                    value:
                      id: 1
                      name: Basic Non Disclosure Agreement
                      tags:
                        - Tag1
                        - Tag2
        tags:
          - V2 Template APIs
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/templates/{template_id}/metadata:
      get:
        operationId: v2_public_templates_metadata_list
        summary: Get Template Metadata
        description: >

          Gets the list of fields required to create a contract with a given
          template.


          The list of attributes returned define how a `contract_data` payload is
          to be

          constructed for the [V2 Create Contract](https://api.spotdraft.com)
          request.
        responses:
          '200':
            description: Template Metadata
            content:
              application/json:
                schema:
                  title: TemplateMetaDataResponseV2
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - attributes
                    - counter_party_kind
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      description: The list of attributes for this contract template.
                      type: array
                      items:
                        $ref: '#/components/schemas/CfPublicDescriptor'
                    counter_party_kind:
                      description: >-
                        The kind of Counter Party for this contract template.
                        Signfies if the Counter Party is an individual or an
                        organization. Data sent to create an instance of this
                        template changes based on the kind returned here.
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/PartyOrganizationKind'
                examples:
                  response:
                    value: {}
        tags:
          - V2 Template APIs
      parameters:
        - name: template_id
          in: path
          required: true
          schema:
            type: string
    /v2/public/user_tasks/:
      post:
        operationId: v2_public_user_tasks_create
        summary: V2 Create User Tasks List
        description: >

          This API can be used to create User Tasks List for Task Creation on
          SpotDraft.
        requestBody:
          $ref: '#/components/requestBodies/v2.1_public_user_tasks_createData'
        responses:
          '201':
            description: V2 User Tasks with Reminders List
            content:
              application/json:
                schema:
                  title: UserTaskPublicResponse
                  description: SD Base Model from which all other Models should inherit
                  required:
                    - id
                    - title
                    - created_by_org_user
                    - created_by_workspace
                    - assignees
                  type: object
                  properties:
                    id:
                      title: Id
                      description: ID of the Task
                      type: integer
                    title:
                      title: Title
                      description: Title of the Task
                      type: string
                    notes:
                      title: Notes
                      description: Notes for the Task
                      type: string
                    contract:
                      title: Contract
                      description: The Details of the Contract
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/ContractV3MinimalDomainModel'
                    created_by_org_user:
                      title: Created By Org User
                      description: The Details of the Org User who created the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationUserResponse'
                    completed_by_org_user:
                      title: Completed By Org User
                      description: The Details of the Org User who completed the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/OrganizationUserResponse'
                    completed_at:
                      title: Completed At
                      description: The date and time when the Task got completed
                      type: string
                      format: date-time
                    absolute_due_date:
                      title: Absolute Due Date
                      description: The date and time when the Task is due for completion
                      type: string
                      format: date-time
                    created:
                      title: Created
                      description: The date and time when the task got created
                      type: string
                      format: date-time
                    created_by_workspace:
                      title: Created By Workspace
                      description: The Details of the Workspace who created the Task
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/WorkspaceResponse'
                    assignees:
                      title: Assignees
                      description: The Details of Assignees for the Task
                      type: array
                      items:
                        $ref: '#/components/schemas/TaskAssigneeDomainModel'
                    status:
                      type: object
                      default: NO_DATE
                      allOf:
                        - $ref: '#/components/schemas/UserTaskStatus'
                    deleted_at:
                      title: Deleted At
                      description: The date and time when the task got deleted
                      type: string
                      format: date-time
                    due_date_key_pointer_id:
                      title: Due Date Key Pointer Id
                      description: >-
                        The ID of the key pointer that has the due date for the
                        task
                      type: integer
                    reminders:
                      title: Reminders
                      description: List of Reminders for the Task
                      type: array
                      items:
                        $ref: '#/components/schemas/ReminderDomainModel'
                      default: ''
        tags:
          - V2 Tasks and Reminders APIs
      parameters: []
  servers:
    - url: https://api.spotdraft.com/api
  components:
    requestBodies:
      v2.1_public_contracts_key_pointers_partial_updateData:
        content:
          application/json:
            schema:
              title: body
              required:
                - value
              type: object
              properties:
                value:
                  type: object
                  example:
                    type: MONTHS
                    value: 6
        required: true
      ExternalCreateContract:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalCreateContract'
        required: true
      v2.1_public_contracts_invite_createData:
        content:
          application/json:
            schema:
              title: ExternalContractInviteRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - items
              type: object
              properties:
                items:
                  title: Items
                  description: >-
                    The list of roles/org users/new emails to be invited for this
                    contract.
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalContractInviteRequestItem'
              example:
                items:
                  - role_id: 34
                    permission_name: CONTRACT.READ
                    note: Inviting Legal team with contract read access.
        required: true
      v2.1_public_user_tasks_createData:
        content:
          application/json:
            schema:
              title: UserTaskCreateRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - title
                - assignees
              type: object
              properties:
                title:
                  title: Title
                  description: Title of the task
                  type: string
                  minLength: 1
                notes:
                  title: Notes
                  description: Notes for the task
                  type: string
                  default: ''
                contract_id:
                  title: Contract Id
                  description: Contract Id for the task
                  type: integer
                due_date:
                  title: Due Date
                  description: The date and time when this task is due for completion
                  type: string
                  format: date-time
                due_date_key_pointer_id:
                  title: Due Date Key Pointer Id
                  description: The ID of the key pointer that has the due date for the task
                  type: integer
                assignees:
                  title: Assignees
                  description: List of Assignees for the task
                  type: array
                  items:
                    $ref: '#/components/schemas/TaskAssigneeCreateRequest'
                reminders:
                  title: Reminders
                  description: List of Dict in a format of DurationType
                  type: array
                  items:
                    type: object
              example:
                title: test title
                notes: test note
                contract_id: 1
                due_date: '2021-05-20T04:52:04Z'
                due_date_key_pointer_id: 1
                assignees:
                  - org_user_id: 1
                  - role_id: 1
                reminders:
                  - value: 10
                    type: DAYS
        required: true
      v2.1_public_templates_partial_updateData:
        content:
          application/json:
            schema:
              title: TemplateUpdateRequest
              description: SD Base Model from which all other Models should inherit
              type: object
              properties:
                tags:
                  title: Tags
                  description: The tags to be updated for the requested template id.
                  type: array
                  items:
                    type: string
              example:
                tags:
                  - Tag1
                  - Tag2
        required: true
      v2.1_public_auth_roles_members_deleteData:
        content:
          application/json:
            schema:
              title: body
              type: object
              properties:
                user_ids_to_remove:
                  name: user_ids_to_remove
                  in: body
                  description: The user ids that are to be removed from the role.
                  type: array
                  items:
                    type: integer
              required:
                - user_ids_to_remove
        required: true
      v2.1_public_organizations_entities_createData:
        content:
          application/json:
            schema:
              title: CreateOrganizationEntityRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - name
                - reference_id
                - jurisdiction_iso_code
                - organization_type_id
                - is_primary
                - primary_address
              type: object
              properties:
                name:
                  title: Name
                  description: The name of the entity.
                  type: string
                  minLength: 1
                reference_id:
                  title: Reference Id
                  description: The reference ID of the entity.
                  type: string
                jurisdiction_iso_code:
                  title: Jurisdiction Iso Code
                  description: >-
                    The ISO-3166-1 Alpha-2 code of the country which is the
                    jurisdiction for this organization entity. Any value passed
                    here is overrides `jurisdiction`. Valid values can be found
                    [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
                  type: string
                organization_type_id:
                  title: Organization Type Id
                  description: >-
                    The ID of the type of this entity. This identifies the company
                    type. For example LLP vs LLC vs S Corp in the US. Check
                    [here](https://api.spotdraft.com) to get the ID of
                    organization type.
                  type: integer
                is_primary:
                  title: Is Primary
                  description: >-
                    To set the entity as the primary entity. If set to `TRUE`,
                    this will replace the existing entity as the primary entity.
                  type: boolean
                primary_address:
                  title: Primary Address
                  description: The primary address for the entity.
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/PrimaryAddressRequest'
              example:
                name: Acme Inc.
                reference_id: US1
                jurisdiction_iso_code: 105
                organization_type_id: 1
                primary_address:
                  city_name: Houston
                  state_name: Texas
                  zipcode: '77020'
                  line_one: 3659 Burwell Heights Road
                  country_iso_code: US
                is_primary: false
        required: true
      v2.1_public_contracts_upload_review_contracts_createData:
        content:
          application/json:
            schema:
              title: ContractUploadForReviewRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - contract_name
                - contract_type_id
                - file_name
                - file_base64
              type: object
              properties:
                contract_name:
                  title: Contract Name
                  description: The name of the uploaded contract that is visible to users.
                  type: string
                contract_type_id:
                  title: Contract Type Id
                  description: >-
                    The ID of the contract type for this uploaded contract. Use
                    the [Get Contract Types](https://api.spotdraft.com) API to get
                    this ID.
                  type: integer
                file_name:
                  title: File Name
                  description: >-
                    The name of the file being uploaded. This is used when the
                    file is downloaded. Expected to be a fully qualified file name
                    with an extension.
                  type: string
                file_base64:
                  title: File Base64
                  description: The contents of the file as a base64 encoded string.
                  type: string
                creator_organization_entity_id:
                  title: Creator Organization Entity Id
                  description: >-
                    The ID of the organization entity for the creator party of the
                    uploaded contract. Use the [Get Organization
                    Entities](https://api.spotdraft.com) API to get this ID.
                  type: integer
                external_metadata:
                  title: External Metadata
                  description: The external metadata for the uploaded contract.
                  type: object
                reviewer:
                  title: Reviewer
                  description: Used to set reviewer for contract being uploaded
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/ExternalContractReviewerRequest'
                counterparty_workspace_id:
                  title: Counterparty Workspace Id
                  description: workspace_id of counterparty organization
                  type: integer
                counterparty_organization_name:
                  title: Counterparty Organization Name
                  description: The name of the counter party's organization.
                  type: string
                counterparty_is_individual:
                  title: Counterparty Is Individual
                  description: >-
                    Defines if this Counterparty is an individual or an
                    organization like a company.When not provided organization
                    like company is created.
                  type: boolean
                counterparty_poc_details:
                  title: Counterparty Poc Details
                  description: >-
                    Point of Contact details for this counterparty. Should be the
                    details of the individual for
                    `counterparty_is_individual=True` and the details of the
                    contact at the counterparty organization in case of
                    `counterparty_is_individual=False`.
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/POCDetails'
                intake_form_data:
                  title: Intake Form Data
                  description: >-
                    The intake form data for the uploaded contract. For
                    information about construction of `intake_form_data` payload,
                    refer to this
                    [Section](#operation/v2.1_public_contracts_upload_review_contracts_create).
                    Get the Intake form questionnaire details using [Get Intake
                    Form
                    Questionnaire](#operation/v2.1_public_contract_types_intake_form_questionnaire_list)
                    API.
                  type: object
                business_user_email:
                  title: Business User Email
                  description: >-
                    The email address of the business user for the Upload for Sign
                    contract.
                  type: string
                  format: email
                creator_signatories:
                  title: Creator Signatories
                  description: Details of the signatories on the creator party side.
                  type: array
                  items:
                    $ref: '#/components/schemas/CreatorPartySignatoryRequest'
              example:
                contract_name: Acme Corporation NDA
                contract_type_id: 1
                file_name: Acme_nda.pdf
                file_base64: base64 encoded string of the file content
                creator_organization_entity_id: 1
                counterparty_organization_name: Acme Corporation
                external_metadata: {}
                counterparty_is_individual: false
                reviewer:
                  org_user_email: username@some_email.com
                counterparty_poc_details:
                  first_name: string
                  last_name: ''
                  email: string
                intake_form_data: {}
        required: true
      v2.1_public_counter_parties_contacts_partial_updateData:
        content:
          application/json:
            schema:
              title: ExternalCounterpartyContactUpdateRequest
              description: SD Base Model from which all other Models should inherit
              type: object
              properties:
                name:
                  title: Name
                  description: The updated name of the Contact
                  type: string
                  minLength: 1
                email:
                  title: Email
                  description: The updated email of the Contact
                  type: string
                  format: email
                is_primary:
                  title: Is Primary
                  description: Whether the contact needs to be set as the primary contact.
                  type: boolean
              example:
                name: Susan Ervin
                email: dummy@email.com
                is_primary: false
        required: true
      v2.1_public_contracts_comments_createData:
        content:
          application/json:
            schema:
              title: ExternalCreateContractCommentRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - comment
              type: object
              properties:
                comment:
                  title: Comment
                  description: >-
                    The content of the comment. Users can be mentioned using the
                    format !!@{user_id}!! where the user ID can be obtained
                    through the [Get User List](https://api.spotdraft.com) API.
                  type: string
              example:
                comment: Hey !!@12310!! please review this contract.
        required: true
      v2.1_public_contracts_contract_data_partial_updateData:
        content:
          application/json:
            schema:
              title: body
              type: object
              properties:
                data:
                  type: object
        required: true
      v2.1_public_supported_documents_createData:
        content:
          application/json:
            schema:
              title: PublicSupportedDocumentCreateAPIRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - name
                - file_name
                - file_base64
              type: object
              properties:
                name:
                  title: Name
                  description: Name of the document
                  type: string
                file_name:
                  title: File Name
                  description: Name of the file
                  type: string
                file_base64:
                  title: File Base64
                  description: The contents of the file as base64 encoded string
                  type: string
              example:
                name: Acme Corporation Related Document
                file_name: Acme Related Document.pdf
                file_base64: base64 encoded string of the file content
        required: true
      v2.1_public_contracts_contract_version_createData:
        content:
          application/json:
            schema:
              title: PublicUploadContractVersionRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - document_name
                - document_base_64
              type: object
              properties:
                document_name:
                  title: Document Name
                  description: >-
                    Name of the document along with file type extension that is
                    being uploaded as a new contract version.
                  type: string
                document_base_64:
                  title: Document Base 64
                  description: The document content in bytes converted to a base64 string.
                  type: string
                collect_approvals:
                  title: Collect Approvals
                  description: >-
                    Boolean flag to collect/skip approvals if there are any
                    pending/running approvals at the moment.
                  type: boolean
                  default: true
                is_executed_version:
                  title: Is Executed Version
                  description: >-
                    Boolean flag to ​​mark the uploaded version as the executed
                    version
                  type: boolean
                  default: false
              example:
                document_name: OneNDA.docx
                document_base_64: OneNDA document content in bytes converted to base64 string.
                collect_approvals: true
        required: true
      SendToCounterparty:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToCounterparty'
        required: true
      v2.1_public_auth_roles_members_createData:
        content:
          application/json:
            schema:
              title: body
              type: object
              properties:
                user_ids_to_add:
                  name: user_ids_to_add
                  in: body
                  description: The user ids that are to be added to the role.
                  type: array
                  items:
                    type: integer
              required:
                - user_ids_to_add
        required: true
      v2.1_public_contracts_approvals_createData:
        content:
          application/json:
            schema:
              title: ExternalCreateContractApprovalRequestList
              description: SD Base Model from which all other Models should inherit
              required:
                - approvals
              type: object
              properties:
                approvals:
                  title: Approvals
                  description: >-
                    List of information that needs to be provided in order to
                    create multiple Approvals.
                  type: array
                  items:
                    $ref: '#/components/schemas/ExternalCreateContractApprovalRequest'
              example:
                approvals:
                  - name: Legal Approval
                    approver_user_id: 10324
                    notes: Please take a look need your approval.
                    order: 1
                  - name: Finance team Approval
                    approver_role_id: 60414
                    notes: Hi team need your approval on this contract.
                    order: 2
        required: true
      v2.1_public_contracts_preview_createData:
        content:
          application/json:
            schema:
              title: body
              required:
                - contract_template_id
                - contract_data
                - contract_template_id
              type: object
              properties:
                contract_template_id:
                  name: contract_template_id
                  in: body
                  type: integer
                contract_data:
                  type: object
                organization_entity_id:
                  name: organization_entity_id
                  in: body
                  type: integer
                cp_role_label:
                  name: cp_role_label
                  in: body
                  description: >-
                    The label or name of the CounterParty role. The pdf generated
                    will have the fields of this counterparty role filled. If not
                    set, the first counterparty role will be used.
                  type: string
        required: true
      v2.1_public_contracts_upload_sign_contracts_createData:
        content:
          application/json:
            schema:
              title: ContractUploadForSignatureRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - contract_name
                - contract_type_id
                - file_name
                - file_base64
                - counterparty_organization_name
              type: object
              properties:
                contract_name:
                  title: Contract Name
                  description: The name of the uploaded contract that is visible to users.
                  type: string
                contract_type_id:
                  title: Contract Type Id
                  description: >-
                    The ID of the contract type for this uploaded contract. Use
                    the [Get Contract Types](https://api.spotdraft.com) API to get
                    this ID.
                  type: integer
                file_name:
                  title: File Name
                  description: >-
                    The name of the file being uploaded. This is used when the
                    file is downloaded. Expected to be a fully qualified file name
                    with an extension.
                  type: string
                  minLength: 1
                file_base64:
                  title: File Base64
                  description: The contents of the file as a base64 encoded string.
                  type: string
                  minLength: 1
                creator_organization_entity_id:
                  title: Creator Organization Entity Id
                  description: >-
                    The ID of the organization entity for the creator party of the
                    uploaded contract. Use the [Get Organization
                    Entities](https://api.spotdraft.com) API to get this ID.
                  type: integer
                counterparty_organization_name:
                  title: Counterparty Organization Name
                  description: The name of the counter party's organization.
                  type: string
                external_metadata:
                  title: External Metadata
                  description: The external metadata for the uploaded contract.
                  type: object
                counterparty_is_individual:
                  title: Counterparty Is Individual
                  description: >-
                    Defines if this Counterparty is an individual or an
                    organization like a company.When not provided organization
                    like company is created.
                  type: boolean
                counterparty_poc_details:
                  title: Counterparty Poc Details
                  description: >-
                    Point of Contact details for this counterparty. Should be the
                    details of the individual for
                    `counterparty_is_individual=True` and the details of the
                    contact at the counterparty organization in case of
                    `counterparty_is_individual=False`.
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/POCDetails'
                intake_form_data:
                  title: Intake Form Data
                  description: >-
                    The intake form data for the uploaded contract. For
                    information about construction of `intake_form_data` payload,
                    refer to this
                    [Section](#operation/v2.1_public_contracts_upload_sign_contracts_create).
                    Get the Intake form questionnaire details using [Get Intake
                    Form
                    Questionnaire](#operation/v2.1_public_contract_types_intake_form_questionnaire_list)
                    API.
                  type: object
                business_user_email:
                  title: Business User Email
                  description: >-
                    The email address of the business user for the Upload for Sign
                    contract.
                  type: string
                  format: email
                creator_signatories:
                  title: Creator Signatories
                  description: Details of the signatories on the creator party side.
                  type: array
                  items:
                    $ref: '#/components/schemas/CreatorPartySignatoryRequest'
              example:
                contract_name: Acme Corporation NDA
                contract_type_id: 1
                file_name: Acme_nda.pdf
                file_base64: base64 encoded string of the file content
                creator_organization_entity_id: 1
                counterparty_organization_name: Acme Corporation
                external_metadata: {}
                counterparty_is_individual: false
                counterparty_poc_details:
                  first_name: string
                  last_name: ''
                  email: string
                intake_form_data: {}
                business_user_email: bu@acme.org
                creator_signatories:
                  - email: signatory1@acme.org
                    title: ''
        required: true
      v2.1_public_contracts_webhooks_re_trigger_latest_createData:
        content:
          application/json:
            schema:
              title: RetriggerLatestWebhooksRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - contract_ids
              type: object
              properties:
                contract_ids:
                  title: Contract Ids
                  description: >-
                    The list of contract ids whose latest webhook calls need to be
                    re-triggered
                  type: array
                  items:
                    type: integer
              example:
                contract_ids:
                  - 1
                  - 2
                  - 3
        required: true
      v2.1_public_contracts_notes_updateData:
        content:
          application/json:
            schema:
              title: body
              required:
                - text
              type: object
              properties:
                note_tag:
                  required:
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                text:
                  type: string
        required: true
      v2.1_public_counter_parties_createData:
        content:
          application/json:
            schema:
              title: CreateCounterPartyAPIRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - is_individual
              type: object
              properties:
                is_individual:
                  title: Is Individual
                  description: >-
                    Defines if this Counterparty is an individual or an
                    organization like a company.
                  type: boolean
                organization_type:
                  title: Organization Type
                  description: >-
                    The type of the counterparty if its an organization. Expects
                    values like LLC, LLP, etc. Please ask help@spotdraft.com for
                    valid values.
                  type: string
                organization_name:
                  title: Organization Name
                  description: >-
                    The name of the counterparty if its an organization. Expects
                    the name of the company/entity that is the counterparty.
                  type: string
                contact_name:
                  title: Contact Name
                  description: >-
                    The name of the counterparty in case of an individual, and the
                    name of the Point of Contact in case of organizations.
                  type: string
                contact_email:
                  title: Contact Email
                  description: >-
                    The email of the counterparty in case of an individual, and
                    the email of the Point of Contact in case of organizations.
                  type: string
                primary_address:
                  title: Primary Address
                  description: >-
                    The address details of the counterparty. Used to render the
                    address in the contract templates.
                  type: object
                  allOf:
                    - $ref: '#/components/schemas/CreateCounterPartyAddressRequest'
                custom_fields:
                  title: Custom Fields
                  description: Custom field values for the counterparty
                  type: object
              example:
                is_individual: false
                organization_type: Private Limited
                organization_name: Acme Corporation
                contact_name: Mike Reed
                contact_email: Mike_reed@yahoo.com
                primary_address:
                  city_name: Cincinnati
                  state_name: Ohio
                  country_name: USA
                  zipcode: '513'
                  line_one: 'st: 3, block: 2, Jenkins Road'
                custom_fields:
                  vendor_id: '1234'
                  gst_number: 22AAAAA0000A1Z5
        required: true
      v2.1_public_counter_parties_partial_updateData:
        content:
          application/json:
            schema:
              title: ExternalCounterpartyUpdateRequest
              description: SD Base Model from which all other Models should inherit
              type: object
              properties:
                name:
                  title: Name
                  description: The updated name of the Counterparty
                  type: string
                  minLength: 1
                brand_name:
                  title: Brand Name
                  description: The updated brand name of the Counterparty
                  type: string
                custom_fields:
                  title: Custom Fields
                  description: The updated custom fields of the Counterparty
                  type: object
              example:
                name: Susan Ervin
                brand_name: Susan's Org
                custom_fields:
                  vendor_id: '1234'
                  gst_number: 22AAAAA0000A1Z5
        required: true
      v2.1_public_counter_parties_addresses_createData:
        content:
          application/json:
            schema:
              title: CreateCounterPartyAddressRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - line_one
                - city_name
                - country_name
              type: object
              properties:
                line_one:
                  title: Line One
                  description: >-
                    The first line of the address. Usually the apartment, floor,
                    and street information.
                  type: string
                city_name:
                  title: City Name
                  description: The city name for this address.
                  type: string
                state_name:
                  title: State Name
                  description: The state name for this address.
                  type: string
                  default: ''
                zipcode:
                  title: Zipcode
                  description: The zip/pin/postal code for this address.
                  type: string
                  default: ''
                email:
                  title: Email
                  description: >-
                    The email address associated with this counterparty address
                    (if any).
                  type: string
                phone:
                  title: Phone
                  description: >-
                    The phone number associated with this counterparty address (if
                    any).
                  type: string
                country_name:
                  title: Country Name
                  description: >-
                    The name of the country associated with this counterparty
                    address. Any value passed here is ignored if
                    `country_iso_code` is passed. Valid values are defined
                    internally. Please ask help@spotdraft.com for more
                    information.
                  type: string
                country_iso_code:
                  title: Country Iso Code
                  description: >-
                    The ISO-3166-1 Alpha-2 code of the country associated with
                    this counterparty address. Any value passed here is overrides
                    `country`. Valid values can be found
                    [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
                  type: string
              example:
                line_one: 'st: 3, block: 2, Jenkins Road'
                city_name: Cincinnati
                state_name: Ohio
                zipcode: '513'
                country_name: USA
                email: test@yopmail.com
                phone: '1234567890'
                country_iso_code: US
        required: true
      v2.1_public_counter_parties_addresses_partial_updateData:
        content:
          application/json:
            schema:
              title: ExternalCounterpartyAddressUpdateRequest
              description: SD Base Model from which all other Models should inherit
              type: object
              properties:
                city_name:
                  title: City Name
                  description: The updated city name of the address
                  type: string
                  minLength: 1
                state_name:
                  title: State Name
                  description: The updated state name of the address
                  type: string
                  minLength: 1
                country_iso_code:
                  title: Country Iso Code
                  description: >-
                    The ISO-3166-1 Alpha-2 code of the country associated with
                    this counterparty address. Any value passed here is overrides
                    `country`. Valid values can be found
                    [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
                  type: string
                  minLength: 1
                zipcode:
                  title: Zipcode
                  description: The updated zipcode of the address
                  type: string
                  minLength: 1
                line_one:
                  title: Line One
                  description: >-
                    The updated line one of the address, It is the first line of
                    address. Usually the apartment, floor, and street information.
                  type: string
                  minLength: 1
                is_primary:
                  title: Is Primary
                  description: Whether the address needs to be set as the primary address.
                  type: boolean
              example:
                city_name: Cincinnati
                state_name: Ohio
                country_iso_code: IN
                zipcode: '513'
                line_one: 'st: 3, block: 2, Jenkins Road'
                is_primary: false
        required: true
      v2.1_public_counter_parties_contacts_createData:
        content:
          application/json:
            schema:
              title: ExternalCounterpartyContactCreateRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - name
                - email
                - is_primary
              type: object
              properties:
                name:
                  title: Name
                  description: Name of the contact
                  type: string
                  minLength: 1
                email:
                  title: Email
                  description: Email of the contact
                  type: string
                  format: email
                is_primary:
                  title: Is Primary
                  description: Whether the contact needs to be set as the primary contact.
                  type: boolean
              example:
                name: Susan Ervin
                email: dummy@email.com
                is_primary: false
        required: true
      v2.1_public_counter_parties_contacts_bulk_partial_updateData:
        content:
          application/json:
            schema:
              title: ExternalCounterpartyContactBulkUpdateListRequest
              description: SD Base Model from which all other Models should inherit
              required:
                - contacts
              type: object
              properties:
                contacts:
                  title: Contacts
                  description: List of contacts to be updated.
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/ExternalCounterpartyContactBulkUpdateRequest
              example:
                contacts:
                  - id: 100
                    name: Susan Ervin
                    email: dummy@email.com
                    is_primary: false
        required: true
    securitySchemes:
      Bearer:
        type: apiKey
        name: Authorization
        in: header
    schemas:
      ExternalUserActiveRole:
        required:
          - name
        type: object
        properties:
          id:
            title: ID
            type: integer
            readOnly: true
          name:
            title: Name
            type: string
            maxLength: 150
            minLength: 1
      ExternalUser:
        description: The actual results.
        required:
          - first_name
          - last_name
          - username
          - created
          - modified
        type: object
        properties:
          id:
            title: ID
            type: integer
            readOnly: true
          first_name:
            title: First name
            description: The first name of the user.
            type: string
            minLength: 1
          last_name:
            title: Last name
            description: The last name of the user.
            type: string
            minLength: 1
          roles:
            description: The list of roles for the user.
            type: array
            items:
              type: string
              minLength: 1
            readOnly: true
          username:
            title: Username
            description: The email address of the user.
            type: string
            minLength: 1
          created:
            title: Created
            description: The ISO timestamp when the user was created.
            type: string
            format: date-time
          modified:
            title: Modified
            description: The ISO timestamp when the user was last modified.
            type: string
            format: date-time
      ExternalUserPaginated:
        required:
          - total_results
          - page
          - limit
          - results
        type: object
        properties:
          total_results:
            title: Total results
            description: Total number of items in the result set.
            type: integer
          page:
            title: Page
            description: The current page number. Page numbers start at 1.
            type: integer
          limit:
            title: Limit
            description: The number of items returned per page.
            type: integer
          results:
            description: The actual results.
            type: array
            items:
              $ref: '#/components/schemas/ExternalUser'
      ExternalUserCreate:
        required:
          - username
          - first_name
          - last_name
          - roles
        type: object
        properties:
          username:
            title: Username
            description: The email address of the user.
            type: string
            format: email
            minLength: 1
          first_name:
            title: First name
            description: The first name of the user.
            type: string
            minLength: 1
          last_name:
            title: Last name
            description: The last name of the user.
            type: string
            minLength: 1
          password:
            title: Password
            description: Password for the user.
            type: string
            minLength: 1
          roles:
            description: Role IDs applicable to this user. IDs are returned by the Roles API.
            type: array
            items:
              description: >-
                Role IDs applicable to this user. IDs are returned by the Roles
                API.
              type: integer
            uniqueItems: true
        example:
          first_name: Sonia
          last_name: Sotomayor
          roles:
            - 1
            - 2
          username: sonia_sotomayor@notreally.supremecourt.gov
          password: myC0urt1s5upreme
      ExternalUserEdit:
        required:
          - roles
        type: object
        properties:
          roles:
            description: The Role IDs for this user. Role IDs are returned by the Roles API.
            type: array
            items:
              description: >-
                The Role IDs for this user. Role IDs are returned by the Roles
                API.
              type: integer
            uniqueItems: true
        example:
          roles:
            - 1
            - 2
            - 3
      ExternalContractV3:
        description: The list of Contracts
        required:
          - created
          - contract_name
        type: object
        properties:
          id:
            title: ID
            type: integer
            readOnly: true
          created:
            title: Created
            description: The timestamp at which this contract was first created.
            type: string
            format: date-time
          contract_name:
            title: Contract name
            description: >-
              The name of the contract. Might be defaulted from the template or
              edited by the user.
            type: string
            minLength: 1
          contract_link:
            title: Contract link
            description: >-
              The link to the SpotDraft app where this contract can be viewed. The
              user will need to log in (and have view access) to be able to view
              the contract.
            type: string
            readOnly: true
          contract_status:
            title: Contract status
            description: The status of this contract.
            type: string
            enum:
              - DRAFT
              - REDLINING
              - SIGN
              - EXECUTED
              - ON_HOLD
              - VOIDED
            readOnly: true
          created_by:
            title: Created by
            description: The email address of the user who created this contract.
            type: string
            readOnly: true
          counter_party_name:
            title: Counter party name
            description: The name of the Counter Party for this contract.
            type: string
            readOnly: true
          contract_type_name:
            title: Contract type name
            description: The type of Contract. The types are as defined by the Client.
            type: string
            readOnly: true
          external_metadata:
            title: External metadata
            description: The external metadata associated with this contract.
            type: object
            additionalProperties:
              type: string
              nullable: true
            readOnly: true
      ExternalContractV3List:
        required:
          - total_results
          - page
          - limit
          - results
        type: object
        properties:
          total_results:
            title: Total results
            description: Total number of items in the result set.
            type: integer
          page:
            title: Page
            description: The current page number. Page numbers start at 1.
            type: integer
          limit:
            title: Limit
            description: The number of items returned per page.
            type: integer
          results:
            description: The list of Contracts
            type: array
            items:
              $ref: '#/components/schemas/ExternalContractV3'
      ExternalPOCDetails:
        required:
          - first_name
          - email
        type: object
        properties:
          first_name:
            title: First name
            type: string
            minLength: 1
          last_name:
            title: Last name
            type: string
            default: ''
          email:
            title: Email
            type: string
            minLength: 1
      OrganizationAddress:
        required:
          - city
          - country
          - line_one
        type: object
        properties:
          city:
            title: City
            type: string
            minLength: 1
          state:
            title: State
            type: string
            default: ''
            minLength: 1
          country:
            title: Country
            type: string
            minLength: 1
          zipcode:
            title: Zipcode
            type: string
            default: ''
            minLength: 1
          line_one:
            title: Line one
            type: string
            minLength: 1
          line_two:
            title: Line two
            type: string
            minLength: 1
          email:
            title: Email
            type: string
            minLength: 1
          phone:
            title: Phone
            type: string
            minLength: 1
          gst_number:
            title: Gst number
            type: string
            minLength: 1
          tax_id:
            title: Tax id
            type: string
            minLength: 1
          country_iso_code:
            title: Country iso code
            type: string
            minLength: 1
      OrganizationDetails:
        type: object
        properties:
          jurisdiction:
            title: Jurisdiction
            type: string
            minLength: 1
          address:
            $ref: '#/components/schemas/OrganizationAddress'
      ExternalCounterPartyDetails:
        required:
          - is_individual
          - poc_details
        type: object
        properties:
          is_individual:
            title: Is individual
            type: boolean
          organization_type:
            title: Organization type
            type: string
            minLength: 1
          organization_name:
            title: Organization name
            type: string
            minLength: 1
          poc_details:
            $ref: '#/components/schemas/ExternalPOCDetails'
          organization_details:
            $ref: '#/components/schemas/OrganizationDetails'
          party_role_identifier:
            title: Party role identifier
            type: string
            minLength: 1
      WorkflowConfig:
        type: object
        properties:
          auto_send_to_counterparty:
            title: Auto send to counterparty
            type: boolean
            default: false
          api_only_contract_edits:
            title: Api only contract edits
            type: boolean
            default: false
          skip_cp_info_collection:
            title: Skip cp info collection
            type: boolean
            default: false
          skip_creator_info_collection:
            title: Skip creator info collection
            type: boolean
            default: false
      EmailBase64Attachment:
        required:
          - file_name
          - mime_type
          - content_base64
        type: object
        properties:
          file_name:
            title: File name
            type: string
            minLength: 1
          mime_type:
            title: Mime type
            type: string
            minLength: 1
          content_base64:
            title: Content base64
            type: string
            minLength: 1
      SendToCounterparty:
        required:
          - attachment_formats
        type: object
        properties:
          to_emails:
            type: array
            items:
              type: string
              minLength: 1
          cc_emails:
            type: array
            items:
              type: string
              minLength: 1
          bcc_emails:
            type: array
            items:
              type: string
              minLength: 1
          attachment_formats:
            type: array
            items:
              type: string
              enum:
                - DOCX
                - PDF
                - TEMPLATE
          extra_attachments:
            type: array
            items:
              $ref: '#/components/schemas/EmailBase64Attachment'
          custom_message:
            title: Custom message
            type: string
            minLength: 1
          subject:
            title: Subject
            type: string
            minLength: 1
      ExternalCreateContractSignatory:
        required:
          - name
          - email
          - is_counterparty_signatory
        type: object
        properties:
          name:
            title: Name
            type: string
            minLength: 1
          email:
            title: Email
            type: string
            minLength: 1
          title:
            title: Title
            type: string
            minLength: 1
          is_counterparty_signatory:
            title: Is counterparty signatory
            type: boolean
          counterparty_name:
            title: Counterparty name
            type: string
            minLength: 1
          sign_order:
            title: Sign order
            type: integer
      ExternalCreateContract:
        required:
          - contract_template_id
          - contract_data
          - counter_party_details
        type: object
        properties:
          contract_template_id:
            title: Contract template id
            type: integer
          contract_data:
            title: Contract data
            type: object
          counter_party_details:
            type: array
            items:
              $ref: '#/components/schemas/ExternalCounterPartyDetails'
          external_metadata:
            title: External metadata
            type: object
          entity_reference_id:
            title: Entity reference id
            type: string
            minLength: 1
          workflow_config:
            $ref: '#/components/schemas/WorkflowConfig'
          send_to_counterparty_config:
            $ref: '#/components/schemas/SendToCounterparty'
          contract_name:
            title: Contract name
            type: string
            minLength: 1
          signatories:
            type: array
            items:
              $ref: '#/components/schemas/ExternalCreateContractSignatory'
          is_embedded_contract:
            title: Is embedded contract
            type: boolean
            default: false
      DownloadUrl:
        required:
          - url
          - file_name
        type: object
        properties:
          url:
            title: Url
            description: The URL from which this contract can be downloaded.
            type: string
            minLength: 1
          file_name:
            title: File name
            description: The file name of the contract.
            type: string
            minLength: 1
      ExternalContractStatus:
        required:
          - contract_status
        type: object
        properties:
          contract_status:
            title: Contract status
            description: The status of this contract.
            type: string
            enum:
              - DRAFT
              - REDLINING
              - SIGN
              - EXECUTED
              - ON_HOLD
              - VOIDED
      TemplateResponse:
        title: TemplateResponse
        description: A template as returned by the public API
        required:
          - id
          - name
        type: object
        properties:
          id:
            title: Id
            description: The ID of the template
            type: integer
          name:
            title: Name
            description: The name of the template
            type: string
        examples:
          - id: 1
            name: Basic Non Disclosure Agreement
      QuestionVariableType:
        title: QuestionVariableType
        description: An enumeration.
        type: string
        enum:
          - check-box
          - string
          - date
          - number
          - text-box
          - currency
          - phone-number
          - address
          - duration
          - multi-dropdown
          - dropdown
          - date-range
          - table
          - multi-text-input
          - rich-text
          - repeating
          - multi-file
          - image
          - related-contract
      CommonFormTypeOption:
        title: CommonFormTypeOption
        description: SD Base Model from which all other Models should inherit
        required:
          - label
        type: object
        properties:
          label:
            title: Label
            description: The label that is to be shown to the user.
            type: string
          value:
            title: Value
            description: The value that must be sent as part of contract data.
      TemplateMetaItem:
        title: TemplateMetaItem
        description: SD Base Model from which all other Models should inherit
        required:
          - variable
          - mandatory
          - type
          - options
        type: object
        properties:
          variable:
            title: Variable
            description: >-
              The name of the variable as it would be sent in the contract create
              API.
            type: string
          mandatory:
            title: Mandatory
            description: If this is required for a template to go from Draft to Redlining.
            type: boolean
          type:
            description: The kind of field.
            allOf:
              - $ref: '#/components/schemas/QuestionVariableType'
          options:
            title: Options
            description: >-
              The list of options for this field. Only set for dropdown and enum
              types.
            type: array
            items:
              $ref: '#/components/schemas/CommonFormTypeOption'
        examples:
          - variable: start_date
            mandatory: true
            type: date
          - variable: kind_of_nda
            mandatory: true
            type: dropdown
            options:
              - label: Mutual
                value: mutual
              - label: Exclusive
                value: exclusive
      BaseActivityUser:
        title: BaseActivityUser
        description: SD Base Model from which all other Models should inherit
        required:
          - name
        type: object
        properties:
          name:
            title: Name
            description: >-
              The name of the user. Can be set to `SYSTEM` for system initiated
              actions.
            type: string
          email:
            title: Email
            description: The email address of the user. Can be unset if name is `SYSTEM`.
            type: string
      BaseActivityData:
        title: BaseActivityData
        description: SD Base Model from which all other Models should inherit
        required:
          - performed_by
          - timestamp
        type: object
        properties:
          performed_by:
            title: Performed By
            description: The User details
            allOf:
              - $ref: '#/components/schemas/BaseActivityUser'
          timestamp:
            title: Timestamp
            description: The timestamp at which this action was taken
            type: string
            format: date-time
      ContractWebhookActivityType:
        title: ContractWebhookActivityType
        description: An enumeration.
        type: string
        enum:
          - CONTRACT_VERSION_UPLOADED
          - CONTRACT_APPROVAL_COMPLETED
          - CONTRACT_APPROVAL_REQUESTED
          - CONTRACT_CREATED
          - CONTRACT_DATA_UPDATED
          - CONTRACT_DELETED
          - CONTRACT_EXECUTED
          - CONTRACT_MARK_FOR_EXECUTION
          - CONTRACT_SENT_TO_COUNTERPARTY
          - CONTRACT_SIGNATURE_DECLINED
          - CONTRACT_SIGNATURE_REQUESTED
          - CONTRACT_SIGNED
          - CONTRACT_UNMARK_FOR_EXECUTION
          - POSTMARK_EMAIL_EVENT
          - CONTRACT_KEY_POINTER_UPDATION
          - CONTRACT_KEY_POINTER_CREATION
          - SIGNING_EMAIL_DELIVERED
          - SIGNING_EMAIL_OPENED
          - SIGNING_EMAIL_NOT_DELIVERED
          - SIGNING_EMAIL_LINK_CLICKED
          - REDLINING_EMAIL_DELIVERED
          - REDLINING_EMAIL_OPENED
          - REDLINING_EMAIL_NOT_DELIVERED
          - REDLINING_EMAIL_LINK_CLICKED
          - CONTRACT_SIGNATURE_REQUESTED_NOTIFICATION_SENT
          - COUNTER_PARTY_CREATED
          - COUNTER_PARTY_UPDATED
          - COUNTER_PARTY_CONTACT_CREATED
          - COUNTER_PARTY_CONTACT_UPDATED
          - COUNTER_PARTY_ADDRESS_CREATED
          - COUNTER_PARTY_ADDRESS_UPDATED
          - CONTRACT_ACTIVITY_LOG_COMMENT_CREATED
          - CONTRACT_VOIDED
      ContractKindActivityData:
        title: ContractKindActivityData
        description: An enumeration.
        type: string
        enum:
          - TEMPLATE_CONTRACT
          - EDITED_TEMPLATE_CONTRACT
          - THIRD_PARTY_CONTRACT
          - SIGN_CONTRACT
          - EXECUTED_CONTRACT
          - EXPRESS_TEMPLATE_CONTRACT
          - CLICKWRAP_CONTRACT
      ContractActivityUser:
        title: ContractActivityUser
        description: SD Base Model from which all other Models should inherit
        required:
          - name
        type: object
        properties:
          name:
            title: Name
            description: >-
              The name of the user. Can be set to `SYSTEM` for system initiated
              actions.
            type: string
          email:
            title: Email
            description: The email address of the user. Can be unset if name is `SYSTEM`.
            type: string
      ContractActivityCounterparty:
        title: ContractActivityCounterparty
        description: SD Base Model from which all other Models should inherit
        required:
          - type
        type: object
        properties:
          type:
            title: Type
            description: >-
              The type of counterparty. Valid options are Organization or
              Individual
            type: string
          organization_name:
            title: Organization Name
            description: The name of the counterparty.
            type: string
          poc_name:
            title: Poc Name
            description: The name of the point of contact.
            type: string
          poc_email:
            title: Poc Email
            description: The email of the point of contact.
            type: string
      ContractEntityInformationViewModel:
        title: ContractEntityInformationViewModel
        description: SD Base Model from which all other Models should inherit
        required:
          - reference_id
          - name
          - jurisdiction
          - type
        type: object
        properties:
          reference_id:
            title: Reference Id
            description: The reference ID of the entity
            type: string
          name:
            title: Name
            description: The name of the entity
            type: string
          jurisdiction:
            title: Jurisdiction
            description: The name of the country which is the jurisdiction for this entity
            type: string
          type:
            title: Type
            description: The type of this entity
            type: string
      ExternalUserActiveRolesData:
        title: ExternalUserActiveRolesData
        description: |-
          Pydantic model to take in the list of
          active roles for a workspace
        required:
          - id
          - name
        type: object
        properties:
          id:
            title: Id
            description: Id of the role
            type: integer
          name:
            title: Name
            description: Name of the role
            type: string
          description:
            title: Description
            description: Description of the role.
            type: string
      PublicMinimalUserResponse:
        title: PublicMinimalUserResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - email
          - name
        type: object
        properties:
          id:
            title: Id
            description: Id of the user
            type: integer
          email:
            title: Email
            description: Email Id of the user
            type: string
          name:
            title: Name
            description: Name of the user
            type: string
          designation:
            title: Designation
            description: Designation of the user within the organization
            type: string
      ClickwrapConsentStatus:
        title: ClickwrapConsentStatus
        type: string
        enum:
          - NOT_ACCEPTED
          - ACCEPTED_OLDER_VERSION
          - ACCEPTED_LATEST_VERSION
      EntityAddressResponse:
        title: EntityAddressResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - city
          - country
          - line_one
        type: object
        properties:
          city:
            title: City
            description: The city name for this address.
            type: string
          state:
            title: State
            description: The state name for this address.
            default: ''
            type: string
          country:
            title: Country
            description: The name of the country associated with this entity address.
            type: string
          zipcode:
            title: Zipcode
            description: The zip/pin/postal code for this address.
            default: ''
            type: string
          line_one:
            title: Line One
            description: >-
              The first line of the address. Usually the apartment, floor, and
              street information.
            type: string
        examples:
          - address:
              city_name: Cincinnati
              state_name: Ohio
              country_name: USA
              zipcode: '513'
              line_one: 'st: 3, block: 2, Jenkins Road'
      ExternalContractTypeEntityResponse:
        title: ExternalContractTypeEntityResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - entity_id
          - entity_name
          - entity_type
          - jurisdiction_of_incorporation
          - address
          - is_primary
        type: object
        properties:
          entity_id:
            title: Entity Id
            description: The id of the entity
            type: integer
          entity_name:
            title: Entity Name
            description: The name of the entity
            type: string
          entity_type:
            title: Entity Type
            description: The type of the entity
            type: string
          jurisdiction_of_incorporation:
            title: Jurisdiction Of Incorporation
            description: The jurisdiction of incorporation
            type: string
          address:
            title: Address
            description: The address of the entity
            allOf:
              - $ref: '#/components/schemas/EntityAddressResponse'
          is_primary:
            title: Is Primary
            description: Defines if this is the primary entity
            type: boolean
        examples:
          - entity_id: 100
            entity_name: ABC Services
            entity_type: Private Company
            jurisdiction_of_incorporation: United Arab Emirates
            address:
              city_name: Cincinnati
              state_name: Ohio
              country_name: USA
              zipcode: '513'
              line_one: 'st: 3, block: 2, Jenkins Road'
            is_primary: true
      CfPublicDescriptorType:
        title: CfPublicDescriptorType
        description: An enumeration.
        type: string
        enum:
          - string
          - boolean
          - int
          - float
          - array of strings
          - array of options
          - enum
          - date
          - repeating
          - array of files
      CfOption:
        title: CfOption
        description: SD Base Model from which all other Models should inherit
        required:
          - label
        type: object
        properties:
          label:
            title: Label
            description: The label of this Option as shown to the user.
            type: string
          value:
            title: Value
            description: The value of this Option as sent to the API.
      IntakeFormQuestionnaireDetailsPublicBaseResponse:
        title: IntakeFormQuestionnaireDetailsPublicBaseResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - display_label
          - variable
          - type
        type: object
        properties:
          display_label:
            title: Display Label
            description: The label to be displayed to users
            type: string
          variable:
            title: Variable
            description: >-
              This defines the name of the variable. In case this is a nested
              variable, The name will include a `.`
            type: string
          type:
            description: >-
              This defines the type of question field. The type defines what value
              needs to be sent in response to this field.
            allOf:
              - $ref: '#/components/schemas/CfPublicDescriptorType'
          parent_type:
            title: Parent Type
            description: >-
              The SpotDraft type of the parent variable this field is a child for,
              if any. Example: dropdown, duration, date, etc
            minLength: 1
            type: string
          options:
            title: Options
            description: >-
              For `enum` and `arrary of options` types, this is the list of
              options to be shown to the user.
            type: array
            items:
              $ref: '#/components/schemas/CfOption'
          required:
            title: Required
            description: Describes if this variable is mandatory or not.
            default: true
            type: boolean
          default_value:
            title: Default Value
            description: The default value for this field, if any
          question:
            title: Question
            description: Question for this attribute.
            type: string
      IntakeFormQuestionnaireDetailsPublicResponse:
        title: IntakeFormQuestionnaireDetailsPublicResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - display_label
          - variable
          - type
        type: object
        properties:
          display_label:
            title: Display Label
            description: The label to be displayed to users
            type: string
          variable:
            title: Variable
            description: >-
              This defines the name of the variable. In case this is a nested
              variable, The name will include a `.`
            type: string
          type:
            description: >-
              This defines the type of question field. The type defines what value
              needs to be sent in response to this field.
            allOf:
              - $ref: '#/components/schemas/CfPublicDescriptorType'
          parent_type:
            title: Parent Type
            description: >-
              The SpotDraft type of the parent variable this field is a child for,
              if any. Example: dropdown, duration, date, etc
            minLength: 1
            type: string
          options:
            title: Options
            description: >-
              For `enum` and `arrary of options` types, this is the list of
              options to be shown to the user.
            type: array
            items:
              $ref: '#/components/schemas/CfOption'
          required:
            title: Required
            description: Describes if this variable is mandatory or not.
            default: true
            type: boolean
          default_value:
            title: Default Value
            description: The default value for this field, if any
          question:
            title: Question
            description: Question for this attribute.
            type: string
          attributes:
            title: Attributes
            description: >-
              Describes the shape of the object for repeating types. Only set when
              `type` is `repeating`.
            type: array
            items:
              $ref: >-
                #/components/schemas/IntakeFormQuestionnaireDetailsPublicBaseResponse
      ContractResponseV2:
        title: ContractResponseV2
        description: Must be kept in sync with ExternalContractV3Serializer
        required:
          - id
          - created
          - contract_name
          - contract_link
          - contract_status
          - created_by
          - counter_party_name
          - contract_type_name
        type: object
        properties:
          id:
            title: Id
            description: The Id of the contract on SpotDraft's Platform.
            type: string
          created:
            title: Created
            description: >-
              The date and time at which the contract was created or uploaded on
              SpotDraft's platform.
            type: string
            format: date-time
          contract_name:
            title: Contract Name
            description: The name of the contract that is visible to users.
            type: string
          contract_link:
            title: Contract Link
            description: The Url to view the contract.
            type: string
          contract_status:
            title: Contract Status
            description: The status of the contract.
            type: string
          created_by:
            title: Created By
            description: >-
              The full name of user who created or uploaded the executed contract
              on to SpotDraft's platform.
            type: string
          counter_party_name:
            title: Counter Party Name
            description: The full name of the counter party involved in the contract.
            type: string
          contract_type_name:
            title: Contract Type Name
            description: The type of the contract.
            type: string
          external_metadata:
            title: External Metadata
            type: object
        examples:
          - id: T-1234
            created: '2021-05-20T04:52:04Z'
            contract_name: Acme Corporation NDA
            contract_link: https://app.spotdraft.com/contracts/v2/4322
            contract_status: EXECUTED
            created_by: Morgan Freeman
            counter_party_name: Mike Reed
            contract_type_name: Historic
            external_metadata: {}
      OrganizationAddressSerializerV2_1:
        required:
          - city
          - line_one
          - country_iso_code
        type: object
        properties:
          city:
            title: City
            type: string
            minLength: 1
          state:
            title: State
            type: string
            default: ''
            minLength: 1
          country:
            title: Country
            type: string
            minLength: 1
          zipcode:
            title: Zipcode
            type: string
            default: ''
            minLength: 1
          line_one:
            title: Line one
            type: string
            minLength: 1
          line_two:
            title: Line two
            type: string
            minLength: 1
          email:
            title: Email
            type: string
            minLength: 1
          phone:
            title: Phone
            type: string
            minLength: 1
          gst_number:
            title: Gst number
            type: string
            minLength: 1
          tax_id:
            title: Tax id
            type: string
            minLength: 1
          country_iso_code:
            title: Country iso code
            type: string
            minLength: 1
      OrganizationDetailsSerializerV2_1:
        type: object
        properties:
          jurisdiction:
            title: Jurisdiction
            type: string
            minLength: 1
          address:
            $ref: '#/components/schemas/OrganizationAddressSerializerV2_1'
          jurisdiction_iso_code:
            title: Jurisdiction iso code
            type: string
            minLength: 1
      ExternalCounterPartyDetailsSerializerV2_1:
        required:
          - is_individual
          - poc_details
        type: object
        properties:
          is_individual:
            title: Is individual
            type: boolean
          organization_type:
            title: Organization type
            type: string
            minLength: 1
          organization_name:
            title: Organization name
            type: string
            minLength: 1
          poc_details:
            $ref: '#/components/schemas/ExternalPOCDetails'
          organization_details:
            $ref: '#/components/schemas/OrganizationDetailsSerializerV2_1'
          party_role_identifier:
            title: Party role identifier
            type: string
            minLength: 1
      ExternalCreateContractSerializerV2_1:
        required:
          - contract_template_id
          - contract_data
          - counter_party_details
        type: object
        properties:
          contract_template_id:
            title: Contract template id
            type: integer
          contract_data:
            title: Contract data
            type: object
          counter_party_details:
            type: array
            items:
              $ref: '#/components/schemas/ExternalCounterPartyDetailsSerializerV2_1'
          external_metadata:
            title: External metadata
            type: object
          entity_reference_id:
            title: Entity reference id
            type: string
            minLength: 1
          workflow_config:
            $ref: '#/components/schemas/WorkflowConfig'
          send_to_counterparty_config:
            $ref: '#/components/schemas/SendToCounterparty'
          contract_name:
            title: Contract name
            type: string
            minLength: 1
          signatories:
            type: array
            items:
              $ref: '#/components/schemas/ExternalCreateContractSignatory'
          is_embedded_contract:
            title: Is embedded contract
            type: boolean
            default: false
      ContractApprovalV2Status:
        title: ContractApprovalV2Status
        description: An enumeration.
        type: string
        enum:
          - APPROVED
          - REJECTED
          - SUGGESTED
          - SKIPPED
      ContractApprovalAction:
        title: ContractApprovalAction
        description: SD Base Model from which all other Models should inherit
        required:
          - status
          - created
          - latest
        type: object
        properties:
          status:
            description: Status of this approval action
            allOf:
              - $ref: '#/components/schemas/ContractApprovalV2Status'
          action_notes:
            title: Notes
            description: Notes for this approval action
            type: string
          created:
            title: Created
            description: Datetime at which this action was taken
            type: string
            format: date-time
          latest:
            title: Latest
            description: This will be True if this is latest approval action
            type: boolean
      ApprovalV2Type:
        title: ApprovalV2Type
        description: An enumeration.
        type: string
        enum:
          - PRE_SEND
          - PRE_SIGN
          - AD_HOC
      ContractApprovalUser:
        title: ContractApprovalUser
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - email
        type: object
        properties:
          id:
            title: Id
            description: Id of the user
            type: integer
          name:
            title: Name
            description: Name of the user
            type: string
          email:
            title: Email
            description: Email of the user
            type: string
      RequiredApprovalStatus:
        title: RequiredApprovalStatus
        description: An enumeration.
        type: string
        enum:
          - NOT_STARTED
          - PENDING
          - REJECTED
          - SUGGESTED
          - APPROVED
          - SKIPPED
      PublicContractRequiredApprovalResponse:
        title: PublicContractRequiredApprovalResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - contract_id
          - approval_name
          - approval_type
          - sent_for_approval
          - created_by
          - current_status
        type: object
        properties:
          id:
            title: Id
            description: Id of the approval
            type: integer
          contract_id:
            title: Contract Id
            description: Id of contract to which this approval belongs
            type: integer
          approval_name:
            title: Approval Name
            description: Approval Name
            type: string
          approval_type:
            description: Type of approval
            allOf:
              - $ref: '#/components/schemas/ApprovalV2Type'
          approver:
            title: Org User
            description: User who is supposed to approve this approval
            allOf:
              - $ref: '#/components/schemas/ContractApprovalUser'
          sent_for_approval:
            title: Sent For Approval
            description: Whether this apporval has been sent or not
            type: boolean
          last_sent_at:
            title: Last Sent At
            description: Datetime when this approval was last sent at
            type: string
            format: date-time
          notes:
            title: Notes
            description: Notes for this approval
            type: string
          created_by:
            title: Created By Org User
            description: User who created this approval
            allOf:
              - $ref: '#/components/schemas/ContractApprovalUser'
          current_status:
            description: Current status of this approval
            allOf:
              - $ref: '#/components/schemas/RequiredApprovalStatus'
      PublicContractApprovalExpandedResponse:
        title: PublicContractApprovalExpandedResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - approval_actions
          - approval
        type: object
        properties:
          approval_actions:
            title: Approval Actions
            type: array
            items:
              $ref: '#/components/schemas/ContractApprovalAction'
          approval:
            $ref: '#/components/schemas/PublicContractRequiredApprovalResponse'
      ExternalCreateContractApprovalRequest:
        title: ExternalCreateContractApprovalRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - name
          - notes
        type: object
        properties:
          name:
            title: Name
            description: The name that will be used to represent the approval in Spotdraft.
            type: string
          approver_user_id:
            title: Approver User Id
            description: >-
              The ID of the user who has to take action on this Approval. Either
              `approver_user_id` or `approver_role_id` will have to be set, but
              not both. Use the [Get User List](https://api.spotdraft.com) API to
              get the user ID.
            type: integer
          approver_role_id:
            title: Approver Role Id
            description: >-
              The ID of the role that has to take action on this Approval. Either
              `approver_user_id` or `approver_role_id` will have to be set, but
              not both. Use the [Get Active
              Roles](#tag/V2.1-User-APIs/operation/v2.1_public_auth_roles_list)
              API to get the role ID.
            type: integer
          notes:
            title: Notes
            description: >-
              The message that will be sent to the approver along with the
              approval request.
            type: string
          order:
            title: Order
            description: >-
              The order denotes the sequence in which the approval requests will
              be sent to the approver of each approval. Lower values of order are
              sent before higher values of order. Approvals with same order will
              be sent to the approver at the same time.
            type: integer
      ExternalApprovalResponse:
        title: ExternalApprovalResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - contract_id
          - name
          - is_sent
        type: object
        properties:
          id:
            title: Id
            type: integer
          contract_id:
            title: Contract Id
            description: The id of the contract to which the approval belongs.
            type: integer
          name:
            title: Name
            description: The name that will be used to represent the approval in Spotdraft.
            type: string
          approver_user_id:
            title: Approver User Id
            description: >-
              The ID of the user who has to take action on this Approval. Either
              `approver_user_id` or `approver_role_id` will always be set, but not
              both.
            type: integer
          approver_role_id:
            title: Approver Role Id
            description: >-
              The ID of the role that has to take action on this Approval. Either
              `approver_user_id` or `approver_role_id` will always be set, but not
              both.
            type: integer
          is_sent:
            title: Is Sent
            description: Set to true when the approval request has been sent to the approver.
            type: boolean
          notes:
            title: Notes
            description: >-
              The message that will be sent to the approver along with the
              approval request.
            type: string
          order:
            title: Order
            description: >-
              The order denotes the sequence in which the approval requests will
              be sent to the approver of each approval. Lower values of order are
              sent before higher values of order. Approvals with same order will
              be sent to the approver at the same time.
            type: integer
      POCDetails:
        title: POCDetails
        description: SD Base Model from which all other Models should inherit
        required:
          - first_name
          - last_name
          - email
        type: object
        properties:
          first_name:
            title: First Name
            description: The first name of the Point of Contact
            type: string
          last_name:
            title: Last Name
            description: The last name of the Point of Contact
            type: string
          email:
            title: Email
            description: The email address of the Point of Contact
            type: string
      CounterPartyDetails:
        title: CounterPartyDetails
        description: SD Base Model from which all other Models should inherit
        required:
          - is_individual
          - poc_details
        type: object
        properties:
          is_individual:
            title: Is Individual
            description: >-
              Defines if this Counterparty is an individual or an organization
              like a company
            type: boolean
          organization_type:
            title: Organization Type
            description: >-
              The type of the counterparty if its an organization. Expects values
              like LLC, LLP, etc. Please ask help@spotdraft.com for valid values.
            type: string
          organization_name:
            title: Organization Name
            description: >-
              The name of the counterparty if its an organization. Expects the
              name of the company/entity that is the counterparty.
            type: string
          organization_details:
            title: Organization Details
            description: >-
              Additional details for an organization. Should be set if
              `is_individual=False`
            allOf:
              - $ref: '#/components/schemas/OrganizationDetails'
          poc_details:
            title: Poc Details
            description: >-
              Point of Contact details for this counterparty. Should be the
              details of the individual for `is_individual=True` and the details
              of the contact at the counterparty organization in case of
              `is_individual=False`.
            allOf:
              - $ref: '#/components/schemas/POCDetails'
          party_role_identifier:
            title: Party Role Identifier
            description: >-
              The unique identifier of the party this counterparty should be
              assigned to.
            minLength: 1
            type: string
        examples:
          - is_individual: true
            organization_type: Private Limited
            organization_name: Acme Corporation
            organization_details: {}
            poc_details:
              first_name: Mike
              last_name: Reed
              email: Mike_reed@yahoo.com
            primary_address:
              city_name: Cincinnati
              state_name: Ohio
              country_name: USA
              zipcode: '513'
              line_one: 'st: 3, block: 2, Jenkins Road'
      ExternalContractReviewerRequest:
        title: ExternalContractReviewerRequest
        description: SD Base Model from which all other Models should inherit
        type: object
        properties:
          org_user_email:
            title: Org User Email
            description: Email of the reviewer
            type: string
          role_id:
            title: Role Id
            description: Role id of reviewer
            type: integer
          description:
            title: Description
            description: Note to the reviewer
            default: ''
            type: string
      CreatorPartySignatoryRequest:
        title: CreatorPartySignatoryRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - email
        type: object
        properties:
          email:
            title: Email
            description: Email of the signatory on the creator party side.
            type: string
            format: email
          title:
            title: Title
            description: Title of the signatory.
            default: ''
            type: string
      ContractKeyPointerRequest:
        title: ContractKeyPointerRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - key_pointer_id
        type: object
        properties:
          key_pointer_id:
            title: Key Pointer Id
            description: >-
              ID of the key pointer that needs to be created or updated for a
              contract
            type: integer
          value:
            title: Value
            description: >-
              Value of the keypointer, the type of this value depends on the type
              of the keypointer.
      ContractKeyPointerMinimalResponse:
        title: ContractKeyPointerMinimalResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - value
          - label
          - field_name
          - data_type
          - format_option
        type: object
        properties:
          id:
            title: Id
            type: integer
          value:
            title: Value
            description: Value of the key pointer
            anyOf:
              - type: integer
              - type: string
              - type: array
                items: {}
              - type: object
              - type: boolean
          label:
            title: Label
            type: string
          field_name:
            title: Field Name
            type: string
          data_type:
            title: Data Type
            type: string
          format_option:
            title: Format Option
            type: object
        examples:
          - id: 1
            value: sample
            label: Sample Label
            filed_name: sample_field_name
            data_type: string
            format_option:
              data: sample format option
      ExternalReplyResponse:
        title: ExternalReplyResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - comment
        type: object
        properties:
          id:
            title: Id
            type: integer
          comment:
            title: Comment
            description: The content of the reply.
            type: string
      ExternalCommentResponse:
        title: ExternalCommentResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - contract_id
          - comment
          - replies
        type: object
        properties:
          id:
            title: Id
            type: integer
          contract_id:
            title: Contract Id
            description: The id of the contract to which the comment belongs.
            type: integer
          comment:
            title: Comment
            description: The content of the comment.
            type: string
          replies:
            title: Replies
            description: The replies associated with the comment.
            type: array
            items:
              $ref: '#/components/schemas/ExternalReplyResponse'
        examples:
          - id: 1001
            contract_id: 211270
            comment: Hey test.user@spotdraft.com please review this contract.
            replies: []
      ContractRelationType:
        title: ContractRelationType
        description: An enumeration.
        type: string
        enum:
          - CHILD
          - ADDENDUM
          - AMENDMENT
          - PARENT
      ExternalContractInvitePermissionType:
        title: ExternalContractInvitePermissionType
        description: An enumeration.
        type: string
        enum:
          - CONTRACT.READ
          - CONTRACT.SUGGEST
          - CONTRACT.EDIT
          - CONTRACT.SIGN
      ExternalContractInviteRequestItem:
        title: ExternalContractInviteRequestItem
        description: SD Base Model from which all other Models should inherit
        required:
          - permission_name
        type: object
        properties:
          role_id:
            title: Role Id
            description: >-
              The Role ID to be invited.
              [This](https://api.spotdraft.com/api/v2/public/auth/roles) API can
              be used to fetch the role ID.
            type: integer
          user_id:
            title: User Id
            description: >-
              The User ID to be invited.
              [This](https://api.spotdraft.com/api/v1/public/auth/users) API can
              be used to fetch the user ID.
            type: integer
          new_user_email:
            title: New User Email
            description: Email of the new user to be invited.
            minLength: 1
            type: string
          new_user_name:
            title: New User Name
            description: Name of the new user to be invited.
            default: ''
            minLength: 1
            type: string
          new_user_role_id:
            title: New User Role Id
            description: >-
              Role ID to which the new invited user is to be assigned.
              [This](https://api.spotdraft.com/api/v2/public/auth/roles) API can
              be used to fetch the role ID.
            type: integer
          note:
            title: Note
            description: Note to be included in the contract invite.
            default: ''
            minLength: 1
            type: string
          permission_name:
            description: The type of permission to be provided to the invited role/user.
            allOf:
              - $ref: '#/components/schemas/ExternalContractInvitePermissionType'
      ExternalUserPublicResponse:
        title: ExternalUserPublicResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - email
        type: object
        properties:
          id:
            title: Id
            description: Id of the User.
            type: integer
          name:
            title: Name
            description: Name of the User.
            minLength: 1
            type: string
          email:
            title: Email
            description: Email of the User.
            type: string
            format: email
          designation:
            title: Designation
            description: Designation of the User.
            minLength: 1
            type: string
      ExternalRolePublicResponse:
        title: ExternalRolePublicResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - description
        type: object
        properties:
          id:
            title: Id
            description: Id of the role.
            type: integer
          name:
            title: Name
            description: Name of the role.
            minLength: 1
            type: string
          description:
            title: Description
            description: Description of the role.
            minLength: 1
            type: string
      ExternalContractQuestionnaireRespondentPublicData:
        title: ExternalContractQuestionnaireRespondentPublicData
        description: Respondent data for contract questionnaire responses
        type: object
        properties:
          created_at:
            title: Created At
            description: Time when the respondent filled the questionnaire for the contract
            type: string
            format: date-time
          created_by:
            title: Created By
            description: Respondent name who filled questionnaire for the contract
            type: string
          org_name:
            title: Org Name
            description: Name of the organization to which respondent belongs to.
            type: string
      ContactResponse:
        title: ContactResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - email
        type: object
        properties:
          id:
            title: Id
            description: The id of the contact.
            type: integer
          name:
            title: Name
            description: The name of the contact.
            type: string
          email:
            title: Email
            description: The email of the contact.
            type: string
      CounterPartyAddressResponse:
        title: CounterPartyAddressResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - line_one
          - city_name
          - state_name
          - zipcode
          - country_name
        type: object
        properties:
          id:
            title: Id
            description: The ID of this address. Globally Unique.
            type: integer
          line_one:
            title: Line One
            description: >-
              The first line of the address. Usually the apartment, floor, and
              street information.
            type: string
          city_name:
            title: City Name
            description: The city name for this address.
            type: string
          state_name:
            title: State Name
            description: The state name for this address.
            type: string
          zipcode:
            title: Zipcode
            description: The zip/pin/postal code for this address.
            type: string
          country_name:
            title: Country Name
            description: The name of the country associated with this counterparty address.
            type: string
          email:
            title: Email
            description: >-
              The email address associated with this counterparty address (if
              any).
            type: string
          phone:
            title: Phone
            description: The phone number associated with this counterparty address (if any).
            type: string
        examples:
          - id: 100
            line_one: 'st: 3, block: 2, Jenkins Road'
            city_name: Cincinnati
            state_name: Ohio
            zipcode: '513'
            country_name: USA
            email: john.doe@gmail.com
            phone: (415) 555-0198
      OrganizationStatus:
        title: OrganizationStatus
        description: An enumeration.
        type: string
        enum:
          - ACTIVE
          - ARCHIVED
          - MIGRATING
      CounterPartyAPIResponse:
        title: CounterPartyAPIResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - is_individual
          - contacts
          - status
        type: object
        properties:
          id:
            title: Id
            description: The ID of this Counterparty. Globally Unique.
            type: integer
          name:
            title: Name
            description: The name of this Counterparty. Unique within a workspace.
            type: string
          is_individual:
            title: Is Individual
            description: >-
              Defines if this Counterparty is an individual or an organization
              like a company.
            type: boolean
          contacts:
            title: Contacts
            description: The list of contacts associated with this counterparty.
            type: array
            items:
              $ref: '#/components/schemas/ContactResponse'
          primary_address:
            title: Primary Address
            description: >-
              The address details of the counterparty. Used to render the address
              in the contract templates.
            allOf:
              - $ref: '#/components/schemas/CounterPartyAddressResponse'
          status:
            description: Status of the Counterparty. Valid values are ACTIVE and ARCHIVED.
            allOf:
              - $ref: '#/components/schemas/OrganizationStatus'
          custom_fields:
            title: Custom Fields
            description: Custom field values for the Counterparty
            type: object
        examples:
          - id: 102
            name: Mike Reed
            is_individual: false
            contacts:
              - id: 100
                name: Susan Ervin
                email: SueErvin@yahoo.com
            primary_address:
              city_name: Cincinnati
              state_name: Ohio
              country_name: USA
              zipcode: '513'
              line_one: 'st: 3, block: 2, Jenkins Road'
            status: ACTIVE
            custom_fields:
              vendor_id: '1234'
              gst_number: 22AAAAA0000A1Z5
      CreateCounterPartyAddressRequest:
        title: CreateCounterPartyAddressRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - line_one
          - city_name
          - country_name
        type: object
        properties:
          line_one:
            title: Line One
            description: >-
              The first line of the address. Usually the apartment, floor, and
              street information.
            type: string
          city_name:
            title: City Name
            description: The city name for this address.
            type: string
          state_name:
            title: State Name
            description: The state name for this address.
            default: ''
            type: string
          zipcode:
            title: Zipcode
            description: The zip/pin/postal code for this address.
            default: ''
            type: string
          email:
            title: Email
            description: >-
              The email address associated with this counterparty address (if
              any).
            type: string
          phone:
            title: Phone
            description: The phone number associated with this counterparty address (if any).
            type: string
          country_name:
            title: Country Name
            description: >-
              The name of the country associated with this counterparty address.
              Any value passed here is ignored if `country_iso_code` is passed.
              Valid values are defined internally. Please ask help@spotdraft.com
              for more information.
            type: string
          country_iso_code:
            title: Country Iso Code
            description: >-
              The ISO-3166-1 Alpha-2 code of the country associated with this
              counterparty address. Any value passed here is overrides `country`.
              Valid values can be found
              [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
            type: string
        examples:
          - line_one: 'st: 3, block: 2, Jenkins Road'
            city_name: Cincinnati
            state_name: Ohio
            zipcode: '513'
            country_name: USA
            email: test@yopmail.com
            phone: '1234567890'
            country_iso_code: US
      CounterPartyContactResponse:
        title: CounterPartyContactResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - email
          - is_primary
        type: object
        properties:
          id:
            title: Id
            description: The ID of this contact. Globally Unique.
            type: integer
          name:
            title: Name
            description: The name of this contact.
            type: string
          email:
            title: Email
            description: The email of this contact.
            type: string
          is_primary:
            title: Is Primary
            description: >-
              Defines if this contact is the primary contact for the associated
              counterparty.
            type: boolean
        examples:
          - id: 100
            name: Susan Ervin
            email: dummy@email.com
            is_primary: false
      ExternalCounterpartyContactBulkUpdateRequest:
        title: ExternalCounterpartyContactBulkUpdateRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - id
        type: object
        properties:
          name:
            title: Name
            description: The updated name of the Contact
            minLength: 1
            type: string
          email:
            title: Email
            description: The updated email of the Contact
            type: string
            format: email
          is_primary:
            title: Is Primary
            description: Whether the contact needs to be set as the primary contact.
            type: boolean
          id:
            title: Id
            description: ID of the Counterparty contact to be updated.
            type: integer
        examples:
          - id: 100
            name: Susan Ervin
            email: dummy@email.com
            is_primary: false
      CfPublicDescriptorBase:
        title: CfPublicDescriptorBase
        description: SD Base Model from which all other Models should inherit
        required:
          - display_label
          - variable
          - type
        type: object
        properties:
          display_label:
            title: Display Label
            description: The label to be displayed to users
            type: string
          variable:
            title: Variable
            description: >-
              The name of the variable. In case this is a nested variable, The
              name will include a `.`
            type: string
          type:
            description: >-
              The type of field. The type changes the values to be sent. See <a
              href='#operation/v2_public_contracts_create'>V2 Create Contract</a>
            allOf:
              - $ref: '#/components/schemas/CfPublicDescriptorType'
          help_text:
            title: Help Text
            description: Help text which can be shown to the user if needed.
            type: string
          parent_variable:
            title: Parent Variable
            description: >-
              For nested variables, this is the name of the variable which should
              be an object with the values set in it
            type: string
          options:
            title: Options
            description: >-
              For `enum` and `arrary of options` types, this is the list of
              options to be shown to the user.
            type: array
            items:
              $ref: '#/components/schemas/CfOption'
          required:
            title: Required
            description: >-
              Describes if this variable is required. In case its nested (if
              `parent_variable` is set) the entire object can be unset if
              `parent_required` is unset or false
            default: true
            type: boolean
          parent_required:
            title: Parent Required
            description: >-
              Only set if `parent_variable` is set. If set to true then the parent
              variable is required. Thus the nested object for the parent should
              be set. The required-ness of the nested variables is based on the
              `required` field
            type: boolean
          default_value:
            title: Default Value
            description: The default value for this field, if any
          parent_type:
            title: Parent Type
            description: >-
              The SpotDraft type of the parent variable this field is a child for,
              if any.
            type: string
          child_variable:
            title: Child Variable
            description: >-
              The name of the child field. This is only set if this variable is a
              child field.
            type: string
          question:
            title: Question
            description: Question for this attribute.
            type: string
      CfPublicDescriptor:
        title: CfPublicDescriptor
        description: |-
          A descriptor to describe the CommonForm blank.
          Used for the public API.
        required:
          - display_label
          - variable
          - type
        type: object
        properties:
          display_label:
            title: Display Label
            description: The label to be displayed to users
            type: string
          variable:
            title: Variable
            description: >-
              The name of the variable. In case this is a nested variable, The
              name will include a `.`
            type: string
          type:
            description: >-
              The type of field. The type changes the values to be sent. See <a
              href='#operation/v2_public_contracts_create'>V2 Create Contract</a>
            allOf:
              - $ref: '#/components/schemas/CfPublicDescriptorType'
          help_text:
            title: Help Text
            description: Help text which can be shown to the user if needed.
            type: string
          parent_variable:
            title: Parent Variable
            description: >-
              For nested variables, this is the name of the variable which should
              be an object with the values set in it
            type: string
          options:
            title: Options
            description: >-
              For `enum` and `arrary of options` types, this is the list of
              options to be shown to the user.
            type: array
            items:
              $ref: '#/components/schemas/CfOption'
          required:
            title: Required
            description: >-
              Describes if this variable is required. In case its nested (if
              `parent_variable` is set) the entire object can be unset if
              `parent_required` is unset or false
            default: true
            type: boolean
          parent_required:
            title: Parent Required
            description: >-
              Only set if `parent_variable` is set. If set to true then the parent
              variable is required. Thus the nested object for the parent should
              be set. The required-ness of the nested variables is based on the
              `required` field
            type: boolean
          default_value:
            title: Default Value
            description: The default value for this field, if any
          parent_type:
            title: Parent Type
            description: >-
              The SpotDraft type of the parent variable this field is a child for,
              if any.
            type: string
          child_variable:
            title: Child Variable
            description: >-
              The name of the child field. This is only set if this variable is a
              child field.
            type: string
          question:
            title: Question
            description: Question for this attribute.
            type: string
          attributes:
            title: Attributes
            description: >-
              Describes the shape of the object for repeating types. Only set when
              `type` is `repeating`.
            type: array
            items:
              $ref: '#/components/schemas/CfPublicDescriptorBase'
      KeyPointerSectionDomainModel:
        title: KeyPointerSectionDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - section_type
          - name
        type: object
        properties:
          id:
            title: Id
            description: The ID of this section. Gobally Unique.
            type: integer
          section_type:
            title: Section Type
            description: >-
              Defines what kind of section this is. SpotDraft has inbuilt sections
              and users can also define additional sections. Valid values are
              `USER_DEFINED` and `SYSTEM_DEFINED`
            type: string
          name:
            title: Name
            description: The name of the section as shown to users.
            type: string
      KeyPointerDomainModel:
        title: KeyPointerDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - descriptors
          - section
        type: object
        properties:
          id:
            title: Id
            description: The ID of this Key Pointer. Globally unique.
            type: integer
          descriptors:
            title: Descriptors
            description: >-
              The list of descriptors clarifying what type of data this Key
              Pointer stores. Useful to ensure valid data is being passed.
            type: array
            items:
              $ref: '#/components/schemas/CfPublicDescriptor'
          section:
            title: Section
            description: The section which this key pointer belongs to.
            allOf:
              - $ref: '#/components/schemas/KeyPointerSectionDomainModel'
      CountryDomainModel:
        title: CountryDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
        type: object
        properties:
          id:
            title: Id
            description: The ID of the Jurisdiction.
            type: integer
          name:
            title: Name
            description: The name of the Jurisdiction.
            type: string
          iso_code:
            title: Code2
            description: The ISO-3166-1 Alpha-2 code of the Jurisdiction.
            type: string
      OrganizationTypeBaseDomainModel:
        title: OrganizationTypeBaseDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
        type: object
        properties:
          id:
            title: Id
            description: The ID of the Organization Type.
            type: integer
          name:
            title: Name
            description: >-
              Name of the Organization Type. For example LLP vs LLC vs S Corp in
              the US
            type: string
        examples:
          - id: 2798
            name: Limited Liability Company (LLC)
      PrimaryAddressDomainModel:
        title: PrimaryAddressDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - line_one
          - city_name
          - state_name
          - zipcode
        type: object
        properties:
          id:
            title: Id
            description: The ID for this address.
            type: integer
          line_one:
            title: Line One
            description: >-
              The first line of the address. Usually the apartment, floor, and
              street information.
            type: string
          city_name:
            title: City Name
            description: The city name for this address.
            type: string
          state_name:
            title: State Name
            description: The state name for this address.
            type: string
          zipcode:
            title: Zipcode
            description: The zip/pin/postal code for this address.
            type: string
          country:
            title: Country
            description: >-
              The ISO-3166-1 Alpha-2 code of the country associated with this
              organization entity address.
            allOf:
              - $ref: '#/components/schemas/CountryDomainModel'
        examples:
          - id: 5073
            line_one: 3659 Burwell Heights Road
            city_name: Houston
            state_name: Texas
            zipcode: '77020'
            country:
              id: 234
              name: United States
              iso_code: US
      OrganizationEntityDomainModel:
        title: OrganizationEntityDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - reference_id
          - jurisdiction
          - organization_type
          - primary_address
          - is_primary
        type: object
        properties:
          id:
            title: Id
            description: The ID of the Entity
            type: integer
          name:
            title: Name
            description: The name of Entity as rendered in the contracts and shown to users.
            type: string
          reference_id:
            title: Reference Id
            description: >-
              The Reference ID of the entity which is used to identify the entity
              in templates.
            type: string
          jurisdiction:
            title: Jurisdiction
            description: The Jurisdiction associated with the entity.
            allOf:
              - $ref: '#/components/schemas/CountryDomainModel'
          organization_type:
            title: Organization Type
            description: >-
              The type of this entity. This identifies the company type. For
              example LLP vs LLC vs S Corp in the US
            allOf:
              - $ref: '#/components/schemas/OrganizationTypeBaseDomainModel'
          primary_address:
            title: Primary Address
            description: The address details of the entity.
            allOf:
              - $ref: '#/components/schemas/PrimaryAddressDomainModel'
          is_primary:
            title: Is Primary
            description: This identify the entity as the primary entity or not
            type: boolean
        examples:
          - id: 1045
            name: Acme Inc.
            reference_id: US20
            jurisdiction:
              id: 234
              name: United States
              iso_code: US
            organization_type:
              id: 1
              name: Private Company
            primary_address:
              id: 5073
              line_one: 3659 Burwell Heights Road
              city_name: Houston
              state_name: Texas
              zipcode: '77020'
              country:
                id: 234
                name: United States
                iso_code: US
            is_primary: true
      PrimaryAddressRequest:
        title: PrimaryAddressRequest
        description: SD Base Model from which all other Models should inherit
        required:
          - line_one
          - city_name
          - state_name
          - zipcode
          - country_iso_code
        type: object
        properties:
          line_one:
            title: Line One
            description: >-
              The first line of the address. Usually the apartment, floor, and
              street information.
            type: string
          city_name:
            title: City Name
            description: The city name for this address.
            type: string
          state_name:
            title: State Name
            description: The state name for this address.
            type: string
          zipcode:
            title: Zipcode
            description: The zip/pin/postal code for this address.
            type: string
          country_iso_code:
            title: Country Iso Code
            description: >-
              The ISO-3166-1 Alpha-2 code of the country associated with this
              organization entity address. Any value passed here is overrides
              `country`. Valid values can be found
              [here](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).
            type: string
        examples:
          - city_name: Houston
            state_name: Texas
            zipcode: '77020'
            line_one: 3659 Burwell Heights Road
            country_iso_code: US
      OrganizationTypeDomainModel:
        title: OrganizationTypeDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
        type: object
        properties:
          id:
            title: Id
            description: The ID of the Organization Type.
            type: integer
          name:
            title: Name
            description: >-
              Name of the Organization Type. For example LLP vs LLC vs S Corp in
              the US
            type: string
          jurisdiction:
            title: Jurisdiction
            description: The Jurisdiction associated with the Organization Type.
            allOf:
              - $ref: '#/components/schemas/CountryDomainModel'
        examples:
          - id: 2798
            name: Limited Liability Company (LLC)
            jurisdiction:
              id: 234
              name: United States
              iso_code: US
      PartyOrganizationKind:
        title: PartyOrganizationKind
        description: An enumeration.
        type: string
        enum:
          - Individual
          - Organisation
          - Both
      TaskAssigneeCreateRequest:
        title: TaskAssigneeCreateRequest
        description: SD Base Model from which all other Models should inherit
        type: object
        properties:
          org_user_id:
            title: Org User Id
            type: integer
          role_id:
            title: Role Id
            type: integer
      ContractKind:
        title: ContractKind
        description: An enumeration.
        type: string
        enum:
          - TEMPLATE
          - TEMPLATE_EDITABLE
          - UPLOAD_EDITABLE
          - UPLOAD_SIGN
          - UPLOAD_EXECUTED
          - EXPRESS_TEMPLATE
          - CLICKWRAP
      ContractV3MinimalDomainModel:
        title: ContractV3MinimalDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - contract_name
          - contract_type_id
          - contract_kind
          - status
        type: object
        properties:
          id:
            title: Id
            type: integer
          contract_name:
            title: Contract Name
            type: string
          contract_type_id:
            title: Contract Type Id
            type: integer
          contract_kind:
            $ref: '#/components/schemas/ContractKind'
          status:
            title: Status
            type: string
      OrganizationUserResponse:
        title: OrganizationUserResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - email
          - is_primary
        type: object
        properties:
          id:
            title: Id
            type: integer
          first_name:
            title: First Name
            default: ''
            type: string
          last_name:
            title: Last Name
            default: ''
            type: string
          name:
            title: Name
            type: string
          designation:
            title: Designation
            type: string
          email:
            title: Email
            type: string
          auth_user_id:
            title: Auth User Id
            type: integer
          is_deleted:
            title: Is Deleted
            type: boolean
          is_active:
            title: Is Active
            type: boolean
          is_primary:
            title: Is Primary
            type: boolean
          organization_id:
            title: Organization Id
            type: integer
          invite_accepted:
            title: Invite Accepted
            type: boolean
      WorkspaceResponse:
        title: WorkspaceResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - is_individual_org
          - show_workspace_migration
        type: object
        properties:
          id:
            title: Id
            type: integer
          owner_id:
            title: Owner Id
            type: integer
          name:
            title: Name
            type: string
          is_individual_org:
            title: Is Individual Org
            type: boolean
          show_workspace_migration:
            title: Show Workspace Migration
            type: boolean
          short_hand_notation:
            title: Short Hand Notation
            type: string
          company_email_domains:
            title: Company Email Domains
            type: array
            items:
              type: string
          brand_name:
            title: Brand Name
            type: string
      SDAuthRoleResponse:
        title: SDAuthRoleResponse
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - name
          - description
          - created
        type: object
        properties:
          id:
            title: Id
            type: integer
          name:
            title: Name
            type: string
          description:
            title: Description
            type: string
          created:
            title: Created
            type: string
            format: date-time
          point_of_contact:
            $ref: '#/components/schemas/OrganizationUserResponse'
      TaskAssigneeDomainModel:
        title: TaskAssigneeDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - user_task_id
        type: object
        properties:
          id:
            title: Id
            type: integer
          user_task_id:
            title: User Task Id
            type: integer
          assignee_org_user:
            title: Assignee Org User
            description: The Details of the Assignee Org User
            allOf:
              - $ref: '#/components/schemas/OrganizationUserResponse'
          assignee_role:
            title: Assignee Role
            description: The Details of the Role assigned to Assignee
            allOf:
              - $ref: '#/components/schemas/SDAuthRoleResponse'
          last_manual_reminder_sent_at:
            title: Last Manual Reminder Sent At
            type: string
            format: date-time
      UserTaskStatus:
        title: UserTaskStatus
        description: An enumeration.
        type: string
        enum:
          - COMPLETED
          - UPCOMING
          - OVERDUE
          - NO_DATE
      ReminderDomainModel:
        title: ReminderDomainModel
        description: SD Base Model from which all other Models should inherit
        required:
          - id
          - user_task_id
          - relative_time
        type: object
        properties:
          id:
            title: Id
            type: integer
          user_task_id:
            title: User Task Id
            type: integer
          relative_time:
            title: Relative Time
            type: object
          absolute_time:
            title: Absolute Time
            type: string
            format: date-time
konfigCliVersion: 1.38.61
