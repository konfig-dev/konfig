publishJson:
  company: IRIS Software Group
  serviceName: Cascade
  sdkName: iris-software-group-cascade-{language}-sdk
  clientName: IrisSoftwareGroupCascade
  metaDescription: >-
    IRIS Software Group is a leading global provider of mission critical
    software and services and one of UK's largest privately held software
    companies.


    We help organisations to make better business decisions by developing
    integrated software solutions to minimise admin, make business processes
    more efficient and give more time to do what's valued.


    We started 45 years ago with accountancy software and have evolved to be
    trusted by more than 100,000 customers in 135 countries around the world. We
    invest heavily in development using the latest processes and technologies,
    driven by our Indian and Romanian Product Development Centres to build the
    next generation of cloud-based accountancy, HR and education solutions.


    Our global and domestic payroll and HR solutions are used nearly five
    million employees. Almost one million UK employees are managed by our HR
    solutions, and one in eight UK employees are paid through IRIS payroll
    solutions. We are the largest third-party online tax filer with UK
    Government, and we are used by 54 of the top 100 US and 91 of the top 100 UK
    accountancy firms. We also serve over 13,000 schools and academies, and
    almost five million UK families use our apps to connect to their child's
    school.


    In the last year, we have been awarded Technology Company of the Year in the
    UK Tech Awards; Employer of the Year in the Thames Valley Tech Awards; and
    the Americas Prime Award from the K2 Enterprise Awards. IRIS Education has
    been named Company of the Year at the UK National MAT Awards 2023, and
    crowned Company of the Year (more than 12m) in the Bett Awards 2023.
  apiStatusUrls: inherit
  homepage: www.iris.co.uk/products/iris-cascade/
  developerDocumentation: help-iris.co.uk/hr/cascade/api/getstart/getting-started.htm
  categories:
    - hr
    - human_resources
rawSpecString: |
  openapi: 3.0.1
  info:
    title: HR API
    description: <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
    contact:
      name: Iris Software Group
      url: https://help.iris.co.uk/hr/cascade/api/
      email: hrapi@iris.co.uk
    version: '2'
  servers:
    - url: https://api.iris.co.uk/hr/v2
  paths:
    /employees:
      get:
        tags:
          - Employees
        summary: Gets a list of Employees.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=minimal; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=full; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.metadata=none; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/json; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/xml; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              application/prs.odatatestxx-odata; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              text/plain; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
              text/json; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeQueryModel'
      post:
        tags:
          - Employees
        summary: Creates a new Employee.
        requestBody:
          description: New Employee.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
            application/*+json; version=2:
              schema:
                $ref: '#/components/schemas/CreateEmployeeCommand'
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none; version=2:
                schema:
                  type: string
              application/json;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json; version=2:
                schema:
                  type: string
              application/xml; version=2:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=2:
                schema:
                  type: string
              text/plain; version=2:
                schema:
                  type: string
              text/json; version=2:
                schema:
                  type: string
    /employees/{id}:
      get:
        tags:
          - Employees
        summary: Gets a single Employee referenced by ID.
        parameters:
          - name: id
            in: path
            description: Employee ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=minimal; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=full; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.metadata=none; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/json; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/xml; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              application/prs.odatatestxx-odata; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              text/plain; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
              text/json; version=2:
                schema:
                  $ref: '#/components/schemas/EmployeeModel'
      put:
        tags:
          - Employees
        summary: Update an Employee referenced by ID.
        parameters:
          - name: id
            in: path
            description: The ID of Employee to update.
            required: true
            schema:
              type: string
        requestBody:
          description: The new state of the Employee.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
            application/*+json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeCommand'
        responses:
          '204':
            description: Success
          '400':
            description: Bad Request
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/xml; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/prs.odatatestxx-odata; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/plain; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json; version=2:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
    /jobs:
      get:
        tags:
          - Jobs
        summary: Gets a list of Jobs.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=minimal; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=full; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.metadata=none; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.streaming=true; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json;odata.streaming=false; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/json; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/xml; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              application/prs.odatatestxx-odata; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              text/plain; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
              text/json; version=2:
                schema:
                  $ref: '#/components/schemas/JobQueryModel'
      post:
        tags:
          - Jobs
        summary: Creates a new Job.
        requestBody:
          description: New Job.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
            application/*+json; version=2:
              schema:
                $ref: '#/components/schemas/CreateJobCommand'
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none; version=2:
                schema:
                  type: string
              application/json;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json; version=2:
                schema:
                  type: string
              application/xml; version=2:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=2:
                schema:
                  type: string
              text/plain; version=2:
                schema:
                  type: string
              text/json; version=2:
                schema:
                  type: string
    /jobs/{id}:
      get:
        tags:
          - Jobs
        summary: Gets a single Job referenced by an ID.
        parameters:
          - name: id
            in: path
            description: Job ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=full; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json;odata.metadata=none; version=2:
                schema:
                  type: string
              application/json;odata.streaming=true; version=2:
                schema:
                  type: string
              application/json;odata.streaming=false; version=2:
                schema:
                  type: string
              application/json; version=2:
                schema:
                  type: string
              application/xml; version=2:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=2:
                schema:
                  type: string
              text/plain; version=2:
                schema:
                  type: string
              text/json; version=2:
                schema:
                  type: string
      put:
        tags:
          - Jobs
        summary: Update a Job referenced by an ID.
        parameters:
          - name: id
            in: path
            description: The ID of the Job to update.
            required: true
            schema:
              type: string
        requestBody:
          description: The new state of the Job.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
            application/*+json; version=2:
              schema:
                $ref: '#/components/schemas/UpdateJobCommand'
        responses:
          '204':
            description: Success
    /hierarchy:
      get:
        tags:
          - Hierarchy
        summary: Gets a list of Hierarchy Nodes.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeQueryModel'
    /hierarchy/{id}:
      get:
        tags:
          - Hierarchy
        summary: Gets a single Hierarchy Node by ID.
        parameters:
          - name: id
            in: path
            description: Hierarchy Node ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
    /hierarchy/{id}/path:
      get:
        tags:
          - Hierarchy
        summary: >-
          Gets a Hierarchy Path by ID. The path is an array of nodes traversed
          from the root to the node specified.
        parameters:
          - name: id
            in: path
            description: Hierarchy Node ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/HierarchyNodeModel'
          '404':
            description: Not Found
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
    /bankdetails:
      get:
        tags:
          - BankDetails
        summary: Gets a list of Bank Details.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsQueryModel'
      post:
        tags:
          - BankDetails
        summary: Creates a Bank Details.
        requestBody:
          description: The value of Bank Details.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/CreateBankDetailsCommand'
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none; version=1:
                schema:
                  type: string
              application/json;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json; version=1:
                schema:
                  type: string
              application/xml; version=1:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=1:
                schema:
                  type: string
              text/plain; version=1:
                schema:
                  type: string
              text/json; version=1:
                schema:
                  type: string
    /bankdetails/{id}:
      get:
        tags:
          - BankDetails
        summary: Gets a single Bank Details by an ID.
        parameters:
          - name: id
            in: path
            description: Bank Details ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/BankDetailsModel'
      put:
        tags:
          - BankDetails
        summary: Updates Bank Details.
        parameters:
          - name: id
            in: path
            description: The ID of Bank Details to update.
            required: true
            schema:
              type: string
        requestBody:
          description: The value of Bank Details.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateBankDetailsCommand'
        responses:
          '204':
            description: Success
          '400':
            description: Bad Request
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
    /attendance/absencereasons:
      get:
        tags:
          - AbsenceReasons
        summary: Gets a list of Absence Reasons
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonQueryModel'
    /attendance/absencereasons/{id}:
      get:
        tags:
          - AbsenceReasons
        summary: Gets a single Absence Reason referenced by ID.
        parameters:
          - name: id
            in: path
            description: Absence Reason ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceReasonModel'
    /attendance/absencereasons/{id}/employees/{employeeId}:
      get:
        tags:
          - AbsenceReasons
        summary: Gets a single Employee Absence Reason referenced by ID.
        parameters:
          - name: id
            in: path
            description: Absence Reason ID.
            required: true
            schema:
              type: string
          - name: employeeId
            in: path
            description: Employee ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
    /attendance/entitlements:
      get:
        tags:
          - Entitlements
        summary: Gets a list of Entitlements.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementQueryModel'
    /attendance/entitlements/{id}:
      get:
        tags:
          - Entitlements
        summary: Gets an Entitlement by ID.
        parameters:
          - name: id
            in: path
            description: Entitlement ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/EntitlementModel'
    /attendance/absences:
      get:
        tags:
          - Absences
        summary: Gets a list of Absences.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceQueryModel'
      post:
        tags:
          - Absences
        summary: Creates a new Absence.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        requestBody:
          description: New Absence.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceCommand'
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none; version=1:
                schema:
                  type: string
              application/json;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json; version=1:
                schema:
                  type: string
              application/xml; version=1:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=1:
                schema:
                  type: string
              text/plain; version=1:
                schema:
                  type: string
              text/json; version=1:
                schema:
                  type: string
    /attendance/absences/{id}:
      get:
        tags:
          - Absences
        summary: Gets a single Absence referenced by ID.
        parameters:
          - name: id
            in: path
            description: Absence ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceModel'
      put:
        tags:
          - Absences
        summary: Update an Absence referenced by ID.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        parameters:
          - name: id
            in: path
            description: The ID of the Absence to update.
            required: true
            schema:
              type: string
        requestBody:
          description: The new state of the Absence.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceCommand'
        responses:
          '204':
            description: Success
          '400':
            description: Bad Request
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
      delete:
        tags:
          - Absences
        summary: Delete an Absence referenced by ID.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        parameters:
          - name: id
            in: path
            description: The ID of the Absence to delete.
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Success
    /attendance/absencedays:
      get:
        tags:
          - AbsenceDays
        summary: Gets a list of all Absence Days.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayQueryModel'
      post:
        tags:
          - AbsenceDays
        summary: Creates an Absence Day.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        requestBody:
          description: The values for an Absence Day.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/CreateAbsenceDayCommand'
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=minimal; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=full; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json;odata.metadata=none; version=1:
                schema:
                  type: string
              application/json;odata.streaming=true; version=1:
                schema:
                  type: string
              application/json;odata.streaming=false; version=1:
                schema:
                  type: string
              application/json; version=1:
                schema:
                  type: string
              application/xml; version=1:
                schema:
                  type: string
              application/prs.odatatestxx-odata; version=1:
                schema:
                  type: string
              text/plain; version=1:
                schema:
                  type: string
              text/json; version=1:
                schema:
                  type: string
    /attendance/absencedays/{id}:
      get:
        tags:
          - AbsenceDays
        summary: Gets a single Absence Day based on ID given.
        parameters:
          - name: id
            in: path
            description: Absence Day ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/AbsenceDayModel'
      put:
        tags:
          - AbsenceDays
        summary: Updates an Absence Day.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        parameters:
          - name: id
            in: path
            description: The ID of the Absence Day to update.
            required: true
            schema:
              type: string
        requestBody:
          description: The value of an Absence Day.
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
            application/*+json; version=1:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDayCommand'
        responses:
          '204':
            description: Success
          '400':
            description: Bad Request
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/ProblemDetails'
      delete:
        tags:
          - AbsenceDays
        summary: Deletes an Absence Day.
        description: >-
          ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
          request method is currently in beta testing.</b> To gain access to use
          this method, please contact <a
          href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
        parameters:
          - name: id
            in: path
            description: The ID of the Absence Day to delete.
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Success
    /benefits:
      get:
        tags:
          - Benefits
        summary: Gets a list of Benefits.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitQueryModel'
    /benefits/{id}:
      get:
        tags:
          - Benefits
        summary: Gets a single Benefit referenced by ID.
        parameters:
          - name: id
            in: path
            description: Benefit ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/BenefitModel'
    /publicholidays:
      get:
        tags:
          - PublicHolidays
        summary: Gets a set of Public Holidays with locations.
        parameters:
          - name: $top
            in: query
            description: >-
              Show only the first n items, maximum of 250, see [Paging -
              Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
            schema:
              maximum: 250
              minimum: 0
              type: integer
          - name: $skip
            in: query
            description: >-
              Skip the first n items, see [Paging -
              Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
            schema:
              minimum: 0
              type: integer
          - name: $filter
            in: query
            description: >-
              Filter items by property values, see
              [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
            schema:
              type: string
          - name: $select
            in: query
            description: >-
              Select properties to be returned, see
              [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - name: $orderby
            in: query
            description: >-
              Order items by property values, see
              [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
            style: form
            explode: false
            schema:
              uniqueItems: true
              type: string
          - name: $count
            in: query
            description: >-
              Include count of items, see
              [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
            schema:
              minimum: 0
              type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayQueryModel'
    /publicholidays/{id}:
      get:
        tags:
          - PublicHolidays
        summary: Gets a location based Public Holiday list by ID.
        parameters:
          - name: id
            in: path
            description: Public Holiday ID.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json;odata.metadata=minimal;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=minimal;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=minimal; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=full;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=full;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=full; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=none;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=none;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.metadata=none; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.streaming=true; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json;odata.streaming=false; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/json; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/xml; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              application/prs.odatatestxx-odata; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              text/plain; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
              text/json; version=1:
                schema:
                  $ref: '#/components/schemas/PublicHolidayModel'
  components:
    schemas:
      EmployeeQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeModel'
            nullable: true
        additionalProperties: false
      EmployeeModel:
        type: object
        properties:
          DisplayId:
            maxLength: 50
            type: string
            description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
            nullable: true
          TitleHonorific:
            maxLength: 50
            type: string
            description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
            nullable: true
          FirstName:
            maxLength: 50
            type: string
            description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
            nullable: true
          KnownAs:
            maxLength: 50
            type: string
            description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
            nullable: true
          OtherName:
            maxLength: 50
            type: string
            description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
            nullable: true
          LastName:
            maxLength: 50
            type: string
            description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
            nullable: true
          WorkingStatus:
            type: string
            description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
            nullable: true
          IsManager:
            type: boolean
            description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
            nullable: true
          NationalInsuranceNumber:
            maxLength: 50
            type: string
            description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
            nullable: true
          PayrollId:
            maxLength: 50
            type: string
            description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
            nullable: true
          TaxCode:
            maxLength: 5
            type: string
            description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
            nullable: true
          IncludeInPayroll:
            type: boolean
            description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
            nullable: true
          EmploymentStartDate:
            type: string
            description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
            format: date-time
            nullable: true
          EmploymentLeftDate:
            type: string
            description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
            format: date-time
            nullable: true
          ContinuousServiceDate:
            type: string
            description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
            format: date-time
            nullable: true
          DateOfBirth:
            type: string
            description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
            format: date-time
            nullable: true
          LastWorkingDate:
            type: string
            description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
            format: date-time
            nullable: true
          Gender:
            type: string
            description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
            nullable: true
          Ethnicity:
            maxLength: 50
            type: string
            description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
            nullable: true
          Nationality:
            maxLength: 50
            type: string
            description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
            nullable: true
          Religion:
            maxLength: 50
            type: string
            description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
            nullable: true
          LeaverReason:
            maxLength: 50
            type: string
            description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
            nullable: true
          MaritalStatus:
            maxLength: 50
            type: string
            description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
            nullable: true
          Phones:
            type: array
            items:
              $ref: '#/components/schemas/Phone'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
              Numbers</see> belonging to the Employee.
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Email'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
              Addresses</see> belonging to the Employee.
            nullable: true
          Addresses:
            type: array
            items:
              $ref: '#/components/schemas/Address'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
              belonging to the Employee.
            nullable: true
          GenderIdentity:
            maxLength: 50
            type: string
            description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
            nullable: true
          WindowsUsername:
            maxLength: 50
            type: string
            description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
            nullable: true
          Id:
            type: string
            description: >-
              This ID is generated by the Iris HR platform and does not relate to
              the Cascade Employee ID.
            nullable: true
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [Employee].[EmployeeId] <br />\r\nRead Only"
            nullable: true
          CreatedOn:
            type: string
            description: The date when the Employee was created in the Iris HR platform.
            format: date-time
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Employee was created in the Source HR System. <br />\r\nCascade Source: [Employee].[SYS_EffectiveDate] <br />\r\nRead Only"
            format: date-time
            nullable: true
          CreatedBy:
            type: string
            description: Not used as the Iris HR platform has no concept of users.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date when the Employee was created or last updated.
            format: date-time
            nullable: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The latest date when the Employee or Home Address was created or last updated in the Source HR System. <br />\r\nCascade Source: Latest of [Employee].[SYS_ModifiedDate] and [EmployeeHomeAddress].[SYS_ModifiedDate] <br />\r\nRead Only"
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: Not used as Iris HR platform has no concept of users.
            nullable: true
        additionalProperties: false
        description: An HR Employee.
      CreateEmployeeCommand:
        type: object
        properties:
          DisplayId:
            maxLength: 50
            type: string
            description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
            nullable: true
          TitleHonorific:
            maxLength: 50
            type: string
            description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
            nullable: true
          FirstName:
            maxLength: 50
            type: string
            description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
            nullable: true
          KnownAs:
            maxLength: 50
            type: string
            description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
            nullable: true
          OtherName:
            maxLength: 50
            type: string
            description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
            nullable: true
          LastName:
            maxLength: 50
            type: string
            description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
            nullable: true
          WorkingStatus:
            type: string
            description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
            nullable: true
          IsManager:
            type: boolean
            description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
            nullable: true
          NationalInsuranceNumber:
            maxLength: 50
            type: string
            description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
            nullable: true
          PayrollId:
            maxLength: 50
            type: string
            description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
            nullable: true
          TaxCode:
            maxLength: 5
            type: string
            description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
            nullable: true
          IncludeInPayroll:
            type: boolean
            description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
            nullable: true
          EmploymentStartDate:
            type: string
            description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
            format: date-time
            nullable: true
          EmploymentLeftDate:
            type: string
            description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
            format: date-time
            nullable: true
          ContinuousServiceDate:
            type: string
            description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
            format: date-time
            nullable: true
          DateOfBirth:
            type: string
            description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
            format: date-time
            nullable: true
          LastWorkingDate:
            type: string
            description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
            format: date-time
            nullable: true
          Gender:
            type: string
            description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
            nullable: true
          Ethnicity:
            maxLength: 50
            type: string
            description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
            nullable: true
          Nationality:
            maxLength: 50
            type: string
            description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
            nullable: true
          Religion:
            maxLength: 50
            type: string
            description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
            nullable: true
          LeaverReason:
            maxLength: 50
            type: string
            description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
            nullable: true
          MaritalStatus:
            maxLength: 50
            type: string
            description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
            nullable: true
          Phones:
            type: array
            items:
              $ref: '#/components/schemas/Phone'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
              Numbers</see> belonging to the Employee.
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Email'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
              Addresses</see> belonging to the Employee.
            nullable: true
          Addresses:
            type: array
            items:
              $ref: '#/components/schemas/Address'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
              belonging to the Employee.
            nullable: true
          GenderIdentity:
            maxLength: 50
            type: string
            description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
            nullable: true
          WindowsUsername:
            maxLength: 50
            type: string
            description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
            nullable: true
        additionalProperties: false
      UpdateEmployeeCommand:
        type: object
        properties:
          DisplayId:
            maxLength: 50
            type: string
            description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
            nullable: true
          TitleHonorific:
            maxLength: 50
            type: string
            description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
            nullable: true
          FirstName:
            maxLength: 50
            type: string
            description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
            nullable: true
          KnownAs:
            maxLength: 50
            type: string
            description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
            nullable: true
          OtherName:
            maxLength: 50
            type: string
            description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
            nullable: true
          LastName:
            maxLength: 50
            type: string
            description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
            nullable: true
          WorkingStatus:
            type: string
            description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
            nullable: true
          IsManager:
            type: boolean
            description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
            nullable: true
          NationalInsuranceNumber:
            maxLength: 50
            type: string
            description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
            nullable: true
          PayrollId:
            maxLength: 50
            type: string
            description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
            nullable: true
          TaxCode:
            maxLength: 5
            type: string
            description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
            nullable: true
          IncludeInPayroll:
            type: boolean
            description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
            nullable: true
          EmploymentStartDate:
            type: string
            description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
            format: date-time
            nullable: true
          EmploymentLeftDate:
            type: string
            description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
            format: date-time
            nullable: true
          ContinuousServiceDate:
            type: string
            description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
            format: date-time
            nullable: true
          DateOfBirth:
            type: string
            description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
            format: date-time
            nullable: true
          LastWorkingDate:
            type: string
            description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
            format: date-time
            nullable: true
          Gender:
            type: string
            description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
            nullable: true
          Ethnicity:
            maxLength: 50
            type: string
            description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
            nullable: true
          Nationality:
            maxLength: 50
            type: string
            description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
            nullable: true
          Religion:
            maxLength: 50
            type: string
            description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
            nullable: true
          LeaverReason:
            maxLength: 50
            type: string
            description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
            nullable: true
          MaritalStatus:
            maxLength: 50
            type: string
            description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
            nullable: true
          Phones:
            type: array
            items:
              $ref: '#/components/schemas/Phone'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
              Numbers</see> belonging to the Employee.
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Email'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
              Addresses</see> belonging to the Employee.
            nullable: true
          Addresses:
            type: array
            items:
              $ref: '#/components/schemas/Address'
            description: >-
              The <see
              cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
              belonging to the Employee.
            nullable: true
          GenderIdentity:
            maxLength: 50
            type: string
            description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
            nullable: true
          WindowsUsername:
            maxLength: 50
            type: string
            description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
            nullable: true
          Id:
            type: string
            description: "The ID of the Employee. <br />\r\nMust exist in the Employee Service."
            nullable: true
        additionalProperties: false
      Address:
        type: object
        properties:
          Ownership:
            $ref: '#/components/schemas/Ownership'
          Address1:
            maxLength: 50
            type: string
            description: "Address Line 1 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address1]"
            nullable: true
          Address2:
            maxLength: 50
            type: string
            description: "Address Line 2 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address2]"
            nullable: true
          Address3:
            maxLength: 50
            type: string
            description: "Address Line 3 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address3]"
            nullable: true
          Address4:
            maxLength: 50
            type: string
            description: "Address Line 4 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address4]"
            nullable: true
          Address5:
            maxLength: 50
            type: string
            description: "Address Line 5 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address5]"
            nullable: true
          PostCode:
            maxLength: 50
            type: string
            description: "Address UK Post Code <br />\r\nCascade Source: [EmployeeHomeAddress].[Postcode]"
            nullable: true
        additionalProperties: false
        description: The Address of a property
      Email:
        type: object
        properties:
          Ownership:
            $ref: '#/components/schemas/Ownership'
          Value:
            type: string
            description: "The Email Address. <br />\r\nCascade Source: <br />\r\nOwnership = Organization then [Employee].[WorkEmail], Maximum Length: 320<br />\r\nOwnership = Personal then [EmployeeHomeAddress].[HomeEmail], Maximum Length: 50."
            nullable: true
        additionalProperties: false
        description: An Email with Ownership.
      Phone:
        type: object
        properties:
          Ownership:
            $ref: '#/components/schemas/Ownership'
          Type:
            $ref: '#/components/schemas/PhoneType'
          Value:
            maxLength: 50
            type: string
            description: "The Phone Number value. <br />\r\nCascade Source:  <br />\r\nOwnership = Organization, Type = Landline Then [Employee].[WorkPhone] <br />\r\nOwnership = Organization, Type = Mobile Then [Employee].[WorkMobilePhoneNumber] <br />\r\nOwnership = Personal, Type = Landline Then [EmployeeHomeAddress].[Phone] <br />\r\nOwnership = Personal, Type = Mobile Then [EmployeeHomeAddress].[MobilePhone]"
            nullable: true
        additionalProperties: false
        description: A Phone Number with Ownership and Type properties
      PhoneType:
        enum:
          - Mobile
          - Landline
        type: string
        description: The Type of Phone
      Ownership:
        enum:
          - Personal
          - Organization
        type: string
        description: The Owner of the entity
      JobQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/JobModel'
            nullable: true
        additionalProperties: false
      JobModel:
        type: object
        properties:
          JobTitle:
            maxLength: 100
            type: string
            description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
            nullable: true
          Classification:
            maxLength: 50
            type: string
            description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
            nullable: true
          StartDate:
            type: string
            description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
            format: date-time
          EndDate:
            type: string
            description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
            format: date-time
            nullable: true
          WorkingCalendar:
            maxLength: 50
            type: string
            description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
            nullable: true
          LineManagerId:
            type: string
            description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
            nullable: true
          HierarchyNodeId:
            type: string
            description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
            nullable: true
          Active:
            type: boolean
            description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          Salary:
            type: number
            description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
            format: double
            nullable: true
          EmployeeId:
            type: string
            description: "The ID of the Employee of the Job. <br />\r\nMust exist in Employee Service."
            nullable: true
          Contract:
            maxLength: 50
            type: string
            description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
            nullable: true
          PayFrequency:
            maxLength: 50
            type: string
            description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
            nullable: true
          PayBasis:
            maxLength: 50
            type: string
            description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
            nullable: true
          FullTimeEquivalent:
            type: number
            description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
            format: double
            nullable: true
          Position:
            maxLength: 200
            type: string
            description: "The readonly property of employee position. <br />\r\nCascade Source: [EmployeeJobs].[Postid]."
            nullable: true
            readOnly: true
          ChangeReason:
            maxLength: 50
            type: string
            description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
            nullable: true
          PublicHoliday:
            maxLength: 50
            type: string
            description: "The readonly property of public holiday. <br />\r\nCascade Soruce: [EmployeeJobs].[HolidayLocation]."
            nullable: true
            readOnly: true
          PayGrade:
            maxLength: 50
            type: string
            description: "The readonly property of pay grade.  <br />\r\nCascade Source: [EmployeeJobs].[PayGrade]."
            nullable: true
            readOnly: true
          SpinalPoint:
            type: integer
            description: "The readonly property of pay spinal point. <br />\r\nCascade Source: [EmployeeJobs].[SpinalPoint]."
            format: int32
            nullable: true
            readOnly: true
          NextIncrementDate:
            type: string
            description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
            format: date-time
            nullable: true
          TimesheetLocation:
            maxLength: 50
            type: string
            description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
            nullable: true
          TimesheetRuleSet:
            maxLength: 50
            type: string
            description: "The readonly property of time sheet rule set. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetRuleSetID]."
            nullable: true
            readOnly: true
          TimesheetLunchDuration:
            type: string
            description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
            nullable: true
          AutoEnrolmentProfile:
            type: string
            description: "The readonly property of automatic enrolment profiles. <br />\r\nCascade Source: [EmployeeJobs].[AutoEnrolmentProfile]."
            nullable: true
            readOnly: true
          ExpenseSubmissionFrequency:
            maxLength: 50
            type: string
            description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
            nullable: true
          JobFamily:
            maxLength: 50
            type: string
            description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
            nullable: true
          ApprenticeUnder25:
            type: boolean
            description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
            nullable: true
          ApprenticeshipEndDate:
            type: string
            description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
            format: date-time
            nullable: true
          ContractEndDate:
            type: string
            description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
            format: date-time
            nullable: true
          ReportsToPost:
            maxLength: 200
            type: string
            description: "The readonly property of reports to post. <br />\r\nCascade Source: [EmployeeJobs].[ReportsToPost]."
            nullable: true
            readOnly: true
          NormalHours:
            type: number
            description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
            format: double
            nullable: true
          RealTimeInformationIrregularFrequency:
            maxLength: 50
            type: string
            description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
            nullable: true
          NoticePeriod:
            maxLength: 50
            type: string
            description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
            nullable: true
          Id:
            type: string
            description: >-
              This ID is generated by the Iris Hr platform and does not relate to
              the Cascade ID.
            nullable: true
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeJobs].[Ruid] <br />\r\nRead Only"
            nullable: true
          CreatedOn:
            type: string
            description: The date when the Job was created in the Iris Hr platform.
            format: date-time
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Job was created in the Source HR System. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate] <br />\r\nNote: In Cascade this value is also the Start Date of the Job and can changed at any time. <br />\r\nRead Only"
            format: date-time
            nullable: true
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris Hr platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date when the Job was created or last updated.
            format: date-time
            nullable: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The date when the Job was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeJobs].[SYS_ModifiedDate] <br />\r\nRead Only"
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: Not used as Iris Hr platform has no concept of users at the moment.
            nullable: true
        additionalProperties: false
        description: An HR Employee's Job.
      CreateJobCommand:
        type: object
        properties:
          JobTitle:
            maxLength: 100
            type: string
            description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
            nullable: true
          Classification:
            maxLength: 50
            type: string
            description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
            nullable: true
          StartDate:
            type: string
            description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
            format: date-time
          EndDate:
            type: string
            description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
            format: date-time
            nullable: true
          WorkingCalendar:
            maxLength: 50
            type: string
            description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
            nullable: true
          LineManagerId:
            type: string
            description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
            nullable: true
          HierarchyNodeId:
            type: string
            description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
            nullable: true
          Active:
            type: boolean
            description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          Salary:
            type: number
            description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
            format: double
            nullable: true
          EmployeeId:
            type: string
            description: "The ID of the Employee of the Job. <br />\r\nMust exist in Employee Service."
            nullable: true
          Contract:
            maxLength: 50
            type: string
            description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
            nullable: true
          PayFrequency:
            maxLength: 50
            type: string
            description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
            nullable: true
          PayBasis:
            maxLength: 50
            type: string
            description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
            nullable: true
          FullTimeEquivalent:
            type: number
            description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
            format: double
            nullable: true
          ChangeReason:
            maxLength: 50
            type: string
            description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
            nullable: true
          NextIncrementDate:
            type: string
            description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
            format: date-time
            nullable: true
          TimesheetLocation:
            maxLength: 50
            type: string
            description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
            nullable: true
          TimesheetLunchDuration:
            type: string
            description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
            nullable: true
          ExpenseSubmissionFrequency:
            maxLength: 50
            type: string
            description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
            nullable: true
          JobFamily:
            maxLength: 50
            type: string
            description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
            nullable: true
          ApprenticeUnder25:
            type: boolean
            description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
            nullable: true
          ApprenticeshipEndDate:
            type: string
            description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
            format: date-time
            nullable: true
          ContractEndDate:
            type: string
            description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
            format: date-time
            nullable: true
          NormalHours:
            type: number
            description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
            format: double
            nullable: true
          RealTimeInformationIrregularFrequency:
            maxLength: 50
            type: string
            description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
            nullable: true
          NoticePeriod:
            maxLength: 50
            type: string
            description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
            nullable: true
        additionalProperties: false
      UpdateJobCommand:
        type: object
        properties:
          JobTitle:
            maxLength: 100
            type: string
            description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
            nullable: true
          Classification:
            maxLength: 50
            type: string
            description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
            nullable: true
          StartDate:
            type: string
            description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
            format: date-time
          EndDate:
            type: string
            description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
            format: date-time
            nullable: true
          WorkingCalendar:
            maxLength: 50
            type: string
            description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
            nullable: true
          LineManagerId:
            type: string
            description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
            nullable: true
          HierarchyNodeId:
            type: string
            description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
            nullable: true
          Active:
            type: boolean
            description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          Salary:
            type: number
            description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
            format: double
            nullable: true
          Contract:
            maxLength: 50
            type: string
            description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
            nullable: true
          PayFrequency:
            maxLength: 50
            type: string
            description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
            nullable: true
          PayBasis:
            maxLength: 50
            type: string
            description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
            nullable: true
          FullTimeEquivalent:
            type: number
            description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
            format: double
            nullable: true
          ChangeReason:
            maxLength: 50
            type: string
            description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
            nullable: true
          NextIncrementDate:
            type: string
            description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
            format: date-time
            nullable: true
          TimesheetLocation:
            maxLength: 50
            type: string
            description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
            nullable: true
          TimesheetLunchDuration:
            type: string
            description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
            nullable: true
          ExpenseSubmissionFrequency:
            maxLength: 50
            type: string
            description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
            nullable: true
          CostCentre:
            maxLength: 50
            type: string
            description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
            nullable: true
          JobFamily:
            maxLength: 50
            type: string
            description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
            nullable: true
          ApprenticeUnder25:
            type: boolean
            description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
            nullable: true
          ApprenticeshipEndDate:
            type: string
            description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
            format: date-time
            nullable: true
          ContractEndDate:
            type: string
            description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
            format: date-time
            nullable: true
          NormalHours:
            type: number
            description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
            format: double
            nullable: true
          RealTimeInformationIrregularFrequency:
            maxLength: 50
            type: string
            description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
            nullable: true
          NoticePeriod:
            maxLength: 50
            type: string
            description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
            nullable: true
          Id:
            type: string
            description: "The ID of the Job to update. <br />\r\nMust exist in the Jobs Service."
            nullable: true
        additionalProperties: false
      ProblemDetails:
        type: object
        properties:
          type:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          status:
            type: integer
            format: int32
            nullable: true
          detail:
            type: string
            nullable: true
          instance:
            type: string
            nullable: true
        additionalProperties: {}
      HierarchyNodeQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/HierarchyNodeModel'
            nullable: true
        additionalProperties: false
      HierarchyNodeModel:
        type: object
        properties:
          ParentId:
            type: string
            description: "The Parent ID of this Hierarchy node. <br />\r\nMust exist in the Hierarchy Service."
            nullable: true
          Level:
            type: integer
            description: "The Level of the Hierarchy node. <br />\r\nCascade Source: [ValidHierarchyX].[level]"
            format: int32
          Title:
            type: string
            description: "The Title of this Hierarchy node. <br />\r\nCascade Source: [ValidHierarchyX].[name]"
            nullable: true
          Disabled:
            type: boolean
            description: "Hierarchy node is disabled. <br />\r\nCascade Source: [ValidHierarchyX].[disabled]"
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [ValidHierarchyX].[HierarchyNode] <br />\r\nRead Only"
            nullable: true
            readOnly: true
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Hierarchy node record was created in the Source HR System. <br />\r\nCascade Source: [ValidHierarchyX].[createdon]"
            format: date-time
            nullable: true
            readOnly: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The date when the Hierarchy node record was created or last updated in the Source HR System. <br />\r\nCascade Source: [ValidHierarchyX].[disabledon] if exists else [ValidHierachyX].[createdon]"
            format: date-time
            nullable: true
            readOnly: true
          Id:
            type: string
            description: "This ID of the Hierarchy node. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date time when the Hierarchy node was created in the Iris HR
              platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date time when the Hierarchy node was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
        description: The Hierarchy node.
      BankDetailsQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/BankDetailsModel'
            nullable: true
        additionalProperties: false
      BankDetailsModel:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
            nullable: true
          BankName:
            maxLength: 50
            type: string
            description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
            nullable: true
          BankAddress:
            $ref: '#/components/schemas/BankAddress'
          AccountName:
            maxLength: 50
            type: string
            description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
            nullable: true
          AccountNumber:
            maxLength: 50
            type: string
            description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
            nullable: true
          SortCode:
            maxLength: 50
            type: string
            description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
            nullable: true
          RollNumber:
            maxLength: 50
            type: string
            description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
            nullable: true
          SourceSystemId:
            type: string
            description: "The Internal ID for the source HR Product. <br />\r\nCascade Source: [EmployeeBank].[RUID]"
            nullable: true
            readOnly: true
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Bank details record was created in the Source HR System. <br />\r\nCascade Source: [EmployeeBank].[SYS_EffectiveDate]"
            format: date-time
            nullable: true
            readOnly: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The latest date when the Bank details record was created or last updated in the Source HR System. <br />\r\nCascade Source: Latest of [EmployeeBank].[SYS_ModifiedDate]"
            format: date-time
            nullable: true
            readOnly: true
          Id:
            type: string
            description: "The ID of Bank Details. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date time when the Bank Details was created in the Iris HR
              platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date time when the Bank Details was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
        description: An HR Employee's Bank Details.
      BankAddress:
        type: object
        properties:
          Address1:
            maxLength: 50
            type: string
            description: "The first line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address1]"
            nullable: true
          Address2:
            maxLength: 50
            type: string
            description: "The second line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address2]"
            nullable: true
          Address3:
            maxLength: 50
            type: string
            description: "The third line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address3]"
            nullable: true
          Address4:
            maxLength: 50
            type: string
            description: "The fourth line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address4]"
            nullable: true
          PostCode:
            maxLength: 50
            type: string
            description: "Post Code of the Bank <br />\r\nCascade Source: [EmployeeBank].[Postcode]"
            nullable: true
        additionalProperties: false
        description: Bank Address
      CreateBankDetailsCommand:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
            nullable: true
          BankName:
            maxLength: 50
            type: string
            description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
            nullable: true
          BankAddress:
            $ref: '#/components/schemas/BankAddress'
          AccountName:
            maxLength: 50
            type: string
            description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
            nullable: true
          AccountNumber:
            maxLength: 50
            type: string
            description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
            nullable: true
          SortCode:
            maxLength: 50
            type: string
            description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
            nullable: true
          RollNumber:
            maxLength: 50
            type: string
            description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
            nullable: true
        additionalProperties: false
      UpdateBankDetailsCommand:
        type: object
        properties:
          BankName:
            maxLength: 50
            type: string
            description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
            nullable: true
          BankAddress:
            $ref: '#/components/schemas/BankAddress'
          AccountName:
            maxLength: 50
            type: string
            description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
            nullable: true
          AccountNumber:
            maxLength: 50
            type: string
            description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
            nullable: true
          SortCode:
            maxLength: 50
            type: string
            description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
            nullable: true
          RollNumber:
            maxLength: 50
            type: string
            description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
            nullable: true
          Id:
            type: string
            description: "The ID of Bank Details to update. <br />\r\nMust exist in Bank Details Service."
            nullable: true
        additionalProperties: false
      AbsenceReasonQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/AbsenceReasonModel'
            nullable: true
        additionalProperties: false
      AbsenceReasonModel:
        type: object
        properties:
          ParentId:
            type: string
            description: "The Parent ID of this Absence Reason. <br />\r\nCascade Source: [ValidAttendanceTypes].[Key]."
            nullable: true
          Name:
            type: string
            description: "The Name of this Absence Reason. <br />\r\nCascade Source: <br />\r\n[ValidAttendanceCategory].[Category] when ParentID is null; <br />\r\n[ValidAttendanceTypes].[Type] when ParentID is not null."
            nullable: true
          Holiday:
            type: boolean
            description: "This Absence Reason represents a Holiday. <br />\r\nCascade Source: [ValidAttendanceCategory].[Holiday]"
            nullable: true
          Absent:
            type: boolean
            description: "This Absence Reason represents an Absence. <br />\r\nCascade Source: [ValidAttendanceCategory].[Absent]"
            nullable: true
          Sick:
            type: boolean
            description: "This Absence Reason represents a Sickness. <br />\r\nCascade Source: [ValidAttendanceCategory].[Sick]"
            nullable: true
          StatutoryMaternityPayApplicable:
            type: boolean
            description: "This Absence Reason has Statutory Maternity Pay. <br />\r\nCascade Source: [ValidAttendanceCategory].[SMPApplicable]"
            nullable: true
          StudyExam:
            type: boolean
            description: "This Absence Reason represents an absence for Study or Exam. <br />\r\nCascade Source: [ValidAttendanceCategory].[Code] = 96 or 97"
            nullable: true
          FlexiLeave:
            type: boolean
            description: "This Absence Reason represents Flexi Leave. <br />\r\nCascade Source: [ValidAttendanceCategory].[Code] = 11"
            nullable: true
          Id:
            type: string
            description: "The ID of the Absence Reason. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date time when the Absence Reason was created in the Iris HR
              platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date time when the Absence Reason was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
        description: An HR Attendance Absence Reason.
      EmployeeAbsenceReasonModel:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The Parent ID of this Absence Reason. <br />\r\nCascade Source: [ValidAttendanceTypes].[Key]."
            nullable: true
          AbsenceReasonId:
            type: string
            description: "The Name of this Absence Reason. <br />\r\nCascade Source: <br />\r\n[ValidAttendanceCategory].[Category] when ParentID is null; <br />\r\n[ValidAttendanceTypes].[Type] when ParentID is not null."
            nullable: true
          ShowInDays:
            type: boolean
            description: >-
              The Absence Reason For The Employee should be recorded in Days or
              not.
          Id:
            type: string
            description: The ID of the Employee Absence Reason.
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date time when the Employee Absence Reason was created in the
              Iris HR platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: >-
              The date time when the Employee Absence Reason was created or last
              updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
      EntitlementQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/EntitlementModel'
            nullable: true
        additionalProperties: false
      EntitlementModel:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
            nullable: true
          AbsenceReasonId:
            type: string
            description: "The Absence Reason ID. <br />\r\nMust exist in the Absence Reason Service."
            nullable: true
          EntitlementYearName:
            type: string
            description: "The Entitlement Year Name. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[EntitlementYearName]"
            nullable: true
          Open:
            type: boolean
            description: "The status of Open indicates whether the entitlement is active. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Open]"
          StartDate:
            type: string
            description: "The Start Date of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[StartDate]"
            format: date-time
          EndDate:
            type: string
            description: "The End Date of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[EndDate]"
            format: date-time
          Narrative:
            type: string
            description: "The optional description of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Narrative]"
            nullable: true
          BaseDays:
            type: number
            description: "The number of Base Entitlement Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BaseEntitlementDays]"
            format: double
          BaseMinutes:
            type: integer
            description: "The number of Base Entitlement Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BaseEntitlement]"
            format: int32
            nullable: true
          CarryDays:
            type: number
            description: "The number of Carry Days allowed. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryDays]"
            format: double
          CarryMinutes:
            type: integer
            description: "The number of Carry Minutes allowed. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Carry]"
            format: int32
            nullable: true
          CarryUseByDate:
            type: string
            description: "The date when Carry Days should be used by. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryUsebyDays]"
            format: date-time
            nullable: true
          CarryLostDays:
            type: number
            description: "The number of Carry Days lost. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryLostDays]"
            format: double
            nullable: true
          CarryLostMinutes:
            type: integer
            description: "The number of Carry Minutes lost. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryLost]"
            format: int32
            nullable: true
          ManualAdjustmentDays:
            type: number
            description: "The number of Manual Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ManualAdjustmentDays]"
            format: double
          ManualAdjustmentMinutes:
            type: integer
            description: "The number of Manual Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ManualAdjustment]"
            format: int32
            nullable: true
          ServiceLengthAdjustmentDays:
            type: number
            description: "The number of Adjustment Days due to service length. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ServiceLengthAdjustmentDays]"
            format: double
          ServiceLengthAdjustmentMinutes:
            type: integer
            description: "The number of Adjustment Minutes due to service length. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ServiceLengthAdjustment]"
            format: int32
            nullable: true
          NewStarterAdjustmentDays:
            type: number
            description: "The number of New Starter Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[NewStarterAdjustmentDays]"
            format: double
          NewStarterAdjustmentMinutes:
            type: integer
            description: "The number of New Starter Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[NewStarterAdjustment]"
            format: int32
            nullable: true
          LeaverAdjusmentDays:
            type: number
            description: "[Obsolete] The number of Leaver Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustmentDays]"
            format: double
          LeaverAdjusmentMinutes:
            type: integer
            description: "[Obsolete] The number of Leaver Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustment]"
            format: int32
            nullable: true
          LeaverAdjustmentDays:
            type: number
            description: "The number of Leaver Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustmentDays]"
            format: double
            nullable: true
          LeaverAdjustmentMinutes:
            type: integer
            description: "The number of Leaver Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustment]"
            format: int32
            nullable: true
          PartTimeAdjustmentDays:
            type: number
            description: "The number of Part Time Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[PTProrataDays]"
            format: double
          PartTimeAdjustmentMinutes:
            type: integer
            description: "The number of Part Time Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[PTProrata]"
            format: int32
            nullable: true
          BankHolidayAdjustmentDays:
            type: number
            description: "The number of Bank Holiday Adjustment Day. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BHProrataDays]"
            format: double
          BankHolidayAdjustmentMinutes:
            type: integer
            description: "The number of Bank Holiday Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BHProrata]"
            format: int32
            nullable: true
          BuySellDays:
            type: number
            description: "The number of Buy Sell Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BuySellDays]"
            format: double
          BuySellMinutes:
            type: integer
            description: "The number of Buy Sell Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BuySell]"
            format: int32
            nullable: true
          TotalEntitlementDays:
            type: number
            description: "The total Entitlement in days. <br />\r\n= BaseDays <br />\r\n    + ServiceLengthAdjustmentDays <br />\r\n    + NewStarterAdjustmentDays <br />\r\n    + ManualAdjustmentDays <br />\r\n    + CarryDays <br />\r\n    + PartTimeAdjustmentDays <br />\r\n    + BankHolidayAdjustmentDays <br />\r\n    + BuySellDays <br />\r\n    - CarryLostDays <br />\r\n    + LeaverAdjustmentDays"
            format: double
            nullable: true
          TotalEntitlementMinutes:
            type: integer
            description: "The total Entitlement in minutes. <br />\r\n= BaseMinutes <br />\r\n    + ServiceLengthAdjustmentMinutes <br />\r\n    + NewStarterAdjustmentMinutes <br />\r\n    + ManualAdjustmentMinutes <br />\r\n    + CarryMinutes <br />\r\n    + PartTimeAdjustmentMinutes <br />\r\n    + BankHolidayAdjustmentMinutes <br />\r\n    + BuySellMinutes <br />\r\n    - CarryLostMinutes <br />\r\n    + LeaverAdjustmentMinutes"
            format: int32
            nullable: true
          SourceSystemId:
            type: string
            description: "The Internal ID of the Source HR Product. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Key]"
            nullable: true
            readOnly: true
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Entitlement record was created in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[SYS_EffectiveDate]"
            format: date-time
            nullable: true
            readOnly: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The date when the Entitlement record was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[SYS_ModifiedDate]"
            format: date-time
            nullable: true
            readOnly: true
          Id:
            type: string
            description: >-
              This ID is generated by the Iris HR platform and does not relate to
              the Cascade Employee Entitlement ID.
            nullable: true
          CreatedOn:
            type: string
            description: The date when the Entitlement was created in the Iris HR platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date when the Entitlement was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
        description: An Employee's Attendance Entitlement.
      AbsenceQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              type: array
              items:
                $ref: '#/components/schemas/AbsenceModel'
            nullable: true
        additionalProperties: false
      AbsenceModel:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service. <br />\r\nCannot be updated once Absence created."
            nullable: true
          AbsenceReasonId:
            type: string
            description: "The Absence Reason ID. <br />\r\nMust exist in the Attendance Absence Reasons Service. <br />\r\nCannot be updated once Absence created."
            nullable: true
          Narrative:
            type: string
            description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
            nullable: true
          StartDate:
            type: string
            description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
            format: date-time
            nullable: true
          EndDate:
            type: string
            description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
            format: date-time
            nullable: true
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br /> \r\nCascade Source: [EmployeeAttendance].[RUID] <br />"
            nullable: true
            readOnly: true
          SourceSystemCreatedOn:
            type: string
            description: "The date when the Absence was created in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendance].[SYS_EffectiveDate] <br />"
            format: date-time
            nullable: true
            readOnly: true
          SourceSystemLastModifiedOn:
            type: string
            description: "The date when the Absence was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendance].[SYS_ModifiedDate] <br />"
            format: date-time
            nullable: true
            readOnly: true
          Id:
            type: string
            description: >-
              This ID is generated by the Iris HR platform and does not relate to
              the Cascade ID.
            nullable: true
          CreatedOn:
            type: string
            description: The date when the Absence was created in the Iris HR platform.
            format: date-time
          CreatedBy:
            type: string
            description: Not used as the Iris HR platform has no concept of users.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date when the Absence was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: Not used as the Iris HR platform has no concept of users.
            nullable: true
        additionalProperties: false
        description: An HR Employee's Attendance Absence.
      CreateAbsenceCommand:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service. <br />\r\nCannot be updated once Absence created."
            nullable: true
          AbsenceReasonId:
            type: string
            description: "The Absence Reason ID. <br />\r\nMust exist in the Attendance Absence Reasons Service. <br />\r\nCannot be updated once Absence created."
            nullable: true
          Narrative:
            type: string
            description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
            nullable: true
          StartDate:
            type: string
            description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
            format: date-time
            nullable: true
          EndDate:
            type: string
            description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
            format: date-time
            nullable: true
        additionalProperties: false
      UpdateAbsenceCommand:
        type: object
        properties:
          Narrative:
            type: string
            description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
            nullable: true
          StartDate:
            type: string
            description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
            format: date-time
            nullable: true
          EndDate:
            type: string
            description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
            format: date-time
            nullable: true
          Id:
            type: string
            description: "The ID of the Absence. <br />\r\nMust exist in the Attendance Absences Service."
            nullable: true
        additionalProperties: false
      AbsenceDayQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/AbsenceDayModel'
            nullable: true
        additionalProperties: false
      AbsenceDayModel:
        type: object
        properties:
          AbsenceId:
            type: string
            description: "The ID of the parent Absence. <br />\r\nMust exist in the Attendance Absence Service."
            nullable: true
          EmployeeId:
            type: string
            description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service."
            nullable: true
          Date:
            type: string
            description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
            format: date-time
          DurationDays:
            type: number
            description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
            format: double
          DurationMinutes:
            type: integer
            description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
            format: int32
            nullable: true
          DayPart:
            $ref: '#/components/schemas/DayPart'
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Sequence] <br />\r\nRead Only"
            nullable: true
            readOnly: true
          Id:
            type: string
            description: "The ID of the Absence Day. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date time when the Absence Day was created in the Iris HR
              platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date time when the Absence Day was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            nullable: true
        additionalProperties: false
        description: An Attendance Absence Day
      DayPart:
        enum:
          - AM
          - PM
          - AllDay
          - None
        type: string
        description: The parts of days.
      CreateAbsenceDayCommand:
        type: object
        properties:
          AbsenceId:
            type: string
            description: "The ID of the parent Absence. <br />\r\nMust exist in the Attendance Absence Service."
            nullable: true
          EmployeeId:
            type: string
            description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service."
            nullable: true
          Date:
            type: string
            description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
            format: date-time
          DurationDays:
            type: number
            description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
            format: double
          DurationMinutes:
            type: integer
            description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
            format: int32
            nullable: true
          DayPart:
            $ref: '#/components/schemas/DayPart'
        additionalProperties: false
      UpdateAbsenceDayCommand:
        type: object
        properties:
          Date:
            type: string
            description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
            format: date-time
          DurationDays:
            type: number
            description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
            format: double
          DurationMinutes:
            type: integer
            description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
            format: int32
            nullable: true
          DayPart:
            $ref: '#/components/schemas/DayPart'
          Id:
            type: string
            description: "The ID of the Absence Day. <br />\r\nMust exist in the Attendance Absence Day Service."
            nullable: true
        additionalProperties: false
      BenefitQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/BenefitModel'
            nullable: true
        additionalProperties: false
      BenefitModel:
        type: object
        properties:
          EmployeeId:
            type: string
            description: "The EmployeeId. <br />\r\nCascade Source: [EmployeeBenefits].[EmployeeId]"
            nullable: true
          Type:
            maxLength: 500
            type: string
            description: "The Type. <br />\r\nCascade Source: [EmployeeBenefits].[Code]"
            nullable: true
          Description:
            type: string
            description: "The Description. <br />\r\nCascade Source: [EmployeeBenefits].[Notes]"
            nullable: true
          Value:
            type: number
            description: "The Value. <br />\r\nCascade Source: [EmployeeBenefits].[Value]"
            format: double
            nullable: true
          StartDate:
            type: string
            description: "The Start Date. <br />\r\nCascade Source: [EmployeeBenefits].[StartDate]"
            format: date-time
            nullable: true
          EndDate:
            type: string
            description: "The End Date. <br />\r\nCascade Source: [EmployeeBenefits].[EndDate]"
            format: date-time
            nullable: true
          P11DValue:
            type: number
            description: "The P11DValue. <br />\r\nCascade Source: [EmployeeBenefits].[P11DValueCurrency]"
            format: double
            nullable: true
          Suspended:
            type: boolean
            description: "The Suspended value. <br />\r\nCascade Source: [EmployeeBenefits].[Suspended]"
          Id:
            type: string
            description: "The ID of the Benefit. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
            nullable: true
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeBenefits].[Ruid] <br />\r\nRead Only"
            nullable: true
          CreatedOn:
            type: string
            description: The date time when the Benefit was created in the Iris HR platform.
            format: date-time
          CreatedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
          LastModifiedOn:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: >-
              Not used as the Iris HR platform has no concept of users at the
              moment.
            nullable: true
        additionalProperties: false
        description: An HR Employee's Benefits.
      PublicHolidayQueryModel:
        type: object
        properties:
          ODataContext:
            type: string
            nullable: true
          ODataCount:
            type: integer
            format: int32
            nullable: true
          ODataNextLink:
            type: string
            nullable: true
          Value:
            type: array
            items:
              $ref: '#/components/schemas/PublicHolidayModel'
            nullable: true
        additionalProperties: false
      PublicHolidayModel:
        type: object
        properties:
          Description:
            type: string
            description: "The description of the Public Holiday. <br />\r\nThis is usually the location of the Public Holiday. <br />\r\nCascade Source: [ValidBankHolidays].[HolidayLocation]"
            nullable: true
          Days:
            type: array
            items:
              $ref: '#/components/schemas/PublicHolidayDay'
            description: A list of Public Holiday Days.
            nullable: true
          Id:
            type: string
            description: >-
              This ID is generated by the Iris Hr platform and does not relate to
              the Cascade ID.
            nullable: true
          CreatedOn:
            type: string
            description: >-
              The date when the Public Holiday was created in the Iris HR
              platform.
            format: date-time
          CreatedBy:
            type: string
            description: Not used as the Iris HR platform has no concept of users.
            nullable: true
          LastModifiedOn:
            type: string
            description: The date when the Public Holiday was created or last updated.
            format: date-time
            nullable: true
          LastModifiedBy:
            type: string
            description: Not used as the Iris HR platform has no concept of users.
            nullable: true
        additionalProperties: false
      PublicHolidayDay:
        type: object
        properties:
          Description:
            type: string
            description: "The description of the Public Holiday Day. <br />\r\nCascade Source: [ValidBankHolidays].[Description]"
            nullable: true
          Date:
            type: string
            description: "The date of the Public Holiday Day. <br />\r\nCascade Source: [ValidBankHolidays].[Date]"
            format: date-time
          SourceSystemId:
            type: string
            description: "Source HR System Id. <br />\r\nCascade Source: [ValidBankHolidays].[key] <br />\r\nRead Only"
            nullable: true
        additionalProperties: false
    securitySchemes:
      Bearer:
        type: oauth2
        description: This API uses OAuth 2 with the Client Credentials grant flow.
        flows:
          clientCredentials:
            tokenUrl: https://api.iris.co.uk/oauth2/v1/token
            scopes: {}
  security:
    - Bearer: []
konfigCliVersion: 1.38.61
