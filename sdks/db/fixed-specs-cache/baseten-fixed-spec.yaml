publishJson:
  company: Baseten
  serviceName: false
  sdkName: baseten-{language}-sdk
  clientName: Baseten
  metaDescription: >-
    At Baseten we provide all the infrastructure you need to deploy and serve ML
    models performantly, scalably, and cost-efficiently.Get started in minutes,
    and avoid getting tangled in complex deployment processes. You can deploy
    best-in-class open-source models and take advantage of optimized serving for
    your own models.We also utilize horizontally scalable services that take you
    from prototype to production, with light-speed inference on infra that
    autoscales with your traffic.Best in class doesn't mean breaking the bank.
    Run your models on the best infrastructure without running up costs by
    taking advantage of our scaled-to-zero feature.
  apiStatusUrls: inherit
  homepage: baseten.co
  developerDocumentation: docs.baseten.co/welcome
  categories:
    - ai
    - ml
    - developer_tools
    - automation
    - collaboration
    - media
    - cloud
    - open_source
    - machine_learning
    - deployment
    - scalability
    - cost_efficiency
    - llm
    - stable_diffusion
    - tts
    - text_to_audio
    - text_to_speech
    - text_to_image
    - image_to_video
    - image_classification
    - text_embeddings
    - audio_to_text
    - image_to_text
rawSpecString: |
  info:
    description: REST API for management of Baseten resources
    title: Baseten management API
    version: 1.0.0
  servers:
    - url: https://api.baseten.co
  security:
    - ApiKeyAuth: []
  paths:
    /v1/secrets:
      get:
        summary: Gets all secrets
        x-codeSamples:
          - lang: bash
            source: |
              curl --request GET \ 
              --url https://api.baseten.co/v1/secrets \ 
              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: |-
              import requests
              import os
              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")
              url = "https://api.baseten.co/v1/secrets"

              headers = {"Authorization": f"Api-Key {API_KEY}"}

              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )

              print(response.text)
        responses:
          '200':
            description: A list of Baseten secrets.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SecretsV1'
      post:
        summary: Upserts a secret
        x-codeSamples:
          - lang: bash
            source: |-
              curl --request POST \ 
              --url https://api.baseten.co/v1/secrets \ 
              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
              --data '{
                "name": "my_secret",
                "value": "my_secret_value"
              }'
          - lang: python
            source: |-
              import requests
              import os
              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")
              url = "https://api.baseten.co/v1/secrets"

              headers = {"Authorization": f"Api-Key {API_KEY}"}

              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={'name': 'my_secret', 'value': 'my_secret_value'}
              )

              print(response.text)
        description: >-
          Creates a new secret or updates an existing secret if one with the
          provided name already exists. The name and creation date of the created
          or updated secret is returned.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertSecretRequestV1'
          required: true
        responses:
          '200':
            description: >-
              A Baseten secret. Note that we do not support retrieving secret
              values.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SecretV1'
    /v1/models:
      get:
        summary: Gets all models
        x-codeSamples:
          - lang: bash
            source: |
              curl --request GET \ 
              --url https://api.baseten.co/v1/models \ 
              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: |-
              import requests
              import os
              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")
              url = "https://api.baseten.co/v1/models"

              headers = {"Authorization": f"Api-Key {API_KEY}"}

              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )

              print(response.text)
        responses:
          '200':
            description: A list of models.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelsV1'
    /v1/models/{model_id}:
      get:
        summary: Gets a model by ID
        x-codeSamples:
          - lang: bash
            source: |
              curl --request GET \ 
              --url https://api.baseten.co/v1/models/{model_id} \ 
              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: |-
              import requests
              import os
              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")
              url = "https://api.baseten.co/v1/models/{model_id}"

              headers = {"Authorization": f"Api-Key {API_KEY}"}

              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )

              print(response.text)
        responses:
          '200':
            description: A model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ModelV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments:
      get:
        summary: Gets all deployments of a model
        x-codeSamples:
          - lang: bash
            source: |
              curl --request GET \ 
              --url https://api.baseten.co/v1/models/{model_id}/deployments \ 
              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: |-
              import requests
              import os
              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")
              url = "https://api.baseten.co/v1/models/{model_id}/deployments"

              headers = {"Authorization": f"Api-Key {API_KEY}"}

              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )

              print(response.text)
        responses:
          '200':
            description: A list of deployments of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentsV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/development:
      get:
        summary: Gets a model's development deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request GET \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/development
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/development"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Gets a model's development deployment and returns the deployment.
        responses:
          '200':
            description: A deployment of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/production:
      get:
        summary: Gets a model's production deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request GET \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/production
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/production"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Gets a model's production deployment and returns the deployment.
        responses:
          '200':
            description: A deployment of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/{deployment_id}:
      get:
        summary: Gets a model's deployment by id
        x-codeSamples:
          - lang: bash
            source: >
              curl --request GET \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "GET",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Gets a model's deployment by id and returns the deployment.
        responses:
          '200':
            description: A deployment of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
        - $ref: '#/components/parameters/deployment_id'
    /v1/models/{model_id}/deployments/development/autoscaling_settings:
      patch:
        summary: Updates a development deployment's autoscaling settings
        x-codeSamples:
          - lang: bash
            source: >-
              curl --request PATCH \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/development/autoscaling_settings
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 

              --data '{
                "min_replica": 0,
                "max_replica": 7,
                "autoscaling_window": 600,
                "scale_down_delay": 120,
                "concurrency_target": 2
              }'
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/development/autoscaling_settings"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "PATCH",
                  url,
                  headers=headers,
                  data={'min_replica': 0, 'max_replica': 7, 'autoscaling_window': 600, 'scale_down_delay': 120, 'concurrency_target': 2}
              )


              print(response.text)
        description: >-
          Updates a development deployment's autoscaling settings and returns the
          update status.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAutoscalingSettingsV1'
          required: true
        responses:
          '200':
            description: The response to a request to update autoscaling settings.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateAutoscalingSettingsResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/production/autoscaling_settings:
      patch:
        summary: Updates a production deployment's autoscaling settings
        x-codeSamples:
          - lang: bash
            source: >-
              curl --request PATCH \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/production/autoscaling_settings
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 

              --data '{
                "min_replica": 0,
                "max_replica": 7,
                "autoscaling_window": 600,
                "scale_down_delay": 120,
                "concurrency_target": 2
              }'
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/production/autoscaling_settings"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "PATCH",
                  url,
                  headers=headers,
                  data={'min_replica': 0, 'max_replica': 7, 'autoscaling_window': 600, 'scale_down_delay': 120, 'concurrency_target': 2}
              )


              print(response.text)
        description: >-
          Updates a production deployment's autoscaling settings and returns the
          update status.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAutoscalingSettingsV1'
          required: true
        responses:
          '200':
            description: The response to a request to update autoscaling settings.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateAutoscalingSettingsResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/{deployment_id}/autoscaling_settings:
      patch:
        summary: Updates a deployment's autoscaling settings
        x-codeSamples:
          - lang: bash
            source: >-
              curl --request PATCH \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/autoscaling_settings
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 

              --data '{
                "min_replica": 0,
                "max_replica": 7,
                "autoscaling_window": 600,
                "scale_down_delay": 120,
                "concurrency_target": 2
              }'
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/autoscaling_settings"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "PATCH",
                  url,
                  headers=headers,
                  data={'min_replica': 0, 'max_replica': 7, 'autoscaling_window': 600, 'scale_down_delay': 120, 'concurrency_target': 2}
              )


              print(response.text)
        description: >-
          Updates a deployment's autoscaling settings and returns the update
          status.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAutoscalingSettingsV1'
          required: true
        responses:
          '200':
            description: The response to a request to update autoscaling settings.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UpdateAutoscalingSettingsResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
        - $ref: '#/components/parameters/deployment_id'
    /v1/models/{model_id}/deployments/development/promote:
      post:
        summary: Promotes a development deployment to production
        x-codeSamples:
          - lang: bash
            source: >-
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/development/promote
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 

              --data '{
                "scale_down_previous_production": true
              }'
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/development/promote"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={'scale_down_previous_production': True}
              )


              print(response.text)
        description: >-
          Creates a new production deployment from the development deployment, the
          currently building deployment is returned.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRequestV1'
          required: true
        responses:
          '200':
            description: A deployment of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/{deployment_id}/promote:
      post:
        summary: Promotes a deployment to production
        x-codeSamples:
          - lang: bash
            source: >-
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/promote
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 

              --data '{
                "scale_down_previous_production": true
              }'
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/promote"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={'scale_down_previous_production': True}
              )


              print(response.text)
        description: >-
          Promotes an existing deployment to production and returns the same
          deployment.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoteRequestV1'
          required: true
        responses:
          '200':
            description: A deployment of a model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeploymentV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
        - $ref: '#/components/parameters/deployment_id'
    /v1/models/{model_id}/deployments/development/activate:
      post:
        summary: Activates a development deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/development/activate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/development/activate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: >-
          Activates an inactive development deployment and returns the activation
          status.
        responses:
          '200':
            description: The response to a request to activate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/production/activate:
      post:
        summary: Activates a production deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/production/activate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/production/activate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: >-
          Activates an inactive production deployment and returns the activation
          status.
        responses:
          '200':
            description: The response to a request to activate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/{deployment_id}/activate:
      post:
        summary: Activates a deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/activate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/activate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Activates an inactive deployment and returns the activation status.
        responses:
          '200':
            description: The response to a request to activate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
        - $ref: '#/components/parameters/deployment_id'
    /v1/models/{model_id}/deployments/development/deactivate:
      post:
        summary: Deactivates a development deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/development/deactivate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/development/deactivate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: >-
          Deactivates a development deployment and returns the deactivation
          status.
        responses:
          '200':
            description: The response to a request to deactivate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeactivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/production/deactivate:
      post:
        summary: Deactivates a production deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/production/deactivate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/production/deactivate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Deactivates a production deployment and returns the deactivation status.
        responses:
          '200':
            description: The response to a request to deactivate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeactivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
    /v1/models/{model_id}/deployments/{deployment_id}/deactivate:
      post:
        summary: Deactivates a deployment
        x-codeSamples:
          - lang: bash
            source: >
              curl --request POST \ 

              --url
              https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/deactivate
              \ 

              --header "Authorization: Api-Key $BASETEN_API_KEY" \ 
          - lang: python
            source: >-
              import requests

              import os

              API_KEY = os.environ.get("BASETEN_API_KEY", "<YOUR_API_KEY>")

              url =
              "https://api.baseten.co/v1/models/{model_id}/deployments/{deployment_id}/deactivate"


              headers = {"Authorization": f"Api-Key {API_KEY}"}


              response = requests.request(
                  "POST",
                  url,
                  headers=headers,
                  data={}
              )


              print(response.text)
        description: Deactivates a deployment and returns the deactivation status.
        responses:
          '200':
            description: The response to a request to deactivate a deployment.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeactivateResponseV1'
      parameters:
        - $ref: '#/components/parameters/model_id'
        - $ref: '#/components/parameters/deployment_id'
  openapi: 3.1.0
  components:
    schemas:
      SecretV1:
        description: A Baseten secret. Note that we do not support retrieving secret values.
        properties:
          created_at:
            description: Time the secret was created in ISO 8601 format
            format: date-time
            title: Created At
            type: string
          name:
            description: Name of the secret
            title: Name
            type: string
        required:
          - created_at
          - name
        title: SecretV1
        type: object
      SecretsV1:
        description: A list of Baseten secrets.
        properties:
          secrets:
            items:
              $ref: '#/components/schemas/SecretV1'
            title: Secrets
            type: array
        required:
          - secrets
        title: SecretsV1
        type: object
      UpsertSecretRequestV1:
        description: A request to create or update a Baseten secret by name.
        properties:
          name:
            description: Name of the new or existing secret
            examples:
              - my_secret
            title: Name
            type: string
          value:
            description: Value of the secret
            examples:
              - my_secret_value
            title: Value
            type: string
        required:
          - name
          - value
        title: UpsertSecretRequestV1
        type: object
      ModelV1:
        description: A model.
        properties:
          id:
            description: Unique identifier of the model
            title: Id
            type: string
          created_at:
            description: Time the model was created in ISO 8601 format
            format: date-time
            title: Created At
            type: string
          name:
            description: Name of the model
            title: Name
            type: string
          deployments_count:
            description: Number of deployments of the model
            title: Deployments Count
            type: integer
          production_deployment_id:
            anyOf:
              - type: string
              - type: 'null'
            description: Unique identifier of the production deployment of the model
            title: Production Deployment Id
          development_deployment_id:
            anyOf:
              - type: string
              - type: 'null'
            description: Unique identifier of the development deployment of the model
            title: Development Deployment Id
          instance_type_name:
            description: Name of the instance type the model is deployed on
            title: Instance Type Name
            type: string
        required:
          - id
          - created_at
          - name
          - deployments_count
          - production_deployment_id
          - development_deployment_id
          - instance_type_name
        title: ModelV1
        type: object
      ModelsV1:
        description: A list of models.
        properties:
          models:
            items:
              $ref: '#/components/schemas/ModelV1'
            title: Models
            type: array
        required:
          - models
        title: ModelsV1
        type: object
      AutoscalingSettingsV1:
        description: Autoscaling settings for a deployment.
        properties:
          min_replica:
            description: Minimum number of replicas
            title: Min Replica
            type: integer
          max_replica:
            description: Maximum number of replicas
            title: Max Replica
            type: integer
          autoscaling_window:
            anyOf:
              - type: integer
              - type: 'null'
            description: Timeframe of traffic considered for autoscaling decisions
            title: Autoscaling Window
          scale_down_delay:
            anyOf:
              - type: integer
              - type: 'null'
            description: Waiting period before scaling down any active replica
            title: Scale Down Delay
          concurrency_target:
            description: Number of requests per replica before scaling up
            title: Concurrency Target
            type: integer
        required:
          - min_replica
          - max_replica
          - autoscaling_window
          - scale_down_delay
          - concurrency_target
        title: AutoscalingSettingsV1
        type: object
      DeploymentStatusV1:
        description: The status of a deployment.
        enum:
          - BUILDING
          - DEPLOYING
          - DEPLOY_FAILED
          - LOADING_MODEL
          - ACTIVE
          - UNHEALTHY
          - BUILD_FAILED
          - BUILD_STOPPED
          - DEACTIVATING
          - INACTIVE
          - FAILED
          - UPDATING
          - SCALED_TO_ZERO
          - WAKING_UP
        title: DeploymentStatusV1
        type: string
      DeploymentV1:
        description: A deployment of a model.
        properties:
          id:
            description: Unique identifier of the deployment
            title: Id
            type: string
          created_at:
            description: Time the deployment was created in ISO 8601 format
            format: date-time
            title: Created At
            type: string
          name:
            description: Name of the deployment
            title: Name
            type: string
          model_id:
            description: Unique identifier of the model
            title: Model Id
            type: string
          is_production:
            description: Whether the deployment is the production deployment of the model
            title: Is Production
            type: boolean
          is_development:
            description: Whether the deployment is the development deployment of the model
            title: Is Development
            type: boolean
          status:
            allOf:
              - $ref: '#/components/schemas/DeploymentStatusV1'
            description: Status of the deployment
          active_replica_count:
            description: Number of active replicas
            title: Active Replica Count
            type: integer
          autoscaling_settings:
            allOf:
              - $ref: '#/components/schemas/AutoscalingSettingsV1'
            description: Autoscaling settings for the deployment
        required:
          - id
          - created_at
          - name
          - model_id
          - is_production
          - is_development
          - status
          - active_replica_count
          - autoscaling_settings
        title: DeploymentV1
        type: object
      DeploymentsV1:
        description: A list of deployments of a model.
        properties:
          deployments:
            description: A list of deployments of a model
            items:
              $ref: '#/components/schemas/DeploymentV1'
            title: Deployments
            type: array
        required:
          - deployments
        title: DeploymentsV1
        type: object
      UpdateAutoscalingSettingsV1:
        additionalProperties: false
        description: >-
          A request to update autoscaling settings for a deployment. All fields
          are optional, and we only update ones passed in.
        properties:
          min_replica:
            anyOf:
              - type: integer
              - type: 'null'
            default: null
            description: Minimum number of replicas
            examples:
              - 0
            title: Min Replica
          max_replica:
            anyOf:
              - type: integer
              - type: 'null'
            default: null
            description: Maximum number of replicas
            examples:
              - 7
            title: Max Replica
          autoscaling_window:
            anyOf:
              - type: integer
              - type: 'null'
            default: null
            description: Timeframe of traffic considered for autoscaling decisions
            examples:
              - 600
            title: Autoscaling Window
          scale_down_delay:
            anyOf:
              - type: integer
              - type: 'null'
            default: null
            description: Waiting period before scaling down any active replica
            examples:
              - 120
            title: Scale Down Delay
          concurrency_target:
            anyOf:
              - type: integer
              - type: 'null'
            default: null
            description: Number of requests per replica before scaling up
            examples:
              - 2
            title: Concurrency Target
        title: UpdateAutoscalingSettingsV1
        type: object
      UpdateAutoscalingSettingsStatusV1:
        description: The status of a request to update autoscaling settings.
        enum:
          - ACCEPTED
          - QUEUED
          - UNCHANGED
        title: UpdateAutoscalingSettingsStatusV1
        type: string
      UpdateAutoscalingSettingsResponseV1:
        description: The response to a request to update autoscaling settings.
        properties:
          status:
            allOf:
              - $ref: '#/components/schemas/UpdateAutoscalingSettingsStatusV1'
            description: Status of the request to update autoscaling settings
          message:
            description: >-
              A message describing the status of the request to update autoscaling
              settings
            title: Message
            type: string
        required:
          - status
          - message
        title: UpdateAutoscalingSettingsResponseV1
        type: object
      PromoteRequestV1:
        description: A request to promote a deployment to production.
        properties:
          scale_down_previous_production:
            default: true
            description: >-
              Whether to scale down the previous production deployment after
              promoting
            examples:
              - true
            title: Scale Down Previous Production
            type: boolean
        title: PromoteRequestV1
        type: object
      ActivateResponseV1:
        description: The response to a request to activate a deployment.
        properties:
          success:
            default: true
            description: Whether the deployment was successfully activated
            title: Success
            type: boolean
        title: ActivateResponseV1
        type: object
      DeactivateResponseV1:
        description: The response to a request to deactivate a deployment.
        properties:
          success:
            default: true
            description: Whether the deployment was successfully deactivated
            title: Success
            type: boolean
        title: DeactivateResponseV1
        type: object
    parameters:
      model_id:
        schema:
          type: string
        name: model_id
        in: path
        required: true
      deployment_id:
        schema:
          type: string
        name: deployment_id
        in: path
        required: true
    securitySchemes:
      ApiKeyAuth:
        type: apiKey
        in: header
        name: Authorization
        description: >-
          You must specify the scheme 'Api-Key' in the Authorization header. For
          example, `Authorization: Api-Key <Your_Api_Key>`
konfigCliVersion: 1.38.37
