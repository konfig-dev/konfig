publishJson:
  company: Keka HR
  serviceName: false
  sdkName: keka-hr-{language}-sdk
  clientName: KekaHr
  metaDescription: >-
    Here's our story,


    It all began with the frustration of using software that sucks. Prior to
    starting Keka, our core team was a 100 person business that needed an easy
    to use software for managing employees. We looked everywhere and all we
    found were software that was lousy and hard to use. We felt SME businesses
    in India deserved something better. Something awesome actually!


    Thus emerged Keka!
  apiStatusUrls: false
  homepage: keka.com
  developerDocumentation: developers.keka.com/reference
  categories:
    - hr
    - human_resources
    - human_resource_management_system
    - payroll_management_system
    - leave_management_system
    - attendance_management_system
    - talent_management_system
    - human_resource_automation
    - expense_management_system
    - remote_workforce_management_system
    - timesheet_management_system
    - workforce_management
rawSpecString: |
  openapi: 3.0.1
  info:
    title: Requisition
    version: v1
  servers:
    - url: https://{company}.{environment}.com/api/v1
      description: Production server (uses live data)
      variables:
        environment:
          default: keka
          enum:
            - keka
            - kekademo
  components:
    securitySchemes:
      oauth2:
        type: oauth2
        flows:
          implicit:
            authorizationUrl: https://login.kekad.com/connect/authorize
            scopes:
              kekaapi: Keka API
          clientCredentials:
            tokenUrl: https://login.kekad.com/connect/token
            scopes:
              kekaapi: Keka API
    schemas:
      APIBadge:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/BadgeStatus'
        additionalProperties: false
      APIBadgeLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      APIBadgePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIBadge'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIBaseGoal:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employeeId:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          timeFrameId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          initialValue:
            type: number
            format: double
          targetValue:
            type: number
            format: double
          currentValue:
            type: number
            format: double
          progress:
            type: number
            format: double
          metricType:
            $ref: '#/components/schemas/GoalMetricType'
          status:
            $ref: '#/components/schemas/GoalStatus'
          tags:
            type: array
            items:
              type: string
            nullable: true
          type:
            $ref: '#/components/schemas/GoalType'
          departmentId:
            type: string
            nullable: true
        additionalProperties: false
      APIClient:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          billingAddress:
            $ref: '#/components/schemas/Address'
          clientContacts:
            type: array
            items:
              $ref: '#/components/schemas/APIClientContact'
            nullable: true
          additionalFields:
            type: array
            items:
              $ref: '#/components/schemas/PSACustomField'
            nullable: true
        additionalProperties: false
      APIClientContact:
        type: object
        properties:
          clientId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
        additionalProperties: false
      APIClientPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIClient'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIClientResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            $ref: '#/components/schemas/APIClient'
        additionalProperties: false
        description: class represents response.
      APIDepartmentView:
        type: object
        properties:
          id:
            type: string
            nullable: true
          parentId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          isArchived:
            type: boolean
          departmentHeads:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeLookup'
            nullable: true
        additionalProperties: false
      APIDepartmentViewPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIDepartmentView'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIEmployeeLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          employeeName:
            type: string
            nullable: true
        additionalProperties: false
      APIEmployeeSalary:
        type: object
        properties:
          id:
            type: string
            nullable: true
          employee:
            $ref: '#/components/schemas/APIEmployeeLookup'
          ctc:
            type: number
            format: double
          gross:
            type: number
            format: double
          remunerationType:
            $ref: '#/components/schemas/RemunerationType'
          effectiveFrom:
            type: string
            format: date-time
          earnings:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeSalaryComponent'
            nullable: true
          deductions:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeSalaryComponent'
            nullable: true
        additionalProperties: false
      APIEmployeeSalaryComponent:
        type: object
        properties:
          id:
            type: string
            format: uuid
          title:
            type: string
            nullable: true
          amount:
            type: number
            format: double
        additionalProperties: false
      APIEmployeeSalaryPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeSalary'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIGoal:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employeeId:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          timeFrameId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          initialValue:
            type: number
            format: double
          targetValue:
            type: number
            format: double
          currentValue:
            type: number
            format: double
          progress:
            type: number
            format: double
          metricType:
            $ref: '#/components/schemas/GoalMetricType'
          status:
            $ref: '#/components/schemas/GoalStatus'
          tags:
            type: array
            items:
              type: string
            nullable: true
          type:
            $ref: '#/components/schemas/GoalType'
          departmentId:
            type: string
            nullable: true
          parentGoal:
            $ref: '#/components/schemas/APIBaseGoal'
          childGoals:
            type: array
            items:
              $ref: '#/components/schemas/APIBaseGoal'
            nullable: true
          isPrivate:
            type: boolean
        additionalProperties: false
      APIGoalPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIGoal'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APILookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      APIPayCycleView:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          month:
            type: string
            nullable: true
          startDate:
            type: string
            nullable: true
          endDate:
            type: string
            nullable: true
          runStatus:
            $ref: '#/components/schemas/PayrollRunStatus'
        additionalProperties: false
      APIPayCycleViewPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIPayCycleView'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIPayGroupView:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          legalEntityId:
            type: string
            nullable: true
          legalEntityName:
            type: string
            nullable: true
        additionalProperties: false
      APIPayGroupViewPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIPayGroupView'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIPayRegisterView:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          employeeName:
            type: string
            nullable: true
          panNumber:
            type: string
            nullable: true
          dateJoined:
            type: string
            format: date-time
            nullable: true
          jobTitle:
            type: string
            nullable: true
          department:
            type: string
            nullable: true
          location:
            type: string
            nullable: true
          payGroup:
            type: string
            nullable: true
          employmentStatus:
            $ref: '#/components/schemas/EmploymentStatus'
          workerType:
            $ref: '#/components/schemas/WorkerType'
          costCenter:
            type: string
            nullable: true
          businessUnit:
            type: string
            nullable: true
          remunerationType:
            $ref: '#/components/schemas/RemunerationType'
          gender:
            $ref: '#/components/schemas/Gender'
          dateOfBirth:
            type: string
            format: date-time
            nullable: true
          exitDate:
            type: string
            format: date-time
            nullable: true
          cycleIdentifier:
            type: string
            nullable: true
          cycleFrom:
            type: string
            format: date-time
          cycleTo:
            type: string
            format: date-time
          cycleMonthName:
            type: string
            nullable: true
            readOnly: true
          cycleMonth:
            type: integer
            format: int32
          cycleYear:
            type: integer
            format: int32
          cyclePayDays:
            type: number
            format: double
          workingDays:
            type: number
            format: double
          lossOfPayDays:
            type: number
            format: double
          noOfPayDays:
            type: number
            format: double
          renumerationAmount:
            type: number
            format: double
            nullable: true
          status:
            $ref: '#/components/schemas/EmployeePayrollCycleRunStatus'
          statusDescription:
            type: string
            nullable: true
          earnings:
            type: array
            items:
              $ref: '#/components/schemas/PayItemView'
            nullable: true
          contributions:
            type: array
            items:
              $ref: '#/components/schemas/PayItemView'
            nullable: true
          deductions:
            type: array
            items:
              $ref: '#/components/schemas/PayItemView'
            nullable: true
          reimbursements:
            type: array
            items:
              $ref: '#/components/schemas/PayItemView'
            nullable: true
          outsideGrossPayables:
            type: array
            items:
              $ref: '#/components/schemas/PayItemView'
            nullable: true
          grossAmount:
            type: number
            format: double
          totalOutsideGrossAmount:
            type: number
            format: double
          total:
            type: number
            format: double
            readOnly: true
          totalContributions:
            type: number
            format: double
          totalDeductions:
            type: number
            format: double
          totalReimbursements:
            type: number
            format: double
          cashAdvanceAmount:
            type: number
            format: double
          cashAdvanceSettlementAmount:
            type: number
            format: double
          netAmount:
            type: number
            format: double
        additionalProperties: false
      APIPayRegisterViewPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIPayRegisterView'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIPraise:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          feedback:
            type: string
            nullable: true
          badge:
            $ref: '#/components/schemas/APIBadgeLookup'
          employees:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeLookup'
            nullable: true
          givenBy:
            $ref: '#/components/schemas/APIEmployeeLookup'
          givenOn:
            type: string
            format: date-time
        additionalProperties: false
      APIPraisePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIPraise'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIProject:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          clientId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          status:
            $ref: '#/components/schemas/ProjectStatus'
          projectManagers:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeLookup'
            nullable: true
          isBillable:
            type: boolean
          isArchived:
            type: boolean
          customAttributes:
            type: object
            additionalProperties:
              type: string
              nullable: true
            nullable: true
        additionalProperties: false
      APIProjectAllocation:
        type: object
        properties:
          id:
            type: string
            format: uuid
          employee:
            $ref: '#/components/schemas/EmployeeLookup'
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          allocationPercentage:
            type: integer
            format: int32
          billingRole:
            $ref: '#/components/schemas/APILookup'
          billingRate:
            $ref: '#/components/schemas/BillingRateLookup'
        additionalProperties: false
      APIProjectAllocationPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIProjectAllocation'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIProjectPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIProject'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIProjectResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            $ref: '#/components/schemas/APIProject'
        additionalProperties: false
        description: class represents response.
      APIProjectTask:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          projectId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          taskType:
            $ref: '#/components/schemas/TaskType'
          taskBillingType:
            $ref: '#/components/schemas/TaskBillingType'
          assignedTo:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeLookup'
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          estimatedHours:
            type: number
            format: double
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      APIProjectTaskPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIProjectTask'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APISalaryComponent:
        type: object
        properties:
          id:
            type: string
            format: uuid
          identifier:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          accountingCode:
            type: string
            nullable: true
        additionalProperties: false
      APISalaryComponentPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APISalaryComponent'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APITimeFrame:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          frequency:
            $ref: '#/components/schemas/Frequency'
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          isClosed:
            type: boolean
          isLocked:
            type: boolean
          status:
            $ref: '#/components/schemas/TimeFrameStatus'
        additionalProperties: false
      APITimeFramePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APITimeFrame'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APITimesheetEntry:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          date:
            type: string
            format: date-time
          employeeId:
            type: string
            nullable: true
          projectId:
            type: string
            nullable: true
          taskId:
            type: string
            nullable: true
          totalMinutes:
            type: number
            format: double
          startTime:
            type: string
            nullable: true
          endTime:
            type: string
            nullable: true
          comments:
            type: string
            nullable: true
          isBillable:
            type: boolean
          status:
            $ref: '#/components/schemas/TimeEntryStatus'
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      APITimesheetEntryPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APITimesheetEntry'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIUpdateGoalProgress:
        required:
          - currentValue
          - status
          - updatedBy
        type: object
        properties:
          currentValue:
            type: number
            format: double
          status:
            $ref: '#/components/schemas/GoalStatus'
          updatedBy:
            type: string
          note:
            type: string
            nullable: true
        additionalProperties: false
      AccountStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      AddPraise:
        required:
          - badgeId
          - employeeIds
          - feedback
          - givenBy
        type: object
        properties:
          employeeIds:
            type: array
            items:
              type: string
          feedback:
            type: string
          badgeId:
            type: string
          givenBy:
            type: string
        additionalProperties: false
      Address:
        type: object
        properties:
          addressLine1:
            type: string
            nullable: true
          addressLine2:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          state:
            type: string
            nullable: true
          zip:
            type: string
            nullable: true
        additionalProperties: false
      ApiLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      ApiLookupPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/ApiLookup'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      Asset:
        type: object
        properties:
          id:
            type: string
            nullable: true
          assetName:
            type: string
            nullable: true
          assetId:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/AssetStatus'
          assetCategoryId:
            type: string
            nullable: true
          assetTypeId:
            type: string
            nullable: true
          assetConditionId:
            type: string
            nullable: true
          assignedTo:
            $ref: '#/components/schemas/EmployeeLookup'
          assignedOn:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      AssetPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/Asset'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      AssetStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      AttendanceDayType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
      AttendanceSummary:
        type: object
        properties:
          id:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          employeeIdentifier:
            type: string
            nullable: true
          attendanceDate:
            type: string
            format: date-time
          dayType:
            $ref: '#/components/schemas/AttendanceDayType'
          leaveDayStatus:
            $ref: '#/components/schemas/LeaveDayStatus'
          shiftStartTime:
            type: string
            format: date-time
          shiftEndTime:
            type: string
            format: date-time
          shiftDuration:
            type: number
            format: double
          shiftBreakDuration:
            type: number
            format: double
          shiftEffectiveDuration:
            type: number
            format: double
          totalGrossHours:
            type: number
            format: double
          totalEffectiveHours:
            type: number
            format: double
          totalBreakDuration:
            type: number
            format: double
          totalEffectiveOvertimeDuration:
            type: number
            format: double
          totalGrossOvertimeDuration:
            type: number
            format: double
          firstInOfTheDay:
            $ref: '#/components/schemas/AttendanceTimeEntry'
          lastOutOfTheDay:
            $ref: '#/components/schemas/AttendanceTimeEntry'
        additionalProperties: false
      AttendanceSummaryPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/AttendanceSummary'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      AttendanceTimeEntry:
        type: object
        properties:
          timestamp:
            type: string
            format: date-time
          locationAddress:
            $ref: '#/components/schemas/Address'
        additionalProperties: false
      BadgeStatus:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      Batch:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          forPeriod:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/PaymentStatus'
          paymentFor:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      BatchPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/Batch'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      BillingInfo:
        required:
          - billingCurrencyId
        type: object
        properties:
          billingCurrencyId:
            type: string
          billingAddress:
            $ref: '#/components/schemas/Address'
        additionalProperties: false
      BillingRateLookup:
        type: object
        properties:
          unit:
            $ref: '#/components/schemas/BillingRateUnit'
          rate:
            type: number
            format: double
        additionalProperties: false
      BillingRateUnit:
        enum:
          - 0
        type: integer
        format: int32
      BloodGroup:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
        type: integer
        format: int32
      BooleanResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: boolean
            description: Gets or sets the data.
        additionalProperties: false
        description: class represents response.
      Client:
        required:
          - code
          - name
        type: object
        properties:
          name:
            type: string
          description:
            type: string
            nullable: true
          code:
            type: string
          billingInfo:
            $ref: '#/components/schemas/BillingInfo'
          phone:
            type: string
            format: tel
            nullable: true
          website:
            type: string
            nullable: true
          email:
            type: string
            format: email
            nullable: true
        additionalProperties: false
      ContingentType:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      Currency:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          code:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      CurrencyPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/Currency'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      CustomField:
        type: object
        properties:
          id:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
        additionalProperties: false
      Education:
        type: object
        properties:
          id:
            type: string
            nullable: true
          degree:
            type: string
            nullable: true
          branch:
            type: string
            nullable: true
          university:
            type: string
            nullable: true
          cgpa:
            type: number
            format: double
          yearOfJoining:
            type: string
            format: date-time
            nullable: true
          yearOfCompletion:
            type: string
            format: date-time
            nullable: true
          customFields:
            type: array
            items:
              $ref: '#/components/schemas/CustomField'
            nullable: true
        additionalProperties: false
      Employee:
        required:
          - businessUnit
          - dateJoined
          - dateOfBirth
          - department
          - displayName
          - email
          - firstName
          - gender
          - jobTitle
          - lastName
          - location
        type: object
        properties:
          employeeNumber:
            type: string
            nullable: true
          displayName:
            type: string
          firstName:
            type: string
          middleName:
            type: string
            nullable: true
          lastName:
            type: string
          email:
            type: string
            format: email
          mobileNumber:
            type: string
            format: tel
            nullable: true
          gender:
            $ref: '#/components/schemas/Gender'
          dateOfBirth:
            type: string
            format: date-time
          dateJoined:
            type: string
            format: date-time
          department:
            type: string
          businessUnit:
            type: string
          jobTitle:
            type: string
          secondaryJobTitle:
            type: string
            nullable: true
          location:
            type: string
        additionalProperties: false
      EmployeeField:
        type: object
        properties:
          profileFields:
            type: array
            items:
              $ref: '#/components/schemas/FieldItem'
            nullable: true
          jobFields:
            type: array
            items:
              $ref: '#/components/schemas/FieldItem'
            nullable: true
        additionalProperties: false
      EmployeeFieldResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            $ref: '#/components/schemas/EmployeeField'
        additionalProperties: false
        description: class represents response.
      EmployeeLeaveBalanceListItem:
        type: object
        properties:
          employeeIdentifier:
            type: string
            format: uuid
          employeeNumber:
            type: string
            nullable: true
          employeeName:
            type: string
            nullable: true
          leaveBalance:
            type: array
            items:
              $ref: '#/components/schemas/LeaveBalanceListItem'
            nullable: true
        additionalProperties: false
      EmployeeLeaveBalanceListItemPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeLeaveBalanceListItem'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      EmployeeLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
        additionalProperties: false
      EmployeePayment:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employeeNumber:
            type: string
            nullable: true
          employeeName:
            type: string
            nullable: true
          forPeriod:
            type: string
            nullable: true
          amount:
            type: number
            format: double
          salaryPaymentMode:
            type: string
            nullable: true
          bankName:
            type: string
            nullable: true
          ifscCode:
            type: string
            nullable: true
          accountNumber:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/PaymentStatus'
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      EmployeePaymentPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeePayment'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      EmployeePayrollCycleRunStatus:
        enum:
          - 0
          - 1
          - 3
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 50
        type: integer
        format: int32
      EmployeeProfile:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employeeNumber:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          middleName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          displayName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          image:
            $ref: '#/components/schemas/Image'
          jobTitle:
            $ref: '#/components/schemas/LookupInfo'
          secondaryJobTitle:
            type: string
            nullable: true
          reportsTo:
            $ref: '#/components/schemas/EmployeeLookup'
          l2Manager:
            $ref: '#/components/schemas/EmployeeLookup'
          dottedLineManager:
            $ref: '#/components/schemas/EmployeeLookup'
          contingentType:
            $ref: '#/components/schemas/ContingentType'
          timeType:
            $ref: '#/components/schemas/TimeType'
          workerType:
            $ref: '#/components/schemas/WorkerType'
          isPrivate:
            type: boolean
          isProfileComplete:
            type: boolean
          maritalStatus:
            $ref: '#/components/schemas/MaritalStatus'
          marriageDate:
            type: string
            format: date-time
            nullable: true
          gender:
            $ref: '#/components/schemas/Gender'
          joiningDate:
            type: string
            format: date-time
          professionalSummary:
            type: string
            nullable: true
          dateOfBirth:
            type: string
            format: date-time
            nullable: true
          resignationSubmittedDate:
            type: string
            format: date-time
            nullable: true
          exitDate:
            type: string
            format: date-time
            nullable: true
          employmentStatus:
            $ref: '#/components/schemas/EmploymentStatus'
          accountStatus:
            $ref: '#/components/schemas/AccountStatus'
          invitationStatus:
            $ref: '#/components/schemas/InvitationStatus'
          exitStatus:
            $ref: '#/components/schemas/ExitStatus'
          exitType:
            $ref: '#/components/schemas/ExitType'
          exitReason:
            type: string
            nullable: true
          personalEmail:
            type: string
            nullable: true
          workPhone:
            type: string
            nullable: true
          homePhone:
            type: string
            nullable: true
          mobilePhone:
            type: string
            nullable: true
          bloodGroup:
            $ref: '#/components/schemas/BloodGroup'
          attendanceNumber:
            type: string
            nullable: true
          probationEndDate:
            type: string
            format: date-time
            nullable: true
          currentAddress:
            $ref: '#/components/schemas/Address'
          permanentAddress:
            $ref: '#/components/schemas/Address'
          relations:
            type: array
            items:
              $ref: '#/components/schemas/Relation'
            nullable: true
          educationDetails:
            type: array
            items:
              $ref: '#/components/schemas/Education'
            nullable: true
          experienceDetails:
            type: array
            items:
              $ref: '#/components/schemas/Experience'
            nullable: true
          customFields:
            type: array
            items:
              $ref: '#/components/schemas/CustomField'
            nullable: true
          groups:
            type: array
            items:
              $ref: '#/components/schemas/GroupLookup'
            nullable: true
          leavePlanInfo:
            $ref: '#/components/schemas/LookupInfo'
          bandInfo:
            $ref: '#/components/schemas/LookupInfo'
          payGradeInfo:
            $ref: '#/components/schemas/LookupInfo'
          shiftPolicyInfo:
            $ref: '#/components/schemas/LookupInfo'
          weeklyOffPolicyInfo:
            $ref: '#/components/schemas/LookupInfo'
          captureSchemeInfo:
            $ref: '#/components/schemas/LookupInfo'
          trackingPolicyInfo:
            $ref: '#/components/schemas/LookupInfo'
          expensePolicyInfo:
            $ref: '#/components/schemas/LookupInfo'
          overtimePolicyInfo:
            $ref: '#/components/schemas/LookupInfo'
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      EmployeeProfilePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/EmployeeProfile'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      EmployeeProfileResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            $ref: '#/components/schemas/EmployeeProfile'
        additionalProperties: false
        description: class represents response.
      EmploymentStatus:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      ExitStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      ExitType:
        enum:
          - 0
          - 1
          - 2
          - 3
        type: integer
        format: int32
      Expense:
        type: object
        properties:
          id:
            type: string
            format: uuid
          title:
            type: string
            nullable: true
          date:
            type: string
            format: date-time
          expenseCategoryId:
            type: string
            format: uuid
          amount:
            type: string
            nullable: true
          comment:
            type: string
            nullable: true
        additionalProperties: false
      ExpenseCategory:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          categoryType:
            $ref: '#/components/schemas/ExpenseType'
        additionalProperties: false
      ExpenseCategoryPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/ExpenseCategory'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      ExpenseClaim:
        type: object
        properties:
          id:
            type: string
            format: uuid
          employeeIdentifier:
            type: string
            format: uuid
          employeeName:
            type: string
            nullable: true
          claimNumber:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          submittedOn:
            type: string
            format: date-time
          approvalStatus:
            $ref: '#/components/schemas/ExpenseClaimApprovalStatus'
          expenses:
            type: array
            items:
              $ref: '#/components/schemas/Expense'
            nullable: true
        additionalProperties: false
      ExpenseClaimApprovalStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        type: integer
        format: int32
      ExpenseClaimPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/ExpenseClaim'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      ExpenseType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        type: integer
        format: int32
      Experience:
        type: object
        properties:
          id:
            type: string
            nullable: true
          companyName:
            type: string
            nullable: true
          jobTitle:
            type: string
            nullable: true
          location:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          dateOfJoining:
            type: string
            format: date-time
            nullable: true
          dateOfRelieving:
            type: string
            format: date-time
            nullable: true
          customFields:
            type: array
            items:
              $ref: '#/components/schemas/CustomField'
            nullable: true
        additionalProperties: false
      FieldChoice:
        type: object
        properties:
          id:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
        additionalProperties: false
      FieldItem:
        type: object
        properties:
          id:
            type: string
            nullable: true
          fieldName:
            type: string
            nullable: true
          required:
            type: boolean
          fieldType:
            $ref: '#/components/schemas/FieldType'
          isSystemDefined:
            type: boolean
          fieldOptions:
            type: array
            items:
              $ref: '#/components/schemas/FieldChoice'
            nullable: true
        additionalProperties: false
      FieldType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
        type: integer
        format: int32
      FilterFieldType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
      FilterValue:
        type: object
        properties:
          value:
            type: array
            items:
              type: string
            nullable: true
          minValue:
            type: string
            nullable: true
          maxValue:
            type: string
            nullable: true
          type:
            $ref: '#/components/schemas/FilterFieldType'
        additionalProperties: false
      FilteringOptions:
        type: object
        properties:
          filters:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/FilterValue'
            nullable: true
          isEnable:
            type: boolean
            readOnly: true
          searchKey:
            type: string
            nullable: true
        additionalProperties: false
      Frequency:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        type: integer
        format: int32
      Gender:
        enum:
          - 0
          - 1
          - 2
          - 3
        type: integer
        format: int32
      GoalMetricType:
        enum:
          - 0
          - 1
          - 3
        type: integer
        format: int32
      GoalStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
      GoalType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      Group:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          groupTypeId:
            type: string
            nullable: true
          glCode:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      GroupLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          groupType:
            $ref: '#/components/schemas/SystemGroupType'
        additionalProperties: false
      GroupPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/Group'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      GroupType:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          isSystemDefined:
            type: boolean
          systemGroupType:
            $ref: '#/components/schemas/SystemGroupType'
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      GroupTypePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/GroupType'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      Image:
        type: object
        properties:
          fileName:
            type: string
            nullable: true
          thumbs:
            type: object
            additionalProperties:
              type: string
              nullable: true
            nullable: true
        additionalProperties: false
      InvitationStatus:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      JobDetailsUpdateRequest:
        type: object
        properties:
          employeeNumber:
            type: string
            nullable: true
          location:
            type: string
            nullable: true
          businessUnit:
            type: string
            nullable: true
          department:
            type: string
            nullable: true
          jobTitle:
            type: string
            nullable: true
          reportingManager:
            type: string
            nullable: true
          attendanceNumber:
            type: string
            nullable: true
          timeType:
            $ref: '#/components/schemas/TimeType'
          attendanceCaptureScheme:
            type: string
            nullable: true
          expensePolicy:
            type: string
            nullable: true
          noticePeriod:
            type: string
            nullable: true
          holidayList:
            type: string
            nullable: true
          costCenter:
            type: string
            nullable: true
          payBand:
            type: string
            nullable: true
          payGrade:
            type: string
            nullable: true
          customFields:
            type: object
            additionalProperties:
              nullable: true
            nullable: true
        additionalProperties: false
      JobTitle:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      JobTitlePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/JobTitle'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      LeaveBalanceListItem:
        type: object
        properties:
          leaveTypeId:
            type: string
            format: uuid
          leaveTypeName:
            type: string
            nullable: true
          accruedAmount:
            type: number
            format: double
          consumedAmount:
            type: number
            format: double
          availableBalance:
            type: number
            format: double
          annualQuota:
            type: number
            format: double
        additionalProperties: false
      LeaveDayStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
        type: integer
        format: int32
      LeaveRequest:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employeeIdentifier:
            type: string
            nullable: true
          employeeNumber:
            type: string
            nullable: true
          fromDate:
            type: string
            format: date-time
          toDate:
            type: string
            format: date-time
          fromSession:
            $ref: '#/components/schemas/SessionType'
          toSession:
            $ref: '#/components/schemas/SessionType'
          requestedOn:
            type: string
            format: date-time
          note:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/LeaveRequestStatus'
          selection:
            type: array
            items:
              $ref: '#/components/schemas/LeaveTypeSelection'
            nullable: true
          cancelRejectReason:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      LeaveRequestPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/LeaveRequest'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      LeaveRequestStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
      LeaveType:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          isPaid:
            type: boolean
        additionalProperties: false
      LeaveTypePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/LeaveType'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      LeaveTypeSelection:
        type: object
        properties:
          leaveTypeIdentifier:
            type: string
            nullable: true
          leaveTypeName:
            type: string
            nullable: true
          count:
            type: number
            format: float
          duration:
            $ref: '#/components/schemas/TimePeriod'
          leaveTypeId:
            type: integer
            format: int32
        additionalProperties: false
      LeaveTypeStats:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          duration:
            $ref: '#/components/schemas/TimePeriod'
          durationString:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      LeaveTypeStatsListResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/LeaveTypeStats'
            description: Gets or sets the data.
            nullable: true
        additionalProperties: false
        description: class represents response.
      Location:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          address:
            $ref: '#/components/schemas/Address'
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      LocationPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/Location'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      LookupInfo:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
        additionalProperties: false
      MaritalStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      PSACustomField:
        type: object
        properties:
          id:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
        additionalProperties: false
      PagingOptions:
        type: object
        properties:
          pageIndex:
            type: integer
            format: int32
            description: Gets or sets the index of the page.
          pageSize:
            type: integer
            format: int32
            description: Gets or sets the size of the page.
        additionalProperties: false
        description: Class paging options
      PayItemView:
        type: object
        properties:
          id:
            type: string
            format: uuid
          componentIdentifier:
            type: string
            nullable: true
          componentTitle:
            type: string
            nullable: true
          amount:
            type: number
            format: double
          accountingCode:
            type: string
            nullable: true
        additionalProperties: false
      PaymentStatus:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      PaymentTransaction:
        type: object
        properties:
          paymentIdentifier:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/PaymentStatus'
          transactionOn:
            type: string
            format: date-time
          note:
            type: string
            nullable: true
        additionalProperties: false
      PayrollRunStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      PersonalDetailsUpdateRequest:
        type: object
        properties:
          displayName:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          middleName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          gender:
            $ref: '#/components/schemas/Gender'
          dateOfBirth:
            type: string
            format: date-time
            nullable: true
          workPhone:
            type: string
            format: tel
            nullable: true
          homePhone:
            type: string
            format: tel
            nullable: true
          personalEmail:
            type: string
            format: email
            nullable: true
          skypeId:
            type: string
            nullable: true
          maritalStatus:
            $ref: '#/components/schemas/MaritalStatus'
          marriageDate:
            type: string
            format: date-time
            nullable: true
          relations:
            type: array
            items:
              $ref: '#/components/schemas/Relation'
            nullable: true
          bloodGroup:
            $ref: '#/components/schemas/BloodGroup'
          currentAddress:
            $ref: '#/components/schemas/Address'
          permanentAddress:
            $ref: '#/components/schemas/Address'
          professionalSummary:
            type: string
            nullable: true
          customFields:
            type: object
            additionalProperties:
              nullable: true
            nullable: true
        additionalProperties: false
      PostLeaveRequest:
        required:
          - employeeId
          - fromDate
          - leaveTypeId
          - reason
          - requestedBy
          - toDate
        type: object
        properties:
          employeeId:
            type: string
          requestedBy:
            type: string
          fromDate:
            type: string
            format: date-time
          toDate:
            type: string
            format: date-time
          fromSession:
            $ref: '#/components/schemas/SessionType'
          toSession:
            $ref: '#/components/schemas/SessionType'
          leaveTypeId:
            type: string
          reason:
            type: string
          note:
            type: string
            nullable: true
        additionalProperties: false
      Project:
        required:
          - clientId
          - code
          - endDate
          - name
          - startDate
        type: object
        properties:
          clientId:
            type: string
          name:
            type: string
          description:
            type: string
            nullable: true
          code:
            type: string
          status:
            $ref: '#/components/schemas/ProjectStatus'
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          isBillable:
            type: boolean
        additionalProperties: false
      ProjectPhase:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          identifier:
            type: string
            nullable: true
        additionalProperties: false
      ProjectPhasePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/ProjectPhase'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      ProjectStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      ProjectTask:
        required:
          - endDate
          - name
          - projectId
          - startDate
        type: object
        properties:
          projectId:
            type: string
          name:
            type: string
          description:
            type: string
            nullable: true
          taskBillingType:
            $ref: '#/components/schemas/TaskBillingType'
          assignedTo:
            type: array
            items:
              type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          estimatedHours:
            type: number
            format: double
            nullable: true
          phaseId:
            type: string
            nullable: true
        additionalProperties: false
      QueryOptions:
        type: object
        properties:
          pagingOptions:
            $ref: '#/components/schemas/PagingOptions'
          sortingOptions:
            $ref: '#/components/schemas/SortingOptions'
          filterOptions:
            $ref: '#/components/schemas/FilteringOptions'
          searchableOptions:
            type: array
            items:
              type: string
            nullable: true
          fieldsToReturn:
            type: array
            items:
              type: string
            nullable: true
        additionalProperties: false
        description: Class query options. Used to pass database query options
      Relation:
        type: object
        properties:
          id:
            type: string
            nullable: true
          relationType:
            $ref: '#/components/schemas/RelationType'
          gender:
            $ref: '#/components/schemas/Gender'
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          displayName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          dateOfBirth:
            type: string
            format: date-time
            nullable: true
          profession:
            type: string
            nullable: true
          mobile:
            type: string
            nullable: true
        additionalProperties: false
      RelationType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        type: integer
        format: int32
      RemunerationType:
        enum:
          - 0
          - 1
          - 2
          - 3
        type: integer
        format: int32
      SessionType:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      SortingOptions:
        type: object
        properties:
          orderBy:
            type: string
            nullable: true
          direction:
            type: string
            nullable: true
        additionalProperties: false
      StringResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: string
            description: Gets or sets the data.
            nullable: true
        additionalProperties: false
        description: class represents response.
      SystemGroupType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
        type: integer
        format: int32
      TaskBillingType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      TaskType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      TimeDuration:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
        type: integer
        format: int32
      TimeEntryStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
        type: integer
        format: int32
      TimeFrameStatus:
        enum:
          - 0
          - 1
        type: integer
        format: int32
      TimePeriod:
        type: object
        properties:
          unit:
            $ref: '#/components/schemas/TimeDuration'
          duration:
            type: number
            format: double
          durationString:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      TimeType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      UpdateClient:
        type: object
        properties:
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          billingAddress:
            $ref: '#/components/schemas/Address'
        additionalProperties: false
      UpdateProject:
        type: object
        properties:
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/ProjectStatus'
          startDate:
            type: string
            format: date-time
            nullable: true
          endDate:
            type: string
            format: date-time
            nullable: true
          isBillable:
            type: boolean
            nullable: true
        additionalProperties: false
      UpdateProjectTask:
        type: object
        properties:
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          taskBillingType:
            $ref: '#/components/schemas/TaskBillingType'
          assignedTo:
            type: array
            items:
              type: string
            nullable: true
          startDate:
            type: string
            format: date-time
            nullable: true
          endDate:
            type: string
            format: date-time
            nullable: true
          estimatedHours:
            type: number
            format: double
            nullable: true
          phaseId:
            type: string
            nullable: true
        additionalProperties: false
      WorkerType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      StringStringValuesKeyValuePair:
        type: object
        properties:
          key:
            type: string
            nullable: true
          value:
            type: array
            items:
              type: string
        additionalProperties: false
      APIEmployeeReview:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          employee:
            $ref: '#/components/schemas/APIEmployeeLookup'
          reviewGroup:
            $ref: '#/components/schemas/APIReviewGroupLookup'
          reviewCycle:
            $ref: '#/components/schemas/APIReviewCycleLookup'
          summary:
            type: string
            nullable: true
          ratings:
            type: array
            items:
              $ref: '#/components/schemas/APIReviewRating'
            nullable: true
          status:
            $ref: '#/components/schemas/ReviewStatus'
        additionalProperties: false
      APIEmployeeReviewPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIEmployeeReview'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIReviewCycle:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          reviewGroup:
            $ref: '#/components/schemas/APIReviewGroupLookup'
          name:
            type: string
            nullable: true
          fromDate:
            type: string
            format: date-time
            nullable: true
          toDate:
            type: string
            format: date-time
            nullable: true
            readOnly: true
          frequency:
            $ref: '#/components/schemas/Frequency'
          status:
            $ref: '#/components/schemas/ReviewGroupCycleStatus'
          isAdhoc:
            type: boolean
        additionalProperties: false
      APIReviewCycleLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      APIReviewCyclePagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIReviewCycle'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIReviewGroup:
        type: object
        properties:
          id:
            type: string
            nullable: true
            readOnly: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
        additionalProperties: false
      APIReviewGroupLookup:
        type: object
        properties:
          id:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
        additionalProperties: false
      APIReviewGroupPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/APIReviewGroup'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      APIReviewRating:
        type: object
        properties:
          ratingId:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          rating:
            type: number
            format: double
            nullable: true
        additionalProperties: false
      ReviewGroupCycleStatus:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      ReviewStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
        type: integer
        format: int32
      ApplicationStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
      CandidateNoteDTO:
        type: object
        properties:
          comments:
            type: string
            description: Gets or sets the commnet
            nullable: true
          tags:
            type: array
            items:
              type: string
            description: Gets or sets the candidate tags
            nullable: true
        additionalProperties: false
      EducationDTO:
        type: object
        properties:
          degree:
            type: string
            description: Gets or sets the degree.
            nullable: true
          branch:
            type: string
            description: Gets or sets the branch.
            nullable: true
          dateOfJoining:
            type: string
            description: Gets or sets the date of joining.
            nullable: true
          dateOfCompletion:
            type: string
            description: Gets or sets the date of completion.
            nullable: true
          university:
            type: string
            description: Gets or sets the university.
            nullable: true
          location:
            type: string
            description: Gets or sets the location.
            nullable: true
        additionalProperties: false
      ErrorDetail:
        type: object
        properties:
          fieldName:
            type: string
            description: Gets or sets the name of the field that caused the error.
            nullable: true
          errorMessage:
            type: string
            description: Gets or sets the error message associated with the field.
            nullable: true
        additionalProperties: false
        description: Represents a detailed error message for an individual field.
      ExperienceDTO:
        type: object
        properties:
          companyName:
            type: string
            description: Gets or sets the company name.
            nullable: true
          designation:
            type: string
            description: Gets or sets the designation.
            nullable: true
          isCurrentlyWorking:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this instance is currently
              working.
          dateOfJoining:
            type: string
            description: Gets or sets the date of joining.
            nullable: true
          dateOfRelieving:
            type: string
            description: Gets or sets the date of relieving.
            nullable: true
          location:
            type: string
            description: Gets or sets the location.
            nullable: true
        additionalProperties: false
      FieldOptionDTO:
        type: object
        properties:
          id:
            type: string
            description: Gets or sets the identifier.
            nullable: true
          value:
            type: string
            description: Gets or sets the value.
            nullable: true
        additionalProperties: false
      HiringTeamDTO:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          displayName:
            type: string
            nullable: true
          type:
            $ref: '#/components/schemas/JobRecruiterType'
        additionalProperties: false
      InterviewDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          candidateId:
            type: string
            nullable: true
          jobId:
            type: string
            nullable: true
          interviewDate:
            type: string
            nullable: true
          startTime:
            $ref: '#/components/schemas/TimeDTO'
          endTime:
            $ref: '#/components/schemas/TimeDTO'
          timeZoneId:
            type: string
            nullable: true
          scheduledBy:
            type: string
            nullable: true
          scheduledDate:
            type: string
            nullable: true
          interviewType:
            type: string
            nullable: true
          stageId:
            type: string
            nullable: true
          panelMembers:
            type: string
            nullable: true
        additionalProperties: false
      JobApplicationDetailsDTO:
        type: object
        properties:
          jobHiringStageId:
            type: string
            description: Gets or sets the job hiring stage identifier.
            nullable: true
          movedtoStageOn:
            type: string
            description: Gets or sets the moved to current stage on.
            nullable: true
          screeningQuestionsResponse:
            type: object
            additionalProperties:
              type: string
              nullable: true
            description: Gets or sets the screening questions.
            nullable: true
          appliedOn:
            type: string
            description: Gets or sets the applied on.
            nullable: true
          status:
            $ref: '#/components/schemas/ApplicationStatus'
          sourcedBy:
            type: string
            description: Gets or sets the sourced by.
            nullable: true
          sourceTitle:
            type: string
            description: Gets or sets the source title.
            nullable: true
          assignedTo:
            type: string
            description: Gets or sets the assigned to.
            nullable: true
          assignedOn:
            type: string
            description: Gets or sets the assigned on.
            nullable: true
        additionalProperties: false
      JobApplicationFieldsDTO:
        type: object
        properties:
          fieldName:
            type: string
            description: Gets or sets the name of the field.
            nullable: true
          id:
            type: string
            description: Gets or sets the Field Identifier of the field.
            nullable: true
          required:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this !:FieldListItem is
              required.
          fieldType:
            $ref: '#/components/schemas/FieldType'
          fieldOptions:
            type: array
            items:
              $ref: '#/components/schemas/FieldOptionDTO'
            description: Gets or sets the field options.
            nullable: true
        additionalProperties: false
      JobCandidateDetailsDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          firstName:
            type: string
            description: Gets or sets the first name.
            nullable: true
          lastName:
            type: string
            description: Gets or sets the last name.
            nullable: true
          middleName:
            type: string
            description: Gets or sets the middle name.
            nullable: true
          gender:
            $ref: '#/components/schemas/Gender'
          email:
            type: string
            description: Gets or sets the email.
            nullable: true
          phone:
            type: string
            description: Gets or sets the mobile phone.
            nullable: true
          educationDetails:
            type: array
            items:
              $ref: '#/components/schemas/EducationDTO'
            description: Gets or sets the education details.
            nullable: true
          candidateTags:
            type: array
            items:
              $ref: '#/components/schemas/Tag'
            description: Gets or sets the candidate tags
            nullable: true
          experienceDetails:
            type: array
            items:
              $ref: '#/components/schemas/ExperienceDTO'
            description: Gets or sets the experience details.
            nullable: true
          skills:
            type: array
            items:
              type: string
            description: Gets or sets the skills.
            nullable: true
          additionalCandidateDetails:
            type: object
            additionalProperties:
              type: string
              nullable: true
            nullable: true
          jobApplicationDetails:
            $ref: '#/components/schemas/JobApplicationDetailsDTO'
          archivedDetails:
            type: object
            additionalProperties:
              type: string
            nullable: true
        additionalProperties: false
      JobCustomFieldDTO:
        type: object
        properties:
          fieldName:
            type: string
            nullable: true
          required:
            type: boolean
          fieldType:
            $ref: '#/components/schemas/FieldType'
          value:
            type: string
            nullable: true
        additionalProperties: false
      JobDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          noOfOpenings:
            type: string
            nullable: true
          departmentName:
            type: string
            nullable: true
          jobType:
            type: string
            nullable: true
          isReferralEnabled:
            type: boolean
          isCreatedFromRequisition:
            type: boolean
          requisitionIdentifier:
            type: string
            nullable: true
          canAllowInternalEmployees:
            type: boolean
          orgJobId:
            type: string
            nullable: true
          jobLocations:
            type: array
            items:
              $ref: '#/components/schemas/LocationDTO'
            nullable: true
          hiringTeam:
            type: array
            items:
              $ref: '#/components/schemas/HiringTeamDTO'
            nullable: true
          careerPortalUrl:
            type: string
            nullable: true
          targetHireDate:
            type: string
            nullable: true
          status:
            $ref: '#/components/schemas/JobStatus'
          createdOn:
            type: string
            nullable: true
          publishedOn:
            type: string
            nullable: true
          experience:
            type: string
            nullable: true
          customFields:
            type: array
            items:
              $ref: '#/components/schemas/JobCustomFieldDTO'
            nullable: true
        additionalProperties: false
      JobRecruiterType:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 99
        type: integer
        format: int32
      JobStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
        type: integer
        format: int32
      LocationDTO:
        type: object
        properties:
          name:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          state:
            type: string
            nullable: true
          countryName:
            type: string
            nullable: true
        additionalProperties: false
      OkErrorResponse:
        type: object
        properties:
          status:
            type: integer
            description: Gets or sets the HTTP status code of the response.
            format: int32
          succeeded:
            type: boolean
            description: >-
              Gets a value indicating whether the response operation succeeded
              (HTTP status code within the range of 200 to 299).
            readOnly: true
          message:
            type: string
            description: Gets or sets the message associated with the response.
            nullable: true
          errors:
            type: array
            items:
              $ref: '#/components/schemas/ErrorDetail'
            description: Gets or sets the list of error details for individual fields.
            nullable: true
          errorCode:
            type: string
            description: Gets or sets the error code associated with the error.
            nullable: true
        additionalProperties: false
      ScoreCardDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          jobId:
            type: string
            nullable: true
          candidateId:
            type: string
            nullable: true
          stageId:
            type: string
            nullable: true
          interviewId:
            type: string
            nullable: true
          overallFeedbackDecision:
            type: string
            nullable: true
          overallComments:
            type: string
            nullable: true
          feedbackSubmittedByName:
            type: string
            nullable: true
          sections:
            type: array
            items:
              $ref: '#/components/schemas/ScorecardSectionDTO'
            nullable: true
        additionalProperties: false
      ScorecardSectionDTO:
        type: object
        properties:
          sectionName:
            type: string
            nullable: true
          skillTitle:
            type: string
            nullable: true
          skillScore:
            type: string
            nullable: true
          sectionComments:
            type: string
            nullable: true
        additionalProperties: false
      Tag:
        type: object
        properties:
          identifier:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
        additionalProperties: false
      TalentPoolApplicationFieldsDTO:
        type: object
        properties:
          fieldName:
            type: string
            description: Gets or sets the name of the field.
            nullable: true
          required:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.Hire.Core.Entities.Field is required.
          fieldType:
            $ref: '#/components/schemas/FieldType'
          isSystemDefined:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this field is system
              generated.
          fieldOptions:
            type: array
            items:
              $ref: '#/components/schemas/FieldOptionDTO'
            description: Gets or sets the field options.
            nullable: true
          id:
            type: string
            description: Gets or sets the identifier
            nullable: true
        additionalProperties: false
      TalentPoolCandidateDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          firstName:
            type: string
            description: Gets or sets the first name.
            nullable: true
          lastName:
            type: string
            description: Gets or sets the last name.
            nullable: true
          middleName:
            type: string
            description: Gets or sets the middle name.
            nullable: true
          gender:
            $ref: '#/components/schemas/Gender'
          email:
            type: string
            description: Gets or sets the email.
            nullable: true
          phone:
            type: string
            description: Gets or sets the phone
            nullable: true
          educationDetails:
            type: array
            items:
              $ref: '#/components/schemas/EducationDTO'
            description: Gets or sets the education details.
            nullable: true
          experienceDetails:
            type: array
            items:
              $ref: '#/components/schemas/ExperienceDTO'
            description: Gets or sets the experience details.
            nullable: true
          skills:
            type: array
            items:
              type: string
            description: Gets or sets the skills.
            nullable: true
          additionalCandidateDetails:
            type: object
            additionalProperties:
              type: string
            nullable: true
          talentPoolDetails:
            type: object
            additionalProperties:
              type: string
            nullable: true
        additionalProperties: false
      TalentPoolDTO:
        type: object
        properties:
          id:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          addedBy:
            type: string
            nullable: true
          addedOn:
            type: string
            nullable: true
        additionalProperties: false
      TimeDTO:
        type: object
        properties:
          hours:
            type: integer
            description: Gets or sets the hours.
            format: int32
          minutes:
            type: integer
            description: Gets or sets the minutes.
            format: int32
        additionalProperties: false
      CustomFormField:
        type: object
        properties:
          question:
            type: string
            nullable: true
          answer:
            type: string
            nullable: true
          multipleAnswers:
            type: object
            additionalProperties:
              type: string
              nullable: true
            nullable: true
        additionalProperties: false
      JobType:
        enum:
          - 0
          - 1
          - 2
        type: integer
        format: int32
      ReplacementEmployee:
        type: object
        properties:
          employeeId:
            type: string
            nullable: true
          replacementReason:
            $ref: '#/components/schemas/ReplacementReason'
        additionalProperties: false
      ReplacementReason:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        type: integer
        format: int32
      RequisitionReplacementEmployee:
        type: object
        properties:
          employeeId:
            type: integer
            format: int32
          replacementReason:
            $ref: '#/components/schemas/ReplacementReason'
        additionalProperties: false
      RequisitionRequest:
        type: object
        properties:
          id:
            type: string
            nullable: true
          requisitionFor:
            type: string
            nullable: true
          jobNumber:
            type: string
            nullable: true
          department:
            type: string
            nullable: true
          subDepartment:
            type: string
            nullable: true
          requestedBy:
            type: string
            nullable: true
          requestedOn:
            type: string
            format: date-time
          locations:
            type: array
            items:
              type: string
            nullable: true
          status:
            $ref: '#/components/schemas/RequisitionRequestStatus'
          isPriority:
            type: boolean
          budget:
            type: string
            nullable: true
          openPositions:
            type: integer
            format: int32
          hired:
            type: integer
            format: int32
            nullable: true
          requisitionTypes:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          toBeReplaced:
            type: array
            items:
              $ref: '#/components/schemas/ReplacementEmployee'
            nullable: true
          jobType:
            $ref: '#/components/schemas/JobType'
          targetHiringDate:
            type: string
            format: date-time
            nullable: true
          isArchived:
            type: boolean
          additionalComments:
            type: string
            nullable: true
          additionalFields:
            type: array
            items:
              $ref: '#/components/schemas/CustomField'
            nullable: true
        additionalProperties: false
      RequisitionRequestPagedResponse:
        type: object
        properties:
          succeeded:
            type: boolean
            description: >-
              Gets or sets a value indicating whether this
              Keka.API.Web.Core.Response`1 is succeeded.
          message:
            type: string
            description: Gets or sets the message.
            nullable: true
          errors:
            type: array
            items:
              type: string
            description: Gets or sets the errors.
            nullable: true
          data:
            type: array
            items:
              $ref: '#/components/schemas/RequisitionRequest'
            description: Gets or sets the data.
            nullable: true
          pageNumber:
            type: integer
            description: Gets or sets the page number.
            format: int32
          pageSize:
            type: integer
            description: Gets or sets the size of the page.
            format: int32
          firstPage:
            type: string
            description: Gets or sets the first page.
            format: uri
            nullable: true
          lastPage:
            type: string
            description: Gets or sets the last page.
            format: uri
            nullable: true
          totalPages:
            type: integer
            description: Gets or sets the total pages.
            format: int32
          totalRecords:
            type: integer
            description: Gets or sets the total records.
            format: int32
          nextPage:
            type: string
            description: Gets or sets the next page.
            format: uri
            nullable: true
          previousPage:
            type: string
            description: Gets or sets the previous page.
            format: uri
            nullable: true
        additionalProperties: false
        description: class represents paged response.
      RequisitionRequestStatus:
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        type: integer
        format: int32
  security:
    - oauth2: []
  paths:
    /connect/token:
      post:
        summary: Generate Access Token
        description: >-
          Use this API to fetch access token by passing authentication parameters
          ( grant_type, scope, client_id, client_secret, api_key) as form-url
          encoded in the body.
        operationId: token
        requestBody:
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                required:
                  - grant_type
                  - scope
                  - client_id
                  - client_secret
                  - api_key
                properties:
                  grant_type:
                    type: string
                    default: kekaapi
                  scope:
                    type: string
                    default: kekaapi
                  client_id:
                    type: string
                  client_secret:
                    type: string
                  api_key:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "access_token": "eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ",
                          "expires_in": 86400,
                          "token_type": "Bearer",
                          "scope": "kekaapi"
                      }
                schema:
                  type: object
                  properties:
                    access_token:
                      type: string
                      example: >-
                        eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
                    expires_in:
                      type: integer
                      example: 86400
                      default: 0
                    token_type:
                      type: string
                      example: Bearer
                    scope:
                      type: string
                      example: kekaapi
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": "unsupported_grant_type"
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: unsupported_grant_type
        deprecated: false
    /hris/employees:
      get:
        tags:
          - Employees
        summary: Get all Employees
        description: >-
          Gets all employees / the specified employees based on employee search
          parameters.
        parameters:
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: employeeNumbers
            in: query
            description: >-
              Comma separated list of one or more Employee numbers you'd like to
              filter on.
            schema:
              type: string
          - name: employmentStatus
            in: query
            description: >-
              Comma separated list of one or more Employment Status you'd like to
              filter on, allowed values are Working, Relieved.
            schema:
              type: string
          - name: inProbation
            in: query
            description: >-
              Fetches employees who are in probation. The allowed value is true or
              false.
            schema:
              type: boolean
              default: false
          - name: inNoticePeriod
            in: query
            description: >-
              Fetches employees who are in notice period. The allowed value is
              true or false.
            schema:
              type: boolean
              default: false
          - name: lastModified
            in: query
            description: >-
              Date/time when this time off request was last modified, in ISO 8601
              format (YYYY-MM-DDThh:mm:ss±hh:mm).
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfilePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfilePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - Employees
        summary: Create an Employee
        description: Create an Employee and returns created employee identifier.
        requestBody:
          description: The employee.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            text/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Employee'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/employees/{id}:
      get:
        tags:
          - Employees
        summary: Get an Employee
        description: Get an employee with specified identifier.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfileResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfileResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfileResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeeProfileResponse'
    /hris/employees/{id}/personaldetails:
      put:
        tags:
          - Employees
        summary: Update Employee personal details
        description: Update Employee personal details.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The personal details.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
            application/*+json:
              schema:
                $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/employees/{id}/jobdetails:
      put:
        tags:
          - Employees
        summary: Update employee job details
        description: Update employee job details.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The job details.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/JobDetailsUpdateRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailsUpdateRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDetailsUpdateRequest'
            application/*+json:
              schema:
                $ref: '#/components/schemas/JobDetailsUpdateRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/employees/updatefields:
      get:
        tags:
          - Employees
        summary: Get all update fields
        parameters:
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeeFieldResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeeFieldResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/groups:
      get:
        tags:
          - Groups
        summary: Get all Groups
        description: Get all Groups
        parameters:
          - name: groupTypeIds
            in: query
            description: >-
              Comma separated list of one or more Group Type Ids you’d like to
              filter on.
            schema:
              type: string
          - name: systemGroupTypes
            in: query
            description: >-
              Comma separated list of one or more System Group Type you’d like to
              filter on.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The Last Modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/GroupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/grouptypes:
      get:
        tags:
          - Groups
        summary: Get all Group Types
        description: Gets all Group Types.
        parameters:
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GroupTypePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/GroupTypePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/departments:
      get:
        tags:
          - Departments
        summary: Get all departments
        description: Get all departments
        parameters:
          - name: departmentIds
            in: query
            schema:
              type: string
          - name: lastModified
            in: query
            description: The Last Modified Date.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/locations:
      get:
        tags:
          - Locations
        summary: Get all Locations
        description: ' Gets all Locations.'
        parameters:
          - name: lastModified
            in: query
            description: The Last Modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LocationPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/LocationPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/jobtitles:
      get:
        tags:
          - JobTitle
        summary: Get all jobtitles
        description: Get all jobtitles
        parameters:
          - name: lastModified
            in: query
            description: The Last Modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JobTitlePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/JobTitlePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/currencies:
      get:
        tags:
          - Currency
        summary: Get all currencies
        description: Get all currencies
        parameters:
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CurrencyPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/CurrencyPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /hris/noticeperiods:
      get:
        tags:
          - NoticePeriod
        summary: Get all noticeperiods
        description: Get all noticeperiods
        parameters:
          - name: noticePeriodIds
            in: query
            description: The notice period ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
    /time/leavetypes:
      get:
        tags:
          - LeaveTypes
        summary: Get all Leave Types
        description: Get all Leave Types
        parameters:
          - name: leaveTypeIds
            in: query
            description: >-
              Comma separated list of one or more leave type identifiers you'd
              like to filter on..
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LeaveTypePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/LeaveTypePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /time/leavebalance:
      get:
        tags:
          - LeaveBalance
        summary: Get all Leave balances
        description: Get all the leave balances
        parameters:
          - name: employeeIds
            in: query
            description: The employee ids.
            schema:
              type: string
          - name: leaveTypeIds
            in: query
            description: The leave type ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /time/leaverequests:
      get:
        tags:
          - LeaveRequests
        summary: Get all Leave Requests
        description: >-
          Get all the leaves in the organization between `from` and `to` date.If
          both `from` and `to` are not specified, last 30 days records are
          returned.`from` date should be before `to` date.The difference between
          `from` and `to` date cannot be more than **90** days.
        parameters:
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: from
            in: query
            description: From date.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: To date.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LeaveRequestPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/LeaveRequestPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - LeaveRequests
        summary: Create an Leave Request
        description: Create an leave request and returns leave request identifier.
        requestBody:
          description: The leave request.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/PostLeaveRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/PostLeaveRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/PostLeaveRequest'
            application/*+json:
              schema:
                $ref: '#/components/schemas/PostLeaveRequest'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /time/attendance:
      get:
        tags:
          - Attendance
        summary: Get all Attendance Records
        description: >-
          Gets all Attendance records between date range `from` and `to`.If both
          `from` and `to` are not specified, last 30 days records are
          returned.From `date` should be before `to` date.The difference between
          `from` and `to` date cannot be more than **90** days.
        parameters:
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: from
            in: query
            description: >-
              Date from records to retrieve. If not specified defaults to `to -
              30` days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date to records can be retrieved. If not specified defaults to
              `today`.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AttendanceSummaryPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
    /time/capturescheme:
      get:
        tags:
          - AttendanceCaptureScheme
        summary: Get all captureschemes
        description: Get all captureschemes
        parameters:
          - name: captureschemeIds
            in: query
            description: The capturescheme ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
    /time/holidayscalendar:
      get:
        tags:
          - HolidayCalendar
        summary: Get all holidays Calendar
        description: Get all holidays Calendar
        parameters:
          - name: holidaysCalendarIds
            in: query
            description: The holidaysCalendar ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
    /payroll/salarycomponents:
      get:
        tags:
          - SalaryComponents
        summary: Get all Salary Components
        description: Gets all the salary components.
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APISalaryComponentPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APISalaryComponentPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygroups:
      get:
        tags:
          - PayGroups
        summary: Get all Pay Groups
        description: Gets all Pay Groups.
        parameters:
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygroups/{payGroupId}/paycycles:
      get:
        tags:
          - PayCycles
        summary: Get all Pay Cycles
        parameters:
          - name: payGroupId
            in: path
            description: The Pay Group Id
            required: true
            schema:
              type: string
          - name: runStatus
            in: query
            description: >-
              Comma separated list of one or more run Status you'd like to filter
              on, allowed values are Pending, Finalized, Partial.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/payregister:
      get:
        tags:
          - PayCycles
        summary: Get Pay Register
        parameters:
          - name: payGroupId
            in: path
            description: The Pay Group Id
            required: true
            schema:
              type: string
          - name: payCycleId
            in: path
            description: The Pay cycle Id
            required: true
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches:
      get:
        tags:
          - PayCycles
        summary: Get all Pay Batches
        parameters:
          - name: payGroupId
            in: path
            description: The Pay Group Id
            required: true
            schema:
              type: string
          - name: payCycleId
            in: path
            description: The Pay cycle Id
            required: true
            schema:
              type: string
          - name: status
            in: query
            description: >-
              Comma separated list of one or more payment Status you'd like to
              filter on, allowed values are UnPaid, Paid.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BatchPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BatchPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches/{payBatchId}/payments:
      get:
        tags:
          - PayCycles
        summary: Get all Batch Payments
        description: >-
          Gets all payments for the specified pay group Id and pay cycle Id and
          pay batch Id / specified pay group id and pay cycle Id and pay batch Id
          and payment status filter
        parameters:
          - name: payGroupId
            in: path
            description: The Pay Group Id
            required: true
            schema:
              type: string
          - name: payCycleId
            in: path
            description: The Pay cycle Id
            required: true
            schema:
              type: string
          - name: payBatchId
            in: path
            description: The Pay Batch Id
            required: true
            schema:
              type: string
          - name: status
            in: query
            description: >-
              Comma separated list of one or more payment Status you'd like to
              filter on, allowed values are UnPaid, Paid.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/EmployeePaymentPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/EmployeePaymentPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      put:
        tags:
          - PayCycles
        summary: Update the Payments status
        description: >-
          Update the Payments status.It will allow only 100 bulk transactions from
          that particular batch.
        parameters:
          - name: payGroupId
            in: path
            description: The Pay Group Id
            required: true
            schema:
              type: string
          - name: payCycleId
            in: path
            description: The Pay cycle Id
            required: true
            schema:
              type: string
          - name: payBatchId
            in: path
            description: The Pay Batch Id
            required: true
            schema:
              type: string
        requestBody:
          description: The Payment Transactions.
          content:
            application/json-patch+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTransaction'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTransaction'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTransaction'
            application/*+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentTransaction'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paygrades:
      get:
        tags:
          - PayGrades
        summary: Get all Pay Grades
        description: Gets all Pay Grades.
        parameters:
          - name: payGradeIds
            in: query
            description: The paygrade ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /payroll/paybands:
      get:
        tags:
          - PayBands
        summary: Get all Pay Bands
        description: Gets all Pay Bands.
        parameters:
          - name: payBandIds
            in: query
            description: The payband ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/clients:
      get:
        tags:
          - Clients
        summary: Get all clients
        description: Get all clients
        parameters:
          - name: clientIds
            in: query
            description: >-
              Comma separated list of one or more employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: lastModified
            in: query
            description: >-
              Date/time when this time off request was last modified, in ISO 8601
              format (YYYY-MM-DDThh:mm:ss±hh:mm).
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIClientPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIClientPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - Clients
        summary: Create a Client
        description: Create a Client and returns created client identifier.
        requestBody:
          description: The client.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Client'
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
            text/json:
              schema:
                $ref: '#/components/schemas/Client'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Client'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/clients/{id}:
      get:
        tags:
          - Clients
        summary: Get a client
        description: Gets the specified client based on identifier.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIClientResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIClientResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      put:
        tags:
          - Clients
        summary: Update a Client
        description: Update Client Details.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The update client.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateClient'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateClient'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateClient'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateClient'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{projectId}/phases:
      get:
        tags:
          - ProjectPhases
        summary: Get project phases.
        description: Get project phases.
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: lastModified
            in: query
            description: >-
              Date/time when this time off request was last modified, in ISO 8601
              format (YYYY-MM-DDThh:mm:ss±hh:mm).
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ProjectPhasePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ProjectPhasePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - ProjectPhases
        summary: Create a Project Phase
        description: Create a Project Phase and returns created phase identifier
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: phaseName
            in: query
            description: Name of the phase.
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects:
      get:
        tags:
          - Projects
        summary: Get all projects.
        description: Get all projects.
        parameters:
          - name: clientIds
            in: query
            description: >-
              Comma separated list of one or more employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: lastModified
            in: query
            description: >-
              Date/time when this time off request was last modified, in ISO 8601
              format (YYYY-MM-DDThh:mm:ss±hh:mm).
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIProjectPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIProjectPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - Projects
        summary: Create a Project
        description: Create an Project and returns created project identifier.
        requestBody:
          description: The project.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Project'
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Project'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{id}:
      get:
        tags:
          - Projects
        summary: Get a project
        description: Gets the specified project based on identifier.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIProjectResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIProjectResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      put:
        tags:
          - Projects
        summary: Update a Project
        description: Update Project Details.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The update project.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateProject'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProject'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateProject'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateProject'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{id}/allocations:
      get:
        tags:
          - Projects
        summary: Get a project allocations
        description: Gets the specified project allocations based on identifier.
        parameters:
          - name: id
            in: path
            description: The identifier.
            required: true
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{id}/timeentries:
      get:
        tags:
          - Projects
        summary: Get project timesheet entries.
        description: >-
          Gets the project time entries between selected from and to date range.If
          both `from` and `to` are not specified, last 30 days records are
          returned.From `date` should be before `to` date.The difference between
          `from` and `to` date cannot be more than **90** days.
        parameters:
          - name: id
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: from
            in: query
            description: >-
              Date from records to retrieve. If not specified defaults to `to -
              30` days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date to records can be retrieved. If not specified defaults to
              `today`.
            schema:
              type: string
              format: date-time
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{projectId}/tasks:
      get:
        tags:
          - Tasks
        summary: Get project tasks.
        description: Gets the project tasks.
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: lastModified
            in: query
            description: >-
              Date/time when this time off request was last modified, in ISO 8601
              format (YYYY-MM-DDThh:mm:ss±hh:mm).
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIProjectTaskPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIProjectTaskPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - Tasks
        summary: Create a task
        description: Create project task and returns created task identifier.
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The project task.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
            application/*+json:
              schema:
                $ref: '#/components/schemas/ProjectTask'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{projectId}/tasks/{taskId}:
      put:
        tags:
          - Tasks
        summary: Update a task
        description: Update project task.
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: taskId
            in: path
            description: The task identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The project task.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/UpdateProjectTask'
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectTask'
            text/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectTask'
            application/*+json:
              schema:
                $ref: '#/components/schemas/UpdateProjectTask'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/projects/{projectId}/tasks/{taskId}/timeentries:
      get:
        tags:
          - Tasks
        summary: Get project task time entries.
        description: >-
          Gets the project task time entries between selected from and to date
          range.If both `from` and `to` are not specified, last 30 days records
          are returned.From `date` should be before `to` date.The difference
          between `from` and `to` date cannot be more than **90** days.
        parameters:
          - name: projectId
            in: path
            description: The project identifier.
            required: true
            schema:
              type: string
          - name: taskId
            in: path
            description: The task identifier.
            required: true
            schema:
              type: string
          - name: from
            in: query
            description: >-
              Date from records to retrieve. If not specified defaults to `to -
              30` days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date to records can be retrieved. If not specified defaults to
              `today`.
            schema:
              type: string
              format: date-time
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /psa/timeentries:
      get:
        tags:
          - TimesheetEntries
        summary: Get project timesheet entries.
        description: >-
          Gets the time entries between selected from and to date range.If both
          `from` and `to` are not specified, last 30 days records are
          returned.From `date` should be before `to` date.The difference between
          `from` and `to` date cannot be more than **90** days.
        parameters:
          - name: from
            in: query
            description: >-
              Date from records to retrieve. If not specified defaults to `to -
              30` days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date to records can be retrieved. If not specified defaults to
              `today`.
            schema:
              type: string
              format: date-time
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: projectIds
            in: query
            description: >-
              Comma separated list of one or more project ids you'd like to filter
              on.
            schema:
              type: string
          - name: taskIds
            in: query
            description: >-
              Comma separated list of one or more task ids you'd like to filter
              on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /pms/timeframes:
      get:
        tags:
          - TimeFrames
        summary: Gets time frame list.
        description: Gets all time frames.
        parameters:
          - name: timeFrameIds
            in: query
            description: >-
              Comma separated list of one or more Time Frame ids you'd like to
              filter on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APITimeFramePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APITimeFramePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /pms/goals:
      get:
        tags:
          - Goal
        summary: Gets goal list.
        description: Gets all goals along with parent goal and child goals
        parameters:
          - name: goalIds
            in: query
            description: >-
              Comma separated list of one or more Goal ids you'd like to filter
              on.
            schema:
              type: string
          - name: timeFrameIds
            in: query
            description: >-
              Comma separated list of one or more Time Frame ids you'd like to
              filter on.
            schema:
              type: string
          - name: employeeIds
            in: query
            description: >-
              Comma separated list of one or more Employee ids you'd like to
              filter on.
            schema:
              type: string
          - name: from
            in: query
            description: >-
              Date/time when goal time period will start, in ISO 8601 format
              (YYYY-MM-DDThh:mm:ss±hh). If not specified  defaults `to` - 60 days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date/time when goal time period will end, in ISO 8601 format
              (YYYY-MM-DDThh:mm:ss±hh). If not specified  defaults `from` + 60
              days.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIGoalPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIGoalPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /pms/goals/{goalId}/progress:
      put:
        tags:
          - Goal
        summary: Update goal progress
        description: Update the goal progress
        parameters:
          - name: goalId
            in: path
            description: The goal identifier.
            required: true
            schema:
              type: string
        requestBody:
          description: The update goal progress view.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/APIUpdateGoalProgress'
            application/json:
              schema:
                $ref: '#/components/schemas/APIUpdateGoalProgress'
            text/json:
              schema:
                $ref: '#/components/schemas/APIUpdateGoalProgress'
            application/*+json:
              schema:
                $ref: '#/components/schemas/APIUpdateGoalProgress'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/BooleanResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /pms/badges:
      get:
        tags:
          - Badge
        summary: Gets badge list.
        description: Gets all badge.
        parameters:
          - name: badgeIds
            in: query
            description: >-
              Comma separated list of one or more Badge ids you'd like to filter
              on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIBadgePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIBadgePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /pms/praise:
      get:
        tags:
          - Praise
        summary: Gets praise list.
        description: Gets all employees praises
        parameters:
          - name: praiseIds
            in: query
            description: >-
              Comma separated list of one or more praise ids you'd like to filter
              on.
            schema:
              type: string
          - name: from
            in: query
            description: >-
              Date/time from records to retrieve, in ISO 8601 format
              (YYYY-MM-DDThh:mm:ss±hh). If not specified defaults to `to - 30`
              days.
            schema:
              type: string
              format: date-time
          - name: to
            in: query
            description: >-
              Date/time to records to retrieve, in ISO 8601 format
              (YYYY-MM-DDThh:mm:ss±hh). If not specified defaults to `today`.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APIPraisePagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/APIPraisePagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
      post:
        tags:
          - Praise
        summary: Add Praise
        description: Add an praise and returns created praise identifier.
        requestBody:
          description: The praise.
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/AddPraise'
            application/json:
              schema:
                $ref: '#/components/schemas/AddPraise'
            text/json:
              schema:
                $ref: '#/components/schemas/AddPraise'
            application/*+json:
              schema:
                $ref: '#/components/schemas/AddPraise'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/StringResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /v1/hire/jobs:
      get:
        tags:
          - Jobs
        summary: Get all jobs
        description: Get all Published, Confidential and Archived jobs
        parameters:
          - name: lastModified
            in: query
            schema:
              type: string
              format: date-time
          - name: JobStatus
            in: query
            schema:
              type: integer
              format: int32
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/applicationfields:
      get:
        tags:
          - Jobs
        summary: Get application fields
        description: Get job application fields
        parameters:
          - name: jobId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobApplicationFieldsDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobApplicationFieldsDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidates:
      get:
        tags:
          - Jobs
        summary: Get job candidates
        description: Get active or archived candidates in a specified job
        parameters:
          - name: jobId
            in: path
            required: true
            schema:
              type: string
          - name: isArchived
            in: query
            schema:
              type: boolean
              default: false
          - name: lastModified
            in: query
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobCandidateDetailsDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/JobCandidateDetailsDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidate/{candidateId}:
      put:
        tags:
          - Jobs
        summary: Updated a candidate
        description: Updated the candidate
        parameters:
          - name: candidateId
            in: path
            required: true
            schema:
              type: string
          - name: jobId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
            text/json:
              schema:
                type: object
                additionalProperties: {}
            application/*+json:
              schema:
                type: object
                additionalProperties: {}
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: string
              text/json:
                schema:
                  type: string
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidate/{candidateId}/notes:
      post:
        tags:
          - Jobs
        summary: Adds candidate note
        description: Updated the candidate
        parameters:
          - name: candidateId
            in: path
            required: true
            schema:
              type: string
          - name: jobId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/CandidateNoteDTO'
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateNoteDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CandidateNoteDTO'
            application/*+json:
              schema:
                $ref: '#/components/schemas/CandidateNoteDTO'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: string
              text/json:
                schema:
                  type: string
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidate:
      post:
        tags:
          - Jobs
        summary: Post a job candidate
        description: Post a candidate to a specified job
        parameters:
          - name: jobId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
            text/json:
              schema:
                type: object
                additionalProperties: {}
            application/*+json:
              schema:
                type: object
                additionalProperties: {}
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: string
              text/json:
                schema:
                  type: string
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidate/{candidateId}/interviews:
      get:
        tags:
          - Jobs
        summary: Get interview scheduled and completed for a job candidate
        description: Get interview scheduled and completed for a job and a candidate
        parameters:
          - name: candidateId
            in: path
            required: true
            schema:
              type: string
          - name: jobId
            in: path
            required: true
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InterviewDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InterviewDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/jobs/{jobId}/candidate/{candidateId}/scorecards:
      get:
        tags:
          - Jobs
        summary: Get scorecard of a specified candidate for a job candidate
        description: Get the scorecards which are submitted for a specified job candidate
        parameters:
          - name: candidateId
            in: path
            required: true
            schema:
              type: string
          - name: jobId
            in: path
            required: true
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScoreCardDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScoreCardDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/talentpool:
      get:
        tags:
          - TalentPool
        summary: Get all Talent pools
        description: Get all active talent pools
        parameters:
          - name: lastModified
            in: query
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/talentpool/{talentPoolId}/applicationfields:
      get:
        tags:
          - TalentPool
        summary: Get Talent pool application fields
        description: Get application fields of a specified talent pool
        parameters:
          - name: talentPoolId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/talentpool/{talentPoolId}/candidates:
      get:
        tags:
          - TalentPool
        summary: Get Talent pool candidates
        description: Get candidates in a specified talent pool
        parameters:
          - name: talentPoolId
            in: path
            required: true
            schema:
              type: string
          - name: lastModified
            in: query
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolCandidateDTO'
              text/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TalentPoolCandidateDTO'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /v1/hire/talentpool/{talentPoolId}/candidate:
      post:
        tags:
          - TalentPool
        summary: Post a candidate to a talent pool
        description: Post a candidate to a specified talent pool
        parameters:
          - name: talentPoolId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json-patch+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
            text/json:
              schema:
                type: object
                additionalProperties: {}
            application/*+json:
              schema:
                type: object
                additionalProperties: {}
          required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: string
              text/json:
                schema:
                  type: string
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/OkErrorResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '500':
            description: Server Error
    /expense/categories:
      get:
        tags:
          - ExpenseCategory
        summary: Get all Expense Categories
        description: Get all Expense Categories
        parameters:
          - name: expenseCategoryIds
            in: query
            description: >-
              Comma separated list of one or more  expense categories identifiers
              you'd like to filter on.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /expense/claims:
      get:
        tags:
          - Expense
        summary: Get all Expense Claims
        description: Get all Expense Claims
        parameters:
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExpenseClaimPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ExpenseClaimPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /expensepolicies:
      get:
        tags:
          - ExpensePolicy
        summary: Get all expensepolicies
        description: Get all expensepolicies
        parameters:
          - name: expensepolicyIds
            in: query
            description: The expensepolicy ids.
            schema:
              type: string
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
    /assets:
      get:
        tags:
          - Asset
        summary: Get all Assets
        description: Get all Assets
        parameters:
          - name: assetIds
            in: query
            description: The asset ids.
            schema:
              type: string
          - name: employeeIds
            in: query
            description: The employee ids.
            schema:
              type: string
          - name: assetStatus
            in: query
            description: The asset status.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AssetPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/AssetPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /assets/types:
      get:
        tags:
          - AssetType
        summary: Get all Asset Types
        description: Get all Asset Types
        parameters:
          - name: assetTypeIds
            in: query
            description: The asset type ids.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /assets/categories:
      get:
        tags:
          - AssetCategory
        summary: Get all Asset Categories
        description: Get all Asset Categories
        parameters:
          - name: assetCategoryIds
            in: query
            description: The asset category ids.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /assets/conditions:
      get:
        tags:
          - AssetCondition
        summary: Get all Asset Conditions
        description: Get all Asset Conditions
        parameters:
          - name: assetConditionIds
            in: query
            description: The asset condition ids.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/ApiLookupPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
    /requisition/requests:
      get:
        tags:
          - RequisitionRequest
        summary: Get all Requisition Requests
        description: Get all Requisition Requests
        parameters:
          - name: requisitionRequestIds
            in: query
            description: The requisition request ids.
            schema:
              type: string
          - name: status
            in: query
            description: The status.
            schema:
              type: string
          - name: lastModified
            in: query
            description: The last modified.
            schema:
              type: string
              format: date-time
          - name: pageNumber
            in: query
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: >-
              Represents how many results you'd like to retrieve per request
              (page). Default is 100. Max is 200
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequisitionRequestPagedResponse'
              text/json:
                schema:
                  $ref: '#/components/schemas/RequisitionRequestPagedResponse'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
  x-readme:
    headers: []
    explorer-enabled: true
    proxy-enabled: true
    samples-enabled: true
  _id: 65db913e5fedf4007cc50fe9
konfigCliVersion: 1.38.61
