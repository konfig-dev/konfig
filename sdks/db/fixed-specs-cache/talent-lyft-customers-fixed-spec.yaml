publishJson:
  company: TalentLyft
  serviceName: Customers
  sdkName: talent-lyft-customers-{language}-sdk
  clientName: TalentLyftCustomers
  metaDescription: >-
    TalentLyft is an innovative recruitment software that streamlines the hiring
    process, from sourcing candidates to applicant tracking. It offers powerful
    tools for recruiters and HR professionals to attract, evaluate, and hire top
    talent efficiently. With features like job posting, candidate management,
    and customizable workflows, TalentLyft helps companies build their dream
    teams with ease.
  apiStatusUrls: inherit
  homepage: talentlyft.com
  developerDocumentation: developers.talentlyft.com/
  categories:
    - recruiting
    - hr
    - talent_management
    - applicant_tracking
    - job_postings
rawSpecString: |
  openapi: 3.0.1
  info:
    title: TalentLyft Customers API
    version: v2
  paths:
    /v2/articles:
      get:
        tags:
          - Blogs
        summary: Get articles
        parameters:
          - name: contains
            in: query
            description: ''
            schema:
              type: string
          - name: tags
            in: query
            description: ''
            schema:
              type: array
              items:
                type: string
          - name: authors
            in: query
            description: ''
            schema:
              type: array
              items:
                type: string
                format: uuid
          - name: status
            in: query
            description: ''
            schema:
              $ref: >-
                #/components/schemas/TalentLyft.Data.Enumerators.ConvertStatusTypes
          - name: page
            in: query
            description: ''
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            description: ''
            schema:
              type: integer
              format: int32
              default: 20
          - name: sort
            in: query
            description: ''
            schema:
              type: string
              default: published
          - name: order
            in: query
            description: ''
            schema:
              type: string
              default: desc
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.ArticleReadonly]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/articles/{id}:
      get:
        tags:
          - Blogs
        summary: Get article
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.ArticleReadonly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates:
      get:
        tags:
          - Candidates
        summary: Get candidates
        parameters:
          - name: jobs
            in: query
            schema:
              type: array
              items:
                type: integer
                format: int32
          - name: page
            in: query
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            schema:
              type: integer
              format: int32
              default: 100
          - name: createAfterDate
            in: query
            schema:
              type: string
              format: date-time
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.CandidateSimpleReadonly]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Candidates
        summary: Create Candidate
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.NewApplicationReadOnly
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}:
      get:
        tags:
          - Candidates
        summary: Get candidate
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateReadonly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Candidates
        summary: Edit candidate
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleWrite'
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/tags:
      put:
        tags:
          - Candidates
        summary: Updates candidate's tags
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateTags'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateTags'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateTags'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateTags'
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/skills:
      put:
        tags:
          - Candidates
        summary: Updates candidate's skills
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateSkills'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateSkills'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateSkills'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EditCandidateSkills'
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/note:
      post:
        tags:
          - Candidates
        summary: Creates a note on the candidate's timeline
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteWrite'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteReadWrite'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/log_activity:
      post:
        tags:
          - Candidates
        summary: Log activity on the candidate's timeline
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/evaluations:
      post:
        tags:
          - Candidates
        summary: Log evaluation
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteApi'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteApi'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteApi'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteApi'
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteRead'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/activities:
      get:
        tags:
          - Candidates
        summary: Get candidate activities
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: page
            in: query
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            schema:
              type: integer
              format: int32
              default: 50
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.ActivityReadOnly]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/applications/{applicationId}:
      get:
        tags:
          - Candidates
        summary: Get candidate application by id
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationReadonly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/applications/{applicationId}/education:
      post:
        tags:
          - Candidates
        summary: Create education for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.ApplicantProfileItem
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/applications/{applicationId}/education/{educationId}:
      put:
        tags:
          - Candidates
        summary: Update education for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: educationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Candidates
        summary: Delete education for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: educationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/applications/{applicationId}/experience:
      post:
        tags:
          - Candidates
        summary: Create experience for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.ApplicantProfileItem
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/applications/{applicationId}/experience/{experienceId}:
      put:
        tags:
          - Candidates
        summary: Update experience for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: experienceId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Candidates
        summary: Delete experience for a candidate application
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: applicationId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: experienceId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/contacts:
      get:
        tags:
          - Candidates
        summary: Get candidate's contacts
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.CandidateContactsReadonly
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Candidates
        summary: Create candidate's contact
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
        responses:
          '201':
            description: Created
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/candidates/{id}/contacts/{contactId}:
      put:
        tags:
          - Candidates
        summary: Update candidate's contact
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: contactId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Candidates
        summary: Delete candidate's contact
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: contactId
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/departments:
      get:
        tags:
          - Departments
        summary: Get departments
        parameters:
          - name: eids
            in: query
            description: External ids
            schema:
              type: array
              items:
                type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/Adopto.Common.Api.Dto.DepartmentReadOnly
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Departments
        summary: Create department
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.DepartmentReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/departments/{id}:
      get:
        tags:
          - Departments
        summary: Get department
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.DepartmentReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Departments
        summary: Update department
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Departments
        summary: Delete department
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/departments/{id}/external:
      get:
        tags:
          - Departments
        summary: Get department by external ID
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.DepartmentReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/employees:
      get:
        tags:
          - Employees
        summary: Get employees
        parameters:
          - name: eids
            in: query
            description: ''
            schema:
              type: array
              items:
                type: string
          - name: departments
            in: query
            description: ''
            schema:
              type: array
              items:
                type: integer
                format: int32
          - name: page
            in: query
            description: ''
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            description: ''
            schema:
              type: integer
              format: int32
              default: 20
          - name: sort
            in: query
            description: first_name, last_name, department_name
            schema:
              type: string
              default: first_name
          - name: contains
            in: query
            description: ''
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.Settings.EmployeeWriteRead]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Employees
        summary: Create employee
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/employees/{id}:
      get:
        tags:
          - Employees
        summary: Get employee
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Employees
        summary: Save employee
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
        responses:
          '200':
            description: Success
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Employees
        summary: Delete employee
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/employees/sync:
      post:
        tags:
          - Employees
        summary: Sync all employees
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeSync
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeSync
            text/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeSync
            application/*+json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeSync
        responses:
          '201':
            description: Created
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/events:
      get:
        tags:
          - Events
        summary: Get meetings
        parameters:
          - name: members
            in: query
            schema:
              type: array
              items:
                type: string
                format: uuid
          - name: candidates
            in: query
            schema:
              type: array
              items:
                type: integer
                format: int32
          - name: types
            in: query
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TalentLyft.Data.Enumerators.MeetingTypes'
          - name: jobs
            in: query
            schema:
              type: array
              items:
                type: integer
                format: int32
          - name: rangeStart
            in: query
            schema:
              type: string
              format: date-time
          - name: rangeEnd
            in: query
            schema:
              type: string
              format: date-time
          - name: contains
            in: query
            schema:
              type: string
          - name: page
            in: query
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            schema:
              type: integer
              format: int32
              default: 20
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.MeetingReadOnly]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/events/{id}:
      get:
        tags:
          - Events
        summary: Get meeting
        parameters:
          - name: id
            in: path
            description: ''
            required: true
            schema:
              type: string
              format: uuid
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.MeetingReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/forms:
      get:
        tags:
          - Forms
        summary: Get forms
        parameters:
          - name: page
            in: query
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            schema:
              type: integer
              format: int32
              default: 20
          - name: contains
            in: query
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.Convert.ConvertForm]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/forms/{id}:
      get:
        tags:
          - Forms
        summary: Get form deatils
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertForm'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/forms/{id}/candidate:
      post:
        tags:
          - Forms
        summary: Submit candidate
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite2'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite2'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite2'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.CandidateWrite2'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.NewApplicationReadOnly
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs:
      get:
        tags:
          - Jobs
        summary: Get jobs
        parameters:
          - name: status
            in: query
            description: >-
              Returns jobs with the current status. Possible values (draft,
              published, closed, internal and archived).
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          - name: locations
            in: query
            description: ''
            schema:
              type: array
              items:
                type: string
          - name: tags
            in: query
            description: ''
            schema:
              type: array
              items:
                type: string
          - name: departments
            in: query
            description: Department ids
            schema:
              type: array
              items:
                type: integer
                format: int32
          - name: page
            in: query
            description: Page, default 1
            schema:
              type: integer
              format: int32
              default: 1
          - name: perPage
            in: query
            description: Per Page, default 20
            schema:
              type: integer
              format: int32
              default: 20
          - name: sort
            in: query
            description: az, za, modified_date
            schema:
              type: string
              default: az
          - name: languageCode
            in: query
            description: Language
            schema:
              type: string
          - name: contains
            in: query
            description: Title contains value
            schema:
              type: string
          - name: details
            in: query
            description: Job details (description)
            schema:
              type: boolean
              default: false
          - name: includeStages
            in: query
            description: Include job stages
            schema:
              type: boolean
              default: false
          - name: includeJobRequisition
            in: query
            description: Include job requisition
            schema:
              type: boolean
              default: false
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.JobSimpleReadOnly]
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Jobs
        summary: Create job
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs/locations:
      get:
        tags:
          - Jobs
        summary: Returns a collection of the locations of the public jobs
        parameters:
          - name: subdomain
            in: query
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items: {}
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs/{id}:
      get:
        tags:
          - Jobs
        summary: Get Job
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: languageCode
            in: query
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Jobs
        summary: Update job
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobReadOnly'
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Jobs
        summary: Delete job
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs/{id}/status_changes:
      get:
        tags:
          - Jobs
        summary: Job status changes
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobStatusChange'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs/{id}/stages:
      get:
        tags:
          - Jobs
        summary: Get job stages
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/jobs/{id}/form:
      get:
        tags:
          - Jobs
        summary: Get Job Form
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: languageCode
            in: query
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormReadonly
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Jobs
        summary: Update job's form
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationFormWrite'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationFormWrite'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationFormWrite'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationFormWrite'
        responses:
          '204':
            description: No Content
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/members:
      get:
        tags:
          - Members
        summary: View account users
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/pipelines:
      get:
        tags:
          - Pipelines
        summary: Retrieve all pipelines
        parameters:
          - name: contains
            in: query
            schema:
              type: string
          - name: type
            in: query
            schema:
              $ref: >-
                #/components/schemas/TalentLyft.Data.Enumerators.Company.PipelineTypes
          - name: includeArchived
            in: query
            schema:
              type: boolean
              default: false
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Pipelines
        summary: Create pipeline
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/pipelines/{id}:
      get:
        tags:
          - Pipelines
        summary: Get pipeline
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Pipelines
        summary: Update pipeline
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            application/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            text/json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
            application/*+json:
              schema:
                $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Pipelines
        summary: Arhive pipeline
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '202':
            description: Accepted
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/rejection_reasons:
      get:
        tags:
          - Reasons
        summary: Get reasons
        parameters:
          - name: contains
            in: query
            schema:
              type: string
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Reasons
        summary: Create reason
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/rejection_reasons/{id}:
      get:
        tags:
          - Reasons
        summary: Get reason
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Reasons
        summary: Update reason
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Reasons
        summary: Delete reason
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer
              format: int32
          - name: targetReason
            in: query
            schema:
              type: integer
              format: int32
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/subscriptions:
      get:
        tags:
          - Subscriptions
        summary: View Subscriptions
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: >-
                      #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      post:
        tags:
          - Subscriptions
        summary: Create a Subscriptions
        parameters:
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '409':
            description: Conflict
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
    /v2/subscriptions/{id}:
      get:
        tags:
          - Subscriptions
        summary: View a Subscription
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
              format: uuid
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      put:
        tags:
          - Subscriptions
        summary: Update a Subscription
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
              format: uuid
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        requestBody:
          content:
            application/json-patch+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
            application/*+json:
              schema:
                $ref: >-
                  #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '409':
            description: Conflict
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '422':
            description: Client Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
      delete:
        tags:
          - Subscriptions
        summary: Delete a Subscription
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
              format: uuid
          - name: X-TL-CompanyId
            in: header
            description: Company Id
            schema:
              type: guid
          - name: X-TL-Subdomain
            in: header
            description: Account subdomain
            schema:
              type: guid
          - name: X-TL-UserId
            in: header
            description: Team member id
            schema:
              type: guid
        responses:
          '204':
            description: No Content
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
          '500':
            description: Server Error
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel
  components:
    schemas:
      Adopto.Client.Web.Api.Utils.Errors.ErrorResultModel:
        type: object
        properties:
          Message:
            type: string
            description: Frendly Message
            nullable: true
          Errors:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Client.Web.Api.Utils.Errors.ValidationError
            description: Errors list
            nullable: true
          ErrorCode:
            type: integer
            description: Error code
            format: int32
            nullable: true
        additionalProperties: false
        description: Error result model
      Adopto.Client.Web.Api.Utils.Errors.ValidationError:
        type: object
        properties:
          Field:
            type: string
            description: ''
            nullable: true
          Message:
            type: string
            description: ''
            nullable: true
        additionalProperties: false
        description: ''
      Adopto.Common.Api.Dto.ActivityReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Created:
            type: string
            format: date-time
          Scheduled:
            type: boolean
            readOnly: true
          LastModified:
            type: string
            format: date-time
            nullable: true
          ActivityType:
            type: integer
            format: int32
          ActivityTypeEnum:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ActivityTypes'
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          Member:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MemberReadonly'
          Meeting:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MeetingReadOnly'
          Employee:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmployeeSimpleReadonly'
          Stage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          Article:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ArticleVerySimpleReadOnly'
          Application:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationSimpleReadonly'
          Note:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteReadonly'
          Email:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailReadonly'
          ExternalCommenter:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ExternalCommentReadWrite'
          Candidate:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.CandidateVerySimpleReadonly
          RejectionReason:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite
          Evaluation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationWriteRead'
          ComplianceConsent:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ConsentReadonly'
          AssessmentOrder:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AssessmentOrder'
          Tag:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.TagWriteRead'
          LoggedActivity:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LogActivity'
          Task:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Tasks.TaskReadonly'
          Pool:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pool'
          Page:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
          Session:
            $ref: >-
              #/components/schemas/Adopto.Common.Dto.Tracking.SessionEventSummaryReadonly
          Vendor:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.IntegrationReadonly'
          Sms:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SmsReadonly'
          Form:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertForm'
          Action:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
          JobOffer:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobOffer'
          JobRequisitionHiredApplicant:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.JobRequisitions.JobRequisitionActivityHiredApplicant
          IsPrivate:
            type: boolean
            readOnly: true
          HasAttachment:
            type: boolean
            readOnly: true
          ExternalCommentName:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Admin.FileDto:
        type: object
        properties:
          FileName:
            type: string
            nullable: true
          Content:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          ConvertedUrl:
            type: string
            nullable: true
          ContentType:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.AnswerReadonly:
        type: object
        properties:
          Response:
            type: string
            nullable: true
          File:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
          Choices:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.AnswerReadonlyV2:
        type: object
        properties:
          Choices:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          File:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
          Value:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AnswerWrite:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Choices:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          Body:
            type: string
            nullable: true
          File:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
        additionalProperties: false
      Adopto.Common.Api.Dto.App.Assessment:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          ExternalId:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
          Description:
            type: string
            nullable: true
          LearnMore:
            type: string
            nullable: true
          Language:
            type: string
            nullable: true
          AssessmentType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.AssessmentTypes'
          Vendor:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AssessmentVendor'
          Price:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.WebJobs.Common.Dto.Api.AssessmentPriceItem
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AssessmentAttachment:
        type: object
        properties:
          FileName:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          ContentType:
            type: string
            nullable: true
          ConvertedUrl:
            type: string
            nullable: true
          MalwareScanStatus:
            $ref: '#/components/schemas/Adopto.Common.Api.Enumerators.MalwareScanStatus'
          MalwareScanResult:
            $ref: '#/components/schemas/Adopto.Common.Api.Enumerators.MalwareScanResult'
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AssessmentOrder:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Status:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.AssessmentResultStatusTypes
          Assessment:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.Assessment'
          Created:
            type: string
            format: date-time
          LastModified:
            type: string
            format: date-time
          Requestor:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MemberReadonly'
          Stage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          ApplicationId:
            type: integer
            format: int32
          Result:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AssessmentResult'
          Anonymized:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AssessmentPlan:
        type: object
        properties:
          Assessment:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.Assessment'
          JobId:
            type: integer
            format: int32
          StageId:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AssessmentResult:
        type: object
        properties:
          Score:
            type: string
            nullable: true
          ResultUrl:
            type: string
            nullable: true
          Summary:
            type: string
            nullable: true
          Duration:
            type: integer
            format: int32
          Details:
            nullable: true
          Grade:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.AssessmentResultGradeTypes
          Attachments:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.App.AssessmentAttachment
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.AssessmentVendor:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          Logo:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.CandidateWrite:
        required:
          - FirstName
        type: object
        properties:
          FirstName:
            maxLength: 300
            minLength: 0
            type: string
          LastName:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          CoverLetter:
            type: string
            nullable: true
          Summary:
            type: string
            nullable: true
          Title:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Company:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          ExternalId:
            maxLength: 512
            minLength: 0
            type: string
            nullable: true
          StageId:
            type: integer
            format: int32
            nullable: true
          JobId:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
            nullable: true
          PoolId:
            type: integer
            format: int32
            nullable: true
          Applied:
            type: boolean
          IsProspect:
            type: boolean
          Disqualified:
            type: boolean
          DisqualifiedAt:
            type: string
            format: date-time
            nullable: true
          DisqualificationReason:
            type: integer
            format: int32
            nullable: true
          Created:
            type: string
            format: date-time
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Avatar:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
          Tags:
            type: array
            items:
              type: string
            nullable: true
          Skills:
            type: array
            items:
              type: string
            nullable: true
          Resume:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
          UnstructuredData:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.App.UnstructuredCandidateData
          Attachments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
            nullable: true
          Notes:
            type: string
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          PhoneNumbers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          SocialNetworks:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          Email:
            type: string
            nullable: true
          Phone:
            type: string
            nullable: true
          Answers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AnswerWrite'
            nullable: true
          CustomFieldAnswers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AnswerWrite'
            nullable: true
          Projects:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ProjectWriteRead'
            nullable: true
          Experiences:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead'
            nullable: true
          Educations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead'
            nullable: true
          Languages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.LanguageWrite'
            nullable: true
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceWrite'
          Compliance:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ComplianceWrite'
          PreferredLanguage:
            type: string
            nullable: true
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Candidate.SalutationTypes
          GJobsCandidateId:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.CandidateWrite2:
        required:
          - FirstName
        type: object
        properties:
          FirstName:
            maxLength: 300
            minLength: 0
            type: string
          LastName:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Title:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Company:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Avatar:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          PhoneNumbers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          SocialNetworks:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactWrite'
            nullable: true
          CustomFieldAnswers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AnswerWrite'
            nullable: true
          Compliance:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ComplianceWrite'
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceWrite'
          Skills:
            type: array
            items:
              type: string
            nullable: true
          Interests:
            type: array
            items:
              type: string
            nullable: true
          ExternalId:
            maxLength: 512
            minLength: 0
            type: string
            nullable: true
          PreferredLanguage:
            type: string
            nullable: true
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Candidate.SalutationTypes
          Resume:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
          UnstructuredData:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.App.UnstructuredCandidateData
        additionalProperties: false
      Adopto.Common.Api.Dto.App.EducationWriteRead:
        required:
          - Institution
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Institution:
            maxLength: 2000
            minLength: 0
            type: string
          Degree:
            maxLength: 2000
            minLength: 0
            type: string
            nullable: true
          Description:
            type: string
            nullable: true
          From:
            type: string
            format: date-time
            nullable: true
          To:
            type: string
            format: date-time
            nullable: true
          Current:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.App.ExperienceWriteRead:
        required:
          - Title
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            maxLength: 2000
            minLength: 0
            type: string
          Company:
            maxLength: 2000
            minLength: 0
            type: string
            nullable: true
          Description:
            type: string
            nullable: true
          From:
            type: string
            format: date-time
            nullable: true
          To:
            type: string
            format: date-time
            nullable: true
          Current:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.App.LanguageWrite:
        type: object
        properties:
          LanguageIso:
            type: string
            nullable: true
          LanguageProficiency:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.App.ProjectWriteRead:
        required:
          - ProjectName
        type: object
        properties:
          Id:
            type: integer
            format: int32
          ProjectName:
            maxLength: 2000
            minLength: 0
            type: string
          ProjectUrl:
            maxLength: 2000
            minLength: 0
            type: string
            nullable: true
          Description:
            type: string
            nullable: true
          From:
            type: string
            format: date-time
            nullable: true
          To:
            type: string
            format: date-time
            nullable: true
          Current:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.App.UnstructuredCandidateData:
        type: object
        properties:
          Summary:
            type: string
            nullable: true
          Projects:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ProjectWriteRead'
            nullable: true
          Experiences:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead'
            nullable: true
          Educations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicantProfileItem:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
          Location:
            type: string
            nullable: true
          Description:
            type: string
            nullable: true
          DateFrom:
            type: string
            format: date-time
            nullable: true
          DateTo:
            type: string
            format: date-time
            nullable: true
          ApplicantProfileItemTypeId:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ProfileItemTypes'
          CertificateName:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          ApplicantProfileId:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationFormFieldReadonly:
        required:
          - Body
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Key:
            type: string
            nullable: true
          DisplayName:
            type: string
            nullable: true
          Label:
            type: string
            nullable: true
          Type:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          FieldLocationType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.FormLocationType'
          Required:
            type: boolean
          Body:
            maxLength: 2000
            type: string
          SupportedTypes:
            type: array
            items:
              type: string
            nullable: true
          Choices:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormQuestionChoicesReadonly
            nullable: true
          Fields:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormFieldReadonly
            nullable: true
          MaxSize:
            type: integer
            format: int32
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationFormQuestionChoicesReadonly:
        required:
          - Body
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Body:
            type: string
          Disqualify:
            type: boolean
          Tag:
            type: string
            nullable: true
          Value:
            type: number
            format: double
            nullable: true
          Ordinal:
            type: integer
            format: int32
            nullable: true
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          DisplayName:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationFormQuestionReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Required:
            type: boolean
          Body:
            type: string
            nullable: true
          Type:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          Choices:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormQuestionChoicesReadonly
            nullable: true
          Answer:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.AnswerReadonly'
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationFormReadonly:
        type: object
        properties:
          FormFields:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormFieldReadonly
            nullable: true
          Questions:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormFieldReadonly
            nullable: true
          CustomFields:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormFieldReadonly
            nullable: true
          Gdpr:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.GdprReadonly'
          Eeoc:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EeoReadWrite'
          Compliance:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Compliance'
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationFormWrite:
        type: object
        properties:
          QuestionRequiredness:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.QuestionRequiredness'
          Questions:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormFieldReadonly
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationReadonly:
        type: object
        properties:
          Answers:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationFormQuestionReadonly
            nullable: true
            deprecated: true
          ScreeningQuestionAnswers:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Forms.CandidateAnswerReadonly`1[Adopto.Common.Api.Dto.Forms.ScreeningQuestion]
            nullable: true
          Projects:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ProjectWriteRead'
            nullable: true
          Experiences:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.ExperienceWriteRead'
            nullable: true
          Educations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.EducationWriteRead'
            nullable: true
          Languages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.LanguageReadonly'
            nullable: true
          Attachments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
            nullable: true
          Resume:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
          Summary:
            type: string
            nullable: true
          CoverLetter:
            type: string
            nullable: true
          MatchScore:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MatchScore'
          CustomFields:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Forms.CandidateAnswerReadonly`1[Adopto.Common.Api.Dto.CustomFields.CustomField]
            nullable: true
          Evaluations:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.CandidateEvaluationSummary
            nullable: true
          EeeopIsSelfIdentified:
            type: boolean
          HasActiveOffer:
            type: boolean
          Id:
            type: integer
            format: int32
          CandidateId:
            type: integer
            format: int32
          ProfileUrl:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          Disqualified:
            type: boolean
          DisqualifiedAt:
            type: string
            format: date-time
            nullable: true
          DisqualificationReason:
            type: string
            nullable: true
          Stage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          ExternalId:
            type: string
            nullable: true
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceReadonly'
          Evaluation:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.EvaluationRateSummaryReadonly
          PreviousEvaluation:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.EvaluationRateSummaryReadonly
        additionalProperties: false
      Adopto.Common.Api.Dto.ApplicationSimpleReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          CandidateId:
            type: integer
            format: int32
          ProfileUrl:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          Disqualified:
            type: boolean
          DisqualifiedAt:
            type: string
            format: date-time
            nullable: true
          DisqualificationReason:
            type: string
            nullable: true
          Stage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          ExternalId:
            type: string
            nullable: true
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceReadonly'
          Evaluation:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.EvaluationRateSummaryReadonly
          PreviousEvaluation:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.EvaluationRateSummaryReadonly
        additionalProperties: false
      Adopto.Common.Api.Dto.ArticleReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
          Text:
            type: string
            nullable: true
          MetaDescription:
            type: string
            nullable: true
          MetaTitle:
            type: string
            nullable: true
          ImageUrl:
            type: string
            nullable: true
          Author:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          LastModifiedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          AbsoluteUrl:
            type: string
            nullable: true
          RelativeUrl:
            type: string
            nullable: true
          Slug:
            type: string
            nullable: true
          LastModified:
            type: string
            format: date-time
          Published:
            type: string
            format: date-time
            nullable: true
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ConvertStatusTypes'
          Tags:
            type: array
            items:
              type: string
            nullable: true
          AuthorPublishedFormatted:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ArticleVerySimpleReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.AttendeeReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Status:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.EventAttendeeStatusTypes
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EventAttendeeTypes'
          Organizer:
            type: boolean
          Email:
            type: string
            nullable: true
          Candidate:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.CandidateVerySimpleReadonly
          Member:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          ExternalAttendee:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ExternalAttendeeReadonly'
        additionalProperties: false
      Adopto.Common.Api.Dto.Audience:
        type: object
        properties:
          JobSearchFilter:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Filters.JobCandidatesSearchFilter
          Query:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Filters.FilterOperator'
            nullable: true
          Campaigns:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.AudienceCampaign'
        additionalProperties: false
      Adopto.Common.Api.Dto.AudienceCampaign:
        type: object
        properties:
          CampaignId:
            type: string
            format: uuid
          EmailStatus:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EmailEventTypes'
        additionalProperties: false
      Adopto.Common.Api.Dto.AutomatedAction:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Automation.ActionTypes
          Action:
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateAnalytics:
        type: object
        properties:
          NumberOfPageViews:
            type: integer
            format: int32
          NumberOfSessions:
            type: integer
            format: int32
          TimeFirstSeen:
            type: string
            format: date-time
            nullable: true
          TimeLastSeen:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateCompliance:
        type: object
        properties:
          Gdpr:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ComplianceConsentReadonly'
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateContactsReadonly:
        type: object
        properties:
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          PhoneNumbers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          SocialNetworks:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateEvaluationSummary:
        required:
          - Name
        type: object
        properties:
          IsEvaluatedByMe:
            type: boolean
          EvaluationSummary:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationSummary'
          Id:
            type: integer
            format: int32
          Name:
            maxLength: 50
            minLength: 0
            type: string
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.StageTypes'
          Ordinal:
            type: integer
            format: int32
          ActiveCandidates:
            type: integer
            format: int32
            nullable: true
          DisqualifiedCandidates:
            type: integer
            format: int32
            nullable: true
          Candidates:
            type: integer
            format: int32
            nullable: true
            readOnly: true
          Actions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
            nullable: true
          Evaluations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationTemplate'
            nullable: true
          Integrations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.IntegrationApp'
            nullable: true
          HasESignatureDocuments:
            type: boolean
          HasJobOfferDocuments:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateInteraction:
        type: object
        properties:
          LastActivity:
            type: string
            format: date-time
            nullable: true
          LastContacted:
            type: string
            format: date-time
            nullable: true
          LastMeeting:
            type: string
            format: date-time
            nullable: true
          LastCall:
            type: string
            format: date-time
            nullable: true
          LastEmail:
            type: string
            format: date-time
            nullable: true
          LastHeardFrom:
            type: string
            format: date-time
            nullable: true
          PageViews:
            type: integer
            format: int32
          MessagesSent:
            type: integer
            format: int32
          MessagesReceived:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
            readOnly: true
          PossibleDuplicates:
            type: boolean
          Title:
            type: string
            nullable: true
          Avatar:
            type: string
            nullable: true
          Company:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          LastModified:
            type: string
            format: date-time
            nullable: true
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Tags:
            type: array
            items:
              type: string
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          Uid:
            type: string
            format: uuid
          SnoozedUntil:
            type: string
            format: date-time
            nullable: true
          Unsubscribed:
            type: boolean
          UnsubscribedAt:
            type: string
            format: date-time
            nullable: true
          PreferredLanguage:
            type: string
            nullable: true
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Candidate.SalutationTypes
          Skills:
            type: array
            items:
              type: string
            nullable: true
          PhoneNumbers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          SocialNetworks:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          Pools:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pool'
            nullable: true
          Analytics:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateAnalytics'
          Interaction:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateInteraction'
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceReadonly'
          CustomFields:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Forms.CandidateAnswerReadonly`1[Adopto.Common.Api.Dto.CustomFields.CustomField]
            nullable: true
          CandidateCompliance:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateCompliance'
          RawData:
            nullable: true
          UnstructuredData:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.App.UnstructuredCandidateData
          Resume:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
          Applications:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationSimpleReadonly
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateSimpleReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
            readOnly: true
          PossibleDuplicates:
            type: boolean
          Title:
            type: string
            nullable: true
          Avatar:
            type: string
            nullable: true
          Company:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          LastModified:
            type: string
            format: date-time
            nullable: true
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Tags:
            type: array
            items:
              type: string
            nullable: true
          Emails:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ContactReadWrite'
            nullable: true
          Uid:
            type: string
            format: uuid
          SnoozedUntil:
            type: string
            format: date-time
            nullable: true
          Unsubscribed:
            type: boolean
          UnsubscribedAt:
            type: string
            format: date-time
            nullable: true
          PreferredLanguage:
            type: string
            nullable: true
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Candidate.SalutationTypes
          Applications:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.ApplicationSimpleReadonly
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateSimpleWrite:
        required:
          - FirstName
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FirstName:
            maxLength: 300
            minLength: 0
            type: string
          LastName:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Title:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Company:
            maxLength: 300
            minLength: 0
            type: string
            nullable: true
          Avatar:
            type: string
            nullable: true
          PreferredLanguage:
            type: string
            nullable: true
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Candidate.SalutationTypes
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Source:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.SourceWrite'
        additionalProperties: false
      Adopto.Common.Api.Dto.CandidateVerySimpleReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
            readOnly: true
          Avatar:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Compliance:
        type: object
        properties:
          Gdpr:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.GdprReadonly'
          Eeoc:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EeoReadWrite'
        additionalProperties: false
      Adopto.Common.Api.Dto.ComplianceConsentReadonly:
        type: object
        properties:
          Created:
            type: string
            format: date-time
            nullable: true
          RetentionPeriodConsent:
            type: boolean
          RetentionPeriod:
            type: string
            format: date-time
            nullable: true
          ShareConsent:
            type: boolean
          ShareComplianceText:
            type: string
            nullable: true
          PrivacyPolicy:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ComplianceSimpleReadonly:
        type: object
        properties:
          GdprIsEnabled:
            type: boolean
          EeoIsEnabled:
            type: boolean
          CompanyLegalName:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ComplianceWrite:
        type: object
        properties:
          Gdpr:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.GdprWrite'
          Eeoc:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EeocWrite'
        additionalProperties: false
      Adopto.Common.Api.Dto.ConsentReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Created:
            type: string
            format: date-time
          RetentionPeriodConsent:
            type: boolean
          RetentionPeriod:
            type: string
            format: date-time
            nullable: true
          ShareConsent:
            type: boolean
          ShareComplianceText:
            type: string
            nullable: true
          PrivacyPolicy:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ContactReadWrite:
        required:
          - Value
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Value:
            maxLength: 300
            minLength: 0
            type: string
          Type:
            maxLength: 50
            minLength: 0
            type: string
            nullable: true
          IsPrimary:
            type: boolean
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ContactWrite:
        required:
          - Value
        type: object
        properties:
          Value:
            maxLength: 1000
            minLength: 0
            type: string
          Type:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ConversationMember:
        type: object
        properties:
          MemberId:
            type: string
            format: uuid
            nullable: true
          Email:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.ConversationMemberTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertAnalytics:
        type: object
        properties:
          Albacross:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.AlbacrossReadOnly
          FacebookPixel:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.FacebookPixelReadOnly
          GoogleAnalytics:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.GoogleAnalyticsReadOnly
          Hotjar:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.HotjarReadOnly
          GoogleTagManager:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.GoogleTagManagerReadOnly
          LinkedInInsightTag:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Integrations.LinkedInInsightTagWriteRead
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertForm:
        required:
          - FormSubmitAction
          - Name
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
          Created:
            type: string
            format: date-time
            nullable: true
          LastModified:
            type: string
            format: date-time
            nullable: true
          ModifiedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          FormFields:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Forms.FormField'
            nullable: true
          FormSubmitAction:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertFormSubmitAction
          ExternalUrl:
            type: string
            nullable: true
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ConvertStatusTypes'
          Views:
            type: integer
            format: int32
          Submissions:
            type: integer
            format: int32
          SubmissionRate:
            type: number
            format: double
          AppearsOn:
            type: integer
            format: int32
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          Actions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertFormSubmitAction:
        required:
          - EmailBody
          - EmailSubject
          - Type
        type: object
        properties:
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.ConvertFormSubmitActionTypes
          Message:
            type: string
            nullable: true
          PageId:
            type: integer
            format: int32
            nullable: true
          Page:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
          EmailSubject:
            type: string
          EmailBody:
            type: string
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertMenuItem:
        required:
          - Label
        type: object
        properties:
          Id:
            type: integer
            format: int32
          ParentId:
            type: integer
            format: int32
            nullable: true
          Children:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertMenuItem'
            nullable: true
          Label:
            type: string
          IsInternal:
            type: boolean
            readOnly: true
          Page:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
          ExternalUrl:
            type: string
            nullable: true
          IsHighlighted:
            type: boolean
          Order:
            type: integer
            format: int32
          ResolvedUrl:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertPage:
        required:
          - Name
          - Title
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
          Title:
            type: string
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.PageTypes'
          BrandType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.Company.BrandTypes'
          NeoBrandLogo:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.Company.BrandTypes'
          MetaTitle:
            type: string
            nullable: true
          MetaDescription:
            type: string
            nullable: true
          MetaUrl:
            type: string
            nullable: true
          Slug:
            type: string
            nullable: true
          RelativeUrl:
            type: string
            nullable: true
          ResolvedUrl:
            type: string
            nullable: true
          Language:
            type: string
            nullable: true
          Views:
            type: integer
            format: int32
          UniqueViews:
            type: integer
            format: int32
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ConvertStatusTypes'
          IsPrimary:
            type: boolean
            nullable: true
          Created:
            type: string
            format: date-time
            nullable: true
          LastModified:
            type: string
            format: date-time
            nullable: true
          ModifiedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          Website:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertWebsite'
          Analytics:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertAnalytics'
          LocalPageMenu:
            nullable: true
            readOnly: true
          Sections:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertSection'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertSection:
        required:
          - Layout
          - Position
          - Type
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Header:
            type: string
            nullable: true
          Subheader:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SectionTypes'
          Layout:
            type: string
          Data:
            nullable: true
          MenuTitle:
            type: string
            nullable: true
          MenuShowFlag:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertTheme:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          IsPrivate:
            type: boolean
          Meta:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertThemeMeta'
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertThemeMeta:
        type: object
        properties:
          Css:
            type: string
            nullable: true
          CssUrls:
            type: array
            items:
              type: string
            nullable: true
          HeaderJavascript:
            type: string
            nullable: true
          HeaderJavascriptUrls:
            type: array
            items:
              type: string
            nullable: true
          BodyJavascript:
            type: string
            nullable: true
          BodyJavascriptUrls:
            type: array
            items:
              type: string
            nullable: true
          SectionLayouts:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertThemeSectionLayout
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertThemeSectionLayout:
        type: object
        properties:
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SectionTypes'
          Layouts:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertThemeSectionLayoutItem
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertThemeSectionLayoutItem:
        type: object
        properties:
          Key:
            type: string
            nullable: true
          Html:
            type: string
            nullable: true
          ImageUrl:
            type: string
            nullable: true
          Availability:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.ConvertLayoutAvailabilityTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertWebsite:
        required:
          - Name
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
          Subdomain:
            type: string
            nullable: true
          CustomDomain:
            type: string
            nullable: true
          Slug:
            type: string
            nullable: true
          RelativeUrl:
            type: string
            nullable: true
          ResolvedUrl:
            type: string
            nullable: true
          FaviconUrl:
            type: string
            nullable: true
          LogoUrl:
            type: string
            nullable: true
          BrandingSettings:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertWebsiteBrandingSettings
          SocialSettings:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertWebsiteSocialSettings
          AdvancedSettings:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertWebsiteAdvancedSettings
          Created:
            type: string
            format: date-time
            nullable: true
          LastModified:
            type: string
            format: date-time
            nullable: true
          ModifiedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          IsPrimary:
            type: boolean
          Theme:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertTheme'
          MenuItems:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertMenuItem'
            nullable: true
          Compliance:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ComplianceSimpleReadonly'
          Pages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
            nullable: true
            readOnly: true
          NotLinkedPages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
            nullable: true
            readOnly: true
          SystemPages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertPage'
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertWebsiteAdvancedSettings:
        type: object
        properties:
          Language:
            type: string
            nullable: true
          Subdomain:
            type: string
            nullable: true
          CustomDomain:
            type: string
            nullable: true
          AllowIndexing:
            type: boolean
          CareerSiteAddress:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertWebsiteBrandingSettings:
        type: object
        properties:
          FontFamily:
            type: string
            nullable: true
          MainBrandColor:
            type: string
            nullable: true
          TextColor:
            type: string
            nullable: true
          HeaderColor:
            type: string
            nullable: true
          SubHeaderColor:
            type: string
            nullable: true
          CustomCss:
            type: string
            nullable: true
          CustomJs:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Convert.ConvertWebsiteSocialSettings:
        type: object
        properties:
          Facebook:
            type: string
            nullable: true
          Twitter:
            type: string
            nullable: true
          Instagram:
            type: string
            nullable: true
          LinkedIn:
            type: string
            nullable: true
          CompanyWebsite:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Credential:
        type: object
        properties:
          Key:
            type: integer
            format: int32
          Value:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.CustomFields.CustomField:
        required:
          - Text
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Text:
            maxLength: 150
            minLength: 0
            type: string
          InternalDescription:
            maxLength: 400
            minLength: 0
            type: string
            nullable: true
          ProviderType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ProviderType'
          QuestionType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.QuestionTypes'
          VisibilityType:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
          FieldType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.FieldType'
          FieldLocationType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.FormLocationType'
          IsConfidential:
            type: boolean
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          Options:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.CustomFields.CustomFieldOption
            nullable: true
          ElasticMeta:
            type: string
            nullable: true
          OrdinalNumber:
            type: integer
            format: int32
          IsNeogov:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.CustomFields.CustomFieldOption:
        required:
          - Text
        type: object
        properties:
          Id:
            type: integer
            format: int32
            nullable: true
          Text:
            maxLength: 150
            minLength: 0
            type: string
          Ordinal:
            type: integer
            format: int32
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          Disqualify:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.DepartmentReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          ExternalId:
            type: string
            nullable: true
          ParentId:
            type: integer
            format: int32
            nullable: true
          Children:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.DepartmentReadOnly'
            nullable: true
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
        additionalProperties: false
      Adopto.Common.Api.Dto.DepartmentSimpleReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EditCandidateSkills:
        type: object
        properties:
          Skills:
            type: array
            items:
              type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EditCandidateTags:
        type: object
        properties:
          Tags:
            type: array
            items:
              type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EeoReadWrite:
        type: object
        properties:
          EeoSurvey:
            type: boolean
          OfccpSurvey:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.EeocWrite:
        type: object
        properties:
          Gender:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EeocGenderTypes'
          Disability:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EeocDisabilityTypes'
          Race:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EeocRaceTypes'
          Veteran:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EeocVeteranTypes'
        additionalProperties: false
      Adopto.Common.Api.Dto.EmailCredentials:
        type: object
        properties:
          EmailProvider:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EmailProviderTypes'
          Credentials:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Credential'
            nullable: true
          Name:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EmailReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          ActivityId:
            type: integer
            format: int32
          Subject:
            type: string
            nullable: true
          Message:
            type: string
            nullable: true
          Attachments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
            nullable: true
          Opens:
            type: integer
            format: int32
            nullable: true
          Clicks:
            type: integer
            format: int32
            nullable: true
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.EmailEventTypes'
          To:
            type: string
            nullable: true
          Cc:
            type: string
            nullable: true
          Bcc:
            type: string
            nullable: true
          SubscriptionType:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.CommunicationSubscriptionTypes
          ThreadId:
            type: string
            format: uuid
            nullable: true
          ConversationId:
            type: string
            format: uuid
            nullable: true
            readOnly: true
          NumberOfEmails:
            type: integer
            format: int32
          ReplyEmailId:
            type: integer
            format: int32
            nullable: true
          RawUrl:
            type: string
            nullable: true
          EmailSender:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ConversationMember'
          EmailReceivers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ConversationMember'
            nullable: true
          Visibility:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
          EmailReceiver:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MemberReadonly'
        additionalProperties: false
      Adopto.Common.Api.Dto.EmailTag:
        type: object
        properties:
          Key:
            type: string
            nullable: true
          Value:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EmailToWrite:
        type: object
        properties:
          Email:
            type: string
            nullable: true
          CandidateId:
            type: integer
            format: int32
            nullable: true
          MemberId:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EmailWrite:
        required:
          - Body
          - Subject
        type: object
        properties:
          To:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailToWrite'
            nullable: true
          ExcludedTo:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailToWrite'
            nullable: true
          Cc:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailToWrite'
            nullable: true
          Bcc:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailToWrite'
            nullable: true
          Body:
            type: string
          Subject:
            maxLength: 500
            type: string
          Attachments:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          Tags:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailTag'
            nullable: true
          EmailCredentials:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailCredentials'
          SenderId:
            type: string
            format: uuid
            nullable: true
          JobId:
            type: integer
            format: int32
            nullable: true
          StageId:
            type: integer
            format: int32
            nullable: true
          TemplateId:
            type: integer
            format: int32
            nullable: true
          ReplyEmailId:
            type: integer
            format: int32
            nullable: true
          ThreadId:
            type: string
            format: uuid
            nullable: true
          SubscriptionType:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.CommunicationSubscriptionTypes
          SendAt:
            type: string
            format: date-time
            nullable: true
          LanguageCode:
            type: string
            nullable: true
          Visibility:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
          CampaignId:
            type: string
            format: uuid
            nullable: true
          SendingType:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Communication.EmailSendingType
          TriggeredBy:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Campaign.EmailTriggeredBy
          Audience:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Audience'
          IsBulkAction:
            type: boolean
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EmployeeSimpleReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationItemWriteRead:
        type: object
        properties:
          Name:
            type: string
            nullable: true
          Purpose:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          Traits:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationTraits'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationQuestion:
        type: object
        properties:
          Question:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          Rate:
            type: integer
            format: int32
            nullable: true
          Note:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationRateSummaryReadonly:
        type: object
        properties:
          DefinitelyNo:
            type: integer
            format: int32
          'No':
            type: integer
            format: int32
          'Yes':
            type: integer
            format: int32
          DefinitelyYes:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationSummary:
        type: object
        properties:
          DefinitelyNo:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          'No':
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          'Yes':
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          DefinitelyYes:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationTemplate:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Company.EvaluationTemplateTypes
          Evaluation:
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationTraits:
        type: object
        properties:
          Name:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
          Questions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationQuestion'
            nullable: true
          Rate:
            type: integer
            format: int32
            nullable: true
          Note:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationWriteApi:
        type: object
        properties:
          Rate:
            type: integer
            format: int32
          Note:
            type: string
            nullable: true
          EvaluatedById:
            type: string
            format: uuid
          StageId:
            type: integer
            format: int32
          JobId:
            type: integer
            format: int32
          ApplicationId:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.EvaluationWriteRead:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Created:
            type: string
            format: date-time
          LastModified:
            type: string
            format: date-time
          EvaluatedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          Stage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageReadOnly'
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          ApplicationId:
            type: integer
            format: int32
          HasAttachment:
            type: boolean
          Scorecards:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationItemWriteRead'
            nullable: true
          Rate:
            type: integer
            format: int32
            nullable: true
          Note:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ExternalAttendeeReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Email:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.ExternalCommentReadWrite:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.FileReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FileName:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          ContentType:
            type: string
            nullable: true
          ConvertedUrl:
            type: string
            nullable: true
          DocumentType:
            type: integer
            format: int32
          Created:
            type: string
            format: date-time
          CreatedBy:
            type: string
            nullable: true
          MalwareScanStatus:
            $ref: '#/components/schemas/Adopto.Common.Api.Enumerators.MalwareScanStatus'
          MalwareScanResult:
            $ref: '#/components/schemas/Adopto.Common.Api.Enumerators.MalwareScanResult'
        additionalProperties: false
      Adopto.Common.Api.Dto.Filters.FilterOperator:
        required:
          - Key
          - Operator
        type: object
        properties:
          Key:
            type: string
          Value:
            type: string
            nullable: true
          Operator:
            $ref: >-
              #/components/schemas/TalentLyft.Storage.Search.Enumerators.FilterOperatorTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.Filters.JobCandidatesSearchFilter:
        type: object
        properties:
          Query:
            type: string
            nullable: true
          Job:
            type: integer
            format: int32
          Stage:
            type: integer
            format: int32
            nullable: true
          Disqualified:
            type: boolean
            nullable: true
          Tags:
            type: array
            items:
              type: string
            nullable: true
          Answers:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          SourceTypes:
            type: array
            items:
              $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceTypes'
            nullable: true
          DisqualificationReasons:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          CustomFields:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          Pools:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          ApplicantId:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.CandidateAnswerReadonly`1[Adopto.Common.Api.Dto.CustomFields.CustomField]:
        type: object
        properties:
          Field:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.CustomFields.CustomField'
          Answer:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.AnswerReadonlyV2'
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.CandidateAnswerReadonly`1[Adopto.Common.Api.Dto.Forms.ScreeningQuestion]:
        type: object
        properties:
          Field:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Forms.ScreeningQuestion'
          Answer:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.AnswerReadonlyV2'
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.DefaultField:
        required:
          - Text
        type: object
        properties:
          Id:
            type: integer
            format: int32
          QuestionType:
            type: string
            nullable: true
          Text:
            type: string
          ResourceKey:
            type: string
            nullable: true
          DisplayName:
            type: string
            nullable: true
          Options:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Forms.DefaultFieldOption
            nullable: true
          Fields:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Forms.DefaultField'
            nullable: true
          FieldLocation:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.FormLocationType'
          Position:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.DefaultFieldOption:
        required:
          - Text
        type: object
        properties:
          DisplayName:
            type: string
            nullable: true
          Id:
            type: integer
            format: int32
            nullable: true
          Text:
            maxLength: 150
            minLength: 0
            type: string
          Ordinal:
            type: integer
            format: int32
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          Disqualify:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.FormField:
        type: object
        properties:
          Id:
            type: integer
            format: int32
            nullable: true
          Position:
            type: integer
            format: int32
          AllowOrdering:
            type: boolean
          RequirednessStatus:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          AllowedRequirednessStatuses:
            type: array
            items:
              $ref: >-
                #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
            nullable: true
          CustomField:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.CustomFields.CustomField'
          ScreeningQuestion:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Forms.ScreeningQuestion'
          DefaultField:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Forms.DefaultField'
        additionalProperties: false
      Adopto.Common.Api.Dto.Forms.ScreeningQuestion:
        required:
          - Text
        type: object
        properties:
          Id:
            type: integer
            format: int32
            nullable: true
          Text:
            type: string
          QuestionType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.QuestionTypes'
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          Options:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.CustomFields.CustomFieldOption
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.GdprReadonly:
        type: object
        properties:
          CompanyLegalName:
            type: string
            nullable: true
          IsEnabled:
            type: boolean
          RetentionPeriod:
            type: integer
            format: int32
            nullable: true
          RequirePrivacyPolicyConsent:
            type: boolean
            nullable: true
          RequireShareCompliance:
            type: boolean
            nullable: true
          ShareComplianceText:
            type: string
            nullable: true
          PrivacyPolicy:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.GdprWrite:
        type: object
        properties:
          RetentionConsent:
            type: boolean
          PrivacyPolicyConsent:
            type: boolean
          ShareConsent:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Infrastructure.CodeReadonly:
        type: object
        properties:
          Value:
            type: string
            nullable: true
          Text:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          SecondaryText:
            type: string
            nullable: true
          Children:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Infrastructure.SubscriptionDto:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          ServiceType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.ServiceTypes'
          Url:
            type: string
            nullable: true
          HubSecret:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          Updated:
            type: string
            format: date-time
          Topics:
            type: array
            items:
              type: string
            nullable: true
          AdditionalData:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.IntegrationApp:
        type: object
        properties:
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.IntegrationTypes'
          App:
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.IntegrationReadonly:
        type: object
        properties:
          Title:
            type: string
            nullable: true
          Slug:
            type: string
            nullable: true
          Logo:
            type: string
            nullable: true
          DocumentationUrl:
            type: string
            nullable: true
          IsIntegrated:
            type: boolean
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.IntegrationTypes'
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.AlbacrossReadOnly:
        type: object
        properties:
          ClientId:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.FacebookPixelReadOnly:
        type: object
        properties:
          PixelId:
            type: string
            nullable: true
          MetatagVerification:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.GoogleAnalyticsReadOnly:
        type: object
        properties:
          TrackingId:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.GoogleTagManagerReadOnly:
        type: object
        properties:
          TrackingId:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.HotjarReadOnly:
        type: object
        properties:
          SiteId:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Integrations.LinkedInInsightTagWriteRead:
        type: object
        properties:
          PartnerId:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.InterviewPlanReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobOffer:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Status:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.OfferDocumentStatusTypes
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.OfferTypes
          ApprovalSteps:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.OfferApprovalStep'
            nullable: true
          Offer:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.OfferDocument'
          AdditionalDocuments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.OfferDocument'
            nullable: true
          InternalVariables:
            nullable: true
          Variables:
            nullable: true
          ConversationId:
            type: string
            format: uuid
            nullable: true
          ShowApproveRejectActions:
            type: boolean
          CandidateId:
            type: integer
            format: int32
          ApplicationId:
            type: integer
            format: int32
          JobId:
            type: integer
            format: int32
          ConversationCount:
            type: integer
            format: int32
            nullable: true
          OfferTemplateId:
            type: integer
            format: int32
            nullable: true
          Email:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.EmailWrite'
          CreatedBy:
            type: string
            format: uuid
            nullable: true
          TimelineId:
            type: integer
            format: int32
            nullable: true
          Meta:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobOfferMetadata'
        additionalProperties: false
      Adopto.Common.Api.Dto.JobOfferMetadata:
        type: object
        properties:
          Company:
            type: string
            nullable: true
          CandidateName:
            type: string
            nullable: true
          JobTitle:
            type: string
            nullable: true
          JobLocation:
            type: string
            nullable: true
          JobDepartment:
            type: string
            nullable: true
          Budget:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.JobOfferSalaryRangeMetadata
        additionalProperties: false
      Adopto.Common.Api.Dto.JobOfferSalaryRangeMetadata:
        type: object
        properties:
          Frequency:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.SalaryFrequency
          AmountFrom:
            type: number
            format: double
            nullable: true
          AmountTo:
            type: number
            format: double
            nullable: true
          CurrencyId:
            type: string
            nullable: true
          CurrencyText:
            type: string
            nullable: true
          CurrencySymbol:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobReadOnly:
        type: object
        properties:
          Description:
            type: string
            nullable: true
          Requirements:
            type: string
            nullable: true
          InternalCode:
            type: string
            nullable: true
          MetatagTitle:
            type: string
            nullable: true
          MetatagDescription:
            type: string
            nullable: true
          MetatagImageUrl:
            type: string
            nullable: true
          JobRole:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          CareerLevel:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          Degree:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          SalaryPerYear:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          Industry:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          WorkRemotely:
            type: boolean
          OffersRelocation:
            type: boolean
          OffersVisaSponsorship:
            type: boolean
          GdprRetentionPeriod:
            type: integer
            format: int32
            nullable: true
          WebsiteId:
            type: integer
            format: int32
            nullable: true
          UId:
            type: string
            format: uuid
            nullable: true
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
          Department:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          AbsoluteUrl:
            type: string
            nullable: true
          RelativeUrl:
            type: string
            nullable: true
          ShortlinkUrl:
            type: string
            nullable: true
          FriendlyUrl:
            type: string
            nullable: true
          LastModified:
            type: string
            format: date-time
          Schedule:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobScheduleReadWrite'
          Stages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageWithCountReadonly'
            nullable: true
          Meta:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobSimpleMetaReadOnly'
          Pipeline:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          Contract:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          RawData:
            nullable: true
          JobTags:
            type: array
            items:
              type: string
            nullable: true
          JobRequisitionId:
            type: string
            format: uuid
            nullable: true
          JobRequisition:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobRequisitionSimple'
        additionalProperties: false
      Adopto.Common.Api.Dto.JobRequisitionSimple:
        type: object
        properties:
          Id:
            type: string
            format: uuid
            nullable: true
          HiringManager:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          Owner:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          PlannedStartDate:
            type: string
            nullable: true
          JobRequisitionStatus:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.JobRequisitionStatus
          CanUserAccessJobRequisition:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.JobRequisitions.JobRequisitionActivityHiredApplicant:
        type: object
        properties:
          IsActivityEditable:
            type: boolean
          Id:
            type: string
            format: uuid
          SalaryFrequency:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.SalaryFrequency
          SalaryCurrency:
            type: string
            nullable: true
          SalaryAmount:
            type: number
            format: double
          PlannedStartDate:
            type: string
          JobRequisition:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.JobRequisitions.JobRequisitionActivityModel
        additionalProperties: false
      Adopto.Common.Api.Dto.JobRequisitions.JobRequisitionActivityModel:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          JobRequisitionStatus:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.JobRequisitionStatus
          TempJobName:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobScheduleReadWrite:
        type: object
        properties:
          PublishDate:
            type: string
            format: date-time
            nullable: true
          PublishStatus:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          CloseDate:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobSimpleMetaReadOnly:
        type: object
        properties:
          Applications:
            type: integer
            format: int32
          ActiveApplications:
            type: integer
            format: int32
          UnreadNotification:
            type: integer
            format: int32
          LastApplication:
            type: string
            format: date-time
            nullable: true
          Following:
            type: boolean
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobSimpleReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
          Department:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Settings.DepartmentWriteRead
          Location:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.LocationWriteRead'
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          AbsoluteUrl:
            type: string
            nullable: true
          RelativeUrl:
            type: string
            nullable: true
          ShortlinkUrl:
            type: string
            nullable: true
          FriendlyUrl:
            type: string
            nullable: true
          InternalCode:
            type: string
            nullable: true
          LastModified:
            type: string
            format: date-time
          Schedule:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobScheduleReadWrite'
          Stages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.StageWithCountReadonly'
            nullable: true
          Meta:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobSimpleMetaReadOnly'
          Pipeline:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          Contract:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Infrastructure.CodeReadonly
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
          RawData:
            nullable: true
          JobTags:
            type: array
            items:
              type: string
            nullable: true
          JobRequisitionId:
            type: string
            format: uuid
            nullable: true
          JobRequisition:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobRequisitionSimple'
        additionalProperties: false
      Adopto.Common.Api.Dto.JobStatusChange:
        type: object
        properties:
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          Created:
            type: string
            format: date-time
          CreatedBy:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.JobVerySimpleReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            type: string
            nullable: true
          FriendlyUrl:
            type: string
            nullable: true
          Department:
            type: string
            nullable: true
          RequisitionCode:
            type: string
            nullable: true
          DepartmentId:
            type: integer
            format: int32
            nullable: true
          Location:
            type: string
            nullable: true
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.JobStatusTypes'
          PipelineId:
            type: integer
            format: int32
            nullable: true
          JobNumber:
            type: string
            nullable: true
          SecondaryText:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.LanguageReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Language:
            type: string
            nullable: true
          LanguageIso:
            type: string
            nullable: true
          LanguageProficiency:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.LocationWriteRead:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Country:
            type: string
            nullable: true
          CountryCode:
            type: string
            nullable: true
          Region:
            type: string
            nullable: true
          RegionCode:
            type: string
            nullable: true
          DistrictId:
            type: integer
            format: int32
            nullable: true
          City:
            type: string
            nullable: true
          ZipCode:
            type: string
            nullable: true
          Address:
            type: string
            nullable: true
          Latitude:
            type: number
            format: double
            nullable: true
          Longitude:
            type: number
            format: double
            nullable: true
          Remotely:
            type: boolean
            nullable: true
          CityCountry:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.LogActivity:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.LogActivityTypes'
          Body:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
          CallOutcome:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.CallOutcomeTypes'
          Direction:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.DirectionTypes'
          ApplicationId:
            type: integer
            format: int32
            nullable: true
          CandidateId:
            type: integer
            format: int32
          PartnerId:
            type: string
            nullable: true
          Visibility:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.MatchScore:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Overall:
            type: integer
            format: int32
          Occupation:
            type: integer
            format: int32
          Industry:
            type: integer
            format: int32
          Skills:
            type: integer
            format: int32
          JobFunction:
            type: integer
            format: int32
          Knowledge:
            type: integer
            format: int32
          Abilities:
            type: integer
            format: int32
          Summary:
            type: string
            nullable: true
          Created:
            type: string
            format: date-time
            nullable: true
          LastModified:
            type: string
            format: date-time
            nullable: true
          Feedback:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MatchScoreFeedback'
          Status:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.MatchScoreStatusTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.MatchScoreFeedback:
        type: object
        properties:
          IsRelevant:
            type: boolean
          Comment:
            type: string
            nullable: true
          LastModified:
            type: string
            format: date-time
          Created:
            type: string
            format: date-time
        additionalProperties: false
      Adopto.Common.Api.Dto.MeetingReadOnly:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.MeetingTypes'
          StartTime:
            type: string
            format: date-time
          EndTime:
            type: string
            format: date-time
          TimeZone:
            type: string
            nullable: true
          TimeZoneIANA:
            type: string
            nullable: true
            readOnly: true
          Subject:
            type: string
            nullable: true
          Notes:
            type: string
            nullable: true
          Sequence:
            type: integer
            format: int32
          Location:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.Settings.InterviewPlaceDto
          Job:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobVerySimpleReadOnly'
          Attendees:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AttendeeReadonly'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.MemberReadonly:
        type: object
        properties:
          Id:
            type: string
            format: uuid
            nullable: true
          Name:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.NewApplicationReadOnly:
        type: object
        properties:
          CandidateId:
            type: integer
            format: int32
          CandidateUid:
            type: string
            format: uuid
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          CurrentJobTitle:
            type: string
            nullable: true
          CurrentCompany:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
          PreferredLanguage:
            type: string
            nullable: true
          ApplicationId:
            type: integer
            format: int32
            nullable: true
          ExternalId:
            type: string
            nullable: true
          CandidateUrl:
            type: string
            nullable: true
          ApplicationUrl:
            type: string
            nullable: true
          HasAccess:
            type: boolean
          IsDuplicate:
            type: boolean
            nullable: true
          StageId:
            type: integer
            format: int32
            nullable: true
          JobId:
            type: integer
            format: int32
            nullable: true
          IsDisqualified:
            type: boolean
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.NoteReadWrite:
        required:
          - Message
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Message:
            type: string
          Attachments:
            type: array
            items:
              type: integer
              format: int32
            nullable: true
          Mentions:
            type: array
            items:
              type: string
              format: uuid
            nullable: true
          Tags:
            type: array
            items:
              type: string
            nullable: true
          ApplicationId:
            type: integer
            format: int32
            nullable: true
          CandidateId:
            type: integer
            format: int32
          Files:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Admin.FileDto'
            nullable: true
          Visibility:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
        additionalProperties: false
      Adopto.Common.Api.Dto.NoteReadonly:
        type: object
        properties:
          ActivityId:
            type: integer
            format: int32
          Message:
            type: string
            nullable: true
          Visibility:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Activities.VisibilityTypes
          IsNeogovActivity:
            type: boolean
          Attachments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.FileReadOnly'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.NoteWrite:
        type: object
        properties:
          MemberId:
            type: string
            format: uuid
            nullable: true
          Note:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.NoteReadWrite'
        additionalProperties: false
      Adopto.Common.Api.Dto.OfferApprovalStep:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.ApprovalStepType
          Step:
            type: integer
            format: int32
          Approvers:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.OfferApprover'
            nullable: true
          IsActive:
            type: boolean
          ApprovalStatus:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.ApprovalStatusType
        additionalProperties: false
      Adopto.Common.Api.Dto.OfferApprover:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          AnonymousEmail:
            type: string
            nullable: true
          User:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          IsCurrentUser:
            type: boolean
          ApprovalStatus:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.JobRequisition.ApprovalStatusType
          RejectionMessage:
            type: string
            nullable: true
          SkipedBy:
            $ref: '#/components/schemas/Adopto.Common.Dto.Common.MemberDto'
          SkipedReason:
            type: string
            nullable: true
          StatusChangeAt:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.OfferDocument:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Name:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          Variables:
            type: array
            items:
              type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.Pages:
        type: object
        properties:
          First:
            type: string
            nullable: true
          Prev:
            type: string
            nullable: true
          Next:
            type: string
            nullable: true
          Last:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.ActivityReadOnly]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ActivityReadOnly'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ActivityReadOnly'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.ArticleReadonly]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ArticleReadonly'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.ArticleReadonly'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.CandidateSimpleReadonly]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleReadonly'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.CandidateSimpleReadonly'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.Convert.ConvertForm]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertForm'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Convert.ConvertForm'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.JobSimpleReadOnly]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobSimpleReadOnly'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.JobSimpleReadOnly'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.MeetingReadOnly]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.MeetingReadOnly'
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.MeetingReadOnly'
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Paging.PagingResult`1[Adopto.Common.Api.Dto.Settings.EmployeeWriteRead]:
        type: object
        properties:
          Results:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            nullable: true
          Count:
            type: integer
            format: int32
          Page:
            type: integer
            format: int32
          PerPage:
            type: integer
            format: int32
          Pages:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Paging.Pages'
          IdResults:
            type: array
            items:
              $ref: >-
                #/components/schemas/Adopto.Common.Api.Dto.Settings.EmployeeWriteRead
            nullable: true
          OriginalCount:
            type: integer
            format: int32
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.PartnerAppForExport:
        type: object
        properties:
          Title:
            type: string
            nullable: true
          Slug:
            type: string
            nullable: true
          Logo:
            type: string
            nullable: true
          AutoExportEnabled:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Pipeline:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.Company.PipelineTypes
          Stages:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.Settings.StageDto'
            nullable: true
          IsActive:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Pool:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          LastModified:
            type: string
            format: date-time
          LastSize:
            type: integer
            format: int32
          Pipeline:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Pipeline'
          CurrentStage:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Settings.StageDto'
        additionalProperties: false
      Adopto.Common.Api.Dto.QuestionRequiredness:
        type: object
        properties:
          Name:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          FirstName:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          LastName:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Email:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Phone:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Headline:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Address:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Photo:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          SocialProfiles:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          CoverLetter:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Summary:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Resume:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Education:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Experience:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Projects:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Language:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          Salutation:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.QuestionRequirednessTypes
          KeepSetup:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.DepartmentWriteRead:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          ExternalId:
            type: string
            nullable: true
          ParentId:
            type: integer
            format: int32
            nullable: true
          IsTranslated:
            type: boolean
          Translation:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.Translation'
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.EmployeeSync:
        type: object
        properties:
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
          ExternalId:
            type: string
            nullable: true
          Department:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.EmployeeWriteRead:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          FirstName:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
          ExternalId:
            type: string
            nullable: true
          Uid:
            type: string
            format: uuid
          Department:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.DepartmentSimpleReadOnly'
          LastEmail:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.InterviewPlaceDto:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Address:
            type: string
            nullable: true
          Latitude:
            type: number
            format: double
            nullable: true
          Longitude:
            type: number
            format: double
            nullable: true
          ConferenceRoom:
            type: string
            nullable: true
          LocationFormatted:
            type: string
            nullable: true
            readOnly: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.RejectionReasonReadWrite:
        required:
          - Name
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            maxLength: 50
            minLength: 0
            type: string
          Type:
            $ref: >-
              #/components/schemas/TalentLyft.Data.Enumerators.RejectionReasonTypes
          Actions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Settings.StageDto:
        required:
          - Name
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            maxLength: 50
            minLength: 0
            type: string
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.StageTypes'
          Ordinal:
            type: integer
            format: int32
          ActiveCandidates:
            type: integer
            format: int32
            nullable: true
          DisqualifiedCandidates:
            type: integer
            format: int32
            nullable: true
          Candidates:
            type: integer
            format: int32
            nullable: true
            readOnly: true
          Actions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
            nullable: true
          Evaluations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.EvaluationTemplate'
            nullable: true
          Integrations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.IntegrationApp'
            nullable: true
          HasESignatureDocuments:
            type: boolean
          HasJobOfferDocuments:
            type: boolean
        additionalProperties: false
      Adopto.Common.Api.Dto.SmsReadonly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SmsEventTypes'
          Service:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SmsServiceTypes'
          Provider:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SmsProviderTypes'
          Direction:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.DirectionTypes'
          Message:
            type: string
            nullable: true
          ToPhone:
            type: string
            nullable: true
          FromPhone:
            type: string
            nullable: true
          ThreadId:
            type: string
            format: uuid
            nullable: true
          CampaignId:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.SourceReadonly:
        type: object
        properties:
          SourceType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceTypes'
          SourceBy:
            type: string
            format: uuid
            nullable: true
          SourceFrom:
            type: string
            nullable: true
          SourceChanel:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceChannelTypes'
          SourceFormatted:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.SourceWrite:
        type: object
        properties:
          SourceType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceTypes'
          SourceBy:
            type: string
            format: uuid
            nullable: true
          SourceFrom:
            type: string
            nullable: true
          SourceChanel:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceChannelTypes'
          VisitorId:
            type: string
            format: uuid
            nullable: true
          SessionId:
            type: string
            format: uuid
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.StageReadOnly:
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          Type:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.StageWithCountReadonly:
        type: object
        properties:
          ActiveCandidates:
            type: integer
            format: int32
          DisqualifiedCandidates:
            type: integer
            format: int32
          Candidates:
            type: integer
            format: int32
            readOnly: true
          InterviewPlan:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.InterviewPlanReadOnly'
          Assessments:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.App.AssessmentPlan'
            nullable: true
          Actions:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.AutomatedAction'
            nullable: true
          PartnerAppForExport:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.PartnerAppForExport'
            nullable: true
          Id:
            type: integer
            format: int32
          Name:
            type: string
            nullable: true
          Type:
            type: string
            nullable: true
          Position:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.TagWriteRead:
        required:
          - Value
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Value:
            maxLength: 150
            minLength: 0
            type: string
          Count:
            type: integer
            format: int32
        additionalProperties: false
      Adopto.Common.Api.Dto.Tasks.TaskReadonly:
        required:
          - Title
        type: object
        properties:
          Id:
            type: integer
            format: int32
          Title:
            maxLength: 200
            minLength: 0
            type: string
          PersonalId:
            maxLength: 2000
            minLength: 0
            type: string
            format: uuid
            nullable: true
          Notes:
            type: string
            nullable: true
          Status:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.TaskStatusTypes'
          DueDate:
            type: string
            format: date-time
          Reminder:
            type: string
            format: date-time
            nullable: true
          Type:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.TaskTypes'
          ApplicationId:
            type: integer
            format: int32
            nullable: true
          TimelineId:
            type: integer
            format: int32
            nullable: true
          AssignedTo:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.MemberReadonly'
          Candidate:
            $ref: >-
              #/components/schemas/Adopto.Common.Api.Dto.CandidateVerySimpleReadonly
          Application:
            $ref: '#/components/schemas/Adopto.Common.Api.Dto.ApplicationSimpleReadonly'
        additionalProperties: false
      Adopto.Common.Api.Dto.TranslateItem:
        type: object
        properties:
          Language:
            type: string
            nullable: true
          Property:
            type: string
            nullable: true
          TranslateValue:
            type: string
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Dto.Translation:
        type: object
        properties:
          TranslationProperties:
            type: array
            items:
              type: string
            nullable: true
          TranslationRequiredProperties:
            type: array
            items:
              type: string
            nullable: true
          Translations:
            type: array
            items:
              $ref: '#/components/schemas/Adopto.Common.Api.Dto.TranslateItem'
            nullable: true
        additionalProperties: false
      Adopto.Common.Api.Enumerators.MalwareScanResult:
        enum:
          - Safe
          - Malicious
        type: string
      Adopto.Common.Api.Enumerators.MalwareScanStatus:
        enum:
          - InProgress
          - Finished
        type: string
      Adopto.Common.Dto.Common.MemberDto:
        type: object
        properties:
          Id:
            type: string
            format: uuid
          Name:
            type: string
            nullable: true
          Email:
            type: string
            nullable: true
          SenderEmail:
            type: string
            nullable: true
          Username:
            type: string
            nullable: true
          Headline:
            type: string
            nullable: true
          Avatar:
            type: string
            nullable: true
          Role:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.RoleTypes'
          InvitationSentTime:
            type: string
            format: date-time
            nullable: true
        additionalProperties: false
      Adopto.Common.Dto.Tracking.SessionEventSummaryReadonly:
        type: object
        properties:
          PageViewCount:
            type: integer
            format: int32
          JobViewCount:
            type: integer
            format: int32
          BlogViewCount:
            type: integer
            format: int32
          SearchCount:
            type: integer
            format: int32
          CategoryClickCount:
            type: integer
            format: int32
          CtaViewCount:
            type: integer
            format: int32
          CtaClickedCount:
            type: integer
            format: int32
          JobApplicationStartedCount:
            type: integer
            format: int32
          JobApplicationCompletedCount:
            type: integer
            format: int32
          FormViewCount:
            type: integer
            format: int32
          FormSubmissionCount:
            type: integer
            format: int32
          SourceType:
            $ref: '#/components/schemas/TalentLyft.Data.Enumerators.SourceTypes'
        additionalProperties: false
      Adopto.WebJobs.Common.Dto.Api.AssessmentPriceItem:
        type: object
        properties:
          Currency:
            type: string
            nullable: true
          Price:
            type: number
            format: double
        additionalProperties: false
      TalentLyft.Data.Enumerators.Activities.VisibilityTypes:
        enum:
          - Everyone
          - OnlyMe
          - OnlyAdmins
        type: string
      TalentLyft.Data.Enumerators.ActivityTypes:
        enum:
          - Published
          - Closed
          - Archived
          - Unarchived
          - Sourced
          - Applied
          - Screen
          - Assessment
          - Interview
          - Shortlisted
          - Offer
          - Hired
          - Recommended
          - Disqualified
          - Reverted
          - Star
          - PhoneCall
          - SkypeCall
          - Interviewing
          - Meeting
          - PublishArticle
          - CompanyPage
          - InterviwLocation
          - TalentList
          - MessageTemplate
          - StagePipeline
          - UploadedCandidate
          - Comment
          - Email
          - Deleted
          - BulkEmail
          - OnlineTest
          - OnSiteTest
          - CandidateApplied
          - CandidateSourced
          - Scorecard
          - Evaluation
          - InternalUse
          - CopyApplicant
          - MoveApplicant
          - ExternalNote
          - ReferredCandidate
          - Merge
          - GDPRCandidateConsent
          - GDPREditRequest
          - GDPRReviewDataRequest
          - GDPRExportDataRequest
          - GDPREDeleteRequest
          - GDPRCandidateRevokeConsent
          - AssessmentOrder
          - AssessmentResult
          - Snoozed
          - Unsnoozed
          - WokenUp
          - CandidateAddedToSegmentList
          - CandidateRemovedFromSegmentList
          - TagAdded
          - TagRemoved
          - MoveToStage
          - LogCall
          - LogEmail
          - LogMeeting
          - TaskCreated
          - FormSubmitted
          - LogInterview
          - CandidateAddedToPool
          - CandidateRemovedFromPool
          - CareerSiteVisit
          - EmailReceived
          - EmailNotSent
          - SubscriptionTypes
          - ExportToPartnerApp
          - LogSms
          - Sms
          - MoveToPoolStage
          - JobOffer
          - CandidateAttachedToRequisition
          - CandidateRemovedFromRequisition
          - ESignatureDocument
          - Attachments
        type: string
      TalentLyft.Data.Enumerators.AssessmentResultGradeTypes:
        enum:
          - Average
          - Superior
          - Poor
          - BelowAverage
        type: string
      TalentLyft.Data.Enumerators.AssessmentResultStatusTypes:
        enum:
          - Pending
          - Completed
          - Declined
          - Rejected
          - Expired
        type: string
      TalentLyft.Data.Enumerators.AssessmentTypes:
        enum:
          - BehavioralAssessment
          - SkillsTest
          - PersonalityTests
          - CognitiveTests
          - LanguageTests
          - Other
        type: string
      TalentLyft.Data.Enumerators.Automation.ActionTypes:
        enum:
          - SendEmail
          - AddTask
          - AddTag
          - RemoveTag
          - SendAssessment
          - AddToPool
          - RemoveFromPool
        type: string
      TalentLyft.Data.Enumerators.CallOutcomeTypes:
        enum:
          - NoAnswer
          - Busy
          - WrongNumber
          - LeftLiveMessage
          - LeftVoicemail
          - Connected
        type: string
      TalentLyft.Data.Enumerators.Campaign.EmailTriggeredBy:
        enum:
          - VirtualRecruiter
          - Manual
          - GJAccessMembership
          - Automation
        type: string
      TalentLyft.Data.Enumerators.Candidate.SalutationTypes:
        enum:
          - Other
          - Mr
          - Mrs
          - Miss
        type: string
      TalentLyft.Data.Enumerators.Communication.EmailSendingType:
        enum:
          - CompanyMail
          - CompanyNoReplyMail
          - PersonalMail
          - IntegratedMail
        type: string
      TalentLyft.Data.Enumerators.CommunicationSubscriptionTypes:
        enum:
          - JobOffersAndCompanyUpdates
          - OneToOneCommunication
          - OneTimeLegalBasisForCommunicating
        type: string
      TalentLyft.Data.Enumerators.Company.BrandTypes:
        enum:
          - TalentLyft
          - Neogov
          - Edu
        type: string
      TalentLyft.Data.Enumerators.Company.EvaluationTemplateTypes:
        enum:
          - Scorecard
          - Assessment
          - VideoInterview
        type: string
      TalentLyft.Data.Enumerators.Company.PipelineTypes:
        enum:
          - HiringPipeline
          - PoolPipeline
        type: string
      TalentLyft.Data.Enumerators.ConversationMemberTypes:
        enum:
          - Member
          - Candidate
          - External
          - Company
        type: string
      TalentLyft.Data.Enumerators.ConvertFormSubmitActionTypes:
        enum:
          - Redirect
          - Message
        type: string
      TalentLyft.Data.Enumerators.ConvertLayoutAvailabilityTypes:
        enum:
          - All
          - Page
          - Job
          - Blog
          - Privacy
        type: string
      TalentLyft.Data.Enumerators.ConvertStatusTypes:
        enum:
          - Draft
          - Published
          - Archived
        type: string
      TalentLyft.Data.Enumerators.DirectionTypes:
        enum:
          - Sent
          - Received
          - Bidirectional
        type: string
      TalentLyft.Data.Enumerators.EeocDisabilityTypes:
        enum:
          - NotIdentified
          - DisabledIndividual
          - NotDisabledIndividual
        type: string
      TalentLyft.Data.Enumerators.EeocGenderTypes:
        enum:
          - NotIdentified
          - Male
          - Female
        type: string
      TalentLyft.Data.Enumerators.EeocRaceTypes:
        enum:
          - NotIdentified
          - HispanicOrLatino
          - White
          - BlackOrAfricanAmerican
          - NativeHawaiianOrOtherPacificIslander
          - Asian
          - AmericanIndianOrAlaskaNative
          - TwoOrMoreRaces
        type: string
      TalentLyft.Data.Enumerators.EeocVeteranTypes:
        enum:
          - NotIdentified
          - ProtectedVeteran
          - NotProtectedVeteran
        type: string
      TalentLyft.Data.Enumerators.EmailEventTypes:
        enum:
          - Sent
          - Bounced
          - Delivered
          - Dropped
          - Spam
          - Opened
          - Clicked
          - Replied
          - Scheduled
          - NotSent
        type: string
      TalentLyft.Data.Enumerators.EmailProviderTypes:
        enum:
          - TalentLyft
          - GoogleEmail
          - Outlook
          - Other
          - TalentLyftLegacy
        type: string
      TalentLyft.Data.Enumerators.EventAttendeeStatusTypes:
        enum:
          - Accepted
          - Declined
          - Tentative
          - WaitingResponse
        type: string
      TalentLyft.Data.Enumerators.EventAttendeeTypes:
        enum:
          - Member
          - Candidate
          - ExternalAttendee
        type: string
      TalentLyft.Data.Enumerators.FieldType:
        enum:
          - Candidate
          - Application
          - Job
          - JobRequisition
        type: string
      TalentLyft.Data.Enumerators.FormLocationType:
        enum:
          - PersonalData
          - ProfessionalData
          - ScreeningQuestions
        type: string
      TalentLyft.Data.Enumerators.IntegrationTypes:
        enum:
          - JobBoards
          - Hris
          - BackgroundChecks
          - AssessmentProviders
          - VideoInterview
          - EmployeeOnboarding
          - Sourcing
          - EmployeeReferrals
          - Marketing
          - Communication
          - Api
          - HrisOrOnboarding
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.ApprovalStatusType:
        enum:
          - Approved
          - Rejected
          - PendingApproval
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.ApprovalStepType:
        enum:
          - Anyone
          - AllApprovers
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.JobRequisitionStatus:
        enum:
          - Draft
          - Canceled
          - PendingApproval
          - Approved
          - Rejected
          - Filled
          - Reserved
          - OnHold
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.OfferDocumentStatusTypes:
        enum:
          - Pending
          - Rejected
          - Open
          - Signed
          - Declined
          - Expired
          - Canceled
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.OfferTypes:
        enum:
          - Offer
          - Document
        type: string
      TalentLyft.Data.Enumerators.JobRequisition.SalaryFrequency:
        enum:
          - Yearly
          - Monthly
          - BiWeekly
          - Weekly
          - Daily
          - Hourly
        type: string
      TalentLyft.Data.Enumerators.JobStatusTypes:
        enum:
          - Draft
          - Published
          - Closed
          - Archived
          - Deleted
          - General
          - Internal
        type: string
      TalentLyft.Data.Enumerators.LogActivityTypes:
        enum:
          - Call
          - Email
          - Meeting
          - Interview
          - Sms
          - LinkedIn
        type: string
      TalentLyft.Data.Enumerators.MatchScoreStatusTypes:
        enum:
          - NotCalculated
          - Calculated
        type: string
      TalentLyft.Data.Enumerators.MeetingTypes:
        enum:
          - Call
          - Interview
          - Meeting
          - Internal
        type: string
      TalentLyft.Data.Enumerators.PageTypes:
        enum:
          - Page
          - Job
          - Article
          - Policy
        type: string
      TalentLyft.Data.Enumerators.ProfileItemTypes:
        enum:
          - Experience
          - Education
          - Project
        type: string
      TalentLyft.Data.Enumerators.ProviderType:
        enum:
          - CandidateOrRecruiter
          - Recruiter
        type: string
      TalentLyft.Data.Enumerators.QuestionRequirednessTypes:
        enum:
          - Mandatory
          - Optional
          - 'Off'
        type: string
      TalentLyft.Data.Enumerators.QuestionTypes:
        enum:
          - Text
          - Textarea
          - Number
          - Checkbox
          - Radio
          - Select
          - File
          - Address
          - Date
          - Email
          - Phone
          - Url
          - Linkedin
          - CoverLetter
          - YesNo
          - Decimal
        type: string
      TalentLyft.Data.Enumerators.RejectionReasonTypes:
        enum:
          - NoneSpecified
          - TheyRejectedUs
          - WeRejectedThem
        type: string
      TalentLyft.Data.Enumerators.RoleTypes:
        enum:
          - Administrator
          - TeamMember
          - Rewiever
          - ExternalRecruiter
          - ContentEditor
          - LimitedTeamMember
          - DedicatedTeamMember
        type: string
      TalentLyft.Data.Enumerators.SectionTypes:
        enum:
          - Header
          - TextPicture
          - TextVideo
          - Videos
          - Team
          - Quote
          - Timeline
          - Grid
          - Gallery
          - Map
          - Articles
          - Jobs
          - Groups
          - CallToActionBasic
          - CallToActionForm
          - Footer
          - JobDetails
          - BlogDetails
          - Privacy
          - Text
          - JobsRecommender
        type: string
      TalentLyft.Data.Enumerators.ServiceTypes:
        enum:
          - Web
          - Email
          - Inbox
          - Slack
          - Teams
        type: string
      TalentLyft.Data.Enumerators.SmsEventTypes:
        enum:
          - Sent
          - NotSent
          - Delivered
          - Seen
          - Clicked
          - Undelivered
        type: string
      TalentLyft.Data.Enumerators.SmsProviderTypes:
        enum:
          - TalentLyft
          - ChatYourJob
        type: string
      TalentLyft.Data.Enumerators.SmsServiceTypes:
        enum:
          - Sms
          - Viber
          - WhatsApp
        type: string
      TalentLyft.Data.Enumerators.SourceChannelTypes:
        enum:
          - Manual
          - CareersPage
          - Email
          - Source
          - Api
        type: string
      TalentLyft.Data.Enumerators.SourceTypes:
        enum:
          - JobBoard
          - Recruiter
          - Referral
          - CareersPage
          - Sourced
          - Social
          - Campaigns
          - Paid
          - CandidateRediscovery
          - Internal
        type: string
      TalentLyft.Data.Enumerators.StageTypes:
        enum:
          - Sourced
          - Applied
          - Screen
          - Assessment
          - Interview
          - Shortlisted
          - Offer
          - Hired
          - PoolLead
          - PoolContacted
          - PoolRegistered
          - PoolAttended
          - PoolInterested
          - PoolReadyToHire
          - PoolHired
          - PoolNotInterested
          - PoolDoNotContact
        type: string
      TalentLyft.Data.Enumerators.TaskStatusTypes:
        enum:
          - Open
          - Completed
        type: string
      TalentLyft.Data.Enumerators.TaskTypes:
        enum:
          - Todo
          - Call
          - Email
          - Evaluation
        type: string
      TalentLyft.Storage.Search.Enumerators.FilterOperatorTypes:
        enum:
          - Eq
          - Neq
          - Gt
          - Lt
          - Bw
          - Kn
          - Ukn
          - Ct
          - Nct
          - Ir
          - Nir
          - Stw
          - Enw
          - Lany
          - Lall
          - Lnot
          - Req
          - Rgt
          - Rlt
        type: string
    securitySchemes:
      Bearer:
        type: apiKey
        description: Please enter JWT with Bearer into field
        name: Authorization
        in: header
  security:
    - Bearer: []
  servers:
    - url: https://api.talentlyft.com
konfigCliVersion: 1.38.61
