publishJson:
  company: PeopleHR
  serviceName: false
  sdkName: people-hr-{language}-sdk
  clientName: PeopleHr
  metaDescription: >-
    Access PeopleHR is part of The Access Group, and together we are supporting
    the world of HR. From supplying HRIS for all sized businesses, providing
    learning content, payroll systems, and much more.
  apiStatusUrls: inherit
  homepage: peoplehr.com
  developerDocumentation: apidocs.peoplehr.com
  categories:
    - human_resources
    - hr
    - payroll
rawSpecString: |
  openapi: 3.0.0
  info:
    version: '3.1'
    title: PeopleHR API
    contact:
      name: PeopleWeb API Support
      url: https://www.peoplehr.com/
      email: customerservices@peoplehr.com
    license:
      name: PeopleWeb
      url: https://www.peoplehr.com/terms.html
    termsOfService: https://www.peoplehr.com/terms.html/
    x-logo:
      url: ../../peoplelogo.png
      backgroundColor: '#34495e'
    description: >
      # Introduction
       We think it's good to share. So we've created an open API to help you easily integrate People with other systems and applications, for seamless cross-platform data sharing.

       The People API accepts and returns JSON data in the request body, with status indicating the outcome of the operation (sucess/failure).

      # Developer Workbench
       As well as this really useful documentation, we've also provided you with a handy API developer workbench. This allows you test your API calls against either a sandbox, or a live instance. A great place to start is the General Overview video, which explains how to use the workbench: https://intercom.help/peoplea-apps/api-and-integration/api

      You can access the developer work bench here:
      https://api.peoplehr.net/pages/functional 


      # Sandbox

      If you need a sandbox account to test your creation, just email
      customerservices@peoplehr.com and we will help you set one up. 


      # Authentication

      The People API uses API keys for each call. To receive an API key, ask your
      system administrator to generate one from within Settings. For
      authentication, all API calls need the API key to be passed along with the
      JSON data sent as part of the http request. Never share your API keys. Keep
      them guarded and secure. 


      # Managed Lists
       Within People, there are a number of fields called Managed Lists, better known as dropdowns. When you insert an item of data into a field that is a Managed List, then the API will automatically create you an entry in the Managed List for that field.

      # Rate Limit Detail
       The API rate limit is set to 30 calls a minute from a specific IP address. If you attempt to call the API above the rate limit, then an exception message will be returned. If you would like your rate limit increased, please submit a request to customerservices@peoplehr.com. In your email, please explain why you would like your limit increasing.


      # Webhooks Detail
       People provides an option to use webhooks to receive notifications of changes in particular transactions. If you are going to use the webhook mechanism, we advise you to set up a generic listener service to receive callbacks. 
       To set up a webhook listener URL, select Settings, API, and then enter your listner URL into the field.  

      The following actions are available and the data packet will return the
      following (example data shown): 

       New Starter Added > ActionId:1, Action:New Starter Added, EmployeeId:PW21 

       Employee personal detail update > ActionId:2, Action:Employee Detail Updated, EmployeeId:PW1, FieldName:Other Name(s), NewValue:Am, OldValue:zz, Reason:Test 

       Leaver > ActionId:3, Action:Marked Leaver, EmployeeId:PW21 

       Holiday added > ActionId:4, Action:Holiday Added, EmployeeId:PW13, HolidayType:A day or more, StartDate:2016-06-13, EndDate:2016-06-15, HolidayRecordedIn:Days, PartOfDay:, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:2.50, Comments:part day testing, IsToilHoliday:No 

       Holiday Updated > ActionId:5, Action:Holiday Updated, EmployeeId:PW51, HolidayType:A day or more, OriginalStartDate:2016-05-04, OriginalEndDate:2016-05-04, OriginalPartOfDay:, OriginalStartDatePartOfTheDay:, OriginalEndDatePartOfTheDay:, OriginalDuration:1.00, StartDate:2016-05-04, EndDate:2016-05-05, HolidayRecordedIn:Days, PartOfDay:, StartDatePartOfTheDay:, EndDatePartOfTheDay:AM, Duration:1.50, Comments:Test, IsToilHoliday:No 

       Holiday Deleted > ActionId:6, Action:Holiday Deleted, EmployeeId:PW13, StartDate:2016-01-18, EndDate:2016-01-19, HolidayRecordedIn:Days, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:2.00, Comments:zz 

       Holiday Requested > ActionId:7, Action:New Holiday Request, EmployeeId:PW97, HolidayType:A day or more, StartDate:2017-06-22, EndDate:2017-06-23, HolidayRecordedIn:Days, PartOfDay: StartDatePartOfTheDay:, EndDatePartOfTheDay:, Duration:2.00, Comments:Graduation, IsToilHoliday:No 

       Holiday Approved > ActionId:8, Action:Holiday Approved, EmployeeId:PW391, StartDate:2017-06-15, EndDate:2017-06-15, HolidayRecordedIn:Days, Duration:0.5, Comments:, AuthorisedByFirstName:Richard, AuthorisedByLastName:Palmer, HolidayType:Less than a day, PartOfDay:AM, StartDatePartOfTheDay:, EndDatePartOfTheDay:, IsToilHoliday:No 

       Holiday Rejected > ActionId:9, Action:Holiday Rejected, EmployeeId:PW29, StartDate:2017-07-12, EndDate:2017-07-12, HolidayRecordedIn:Days, Duration:1, Comments:Unfortunately this is, fully booked, AuthorisedByFirstName:Debi, AuthorisedByLastName:Stokes, HolidayType:A day or more, PartOfDay:, StartDatePartOfTheDay:, EndDatePartOfTheDay:, IsToilHoliday:No 

       Sick Added > ActionId:10, Action:Sick Added, EmployeeId:PW13, Reason:Accident, StartDate:2016-01-19, EndDate:2016-01-19, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:1, Comments: 

       Sick Updated > ActionId:11, Action:Sick Updated, EmployeeId:PW13, Reason:Accident, OriginalStartDate:2016-01-18, OriginalEndDate:2016-01-19, OriginalStartDatePartOfTheDay:, OriginalEndDatePartOfTheDay:, OriginalDuration:1.00, StartDate:2016-01-18, EndDate:2016-01-19, StartDatePartOfTheDay:, EndDatePartOfTheDay:AM, Duration:1, Comments: 

       Sick Deleted > ActionId:12, Action:Sick Deleted, EmployeeId:PW13, Reason:Cold/Flu, StartDate:2016-01-21, EndDate:2016-01-21, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:1, Comments: 

       Maternity / Paternity Added > ActionId:13, Action:Maternity/Paternity Added, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-24 

       Maternity / Paternity Updated > ActionId:14, Action:Maternity/Paternity Updated, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-25 

       Maternity / Paternity Deleted > ActionId:15, Action:Maternity/Paternity Deleted, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-25 

       Late Added > ActionId:16, Action:Late Recorded, EmployeeId:PW13, Date:2016-01-26, HowLate:10, Comments: 

       Late Updated > ActionId:16, Action:Late Recorded, EmployeeId:PW13, Date:2016-01-26, HowLate:16, Comments: 

       Late Deleted > ActionId:17, Action:Late Deleted, EmployeeId:PW13, Date:2016-01-26, HowLate:16, Comments: 

       Employee Deleted > ActionId:18, Action:Employee Deleted, EmployeeId:PW21 

       Other Event Updated > ActionId:21, Action:Other Event Updated, EmployeeId:PW5-2, OriginalStartDate:2016-06-25, OriginalEndDate:2016-06-25, Reason:Dentist, StartDate:2016-06-25, EndDate:2016-06-26, Duration:2.00, Comments:, DurationType:Days, OriginalDurationType:Days, OriginalDuration:1.00, OriginalStartTime:, OriginalEndTime: 

       Other Event Deleted > ActionId:22, Action:Other Event Deleted, EmployeeId:PW5-2, Reason:Dentist, StartDate:2016-06-25, EndDate:2016-06-26, Duration:2.00, Comments:, DurationType:Day, StartTime:, EndTime: 

       Other Event Requested > ActionId:23, Action:New Other Event Request, EmployeeId:S20, Reason:Flexi, StartDate:2017-06-16, StartTime:09:00:00, EndTime:12:30:00, Duration:210, Comments:, DurationType:Hours 

       Other Event Approved > ActionId:24, Action:Other Event Approved, EmployeeId:180, StartDate:2017-06-14, EndDate:2017-06-14, Comments:, AuthorisedByFirstName:Damith, Duration:2 Hrs 0 Mins (02:00 - 04:00), Reason:Short Leave 

       Other Event Rejected > ActionId:25, Action:Other Event Rejected, EmployeeId:312, StartDate:2017-09-13, EndDate:2017-09-13, Comments:already 2 x nurse on AL, AuthorisedByFirstName:Dirkje (Dorien), Duration:1 Day, Reason:Request To Work 

       Appraisals Logbook > ActionId:31, Action:Appraisal Add, EmployeeId:PW8996, TxnId:1, ScreenType:1 

       ActionId:32 > Action:Appraisal Update, EmployeeId:PW8996, TxnId:1, ScreenType:1 

       ActionId:33 > Action:Appraisal Delete, EmployeeId:PW8996, TxnId:1, ScreenType:1 

       Benefit Logbook > ActionId:34, Action:Benefit Add, EmployeeId:PW8996, TxnId:1, ScreenType:2 

       ActionId:35 > Action:Benefit Update, EmployeeId:PW8996, TxnId:1, ScreenType:2 

       ActionId:36 > Action:Benefit Delete, EmployeeId:PW8996, TxnId:1, ScreenType:2 

       CPD Logbook > ActionId:37, Action:CPD Add, EmployeeId:PW8996, TxnId:1, ScreenType:3 

       ActionId:38 > Action:CPD Update, EmployeeId:PW8996, TxnId:1, ScreenType:3 

       ActionId:39 > Action:CPD Delete, EmployeeId:PW8996, TxnId:1, ScreenType:3 

       Driving Licence Logbook > ActionId:40, Action:Driving Licence Add, EmployeeId:PW8996, TxnId:1, ScreenType:6 

       ActionId:41 > Action:Driving Licence Update, EmployeeId:PW8996, TxnId:1, ScreenType:6 

       ActionId:42 > Action:Driving Licence Delete, EmployeeId:PW8996, TxnId:1, ScreenType:6 

       Qualification Logbook > ActionId:43, Action:Qualification Add, EmployeeId:PW8996, TxnId:1, ScreenType:4 

       ActionId:44 > , Action:Qualification Update, EmployeeId:PW8996, TxnId:1, ScreenType:4 

       ActionId:45 > Action:Qualification Delete, EmployeeId:PW8996, TxnId:1, ScreenType:4 

       Training Logbook > ActionId:46, Action:Training Add, EmployeeId:PW8996, TxnId:1, ScreenType:5 

       ActionId:47 > Action:Training Update, EmployeeId:PW8996, TxnId:1, ScreenType:5 

       ActionId:48 > Action:Training Delete, EmployeeId:PW8996, TxnId:1, ScreenType:5 

       Vehicle Logbook > ActionId:49, Action:Vehicle Add, EmployeeId:PW8996, TxnId:1, ScreenType:7 

       ActionId:50 > Action:Vehicle Update, EmployeeId:PW8996, TxnId:1, ScreenType:7 

       ActionId:51 > Action:Vehicle Delete, EmployeeId:PW8996, TxnId:1, ScreenType:7 

       Custom Logbook > ActionId:52, Action:Custom Screen Add, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10 

       ActionId:53 > Action:Custom Screen Update, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10 

       ActionId:54 > Action:Custom Screen Delete, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10


      Keys 

       The unique key for an event on the People calendar is Start Date and End Date -- you should also use the same key to identify record in your system that is consuming the data from People - the reason you need to do this is to locate the original record within your system when you get a notification of an update or a deletion - you will notice the message fragment contains the original dates - so you can locate the record - and the new dates. 
      Another more sophisticated option is to use the transaction ID. Holiday,
      Sick, Other Event and Maternity/Paternity transactions within People allow
      you to store an external transaction. Using this approach you could store
      the transaction id from a calendering system such as Outlook. If the holiday
      record on People is amended or deleted you will be able to determine the
      corresponding record in Outlook. 

       Take the following scenario: 

       If you create holidays through the API you will receive AnnualLeaveTxnId in the API result set. Any integration can store this as a reference from People HR holidays mapping 

       If you create holidays within the People HR UI, you will receive webhook details with holidays details. Integrated applications need to call people holidays GET details API with the current webhook details. That will give you AnnualLeaveTxnID & ReferenceId (If any). Now you can save the AnnualLeaveTxnId in an integrated application as People HR holidays mapping. 

       You can store third party application holidays/transaction references into the People HR system by calling the API Employee Holiday -> Update Holiday Reference ID 

       If you want to update/delete any holidays from People HR that are already mapped with third party applications/integrations, you can call holidays API to match with reference ID. You will get assoicated data with the reference ID that you actually need to update/ delete holidays from the people system (Employee Holiday -> UpdateHoliday or Employee Holiday -> DeleteHoliday).


      Start Part of Day and End Part of Day

      In People it is possible to record half days both at the beginning of a
      holiday or sick event or at the end. You can determine this by looking at
      the StartPartOfDay and EndPartOfDay values which will either be blank, AM or
      PM.




      # Examples

      We've put a few examples together for you that might help you get started:


      HTML Coding Examples:
      https://help.peoplehr.com/en/articles/981415-api-html-examples


      c# Coding Examples:
      http://intercom.help/peoplea-apps/api-and-integration/api-c-code-snippet


      Objective C Coding Examples:
      http://intercom.help/peoplea-apps/api-and-integration/api-code-snippets-objective-c


      How to use Postman with the API:
      http://intercom.help/peoplea-apps/api-and-integration/api-using-postman


      <!-- ReDoc-Inject: <security-definitions> -->
  tags:
    - name: Employee
      description: |-
        Employee Details

        The employee status is enumerated as follows:

        ACTIVE = 1, Employee is Active

         LEAVER_MARKED = 2, Employee is marked as leaver but not left the company

        LEFT = 3, Employee is left from company 

        DELETED = 4, Employee is deleted

         As part of your integration you may find that you need to store additional data such as foreign keys against an employee record. For example you may need to store the payroll ID or clock ID or just have a flag to indicate the data is dirty and requires a refresh. To save you from having to stage the data into an external data table we have provided you with 5 slots on the Employee object where this data can be stored, the fields are:

         APIColumn1

         APIColumn2

         APIColumn3

         APIColumn4

         APIColumn5

         Your integrations should use these fields if required. Because other 3rd party integrations may make use of a key in your code you should parameterise which field is used, so at implementation time you can avoid a conflict with another integration. For example, we may release an integration that utilises APIColumn1 - if APIColumn1 is being used by you then we will make the integration flexible enough at deployment time so it can be configured to use APIColumn 2, 3 4 or 5.

         You may wish to avoid this method of storing foreign keys and use your own data tables.

         Addresses within People are stored internally as one block of text in a single field. The UX within People will prompt users to enter the address in a formatted way as follows:

         Address Line 1

         Address Line 2

         Town/City

         State/County 

         Country

         Post/Zip Code

         What you should do when retrieving or populating the address is to expect to read ascii new line characters and write ascii new line characters into the block of text to be consistent with the behaviour of the UX.

         You can test this by editing an employee address on your sandbox system and leaving some lines blank to check the returned data.

         The Query endpoint will return this data in the same fashion as described above.
    - name: Employee Salary
      description: |
        Employee Salary Details
    - name: Employee Holiday
      description: |
        Employee Holiday Details
    - name: Employee Absence
      description: |
        Employee Absence Details
    - name: Employee Document
      description: |
        Employee Document Details
    - name: Employee Timesheet
      description: |
        Employee Timesheet Details
    - name: Employee Project Timesheet
      description: >
        The API calls to add, update and delete Project, Task and Task detail will
        allow you to maintain your lists using the API, the calls will not however
        allow you to build the hierarchy relationship between which users can see
        which Projects and the relationship between Projects, Tasks and Task
        Detail - this must be done using the UX within the settings option within
        People
    - name: Employee Appraisal
      description: |
        Employee Appraisal Details
    - name: Employee Benefit
      description: |
        Employee Benefit Details
    - name: Employee CPD
      description: |
        Employee CPD
    - name: Employee Driving
      description: |
        Employee Driving Details
    - name: Employee Qualification
      description: |
        AddNewQualification
    - name: Employee Training
      description: |
        Add Training Detail
    - name: Employee Vehicle
      description: |
        Employee Vehicle Details
    - name: Employee Custom Screen
      description: |
        Employee Custom Screen Details
    - name: Holiday Entitlement
      description: |
        Holiday Entitlement Details
    - name: History
      description: |
        History Details
    - name: Query
      description: |
        Query Details
    - name: Email Transaction
      description: |
        Email Transaction Details
    - name: Right To Work
      description: |
        Right To Work Details
    - name: Background Check
      description: |
        Background Check Details
    - name: Other Event
      description: |
        Other Event Details
    - name: Vacancy
      description: >+
        Vacancy Details. Vacancy allows you to create a vacancy, list all
        vacancies or get a specific vacancy. One of the specific pieces of
        functionality within a vacancy is that you can specify custom questions.
        When getting a list or specific vacancies an array of questions will also
        be returned:


        This array will be repeated per question and will contain 


        QuestionID 


        Question 


        IsMandatory 


        QuestionType 


        QuestionOptions 


        QuestionID is a unique question identifier that you will need if you want
        to create an applicant record with data for custom questions. 


        Question is the question label text. In the event the QuestionType is 7
        then this will be the label. 


        IsMandatory specifies if data must be sent to the applicant record for
        this question. 


        QuestionType can be 


        1 Text single line 


        2 Text multi-line 


        3 Date 


        4 Number 


        5 Attachment 


        6 Dropdown 


        7 Label 


        QuestionOptions is used only for QuestionType 6, dropdown, and contains a
        list of the valid drop down options.

    - name: Applicant
      description: >+
        Applicant Details. When creating an applicant record the API call will
        allow you to specify the questions ID and the appropriate data and the
        documents to be uploaded. To maintain data integrity when showing the
        applicant details in the system, you must pass answers for all mandatory
        questions when creating the applicant. Attachment type questions are
        ignored and cannot be passed in. 

    - name: WorkPattern
      description: |
        WorkPattern Details
    - name: Employeee Late
      description: |
        Employeee Late Details
    - name: 'Maternity Paternity '
      description: |2
         Maternity Paternity Details
  security:
    - ApiKey: []
  paths:
    /Employee  -  CheckAuthentication:
      post:
        tags:
          - Employee
        summary: Check Authentication
        description: |
          This API is used to check authentication for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAuthentication2'
          required: true
        responses:
          '200':
            description: check description for error code
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CheckAuthenticationResult'
    /Employee  -  UpdateEmployeeId:
      post:
        tags:
          - Employee
        summary: Update Employee Id
        description: |
          This API is used to update employee id details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeId2'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateEmployeeIdApi'
    /Employee  -  GetAllEmployeeDetail:
      post:
        tags:
          - Employee
        summary: Get All Employee Detail
        description: >
          This API is used to get employee detail list. Please note the History
          fields have been deprecated and will not return any data. To retrieve
          History data the individual employee record needs to be retrieved using
          the GetEmployeeDetail method call, this will return the History data.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllEmployeeDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllEmployeeDetailApi'
    /Employee  -  GetEmployeeDetailById:
      post:
        tags:
          - Employee
        summary: Get Employee Detail By Id
        description: |
          This API is used to get employee detail by id
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmployeeDetailByIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetEmployeeDetailByIdApi'
    /Employee  -  CreateNewEmployee:
      post:
        tags:
          - Employee
        summary: Create New Employee
        description: |
          This API is used to create new employee
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmployeeDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCreateNewEmployeeApi'
    /Employee  -  UpdateEmployeeDetail:
      post:
        tags:
          - Employee
        summary: Update Employee Details
        description: |
          This API is used to update employee details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEmployeeDetail3'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateEmployeeDetailApi'
    /Employee  -  MarkAsLeaverById:
      post:
        tags:
          - Employee
        summary: Mark As Leaver By Id
        description: |
          This API is used to update/mark employee leaver status by id
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkAsLeaverById2'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForMarkAsLeaverByIdApi'
    /Employee  -  AddEmployeeImage:
      post:
        tags:
          - Employee
        summary: Add Employee Image By Id
        description: |
          This API is used to add employee image by id
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEmployeeImageById2'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddEmployeeImageByIdApi'
    /EmployeeSalary  -  GetSalaryDetail:
      post:
        tags:
          - Employee Salary
        summary: Get Salary Detail
        description: |
          This API is used to Get employee salary details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSalaryDetail2'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetSalaryDetailApi'
    /EmployeeSalary  -  CreateNewSalary:
      post:
        tags:
          - Employee Salary
        summary: Create New Salary
        description: |
          This API is used to Create New Salary for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNewSalaryParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCreateNewSalaryApi'
    /EmployeeSalary  -  DeleteSalary:
      post:
        tags:
          - Employee Salary
        summary: Delete Salary
        description: |
          This API is used to delete Salary details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSalaryParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteSalaryApi'
    /Employee Holiday  -  AddNewHoliday:
      post:
        tags:
          - Employee Holiday
        summary: Add New Holiday
        description: |
          This API is used to add new holiday
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewHolidayParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewHolidayApi'
    /Employee Holiday  -  UpdateHoliday:
      post:
        tags:
          - Employee Holiday
        summary: Update Holiday
        description: |
          This API is used to update holiday detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHolidayParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateHolidayApi'
    /Employee Holiday  -  GetHolidayDetail:
      post:
        tags:
          - Employee Holiday
        summary: Get Holiday Detail
        description: |
          This API is used to get holiday detail list
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidayDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetHolidayDetailApi'
    /Employee Holiday  -  DeleteHoliday:
      post:
        tags:
          - Employee Holiday
        summary: Delete holiday
        description: |+
          This API is used to delete holiday detail

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHolidayParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteHoliday'
    /EmployeeAbsence  -  GetAbsenceDetail:
      post:
        tags:
          - Employee Absence
        summary: Get Absence Detail
        description: |
          This API is used to employee absence details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAbsenceDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAbsenceDetailApi'
    /EmployeeAbsence  -  DeleteAbsence:
      post:
        tags:
          - Employee Absence
        summary: Delete Absence
        description: |
          This API is used to delete absence  for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAbsenceOfEmployeeParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteAbsenceEmployeeApi'
    /EmployeeAbsence  -  AddAbsence:
      post:
        tags:
          - Employee Absence
        summary: Add Absence
        description: |
          This API is used to add absence for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAbsenceOfEmployeeParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddEmployeeAbsence'
    /EmployeeAbsence  -  UpdateAbsence:
      post:
        tags:
          - Employee Absence
        summary: 'Update Absence '
        description: |
          This API is used to update absence  for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAbsenceDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateAbsenceDetail'
    /EmployeeDocument  -  UploadEmployeeDocument:
      post:
        tags:
          - Employee Document
        summary: Upload Employee Document
        description: |
          This API is used to Upload Employee Document details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadEmployeeDocumentParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUploadEmployeeDocument'
    /EmployeeDocument  -  GetAllDocument:
      post:
        tags:
          - Employee Document
        summary: Get All Document
        description: |
          This API is used to GEt All Document Detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllDocumentParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllDocument'
    /EmployeeDocument  -  GetDocumentById:
      post:
        tags:
          - Employee Document
        summary: Get Document By Id
        description: |
          This API is used to get Document By Id for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentByIDParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetDocumentById'
    /Employee Timesheet  -  GetTimesheetDetail:
      post:
        tags:
          - Employee Timesheet
        summary: Get Employee Timesheet Detail List
        description: |
          This API is used to get employee timesheet detail list
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimesheetdefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetTimesheetDetail'
    /Employee Timesheet  -  CreateNewTimesheet:
      post:
        tags:
          - Employee Timesheet
        summary: Create New Timesheet
        description: |
          This API is used to create new employee Timesheet
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNewTimesheetDefinition'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForCreateNewEmployeeTimesheetApi
    /Employee Timesheet  -  UpdateTimesheet:
      post:
        tags:
          - Employee Timesheet
        summary: Update Employee Timesheet
        description: |
          This API is used to update employee timesheet details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTimesheetDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateEmployeeTimesheetApi'
    /Employee Timesheet  -  DeleteTimesheet:
      post:
        tags:
          - Employee Timesheet
        summary: Delete Timesheet
        description: |
          This API is used to delete employee Timesheet
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTimesheetdefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteEmployeeTimesheet'
    /Employee Project Timesheet  -  GetProjectTimesheetDetail:
      post:
        tags:
          - Employee Project Timesheet
        summary: Get Project Time sheet Detail
        description: |
          This API is used to get project time sheet detail for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectTimesheetDetail'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetProjectTimesheetDetailApi'
    /Employee Project Timesheet  -  GetProjectTimesheetByTransactionId:
      post:
        tags:
          - Employee Project Timesheet
        summary: Get Project Timesheet By TransactionId
        description: >
          This API is used to get project timesheet by transactionid for given
          user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectTimesheetByTransactionId'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetProjectTimesheetByTransactionId
    /Employee Project Timesheet  -  CreateProjectTimesheet:
      post:
        tags:
          - Employee Project Timesheet
        summary: Create project timesheet
        description: |
          This API is used to create project timesheet for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectTimesheetParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCreateProjectTimesheet'
    /Employee Project Timesheet  -  UpdateProjectTimesheet:
      post:
        tags:
          - Employee Project Timesheet
        summary: Update project timesheet
        description: |
          This API is used to update project timesheet for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProjectTimesheetParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateProjectTimesheet'
    /Employee Project Timesheet  -  DeleteProjectTimesheet:
      post:
        tags:
          - Employee Project Timesheet
        summary: Delete project timesheet
        description: |
          This API is used to delete project timesheet for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProjectTimesheetParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteProjectTimesheet'
    /Employee Project Timesheet  -  GetAllTimesheetProject:
      post:
        tags:
          - Employee Project Timesheet
        summary: Get All Timesheet Project
        description: |
          This API is used to get all timesheet project detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTimesheetProjectParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllTimesheetProjectApi'
    /Employee Project Timesheet  -  AddNewProject:
      post:
        tags:
          - Employee Project Timesheet
        summary: Add New Project
        description: |
          This API is used to add new project details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewProjectParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewProject'
    /Employee Project Timesheet  -  EditProject:
      post:
        tags:
          - Employee Project Timesheet
        summary: Edit Project
        description: |
          This API is used to edit project details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditProjectParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForEditProject'
    /Employee Project Timesheet  -  GetAllProjectTask:
      post:
        tags:
          - Employee Project Timesheet
        summary: Get All Project Task
        description: |
          This API is used to get all project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllProjectTaskParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllProjectTask'
    /Employee Project Timesheet  -  AddNewProjectTask:
      post:
        tags:
          - Employee Project Timesheet
        summary: Add New Project Task
        description: |
          This API is used to add new project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewProjectTaskParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewProjectTask'
    /Employee Project Timesheet  -  EditProjectTask:
      post:
        tags:
          - Employee Project Timesheet
        summary: Edit Project Task
        description: |
          This API is used to edit project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditProjectTaskParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForEditProjectTask'
    /Employee Project Timesheet  -  GetAllProjectTaskDetail:
      post:
        tags:
          - Employee Project Timesheet
        summary: Get All Project Task Detail
        description: |
          This API is used to get all project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllProjectTaskDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllProjectTaskDetail'
    /Employee Project Timesheet  -  AddNewProjectTaskDetail:
      post:
        tags:
          - Employee Project Timesheet
        summary: Add New Project Task Detail
        description: |
          This API is used to add new project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewProjectTaskDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewProjectTaskDetail'
    /Employee Project Timesheet  -  EditProjectTaskDetail:
      post:
        tags:
          - Employee Project Timesheet
        summary: Edit Project Task Detail
        description: |
          This API is used to edit project task detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditProjectTaskDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForEditProjectTaskDetail'
    /EmployeeAppraisal  -  GetByEmployeeId:
      post:
        tags:
          - Employee Appraisal
        summary: ' Get By Employee Id '
        description: |
          This API is used to Get By Employee Id Appraisal details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByEmployeeIdForEmployeeAppraisal'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForEmployeeAppraisalGetEmployeeById
    /EmployeeAppraisal  -  GetByAppraisalId:
      post:
        tags:
          - Employee Appraisal
        summary: Get By Appraisal Id
        description: |
          This API is used to Get By Appraisal Id  details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByAppraisalIdForEmployeeAppraisal'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetByAppraisalId'
    /EmployeeAppraisal  -  AddNewAppraisal:
      post:
        tags:
          - Employee Appraisal
        summary: Add New Appraisal
        description: |
          This API is used to add new appraisal for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewAppraisalParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewAppraisal'
    /EmployeeAppraisal  -  UpdateAppraisal:
      post:
        tags:
          - Employee Appraisal
        summary: Update Appraisal
        description: |
          This API is used to Update Appraisal for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppraisalParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateAppraisal'
    /EmployeeAppraisal  -  DeleteAppraisal:
      post:
        tags:
          - Employee Appraisal
        summary: 'Delete Appraisal '
        description: |
          This API is used to Delete Appraisal for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppraisalParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteAppraisal'
    /EmployeeBenefit  -  GetBenefitByEmployeeId:
      post:
        tags:
          - Employee Benefit
        summary: 'Get Benefit By EmployeeId Id '
        description: |
          This API is used to get by employee id details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBenefitByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetBenefitByEmployeeId'
    /EmployeeBenefit  -  GetBenefitByBenefitId:
      post:
        tags:
          - Employee Benefit
        summary: Get By Benefit Id
        description: |
          This API is used to get by  benefit id details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByBenefitIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetByBenefitIdApi'
    /EmployeeBenefit  -  AddNewBenefit:
      post:
        tags:
          - Employee Benefit
        summary: Add New Benefit
        description: |
          This API is used to Add new benefit details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewBenefitParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewBenefitApi'
    /EmployeeBenefit  -  UpdateBenefit:
      post:
        tags:
          - Employee Benefit
        summary: 'Update Benefit '
        description: |
          This API is used to Update Benefit Details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBenefitParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateBenefitApi'
    /EmployeeBenefit  -  DeleteBenefit:
      post:
        tags:
          - Employee Benefit
        summary: 'Delete Benefit '
        description: |
          This API is used to Delete Benefit Details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBenefitParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteBenefitApi'
    /Employee CPD  -  GetCPDByEmployeeId:
      post:
        tags:
          - Employee CPD
        summary: Get CPD By EmployeeId
        description: |
          This API is used to Get CPD By EmployeeId for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCPDByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetCPDByEmployeeId'
    /Employee CPD  -  GetByCPDId:
      post:
        tags:
          - Employee CPD
        summary: Get By CPDId
        description: |
          This API is used to Get By CPDId for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByCPDIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetByCPDId'
    /Employee CPD  -  AddNewCPD:
      post:
        tags:
          - Employee CPD
        summary: Add new CPD
        description: |
          This API is used to add new CPD for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddnewCPDParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewCPD'
    /Employee CPD  -  UpdateCPD:
      post:
        tags:
          - Employee CPD
        summary: Update CPD
        description: |
          This API is used to update CPD for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCPDParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateCPD'
    /Employee CPD  -  DeleteCPD:
      post:
        tags:
          - Employee CPD
        summary: Delete CPD
        description: |
          This API is used to delete CPD for given user
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCPDParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteCPD'
    /Employee Driving  -  GetDrivingLicenseByEmployeeId:
      post:
        tags:
          - Employee Driving
        summary: Get Driving License By Employee Id
        description: |
          This API is used to get driving license by employeeid
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDrivingLicenseByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetDrivingLicenseByEmployeeIdApi
    /Employee Driving  -  GetDrivingLicenseByDrivingId:
      post:
        tags:
          - Employee Driving
        summary: Get Driving License By Driving Id
        description: |
          This API is used to get driving license by drivingId
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDrivingLicenseByDrivingIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetDrivingLicenseByDrivingIdApi
    /Employee Driving  -  AddNewDrivingLicense:
      post:
        tags:
          - Employee Driving
        summary: Add New Driving License
        description: |
          This API is used to Add new driving license
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewDrivingLicenseParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewDrivingLicenseApi'
    /Employee Driving  -  UpdateDrivingLicense:
      post:
        tags:
          - Employee Driving
        summary: Update Driving License
        description: |
          This API is used to update driving license
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDrivingLicenseParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateDrivingLicenseApi'
    /Employee Driving  -  DeleteDrivingLicense:
      post:
        tags:
          - Employee Driving
        summary: Delete Driving License
        description: |
          This API is used to delete driving license
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDrivingLicenseParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteDrivingLicenseApi'
    /Employee Qualification  -  GetQualificationByEmployeeId:
      post:
        tags:
          - Employee Qualification
        summary: Get Qualification By EmployeeId
        description: |
          This API is used to get qualification by EmployeeId 
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualificationByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetQualificationByEmployeeIdApi
    /Employee Qualification  -  GetQualificationByQualificationId:
      post:
        tags:
          - Employee Qualification
        summary: Get Qualification By QualificationId
        description: |
          This API is used to Get qualification by qualification Id 
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualificationByQualificationIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetQualificationByQualificationIdApi
    /Employee Qualification  -  AddNewQualification:
      post:
        tags:
          - Employee Qualification
        summary: Add New Qualification
        description: |
          This API is used to Add new qualification
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewQualificationParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewQualificationApi'
    /Employee Qualification  -  UpdateQualification:
      post:
        tags:
          - Employee Qualification
        summary: Update Qualification
        description: |
          This API is used to Update qualification
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQualificationParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateQualificationApi'
    /Employee Qualification  -  DeleteQualification:
      post:
        tags:
          - Employee Qualification
        summary: Delete Qualification
        description: |
          This API is used to delete qualification
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteQualificationParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteQualificationApi'
    /Employee Training  -  GetTrainingDetail:
      post:
        tags:
          - Employee Training
        summary: Get Training Detail
        description: |
          This API is used to Get  training detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTrainingDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetTrainingDetailApi'
    /Employee Training  -  addtrainingdetail:
      post:
        tags:
          - Employee Training
        summary: Add Training Detail
        description: |
          This API is used to Add Training Detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTrainingDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddTrainingDetailApi'
    /Employee Training  -  updatetrainingdetail:
      post:
        tags:
          - Employee Training
        summary: Update Training Detail
        description: |
          This API is used to update training detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTrainingDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateTrainingDetailApi'
    /Employee Training  -  deletetrainingdetail:
      post:
        tags:
          - Employee Training
        summary: Delete Training Detail
        description: |
          This API is used to delete training detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTrainingDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteTrainingDetailApi'
    /Employee Vehicle  -  AddNewVehicleDetail:
      post:
        tags:
          - Employee Vehicle
        summary: Add New Vehicle Detail
        description: This API is used to create employee's new vehicle detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewVehicleDetailDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewVehicleDetail'
    /Employee Vehicle  -  UpdateVehicleDetail:
      post:
        tags:
          - Employee Vehicle
        summary: Update Vehicle Detail
        description: This API is used to update employee's vehicle detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVehicleDetailDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateVehicleDetail'
    /Employee Vehicle  -  DeleteVehicleDetail:
      post:
        tags:
          - Employee Vehicle
        summary: Delete Vehicle Detail
        description: This API is used to delete employee's vehicle detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVehicleDetailDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteVehicleDetail'
    /Employee Vehicle  -  GetByVehicleDetailId:
      post:
        tags:
          - Employee Vehicle
        summary: Get By Vehicle Detail Id
        description: This API is used to get employee's vehicle detail by vehicle id
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVehicleDetailByVehicleIdDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetVehicleDetailByVehicleId'
    /Employee Vehicle  -  GetVehicleByEmployeeId:
      post:
        tags:
          - Employee Vehicle
        summary: Get Vehicle By Employee Id
        description: This API is used to get employee's vehicle detail by employee id
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVehicleDetailByEmployeeIdDefinition'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetVehicleDetailByEmployeeId'
    /Employee Custom Screen  -  GetCustomScreenDetail:
      post:
        tags:
          - Employee Custom Screen
        summary: Get Custom Screen Detail
        description: |
          This API is used to get custom screen details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomScreenDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetCustomScreenDetailApi'
    /Employee Custom Screen  -  GetCustomScreenByEmployeeId:
      post:
        tags:
          - Employee Custom Screen
        summary: Get Custom Screen By Employee Id
        description: |
          This API is used to get custom screen by employee id detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomScreenByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetCustomScreenByEmployeeIdApi
    /Employee Custom Screen  -  GetByCustomScreenTransactionId:
      post:
        tags:
          - Employee Custom Screen
        summary: Get By Custom Screen Transaction Id
        description: |
          This API is used to get by custom screen transaction id detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByCustomScreenTransactionIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetByCustomScreenTransactionIdApi
    /Employee Custom Screen  -  AddNewCustomScreenTransaction:
      post:
        tags:
          - Employee Custom Screen
        summary: Add New Custom Screen Transaction
        description: |
          This API is used to add new custom screen transaction details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewCustomScreenTransactionParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForAddNewCustomScreenTransactionApi
    /Employee Custom Screen  -  UpdateCustomScreenTransaction:
      post:
        tags:
          - Employee Custom Screen
        summary: Update Custom Screen Transaction
        description: |
          This API is used to update custom screen transaction details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomScreenTransactionParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForUpdateCustomScreenTransactionApi
    /Employee Custom Screen  -  DeleteCustomScreenTransaction:
      post:
        tags:
          - Employee Custom Screen
        summary: Delete Custom Screen Transaction
        description: |
          This API is used to delete custom screen transaction details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomScreenTransactionParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForDeleteCustomScreenTransactionApi
    /Holiday Entitlement  -  GetHolidayEntitlement:
      post:
        tags:
          - Holiday Entitlement
        summary: Get Holiday Entitlement
        description: |
          This API is used to get holiday entitlement details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidayEntitlementParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetHolidayEntitlementApi'
    /Holiday Entitlement  -  GetNextYearHolidayEntitlement:
      post:
        tags:
          - Holiday Entitlement
        summary: Get Next Year Holiday Entitlement
        description: |
          This API is used to get next year holiday entitlement details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNextYearHolidayEntitlementParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetNextYearHolidayEntitlementApi
    /Holiday Entitlement  -  UpdateHolidayEntitlement:
      post:
        tags:
          - Holiday Entitlement
        summary: Update Holiday Entitlement
        description: |
          This API is used to update holiday entitlement details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHolidayEntitlementParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateHolidayEntitlementApi'
    /Holiday Entitlement  -  UpdateNextYearHolidayEntitlement:
      post:
        tags:
          - Holiday Entitlement
        summary: Update Next Year Holiday Entitlement
        description: |
          This API is used to update next year holiday entitlement details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNextYearHolidayEntitlementParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForUpdateNextYearHolidayEntitlementApi
    /History  -  GetHistoryByEmployeeIdAndFieldName:
      post:
        tags:
          - History
        summary: Get History By EmployeeId And FieldName
        description: |
          This API is used to get history by employeeId and fieldname details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHistoryByEmployeeIdAndFieldNameParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetHistoryByEmployeeIdAndFieldNameApi
    /Query  -  GetQueryResult:
      post:
        tags:
          - Query
        summary: Get Query Result by Query Id
        description: >
          Deprecated.This API is used to get query result by query id details. It
          has been superseeded by Get Query Result By QueryName which returns date
          information in a UTC YYYY/MM/DD format
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryResultParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetQueryResultApi'
    /Query  -  GetQueryResultByQueryName:
      post:
        tags:
          - Query
        summary: Get Query Result By QueryName
        description: |
          This API is used to get query result By query name details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueryResultByQueryNameParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetQueryResultByQueryNameApi'
    /Email Transaction  -  EmailInbox:
      post:
        tags:
          - Email Transaction
        summary: Email Inbox
        description: |
          This API is used for Email Inbox
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailInboxParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForEmailInboxApi'
    /Right To Work  -  addrighttoworkdetail:
      post:
        tags:
          - Right To Work
        summary: Add Right To Work Detail
        description: |
          This API is used to add right to work detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewRightToWorkDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForaddrighttoworkdetailApi'
    /Right To Work  -  getrighttoworkdetail:
      post:
        tags:
          - Right To Work
        summary: Get Right To Work Detail
        description: |
          This API is used to get right to work detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRightToWorkDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForgetrighttoworkdetailApi'
    /Right To Work  -  updaterighttoworkdetail:
      post:
        tags:
          - Right To Work
        summary: Update Right To Work Detail
        description: |
          This API is used to update right to work details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updaterighttoworkdetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForupdaterighttoworkdetailApi'
    /Right To Work  -  deleterighttoworkdetail:
      post:
        tags:
          - Right To Work
        summary: Delete Right To Work Detail
        description: |
          This API is used to delete right to work detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleterighttoworkdetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageFordeleterighttoworkdetailApi'
    /Background Check  -  GetBackgroundCheckDetailByEmployeeId:
      post:
        tags:
          - Background Check
        summary: Get Background Check Detail By EmployeeId
        description: |
          This API is used to Get Background Check Detail By EmployeeId
        requestBody:
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GetBackgroundCheckDetailByEmployeeIdParameter
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetBackgroundCheckDetailByEmployeeIdApi
    /Background Check  -  AddBackgroundCheckDetail:
      post:
        tags:
          - Background Check
        summary: Add Background Check Detail
        description: |
          This API is used to add background check detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBackgroundCheckDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddBackgroundCheckDetailApi'
    /Background Check  -  UpdateBackgroundCheckDetail:
      post:
        tags:
          - Background Check
        summary: Update Background Check Detail
        description: |
          This API is used to update background check detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackgroundCheckDetailParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForUpdateBackgroundCheckDetailApi
    /Background Check  -  DeleteBackgroundCheckDetail:
      post:
        tags:
          - Background Check
        summary: Delete Background Check Detail
        description: |
          This API is used to Delete Background Check Detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackgroundCheckDetailParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForDeleteBackgroundCheckDetailApi
    /Other Event  -  getothereventdetail:
      post:
        tags:
          - Other Event
        summary: Get Other Event Detail
        description: |
          This API is used to get other event detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getothereventdetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForgetothereventdetailApi'
    /Other Event  -  getotherevententitlement:
      post:
        tags:
          - Other Event
        summary: ' Get Other Event Entitlement'
        description: |
          This API is used to get other event entitlement
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getotherevententitlementParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForgetotherevententitlementApi'
    /Other Event  -  DeleteOtherEvent:
      post:
        tags:
          - Other Event
        summary: Delete Other Event
        description: |
          This API is used to Delete Other Event
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOtherEventParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteOtherEventApi'
    /Other Event  -  addothereventleave:
      post:
        tags:
          - Other Event
        summary: Add Other Event
        description: |
          This API is used to Add Other Event
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addothereventleaveParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForaddothereventleaveApi'
    /Other Event  -  updateothereventleave:
      post:
        tags:
          - Other Event
        summary: Update Other Event
        description: |
          This API is used to Update Other Event
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateothereventleaveParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForupdateothereventleaveApi'
    /Other Event  -  addotherevententitlement:
      post:
        tags:
          - Other Event
        summary: Insert Update Other Event Entitlement
        description: |
          This API is used to Insert Update Other Event Entitlement
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addotherevententitlementParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForaddotherevententitlementApi'
    /Vacancy  -  CreateNewVacancy:
      post:
        tags:
          - Vacancy
        summary: Create New Vacancy
        description: |
          This API is used to create new vacancy
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVacancyDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCreateNewVacancy'
    /Vacancy  -  GetVacancy:
      post:
        tags:
          - Vacancy
        summary: Get vacancy
        description: |
          This API is used to get vacancy detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVacancyParameters'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetVacancyByReference'
    /Vacancy  -  GetAllVacancies:
      post:
        tags:
          - Vacancy
        summary: Get all vacancies
        description: |
          This API is used to get all vacancies detail
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllVacancyParameters'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetAllVacancyByReference'
    /Applicant  -  CreateNewApplicant:
      post:
        tags:
          - Applicant
        summary: Create New Applicant
        description: |+
          This API is used to create new applicant

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicantDetailParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCreateNewApplicant'
    /Applicant  -  uploadapplicantdocument:
      post:
        tags:
          - Applicant
        summary: upload applicant document
        description: |+
          This API is used to upload applicant document

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uploadapplicantdocumentParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForuploadapplicantdocument'
    /Applicant  -  CheckDuplicateApplicant:
      post:
        tags:
          - Applicant
        summary: Check duplicate applicant
        description: |+
          This API is used to Check duplicate applicant

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDuplicateApplicantParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForCheckDuplicateApplicant'
    /WorkPattern  -  GetWorkPatternDetail:
      post:
        tags:
          - WorkPattern
        summary: Get work pattern detail
        description: |+
          This API is used to get work pattern detail

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkPatternParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForWorkPattern'
    /Employeee Late  -  GetLateByEmployeeId:
      post:
        tags:
          - Employeee Late
        summary: Get late by employeeId
        description: |+
          This API is used for get late by employeeId

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLateByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetLateByEmployeeId'
    /Employeee Late  -  AddNewLate:
      post:
        tags:
          - Employeee Late
        summary: Add new late
        description: |+
          This API is used for add new late

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewLateParameters'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewLate'
    /Employeee Late  -  UpdateLate:
      post:
        tags:
          - Employeee Late
        summary: Update Late
        description: |+
          This API is used for update late

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLateParameters'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateLate'
    /Employeee Late  -  DeleteLate:
      post:
        tags:
          - Employeee Late
        summary: Delete Late
        description: |+
          This API is used to delete late

        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeedeletelateParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageFordeletelate'
    /Maternity Paternity  -  GetByMaternityPaternityId:
      post:
        tags:
          - 'Maternity Paternity '
        summary: ' Get by maternity paternity id '
        description: |
          This API is used to get by maternity paternity id details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByMaternityPaternityParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForGetByMaternityPaternityId'
    /Maternity Paternity  -  GetMaternityPaternityByEmployeeId:
      post:
        tags:
          - 'Maternity Paternity '
        summary: ' Get maternity paternity by employeeid '
        description: |
          This API is used to get maternity paternity by employeeid details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaternityPaternityByEmployeeIdParameter'
          required: true
        responses:
          '200':
            $ref: >-
              #/components/responses/SuccessMessageForGetMaternityPaternityByEmployeeId
    /Maternity Paternity  -  AddNewMaternityPaternity:
      post:
        tags:
          - 'Maternity Paternity '
        summary: ' Add New Maternity Paternity '
        description: |
          This API is used to add new maternity paternity details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNewMaternityPaternityParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForAddNewMaternityPaternityApi'
    /Maternity Paternity  -  UpdateMaternityPaternity:
      post:
        tags:
          - 'Maternity Paternity '
        summary: 'Update Maternity Paternity '
        description: |
          This API is used to Update Maternity Paternity Details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMaternityPaternityParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForUpdateMatenityPaternityApi'
    /Maternity Paternity  -  DeleteMaternityPaternity:
      post:
        tags:
          - 'Maternity Paternity '
        summary: 'Delete Maternity Paternity '
        description: |
          This API is used to Delete Maternity Paternity Details
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMaternityPaternityParameter'
          required: true
        responses:
          '200':
            $ref: '#/components/responses/SuccessMessageForDeleteMaternityPaternityApi'
  servers:
    - url: https://api.peoplehr.net/
      description: Live Server
  components:
    parameters:
      APIKey:
        name: APIKey
        in: path
        description: API Key
        required: true
        schema:
          type: string
      Action:
        name: Action
        in: path
        description: UpdateEmployeeId
        required: true
        schema:
          type: string
      ReasonForChange:
        name: ReasonForChange
        in: path
        description: Reason for change employee id
        required: true
        schema:
          type: string
      OldEmployeeId:
        name: OldEmployeeId
        in: path
        description: Old employee id
        required: true
        schema:
          type: string
      NewEmployeeId:
        name: NewEmployeeId
        in: path
        description: New employee id
        required: true
        schema:
          type: string
      EmailAddress:
        name: EmailAddress
        in: path
        description: Email address of user
        required: true
        schema:
          type: string
          format: email
      Password:
        name: Password
        in: path
        description: Password of user
        required: true
        schema:
          type: string
      resourceId:
        name: id
        in: path
        description: The resource identifier string
        required: true
        schema:
          type: string
      hash:
        name: hash
        in: path
        description: The token identifier string
        required: true
        schema:
          type: string
      mediaType:
        name: Accept
        in: header
        description: The response media type
        schema:
          type: string
          enum:
            - application/json
          default: application/json
    responses:
      AccessForbidden:
        description: Access forbidden, invalid API-KEY was used
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NotFound:
        description: Resource was not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      Conflict:
        description: Conflict
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      InvalidDataError:
        description: Invalid data was sent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvalidError'
      SuccessMessageForUpdateEmployeeIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateEmployeeId'
      SuccessMessageForMarkAsLeaverByIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForMarkAsLeaverById'
      SuccessMessageForAddEmployeeImageByIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddEmployeeImageById'
      SuccessMessageForGetAllEmployeeDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllEmployeeDetail'
      SuccessMessageForGetEmployeeDetailByIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetEmployeeDetailById'
      SuccessMessageForCreateNewEmployeeApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateNewEmployeeDetail'
      SuccessMessageForUpdateEmployeeDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateEmployeeDetail'
      SuccessMessageForAddNewHolidayApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewHoliday'
      SuccessMessageForUpdateHolidayApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateHoliday'
      SuccessMessageForGetHolidayDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetHolidayDetail'
      SuccessMessageForDeleteHoliday:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteHolidy'
      SuccessMessageForGetAbsenceDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAbsenceDetail'
      SuccessMessageForDeleteAbsenceEmployeeApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEmployeeAbsenceDelete'
      SuccessMessageForAddEmployeeAbsence:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddEmployeeAbsence'
      SuccessMessageForUpdateAbsenceDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateAbsenceDetails'
      SuccessMessageForGetSalaryDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetSalaryDetail'
      SuccessMessageForCreateNewSalaryApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateNewSalary1'
      SuccessMessageForDeleteSalaryApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteSalary'
      SuccessMessageForUploadEmployeeDocument:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUploadEmployeeDocument'
      SuccessMessageForGetAllDocument:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllDocument'
      SuccessMessageForGetDocumentById:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetDocumentById'
      SuccessMessageForCreateNewEmployeeTimesheetApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateNewEmployeeTimesheetDetail'
      SuccessMessageForUpdateEmployeeTimesheetApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateEmployeeTimesheetDetail'
      SuccessMessageForDeleteEmployeeTimesheet:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteEmployeeTimesheetDetail'
      SuccessMessageForGetTimesheetDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetTimesheetDetail'
      SuccessMessageForGetBenefitByEmployeeId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetBenefitByEmployeeId'
      SuccessMessageForGetByBenefitIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByBenefitIdApi'
      SuccessMessageForAddNewBenefitApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewBenefitApi'
      SuccessMessageForUpdateBenefitApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateBenefitApi'
      SuccessMessageForDeleteBenefitApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteBenefit'
      SuccessMessageForGetCustomScreenDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetCustomScreenDetail'
      SuccessMessageForGetCustomScreenByEmployeeIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetCustomScreenByEmployeeId'
      SuccessMessageForGetByCustomScreenTransactionIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByCustomScreenTransactionId'
      SuccessMessageForAddNewCustomScreenTransactionApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewCustomScreenTransaction'
      SuccessMessageForUpdateCustomScreenTransactionApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateCustomScreenTransaction'
      SuccessMessageForDeleteCustomScreenTransactionApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteCustomScreenTransaction'
      SuccessMessageForGetHolidayEntitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetHolidayEntitlement'
      SuccessMessageForGetQueryResultByQueryNameApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetQueryResultByQueryName'
      SuccessMessageForGetQueryResultApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetQueryResult'
      SuccessMessageForGetHistoryByEmployeeIdAndFieldNameApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetHistoryByEmployeeIdAndFieldName'
      SuccessMessageForUpdateNextYearHolidayEntitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateNextYearHolidayEntitlement'
      SuccessMessageForUpdateHolidayEntitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateHolidayEntitlement'
      SuccessMessageForGetNextYearHolidayEntitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetNextYearHolidayEntitlement'
      SuccessMessageForCreateNewVacancy:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateNewVacancy'
      SuccessMessageForGetVacancyByReference:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetVacancy'
      SuccessMessageForGetAllVacancyByReference:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllVacancy'
      SuccessMessageForEmailInboxApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEmailInbox'
      SuccessMessageForaddrighttoworkdetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForaddrighttoworkdetail'
      SuccessMessageForgetrighttoworkdetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForgetrighttoworkdetail'
      SuccessMessageForupdaterighttoworkdetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForupdaterighttoworkdetail'
      SuccessMessageFordeleterighttoworkdetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorFordeleterighttoworkdetail'
      SuccessMessageForGetBackgroundCheckDetailByEmployeeIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetBackgroundCheckDetailByEmployeeId'
      SuccessMessageForAddBackgroundCheckDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddBackgroundCheckDetail'
      SuccessMessageForUpdateBackgroundCheckDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateBackgroundCheckDetail'
      SuccessMessageForDeleteBackgroundCheckDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteBackgroundCheckDetail'
      SuccessMessageForgetothereventdetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForgetothereventdetail'
      SuccessMessageForgetotherevententitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForgetotherevententitlement'
      SuccessMessageForDeleteOtherEventApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteOtherEvent'
      SuccessMessageForaddothereventleaveApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForaddothereventleave'
      SuccessMessageForupdateothereventleaveApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForupdateothereventleave'
      SuccessMessageForaddotherevententitlementApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForaddotherevententitlement'
      SuccessMessageForCreateNewApplicant:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateNewApplicant'
      SuccessMessageForCheckDuplicateApplicant:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCheckDuplicateApplicant'
      SuccessMessageFordeletelate:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorFordeletelate'
      SuccessMessageForGetLateByEmployeeId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetLateByEmployeeId'
      SuccessMessageForAddNewLate:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewLate'
      SuccessMessageForUpdateLate:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpadteLate'
      SuccessMessageForWorkPattern:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForWorkPattern'
      SuccessMessageForuploadapplicantdocument:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForuploadapplicantdocument'
      SuccessMessageForEmployeeAppraisalGetEmployeeById:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEmployeeAppraisalGetEmployeeById'
      SuccessMessageForGetByAppraisalId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByAppraisalId'
      SuccessMessageForAddNewAppraisal:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewAppraisal'
      SuccessMessageForUpdateAppraisal:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateAppraisal'
      SuccessMessageForDeleteAppraisal:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteAppraisal'
      SuccessMessageForAddNewDrivingLicenseApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewDrivingLicense'
      SuccessMessageForUpdateDrivingLicenseApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateDrivingLicense'
      SuccessMessageForGetDrivingLicenseByEmployeeIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetDrivingLicenseByEmployeeId'
      SuccessMessageForGetDrivingLicenseByDrivingIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetDrivingLicenseByDrivingId'
      SuccessMessageForDeleteDrivingLicenseApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteDrivingLicense'
      SuccessMessageForGetQualificationByEmployeeIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetQualificationByEmployeeId'
      SuccessMessageForGetQualificationByQualificationIdApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetQualificationByQualificationId'
      SuccessMessageForAddNewQualificationApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewQualification'
      SuccessMessageForUpdateQualificationApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateQualification'
      SuccessMessageForDeleteQualificationApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteQualification'
      SuccessMessageForGetTrainingDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetTrainingDetail'
      SuccessMessageForAddTrainingDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddTrainingDetail'
      SuccessMessageForUpdateTrainingDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateTrainingDetail'
      SuccessMessageForDeleteTrainingDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorFordeletetrainingdetail'
      SuccessMessageForAddNewVehicleDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewVehicleDetail'
      SuccessMessageForUpdateVehicleDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateVehicleDetail'
      SuccessMessageForDeleteVehicleDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteVehicleDetail'
      SuccessMessageForGetVehicleDetailByVehicleId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetVehicleDetailByVehicleId'
      SuccessMessageForGetVehicleDetailByEmployeeId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetVehicleDetailByEmployeeId'
      SuccessMessageForGetByMaternityPaternityId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByMaternityPaternityId'
      SuccessMessageForGetMaternityPaternityByEmployeeId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByMaternityPaternityByEmpId'
      SuccessMessageForAddNewMaternityPaternityApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewMaternityPaternityApi'
      SuccessMessageForUpdateMatenityPaternityApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateMaternityPaternityApi'
      SuccessMessageForDeleteMaternityPaternityApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteMaternityPaternity'
      SuccessMessageForGetProjectTimesheetDetailApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetProjectTimesheetDetail'
      SuccessMessageForGetProjectTimesheetByTransactionId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetProjectTimesheetByTransactionId'
      SuccessMessageForCreateProjectTimesheet:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForCreateProjectTimesheet'
      SuccessMessageForUpdateProjectTimesheet:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateProjectTimesheet'
      SuccessMessageForDeleteProjectTimesheet:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteProjectTimesheet'
      SuccessMessageForGetAllTimesheetProjectApi:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllTimesheetProject'
      SuccessMessageForAddNewProject:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewProject'
      SuccessMessageForEditProject:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEditProject'
      SuccessMessageForGetAllProjectTask:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllProjectTask'
      SuccessMessageForAddNewProjectTask:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewProjectTask'
      SuccessMessageForEditProjectTask:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEditProjectTask'
      SuccessMessageForGetAllProjectTaskDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetAllProjectTaskDetail'
      SuccessMessageForAddNewProjectTaskDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewProjectTaskDetail'
      SuccessMessageForEditProjectTaskDetail:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForEditProjectTaskDetail'
      SuccessMessageForGetCPDByEmployeeId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetCPDByEmployeeId'
      SuccessMessageForGetByCPDId:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForGetByCPDId'
      SuccessMessageForAddNewCPD:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForAddNewCPD'
      SuccessMessageForUpdateCPD:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForUpdateCPD'
      SuccessMessageForDeleteCPD:
        description: Check description for error code
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorForDeleteCPD'
      NO_API_KEY:
        description: API key is missing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      INVALID_API_KEY:
        description: Invalid API Key
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NO_ACTION:
        description: Action is missing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      INVALID_ACTION:
        description: Invalid Action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NO_JSON_DATA:
        description: No json data found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NO_FORM_DATA:
        description: Either empty or no Form Data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      INVALID_JSON_DATA:
        description: Invalid json data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NO_RECORD_FOUND:
        description: No records found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NO_SIGNATURE:
        description: No Signature
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      INVALID_SIGNATURE:
        description: Unauthorized access
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      INVALID_MOBILE_LOGIN_TOKEN:
        description: Invalid mobile login token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      ACCESS_DENIED:
        description: Access Denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      APIKeyDoesNotExistError:
        description: API Key does not exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      OldEIdAndNewEIdShouldNotSameError:
        description: OldEmployeeId and NewEmployeeId should not be same
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      OldEmployeeIdNotExistsError:
        description: OldEmployeeId does not exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
    schemas:
      Error:
        type: object
        properties:
          status:
            type: integer
            minimum: 0
            maximum: 14
            description: integer 1
          error:
            type: string
      ErrorForUpdateEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Employee Id updated successfully.'<br/>  Error
              Code = 1 means 'API key is missing.'<br/> Error Code = 2 means
              'Invalid API Key.'<br/> Error Code = 5 means 'API key does not
              exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/>
              Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means
              'OldEmployeeId does not exists.' <br/> Error Code = 5 means
              'NewEmployeeID is already in use. Please enter a unique
              NewEmployeeID.'<br/> Error Code = 5 means 'OldEmployeeId and
              NewEmployeeId should not be same.'<br/> Error Code = 5 means
              'ReasonForChange is missing.'<br/> Error Code = 5 means
              'ReasonForChange contains invalid data.'<br/> Error Code = 5 means
              'ReasonForChange contains more than 256 characters.'<br/> Error Code
              = 5 means 'ReasonForChange cannot be empty.'<br/>

              Error Code = 5 means 'OldEmployeeId is missing.'<br/> Error Code = 5
              means 'OldEmployeeId contains invalid data.' <br/> Error Code = 5
              means 'OldEmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'OldEmployeeId cannot be empty.' <br/>

              Error code = 5 means 'NewEmployeeId is missing.'<br/> Error Code = 5
              means 'NewEmployeeId contains invalid data.'<br/>  Error Code = 5
              means 'NewEmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'NewEmployeeId cannot be empty.'<br/>

              Error Code = 5 means 'No access on employee schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      CheckAuthenticationResult:
        type: object
        required:
          - EmployeeId
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 7
            description: "Error Code = 0 means 'The request processed successfully'.\n<br/>  Error Code = 1 means 'API key is missing.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Email address is required.'<br/>\t Error Code = 5 means 'Email address is missing.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'Email address / password combination is incorrect'.<br/> Error Code = 5 means 'Email address invalid, check the format'.<br/> Error Code = 5 means 'Password is required.'<br/> Error Code = 5 means 'Password is missing.'<br/> Error Code = 5 means 'Self-service suspended. Please contact your administrator.'<br/>  Error Code = 5 means 'Your trial has expired.'<br/> Error Code = 5 means 'This company has been suspended.'<br/> Error Code = 5 means 'The password was last updated (days can be differ) days ago.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\n"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultEmployeeIdId'
      ErrorForMarkAsLeaverById:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Employee Mark Leaver successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'already Employee mark as leaver.'<br/> Error
              Code = 5 means 'already Employee left.'<br/> Error code = 5 means
              'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId
              is missing.'<br/> Error Code = 5 means 'EmployeeId does not
              exists..'<br/> Error Code = 5 means 'EmployeeId contains invalid
              data.'<br/> Error code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error code = 5 means 'ReasonforLeaving cannot be
              empty.'<br/> Error code = 5 means 'ReasonforLeaving contains more
              than 100 characters.'<br/> Error code = 5 means 'ReasonforLeaving
              contains invalid data.'<br/> Error Code = 5 means 'ReasonforLeaving
              is missing.'<br/> Error code = 5 means 'AdditionalComment is
              missing.'<br/> Error code = 5 means 'AdditionalComment contains
              invalid data.'<br/> Error code = 5 means 'AdditionalComment contains
              more than 256 characters.'<br/> Error code = 5 means
              'FinalEmploymentDate is missing.'<br/> Error code = 5 means
              'FinalEmploymentDate cannot be empty.'<br/> Error code = 5 means
              'FinalEmploymentDate contains invalid data.'<br/> Error code = 5
              means 'FinalEmploymentDate is not in the future.'<br/> Error code =
              5 means 'FinalWorkingDate is missing.'<br/> Error code = 5 means
              'FinalWorkingDate contains invalid data.'<br/> Error Code = 5 means
              'MarkasLeaverImmediately is missing.'<br> Error code = 5 means
              'MarkasLeaverImmediately contains invalid data.'<br/> Error Code = 5
              means 'Email and ReportsTo are same.'<br/> Error Code = 5 means
              'ReportsTo email contains invalid data.'<br/> Error Code = 5 means
              'ReportsTo email contains more than 254 characters.'<br/> Error Code
              = 5 means 'ReportsTo does not exists for this company.' <br/> Error
              Code = 5 means 'ReEmployable is missing.'<br/> Error Code = 5 means
              'ReEmployable contains invalid data.'<br/> Error Code = 5 means
              'SupportingComments is missing.'<br/> Error Code = 5 means
              'SupportingComments contains invalid data.'<br/> Error Code = 5
              means 'SupportingComments contains more than 256 characters.'<br/>

              Error Code = 5 means 'No access on employee schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForAddEmployeeImageById:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Employee image added successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'EmployeeImageName is missing.'<br/> Error Code = 5 means 'EmployeeImage is missing.'<br/> Error Code = 5 means 'EmployeeImage cannot be empty.'<br/> Error Code = 5 means 'EmployeeImage contains invalid data.' <br/> Error Code = 5 means 'Invalid file type. File type is not supported.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/>  Error Code = 5 means 'File size exceeds the limit. Please ensure the file is no larger than 2MB.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAllEmployeeDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 5 means 'IncludeLeavers contains invalid data.'<br/> Error Code =
              5 means 'IncludeLeavers cannot be empty.'<br/> Error Code = 5 means
              'No access on employee schema.'<br/> Error Code = 7 means 'No json
              data found.'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No record found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetList5Array'
      ErrorForGetEmployeeDetailById:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId
              already exists.' <br/> 

              Error Code = 5 means 'No access on employee schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No record found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetEmployeeDetail'
      ErrorForCreateNewEmployeeDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Employee record inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId already exists.' <br/> \nError Code = 5 means 'Title cannot be empty..' <br/>  Error Code = 5 means 'Title contains more than 100 characters.' <br/>  Error Code = 5 means 'Title contains invalid data.' <br/> \nError Code = 5 means 'FirstName cannot be empty.' <br/>  Error Code = 5 means 'FirstName contains more than 50 characters' <br/>  Error Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName is missing.' <br/> \nError Code = 5 means 'LastName cannot be empty.' <br/>  Error Code = 5 means 'LastName contains more than 50 characters' <br/>  Error Code = 5 means 'LastName contains invalid data.' <br/> Error Code = 5 means 'LastName is missing.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'Email contains more than 254 characters.' <br/>  Error Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email already exists.' <br/> \nError Code = 5 means 'Gender contains invalid data.' <br/> \nError Code = 5 means 'StartDate is missing.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'ReportsTo email contains more than 254 characters.' <br/>  Error Code = 5 means 'ReportsTo email contains invalid data.' <br/>  Error Code = 5 means 'Email and ReportsTo are same.' <br/>  Error Code = 5 means 'ReportsTo does not exist for this company.' <br/> \nError Code = 5 means 'ReportsToEffectiveDate is missing.' <br/> \nError Code = 5 means 'ReportsToEffectiveDate cannot be empty.' <br/>  Error Code = 5 means 'ReportsToEffectiveDate contains invalid data.' <br/>  Error Code = 5 means 'ReportsTo is missing.' <br/> \nError Code = 5 means 'JobRole is missing.' <br/>  Error Code = 5 means 'JobRole cannot be empty.' <br/>  Error Code = 5 means 'JobRole contains more than 100 characters.' <br/>  Error Code = 5 means 'JobRole contains invalid data.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate is missing.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate cannot be empty.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate contains invalid data.' <br/> \nError Code = 5 means 'Company cannot be empty.' <br/>  Error Code = 5 means 'Company contains more than 100 characters.' <br/>  Error Code = 5 means 'Company contains invalid data.' <br/>\nError Code = 5 means 'Location cannot be empty.' <br/>  Error Code = 5 means 'Location contains more than 100 characters.' <br/>  Error Code = 5 means 'Location contains invalid data.' <br/> Error Code = 5 means 'LocationEffectiveDate is missing.' <br/>  Error Code = 5 means 'Location is missing.' <br/> \nError Code = 5 means 'Department cannot be empty.' <br/>  Error Code = 5 means 'Department contains more than 100 characters.' <br/> Error Code = 5 means 'Department contains invalid data.' <br/>  Error Code = 5 means 'Department is missing.' <br/>\nError Code = 5 means 'NationalInsuranceNumber contains more than 30 characters.' <br/> Error Code = 5 means 'NationalInsuranceNumber contains invalid data.' <br/>\nError Code = 5 means 'Nationality cannot be empty.' <br/> Error Code = 5 means 'Nationality contains more than 100 characters.' <br/> Error Code = 5 means 'Nationality contains invalid data.' <br/>\nError Code = 5 means 'EmploymentType cannot be empty.' <br/> Error Code = 5 means 'EmploymentType contains more than 100 characters.' <br/> Error Code = 5 means 'EmploymentType contains invalid data.' <br/>\nError Code = 5 means 'EntitlementThisYear contains invalid data.' <br/>\nError Code = 5 means 'EntitlementNextYear contains invalid data.' <br/>\nError Code = 5 means 'Address contains more than 512 characters.' <br/> Error Code = 5 means 'Address contains invalid data.' <br/>\nError Code = 5 means 'APIColumn1 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn2 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn3 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn4 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn5 contains more than 1000 characters.' <br/>\nError Code = 5 means 'Payroll Company contains more than 200 characters.' <br/> Error Code = 5 means 'Payroll ID contains more than 200 characters.' <br/> Error Code = 5 means 'Time & Attendance ID contains more than 200 characters.' <br/> Error Code = 5 means 'Rota ID contains more than 200 characters.' <br/> Error Code = 5 means 'CRM ID contains more than 200 characters.' <br/> Error Code = 5 means 'ATS ID contains more than 200 characters.' <br/> Error Code = 5 means 'Performance ID contains more than 200 characters.' <br/> Error Code = 5 means 'Benefits ID contains more than 200 characters.' <br/>\nError Code = 5 means 'System1 ID contains more than 200 characters.' <br/> Error Code = 5 means 'System2 ID contains more than 200 characters.' <br/> Error Code = 5 means 'System3 ID contains more than 200 characters.' <br/>\nError Code = 5 means 'Email contains more than 254 characters.' <br/> Error Code = 5 means 'Email contains invalid data.' <br/>\nError Code = 5 means 'MethodOfRecruitment contains more than 512 characters.' <br/> Error Code = 5 means 'MethodOfRecruitment contains invalid data.' <br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateEmployeeDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Employee record updated successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'ReasonForChange cannot be empty.' <br/> Error
              Code = 5 means 'ReasonForChange contains more than 256
              characters.'<br/> Error Code = 5 means 'ReasonForChange contains
              invalid data.'<br/> Error Code = 5 means 'ReasonForChange is
              missing.'<br/> Error Code = 5 means 'EmployeeId cannot be
              empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid
              data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'
              <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error
              Code = 5 means 'Title cannot be empty..' <br/>  Error Code = 5 means
              'Title contains more than 100 characters.' <br/>  Error Code = 5
              means 'Title contains invalid data.' <br/>  Error Code = 5 means
              'FirstName cannot be empty.' <br/>  Error Code = 5 means 'FirstName
              contains more than 50 characters' <br/>  Error Code = 5 means
              'FirstName contains invalid data.' <br/> 

              Error Code = 5 means 'LastName cannot be empty.' <br/>  Error Code =
              5 means 'LastName contains more than 50 characters' <br/>  Error
              Code = 5 means 'LastName contains invalid data.' <br/> 

              Error Code = 5 means 'Email contains more than 254 characters.'
              <br/>  Error Code = 5 means 'Email contains invalid data.' <br/> 
              Error Code = 5 means 'Email already exists.' <br/> 

              Error Code = 5 means 'Gender contains invalid data.' <br/> 

              Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code
              = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5
              means 'StartDate should not be greater than 'last date of next
              year'' <br/>  Error Code = 5 means 'StartDate can not be changed as
              holiday record exist' <br/>  Error Code = 5 means 'StartDate can not
              be changed as absence record exist.' <br/>  Error Code = 5 means
              'StartDate can not be changed as maternity/paternity record exist.'
              <br/>  Error Code = 5 means 'StartDate can not be changed as late
              record exist.' <br/>  Error Code = 5 means 'StartDate can not be
              changed as timesheet record exist.' <br/>  Error Code = 5 means
              'StartDate can not be changed as other leave record exist.' <br/> 

              Error Code = 5 means 'DateOfBirth contains invalid data.' <br/> 
              Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/> 
              Error Code = 5 means 'DateOfBirth should be less than start date.'
              <br/> 

              Error Code = 5 means 'ReportsTo email contains more than 254
              characters.' <br/>  Error Code = 5 means 'ReportsTo email contains
              invalid data.' <br/>  Error Code = 5 means 'Email and ReportsTo are
              same.' <br/>  Error Code = 5 means 'ReportsTo does not exist for
              this company.' <br/>  Error Code = 5 means 'You cannot reports to
              yourself.' <br/> 

              Error Code = 5 means 'ReportsToEffectiveDate is missing.' <br/> 

              Error Code = 5 means 'ReportsToEffectiveDate cannot be empty.'
              <br/>  Error Code = 5 means 'ReportsToEffectiveDate contains invalid
              data.' <br/>  Error Code = 5 means 'ReportsTo is missing.' <br/> 

              Error Code = 5 means 'JobRole cannot be empty.' <br/>  Error Code =
              5 means 'JobRole contains more than 100 characters.' <br/>  Error
              Code = 5 means 'JobRole contains invalid data.' <br/>  Error Code =
              5 means 'JobRoleEffectiveDate is missing.' <br/> 

              Error Code = 5 means 'JobRole is missing.' <br/>  Error Code = 5
              means 'JobRoleEffectiveDate cannot be empty.' <br/>  Error Code = 5
              means 'JobRoleEffectiveDate contains invalid data.' <br/> 

              Error Code = 5 means 'CompanyEffectiveDate is missing.' <br/>  Error
              Code = 5 means 'Company cannot be empty.' <br/>  Error Code = 5
              means 'Company contains more than 100 characters.' <br/>  Error Code
              = 5 means 'Company contains invalid data.' <br/>

              Error Code = 5 means 'Company is missing.' <br/>  Error Code = 5
              means 'CompanyEffectiveDate cannot be empty.' <br/>  Error Code = 5
              means 'CompanyEffectiveDate contains invalid data.' <br/>

              Error Code = 5 means 'Location cannot be empty.' <br/>  Error Code =
              5 means 'Location contains more than 100 characters.' <br/>  Error
              Code = 5 means 'Location contains invalid data.' <br/> Error Code =
              5 means 'LocationEffectiveDate is missing.' <br/> 

              Error Code = 5 means 'Location is missing.' <br/>  Error Code = 5
              means 'LocationEffectiveDate cannot be empty.' <br/> Error Code = 5
              means 'LocationEffectiveDate contains invalid data.' <br/> 

              Error Code = 5 means 'Department cannot be empty.' <br/>  Error Code
              = 5 means 'Department contains more than 100 characters.' <br/>
              Error Code = 5 means 'Department contains invalid data.' <br/> 
              Error Code = 5 means 'DepartmentEffectiveDate is missing.' <br/> 

              Error Code = 5 means 'DepartmentEffectiveDate cannot be empty.'
              <br/> Error Code = 5 means 'DepartmentEffectiveDate contains invalid
              data.' <br/> Error Code = 5 means 'Department is missing.' <br/>

              Error Code = 5 means 'NationalInsuranceNumber contains more than 30
              characters.' <br/> Error Code = 5 means 'NationalInsuranceNumber
              contains invalid data.' <br/>

              Error Code = 5 means 'Nationality cannot be empty.' <br/> Error Code
              = 5 means 'Nationality contains more than 100 characters.' <br/>
              Error Code = 5 means 'Nationality contains invalid data.' <br/>

              Error Code = 5 means 'EmploymentType cannot be empty.' <br/> Error
              Code = 5 means 'EmploymentType contains more than 100 characters.'
              <br/> Error Code = 5 means 'EmploymentType contains invalid data.'
              <br/>

              Error Code = 5 means 'EmploymentTypeEffectiveDate is missing.' <br/>

              Error Code = 5 means 'EmploymentType is missing.' <br/> Error Code =
              5 means 'EmploymentTypeEffectiveDate cannot be empty.' <br/> Error
              Code = 5 means 'EmploymentTypeEffectiveDate contains invalid data.'
              <br/>

              Error Code = 5 means 'Address contains more than 512 characters.'
              <br/> Error Code = 5 means 'Address contains invalid data.' <br/>

              Error Code = 5 means 'PersonalPhoneNumber contains more than 80
              characters.' <br/> Error Code = 5 means 'PersonalPhoneNumber
              contains invalid data.' <br/>

              Error Code = 5 means 'APIColumn1 contains more than 1000
              characters.' <br/> Error Code = 5 means 'APIColumn2 contains more
              than 1000 characters.' <br/> Error Code = 5 means 'APIColumn3
              contains more than 1000 characters.' <br/> Error Code = 5 means
              'APIColumn4 contains more than 1000 characters.' <br/> Error Code =
              5 means 'APIColumn5 contains more than 1000 characters.' <br/>

              Error Code = 5 means 'Payroll Company contains more than 200
              characters.' <br/> Error Code = 5 means 'Payroll ID contains more
              than 200 characters.' <br/> Error Code = 5 means 'Time & Attendance
              ID contains more than 200 characters.' <br/> Error Code = 5 means
              'Rota ID contains more than 200 characters.' <br/> Error Code = 5
              means 'CRM ID contains more than 200 characters.' <br/> Error Code =
              5 means 'ATS ID contains more than 200 characters.' <br/> Error Code
              = 5 means 'Performance ID contains more than 200 characters.' <br/>
              Error Code = 5 means 'Benefits ID contains more than 200
              characters.' <br/>

              Error Code = 5 means 'System1 ID contains more than 200 characters.'
              <br/> Error Code = 5 means 'System2 ID contains more than 200
              characters.' <br/> Error Code = 5 means 'System3 ID contains more
              than 200 characters.' <br/>

              Error Code = 5 means 'Email contains more than 254 characters.'
              <br/> Error Code = 5 means 'Email contains invalid data.' <br/>

              Error Code = 5 means 'MethodOfRecruitment contains more than 512
              characters.' <br/> Error Code = 5 means 'MethodOfRecruitment
              contains invalid data.' <br/>

              Error Code = 5 means 'No access on employee schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForAddNewHoliday:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Holiday added successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DurationType cannot be empty.' <br/>  Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 , LESS_THAN_A_DAY = 2' <br/>  Error Code = 5 means 'DurationType is missing' <br/>\nError Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be empty.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'DurationInMinutes cannot be empty.' <br/>  Error Code = 5 means 'DurationInMinutes contains invalid data.' <br/>  Error Code = 5 means 'DurationInMinutes cannot be zero.' <br/>  Error Code = 5 means 'DurationInMinutes is missing.' <br/>\nError Code = 5 means 'PartOfDay contains invalid data.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 5 means 'Start date must be after employee start date.' <br/>  Error Code = 5 means 'Start date must be equal to end date.' <br/>  Error Code = 5 means 'Holiday is too far into the future.' <br/>\nError Code = 5 means 'Duration exceeds a day.' <br/>  Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again.' <br/> \nError Code = 5 means 'Please check your dates include working days.' <br/> Error Code = 5 means 'Please check this is a working day.' <br/>  Error Code = 5 means 'Duration in days cannot be zero.' <br/>  Error Code = 5 means 'Duration in minutes cannot be zero.' <br/> Error Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/> \nError Code = 5 means 'Please enter duration in days less than your working day.' <br/>  Error Code = 5 means 'Duration in days should be multiple of 0.25.' <br/> Error Code = 5 means 'Passed duration in minutes mismatched with calculated duration minutes.' <br/> \nError Code = 5 means 'Please enter duration in minutes less than your working day.' <br/>  Error Code = 5 means 'The duration in days exceeds the limit for a single booking (500 hours).' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>\t\t Error Code = 5 means 'Comment contains more than 256 characters.' <br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on holiday schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateHoliday:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Holiday update successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'OldStartDate cannot be empty.'<br/> Error code = 5 means 'OldStartDate contains invalid data.'<br/> Error Code = 5 means 'OldStartDate is missing.' <br/> \nError Code = 5 means 'OldEndDate cannot be empty.' <br/>  Error Code = 5 means 'OldEndDate contains invalid data.' <br/>  Error Code = 5 means 'OldStartDate should be before or equal to OldEndDate.' <br/>  Error Code = 5 means 'OldEndDate is missing.' <br/> \nError Code = 5 means 'DurationType cannot be empty.' <br/>  Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 , LESS_THAN_A_DAY = 2' <br/>  Error Code = 5 means 'DurationType is missing' <br/>\nError Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be empty.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'DurationInMinutes cannot be empty.' <br/>  Error Code = 5 means 'DurationInMinutes contains invalid data.' <br/>  Error Code = 5 means 'DurationInMinutes cannot be zero.' <br/>  Error Code = 5 means 'DurationInMinutes is missing.' <br/>\nError Code = 5 means 'PartOfDay contains invalid data.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 5 means 'Start date must be after employee start date.' <br/>  Error Code = 5 means 'Start date must be equal to end date.' <br/>  Error Code = 5 means 'Holiday is too far into the future.' <br/>\nError Code = 5 means 'Duration exceeds a day.' <br/>  Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again.' <br/> \nError Code = 5 means 'Please check your dates include working days.' <br/> Error Code = 5 means 'Please check this is a working day.' <br/>  Error Code = 5 means 'Duration in days cannot be zero.' <br/>  Error Code = 5 means 'Duration in minutes cannot be zero.' <br/> Error Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/> \nError Code = 5 means 'Please enter duration in days less than your working day.' <br/>  Error Code = 5 means 'Duration in days should be multiple of 0.25.' <br/> Error Code = 5 means 'Passed duration in minutes mismatched with calculated duration minutes.' <br/> \nError Code = 5 means 'Please enter duration in minutes less than your working day.' <br/>  Error Code = 5 means 'The duration in days exceeds the limit for a single booking (500 hours).' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>\t\t Error Code = 5 means 'Comment contains more than 256 characters.' <br/>\t\t\t\t\nError Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on holiday schema.'<br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'Record not found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetHolidayDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId
              already exists.' <br/> 

              Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error
              Code = 5 means 'StartDate should be before or equal to
              EndDate.'<br/> Error Code = 5 means 'EndDate contains invalid
              data.'<br/>

              Error Code = 5 means 'No access on holiday schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'The requested processed
              successfully.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetHolidayDetailArray'
      ErrorForDeleteHolidy:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >2-
               Error Code = 0 means 'Holiday detail deleted successfully.'<br/>
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 6 means 'Unknown error occured.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'StartDate is missing.' <br/>  Error Code = 5
              means 'StartDate contains invalid data.' <br/>  Error Code = 5 means
              'StartDate cannot be empty' <br/> 

              Error Code = 5 means 'StartDate should be before or equal to
              EndDate.' <br/> Error Code = 5 means 'EndDate contains invalid
              data.' <br/> Error Code = 5 means 'EndDate cannot be empty.' <br/>
              Error Code = 5 means 'EndDate is missing..' <br/> Error Code = 5
              means 'No access on employee schema.'<br/>

              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No Record Found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAbsenceDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/>
              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              2  means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot
              be empty'<br/> Error Code = 4 means 'Invalid Action'<br/> Error Code
              = 5 means 'EmployeeId does not exists'<br/> Error Code = 5 means
              'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId
              contains invalid data.' <br/> Error Code = 5 means 'EmployeeId
              contains more than 15 characters.' <br/> Error Code = 5 means
              'EmployeeId is missing.' <br/>

              Error Code = 5 means 'StartDate contains invalid data.'<br/> Error
              Code = 5 means 'EndDate contains invalid data.'<br/>

              Error Code = 5 means 'No access on absence schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No Record Found'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultEmployeeAbsenceArray'
      ErrorForAddEmployeeAbsence:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Absence added successfully.'<br/> 

              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              4 means 'Action cannot be empty.' <br/>  Error Code = 4 means
              'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be
              empty.' <br/>  Error code = 5 means 'EmployeeId contains more than
              15 characters.'<br/> Error Code = 5 means 'EmployeeId contains
              invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not
              exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>
              Error Code = 5 means 'DurationType cannot be empty.' <br/>  Error
              Code = 5 means 'Reason cannot be empty.' <br/>  Error Code = 5 means
              'StartDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate
              cannot be empty.' <br/>  Error Code = 5 means 'StartDate should be
              before or equal to EndDate.' <br/> Error Code = 5 means 'StartDate
              is missing.' <br/> Error Code = 5 means 'EndDate is missing.' <br/>
              Error Code = 5 means 'Duration cannot be empty.' <br/>  Error Code =
              5 means 'Duration cannot be 0.' <br/>  Error Code = 5 means
              'Duration contains invalid data.' <br/>  Error Code = 5 means
              'Duration is missing.' <br/> Error Code = 5 means 'DurationType
              should be DAY_OR_MORE = 1 , HALF_DAY = 2, QUARTER_DAY = 3.' <br/> 
              Error Code = 5 means 'Duration type is missing.' <br/>  Error Code =
              5 means 'Reason is missing.' <br/> Error Code = 5 means 'Reason
              contains invalid data.' <br/>  Error Code = 5 means 'Reason contains
              more than 100 characters.' <br/>  Error Code = 5 means 'PartOfDay
              contains invalid data.' <br/>  Error Code = 5 means
              'AbsencePaidStatus cannot be empty.' <br/>  Error Code = 5 means
              'AbsencePaidStatus should be UNPAID = 1 , PAID = 2,
              PAID_AT_OTHER_RATE = 3.' <br/>  Error Code = 5 means 'EmergencyLeave
              contains invalid data.' <br/>  Error Code = 5 means 'Duration
              exceeds a day.' <br/>  Error Code = 5 means 'Please check your dates
              include working days.' <br/>  Error Code = 5 means 'The duration
              entered exceeds the limit for a single booking (99.99 days).' <br/> 
              Error Code = 5 means 'Passed duration mismatched with calculated
              duration.' <br/>  Error Code = 5 means 'EmergencyLeave cannot be
              empty.' <br/>  Error Code = 5 means 'StartDate Contains invalid
              data.' <br/>  Error Code = 5 means 'EndDate containd invalid
              data'<br/>  Error Code = 5 means 'EmergencyLeave cannot be empty.'
              <br/>  Error Code = 5 means 'comment contains invalid data.' <br/>
              Error Code = 5 means 'comment contains more than 1024
              characters.'<br/> Error Code = 5 means 'Invalid file type. File
              type  is not supported' <br/> Error Code = 5 means 'File contains
              invalid data.' <br/> Error Code = 5 means 'File cannot be empty.'
              <br/>  Error Code = 5 means 'File is missing.'<br/> Error Code = 5
              means 'DocumentName is missing.' <br/> Error Code = 5 means
              'DocumentName cannot be empty.' <br/> Error Code = 5 means
              'description contains invalid data' <br/> Error Code = 5 means
              'description contains more than 1024 characters'<br/>

              Error Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code
              = 6 means 'Invalid json data.' <br/>  Error Code = 8 means 'Either
              empty or no Form Data.' <br/> 

              Error Code = 5 means 'No access on absence schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'The requested processed
              successfully.
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForEmployeeAbsenceDelete:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >2-
               Error Code = 0 means 'Absence detail deleted successfully.'<br/>
              Error Code = 5 means 'API key does not exists.' <br/> 

              Error Code = 2 means 'Invalid API Key'<br/>

              Error Code = 4 means 'Action cannot be empty'<br/>

              Error Code = 4 means 'Invalid Action'<br/>

              Error Code = 5 means 'EmployeeId does not exists'<br/> Error Code =
              5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
              'EmployeeId contains invalid data.'<br/> Error code = 5 means
              'EmployeeId contains more than 15 characters.'<br/>

              Error Code = 5 means 'StartDate cannot be empty'<br/> Error code = 5
              means 'EndDate contains invalid data.'<br/> Error Code = 5 means
              'EndDate contains invalid data'<br/> Error code = 5 means 'StartDate
              is missing..'<br/> Error code = 5 means 'EndDate is missing.'<br/>
              Error Code = 5 means 'EndDate cannot be empty.'<br/> Error code = 5
              means 'Start date must be equal to end date.'<br/> Error code = 5
              means 'StartDate should be before or equal to EndDate'<br/> Error
              code = 5 means 'StartDate contains invalid data.'<br/>

              Error Code = 5 means 'No access on absence schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/>

              Error Code = 10 means 'No record found.'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateAbsenceDetails:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 

              Error Code = 5 means 'API key does not exists.' <br/> 

              Error Code = 4 means 'Action cannot be empty.' <br/> 

              Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.' <br/> 

              Error Code = 5 means 'EmployeeId contains invalid data.' <br/>

              Error Code = 5 means 'EmployeeId contains more than 15 characters.'
              <br/>

              Error Code = 5 means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'DurationType cannot be empty.' <br/> 

              Error Code = 5 means 'Reason cannot be empty.' <br/> 

              Error Code = 5 means 'StartDate cannot be empty.' <br/> 

              Error Code = 5 means 'OldStartDate cannot be empty.' <br/>  Error
              code = 5 means 'OldStartDate is missing.'<br/> Error code = 5 means
              'OldStartDate contains invalid data.'<br/> Error code = 5 means
              'OldStartDate should be before or equal to OldEndDate.'<br/> Error
              code = 5 means 'OldEndDate is missing.'<br/> Error code = 5 means
              'OldEndDate contains invalid data.'<br/>

              Error code = 5 means 'Reason contains more than 100
              characters.'<br/> Error code = 5 means 'Reason contains invalid
              data'<br/> Error code = 5 means 'StartDate is missing.'<br/> Error
              code = 5 means 'StartDate contains invalid data.'<br/> Error code =
              5 means 'EndDate is missing.'<br/> Error Code = 5 means 'OldEndDate
              cannot be empty.' <br/> 

              Error code = 5 means 'StartDate should be before or equal to
              EndDate.'<br/> Error code = 5 means 'EndDate contains invalid
              data.'<br/>

              Error Code = 5 means 'EndDate cannot be empty.' <br/> 

              Error code = 5 means 'Duration is missing.'<br/> Error code = 5
              means 'Duration cannot be 0..'<br/> Error code = 5 means 'Duration
              contains invalid data.'<br/> Error Code = 5 means 'Duration cannot
              be empty.' <br/> 

              Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 ,
              HALF_DAY = 2, QUARTER_DAY = 3.' <br/> 

              Error Code = 5 means 'Duration type is missing.' <br/> 

              Error Code = 5 means 'Reason is missing.' <br/> 

              Error Code = 5 means 'PartOfDay contains invalid data.' <br/> 

              Error Code = 5 means 'AbsencePaidStatus cannot be empty.' <br/> 

              Error Code = 5 means 'AbsencePaidStatus should be UNPAID = 1 , PAID
              = 2, PAID_AT_OTHER_RATE = 3.' <br/> 

              Error Code = 5 means 'EmergencyLeave contains invalid data.' <br/> 

              Error Code = 5 means 'Duration exceeds a day.' <br/> 

              Error Code = 5 means 'Please check your dates include working days.'
              <br/> 

              Error Code = 5 means 'The duration entered exceeds the limit for a
              single booking (99.99 days).' <br/> 

              Error Code = 5 means 'Passed duration mismatched with calculated
              duration.' <br/> 

              Error Code = 5 means 'EmergencyLeave cannot be empty.' <br/> 

              Error Code = 5 means 'StartDate Contains invalid data.' <br/> 

              Error Code = 5 means 'EndDate containd invalid data'<br/>

              Error Code = 5 means 'File contains invalid data.' <br/> 

              Error Code = 5 means 'File cannot be empty.' <br/> 

              Error code = 5 means 'Start date must be after employee start
              date'<br/> Error code = 5 means 'Start date must be equal to end
              date.'<br/> Error code = 5 means 'Absence is too far into the
              future.'<br/> Error code = 5 means 'DocumentName is missing...'<br/>
              Error code = 5 means 'Invalid file type. File type is not
              supported'<br/>

              Error code = 5 means 'File is missing'<br/> Error code = 5 means
              'Absence updated successfully.'<br/> Error code = 5 means 'Record
              not found.'<br/>

              Error Code = 6 means 'Oops! Something went wrong.' <br/> 

              Error Code = 6 means 'Invalid json data.' <br/> 

              Error Code = 5 means 'No access on absence schema.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetSalaryDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'The requested processed successfully.'<br/> \nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 2  means 'Invalid API Key'<br/>\nError Code = 4 means 'Action Cannot be empty'<br/>\nError Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty'<br/> Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'IsIncludeHistory cannot be empty.'<br/>\nError Code = 5 means 'IsIncludeHistory contains invalid data'<br/>\nError Code = 5 means 'EmployeeId is missing.'<br/>\nError Code = 5 means 'IsIncludeHistory cannot be empty.'<br/>\nError code = 5 means 'IsIncludeHistory is missing.'<br/>\nError Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1'
      ErrorForCreateNewSalary1:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Salary record inserted successfully'.\n<br/>  \t\t   Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t\t\t\t\t\t  Error Code = 5 means 'EmployeeId does not exists'.<br/>  Error Code = 5 means 'EmployeeId cannot be empty' .<br/>  Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError code = 5 means 'EffectiveFrom is missing.'<br/> Error code = 5 means 'EffectiveFrom date contains invalid data.'<br/> Error code = 5 means 'EffectiveFrom date cannot be empty.'<br/>\t\nError Code = 5 means 'SalaryType should be Annual, Hourly, Daily, Weekly or Monthly.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'SalaryType is missing.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'SalaryType cannot be empty.'<br/>\t\nError Code = 5 means 'PaymentFrequency cannot be empty.'<br/>\t Error Code = 5 means 'PaymentFrequency is missing.'<br/> Error Code = 5 means 'PaymentFrequency should be Monthly, Fortnightly, Weekly, Four Weekly, Daily or Two Weekly.'<br/>\t\nError Code = 5 means 'SalaryAmount is missing.'<br/> Error code = 5 means 'SalaryAmount contains invalid data.'<br/> Error code = 5 means 'SalaryAmount cannot be empty.'<br/>\t\t\t\t\t\t\nError Code = 5 means 'CurrencyCode is missing.'<br/>\t Error code = 5 means 'CurrencyCode contains invalid data.'<br/> Error code = 5 means 'CurrencyCode contains more than 100 characters.'<br/>\t\nError Code = 5 means 'ChangeReason is missing.'<br/> Error code = 5 means 'ChangeReason contains invalid data.'<br/> Error code = 5 means 'ChangeReason contains more than 100 characters.'<br/>\nError code = 5 means  'Comments contains invalid data.'<br/> Error code = 5 means  'Comments  contains more than 1024 characters.'<br/>\nError Code = 5 means 'Deduction is missing in deductions.'<br/>\t\t Error code = 5 means  'Deduction contains invalid data.'<br/> Error code = 5 means  'Deduction contains more than 100 characters.'<br/> Error code = 5 means  'Deduction cannot not be empty.'<br/>\nError Code = 5 means 'DisplayAsAmountOrPercentage contains invalid data'.<br/>\t\t\t\nError Code = 5 means 'Deduction amount contains invalid data..'<br/>\t\t Error code = 5 means  'Deduction amount cannot be empty.'<br/> Error Code = 5 means 'Amount is missing in deductions'<br/>\t\nError code = 5 means   'percentage must be less than 99999%.'<br/> Error code = 5 means  'percentage contains invalid data.'<br/> Error code = 5 means  'percentage cannot be empty.'<br/> Error code = 5 means  'Percentage is missing in deductions.'<br/>\nError Code = 5 means 'IncludeInTotalSalary contains invalid data.'<br/>\t\nError code = 5 means  'DeductionComments contains more than 512 characters.'<br/> Error code = 5 means  'DeductionComments contains invalid data.'<br/>\nError Code = 5 means 'Entitlement is missing in entitlements'.<br/>\t\t\t\t\t\t  Error Code = 5 means 'Entitlement contains invalid data.'<br/>\t Error Code = 5 means 'Entitlement contains more than 100 characters.'<br/>\t Error Code = 5 means 'Entitlement cannot be empty'<br/>\t\t\t\t\t\t\t \nError Code = 5 means 'Entitlement amount contains invalid data..'<br/>\t\t Error code = 5 means 'Entitlement amount cannot be empty.'<br/>\t\t\t\t\t\t\t Error Code = 5 means 'Amount is missing in entitlements.'<br/>\t Error Code = 5 means 'Percentage is missing in entitlements.'<br/>\t\t\t\t\t\t \nError code = 5 means  '\tEntitlement Comments contains invalid data.'<br/> Error code = 5 means  '\tEntitlement Comments  contains more than 1024 characters.'<br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\t\t\t\t\t\t \nError Code = 5 means 'There is already an existing salary detail with same effective date. Please select another date.'<br/> Error Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteSalary:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Salary detail deleted successfully'.\n<br/>\nError Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API Key does not exist.'<br/> Error Code = 4 means 'Action cannot be empty.'<br/>\t\t\t\t\t\t\t\t\t  Error Code = 4 means 'invalid Action.'<br/>\t\nError Code = 5 means 'EmployeeId cannot be empty.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\t\t\t\t\t\t\t\t \nError Code = 5 means 'EffectiveFrom date cannot be empty.'<br/>\t\t\t\t\t  Error Code = 5 means 'EffectiveFrom date contains invalid data.'<br/> Error Code = 5 means 'EffectiveFrom is missing.'<br/>\nError Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No Record FOund'<br/> "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUploadEmployeeDocument:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Employee document uploaded successfully.'<br/>\nError Code = 2  means 'Invalid API Key'<br/>\t\nError Code = 4 means 'Action cannot be empty.' <br/> \nError Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/> \nError Code = 5 means 'EmployeeId cannot be empty' <br/> \nError code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'EmployeeId contains invalid data.'<br/>\nError Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'Category is missing.' <br/>\nError Code = 5 means 'Category contains more than 100 characters.' <br/>\nError Code = 5 means 'Category cannot be empty.' <br/> \nError Code = 5 means 'EmployeeAccess cannot be empty.' <br/> \nError Code = 5 means 'Please select employee access.' <br/>\nError Code = 5 means 'EmployeeAccess contains invalid data.' <br/> \nError Code = 5 means 'ManagerAccess contains invalid data.' <br/> \nError Code = 5 means 'ManagerAccess cannot be empty.' <br/> \nError Code = 5 means 'SignatureRequired contains invalid data.' <br/> \nError Code = 5 means 'SignatureRequired cannot be empty.' <br/> \nError Code = 5 means 'DocumentName is missing.' <br/>\nError Code = 5 means 'DocumentName cannot be empty.' <br/>\nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>\nError Code = 5 means 'Comments contains invalid data.' <br/>\nError Code = 5 means 'Comments contains more than 256 characters.' <br/>\nError Code = 5 means 'File contains invalid data.' <br/>\nError Code = 5 means 'File cannot be empty.' <br/>\nError Code = 5 means 'File is missing.' <br/>\nError Code = 6 means 'Oops! Something went wrong' <br/> \nError Code = 5 means 'No access on employee document schema.'<br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No Record Found'<br/> "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAllDocument:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/>

              Error Code = 5 means 'API key does not exists.' <br/> 

              Error Code = 2 means 'Invalid API Key'<br/>

              Error Code = 4 means 'Action cannot be empty'<br/>

              Error Code = 4 means 'Invalid Action'<br/>

              Error Code = 5 means 'EmployeeId does not exists'<br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/>

              Error code = 5 means 'EmployeeId contains more than 15
              characters.'<br/>

              Error Code = 5 means 'EmployeeId contains invalid data.'<br/>

              Error Code = 5 means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'No access on employee document schema.'<br/>

              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No record found.'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/GetAllDocumentArray'
      ErrorForGetDocumentById:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 

              Error Code = 5 means 'API key does not exists.' <br/> 

              Error Code = 2 means 'Invalid API Key.' <br/> 

              Error Code = 4 means 'Action cannot be empty.' <br/> 

              Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> 

              Error Code = 5 means 'EmployeeId cannot be empty.' <br/> 

              Error code = 5 means 'EmployeeId contains more than 15
              characters.'<br/>

              Error Code = 5 means 'EmployeeId contains invalid data.'<br/>

              Error Code = 5 means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'Document Id cannot be empty.' <br/> 

              Error Code = 5 means 'DocumentId is missing.' <br/>

              Error Code = 5 means 'DocumentId contains invalid data.' <br/>

              Error Code = 5 means 'DocumentId contains more than 15
              characters.'<br/> 

              Error Code = 5 means 'No access on employee document schema.'<br/>

              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No record found.' <br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/GetDocumentByIdArray'
      ErrorForCreateNewEmployeeTimesheetDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Timesheet record inserted successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'Timesheet entry is already exist for
              EmployeeId and date' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'TimesheetDate is missing.' <br/> Error Code =
              5 means 'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
              'TimesheetDate contains invalid data.' <br/>

              Error Code = 5 means 'TimeIn1 contains invalid data.' <br/> Error
              Code = 5 means 'TimeIn2 contains invalid data.' <br/> Error Code = 5
              means 'TimeIn3 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn4 contains invalid data.' <br/> Error Code = 5 means 'TimeIn5
              contains invalid data.' <br/> Error Code = 5 means 'TimeIn6 contains
              invalid data.' <br/> Error Code = 5 means 'TimeIn7 contains invalid
              data.' <br/> Error Code = 5 means 'TimeIn8 contains invalid data.'
              <br/> Error Code = 5 means 'TimeIn9 contains invalid data.' <br/>
              Error Code = 5 means 'TimeIn10 contains invalid data.' <br/> Error
              Code = 5 means 'TimeIn11 contains invalid data.' <br/> Error Code =
              5 means 'TimeIn12 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn13 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn14 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn15 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut1 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut2 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut3 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut4 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut5 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut6 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut7 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut8 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut9 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut10 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut11 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut12 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut13 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut14 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut15 contains invalid data.' <br/> Error Code = 5 means
              'Comments contains invalid data.' <br/> Error Code = 5 means
              'Comments contains more than 1024 characters.' <br/> Error Code = 5
              means 'At least one time interval or comment is mandatory.' <br/>
              Error Code = 5 means 'Time Intervals are not in sequense.' <br/>
              Error Code = 5 means 'Last day closing time out is missing.' <br/>
              Error Code = 5 means 'TimesheetDate should not be smaller than
              Employee start date.' <br/> Error Code = 5 means 'TimesheetDate
              should not be later than Employee leaving date.' <br/>

              Error Code = 5 means 'No access on Timesheet schema.' <br/> Error
              Code = 7 means 'No json data found.' <br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateEmployeeTimesheetDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Timesheet record updated successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'Timesheet entry is already exist for
              EmployeeId and date' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'TimesheetDate is missing.' <br/> Error Code =
              5 means 'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
              'TimesheetDate contains invalid data.' <br/>

              Error Code = 5 means 'TimeIn1 contains invalid data.' <br/> Error
              Code = 5 means 'TimeIn2 contains invalid data.' <br/> Error Code = 5
              means 'TimeIn3 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn4 contains invalid data.' <br/> Error Code = 5 means 'TimeIn5
              contains invalid data.' <br/> Error Code = 5 means 'TimeIn6 contains
              invalid data.' <br/> Error Code = 5 means 'TimeIn7 contains invalid
              data.' <br/> Error Code = 5 means 'TimeIn8 contains invalid data.'
              <br/> Error Code = 5 means 'TimeIn9 contains invalid data.' <br/>
              Error Code = 5 means 'TimeIn10 contains invalid data.' <br/> Error
              Code = 5 means 'TimeIn11 contains invalid data.' <br/> Error Code =
              5 means 'TimeIn12 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn13 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn14 contains invalid data.' <br/> Error Code = 5 means
              'TimeIn15 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut1 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut2 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut3 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut4 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut5 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut6 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut7 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut8 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut9 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut10 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut11 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut12 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut13 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut14 contains invalid data.' <br/> Error Code = 5 means
              'TimeOut15 contains invalid data.' <br/> Error Code = 5 means
              'Comments contains invalid data.' <br/> Error Code = 5 means
              'Comments contains more than 1024 characters.' <br/> Error Code = 5
              means 'At least one time interval or comment is mandatory.' <br/>
              Error Code = 5 means 'Time Intervals are not in sequense.' <br/>
              Error Code = 5 means 'Last day closing time out is missing.' <br/>
              Error Code = 5 means 'TimesheetDate should not be smaller than
              Employee start date.' <br/> Error Code = 5 means 'TimesheetDate
              should not be later than Employee leaving date.' <br/>

              Error Code = 5 means 'No access on Timesheet schema.' <br/> Error
              Code = 7 means 'No json data found.' <br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteEmployeeTimesheetDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Timesheet record deleted successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/> Error Code = 5 means
              'TimesheetDate is missing.' <br/> Error Code = 5 means
              'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
              'TimesheetDate contains invalid data.' <br/>  Error Code = 5 means
              'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json
              data found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No Record FOund'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetTimesheetDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/> Error Code = 5 means 'StartDate
              should be before or equal to EndDate.' <br/> Error Code = 5 means
              'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json
              data found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No Record FOund'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetTimesheetArray'
      ErrorForGetBenefitByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/>
              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              2 means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot
              be empty'<br/> Error Code = 4 means 'Invalid Action'<br/>

              Error Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code
              = 5 means 'EmployeeId contains more than 15 characters.' <br/> 
              Error Code = 5 means 'EmployeeId contains invalid data.' <br/> 
              Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
              = 5 means 'EmployeeId is missing.' <br/> 

              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No detail has been
              found.'<br/> 
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/GetBenefitByEmployeeIdArray'
      ErrorForGetByBenefitIdApi:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'The requested processed successfully.'<br/>\t   Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t\t   Error Code = 2 means 'Invalid API Key'<br/>\t\t\t\t\t   Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t   Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'BenefitId is invalid.'<br/>\t\t\t\t\t   Error Code = 5 means 'BenefitId cannot be empty.'<br/>\t\t\t\t\t   Error Code = 5 means 'Benefit Id is missing.'<br/>\nError Code = 5 means 'No json data found.'<br/> Error Code = 7 means 'No json data found.'<br/>\t\t\t\t\t\t   Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No detail has been found.'<br/>"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetByBenefitIdObject'
      ErrorForGetCustomScreenByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.'<br/> Error Code = 2 means
              'Invalid API Key.'<br/> Error Code = 3 means 'Action is
              missing.'<br/>  Error Code = 4 means 'Action cannot be empty.'<br/>
              Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5 means
              'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId
              contains invalid data.'<br/> Error Code = 5 means 'EmployeeId
              contains more than 15 characters.'<br/> Error Code = 5 means
              'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId
              is missing.'<br/> Error Code = 5 means 'ScreenId does not
              exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
              Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
              'ScreenId is missing.'<br/> Error Code = 6 means 'Oops! Something
              went wrong.'<br/> Error Code = 7 means 'No json data found.'<br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
              has been found.
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetByCustomScreenByEmployeeId'
      ErrorForAddNewBenefitApi:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Benefit record added successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \t\nError Code = 5 means 'Benefit Type is missing.' <br/> \t\t Error Code = 5 means 'Benefit Type cannot be empty.' <br/> \t Error Code = 5 means 'Benefit Type contains more than 100 characters.' <br/> \t Error Code = 5 means 'Benefit Type contains invalid data.' <br/> \t\nError Code = 5 means 'Date Awarded is missing.' <br/>  Error Code = 5 means 'Date Awarded field cannot be Empty.' <br/>  Error Code = 5 means 'Date Awarded field contains invalid data.'<br/> \nError Code = 5 means 'DateAwarded should be before or equal to ExpiryDate.' <br/> \t Error Code = 5 means 'Expiry Date is missing.' <br/> \t\nError Code = 5 means 'Value contains more than 999,999,999,999.99.' <br/> Error Code = 5 means 'Value contains invalid data.' <br/>\nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/> \nError Code = 5 means 'Recover On Termination Can only Contain Yes Or No.' <br/> \t\t\t\t\t  Error Code = 5 means 'Recover On Termination cannot be empty.' <br/> \t\t\t\t  Error Code = 5 means 'Recover On Termination is missing.' <br/> \nError Code = 5 means 'This custom column name not exists' <br/> \t\t  Error Code = 5 means 'Custom column name should not be empty.' <br/> \t\t  Error Code = 5 means 'ColumnName is missing.' <br/> \t Error Code = 5 means 'ColumnValue is missing.' <br/> \nError Code = 5 means 'Custom column name already addded.' <br/>  Error Code = 5 means 'Custom column name does not exists on screen.' <br/>  Error Code = 5 means 'Custom column name should not be empty.' <br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing.' <br/> \nError Code = 5 means 'Document Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Document Name is missing.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.' <br/>  Error Code = 5 means 'Description contains more than 256 characters.' <br/>\nError Code = 5 means 'DocumentCategory contains invalid data.' <br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentCategory cannot be empty.' <br/> Error Code = 5 means 'Document Category is missing.' <br/>\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.' <br/> Error Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code = 5 means 'Signature Required is missing.' <br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> \t Error Code = 5 means 'No json data found.'<br/>\t\t\t\t\t\t  Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateBenefitApi:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Benefit record updated successfully..'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'valid Benefit Id Cannot be Empty.' <br/>  Error Code = 5 means 'Benefit Id is invalid.' <br/>  Error Code = 5 means 'Pending authorization request exists in system for passed Benefit id' <br/>  Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means 'benefit Id is missing.' <br/> \nError Code = 5 means 'Benefit Type is missing.' <br/> \t\t Error Code = 5 means 'Benefit Type cannot be empty.' <br/> \t Error Code = 5 means 'Benefit Type contains more than 100 characters.' <br/> \t Error Code = 5 means 'Benefit Type contains invalid data.' <br/>\nError Code = 5 means 'Expiry Date is missing.' <br/>  Error Code = 5 means 'Expiry Date field contains invalid data.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/> \nError Code = 5 means 'Date Awarded is missing.' <br/>  Error Code = 5 means 'Date Awarded field cannot be Empty.' <br/>  Error Code = 5 means 'Date Awarded field contains invalid data.'<br/>\t\t\t\t\t  Error Code = 5 means 'DateAwarded should be before or equal to ExpiryDate.' <br/> \t\t\t\t\t \nError Code = 5 means 'Value contains more than 999,999,999,999.99.' <br/>  Error Code = 5 means 'Value contains invalid data.' <br/>\nError Code = 5 means 'Recover On Termination Can only Contain Yes Or No.' <br/> \t\t\t\t\t  Error Code = 5 means 'Recover On Termination cannot be empty.' <br/> \t\t\t\t \nError Code = 5 means 'Custom column name already addded.' <br/>  Error Code = 5 means 'Custom column name does not exists on screen.' <br/>  Error Code = 5 means 'Custom column name should not be empty.' <br/> Error Code = 5 means 'ColumnName is missing.' <br/> \nError Code = 5 means 'ColumnValue is missing.' <br/> \nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Document Name is missing.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.' <br/>  Error Code = 5 means 'Description contains more than 256 characters.' <br/>\nError Code = 5 means 'DocumentCategory contains invalid data.' <br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentCategory cannot be empty.' <br/> Error Code = 5 means 'Document Category is missing.' <br/>\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.' <br/> Error Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code = 5 means 'Signature Required is missing.' <br/>\nError Code = 5 means 'One or more mandatory fields are missing.' <br/>  Error Code = 6 means 'Oops! Something went wrong.' <br/> \t Error Code = 6 means 'No record found.'<br/>\t\nError Code = 5 means 'No json data found.'<br/>\t\t\t\t\t\t  Error Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteBenefit:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Benefit record deleted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'Pending authorization request exists in system for passed Benefit id.' <br/>  Error Code = 5 means 'Benefit Id is invalid.' <br/>  Error Code = 5 means 'valid Benefit Id Cannot be Empty.' <br/> \nError Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 5 means 'No record found.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 6 means 'invalid action.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetCustomScreenDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 6
              means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No
              json data found.'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No detail has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetCustomScreenDetail'
      ErrorForAddNewCustomScreenTransaction:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'CustomScreen record added successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5
              means 'EmployeeId does not exists.'<br/> Error Code = 5 means
              'EmployeeId contains invalid data.'<br/> Error Code = 5 means
              'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
              means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
              'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
              missing.'<br/> Error Code = 5 means 'ScreenId does not
              exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
              Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
              'Custom column with name not exists'<br/> Error Code = 5 means
              'Custom column name should not be empty'<br/> Error Code = 5 means
              'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is
              missing.'<br/> Error Code = 5 means 'ColumnName contains invalid
              data'<br/> Error Code = 5 means 'ColumnName contains more than 100
              characters.'<br/> Error Code = 5 means 'ColumnName field contains
              invalid data'<br/> Error Code = 5 means 'ColumnName is
              mandatory'<br/> Error Code = 5 means 'Custom Column already
              addded'<br/> Error Code = 5 means 'Custom Column does not exists on
              screen'<br/>

              Error Code = 5 means 'Custom column name contains more than 100
              characters.'<br/>

              Error Code = 5 means 'One or more mandatory fields are missing'<br/>
              Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code
              = 5 means 'Document Name contains more than 100 characters.'<br/>
              Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5
              means 'File type is not supported'<br/> Error Code = 5 means 'File
              contains invalid data.'<br/> Error Code = 5 means 'File is
              missing.'<br/> Error Code = 5 means 'Description contains invalid
              data.'<br/> Error Code = 5 means 'Description contains more than 256
              characters.'<br/> Error Code = 5 means 'Description cannot be
              empty.'<br/> Error Code = 5 means 'DocumentCategory contains invalid
              data.'<br/> Error Code = 5 means 'DocumentCategory contains more
              than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory
              cannot be empty.'<br/> Error Code = 5 means 'Document Category is
              missing.'<br/> Error Code = 5 means 'SignatureRequired Can only
              Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired
              cannot be empty.'<br/> Error Code = 5 means 'Signature Required is
              missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
              <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateNextYearHolidayEntitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Entitlement Next Year updated
              successfully.'<br/>  Error Code = 1 means 'API key is missing.'
              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 2
              means 'API key is missing.' <br/>  Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
              'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
              cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is
              missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
              15 characters.'<br/> Error Code = 5 means 'EntitlementNextYear
              contains invalid data.'<br/> Error Code = 5 means
              'EntitlementNextYear should be between company normal working
              hours.'<br/> Error Code = 5 means 'ReasonForChange contains more
              than 256 characters.'<br/> Error Code = 5 means 'ReasonForChange
              cannot be empty.'<br/> Error Code = 5 means 'ReasonForChange is
              missing.'<br/> Error Code = 5 means 'ReasonForChange contains
              invalid data'<br/> Error Code = 5 means 'No access on holiday
              entitlement schema.'<br/> Error Code = 7 means 'No Json Data
              Found'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetQueryResult:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/> Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 2 means 'API key is
              missing.' <br/>  Error Code = 3 means 'Action is missing.' <br/> 
              Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
              means 'Invalid Action.' <br/> Error Code = 5 means 'API Key does not
              exists.' <br/> Error Code = 5 means 'Invalid query name.' <br/>
              Error Code = 5 means 'QueryName is missing.'<br/> Error Code = 5
              means 'No access to Query Builder schema.'<br/> Error Code = 7 means
              'No json data found.'<br/> Error Code = 8 means 'Either empty or no
              Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
              Error Code = 10 means 'No records found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetQueryResult'
      ErrorForGetQueryResultByQueryName:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/> Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 2 means 'API key is
              missing.' <br/>  Error Code = 3 means 'Action is missing.' <br/> 
              Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
              means 'Invalid Action.' <br/> Error Code = 5 means 'API Key does not
              exists.' <br/> Error Code = 5 means 'Invalid query name.' <br/>
              Error Code = 5 means 'QueryName is missing.'<br/> Error Code = 5
              means 'No access to Query Builder schema.'<br/> Error Code = 7 means
              'No json data found.'<br/> Error Code = 8 means 'Either empty or no
              Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
              Error Code = 10 means 'No records found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetQueryResultByQueryName'
      ErrorForGetHistoryByEmployeeIdAndFieldName:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/> Error Code = 0
              means 'Invalid FieldName.'<br/> Error Code = 2 means 'Invalid API
              Key.'<br/> Error Code = 2 means 'API key is missing.' <br/>  Error
              Code = 3 means 'Action is missing.' <br/>  Error Code = 4 means
              'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
              Action.' <br/> Error Code = 5 means 'API Key does not exists.' <br/>
              Error Code = 5 means 'EmployeeId contains invalid data.' <br/> Error
              Code = 5 means 'EmployeeId does not exists.' <br/> Error Code = 5
              means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
              'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId
              contains more than 15 characters.'<br/> Error Code = 5 means
              'FieldName cannot be empty.'<br/> Error Code = 5 means 'FieldName is
              missing.'<br/> Error Code = 5 means 'No access on history
              schema.'<br/> Error Code = 7 means 'No Json Data Found'<br/> Error
              Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9
              means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result 1:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetHistoryByEmployeeIdAndFieldName'
          Result 2:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result2GetHistoryByEmployeeIdAndFieldName'
          Result 3:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result3GetHistoryByEmployeeIdAndFieldName'
      ErrorForUpdateCustomScreenTransaction:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'CustomScreen record updated
              successfully.'<br/>  Error Code = 1 means 'API key is missing.'
              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3
              means 'Action is missing.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/>
              Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code =
              5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.'<br/> Error Code
              = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
              'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
              missing.'<br/> Error Code = 5 means 'ScreenId does not
              exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
              Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
              'Custom Screen Transactionid is missing.'<br/> Error Code = 5 means
              'Pending authorization request exists in system for passed Custom
              Screen Transaction id.'<br/> Error Code = 5 means 'Custom Screen
              TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen
              TransactionId Cannot be Empty'<br/> Error Code = 5 means 'Custom
              column with name not exists'<br/> Error Code = 5 means 'Custom
              column name should not be empty'<br/> Error Code = 5 means
              'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is
              missing.'<br/> Error Code = 5 means 'ColumnName contains invalid
              data'<br/> Error Code = 5 means 'ColumnName contains more than 100
              characters.'<br/> Error Code = 5 means 'ColumnName field contains
              invalid data'<br/> Error Code = 5 means 'ColumnName is
              mandatory'<br/> Error Code = 5 means 'Custom Column already
              addded'<br/> Error Code = 5 means 'Custom Column does not exists on
              screen'<br/>

              Error Code = 5 means 'Custom column name contains more than 100
              characters.'<br/>

              Error Code = 5 means 'One or more mandatory fields are missing'<br/>
              Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code
              = 5 means 'Document Name contains more than 100 characters.'<br/>
              Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5
              means 'File type is not supported'<br/> Error Code = 5 means 'File
              contains invalid data.'<br/> Error Code = 5 means 'File is
              missing.'<br/> Error Code = 5 means 'Description contains invalid
              data.'<br/> Error Code = 5 means 'Description contains more than 256
              characters.'<br/> Error Code = 5 means 'Description cannot be
              empty.'<br/> Error Code = 5 means 'DocumentCategory contains invalid
              data.'<br/> Error Code = 5 means 'DocumentCategory contains more
              than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory
              cannot be empty.'<br/> Error Code = 5 means 'Document Category is
              missing.'<br/> Error Code = 5 means 'SignatureRequired Can only
              Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired
              cannot be empty.'<br/> Error Code = 5 means 'Signature Required is
              missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
              <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code
              = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteCustomScreenTransaction:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'CustomScreen record deleted
              successfully.'<br/>  Error Code = 1 means 'API key is missing.'
              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3
              means 'Action is missing.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/>
              Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code =
              5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.'<br/> Error Code
              = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
              'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
              missing.'<br/> Error Code = 5 means 'ScreenId does not
              exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
              Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
              'Custom Screen Transactionid is missing.'<br/> Error Code = 5 means
              'Pending authorization request exists in system for passed Custom
              Screen Transaction id.'<br/> Error Code = 5 means 'Custom Screen
              TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen
              TransactionId Cannot be Empty'<br/> Error code = 6 means 'No record
              found.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>
              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetHolidayEntitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
              means 'StartDate contains invalid data.' <br/> Error Code = 5 means
              'StartDate should be before to EndDate.' <br/> Error Code = 5 means
              'EmployeeId contains invalid data.' <br/> Error Code = 5 means
              'EndDate contains invalid data.' <br/> Error Code = 5 means
              'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
              cannot be empty.<br/> Error Code = 5 means 'EmployeeId is
              missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
              15 characters.'<br/> Error Code = 5 means 'Either empty or no Form
              Data.'<br/> Error Code = 5 means 'No access on holiday entitlement
              schema.'<br/> Error Code = 7 means 'No Json Data Found'<br/> Error
              Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9
              means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetHoildayEntittlement'
      ErrorForGetNextYearHolidayEntitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
              means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
              'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
              is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be
              empty.<br/> Error Code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error Code = 5 means 'No access on holiday
              entitlement schema.'<br/> Error Code = 7 means 'No Json Data
              Found'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetNextYearHolidayEntitlement'
      ErrorForUpdateHolidayEntitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Entitlement This Year updated
              successfully.'<br/>  Error Code = 1 means 'API key is missing.'
              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 2
              means 'API key is missing.' <br/>  Error Code = 3 means 'Action is
              missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
              'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
              cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is
              missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
              15 characters.'<br/> Error Code = 5 means 'EntitlementThisYear
              contains invalid data.'<br/> Error Code = 5 means
              'EntitlementThisYear should be between company normal working
              hours.'<br/> Error Code = 5 means 'ReasonForChange contains more
              than 256 characters.'<br/> Error Code = 5 means 'ReasonForChange
              cannot be empty.'<br/> Error Code = 5 means 'ReasonForChange
              contains invalid data'<br/> Error Code = 5 means 'ReasonForChange is
              missing.'<br/> Error Code = 5 means 'No access on holiday
              entitlement schema.'<br/> Error Code = 7 means 'No Json Data
              Found'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetByCustomScreenTransactionId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'The requested processed successfully.'<br/>  Error Code = 1 means 'API key is missing.' <br/>\t\t\t\t\t\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId does not exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means 'ScreenId is missing.'<br/> Error Code = 5 means 'Custom Screen TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen TransactionId cannot be empty.'<br/> Error Code = 5 means 'Custom Screen TransactionId is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found."
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1GetByCustomScreenTransactionIdObject'
      ErrorForCreateNewVacancy:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Vacancy details inserted successfully.'<br/>  Error Code = 5 means 'Reference already exist.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'Vacancy Name contains invalid data.' <br/>  Error Code = 5 means 'Vacancy Name contains contains more than 512 characters.' <br/> Error Code = 5 means 'Vacancy Name cannot be empty.' <br/> Error Code = 5 means 'VacancyName is missing.' <br/>\nError Code = 5 means 'Vacancy Description should not be empty.' <br/>  Error Code = 5 means 'VacancyDescription is missing.' <br/>\nError Code = 5 means 'Company contains invalid data.' <br/> Error Code = 5 means 'Company contains more than 100 characters.' <br/> Error Code = 5 means 'Company cannot be empty.' <br/>\nError Code = 5 means 'Location contains invalid data.' <br/> Error Code = 5 means 'Location contains more than 100 characters.' <br/> Error Code = 5 means 'Location cannot be empty.' <br/>\nError Code = 5 means 'Department contains invalid data.' <br/> Error Code = 5 means 'Department contains more than 100 characters.' <br/> Error Code = 5 means 'Department cannot be empty.' <br/>\nError Code = 5 means 'ClosingDate field contains invalid data' <br/>\nError Code = 5 means 'Reference contains invalid data.' <br/>  Error Code = 5 means 'Vacancy Reference contains contains more than 100 characters.' <br/> Error Code = 5 means 'Reference cannot be empty.' <br/> Error Code = 5 means 'Reference is missing.' <br/> Error Code = 5 means 'Reference not exist.' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains contains more than 1024 characters.' <br/> Error Code = 5 means 'Comment cannot be empty.' <br/> \nError Code = 5 means 'SalaryRange contains invalid data.' <br/>  Error Code = 5 means 'SalaryRange contains contains more than 100 characters.' <br/> Error Code = 5 means 'SalaryRange cannot be empty.' <br/> \nError Code = 5 means 'JobTitle contains invalid data.' <br/>  Error Code = 5 means 'JobTitle contains contains more than 512 characters.' <br/> Error Code = 5 means 'JobTitle cannot be empty.' <br/>\nError Code = 5 means 'Country contains invalid data.' <br/>  Error Code = 5 means 'Country contains contains more than 216 characters.' <br/> Error Code = 5 means 'Country cannot be empty.' <br/>\nError Code = 5 means 'Experience contains invalid data.' <br/>  Error Code = 5 means 'Experience contains contains more than 256 characters.' <br/> Error Code = 5 means 'Experience cannot be empty.' <br/>\nError Code = 5 means 'City contains invalid data.' <br/>  Error Code = 5 means 'City contains contains more than 512 characters.' <br/> Error Code = 5 means 'City cannot be empty.' <br/>\nError Code = 5 means 'IsHideSalary contains invalid data.' <br/>  Error Code = 5 means 'IsHideSalary cannot be empty.' <br/>\nError Code = 5 means 'VacancyType contains invalid data.' <br/>  Error Code = 5 means 'VacancyType cannot be empty.' <br/>\nError Code = 5 means 'IsCoverLetterMandatory contains invalid data.' <br/>  Error Code = 5 means 'IsCoverLetterMandatory cannot be empty.' <br/>\nError Code = 5 means 'IsResumeMandatory contains invalid data.' <br/>  Error Code = 5 means 'IsResumeMandatory cannot be empty.' <br/>\nError Code = 5 means 'No access on ATS schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetVacancy:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-

              Error Code = 5 means 'Vacancy Reference contains invalid data.'
              <br/>  Error Code = 5 means 'Vacancy Reference contains contains
              more than 100 characters.' <br/> Error Code = 5 means 'Vacancy
              Reference cannot be empty.' <br/> Error Code = 5 means 'Vacancy
              Reference is missing.' <br/>

              Error Code = 5 means 'Reference not exist.' <br/> Error Code = 6
              means 'Unknown error occured.' <br/> Error Code = 5 means 'No access
              on ATS schema.'<br/> Error Code = 7 means 'No json data found.'<br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
              found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetVacancyObject'
      ErrorForGetAllVacancy:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-

              Error Code = 5 means 'Reference not exist.' <br/> Error Code = 6
              means 'Unknown error occured.' <br/>

              Error Code = 5 means 'No access on ATS schema.'<br/> Error Code = 7
              means 'No json data found.'<br/> Error Code = 8 means 'Either empty
              or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No record found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetAllVacancyObject'
      ErrorForEmailInbox:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The request processed successfully'<br/> 
              Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 3
              means 'Action is missing.' <br/> Error Code = 4 means 'Invalid
              Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.'
              <br/>

              Error Code = 5 means 'EmailFrom contains invalid data.' <br/>  Error
              Code = 5 means 'EmailFrom contains more than 254 characters.'<br/>
              Error code = 5 means 'EmailFrom cannot be empty.'<br/> Error Code =
              5 means 'EmailFrom is missing.' <br/> 

              Error Code = 5 means 'Email Id In EmailTo contains invalid data.'
              <br/>  Error Code = 5 means 'Email Id In EmailTo contains more than
              254 characters.'<br/> Error code = 5 means 'Email Id In EmailTo
              cannot be empty.'<br/> Error Code = 5 means 'EmailTo is missing.'
              <br/> 

              Error Code = 5 means 'Email Id In EmailCc contains invalid data.'
              <br/>  Error Code = 5 means 'Email Id In EmailCc contains more than
              254 characters.'<br/> Error code = 5 means 'Email Id In EmailCc
              cannot be empty.'<br/>

              Error Code = 5 means 'Email Id In EmailBcc contains invalid data.'
              <br/>  Error Code = 5 means 'Email Id In EmailBcc contains more than
              254 characters.'<br/> Error code = 5 means 'Email Id In EmailBcc
              cannot be empty.'<br/>

              Error Code = 5 means 'EmailSubject contains invalid data.' <br/> 
              Error Code = 5 means 'EmailSubject contains more than 2147483647
              characters.'<br/> Error code = 5 means 'EmailSubject cannot be
              empty.'<br/> Error Code = 5 means 'EmailSubject is missing.' <br/> 

              Error Code = 5 means 'Invalid file type. File type is not supported'
              <br/>  Error Code = 5 means 'DocumentName cannot be empty.'<br/>
              Error code = 5 means 'File size exceeds the limit. Please ensure the
              file is no larger than 15MB'<br/> Error Code = 5 means 'Invalid file
              size' <br/> 

              Error Code = 5 means 'Both user not belongs to same company.' <br/> 
              Error Code = 5 means 'API key with document access not exists.'
              <br/> 

              Error Code = 5 means 'EmailTo list can not be empty.' <br/>  Error
              Code = 5 means 'Entries in EmailTo list should not be more than 1.'
              <br/>  Error Code = 5 means 'Email subject does not contains email
              recipient email id.' <br/>  Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1ForEmailInbox'
      Result1ForEmailInbox:
        description: The Result Array
        type: object
        properties:
          APIKey:
            description: APIKey Value
            type: string
            example: 7acf796a-d1fc-41b1-bc3f-3f7a91b291f1
          RecipientEmployeeId:
            description: Recipient Employee Id value
            type: string
            example: PW2
          Title:
            description: Title value
            type: string
            example: Hello
      ErrorForaddrighttoworkdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Right To Work detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on employee schema.' <br/>\nError code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DocumentType contains invalid data.' <br/>  Error Code = 5 means 'DocumentType contains more than 100 characters.' <br/> \t\t\t\t\t Error Code = 5 means 'DocumentType is missing.' <br/> \nError Code = 5 means 'DocumentId has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'ValidFrom field contains invalid data' <br/> \t\t\t\t\t\t  Error Code = 5 means 'ValidTo field contains invalid data' <br/> \nError Code = 5 means 'Duration has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'Invalid file type.File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/> \nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForgetrighttoworkdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 5 means 'No access on employee schema.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No record found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1Forgetrighttoworkdetail'
      Result1Forgetrighttoworkdetail:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            RightToWorkId:
              description: RightToWorkId Value
              type: integer
              example: '156'
            DocumentType:
              description: Document type value
              type: string
              example: Residence Permit
            DocumentId:
              description: Document id value
              type: integer
              example: '10'
            ValidFrom:
              description: Valid from value
              type: string
              format: date
              example: Thu, 01 Jan 2015
            ValidTo:
              description: Valid to value
              type: string
              format: date
              example: Fri, 02 jan 2015
            Duration:
              description: Duration value
              type: integer
              example: '2'
            DocumentName:
              description: DocumentName value
              type: string
              example: api.txt
            DocumentURL:
              description: DocumentURL value
              type: string
              format: URL
              example: >-
                http://techinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?4a9b1332-3f71-4e96-859c-d1eaeaab3ea4
            Comments:
              description: Comments value
              type: string
              example: NICE
      ErrorForupdaterighttoworkdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 7
            description: "Error Code = 0 means 'Right to work detail updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on employee schema.' <br/>\nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'No record found.' <br/>  Error Code = 5 means 'RightToWorkTxnId is invalid' <br/>  Error Code = 5 means 'RightToWorkTxnId cannot be empty' <br/>  Error Code = 5 means 'RightToWorkTxnId is missing.' <br/> \nError Code = 5 means 'DocumentType contains more than 100 characters.' <br/>  Error Code = 5 means 'DocumentType contains invalid data.' <br/> \nError Code = 5 means 'DocumentId has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'ValidFrom field contains invalid data ' <br/>  Error Code = 5 means 'ValidTo field contains invalid data ' <br/> \nError Code = 5 means 'Duration has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 6 means 'Oops! Something went wrong.'<br/>\t\t\t Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorFordeleterighttoworkdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Right to work detail deleted
              successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>
              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              4 means 'Action cannot be empty.' <br/> Error Code = 4 means
              'Invalid Action.' <br/> Error Code = 5 means 'No access on employee
              schema.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
              = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
              'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
              means 'EmployeeId is missing.' <br/> 

              Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means
              'RightToWorkTxnId is invalid' <br/>  Error Code = 5 means
              'RightToWorkTxnId cannot be empty' <br/>  Error Code = 5 means
              'RightToWorkTxnId is missing.' <br/> 

              Error Code = 6 means 'No record found.'<br/> Error Code = 7 means
              'No json data found.' <br/> Error Code = 8 means 'Either empty or no
              Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetBackgroundCheckDetailByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>  Error
              Code = 10 means 'No record found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: >-
                  #/components/schemas/Result1ForGetBackgroundCheckDetailByEmployeeId
      Result1ForGetBackgroundCheckDetailByEmployeeId:
        description: The Result Array
        type: array
        items:
          type: object
          properties:
            BackgroundCheckDetailId:
              description: Background Check Detail Id Value
              type: integer
              example: 228
            TypeOfCheck:
              description: Type Of Check value
              type: string
              example: DBS
            DateCompleted:
              description: Date Completed value
              type: string
              format: date
              example: Tue, 14 Feb 2017
            ExpiryDate:
              description: Expiry Date value
              type: string
              format: date
              example: Thu, 16 Feb 2017
            DocumentName:
              description: Document Name value
              type: string
              example: aa.pdf
            DocumentURL:
              description: Document URL value
              type: string
              format: URL
              example: >-
                http://ayubinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?f58d38ab-bf3e-4c76-9bf2-e8b29122bb08
            Comments:
              description: Comments value
              type: string
              example: abc
      ErrorForAddBackgroundCheckDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Background detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'TypeOfCheck contains invalid data.' <br/>  Error Code = 5 means 'TypeOfCheck contains more than 100 characters.' <br/>  Error Code = 5 means 'TypeOfCheck cannot be empty.' <br/>  Error Code = 5 means 'TypeOfCheck is missing.' <br/> \nError Code = 5 means 'DateCompleted field contains invalid data' <br/> \t\t\t\t  Error Code = 5 means 'ExpiryDate field contains invalid data' <br/> \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/> \nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 1024 characters.' <br/> \nError Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateBackgroundCheckDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Background detail updated successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/> 

              Error code = 5 means 'No record found.'<br/> Error code = 5 means
              'BackgroundCheckTxnId is invalid'<br/> Error code = 5 means
              'BackgroundCheckTxnId cannot be empty'<br/> Error code = 5 means
              'BackgroundCheckTxnId is missing.'<br/>

              Error Code = 5 means 'TypeOfCheck contains invalid data.' <br/> 
              Error Code = 5 means 'TypeOfCheck contains more than 100
              characters.' <br/>  Error Code = 5 means 'TypeOfCheck cannot be
              empty.' <br/>  Error Code = 5 means 'TypeOfCheck is missing.' <br/> 

              Error Code = 5 means 'DateCompleted field contains invalid data'
              <br/>  Error Code = 5 means 'ExpiryDate field contains invalid data'
              <br/> 

              Error Code = 5 means 'Invalid file type. File type is not
              supported.' <br/>  Error Code = 5 means 'DocumentName cannot be
              empty.' <br/> 

              Error Code = 5 means 'File contains invalid data.' <br/>  Error Code
              = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means
              'Either DocumentName or File data not provided.' <br/> 

              Error Code = 5 means 'Comment contains invalid data.' <br/>  Error
              Code = 5 means 'Comment contains more than 1024 characters.' <br/> 

              Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
              7 means 'No json data found.' <br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteBackgroundCheckDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Background detail deleted successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
              = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
              'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
              means 'EmployeeId is missing.' <br/> 

              Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means
              'BackgroundCheckTxnId is invalid' <br/>  Error Code = 5 means
              'BackgroundCheckTxnId cannot be empty' <br/>  Error Code = 5 means
              'BackgroundCheckTxnId is missing.' <br/> 

              Error Code = 6 means 'No record found.'<br/> Error Code = 7 means
              'No json data found.' <br/> Error Code = 8 means 'Either empty or no
              Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForgetothereventdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 5 means 'No access on Other Event schema.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/> 

              Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error
              Code = 5 means 'StartDate should be before or equal to EndDate.'
              <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/> 

              Error Code = 7 means 'No json data found.' <br/> Error Code = 8
              means 'Either empty or no Form Data.'<br/> Error Code = 9 means
              'Invalid json data.'<br/> Error Code = 10 means 'The requested
              processed successfully.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1Forgetothereventdetail'
      Result1Forgetothereventdetail:
        description: The Result Array
        type: array
        items:
          type: object
          properties:
            OtherLeaveTxnId:
              description: OtherLeaveTxnId Value
              type: integer
              example: 1023
            StartDate:
              description: Start Date value
              type: string
              format: date
              example: '2016-04-15'
            EndDate:
              description: End Date value
              type: string
              format: date
              example: '2016-04-15'
            DurationType:
              description: Document type value
              type: integer
              example: 1
            DurationInDays:
              description: Duration In Days value
              type: integer
              format: decimal
              example: 1
            DurationInMinutes:
              description: Duration In Minutes value
              type: integer
              example: 450
            StartTime:
              description: Start Time value
              type: Timespan
              example: '01:00'
            EndTime:
              description: End Time value
              type: Timespan
              example: '02:00'
            DurationInDaysThisPeriod:
              description: Duration In Days This Period value
              type: integer
              format: decimal
              example: 1
            DurationInMinutesThisPeriod:
              description: Duration In Minutes This Period value
              type: integer
              example: 450
            RequesterComments:
              description: Requester Comments value
              type: string
              example: abc
            ApproverComments:
              description: Approver Comments value
              type: string
              example: comments
            Approver:
              description: Approver value
              type: string
              example: Sunil Singh
            Reason:
              description: Reason value
              type: string
              example: Study Leave
            Status:
              description: Status value
              type: string
              example: Approved
            LastActionDateTime:
              description: Last Action DateTime value
              type: string
              format: datetime
              example: '2016-06-01 13:39:18'
      ErrorForgetotherevententitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 5 means 'No access on Other Event schema.' <br/>

              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'The requested processed successfully.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/Result1Forgetotherevententitlement'
      Result1Forgetotherevententitlement:
        description: The Result Array
        type: array
        items:
          type: object
          properties:
            ReasonName:
              description: Reason Name Value
              type: string
              example: Jury Duty
            StartDate:
              description: Start Date value
              type: string
              format: date
              example: '2017-01-01'
            EndDate:
              description: End Date value
              type: string
              format: date
              example: '2017-12-31'
            EntitlementRecordedIn:
              description: Entitlement Recorded In value
              type: string
              example: '1'
            EntitlementDurationInDays:
              description: Entitlement Duration In Days value
              type: integer
              format: decimal
              example: 10
            EntitlementDurationInMins:
              description: Entitlement Duration In Mins value
              type: integer
              example: 4500
      ErrorForDeleteOtherEvent:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Other Leave deleted successfully.'<br/>  Error
              Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key
              does not exists.' <br/>  Error Code = 4 means 'Action cannot be
              empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
              Code = 5 means 'No access on Other Event schema.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
              = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
              'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
              means 'EmployeeId is missing.' <br/> 

              Error Code = 5 means 'Invalid json data' <br/>  Error Code = 5 means
              'OtherLeaveTxnId cannot be empty.' <br/>  Error Code = 5 means
              'OtherLeaveTxnId is invalid.' <br/>  Error Code = 5 means
              'OtherLeaveTxnId is missing.' <br/>  Error Code = 7 means 'No json
              data found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'EmployeeId does not exists.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForaddothereventleave:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Other Event Saved Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/>\nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DurationType should be DAY = 1 , Hour = 2.' <br/>  Error Code = 5 means 'DurationType cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DurationType is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be empty.' <br/> Error Code = 5 means 'DurationInDay May only Contain Input Multiple of 0.25' <br/>  Error Code = 5 means 'DurationInDay Contain Invalid Data' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'StartTime contains invalid data.' <br/>  Error Code = 5 means 'StartTime cannot be empty.' <br/>  Error Code = 5 means 'StartTime is Mising' <br/> \nError Code = 5 means 'EndTime contains invalid data.' <br/>  Error Code = 5 means 'EndTime cannot be empty.' <br/> \nError Code = 5 means 'Please Check StartTime and EndTime' <br/>  Error Code = 5 means 'Invalid Input' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/> \t Error Code = 5 means 'Comment contains more than 256 characters.' <br/> Error Code = 5 means 'Comment contains more than 1024 characters.' <br/> \t\t\t\t\t\t \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>   Error Code = 5 means 'DocumentName is missing.' <br/>  \nError Code = 5 means 'File contains invalid data.' <br/>   Error Code = 5 means 'File cannot be empty.' <br/>   Error Code = 5 means 'File is missing.' <br/>  \nError Code = 5 means 'Start date must be after employee start date.' <br/>   Error Code = 5 means 'Duration exceeds a day' <br/>   Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again' <br/>  \nError Code = 5 means 'Please check your dates include working days.' <br/>   Error Code = 5 means 'Please check this is a working day.' <br/>   Error Code = 5 means 'Duration in days cannot be zero.' <br/>  \nError Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/>   Error Code = 5 means 'Other Event Saved Successfully' <br/>   Error Code = 5 means 'Failed to Save Detail' <br/>   Error Code = 5 means 'There is InSufficient Leave Remaining' <br/>  Error Code = 5 means 'Duration Exceeds a Days' <br/> \nError Code = 5 means 'The duration entered exceeds the limit for a single booking' <br/>  Error Code = 5 means 'Other Event Saved Successfully' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t "
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForupdateothereventleave:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Other Event Updated Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'OtherEventTxnId contains invalid data.' <br/>  Error Code = 5 means 'OtherEventTxnId cannot be empty.' <br/>  Error Code = 5 means 'OtherEventTxnId is missing.' <br/> \nError Code = 5 means 'DurationType should be DAY = 1 , Hour = 2.' <br/>  Error Code = 5 means 'DurationType cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DurationType is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be empty.' <br/> Error Code = 5 means 'DurationInDay May only Contain Input Multiple of 0.25' <br/>  Error Code = 5 means 'DurationInDay Contain Invalid Data' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'StartTime contains invalid data.' <br/>  Error Code = 5 means 'StartTime cannot be empty.' <br/>  Error Code = 5 means 'StartTime is Mising' <br/> \nError Code = 5 means 'EndTime contains invalid data.' <br/>  Error Code = 5 means 'EndTime cannot be empty.' <br/> \nError Code = 5 means 'Please Check StartTime and EndTime' <br/>  Error Code = 5 means 'Invalid Input' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/> \t Error Code = 5 means 'Comment contains more than 1024 characters.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \t\t\t\t\t\t \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>   Error Code = 5 means 'DocumentName is missing.' <br/>  \nError Code = 5 means 'File contains invalid data.' <br/>   Error Code = 5 means 'File cannot be empty.' <br/>   Error Code = 5 means 'File is missing.' <br/>  \nError Code = 5 means 'Start date must be after employee start date.' <br/>   Error Code = 5 means 'Duration exceeds a day' <br/>   Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again' <br/>  \nError Code = 5 means 'Please check your dates include working days.' <br/>   Error Code = 5 means 'Please check this is a working day.' <br/>   Error Code = 5 means 'Duration in days cannot be zero.' <br/>  \nError Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/>   Error Code = 5 means 'Other Event Saved Successfully' <br/>   Error Code = 5 means 'Failed to Update Detail' <br/>   Error Code = 5 means 'There is InSufficient Leave Remaining' <br/>  Error Code = 5 means 'Duration Exceeds a Days' <br/> \nError Code = 5 means 'The duration entered exceeds the limit for a single booking' <br/>  Error Code = 5 means 'Other Event Updated Successfully' <br/>  Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForaddotherevententitlement:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Other Event Entitlement Saved Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'ThisYearEntitlement contains more than 4 characters.' <br/>  Error Code = 5 means 'ThisYearEntitlement cannot be empty.' <br/>  Error Code = 5 means 'ThisYearEntitlement Contain Invalid Data' <br/>  Error Code = 5 means 'ThisYearEntitlement is missing.' <br/>\nError Code = 5 means 'NextYearEntitlement contains more than 4 characters.' <br/>  Error Code = 5 means 'NextYearEntitlement cannot be empty.' <br/>  Error Code = 5 means 'NextYearEntitlement Contain Invalid Data' <br/>  Error Code = 5 means 'NextYearEntitlement is missing.' <br/>\nError Code = 5 means 'Entitlement RecordedIn contains invalid data.' <br/>  Error Code = 5 means 'Entitlement RecordedIn cannot be empty.' <br/>  Error Code = 5 means 'Entitlement Can be RecordedIn Days(1) or In Hours(2).' <br/>  Error Code = 5 means 'Entitlement Contain Invalid Data' <br/>  Error Code = 5 means 'Entitlement RecordedIn is missing.' <br/> \nError Code = 5 means 'Other Event Entitlement Fail to Saved Detail' <br/>  Error Code = 5 means 'Other Event Entitlement Saved Successfully' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t "
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForCreateNewApplicant:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Applicant details inserted successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\nError Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Vacancy Reference not exist.'<br/>\t Error Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'VacancyReference contains invalid data.' <br/>  Error Code = 5 means 'VacancyReference contains contains more than 100 characters.' <br/> Error Code = 5 means 'VacancyReference is missing.' <br/>\nError Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName contains contains more than 50 characters.' <br/> Error Code = 5 means 'FirstName cannot be empty.' <br/> Error Code = 5 means 'FirstName is missing.' <br/>\nError Code = 5 means 'LastName contains invalid data.' <br/>  Error Code = 5 means 'LastName contains contains more than 50 characters.' <br/> Error Code = 5 means 'LastName cannot be empty.' <br/> Error Code = 5 means 'LastName is missing.' <br/>\nError Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email contains contains more than 320 characters.' <br/>\nError Code = 5 means 'Gender contains invalid data.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/> \nError Code = 5 means 'PostCode contains invalid data.' <br/>  Error Code = 5 means 'PostCode contains contains more than 20 characters.' <br/>\nError Code = 5 means 'Address contains invalid data.' <br/>  Error Code = 5 means 'Address contains contains more than 512 characters.' <br/>\nError Code = 5 means 'PhoneNumber contains invalid data' <br/> Error Code = 5 means 'PhoneNumber contains more than 80 characters.' <br/>\nError Code = 5 means 'OtherContactDetails contains invalid data.' <br/>  Error Code = 5 means 'OtherContactDetails contains contains more than 1024 characters.' <br/>\nError Code = 5 means 'Source contains invalid data.' <br/>  Error Code = 5 means 'Source contains contains more than 100 characters.' <br/>\nError Code = 5 means 'RecruitmentCost contains invalid data.' <br/> \nError Code = 5 means 'DateLastContacted contains invalid data.' <br/> \nError Code = 5 means 'Addional Question QuestionId  is not exist.' <br/> Error Code = 5 means 'Addional Question - QuestionId is not valid.' <br/> Error Code = 5 means 'Addional Question - QuestionId is missing.' <br/>\nError Code = 5 means 'Internal Question - Multiple records for QuestionId' <br/> Error Code = 5 means 'Internal Question - QuestionId is not valid.' <br/> Error Code = 5 means 'Internal Question - QuestionId is missing.' <br/> Error Code = 5 means 'Internal Questions - Value for QuestionId should not be empty.' <br/>\nError Code = 5 means 'Internal Questions - Value for QuestionId is not a valid. Allowed only numbers.' <br/> Error Code = 5 means 'Internal Questions - Value for QuestionId  questionId is missing.' <br/>\nError Code = 5 means 'Vacancy Reference not exist.' <br/>\nError Code = 5 means 'DocumentName contains invalid data.' <br/>  Error Code = 5 means 'DocumentName contains contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName cannot be empty.' <br/>\nError Code = 5 means 'Documents - Url contains invalid data.' <br/>  Error Code = 5 means 'Documents - Url contains contains more than 256 characters.' <br/> Error Code = 5 means 'Documents - Url cannot be empty.' <br/> Error Code = 5 means 'Documents - Url contains invalid data.' <br/>   Error Code = 5 means 'Documents - Url is missing.' <br/> Error Code = 5 means 'No access on ATS schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultCreateNewApplicant'
      ErrorForuploadapplicantdocument:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Applicant document upload successfully'<br/> 

              Error Code = 2 means 'Invalid API Key.'<br/>

              Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
              means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not
              exists.' <br/> 

              Error Code = 5 means 'ApplicantId does not exists.' <br/>  Error
              Code = 5 means 'ApplicantId contains contains more than 15
              characters.' <br/> Error Code = 5 means 'ApplicantId contains
              invalid data.' <br/> Error Code = 5 means 'ApplicantId cannot be
              empty.' <br/> Error Code = 5 means 'Invalid ApplicantId.' <br/>

              Error Code = 5 means 'Invalid file type. File type fileExtension is
              not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be
              empty.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/>

              Error Code = 5 means 'Description contains invalid data.' <br/> 
              Error Code = 5 means 'Description contains contains more than 256
              characters.' <br/>

              Error Code = 5 means 'File contains invalid data' <br/>  Error Code
              = 5 means 'File is Missing.' <br/> Error Code = 5 means 'File cannot
              be empty.' <br/>

              Error Code = 5 means 'No access on ATS schema.'<br/>

              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 6 means 'Unknown error occured.' <br/>

              Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetLateByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'The request processed successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/>\nError Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'StartDate field contains invalid data.' <br/> \nError Code = 5 means 'EndDate field contains invalid data.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>\nError Code = 5 means 'No access on late schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetLateByEmployeeId'
      ErrorForAddNewLate:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: " Error Code = 0 means 'Late record updated successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\n\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/>  Error Code = 5 means 'There is no late entry during the period requested.' <br/> \nError Code = 5 means 'HowLate field contains invalid data.' <br/>  Error Code = 5 means 'HowLate field cannot be Empty.' <br/>  Error Code = 5 means 'HowLate is missing.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/>  Error Code = 5 means 'Comments cannot be Empty.' <br/>\n\nError Code = 5 means 'Late date must be after employee start date.' <br/> \nError Code = 5 means 'No access on late schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpadteLate:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'Late record added successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/> \nError Code = 5 means 'HowLate field contains invalid data.' <br/>  Error Code = 5 means 'HowLate field cannot be Empty.' <br/>  Error Code = 5 means 'HowLate is missing.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/>  Error Code = 5 means 'Comments cannot be Empty.' <br/>\nError Code = 5 means 'Late date must be after employee start date.' <br/>  Error Code = 5 means 'There is already has an existing late entry during the period requested.' <br/> \nError Code = 5 means 'No access on late schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorFordeletelate:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'Late detail deleted successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/> \nError Code = 5 means 'No access on late schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForCheckDuplicateApplicant:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: " Error Code = 5 means 'Vacancy Reference not exist.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'VacancyReference contains invalid data.' <br/>  Error Code = 5 means 'VacancyReference contains contains more than 100 characters.' <br/> Error Code = 5 means 'VacancyReference is missing.' <br/> Error Code = 5 means 'Vacancy Reference not exist.' <br/>\nError Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName contains contains more than 50 characters.' <br/> Error Code = 5 means 'FirstName cannot be empty.' <br/> Error Code = 5 means 'FirstName is missing.' <br/>\nError Code = 5 means 'LastName contains invalid data.' <br/>  Error Code = 5 means 'LastName contains contains more than 50 characters.' <br/> Error Code = 5 means 'LastName cannot be empty.' <br/> Error Code = 5 means 'LastName is missing.' <br/>\nError Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email contains contains more than 320 characters.' <br/> Error Code = 5 means 'No access on ATS schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultCheckDuplicateApplicant'
      ErrorForWorkPattern:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >2-
               Error Code = 0 means 'The request processed successfully.'<br/> Error Code = 0 means 'No Record Found.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'WorkPatternName contains invalid data.' <br/> 
              Error Code = 5 means 'WorkPatternName contains contains more than
              100 characters.' <br/> Error Code = 5 means 'No access on employee
              schema.'<br/> Error Code = 5 means 'Invalid Work Pattern Id.' <br/>

              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No
              json data found.'<br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultWorkPatternApplicant'
      ErrorForEmployeeAppraisalGetEmployeeById:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: ' Error Code = 0 means ''The requested processed successfully.''<br/> Error Code = 5 means ''API key does not exists.'' <br/>  Error Code = 2 means ''Invalid API Key''<br/> Error Code = 4 means ''Action cannot be empty''<br/> Error Code = 4 means ''Invalid Action''<br/> Error Code = 5 means ''EmployeeId does not exists''<br/> Error Code = 5 means ''EmployeeId cannot be empty.''<br/> Error Code = 5 means ''EmployeeId is missing.''<br/> Error Code = 5 means ''EmployeeId contains invalid data.''<br/> Error Code = 5 means ''EmployeeId contains more than 15 characters.''<br/> Error Code = 5 means ''StartDate contains invalid data.''<br/> Error Code = 5 means ''StartDate should be before or equal to EndDate''<br/> Error Code = 5 means ''EndDate contains invalid data.''<br/>  Error Code = 7 means ''No json data found.'' <br/> Error Code = 8 means ''Either empty or no Form Data.''<br/> Error Code = 9 means ''Invalid json data.''<br/> Error Code = 10 means ''No detail has been found''<br/> '
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/GetEmployeeByIdArray'
      ErrorForGetByAppraisalId:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: ' Error Code = 0 means ''The requested processed successfully.''<br/>  Error Code = 5 means ''API key does not exists.'' <br/>  Error Code = 2 means ''Invalid API Key''<br/> Error Code = 4 means ''Action cannot be empty''<br/> Error Code = 4 means ''Invalid Action''<br/> Error Code = 5 means ''EmployeeId does not exists''<br/> Error Code = 5 means ''EmployeeId cannot be empty.''<br/> Error Code = 5 means ''EmployeeId is missing.''<br/> Error Code = 5 means ''EmployeeId contains invalid data.''<br/> Error Code = 5 means ''EmployeeId contains more than 15 characters.''<br/> Error Code = 5 means ''AppraisalId cannot be empty.''<br/> Error Code = 5 means ''Appraisal Id is missing.'' <br/>  Error Code = 5 means ''Appraisal Id is invalid.'' <br/>  Error Code = 7 means ''No json data found.'' <br/> Error Code = 8 means ''Either empty or no Form Data.''<br/> Error Code = 9 means ''Invalid json data.''<br/> Error Code = 10 means ''No Record Found''<br/> '
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetByAppraisalIdObject'
      ErrorForAddNewAppraisal:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'Appraisal record added successfully.'<br/> Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t   Error Code = 2 means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot be empty'<br/> Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId does not exists'<br/>\t\t\t\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\t\t\t\t\t   Error Code = 5 means 'EmployeeId cannot be empty.'<br/>\t\nError Code = 5 means 'Reviewer email contains invalid data.'<br/>\t\t Error Code = 5 means 'Reviewer email contains more than 254 characters.'<br/> Error Code = 5 means 'Reviewer does not exists for this company.' <br/> \t\nError Code = 5 means 'Appraisal Review Date is missing.' <br/> \t\t\t\t\t   Error Code = 5 means 'Appraisal Review Date cannot be Empty.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Appraisal Review Date contains invalid data.' <br/>  Error Code = 5 means 'Reviewer is missing.' <br/> \t\nError Code = 5 means 'Notes contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Notes contains more than 1024 characters.' <br/>\nError Code = 5 means 'objectives  contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'objectives contains more than 1024 characters.' <br/> \nError Code = 5 means 'ActionPlan contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'ActionPlan contains more than 1024 characters.' <br/> \nError Code = 5 means 'Custom column with column name not exists.' <br/>\t\t Error Code = 5 means 'Custom column name should not be empty.' <br/>\t\t\t\t\t   Error Code = 5 means 'ColumnName is missing'<br/>\t\t\t\t\t\t\t   Error Code = 5 means 'ColumnName column already addded.'<br/> Error Code = 5 means 'ColumnName column does not exists on screen.'<br/>\t\t\t\t\t\t  \t\t\t\t\t   Error Code = 5 means 'ColumnValue is missing'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'DocumentName is missing'<br/>\t\t\t\t\t   Error Code = 5 means 'File contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'Document Category is missing.'<br/>\t Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Category cannot be empty.'<br/> Error Code = 5 means 'Document Category contains more than 100 characters.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/>\t\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/>\t\t\t\t\t  \t\t\t\t\t   Error Code = 5 means 'SignatureRequired cannot be empty.'<br/>\t\t\t\t\t\t   Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'One or more mandatory fields are missing'<br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means'No record found.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No Json data found.'<br/>"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateAppraisal:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 6
            description: " Error Code = 0 means 'Appraisal record updated successfully.'<br/> \t   Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t\t  Error Code = 4 means 'Action cannot be empty.' <br/>  Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description cannot be empty.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'Appraisal Id is missing.' <br/>  Error Code = 5 means 'Appraisal Id cannot be empty.' <br/> \nError Code = 5 means 'Appraisal Review Date is missing.' <br/>  Error Code = 5 means 'Appraisal Review Date cannot be Empty.' <br/>  Error Code = 5 means 'Appraisal Review Date contains invalid data.' <br/> \nError Code = 5 means 'Reviewer does not exists for this company.' <br/> Error Code = 5 means 'Reviewer email contains invalid data.'<br/>\t\t Error Code = 5 means 'Reviewer email contains more than 254 characters.'<br/>\t\t\nError Code = 5 means 'ColumnName is missing'<br/>\t Error Code = 5 means 'ColumnName  does not exists on the screen.'<br/>\nError Code = 5 means 'Notes contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Notes cannot be empty.' <br/>  Error Code = 5 means 'Notes contains more than 1024 characters.' <br/>\nError Code = 5 means 'objectives  contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'objectives cannot be empty.' <br/> Error Code = 5 means 'objectives contains more than 1024 characters.' <br/> \nError Code = 5 means 'ActionPlan contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'ActionPlan cannot be empty.' <br/>  Error Code = 5 means 'ActionPlan contains more than 1024 characters.' <br/> \nError Code = 5 means 'Custom column name should not be empty.' <br/>\t\t\t\t\t   Error Code = 5 means 'ColumnName is missing'<br/>\t\t\t\t\t\t   Error Code = 5 means 'Custom column name  already addded.'<br/> Error Code = 5 means 'Custom column name  does not exists on screen.'<br/>\t\nError Code = 5 means 'ColumnValue is missing'<br/>\t\t Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'DocumentName is missing'<br/>\t Error Code = 5 means 'Document Category is missing.'<br/>\t Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Category cannot be empty.'<br/> Error Code = 5 means 'Document Category contains more than 100 characters.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/>\t\nError Code = 5 means 'File contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.' <br/> \nError Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/>\t\t\t\t\t \t\t   Error Code = 5 means 'SignatureRequired cannot be empty.'<br/>\t\t\t\t   Error Code = 5 means 'Signature Required is missing.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 6 means 'No record found.' <br/>\nError Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t Error Code = 10 means 'No detail has been found.'<br/>\t"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteAppraisal:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'Appraisal record deleted successfully.'<br/>  Error Code = 5 means 'API key does not exists.' <br/> \t  Error Code = 4 means 'Action cannot be empty.' <br/> \t Error Code = 4 means 'Invalid Action'<br/>\t\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>     Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'Appraisal Id is missing.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Pending authorization request exists in system for passed appraisal id.' <br/> \t Error Code = 5 means 'Appraisal id cannot be empty'<br/> Error Code = 5 means 'Appraisal Id is invalid'<br/>\nError Code = 5 means 'EmployeeId does not exists'<br/>\t\t   Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>   Error Code = 10 means 'No record found.'<br/>  Error Code = 10 means 'No Json data found.'<br/> "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForAddNewDrivingLicense:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Driving Licence record added successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'License Number contains invalid data.'<br/> Error Code = 5 means 'License Number contains more than 50 characters.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Type contains invalid data.'<br/> Error Code = 5 means 'License Type contains more than 100 characters.'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Comments contains invalid data.'<br/> Error Code = 5 means 'Comments contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateDrivingLicense:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Driving Licence record updated successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'No record found.'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Driving id.'<br/> Error Code = 5 means 'DrivingId is invalid'<br/> Error Code = 5 means 'valid DrivingId Cannot be Empty'<br/> Error Code = 5 means 'driving Id is missing.'<br/> Error Code = 5 means 'License Number contains invalid data.'<br/> Error Code = 5 means 'License Number contains more than 50 characters.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Type contains invalid data.'<br/> Error Code = 5 means 'License Type contains more than 100 characters.'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Comments contains invalid data.'<br/> Error Code = 5 means 'Comments contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\t\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetDrivingLicenseByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/>
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means
              'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
              Action.' <br/> Error Code = 5 means 'API key does not exists.'
              <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/>
              Error Code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error Code = 5 means 'EmployeeId cannot be
              empty.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
              <br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error
              Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 7 means
              'No json data found.' <br/> Error Code = 8 means 'Either empty or no
              Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
              Error Code = 10 means 'No detail has been found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetDrivingLicenseByEmployeeId'
      ErrorForGetDrivingLicenseByDrivingId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/>
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means
              'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
              Action.' <br/> Error Code = 5 means 'API key does not exists.'
              <br/>  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5
              means 'EmployeeId is missing.'<br/> Error Code = 5 means 'DrivingId
              is invalid'<br/> Error Code = 5 means 'DrivingId cannot be
              empty.'<br/> Error Code = 5 means 'Driving Id is missing.'<br/>
              Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
              = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either
              empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetDrivingLicenseByDrivingIdObject'
      ErrorForDeleteDrivingLicense:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Driving Licence record deleted
              successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/>
              Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
              means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not
              exists.' <br/>  Error Code = 5 means 'EmployeeId does not
              exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid
              data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error Code = 5 means 'EmployeeId cannot be
              empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/>
              Error Code = 5 means 'DrivingId is invalid'<br/> Error Code = 5
              means 'DrivingId cannot be empty.'<br/> Error Code = 5 means
              'Driving Id is missing.'<br/> Error Code = 6 means 'Oops! Something
              went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
              has been found.'<br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetQualificationByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
              'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
              empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
              Code = 5 means 'API key does not exists.' <br/>  Error Code = 5
              means 'EmployeeId does not exists.'<br/> Error Code = 5 means
              'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId
              contains more than 15 characters.'<br/> Error Code = 5 means
              'EmployeeId contains invalid data.' <br/>  Error Code = 5 means
              'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/> Error Code = 6 means 'Oops! Something
              went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
              has been found.' <br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetQualificationByEmployeeId'
      ErrorForGetQualificationByQualificationId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
              'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
              empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
              Code = 5 means 'API key does not exists.' <br/>  Error Code = 5
              means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
              'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
              means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
              means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/> Error Code = 5 means 'QualificationId
              is invalid' <br/> Error Code = 5 means 'QualificationId cannot be
              empty.' <br/> Error Code = 5 means 'Qualification Id is missing.'
              <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error
              Code = 7 means 'No json data found.' <br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No detail has been found.'
              <br/>
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: >-
                  #/components/schemas/ResultForGetQualificationByQualificationIdObject
      ErrorForAddNewQualification:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'qualification inserted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Qualification contains invalid data.'<br/> Error Code = 5 means 'Qualification contains more than 100 characters.'<br/> Error Code = 5 means 'Qualification is missing.'<br/> Error Code = 5 means 'Subject contains invalid data.'<br/> Error Code = 5 means 'Subject contains more than 100 characters.'<br/> Error Code = 5 means 'DatePassed field contains invalid data'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'Custom column name is missing.'<br/> Error Code = 5 means 'Custom column name already addded.'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/> Error Code = 5 means 'Column Value is missing.'<br/> Error Code = 5 means 'Column Value contains invalid data'<br/> Error Code = 5 means 'Column Value contains more than 100 characters.'<br/> Error Code = 5 means 'Column Value field contains invalid data'<br/> Error Code = 5 means 'Column Value is mandatory'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 256 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateQualification:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Qualification record updated successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'qualification Id is missing.'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Qualification id.'<br/> Error Code = 5 means 'QualificationId is invalid'<br/> Error Code = 5 means 'valid QualificationId Cannot be Empty'<br/> Error Code = 5 means 'Qualification contains invalid data.'<br/> Error Code = 5 means 'Qualification contains more than 100 characters.'<br/> Error Code = 5 means 'Qualification is missing.'<br/> Error Code = 5 means 'Subject contains invalid data.'<br/> Error Code = 5 means 'Subject contains more than 100 characters.'<br/> Error Code = 5 means 'DatePassed field contains invalid data'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'Custom column name is missing.'<br/> Error Code = 5 means 'Custom column name already addded.'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/> Error Code = 5 means 'Column Value is missing.'<br/> Error Code = 5 means 'Column Value contains invalid data'<br/> Error Code = 5 means 'Column Value contains more than 100 characters.'<br/> Error Code = 5 means 'Column Value field contains invalid data'<br/> Error Code = 5 means 'Column Value is mandatory'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 256 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteQualification:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Qualification record deleted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Qualification id.'<br/> Error Code = 5 means 'QualificationId is invalid'<br/> Error Code = 5 means 'valid QualificationId Cannot be Empty'<br/> Error Code = 5 means 'Qualification Id is missing.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetTrainingDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
              'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
              empty.' <br/> Error Code = 5 means 'API key does not exists.' <br/> 
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/> Error Code = 6 means 'Oops! Something
              went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
              has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetTrainingDetail'
      ErrorForAddTrainingDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Training detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5\tmeans 'TrainingType contains invalid data.'<br/> Error Code = 5\tmeans 'TrainingType contains more than 100 characters.'<br/> Error Code = 5\tmeans 'TrainingType cannot be empty.'<br/> Error Code = 5\tmeans 'TrainingType is missing.'<br/> Error Code = 5\tmeans 'Description contains invalid data.'<br/> Error Code = 5\tmeans 'Description contains more than 512 characters.'<br/> Error Code = 5\tmeans 'Description cannot be empty.'<br/> Error Code = 5\tmeans 'Invalid!!!! Importance value 1 : Mandatory and 2 : Optional'<br/> Error Code = 5\tmeans 'Importance contains invalid data.'<br/> Error Code = 5\tmeans 'Importance cannot be empty.'<br/> Error Code = 5\tmeans 'Importance field value is missing.'<br/> Error Code = 5\tmeans 'Status detail is not valid'<br/> Error Code = 5 means 'Status contains invalid data.'<br/> Error Code = 5 means 'Status cannot be empty.'<br/> Error Code = 5 means 'Status field value is missing.'<br/> Error Code = 5 means 'InProgress values should be multiple of 10 and less than 100'<br/> Error Code = 5 means 'InProgress contains invalid data.'<br/> Error Code = 5 means 'InProgress cannot be empty.'<br/> Error Code = 5 means 'TrainingDate field contains invalid data'<br/> Error Code = 5 means 'TrainindEndDate field contains invalid data'<br/> Error Code = 5 means 'TrainingExpiryDate field contains invalid data'<br/> Error Code = 5 means 'Cost contains invalid data.'<br/> Error Code = 5\tmeans 'Provider contains invalid data.'<br/> Error Code = 5\tmeans 'Provider contains more than 256 characters.'<br/> Error Code = 5\tmeans 'Note contains invalid data.'<br/> Error Code = 5\tmeans 'Note contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName  already addded.'<br/> Error Code = 5 means 'customColumnName  does not exists on screen'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5\tmeans 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateTrainingDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Training detail updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> Error Code = 5 means 'Pending authorization request exists in system for passed vehicle id.'<br/> Error Code = 5 means 'TrainingDetailId is invalid'<br/> Error Code = 5 means 'TrainingDetailId Cannot be Empty'<br/> Error Code = 5 means 'Training Id is missing.'<br/> Error Code = 5 means 'TrainingType contains invalid data.'<br/> Error Code = 5 means 'TrainingType cannot be empty.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 512 characters.'<br/> Error Code = 5 means 'Description cannot be empty.'<br/> Error Code = 5 means 'Invalid!!!! Importance value 1 : Mandatory and 2 : Optional\t'<br/> Error Code = 5 means 'Importance contains invalid data.'<br/> Error Code = 5 means 'Importance cannot be empty.'<br/> Error Code = 5 means 'Status detail is not valid'<br/> Error Code = 5 means 'Status contains invalid data'<br/> Error Code = 5 means 'Status cannot be empty.'<br/> Error Code = 5 means 'TrainingDate field contains invalid data'<br/> Error Code = 5 means 'TrainindEndDate field contains invalid data'<br/> Error Code = 5 means 'TrainingExpiryDate field contains invalid data'<br/> Error Code = 5 means 'Progress values should be multiple of 10 and less than 100 .'<br/> Error Code = 5 means 'Progress contains invalid data.'<br/> Error Code = 5 means 'Progress cannot be empty.'<br/> Error Code = 5 means 'Cost contains invalid data.'<br/> Error Code = 5 means 'Provider contains invalid data.'<br/> Error Code = 5 means 'Provider contains more than 256 characters.'<br/> Error Code = 5 means 'Note contains invalid data.'<br/> Error Code = 5 means 'Note contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\t\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5\tmeans 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorFordeletetrainingdetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Training detail deleted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Pending authorization request exists in system for passed vehicle id.'<br/> Error Code = 5 means 'TrainingDetailId is invalid'<br/> Error Code = 5 means 'TrainingDetailId Cannot be Empty'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForAddNewVehicleDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Vehicle record added successfully'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'Registration is missing.' <br/> Error Code = 5
              means 'Registration cannot be empty.' <br/> Error Code = 5 means
              'Registration contains invalid data.' <br/> Error Code = 5 means
              'Registration contains more than 100 characters.' <br/>

              Error Code = 5 means 'Make contains invalid data.' <br/> Error Code
              = 5 means 'Make contains more than 100 characters.' <br/>

              Error Code = 5 means 'Model contains invalid data.' <br/> Error Code
              = 5 means 'Model contains more than 100 characters.' <br/>

              Error Code = 5 means 'Colour contains invalid data.' <br/> Error
              Code = 5 means 'Colour contains more than 50 characters.' <br/>

              Error Code = 5 means 'EngineSize contains invalid data.' <br/> Error
              Code = 5 means 'EngineSize contains more than 50 characters.' <br/>

              Error Code = 5 means 'FuelType contains invalid data.' <br/> Error
              Code = 5 means 'FuelType contains more than 50 characters.' <br/>

              Error Code = 5 means 'InsuranceCompany contains invalid data.' <br/>
              Error Code = 5 means 'InsuranceCompany contains more than 100
              characters.' <br/>

              Error Code = 5 means 'PolicyNumber contains invalid data.' <br/>
              Error Code = 5 means 'PolicyNumber contains more than 100
              characters.' <br/>

              Error Code = 5 means 'MOTExpiryDate field contains invalid data.'
              <br/>

              Error Code = 5 means 'InsuranceExpiryDate field contains invalid
              data.' <br/> Error Code = 5 means 'InsuranceExpiryDate field cannot
              be empty.' <br/>

              Error Code = 5 means 'Comments contains invalid data.' <br/> Error
              Code = 5 means 'Comments contains more than 256 characters.' <br/>

              Error Code = 5 means 'Custom column name not exists.' <br/> Error
              Code = 5 means 'Custom column name should not be empty.' <br/> Error
              Code = 5 means 'ColumnName is missing.' <br/> Error Code = 5 means
              'ColumnValue is missing.' <br/> Error Code = 5 means 'Custom  column
              name contains invalid data.' <br/> Error Code = 5 means 'Custom
              column already added.' <br/> Error Code = 5 means 'Custom column
              does not exists on screen.' <br/>

              Error Code = 5 means 'Custom column name contains more than 100
              characters.'<br/>

              Error Code = 5 means 'One or more mandatory fields are missing.'
              <br/> Error Code = 5 means 'One or more custom fields are
              mandatory.' <br/>

              Error Code = 5 means 'Invalid file type. This file type is not
              supported.' <br/> Error Code = 5 means 'DocumentName cannot be
              empty.' <br/> Error Code = 5 means 'Document Name contains more than
              100 characters.' <br/> Error Code = 5 means 'Document Name is
              missing.' <br/>


              Error Code = 5 means 'File contains invalid data.' <br/> Error Code
              = 5 means 'File is missing.' <br/>

              Error Code = 5 means 'Description contains invalid data.' <br/>
              Error Code = 5 means 'Description contains more than 256
              characters.' <br/>


              Error Code = 5 means 'Document Category is missing.' <br/> Error
              Code = 5 means 'Document Category contains invalid data.' <br/>
              Error Code = 5 means 'Document Category contains more than 100
              characters.' <br/> Error Code = 5 means 'Document Category cannot be
              empty.' <br/>

              Error Code = 5 means 'Signature Required is missing.' <br/> Error
              Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code
              = 5 means 'SignatureRequired Can only Contain True Or False.' <br/>

              Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
              6 means 'No record found.' <br/> Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateVehicleDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Vehicle record updated successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'Registration is missing.' <br/> Error Code = 5
              means 'Registration cannot be empty.' <br/> Error Code = 5 means
              'Registration contains invalid data.' <br/> Error Code = 5 means
              'Registration contains more than 100 characters.' <br/>

              Error Code = 5 means 'Make contains invalid data.' <br/> Error Code
              = 5 means 'Make contains more than 100 characters.' <br/>

              Error Code = 5 means 'Model contains invalid data.' <br/> Error Code
              = 5 means 'Model contains more than 100 characters.' <br/>

              Error Code = 5 means 'Colour contains invalid data.' <br/> Error
              Code = 5 means 'Colour contains more than 50 characters.' <br/>

              Error Code = 5 means 'EngineSize contains invalid data.' <br/> Error
              Code = 5 means 'EngineSize contains more than 50 characters.' <br/>

              Error Code = 5 means 'FuelType contains invalid data.' <br/> Error
              Code = 5 means 'FuelType contains more than 50 characters.' <br/>

              Error Code = 5 means 'InsuranceCompany contains invalid data.' <br/>
              Error Code = 5 means 'InsuranceCompany contains more than 100
              characters.' <br/>

              Error Code = 5 means 'PolicyNumber contains invalid data.' <br/>
              Error Code = 5 means 'PolicyNumber contains more than 100
              characters.' <br/>

              Error Code = 5 means 'MOTExpiryDate field contains invalid data.'
              <br/>

              Error Code = 5 means 'InsuranceExpiryDate field contains invalid
              data.' <br/> Error Code = 5 means 'InsuranceExpiryDate field cannot
              be empty.' <br/>

              Error Code = 5 means 'Comments contains invalid data.' <br/> Error
              Code = 5 means 'Comments contains more than 256 characters.' <br/>

              Error Code = 5 means 'This Custom column name not exists.' <br/>
              Error Code = 5 means 'Custom column name should not be empty.' <br/>
              Error Code = 5 means 'ColumnName is missing.' <br/> Error Code = 5
              means 'ColumnValue is missing.' <br/> Error Code = 5 means 'Custom
              column name contains invalid data.' <br/> Error Code = 5 means
              'Custom column already added.' <br/> Error Code = 5 means 'Custom
              column does not exists on screen.' <br/> Error Code = 5 means 'One
              or more mandatory fields are missing.' <br/> Error Code = 5 means
              'One or more custom fields are mandatory.' <br/>

              Error Code = 5 means 'Custom column name contains more than 100
              characters.'<br/>

              Error Code = 5 means 'Invalid file type. This file type is not
              supported.' <br/> Error Code = 5 means 'DocumentName cannot be
              empty.' <br/> Error Code = 5 means 'Document Name contains more than
              100 characters.' <br/> Error Code = 5 means 'Document Name is
              missing.' <br/>

              Error Code = 5 means 'File contains invalid data.' <br/> Error Code
              = 5 means 'File is missing.' <br/>

              Error Code = 5 means 'Description contains invalid data.' <br/>
              Error Code = 5 means 'Description contains more than 256
              characters.' <br/>

              Error Code = 5 means 'Document Category is missing.' <br/> Error
              Code = 5 means 'Document Category contains invalid data.' <br/>
              Error Code = 5 means 'Document Category contains more than 100
              characters.' <br/> Error Code = 5 means 'Document Category cannot be
              empty.' <br/>

              Error Code = 5 means 'Signature Required is missing.' <br/> Error
              Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code
              = 5 means 'SignatureRequired Can only Contain True Or False.' <br/>

              Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
              6 means 'No record found.' <br/> Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteVehicleDetail:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'Vehicle record deleted  successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/> Error Code = 5 means 'Vehicle
              Id can not be empty.' <br/> Error Code = 5 means 'Vehicle Id is
              invalid.' <br/> Error Code = 5 means 'Pending authorization request
              exists in system for passed vehicle id.' <br/> Error Code = 6 means
              'No record found.' <br/> Error Code = 7 means 'No json data found.'
              <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
              Error Code = 9 means 'Invalid json data.'<br/>
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetVehicleDetailByVehicleId:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'Vehicle Id can not be empty.' <br/> Error Code
              = 5 means 'Vehicle Id is invalid.' <br/>

              Error Code = 5 means 'Vehicle Id is missing.' <br/>

              Error Code = 7 means 'No json data found.' <br/> Error Code = 8
              means 'Either empty or no Form Data.'<br/> Error Code = 9 means
              'Invalid json data.'<br/> Error Code = 10 means 'No detail has been
              found.' <br/>
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetVehicleDetailByVehicleIdObject'
      ErrorForGetVehicleDetailByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: >-
              Error Code = 0 means 'The request processed successfully.'

              <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
              means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

              Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
              means 'EmployeeId contains more than 15 characters.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
              means 'EmployeeId is missing.' <br/>

              Error Code = 5 means 'No json data found.' <br/> Error Code = 7
              means 'No json data found.' <br/> Error Code = 8 means 'Either empty
              or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/>
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultGetVehicleDetailByEmployeeIdArray'
      ErrorForGetByMaternityPaternityId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means
              'MaternityPaternityTxnId is missing.' <br/>   Error Code = 5 means
              'MaternityPaternityTxnId cannot be empty.' <br/>  Error Code = 5
              means 'MaternityPaternityTxnId contains invalid data.' <br/>  Error
              Code = 5 means 'No access on late schema.' <br/>   Error Code = 7
              means 'No json data found.' <br/> Error Code = 8 means 'Either empty
              or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No detail has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetByMaternityPaternityId'
      ErrorForGetByMaternityPaternityByEmpId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means
              'ActualStartDate field contains invalid data' <br/>  Error Code = 5
              means 'Actual Start Date contains invalid data.' <br/>  Error Code =
              5 means 'ActualEndDate field contains invalid data' <br/> Error Code
              = 5 means 'Actual End Date must be later than or equal to actual
              start date.' <br/> Error Code = 5 means 'Actual End Date contains
              invalid data.' <br/>   Error Code = 5 means 'No access on late
              schema.' <br/>   Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
              has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetByMaternityPaternityId'
      ErrorForAddNewMaternityPaternityApi:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Maternity Paternity record added successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t \nError Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \nError Code = 5 means 'DueDate contains invalid data.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DueDate is missing.' <br/> Error Code = 5 means 'DueDate cannot be empty.' <br/>\nError Code = 5 means 'Actual Start Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual end date must be later than or equal to actual start date .' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual End Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual Start Date must be after employee start date.' <br/> \t\nError Code = 5 means 'There is already has an existing maternity paternity record during the period requested.' <br/> \t\t\t\t  Error Code = 5 means 'Maternity Paternity is too far into the future.' <br/> \t Error Code = 5 means 'comments  contains invalid data.' <br/> Error Code = 5 means 'comments contains more than 1024 characters' <br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/>  Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 5 means 'No access on late schema.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t\t\t\t\t\t  "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Result Value
            allOf:
              - $ref: '#/components/schemas/ResultMaternityPaternityTxnIdObject'
      ResultMaternityPaternityTxnIdObject:
        description: ' Result Array'
        type: object
        properties:
          MaternityPaternityTxnId:
            description: Maternity paternity txn id value
            type: integer
            example: 340
      ErrorForUpdateMaternityPaternityApi:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Maternity Paternity record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t \nError Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \nError Code = 5 means 'DueDate contains invalid data.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DueDate is missing.' <br/> Error Code = 5 means 'DueDate cannot be empty.' <br/>\nError Code = 5 means 'Actual Start Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual end date must be later than or equal to actual start date .' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual End Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual Start Date must be after employee start date.' <br/> \t\nError Code = 5 means 'There is already has an existing maternity paternity record during the period requested.' <br/> \t\t\t\t  Error Code = 5 means 'Maternity Paternity is too far into the future.' <br/> \t Error Code = 5 means 'comments  contains invalid data.' <br/> Error Code = 5 means 'comments contains more than 1024 characters' <br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/>  Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 5 means 'Maternity Paternity TxnId is missing.' <br/> \t\t\t\t\t\t  \t Error Code = 5 means 'MaternityPaternity Id can not be empty.' <br/> \t Error Code = 5 means 'MaternityPaternity Id is invalid.' <br/> \nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 5 means 'No access on late schema.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'No json data found.'<br/>\nError Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t"
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteMaternityPaternity:
        type: object
        properties:
          IsError:
            type: boolean
            enum:
              - 'false'
              - 'true'
            description: isError false means Success And isError true means Error
          status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'Maternity/Paternity detail deleted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \t Error Code = 5 means 'Maternity Paternity TxnId is missing.' <br/>   Error Code = 5 means 'Maternity Paternity Id is invalid.' <br/>  Error Code = 5 means 'MaternityPaternity Id can not be empty.' <br/>  Error Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 6 means 'No record found.'<br/> Error Code = 5 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> "
          Message:
            type: string
            description: Message As Per the Error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetProjectTimesheetDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'StartDate
              contains invalid data.' <br/> Error Code = 5 means 'EndDate contains
              invalid data.' <br/> Error Code = 5 means 'StartDate should be
              before or equal to EndDate' <br/> Error Code = 5 means 'No access on
              Timesheet schema.' <br/> Error Code = 7 means 'No json data found.'
              <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
              Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means
              'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetProjectTimesheetDetail'
      ErrorForGetProjectTimesheetByTransactionId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'TransactionId
              cannot be empty.'<br/> Error Code = 5 means 'TransactionId is
              invalid.' <br/>  Error Code = 5 means 'TransactionId is missing.'
              <br/> Error Code = 5 means 'No access on Timesheet schema.' <br/>
              Error Code = 7 means 'No json data found.' <br/> Error Code = 8
              means 'Either empty or no Form Data.'<br/> Error Code = 9 means
              'Invalid json data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: >-
                  #/components/schemas/ResultGetProjectTimesheetByTransactionIdObject
      ErrorForCreateProjectTimesheet:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'ProjectTimesheet record inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'ProjectTimesheetDate contains invalid data.'<br/> Error Code = 5 means 'ProjectTimesheetDate cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetProject contains invalid data.'<br/> Error Code = 5 means 'TimesheetTask contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetTask contains invalid data.'<br/> Error Code = 5 means 'TimesheetDetail contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetDetail contains invalid data.'<br/> Error Code = 5 means 'TimesheetProject and TimesheetTask are mandatory, if TimesheetDetail is entered.'<br/> Error Code = 5 means 'TimesheetProject is mandatory.'<br/> Error Code = 5 means 'TimesheetTask is mandatory, as TimesheetDetail has been entered.'<br/> Error Code = 5 means 'StartTime cannot be empty.'<br/> Error Code = 5 means 'StartTime contains invalid data.'<br/> Error Code = 5 means 'EndTime cannot be empty.'<br/> Error Code = 5 means 'EndTime contains invalid data.'<br/> Error Code = 5 means 'Timesheet EndTime is mandatory, as StartTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime is mandatory, as EndTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime cannot be later than EndTime.'<br/> Error Code = 5 means 'TotalHours cannot be empty.'<br/> Error Code = 5 means 'TotalHours should be in HH:MM format.'<br/> Error Code = 5 means 'Please ensure TotalHours matches Start and End times.'<br/>\t Error Code = 5 means 'Quantity cannot be empty.'<br/> Error Code = 5 means 'Quantity contains invalid data.'<br/> Error Code = 5 means 'Either of a) StartTime and EndTime  b) TotalHours or c) Quantity is mandatory.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 1024 characters.'<br/> Error Code = 5 means 'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForCreateProjectTimesheet'
      ErrorForUpdateProjectTimesheet:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'ProjectTimesheet record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'TransactionId is missing.'<br/> Error Code = 5 means 'TransactionId is invalid.' <br/>  Error Code = 5 means 'TransactionId cannot be empty.' <br/>  Error Code = 10 means 'No records found.' <br/>  Error Code = 5 means 'TimesheetProject cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetProject contains invalid data.'<br/> Error Code = 5 means 'TimesheetTask contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetTask contains invalid data.'<br/> Error Code = 5 means 'TimesheetDetail contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetDetail contains invalid data.'<br/> Error Code = 5 means 'TimesheetProject and TimesheetTask are mandatory, if TimesheetDetail is entered.'<br/> Error Code = 5 means 'TimesheetProject is mandatory.'<br/> Error Code = 5 means 'TimesheetTask is mandatory, as TimesheetDetail has been entered.'<br/> Error Code = 5 means 'StartTime cannot be empty.'<br/> Error Code = 5 means 'StartTime contains invalid data.'<br/> Error Code = 5 means 'EndTime cannot be empty.'<br/> Error Code = 5 means 'EndTime contains invalid data.'<br/> Error Code = 5 means 'Timesheet EndTime is mandatory, as StartTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime is mandatory, as EndTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime cannot be later than EndTime.'<br/> Error Code = 5 means 'TotalHours cannot be empty.'<br/> Error Code = 5 means 'TotalHours should be in HH:MM format.'<br/> Error Code = 5 means 'Please ensure TotalHours matches Start and End times.'<br/>\t Error Code = 5 means 'Quantity cannot be empty.'<br/> Error Code = 5 means 'Quantity contains invalid data.'<br/> Error Code = 5 means 'Either of a) StartTime and EndTime  b) TotalHours or c) Quantity is mandatory.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 1024 characters.'<br/> Error Code = 5 means 'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteProjectTimesheet:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'ProjectTimesheet record deleted
              successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>
              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              4 means 'Action cannot be empty.' <br/> Error Code = 4 means
              'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be
              empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15
              characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid
              data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'
              <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error
              Code = 5 means 'TransactionId cannot be empty.'<br/> Error Code = 5
              means 'TransactionId is invalid.' <br/>  Error Code = 5 means
              'TransactionId is missing.' <br/> Error Code = 5 means 'No access on
              Timesheet schema.' <br/> Error Code = 7 means 'No json data found.'
              <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
              Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means
              'No records found.' <br/>  
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAllTimesheetProject:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The requested processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error code = 5 means 'Project Name contains more than 100
              characters.'<br/> Error Code = 5 means 'Project Name contains
              invalid data.' <br/>  Error Code = 5 means 'No access on Timesheet
              schema.' <br/> Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
              found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetAllTimesheetProjectObject'
      ErrorForAddNewProject:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Assignment Project added successfully.'<br/>  Error Code = 0 means 'The Project code you have entered matches an existing Project code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Name contains invalid data.'<br/> Error code = 5 means 'Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Name cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'Project Name is Empty.' <br/>  Error Code = 5 means 'Project Name is missing.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5 means 'In Use cannot be empty.'<br/> Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForEditProject:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'Assignment Project updated successfully.'<br/>  Error Code = 0 means 'The Project code you have entered matches an existing Project code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\t  Error Code = 5 means 'Project Name contains invalid data.'<br/> Error code = 5 means 'Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Name cannot be empty.' <br/>  Error Code = 5 means 'The Project Name you have entered not matches an existing Project code.'<br/> Error Code = 5 means 'Project Name is Empty.' <br/>  Error Code = 5 means 'Project Name is missing.' <br/> \t\t\t  Error Code = 5 means 'New Project Name contains invalid data.'<br/> Error code = 5 means 'New Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'New Project Name cannot be empty.' <br/>  Error Code = 5 means 'New Project Name is Empty.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5 means 'In Use cannot be empty.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'Mention atleast one field to Update.'<br/> Error Code = 5 means 'Oops! Something went wrong.'<br/>\t\t\t\t\t\t   Error Code = 5 means 'No access on Timesheet schema.'<br/>\t\t\t\t\t\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAllProjectTask:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 9
            description: "Error Code = 0 means 'The request processed successfully.'<br/>  Error Code = 0 means 'No record found.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Task Name  contains invalid data.'<br/> Error Code = 5 means 'Project Task Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Task Name cannot be empty.'<br/> Error Code = 5 means 'No access on Timesheet schema.'<br/>\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetAllProjectTask'
      ErrorForAddNewProjectTask:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Assignment Project Task added
              successfully.'<br/>  Error Code = 0 means 'The Project Task code you
              have entered matches an existing Project Task code.'<br/> Error Code
              = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does
              not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.'
              <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
              means 'Project Task Name is Empty.'<br/> Error Code = 5 means
              'Project Task Name is missing.'<br/> Error Code = 5 means 'Project
              Task Name  contains invalid data.'<br/> Error Code = 5 means
              'Project Task Name contains more than 100 characters.'<br/> Error
              Code = 5 means 'Project Task Name cannot be empty.'<br/> Error Code
              = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5
              means 'In Use cannot be empty.'<br/> Error Code = 5 means 'No access
              on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something
              went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/>
              Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
              = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
              found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForEditProjectTask:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'Assignment Project Task updated successfully.'<br/>  Error Code = 0 means 'The Project Task code you have entered matches an existing Project Task code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'ProjectTaskName contains invalid data.'<br/> Error code = 5 means 'ProjectTaskName contains more than 100 characters.'<br/> Error Code = 5 means 'ProjectTaskName cannot be empty.' <br/> \t Error Code = 5 means 'The Project Task Name you have entered not matches an existing Project Task code.' <br/> \t Error Code = 5 means 'Project Task Name is Empty.' <br/>  Error Code = 5 means 'Project Task Name is missing.' <br/> \t Error Code = 5 means 'New Project Task Name contains invalid data.'<br/>\t Error code = 5 means 'New Project Task Name contains more than 100 characters.'<br/>\t Error Code = 5 means 'New Project Task Name cannot be empty..' <br/> \t Error Code = 5 means 'New Project Task Name is Empty.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No' <br/>  Error Code = 5 means 'In Use cannot be empty.' <br/>  Error Code = 5 means 'Mention atleast one field to Update.' <br/>  Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>  Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetAllProjectTaskDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: " Error Code = 0 means 'The request processed successfully..'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Task Detail Name contains invalid data.'<br/> Error code = 5 means 'Project Task Detail Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Task Detail Name cannot be empty.' <br/> \t Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No records found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetAllProjectTaskDetail'
      ErrorForAddNewProjectTaskDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Assignment Project Task Detail added
              successfully.'

              <br/> Error Code = 0 means 'The Project Task Detail code you have
              entered matches an existing Project Task Detail code.'<br/> Error
              Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
              5 means 'Project Task Detail Name is Empty.' <br/> Error Code = 5
              means 'Project Task Detail Name is missing.' <br/> Error Code = 5
              means 'Project Task Detail Name contains invalid data.' <br/> Error
              Code = 5 means 'Project Task Detail Name contains more than 100
              characters.' <br/> Error Code = 5 means 'Project Task Detail Name
              cannot be empty.' <br/> Error Code = 5 means 'In Use Can only
              Contain Yes Or No.' <br/> Error Code = 5 means 'In Use cannot be
              empty.' <br/> Error Code = 5 means 'No access on Timesheet schema.'
              <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error
              Code = 7 means 'No json data found.' <br/> Error Code = 8 means
              'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
              json data.'<br/> Error Code = 10 means 'No records found'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForEditProjectTaskDetail:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'Assignment Project Task Detail updated
              successfully.'

              <br/> Error Code = 0 means 'The Project Task Detail code you have
              entered matches an existing Project Task Detail code.'<br/> Error
              Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'API key does not exists.' <br/> Error Code = 5
              means 'Project Task Detail Name contains invalid data.' <br/> Error
              Code = 5 means 'Project Task Detail Name contains more than 100
              characters.' <br/> Error Code = 5 means 'Project Task Detail Name
              cannot be empty.' <br/>  Error Code = 5 means 'The Project Task
              Detail Name you have entered not matches an existing Project Detail
              Task code.' <br/> Error Code = 5 means 'Project Tas Detail Name is
              Empty.' <br/> Error Code = 5 means 'Project Name Task Detail is
              missing.' <br/> Error Code = 5 means 'New Project Task Detail Name
              contains invalid data.' <br/> Error Code = 5 means 'New Project Task
              Detail Name contains more than 100 characters.' <br/> Error Code = 5
              means 'New Project Task Detail Name cannot be empty.' <br/>  Error
              Code = 5 means 'New Project Task Detail Name is Empty.' <br/> Error
              Code = 5 means 'In Use Can only Contain Yes Or No.' <br/> Error Code
              = 5 means 'In Use cannot be empty.' <br/> Error Code = 5 means
              'Mention atleast one field to Update.' <br/> Error Code = 5 means
              'No access on Timesheet schema.' <br/> Error Code = 6 means 'Oops!
              Something went wrong.' <br/> Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No records found'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForGetCPDByEmployeeId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
              found.' <br/> Error Code = 8 means 'Either empty or no Form
              Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
              Code = 10 means 'No detail has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetCPDByEmployeeId'
      ErrorForGetByCPDId:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'The request processed successfully.'<br/> 
              Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
              'API key does not exists.' <br/>  Error Code = 4 means 'Action
              cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
              Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
              5 means 'EmployeeId contains more than 15 characters.'<br/> Error
              Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
              = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is
              missing.' <br/>  Error Code = 5 means 'CPDId cannot be empty.'
              <br/>  Error Code = 5 means 'CPDId is invalid' <br/>  Error Code = 7
              means 'No json data found.' <br/> Error Code = 8 means 'Either empty
              or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No detail has been found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            description: Result value
            allOf:
              - $ref: '#/components/schemas/ResultForGetByCPDIdObject'
      ErrorForAddNewCPD:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'CPD record added successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'Activity cannot be empty.'<br/> Error Code = 5 means 'Activity contains more than 100 characters.'<br/> Error Code = 5 means 'Activity contains invalid data.'<br/> Error Code = 5 means 'Activity is missing.'<br/> Error Code = 5 means 'Start Date field cannot be Empty'<br/> Error Code = 5 means 'Start Date field contains invalid data'<br/> Error Code = 5 means 'Start Date is Cannot be Empty.'<br/> Error Code = 5 means 'Start Date Start Date is Missing.'<br/> Error Code = 5 means 'End Date field contains invalid data'<br/> Error Code = 5 means 'End Date should be greater than StartDate.'<br/> Error Code = 5 means 'RollNumber contains more than 30 characters.'<br/> Error Code = 5 means 'RollNumber contains invalid data.'<br/> Error Code = 5 means 'Date Admitted field cannot be Empty.'<br/> Error Code = 5 means 'Date Admitted field contains invalid data.'<br/> Error Code = 5 means 'HoursRequired Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursRequired.'<br/> Error Code = 5 means 'HoursAccredited Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursAccredited.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column name not exists.'<br/> Error Code = 5 means 'Custom column name should not be empty.'<br/> Error Code = 5 means ' ColumnName is missing.'<br/> Error Code = 5 means 'ColumnName cannot be empty.'<br/> Error Code = 5 means 'Custom column name already addded'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/>\nError Code = 5 means 'ColumnName contains invalid data.'<br/> Error Code = 5 means 'ColumnName field contains invalid data.'<br/> Error Code = 5 means 'ColumnName is mandatory.'<br/> Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Invalid file type.'<br/> Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory Type Category is missing.'<br/> Error Code = 5 means 'DocumentCategory Type cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory Type contains more than 100 characters. '<br/>\t Error Code = 5 means 'DocumentCategory Type contains invalid data.'<br/>\t\t Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForUpdateCPD:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: "Error Code = 0 means 'CPD record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is missing.'<br/> Error Code = 5 means 'valid CPD Id Cannot be Empty'<br/> Error Code = 5 means 'CPD Id is invalid'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed CPD Id.'<br/> Error Code = 5 means 'No record found.'<br/> Error Code = 10 means 'No detail has been found.'<br/> Error Code = 5 means 'Activity cannot be empty.'<br/> Error Code = 5 means 'Activity contains more than 100 characters.'<br/> Error Code = 5 means 'Activity contains invalid data.'<br/> Error Code = 5 means 'Start Date field cannot be Empty'<br/> Error Code = 5 means 'Start Date field contains invalid data'<br/> Error Code = 5 means 'Start Date is Cannot be Empty.'<br/> Error Code = 5 means 'End Date field contains invalid data'<br/> Error Code = 5 means 'End Date should be greater than StartDate.'<br/> Error Code = 5 means 'RollNumber contains more than 30 characters.'<br/> Error Code = 5 means 'RollNumber contains invalid data.'<br/> Error Code = 5 means 'Date Admitted field cannot be Empty.'<br/> Error Code = 5 means 'Date Admitted field contains invalid data.'<br/> Error Code = 5 means 'HoursRequired Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursRequired.'<br/> Error Code = 5 means 'HoursAccredited Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursAccredited.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName cannot be empty.'<br/> Error Code = 5 means 'Column already addded'<br/> Error Code = 5 means 'Column does not exists on screen'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/>\nError Code = 5 means 'ColumnName contains invalid data.'<br/> Error Code = 5 means 'ColumnName field contains invalid data.'<br/> Error Code = 5 means 'ColumnName is mandatory.'<br/> Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'Document Name is missing.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Invalid file type.'<br/> Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory Type Category is missing.'<br/> Error Code = 5 means 'DocumentCategory Type cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory Type contains more than 100 characters. '<br/>\t Error Code = 5 means 'DocumentCategory Type contains invalid data.'<br/>\t\t Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ErrorForDeleteCPD:
        type: object
        properties:
          IsError:
            type: boolean
            description: 'isError = false means success and isError = true means error '
            enum:
              - 'false'
              - 'true'
          Status:
            type: integer
            minimum: 0
            maximum: 10
            description: >-
              Error Code = 0 means 'CPD record deleted successfully.'<br/>  Error
              Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key
              does not exists.' <br/>  Error Code = 4 means 'Action cannot be
              empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
              Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5
              means 'EmployeeId contains more than 15 characters.'<br/> Error Code
              = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
              means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
              'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is
              missing.'<br/> Error Code = 5 means 'valid CPD Id Cannot be
              Empty'<br/> Error Code = 5 means 'CPD Id is invalid'<br/> Error Code
              = 5 means 'Pending authorization request exists in system for passed
              CPD Id.'<br/> Error Code = 5 means 'No record found.'<br/> Error
              Code = 10 means 'No detail has been found.'<br/> Error Code = 7
              means 'No json data found.' <br/> Error Code = 8 means 'Either empty
              or no Form Data.'<br/> Error Code = 9 means 'Invalid json
              data.'<br/> Error Code = 10 means 'No record found.'
          Message:
            type: string
            description: Message show as per error code
          Result:
            type: object
            description: Can be ignored
      ResultForGetCPDByEmployeeId:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            CPDId:
              description: ' CPDId Value'
              type: integer
              example: 147
            Activity:
              description: ' Activity value'
              type: string
              example: Activity name
            StartDate:
              description: ' StartDate value'
              type: string
              format: date
              example: '2017-01-01'
            EndDate:
              description: ' EndDate value'
              type: string
              format: date
              example: '2017-01-01'
            RollNumber:
              description: ' RollNumber value'
              type: string
              example: '11'
            DateAdmitted:
              description: ' DateAdmitted value'
              type: string
              format: date
              example: '2017-01-01'
            HoursRequired:
              description: ' HoursRequired value'
              type: integer
              example: '124'
            HoursAccredited:
              description: ' HoursAccredited value'
              type: integer
              example: '1260'
            Notes:
              description: ' Notes value'
              type: string
              example: Notes goes here
            Customfields:
              description: Customfields for get details
              allOf:
                - $ref: '#/components/schemas/CustomFieldsArrayForGetDetail'
            Files:
              description: Files for get details
              allOf:
                - $ref: '#/components/schemas/FilesArrayForGetDetail'
      ResultForGetByCPDIdObject:
        description: ' Result Array'
        type: object
        properties:
          CPDId:
            description: ' CPDId Value'
            type: integer
            example: 150
          Activity:
            description: ' Activity value'
            type: string
            example: Activity name
          StartDate:
            description: ' StartDate value'
            type: string
            format: date
            example: '2017-01-01'
          EndDate:
            description: ' EndDate value'
            type: string
            format: date
            example: '2017-01-01'
          RollNumber:
            description: ' RollNumber value'
            type: string
            example: '11'
          DateAdmitted:
            description: ' DateAdmitted value'
            type: string
            format: date
            example: '2017-01-01'
          HoursRequired:
            description: ' HoursRequired value'
            type: integer
            example: 1240
          HoursAccredited:
            description: ' HoursAccredited value'
            type: integer
            example: 1260
          Notes:
            description: ' Notes value'
            type: string
            example: Notes goes here
          Customfields:
            description: Customfields for get details
            allOf:
              - $ref: '#/components/schemas/CustomFieldsArrayForGetDetail'
          Files:
            description: Files for get details
            allOf:
              - $ref: '#/components/schemas/FilesArrayForGetDetail'
      CustomFieldsArrayForGetDetail:
        type: array
        required:
          - ColumnName
          - ColumnValue
        items:
          type: object
          properties:
            ColumnName:
              description: ' column name value'
              type: string
              example: Column_Name
            ColumnValue:
              description: ' column value value'
              type: string
              example: '29153'
      FilesArrayForGetDetail:
        type: array
        required:
          - DocumentName
          - File
          - Description
          - DocumentCategory
          - SignatureRequired
        items:
          type: object
          properties:
            DocumentName:
              description: ' DocumentName value'
              type: string
              example: DocumentName.pdf
            Description:
              description: ' Description value'
              type: string
              example: Description goes here
            FileUrl:
              description: ' FileUrl value'
              type: string
              format: url
              example: >-
                http://localhost.net:12345/Handlers/MyDocsViewer.ashx?5fca4525-3df3-4605-aee1-1885463b3334
            Category:
              description: ' category value'
              type: string
              example: Benefit
            SignatureRequired:
              description: ' signature required value'
              type: boolean
              enum:
                - false
                - true
      ResultForCreateProjectTimesheet:
        description: ' Result Array'
        type: object
        properties:
          TransactionId:
            description: TransactionId value
            type: long
            example: 750
      GetProjectTimesheetByTransactionId:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TransactionId
        properties:
          APIKey:
            description: APIKey for employee api to get project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetProjectTimesheetByTransactionId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetProjectTimesheetByTransactionId
          EmployeeId:
            description: Employee id for get project timesheet detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TransactionId:
            description: Transaction id for get project timesheet detail
            allOf:
              - $ref: '#/components/schemas/TransactionId'
      CreateProjectTimesheetParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ProjectTimesheetDate
          - TimesheetProject
          - TimesheetTask
          - TimesheetDetail
          - StartTime
          - EndTime
          - TotalHours
          - Quantity
        properties:
          APIKey:
            description: APIKey for employee api to get project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateProjectTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateProjectTimesheet
          EmployeeId:
            description: Employeeid for create project timesheet
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ProjectTimesheetDate:
            description: ProjectTimesheetDate for create project timesheet
            allOf:
              - $ref: '#/components/schemas/ProjectTimesheetDate'
          TimesheetProject:
            description: TimesheetProject for create project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetProject'
          TimesheetTask:
            description: TimesheetTask for create project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetTask'
          TimesheetDetail:
            description: TimesheetDetail for create project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetDetail'
          StartTime:
            description: StartTime for create project timesheet
            allOf:
              - $ref: '#/components/schemas/StartTime'
          EndTime:
            description: EndTime for create project timesheet
            allOf:
              - $ref: '#/components/schemas/EndTime'
          TotalHours:
            description: TotalHours for create project timesheet
            allOf:
              - $ref: '#/components/schemas/TotalHours'
          Quantity:
            description: Quantity for create project timesheet
            allOf:
              - $ref: '#/components/schemas/Quantity'
          Notes:
            description: Notes for create project timesheet
            allOf:
              - $ref: '#/components/schemas/Notes'
      UpdateProjectTimesheetParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TransactionId
          - TimesheetProject
          - TimesheetTask
          - TimesheetDetail
          - StartTime
          - EndTime
          - TotalHours
          - Quantity
        properties:
          APIKey:
            description: APIKey for employee api to get project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateProjectTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateProjectTimesheet
          EmployeeId:
            description: Employeeid for update project timesheet
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TransactionId:
            description: TransactionId for update project timesheet
            allOf:
              - $ref: '#/components/schemas/TransactionId'
          TimesheetProject:
            description: TimesheetProject for update project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetProject'
          TimesheetTask:
            description: TimesheetTask for update project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetTask'
          TimesheetDetail:
            description: TimesheetDetail for update project timesheet
            allOf:
              - $ref: '#/components/schemas/TimesheetDetail'
          StartTime:
            description: StartTime for update project timesheet
            allOf:
              - $ref: '#/components/schemas/StartTime'
          EndTime:
            description: EndTime for update project timesheet
            allOf:
              - $ref: '#/components/schemas/EndTime'
          TotalHours:
            description: TotalHours for update project timesheet
            allOf:
              - $ref: '#/components/schemas/TotalHours'
          Quantity:
            description: Quantity for update project timesheet
            allOf:
              - $ref: '#/components/schemas/Quantity'
          Notes:
            description: Notes for update project timesheet
            allOf:
              - $ref: '#/components/schemas/Notes'
      DeleteProjectTimesheetParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TransactionId
        properties:
          APIKey:
            description: APIKey for employee api to get project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteProjectTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteProjectTimesheet
          EmployeeId:
            description: Employee id for delete project timesheet detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TransactionId:
            description: Transaction id for delete project timesheet detail
            allOf:
              - $ref: '#/components/schemas/TransactionId'
      GetAllTimesheetProjectParameter:
        type: object
        required:
          - APIKey
          - Action
        properties:
          APIKey:
            description: APIKey for employee api to get all project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllTimesheetProject
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllTimesheetProject
          ProjectName:
            description: Project name for get all timesheet project detail
            allOf:
              - $ref: '#/components/schemas/ProjectName'
      AddNewProjectParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectName
          - InUse
        properties:
          APIKey:
            description: APIKey for employee api to add new project
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewProject
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewProject
          ProjectName:
            description: ProjectName for add new project
            allOf:
              - $ref: '#/components/schemas/ProjectName'
          InUse:
            description: InUse for add new project
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      EditProjectParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectName
          - NewProjectName
          - InUse
        properties:
          APIKey:
            description: APIKey for employee api to edit project
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = EditProject
            allOf:
              - $ref: '#/components/schemas/Action'
            example: EditProject
          ProjectName:
            description: ProjectName for edit project
            allOf:
              - $ref: '#/components/schemas/ProjectName'
          NewProjectName:
            description: NewProjectName for edit project
            allOf:
              - $ref: '#/components/schemas/NewProjectName'
          InUse:
            description: InUse for edit project
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      GetAllProjectTaskParameter:
        type: object
        required:
          - APIKey
          - Action
        properties:
          APIKey:
            description: APIKey for employee api to get all project task
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllProjectTask
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllProjectTask
          ProjectTaskName:
            description: Task Name to get all Project task
            allOf:
              - $ref: '#/components/schemas/ProjectTaskName'
      AddNewProjectTaskParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectTaskName
          - InUse
        properties:
          APIKey:
            description: APIKey for employee api to add new project task
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewProjectTask
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewProjectTask
          ProjectTaskName:
            description: Task Name for new project task detail
            allOf:
              - $ref: '#/components/schemas/ProjectTaskName'
          InUse:
            description: InUse for new project task detail
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      EditProjectTaskParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectTaskName
          - New_ProjectTaskName
          - InUse
        properties:
          APIKey:
            description: >-
              APIKey for employee Project timesheet api to edit project task
              detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = EditProjectTask
            allOf:
              - $ref: '#/components/schemas/Action'
            example: EditProjectTask
          ProjectTaskName:
            description: Project Task Name for edit project task detail
            allOf:
              - $ref: '#/components/schemas/ProjectTaskName'
          New_ProjectTaskName:
            description: New_ProjectTaskName for edit project task detail
            allOf:
              - $ref: '#/components/schemas/New_ProjectTaskName'
          InUse:
            description: InUse for edit project task detail
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      GetAllProjectTaskDetailParameter:
        type: object
        required:
          - APIKey
          - Action
        properties:
          APIKey:
            description: >-
              APIKey for employee Project timesheet api to get all project task
              detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllProjectTaskDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllProjectTaskDetail
          ProjectTaskDetailName:
            description: 'Project task name for get all project task detail  '
            allOf:
              - $ref: '#/components/schemas/ProjectTaskDetailName'
      AddNewProjectTaskDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectTaskDetailName
          - InUse
        properties:
          APIKey:
            description: APIKey for employee api to add new project task detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewProjectTaskDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewProjectTaskDetail
          ProjectTaskDetailName:
            description: Project task detail name for add new project task detail
            allOf:
              - $ref: '#/components/schemas/ProjectTaskDetailName'
          InUse:
            description: In use for add new project task detail
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      EditProjectTaskDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - ProjectTaskDetailName
          - New_ProjectTaskDetailName
          - InUse
        properties:
          APIKey:
            description: APIKey for employee api to edit project task detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = EditProjectTaskDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: EditProjectTaskDetail
          ProjectTaskDetailName:
            description: Project task detail name for edit project task detail
            allOf:
              - $ref: '#/components/schemas/ProjectTaskDetailName'
          New_ProjectTaskDetailName:
            description: New Project task detail name for edit project task detail
            allOf:
              - $ref: '#/components/schemas/New_ProjectTaskDetailName'
          InUse:
            description: InUse for edit project task detail
            allOf:
              - $ref: '#/components/schemas/InUse'
            enum:
              - 'Yes'
              - 'No'
      ResultGetProjectTimesheetByTransactionIdObject:
        description: ' Result Array'
        type: object
        properties:
          TransactionId:
            description: ' TransactionId Value'
            type: string
            example: '496'
          ProjectTimesheetDate:
            description: ' ProjectTimesheetDate value'
            type: string
            format: date
            example: '2014-07-04'
          TimesheetProject:
            description: ' TimesheetProject value'
            type: string
            example: ProjectABC
          TimesheetTask:
            description: ' TimesheetTask value'
            type: string
            example: Tasks goes here
          TimesheetDetail:
            description: ' TimesheetDetail value'
            type: string
            example: Detail
          StartTime:
            description: ' StartTime value'
            type: string
            format: timespan
            example: '05:00'
          EndTime:
            description: ' EndTime value'
            type: string
            format: timespan
            example: '09:00'
          TotalHours:
            description: ' TotalHours value'
            type: string
            format: timespan
            example: '04:00'
          Quantity:
            description: ' Quantity value'
            type: integer
            format: double
            example: '565.00'
          Notes:
            description: ' Notes value'
            type: string
            example: Notes goes here
      ResultForGetProjectTimesheetDetail:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            TransactionId:
              description: ' TransactionId Value'
              type: string
              example: '561'
            ProjectTimesheetDate:
              description: ' ProjectTimesheetDate value'
              type: string
              format: date
              example: '2014-11-03'
            TimesheetProject:
              description: ' TimesheetProject value'
              type: string
              example: Project
            TimesheetTask:
              description: ' TimesheetTask value'
              type: string
              example: Task
            TimesheetDetail:
              description: ' TimesheetDetail value'
              type: string
              example: Detail
            StartTime:
              description: ' StartTime value'
              type: string
              format: timespan
              example: '05:00'
            EndTime:
              description: ' EndTime value'
              type: string
              format: timespan
              example: '09:00'
            TotalHours:
              description: ' TotalHours value'
              type: string
              format: timespan
              example: '04:00'
            Quantity:
              description: ' Quantity value'
              type: integer
              format: double
              example: '0.00'
            Notes:
              description: ' Notes value'
              type: string
              example: Notes show here..
            ChangedDate:
              description: ' ChangedDate value'
              type: string
              format: date
              example: '2014-11-03'
      ResultForGetAllTimesheetProjectObject:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            ProjectId:
              description: ' ProjectId Value'
              type: integer
              example: 80946
            ProjectName:
              description: ' ProjectName value'
              type: string
              example: Test API Project los
            Status:
              description: ' Status value'
              type: boolean
              example: true
              enum:
                - 'false'
                - 'true'
            CompanyName:
              description: ' CompanyName value'
              type: string
              example: Location, REPORT TO
            LocationName:
              description: ' LocationName value'
              type: string
              example: Head Office, Mumbai, Location
            DepartmentName:
              description: ' DepartmentName value'
              type: string
              example: Administration, Finance, Human Service
            EmploymentType:
              description: ' EmploymentType value'
              type: string
              example: All
            SpecificEmployee:
              description: ' SpecificEmployee value'
              type: string
              example: Na
            JobRoleType:
              description: ' JobRoleType value'
              type: string
              example: Accountant, Administrator, CEO
      ResultForGetAllProjectTask:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            ProjectTaskId:
              description: ' ProjectTaskId Value'
              type: integer
              example: 80980
            ProjectTaskName:
              description: ' ProjectTaskName value'
              type: string
              example: ProjectTaskName name
            Status:
              description: Status value
              type: boolean
              example: true
              enum:
                - 'false'
                - 'true'
            ProjectName:
              description: ' ProjectName value'
              type: string
              example: ProjectName goes here
      ResultForGetAllProjectTaskDetail:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            ProjectTaskDetailId:
              description: ' ProjectTaskDetailId Value'
              type: integer
              example: 80961
            ProjectTaskDetailName:
              description: ' ProjectTaskDetailName value'
              type: string
              example: Task details goes here
            Status:
              description: ' Status value'
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: false
            ProjectTaskName:
              description: ' ProjectTaskName value'
              type: string
              example: All
      ResultForGetByMaternityPaternityId:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            MaternityPaternityTxnId:
              description: ' CPDId Value'
              type: integer
              example: 339
            ExpectedDate:
              description: ' ExpectedDate value'
              type: string
              format: date
              example: '2017-05-20'
            DueWeekStartDate:
              description: ' DueWeekStartDate value'
              type: string
              format: date
              example: '2017-05-14'
            DueWeekEndDate:
              description: ' DueWeekEndDate value'
              type: string
              format: date
              example: '2017-05-20'
            EarliestStartDate:
              description: ' EarliestStartDate value'
              type: string
              format: date
              example: '2017-02-26'
            ContinousWeeksService:
              description: ' ContinousWeeksService value'
              type: string
              format: decimal
              example: '10.22'
            OrdinaryLeaveStartDate:
              description: ' OrdinaryLeaveStartDate value'
              type: string
              format: date
              example: '2017-05-14'
            OrdinaryLeaveEndDate:
              description: ' OrdinaryLeaveEndDate value'
              type: string
              format: date
              example: '2017-11-12'
            AdditionalLeaveStartDate:
              description: ' AdditionalLeaveStartDate value'
              type: string
              format: date
              example: '2017-11-13'
            AdditionalLeaveEndDate:
              description: ' AdditionalLeaveEndDate value'
              type: string
              format: date
              example: '2018-05-14'
            ActualStartDate:
              description: ' ActualStartDate value'
              type: string
              format: date
              example: '2017-05-20'
            ActualEndDate:
              description: ' ActualEndDate value'
              type: string
              format: date
              example: '2017-05-21'
            Comments:
              description: Comments for get details
              allOf:
                - $ref: '#/components/schemas/CommentssArrayForGetDetail'
            Files:
              description: Files for get details
              allOf:
                - $ref: '#/components/schemas/FilesArrayForMaternityPaternity'
            ReferenceId:
              description: ReferenceId value
              type: string
              example: '1'
      CommentssArrayForGetDetail:
        type: array
        items:
          type: object
          properties:
            CommentId:
              description: ' CommentId value'
              type: integer
              example: 200
            Comments:
              description: ' comments value'
              type: string
              example: comments here
            PostedBy:
              description: ' PostedBy value'
              type: string
              example: John Miller
      FilesArrayForMaternityPaternity:
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: ' DocumentName value'
              type: string
              example: DocumentName.pdf
            Url:
              description: ' FileUrl value'
              type: string
              format: url
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?395685e4-3114-4ad4-a84d-87d04064e67a
            Comments:
              description: ' comments value'
              type: string
              example: Comments..
      ResultGetVehicleDetailByEmployeeIdArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            VehicleId:
              description: Vehicle Id Value
              allOf:
                - $ref: '#/components/schemas/VehicleId'
            Registration:
              description: Registration Value
              allOf:
                - $ref: '#/components/schemas/Registration'
            Make:
              description: Make Value
              allOf:
                - $ref: '#/components/schemas/Make'
            Model:
              description: Model Value
              allOf:
                - $ref: '#/components/schemas/Model'
            Color:
              description: Color Value
              allOf:
                - $ref: '#/components/schemas/Colour'
            EngineSize:
              description: EngineSize Value
              allOf:
                - $ref: '#/components/schemas/EngineSize'
            FuelType:
              description: FuelType Value
              allOf:
                - $ref: '#/components/schemas/FuelType'
            InsuranceCompany:
              description: InsuranceCompany Value
              allOf:
                - $ref: '#/components/schemas/InsuranceCompany'
            PolicyNumber:
              description: PolicyNumber Value
              allOf:
                - $ref: '#/components/schemas/PolicyNumber'
            MOTExpiryDate:
              description: MOTExpiryDate Value
              allOf:
                - $ref: '#/components/schemas/MOTExpiryDate'
            InsuranceExpiryDate:
              description: InsuranceExpiryDate Value
              allOf:
                - $ref: '#/components/schemas/InsuranceExpiryDate'
            Comments:
              description: Comments Value
              allOf:
                - $ref: '#/components/schemas/Comments'
            CustomColumns:
              description: CustomColumns to get vehicle detail
              allOf:
                - $ref: '#/components/schemas/CustomColumnsForGetVehicleByIdArray'
            AddFiles:
              description: AddFiles to get vehicle detail
              allOf:
                - $ref: '#/components/schemas/AddFilesForGetVehicleByIdArray'
      ResultGetVehicleDetailByVehicleIdObject:
        description: ' Result Array'
        type: object
        properties:
          VehicleId:
            description: Vehicle Id Value
            allOf:
              - $ref: '#/components/schemas/VehicleId'
          Registration:
            description: Registration Value
            allOf:
              - $ref: '#/components/schemas/Registration'
          Make:
            description: Make Value
            allOf:
              - $ref: '#/components/schemas/Make'
          Model:
            description: Model Value
            allOf:
              - $ref: '#/components/schemas/Model'
          Color:
            description: Color Value
            allOf:
              - $ref: '#/components/schemas/Colour'
          EngineSize:
            description: EngineSize Value
            allOf:
              - $ref: '#/components/schemas/EngineSize'
          FuelType:
            description: FuelType Value
            allOf:
              - $ref: '#/components/schemas/FuelType'
          InsuranceCompany:
            description: InsuranceCompany Value
            allOf:
              - $ref: '#/components/schemas/InsuranceCompany'
          PolicyNumber:
            description: PolicyNumber Value
            allOf:
              - $ref: '#/components/schemas/PolicyNumber'
          MOTExpiryDate:
            description: MOTExpiryDate Value
            allOf:
              - $ref: '#/components/schemas/MOTExpiryDate'
          InsuranceExpiryDate:
            description: InsuranceExpiryDate Value
            allOf:
              - $ref: '#/components/schemas/InsuranceExpiryDate'
          Comments:
            description: Comments Value
            allOf:
              - $ref: '#/components/schemas/Comments'
          CustomColumns:
            description: CustomColumns to get vehicle detail
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForGetVehicleByIdArray'
          AddFiles:
            description: AddFiles to get vehicle detail
            allOf:
              - $ref: '#/components/schemas/AddFilesForGetVehicleByIdArray'
      CustomColumnsForGetVehicleByIdArray:
        description: ' CustomColumns Result Array'
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: Column name
              type: string
              example: Vehicle 1
            ColumnValue:
              description: Column value
              type: string
              example: ABC
      AddFilesForGetVehicleByIdArray:
        description: AddFiles Result Array
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: Document name value
              type: string
              example: my.txt
            FileUrl:
              description: FileUrl value
              type: string
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
            Descriptions:
              description: Descriptions value
              type: string
              example: Descriptions goes here
            Category:
              description: category value
              type: string
              example: Custom Catagory
            SignatureRequired:
              description: Signature required value
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      AddNewQualificationParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Qualification
        properties:
          APIKey:
            description: APIKey for add new qualification
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewQualification
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewQualification
          EmployeeId:
            description: Employee id for add new qualification
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Qualification:
            description: Qualification for add new qualification
            allOf:
              - $ref: '#/components/schemas/Qualification'
          Subject:
            description: Subject for add new qualification
            allOf:
              - $ref: '#/components/schemas/Subject'
          DatePassed:
            description: Date passed for add new qualification
            allOf:
              - $ref: '#/components/schemas/DatePassed'
          ExpiryDate:
            description: Expiry date for add new qualification
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Comments:
            description: Comments for add new qualification
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: CustomColumns for add new qualification
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeQualification'
          AddFiles:
            description: AddFiles for add new qualification
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeQualification'
      UpdateQualificationParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - QualificationId
          - Qualification
        properties:
          APIKey:
            description: APIKey for update qualification
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateQualification
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateQualification
          EmployeeId:
            description: Employee id for update qualification
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          QualificationId:
            description: Qualification Id for update qualification
            allOf:
              - $ref: '#/components/schemas/QualificationId'
          Qualification:
            description: Qualification for update qualification
            allOf:
              - $ref: '#/components/schemas/Qualification'
          Subject:
            description: Subject for update qualification
            allOf:
              - $ref: '#/components/schemas/Subject'
          DatePassed:
            description: Date passed for update qualification
            allOf:
              - $ref: '#/components/schemas/DatePassed'
          ExpiryDate:
            description: Expiry date for update qualification
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Comments:
            description: Comments for update qualification
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: Custom columns
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeQualification'
          AddFiles:
            description: Add files
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeQualification'
      DeleteQualificationParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - QualificationId
        properties:
          APIKey:
            description: APIKey for delete qualification
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteQualification
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteQualification
          EmployeeId:
            description: Employee id for delete qualification
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          QualificationId:
            description: QualificationId for delete qualification
            allOf:
              - $ref: '#/components/schemas/QualificationId'
      DeleteTrainingDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TrainingId
        properties:
          APIKey:
            description: APIKey for delete training detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = deletetrainingdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: deletetrainingdetail
          EmployeeId:
            description: Employee id for delete training detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TrainingId:
            description: Training Id for delete training detail
            allOf:
              - $ref: '#/components/schemas/TrainingId'
      ResultForGetQualificationByQualificationIdObject:
        description: The Result For Get Qualification By QualificationId Result Array
        type: object
        properties:
          QualificationId:
            description: QualificationId Value
            type: integer
            example: 1
          Qualification:
            description: Qualification Value
            type: string
            example: MSC
          Subject:
            description: Subject Value
            type: string
            example: Computer science
          DatePassed:
            description: DatePassed Value
            type: string
            format: date
            example: '2017-05-01'
          ExpiryDate:
            description: ExpiryDate Value
            type: string
            format: date
            example: '2018-07-07'
          Comments:
            description: Comments Value
            type: string
            example: Comments goes here
          Customfields:
            description: Custom fields array
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForGetEmployeeQualification'
          Files:
            description: Files array
            allOf:
              - $ref: '#/components/schemas/AddFilesForGetEmployeeQualification'
      ResultForGetQualificationByEmployeeId:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            QualificationId:
              description: QualificationId value
              type: integer
              example: 1
            Qualification:
              description: Qualification value
              type: string
              example: MSC
            Subject:
              description: Subject value
              type: string
              example: Computer science
            DatePassed:
              description: DatePassed value
              type: string
              format: date
              example: '2017-05-01'
            ExpiryDate:
              description: ExpiryDate value
              type: string
              format: date
              example: '2018-07-07'
            Comments:
              description: Comments value
              type: string
              example: Comments goes here
            Customfields:
              description: Customfields array
              allOf:
                - $ref: '#/components/schemas/CustomColumnsForGetEmployeeQualification'
            Files:
              description: Files array
              allOf:
                - $ref: '#/components/schemas/AddFilesForGetEmployeeQualification'
      ResultForGetDrivingLicenseByEmployeeId:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            DrivingId:
              description: DrivingId value
              type: integer
              example: 2
            LicenseNumber:
              description: LicenseNumber value
              type: string
              example: Li555
            LicenseType:
              description: LicenseType value
              type: string
              example: 2 wheeler
            ExpiryDate:
              description: ExpiryDate value
              type: string
              format: date
              example: '2018-07-07'
            Comments:
              description: Comments value
              type: string
              example: Comments goes here
            Customfields:
              description: Custom fields array
              allOf:
                - $ref: '#/components/schemas/CustomColumnsForGetEmployeeDriving'
            Files:
              description: Files array
              allOf:
                - $ref: '#/components/schemas/AddFilesForGetEmployeeDriving'
      ResultForGetDrivingLicenseByDrivingIdObject:
        description: ' Result Array'
        type: object
        properties:
          DrivingId:
            description: DrivingId value
            type: integer
            example: 2
          LicenseNumber:
            description: LicenseNumber value
            type: string
            example: Li555
          LicenseType:
            description: LicenseType value
            type: string
            example: 2 wheeler
          ExpiryDate:
            description: ExpiryDate value
            type: string
            format: date
            example: '2018-07-07'
          Comments:
            description: Comments value
            type: string
            example: Comments goes here
          Customfields:
            description: Customfields array
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForGetEmployeeDriving'
          Files:
            description: Files array
            allOf:
              - $ref: '#/components/schemas/AddFilesForGetEmployeeDriving'
      CustomColumnsForEmployeeQualification:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName for employee qualification
              type: string
              maxLength: 100
              example: Vehicle 1
            ColumnValue:
              description: ColumnValue for employee qualification
              type: string
              example: ABC
      AddFilesForEmployeeQualification:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName for employee qualification
              type: string
              maxLength: 100
              example: my.txt
            File:
              description: File for employee qualification
              type: string
              example: Base 64 code
            Descriptions:
              description: Descriptions for employee qualification
              type: string
              maxLength: 256
              example: Descriptions goes here
            DocumentCategory:
              description: DocumentCategory for employee qualification
              type: string
              maxLength: 100
              example: Custom Catagory
            SignatureRequired:
              description: SignatureRequired for employee qualification
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: 'False'
      ResultForGetTrainingDetail:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            TrainingId:
              description: TrainingId Value
              type: integer
              example: 565
            TrainingType:
              description: Training type Value
              type: string
              example: Java
            Description:
              description: Description Value
              type: string
              example: Opps Concepts
            Importance:
              description: Importance Value
              type: integer
              example: 1
            Status:
              description: Status Value
              type: integer
              example: 2
            PercentComplete:
              description: Percent complete Value
              type: integer
              format: decimal
              example: 0.01
            TrainingDate:
              description: Training date Value
              type: string
              format: date
              example: '2017-10-10'
            TrainingEndDate:
              description: TrainingEndDate Value
              type: string
              format: date
              example: '2015-10-11'
            TrainingExpiryDate:
              description: TrainingExpiryDate Value
              type: string
              format: date
              example: '2015-10-12'
            Provider:
              description: Provider Value
              type: string
              example: John
            Cost:
              description: Cost Value
              type: string
              format: decimal
              example: 0.01
            Note:
              description: Note Value
              type: string
              example: Note goes here
            CustomColumns:
              description: CustomColumns Value
              allOf:
                - $ref: '#/components/schemas/CustomColumnsForGetTrainingDetail'
      ResultGetByAppraisalIdObject:
        description: ' Result Array'
        type: object
        properties:
          AppraisalId:
            description: ' appraisal id value'
            type: number
            format: integer
            example: 383
          AppraisalReviewDate:
            description: ' appraisal review date value'
            type: string
            format: date
            example: '2017-05-01'
          Reviewer:
            description: ' Reviewer value'
            type: string
            example: Krushna Bapat
          Note:
            description: note value
            type: string
            example: Notes goes here
          ActionPlan:
            description: ' action plan value'
            type: string
            example: '11'
          Objectives:
            description: ' Objectives value'
            type: string
            example: '121'
          Customfields:
            description: ' Custom fields value'
            allOf:
              - $ref: '#/components/schemas/ArrayForGetByAppraisalIdArray'
          Files:
            description: ' Files '
            allOf:
              - $ref: '#/components/schemas/ArrayForGetAppraisalByIdFile'
      GetEmployeeByIdArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            AppraisalId:
              description: ' appraisal id value'
              type: number
              format: integer
              example: 355
            AppraisalReviewDate:
              description: ' appraisal review date value'
              type: string
              format: date
              example: '2017-05-01'
            Reviewer:
              description: ' Reviewer value'
              type: string
              example: Notification 1 Admin
            Note:
              description: Note value
              type: string
              example: Notes goes here
            ActionPlan:
              description: Action plan value
              type: string
              example: '11'
            Objectives:
              description: ' Objectives value'
              type: string
              example: '121'
            Customfields:
              description: ' Custom fields value'
              allOf:
                - $ref: '#/components/schemas/ArrayForGetByAppraisalIdArray'
            Files:
              description: Files
              allOf:
                - $ref: '#/components/schemas/ArrayForGetAppraisalByIdFile'
      ArrayForGetByAppraisalIdArray:
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: MNO
            ColumnValue:
              description: Column Value
              type: string
              example: file
      ArrayForGetAppraisalByIdFile:
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: filelode.pdf
            Description:
              description: Description value
              type: string
              example: dsddsds
            FileUrl:
              description: FileUrl value
              type: string
              format: url
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?bf26a772-3891-449e-b8f6-a06248b455b3
            Category:
              description: Category value
              type: string
              example: catagory
            SignatureRequired:
              description: SignatureRequired value
              type: string
              enum:
                - 'false'
                - 'true'
              example: 'false'
      ResultCreateNewApplicant:
        type: object
        properties:
          IsDuplicate:
            type: boolean
            description: 'Is duplicate value '
            example: 'true'
            enum:
              - 'false'
              - 'true'
          ApplicantId:
            type: integer
            description: 'ApplicantId value '
            example: 4
      ResultCheckDuplicateApplicant:
        type: object
        properties:
          IsDuplicate:
            type: boolean
            description: 'IsDuplicate value '
            example: 'true'
            enum:
              - 'false'
              - 'true'
      ResultWorkPatternApplicant:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            WorkPatternId:
              type: integer
              description: Work pattern id value
              example: 2
            WorkPatternName:
              type: string
              description: Work pattern name value
              example: Monday to Friday 9am to 5.30pm (37.5 Hrs)
            Week:
              description: Array of Week
              allOf:
                - $ref: '#/components/schemas/WeekArrayForWorkPattern'
            AssignedTo:
              description: Array of assignee to
              allOf:
                - $ref: '#/components/schemas/AssignedToArrayForWorkPattern'
      AssignedToArrayForWorkPattern:
        type: array
        description: Result array
        items:
          type: object
          properties:
            EmployeeId:
              type: string
              description: Employee Id value
              example: PW66
            FirstName:
              type: string
              description: First name  value
              example: Vaibhavi
            LastName:
              type: string
              description: Last name value
              example: Desai
      WeekArrayForWorkPattern:
        type: array
        description: Result array
        items:
          type: object
          properties:
            WeekNumber:
              type: integer
              description: Week number value
              example: 2
            WeekDetail:
              description: Array For Work Detail
              allOf:
                - $ref: '#/components/schemas/WeekDetailArrayForWorkPattern'
      WeekDetailArrayForWorkPattern:
        type: array
        description: Result array
        items:
          type: object
          properties:
            WeekNumber:
              type: integer
              description: Week number value
              example: 2
            WorkPatternDay:
              type: string
              description: Week detail contains array For work pattren
              example: Monday
              enum:
                - Monday
                - Tuesday
                - Wednesday
                - Thursday
                - Friday
                - Saturday
                - Sunday
            TotalWorkingDays:
              type: double
              description: Total working days value
              example: 1.00"
            TotalWorkingMins:
              type: integer
              description: Total working days value
              example: '450'
            ShiftStartTime:
              type: string
              description: Shift start time value
              example: '9.30'
            ShiftEndTime:
              type: string
              description: Shift end time value
              example: '6.30'
            BreakTime:
              type: string
              description: ' break time value'
              example: 1.30pm
      ResultGetLateByEmployeeId:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            EmployeeId:
              type: integer
              description: 'Employee id value '
              example: 22957
            LateDate:
              type: string
              format: date
              description: 'Late Date value '
              example: '2017-07-18'
            LateMinutes:
              type: integer
              description: 'Late minutes value '
              example: 10
            Comments:
              type: string
              description: 'Comments  value '
              example: Comments goes here
      ResultGetVacancyObject:
        description: ' Result Array'
        type: object
        properties:
          VacancyName:
            description: Vacancy name value
            type: string
            example: IT Programmer
          VacancyDescription:
            description: Vacancy description value
            type: string
            example: IT Programmer
          Company:
            description: Company name value
            type: string
            example: Company name
          Location:
            description: Location value
            type: string
            example: Mumbai
          Department:
            description: Department value
            type: string
            example: IT
          Status:
            description: Status value
            type: integer
            example: 2
          ClosingDate:
            description: Closing date value
            type: string
            format: date
            example: '2016-07-31'
          Reference:
            description: Reference value
            type: string
            example: VA4
          SalaryRange:
            description: Salary range value
            type: string
            example: '10000'
          JobDescription:
            description: Job description value
            type: string
            example: Job Description
          IsHideSalary:
            description: IsHideSalary value
            type: boolean
            example: false
            enum:
              - 'false'
              - 'true'
          JobTitle:
            description: Job title value
            type: string
            example: Software Engineer
          VacancyType:
            description: Vacancy type value
            type: string
            example: Internal
            enum:
              - External
              - Internal
              - Both
          City:
            description: City value
            type: string
            example: Mumbai
          Country:
            description: Country value
            type: string
            example: India
          Experience:
            description: Experience value
            type: string
            example: 4 Year
          JobBordUrl:
            description: JobBordUrl value
            type: string
            format: url
            example: >-
              http://itgpeoplehr.localhost.net:12345/Pages/JobBoard/Opening.aspx?v=b3df0ea6-69ec-458e-a045-a85c92de6514
          AdditionalQuestions:
            description: Additional questions array list
            allOf:
              - $ref: '#/components/schemas/ResultAdditionalQuestionsArrayobject'
          InternalQuestions:
            description: Internal questions array list
            allOf:
              - $ref: '#/components/schemas/ResultInternalQuestionsArrayobject'
      ResultGetAllVacancyObject:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            VacancyName:
              description: Vacancy name value
              type: string
              example: IT Programmer
            VacancyDescription:
              description: Vacancy description value
              type: string
              example: IT Programmer
            Company:
              description: Company name value
              type: string
              example: Company name
            Location:
              description: Location value
              type: string
              example: Mumbai
            Department:
              description: Department value
              type: string
              example: IT
            Status:
              description: Status value
              type: integer
              example: 2
            ClosingDate:
              description: Closing date value
              type: string
              format: date
              example: '2016-07-31'
            Reference:
              description: Reference value
              type: string
              example: VA4
            SalaryRange:
              description: Salary range value
              type: string
              example: '10000'
            JobDescription:
              description: Job description value
              type: string
              example: Job Description
            IsHideSalary:
              description: IsHideSalary value
              type: boolean
              example: false
              enum:
                - 'false'
                - 'true'
            JobTitle:
              description: Job title value
              type: string
              example: Software Engineer
            VacancyType:
              description: Vacancy type value
              type: string
              example: Internal
              enum:
                - External
                - Internal
                - Both
            City:
              description: City value
              type: string
              example: Mumbai
            Country:
              description: Country value
              type: string
              example: India
            Experience:
              description: Experience value
              type: string
              example: 4 Year
            JobBordUrl:
              description: JobBordUrl value
              type: string
              format: url
              example: >-
                http://itgpeoplehr.localhost.net:12345/Pages/JobBoard/Opening.aspx?v=b3df0ea6-69ec-458e-a045-a85c92de6514
            AdditionalQuestions:
              description: Additional questions array list
              allOf:
                - $ref: '#/components/schemas/ResultAdditionalQuestionsArrayobject'
            InternalQuestions:
              description: Internal questions array list
              allOf:
                - $ref: '#/components/schemas/ResultInternalQuestionsArrayobject'
      ResultInternalQuestionsArrayobject:
        type: array
        items:
          type: object
          properties:
            QuestionId:
              type: byte
              description: 'Question id value '
              example: '2'
            QuestionType:
              type: byte
              description: 'Question type value '
              example: '1'
            IsMandatory:
              type: boolean
              description: 'Is mandatory type value '
              example: 'true'
              enum:
                - 'true'
                - 'false'
            Question:
              type: string
              description: 'Question type value '
              example: Please indicate your gender
            AdditionalOrInternalType:
              type: integer
              description: 'Additional or internal type value '
              example: '1'
            QuestionOptions:
              description: Question options list value
              allOf:
                - $ref: '#/components/schemas/ResultlstInternalQuestions'
      ResultlstInternalQuestions:
        description: Question options list
        type: array
        items:
          type: object
          properties:
            QuestionOptions:
              type: string
              description: QuestionOptions value
      Result1GetTimesheetArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            TimesheetDate:
              type: string
              format: date
              description: 'timesheetDate default value '
              example: '2014-01-01'
            TimeIn1:
              type: string
              format: timespan
              description: 'TimeIn1 value '
              example: '09:35'
            TimeOut1:
              type: string
              format: timespan
              description: 'TimeOut1 value '
              example: '04:00'
            TimeIn2:
              type: string
              format: timespan
              description: 'TimeIn2 value '
              example: '09:45'
            TimeOut2:
              type: string
              format: timespan
              description: 'TimeOut2 value '
              example: '04:00'
            TimeIn3:
              type: string
              format: timespan
              description: 'TimeIn3 value '
              example: '09:45'
            TimeOut3:
              type: string
              format: timespan
              description: 'TimeOut3 value '
              example: '04:00'
            TimeIn4:
              type: string
              format: timespan
              description: 'TimeIn4 value '
              example: '09:45'
            TimeOut4:
              type: string
              format: timespan
              description: 'TimeOut4 value '
              example: '04:00'
            TimeIn5:
              type: string
              format: timespan
              description: 'TimeIn5 value '
              example: '09:45'
            TimeOut5:
              type: string
              format: timespan
              description: 'TimeOut5 value '
              example: '04:00'
            TimeIn6:
              type: string
              format: timespan
              description: 'TimeIn6 value '
              example: '09:45'
            TimeOut6:
              type: string
              format: timespan
              description: 'TimeOut6 value '
              example: '04:00'
            TimeIn7:
              type: string
              format: timespan
              description: 'TimeIn7 value '
              example: '09:45'
            TimeOut7:
              type: string
              format: timespan
              description: 'TimeOut7 value '
              example: '04:00'
            TimeIn8:
              type: string
              format: timespan
              description: 'TimeIn8 value '
              example: '09:45'
            TimeOut8:
              type: string
              format: timespan
              description: 'TimeOut8 value '
              example: '04:00'
            TimeIn9:
              type: string
              format: timespan
              description: 'TimeIn9 value '
              example: '09:45'
            TimeOut9:
              type: string
              format: timespan
              description: 'TimeOut9 value '
              example: '04:00'
            TimeIn10:
              type: string
              format: timespan
              description: 'TimeIn10 value '
              example: '09:45'
            TimeOut10:
              type: string
              format: timespan
              description: 'TimeOut10 value '
              example: '04:00'
            TimeIn11:
              type: string
              format: timespan
              description: 'TimeIn11 value '
              example: '09:45'
            TimeOut11:
              type: string
              format: timespan
              description: 'TimeOut11 value '
              example: '04:00'
            TimeIn12:
              type: string
              format: timespan
              description: 'TimeIn12 value '
              example: '09:45'
            TimeOut12:
              type: string
              format: timespan
              description: 'TimeOut12 value '
              example: '04:00'
            TimeIn13:
              type: string
              format: timespan
              description: 'TimeIn13 value '
              example: '09:45'
            TimeOut13:
              type: string
              format: timespan
              description: 'TimeOut13 value '
              example: '04:00'
            TimeIn14:
              type: string
              format: timespan
              description: 'TimeIn14 value '
              example: '09:45'
            TimeOut14:
              type: string
              format: timespan
              description: 'TimeOut14 value '
              example: '04:00'
            TimeIn15:
              type: string
              format: timespan
              description: 'TimeIn15 value '
              example: '09:45'
            TimeOut15:
              type: string
              format: timespan
              description: 'TimeOut15 value '
              example: '04:00'
            TotalTimeWorkedTodayInMins:
              type: string
              description: Total time worked today in mins value
              example: '405'
            TotalTimeWorkedThisWeekInMins:
              type: string
              description: Total time worked this week in mins value
              example: '405'
            TotalTimeWorkedThisMonthInMins:
              type: string
              description: Total time worked this month in mins value
              example: '405'
            IPAddressTimeIn1:
              type: string
              description: IP address time in 1 value
              example: 192.168.0.156
            IPAddressTimeIn2:
              type: string
              description: IP address time in 2 value
              example: 192.168.0.156
            IPAddressTimeIn3:
              type: string
              description: IP address time in 3 value
              example: 192.168.0.156
            IPAddressTimeIn4:
              type: string
              description: IP address time in 4 value
              example: 192.168.0.156
            IPAddressTimeIn5:
              type: string
              description: IP address time in 5 value
              example: 192.168.0.156
            IPAddressTimeIn6:
              type: string
              description: IP address time in 6 value
              example: 192.168.0.156
            IPAddressTimeIn7:
              type: string
              description: IP address time in 7 value
              example: 192.168.0.156
            IPAddressTimeIn8:
              type: string
              description: IP address time in 8 value
              example: 192.168.0.156
            IPAddressTimeIn9:
              type: string
              description: IP address time in 9 value
              example: 192.168.0.156
            IPAddressTimeIn10:
              type: string
              description: IP address time in 10 value
              example: 192.168.0.156
            IPAddressTimeIn11:
              type: string
              description: IP address time in 11 value
              example: 192.168.0.156
            IPAddressTimeIn12:
              type: string
              description: IP address time in 12 value
              example: 192.168.0.156
            IPAddressTimeIn13:
              type: string
              description: IP address time in 13 value
              example: 192.168.0.156
            IPAddressTimeIn14:
              type: string
              description: IP address time in 14 value
              example: 192.168.0.156
            IPAddressTimeIn15:
              type: string
              description: IP address time in 15 value
              example: 192.168.0.156
            IPAddressTimeOut1:
              type: string
              description: IP address time out 1 value
              example: 192.168.0.156
            IPAddressTimeOut2:
              type: string
              description: IP address time out 2 value
              example: 192.168.0.156
            IPAddressTimeOut3:
              type: string
              description: IP address time out 3 value
              example: 192.168.0.156
            IPAddressTimeOut4:
              type: string
              description: IP address time out 4 value
              example: 192.168.0.156
            IPAddressTimeOut5:
              type: string
              description: IP address time out 5 value
              example: 192.168.0.156
            IPAddressTimeOut6:
              type: string
              description: IP address time out 6 value
              example: 192.168.0.156
            IPAddressTimeOut7:
              type: string
              description: IP address time out 7 value
              example: 192.168.0.156
            IPAddressTimeOut8:
              type: string
              description: IP address time out 8 value
              example: 192.168.0.156
            IPAddressTimeOut9:
              type: string
              description: IP address time out 9 value
              example: 192.168.0.156
            IPAddressTimeOut10:
              type: string
              description: IP address time out 10 value
              example: 192.168.0.156
            IPAddressTimeOut11:
              type: string
              description: IP address time out 11 value
              example: 192.168.0.156
            IPAddressTimeOut12:
              type: string
              description: IP address time out 12 value
              example: 192.168.0.156
            IPAddressTimeOut13:
              type: string
              description: IP address time out 13 value
              example: 192.168.0.156
            IPAddressTimeOut14:
              type: string
              description: IP address time out 14 value
              example: 192.168.0.156
            IPAddressTimeOut15:
              type: string
              description: IP address time out 15 value
              example: 192.168.0.156
            TimesheetState:
              type: string
              format: date
              description: 'TimesheetState value '
              example: Complete
            Comments:
              type: string
              description: Comments value
              example: Complete
            ChangedDate:
              type: string
              format: date
              description: ChangedDate value
              example: '2017-07-19'
      Result1GetHolidayDetailArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            StartDate:
              description: Start date value
              type: string
              format: date
              example: '2016-07-27'
            EndDate:
              description: End date value
              type: string
              format: date
              example: '2017-07-27'
            DurationType:
              description: DurationType value
              type: integer
              example: 1
            DurationInDays:
              description: DurationInDays value
              type: integer
              format: decimal
              example: 1
            DurationInMinutes:
              description: DurationInMinutes value
              type: integer
              example: 450
            DurationInDaysThisPeriod:
              description: DurationInDaysThisPeriod value
              type: integer
              format: decimal
              example: 1
            DurationInMinutesThisPeriod:
              description: DurationInMinutesThisPeriod value
              type: integer
              example: 450
            PartOfDay:
              description: PartOfDay value
              type: string
              enum:
                - AM
                - PM
              example: AM
            RequesterComments:
              description: RequesterComments value
              type: string
              example: asach test 20
            ApproverComments:
              description: ApproverComments value
              type: string
              example: Auto Approved
            Approver:
              description: Approver value
              type: string
              example: Vaibhavi Desai
            Status:
              description: Status value
              type: string
              enum:
                - Submitted
                - Approved
                - Rejected
              example: Approved
            LastActionDateTime:
              description: LastActionDateTime value
              type: string
              format: datetime
              example: '2017-07-20 19:06:17'
            IsToilHoliday:
              description: IsToilHoliday value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      Result1GetList5Array:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            EmployeeId:
              description: EmployeeId contain displayValue and FieldHistory array
              allOf:
                - $ref: '#/components/schemas/EmployeeIdArrayObject'
            Title:
              description: ' Title '
              allOf:
                - $ref: '#/components/schemas/TitleObject'
            FirstName:
              description: 'FirstName of employee '
              allOf:
                - $ref: '#/components/schemas/FirstNameObject'
            LastName:
              description: 'LastName of employee '
              allOf:
                - $ref: '#/components/schemas/LastNameObject'
            OtherName:
              description: 'OtherName of employee '
              allOf:
                - $ref: '#/components/schemas/OtherNameObject'
            KnownAs:
              description: KnownAs
              allOf:
                - $ref: '#/components/schemas/KnownAsObject'
            EmailId:
              description: EmailId of employee
              allOf:
                - $ref: '#/components/schemas/EmailIdObject'
            StartDate:
              description: StartDate of employee
              allOf:
                - $ref: '#/components/schemas/StartDateObject'
            DateOfBirth:
              description: DateOfBirth of employee
              allOf:
                - $ref: '#/components/schemas/DateOfBirthObject'
            JobRole:
              description: JobRole of employee
              allOf:
                - $ref: '#/components/schemas/JobRoleObject'
            Company:
              description: Company name of employee
              allOf:
                - $ref: '#/components/schemas/CompanyObject'
            CompanyEffectiveDate:
              description: Company effective date value
              type: object
              properties:
                DisplayValue:
                  description: Company effective date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2014-01-01'
            Location:
              description: Location name of employee
              allOf:
                - $ref: '#/components/schemas/LocationObject'
            LocationEffectiveDate:
              description: Location effective date value
              type: object
              properties:
                DisplayValue:
                  description: Location effective date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2017-02-02'
            Department:
              description: Department name of employee
              allOf:
                - $ref: '#/components/schemas/DepartmentObject'
            DepartmentEffectiveDate:
              description: Department effective date value
              type: object
              properties:
                DisplayValue:
                  description: Department effective date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2017-05-01'
            JobRoleChangeDate:
              description: Job role change date value
              type: object
              properties:
                DisplayValue:
                  description: Job role change date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2017-05-05'
            ReportsTo:
              description: Reports to value
              allOf:
                - $ref: '#/components/schemas/ReportsToObject'
            ReportsToEffectiveDate:
              description: Reports to effective date value
              type: object
              properties:
                DisplayValue:
                  description: Reports to effective date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2016-06-06'
            ReportsToEmployeeId:
              description: Reports to employee id value
              type: object
              properties:
                DisplayValue:
                  description: Reports to employee id value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  example: PW6
            ReportsToEmailAddress:
              description: Reports to email address value
              type: object
              properties:
                DisplayValue:
                  description: Reports to email address value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: email
                  example: abc.xyz@itgurusssoftware.com
            NISNumber:
              description: NIS number value
              allOf:
                - $ref: '#/components/schemas/NISNumberObject'
            Nationality:
              description: Nationality value
              allOf:
                - $ref: '#/components/schemas/NationalityObject'
            EmploymentType:
              description: Employment type value
              allOf:
                - $ref: '#/components/schemas/EmploymentTypeObject'
            EmploymentTypeEffectiveDate:
              description: Employment type effective date value
              type: object
              properties:
                DisplayValue:
                  description: Employment type effective date value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  format: date
                  example: '2017-07-01'
            EmployeeStatus:
              description: Employee status value
              type: object
              properties:
                DisplayValue:
                  description: Employee status value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  example: '1'
            HolidayAllowanceDays:
              description: Holiday allowance days value
              type: object
              properties:
                DisplayValue:
                  description: Holiday allowance days value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  example: '0.00'
            HolidayAllowanceMins:
              description: Holiday allowance mins value
              type: object
              properties:
                DisplayValue:
                  description: Holiday allowance mins value
                  type: string
                  allOf:
                    - $ref: '#/components/schemas/DisplayValue'
                  example: '0'
            NoticePeriod:
              description: Notice period value
              allOf:
                - $ref: '#/components/schemas/NoticePeriodObject'
            ProbationEndDate:
              description: Probation end date value
              allOf:
                - $ref: '#/components/schemas/ProbationEndDateObject'
            Gender:
              description: Gender value
              allOf:
                - $ref: '#/components/schemas/GenderObject'
            ContactDetail:
              description: Contact detail value
              allOf:
                - $ref: '#/components/schemas/ContactDetailObject'
            OtherContact:
              description: Other Contact detail value
              allOf:
                - $ref: '#/components/schemas/OtherContactObject'
            RightToWork:
              description: Right to work value
              allOf:
                - $ref: '#/components/schemas/RightToWorkObject'
            BackgroundDetail:
              description: Background detail value
              allOf:
                - $ref: '#/components/schemas/BackgroundDetailObject'
            BankDetail:
              description: Bank detail value
              allOf:
                - $ref: '#/components/schemas/BankDetailObject'
            EmploymentDetail:
              description: Employment detail value
              allOf:
                - $ref: '#/components/schemas/EmploymentDetailObject'
            LeavingDate:
              description: LeavingDate value
              allOf:
                - $ref: '#/components/schemas/LeavingDate'
            ReasonForLeaving:
              description: Reason for leaving value
              allOf:
                - $ref: '#/components/schemas/ReasonforLeaving'
            EmployeeImage:
              description: Employee image value
              allOf:
                - $ref: '#/components/schemas/EmployeeImagePath'
            APIColumn1:
              description: API column 1 value
              allOf:
                - $ref: '#/components/schemas/APIColumn1'
            APIColumn2:
              description: API column 2 value
              allOf:
                - $ref: '#/components/schemas/APIColumn2'
            APIColumn3:
              description: API column 3 value
              allOf:
                - $ref: '#/components/schemas/APIColumn3'
            APIColumn4:
              description: API column 4 value
              allOf:
                - $ref: '#/components/schemas/APIColumn4'
            APIColumn5:
              description: API column 5 value
              allOf:
                - $ref: '#/components/schemas/APIColumn5'
            lstFieldHistoryJobrole:
              description: list of Field history job role
              allOf:
                - $ref: '#/components/schemas/lstFieldHistoryJobrole'
      ResultGetEmployeeDetail:
        description: ' Result Array'
        type: object
        properties:
          EmployeeId:
            description: EmployeeId contain displayValue and FieldHistory array
            allOf:
              - $ref: '#/components/schemas/EmployeeIdArrayObject'
          Title:
            description: ' Title '
            allOf:
              - $ref: '#/components/schemas/TitleObject'
          FirstName:
            description: 'FirstName of employee '
            allOf:
              - $ref: '#/components/schemas/FirstNameObject'
          LastName:
            description: 'LastName of employee '
            allOf:
              - $ref: '#/components/schemas/LastNameObject'
          OtherName:
            description: 'OtherName of employee '
            allOf:
              - $ref: '#/components/schemas/OtherNameObject'
          KnownAs:
            description: KnownAs
            allOf:
              - $ref: '#/components/schemas/KnownAsObject'
          EmailId:
            description: EmailId of employee
            allOf:
              - $ref: '#/components/schemas/EmailIdObject'
          StartDate:
            description: StartDate of employee
            allOf:
              - $ref: '#/components/schemas/StartDateObject'
          DateOfBirth:
            description: DateOfBirth of employee
            allOf:
              - $ref: '#/components/schemas/DateOfBirthObject'
          JobRole:
            description: JobRole of employee
            allOf:
              - $ref: '#/components/schemas/JobRoleObject'
          Company:
            description: Company name of employee
            allOf:
              - $ref: '#/components/schemas/CompanyObject'
          CompanyEffectiveDate:
            description: Company effective date value
            type: object
            properties:
              DisplayValue:
                description: Company effective date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-01-01'
          Location:
            description: Location name of employee
            allOf:
              - $ref: '#/components/schemas/LocationObject'
          LocationEffectiveDate:
            description: Location effective date value
            type: object
            properties:
              DisplayValue:
                description: Location effective date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-02-02'
          Department:
            description: Department name of employee
            allOf:
              - $ref: '#/components/schemas/DepartmentObject'
          DepartmentEffectiveDate:
            description: Department effective date value
            type: object
            properties:
              DisplayValue:
                description: Department effective date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-05-01'
          JobRoleChangeDate:
            description: Job role change date value
            type: object
            properties:
              DisplayValue:
                description: Job role change date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-05-05'
          ReportsTo:
            description: Reports to value
            allOf:
              - $ref: '#/components/schemas/ReportsToObject'
          ReportsToEffectiveDate:
            description: Reports to effective date value
            type: object
            properties:
              DisplayValue:
                description: Reports to effective date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2016-06-06'
          ReportsToEmployeeId:
            description: Reports to employee id value
            type: object
            properties:
              DisplayValue:
                description: Reports to employee id value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: PW6
          ReportsToEmailAddress:
            description: Reports to email address value
            type: object
            properties:
              DisplayValue:
                description: Reports to email address value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: email
                example: abc.xyz@itgurusssoftware.com
          NISNumber:
            description: NIS number value
            allOf:
              - $ref: '#/components/schemas/NISNumberObject'
          Nationality:
            description: Nationality value
            allOf:
              - $ref: '#/components/schemas/NationalityObject'
          EmploymentType:
            description: Employment type value
            allOf:
              - $ref: '#/components/schemas/EmploymentTypeObject'
          EmploymentTypeEffectiveDate:
            description: Employment type effective date value
            type: object
            properties:
              DisplayValue:
                description: Employment type effective date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-07-01'
          EmployeeStatus:
            description: Employee status value
            type: object
            properties:
              DisplayValue:
                description: Employee status value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '1'
          HolidayAllowanceDays:
            description: Holiday allowance days value
            type: object
            properties:
              DisplayValue:
                description: Holiday allowance days value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '0.00'
          HolidayAllowanceMins:
            description: Holiday allowance mins value
            type: object
            properties:
              DisplayValue:
                description: Holiday allowance mins value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '0'
          NoticePeriod:
            description: Notice period value
            allOf:
              - $ref: '#/components/schemas/NoticePeriodObject'
          ProbationEndDate:
            description: Probation end date value
            allOf:
              - $ref: '#/components/schemas/ProbationEndDateObject'
          Gender:
            description: Gender value
            allOf:
              - $ref: '#/components/schemas/GenderObject'
          ContactDetail:
            description: Contact detail value
            allOf:
              - $ref: '#/components/schemas/ContactDetailObject'
          OtherContact:
            description: Other Contact detail value
            allOf:
              - $ref: '#/components/schemas/OtherContactObject'
          RightToWork:
            description: Right to work value
            allOf:
              - $ref: '#/components/schemas/RightToWorkObject'
          BackgroundDetail:
            description: Background detail value
            allOf:
              - $ref: '#/components/schemas/BackgroundDetailObject'
          BankDetail:
            description: Bank detail value
            allOf:
              - $ref: '#/components/schemas/BankDetailObject'
          EmploymentDetail:
            description: Employment detail value
            allOf:
              - $ref: '#/components/schemas/EmploymentDetailObject'
          LeavingDate:
            description: LeavingDate value
            allOf:
              - $ref: '#/components/schemas/LeavingDate'
          ReasonForLeaving:
            description: Reason for leaving value
            allOf:
              - $ref: '#/components/schemas/ReasonforLeaving'
          EmployeeImage:
            description: Employee image value
            allOf:
              - $ref: '#/components/schemas/EmployeeImagePath'
          APIColumn1:
            description: API column 1 value
            allOf:
              - $ref: '#/components/schemas/APIColumn1'
          APIColumn2:
            description: API column 2 value
            allOf:
              - $ref: '#/components/schemas/APIColumn2'
          APIColumn3:
            description: API column 3 value
            allOf:
              - $ref: '#/components/schemas/APIColumn3'
          APIColumn4:
            description: API column 4 value
            allOf:
              - $ref: '#/components/schemas/APIColumn4'
          APIColumn5:
            description: API column 5 value
            allOf:
              - $ref: '#/components/schemas/APIColumn5'
          lstFieldHistoryJobrole:
            description: list of Field history job role
            allOf:
              - $ref: '#/components/schemas/lstFieldHistoryJobrole'
      EmployeeIdArrayObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: PW180
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      TitleObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Mr.
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      FirstNameObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Employee first name
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      LastNameObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Employee last name
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      OtherNameObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Other name
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      KnownAsObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Known as value
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      EmailIdObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            format: email
            example: firstname.lastname@itgurusssoftware.com
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      StartDateObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            format: date
            example: '2014-01-01'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      DateOfBirthObject:
        description: ' Result Array'
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            format: date
            example: '1991-08-07'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      JobRoleObject:
        description: Job role object contain displayValue and fieldHistoryForJobRole array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Software Enginner
          FieldHistoryForJobRole:
            description: Field history for job role array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForJobRoleObject'
      CompanyObject:
        description: >-
          company object contain displayValue and fieldHistoryForEffectiveDate
          array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Company name
          FieldHistoryForEffectiveDate:
            description: Field history for effective date array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      LocationObject:
        description: >-
          Location object contain displayValue and fieldHistoryForEffectiveDate
          array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Mumbai
          FieldHistoryForEffectiveDate:
            description: Field history for effective date array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      DepartmentObject:
        description: >-
          Department object contain displayValue and fieldHistoryForEffectiveDate
          array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: IT
          FieldHistoryForEffectiveDate:
            description: Field history for effective date array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      ReportsToObject:
        description: >-
          Department object contain displayValue and fieldHistoryForEffectiveDate
          array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: FirstName LastName
          FieldHistoryForEffectiveDate:
            description: Field history for effective date array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      NISNumberObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: AAAAAAAAAAAAAA
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      NationalityObject:
        description: The Result Array
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Indian
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      EmploymentTypeObject:
        description: >-
          company object contain displayValue and fieldHistoryForEffectiveDate
          array
        type: object
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Full Time
          FieldHistoryForEffectiveDate:
            description: Field history for effective date array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      NoticePeriodObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: don't know
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      ProbationEndDateObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            format: date
            example: '2017-04-03'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      GenderObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Male
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      ContactDetailObject:
        description: ContactDetail contain displayValue and FieldHistory array values
        type: object
        properties:
          Address:
            description: Address contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/AddressObject'
          WorkPhoneNumber:
            description: WorkPhoneNumber contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/WorkPhoneNumberObject'
          PersonalPhoneNumber:
            description: >-
              PersonalPhoneNumber contain displayValue and FieldHistory array
              values
            allOf:
              - $ref: '#/components/schemas/PersonalPhoneNumberObject'
          PersonalEmail:
            description: PersonalEmail contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/PersonalEmailObject'
          Mobile:
            description: Mobile contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/MobileObject'
      AddressObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Address
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      WorkPhoneNumberObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: '9966005500'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      PersonalPhoneNumberObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: '9988776655'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      PersonalEmailObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            format: email
            example: abc@itgurussoftware.com
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      MobileObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: '9988990099'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      OtherContactObject:
        type: object
        properties:
          OtherContactName:
            description: OtherContactName contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Other contact name value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: xyz
          Relationship:
            description: Relationship contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Relationship value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Relationship value
          OtheContactAddress:
            description: OtheContactAddress contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Other contact address value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Other contact address
          Telephone:
            description: Telephone contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Telephone value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Telephone number
          Mobile:
            description: Mobile contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Mobile value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '9900998877'
          Comments:
            description: Comments contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Comments value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Comments here
      RightToWorkObject:
        type: object
        properties:
          DocumentType:
            description: DocumentType contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Document type value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: don't know
          DocumentId:
            description: DocumentId contain displayValue
            type: object
            properties:
              DisplayValue:
                description: DocumentId value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '1'
          ValidFrom:
            description: ValidFrom contain displayValue
            type: object
            properties:
              DisplayValue:
                description: ValidFrom value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-02-02'
          ValidTo:
            description: ValidTo contain displayValue
            type: object
            properties:
              DisplayValue:
                description: ValidTo value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2017-03-03'
          Duration:
            description: Duration contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Duration value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: '1'
          RightToWorkComments:
            description: RightToWorkComments contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Right to work comments value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Right to work comments
      BackgroundDetailObject:
        type: object
        properties:
          CheckType:
            description: CheckType contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Check type value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: check type value
          CompletionDate:
            description: CompletionDate contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Completion date value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2016-06-06'
          ExpiryDate:
            description: ExpiryDate contain displayValue
            type: object
            properties:
              DisplayValue:
                description: ExpiryDate value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                format: date
                example: '2016-07-07'
          BackgroundDetailComments:
            description: BackgroundDetailComments contain displayValue
            type: object
            properties:
              DisplayValue:
                description: Background detail comments value
                type: string
                allOf:
                  - $ref: '#/components/schemas/DisplayValue'
                example: Background detail comments
      BankDetailObject:
        description: Bank detail contain displayValue and FieldHistory array values
        type: object
        properties:
          BankName:
            description: BankName contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/BankNameObject'
          BankAddress:
            description: BankAddress contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/BankAddressObject'
          BankCode:
            description: BankCode contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/BankCodeObject'
          AccountNumber:
            description: AccountNumber contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/AccountNumberObject'
          AccountName:
            description: AccountName contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/AccountNameObject'
      BankNameObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: SBI
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      BankAddressObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Pune
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      BankCodeObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: '6789'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      AccountNumberObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: '8411540414'
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      AccountNameObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Account Name
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      EmploymentDetailObject:
        description: Employment detail contain displayValue and FieldHistory array values
        type: object
        properties:
          PayrollCompany:
            description: PayrollCompany contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/PayrollCompanyObject'
          PayrollID:
            description: PayrollID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/PayrollIDObject'
          TimeAndAttendanceID:
            description: >-
              TimeAndAttendanceID contain displayValue and FieldHistory array
              values
            allOf:
              - $ref: '#/components/schemas/TimeAndAttendanceIDObject'
          RotaID:
            description: RotaID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/RotaIDObject'
          CRMID:
            description: CRMID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/CRMIDObject'
          ATSID:
            description: ATSID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/ATSIDObject'
          PerformanceID:
            description: PerformanceID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/PerformanceIDObject'
          BenefitsID:
            description: BenefitsID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/BenefitsIDObject'
          System1ID:
            description: System1ID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/System1IDObject'
          System2ID:
            description: System2ID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/System2IDObject'
          System3ID:
            description: System3ID contain displayValue and FieldHistory array values
            allOf:
              - $ref: '#/components/schemas/System3IDObject'
          MethodOfRecruitment:
            description: >-
              MethodOfRecruitment contain displayValue and FieldHistory array
              values
            allOf:
              - $ref: '#/components/schemas/MethodOfRecruitmentObject'
      PayrollCompanyObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your payroll company's name
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      PayrollIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your payroll id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      TimeAndAttendanceIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your time and attendance id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      RotaIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your Rota id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      CRMIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your CRM id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      ATSIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your ATS id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      PerformanceIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your performance id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      BenefitsIDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your benefits id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      System1IDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your system one id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      System2IDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your system two id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      System3IDObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Your system three id
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      MethodOfRecruitmentObject:
        description: ' Result Array'
        type: object
        required:
          - EmployeeId
        properties:
          DisplayValue:
            description: DisplayValue value
            type: string
            allOf:
              - $ref: '#/components/schemas/DisplayValue'
            example: Method of recruitment
          FieldHistory:
            description: FieldHistory array list
            allOf:
              - $ref: '#/components/schemas/EmployeeIdObject'
      lstFieldHistoryJobrole:
        description: lst Field history job role contain fieldHistoryForJobRole array
        type: object
        properties:
          FieldHistoryForJobRole:
            description: Field history for job role array list
            allOf:
              - $ref: '#/components/schemas/FieldHistoryForJobRoleObject'
      Result1:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            EffectiveFrom:
              description: ' EffectiveFrom Value'
              type: string
              example: '2014-01-01'
            SalaryType:
              description: Salary type value
              type: string
              example: Annual
            PaymentFrequency:
              description: Payment frequency value
              type: string
              example: Monthly
            SalaryAmount:
              description: Salary amount value
              type: integer
              format: decimal
              example: '1000.0000'
            TotalSalaryAmount:
              description: Total salary amount value
              type: integer
              format: decimal
              example: '1000.0000'
            Currency:
              description: Currency value
              type: string
              example: ASD
            ChangeReason:
              description: ChangeReason value
              type: string
              example: New Resion
            Comments:
              description: Comments goes here
              type: string
              example: Comments goes here
            Deductions:
              description: Deductions array list
              allOf:
                - $ref: '#/components/schemas/DeductionsObject'
            Entitlements:
              description: Entitlements array list
              allOf:
                - $ref: '#/components/schemas/EntitlementsObject'
      DeductionsObject:
        type: array
        items:
          type: object
          properties:
            Deduction:
              description: Deduction value
              type: string
              example: Social Club 1
            Amount:
              description: ' contact last name'
              type: integer
              example: '100'
            Percentage:
              description: Percentage
              type: integer
              format: decimal
              example: '10.00'
            Comments:
              description: Comments
              type: string
              example: Comments for deduction social
            IncludeInTotalSalary:
              description: IncludeInTotalSalary
              type: boolean
              enum:
                - 'false'
                - 'true'
            DisplayAsAmountOrPercentage:
              description: Display as amount or percentage
              type: boolean
              enum:
                - 'false'
                - 'true'
      EntitlementsObject:
        type: array
        items:
          type: object
          properties:
            Entitlement:
              description: Entitlement value
              type: string
              example: Car Allowance 1
            Amount:
              description: ' contact last name'
              type: integer
              example: '100'
            Percentage:
              description: Percentage
              type: integer
              format: decimal
              example: '10.00'
            Comments:
              description: Comments
              type: string
              example: Comments
            IncludeInTotalSalary:
              description: IncludeInTotalSalary
              type: boolean
              enum:
                - 'false'
                - 'true'
            DisplayAsAmountOrPercentage:
              description: Display as amount or percentage
              type: boolean
              enum:
                - 'false'
                - 'true'
      ResultEmployeeAbsenceArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            StartDate:
              description: ' Start Date Value'
              type: string
              format: date
              example: '2014-01-01'
            EndDate:
              description: ' End Date  value'
              type: string
              format: date
              example: '2014-01-01'
            DurationDays:
              description: ' Duration Days value'
              type: integer
              format: double
              example: '22.00'
            DurationInDaysThisPeriod:
              description: ' Duration In Days This Period value'
              type: integer
              format: double
              example: '22.00'
            PartOfDay:
              description: Part Of Day value
              type: boolean
              enum:
                - AM
                - PM
              example: AM
            BackToWorkInterviewRequried:
              description: The Back To Work Interview Requried  value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
            BackToWorkInterviewDate:
              description: ' Back To Work Interview Date value'
              type: string
              example: '2013-05-01'
            MedicalCertificateType:
              description: ' Comments goes here'
              type: integer
            MedicalCertificateReceivedDate:
              description: ' Comments goes here'
              type: string
              example: '2013-05-01'
            Reason:
              description: ' Reason for Absence'
              MaxLength: 100
              type: string
              example: Not feeling well
            Comments:
              description: Comments Array  list
              allOf:
                - $ref: '#/components/schemas/CommentsArray'
            AbsencePaidStatus:
              description: ' Absence Paid Status '
              type: integer
              example: '1'
            EmergencyLeave:
              description: ' Emergency Leave'
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
      ResultAdditionalQuestionsArrayobject:
        type: array
        items:
          type: object
          properties:
            QuestionId:
              type: byte
              description: 'Question id value '
              example: '2'
            QuestionType:
              type: byte
              description: 'Question type value '
              example: '1'
            IsMandatory:
              type: boolean
              description: 'Is mandatory type value '
              example: 'true'
              enum:
                - 'false'
                - 'true'
            Question:
              type: string
              description: 'Question type value '
              example: Please indicate your gender
            AdditionalOrInternalType:
              type: integer
              description: 'Additional Or internal type value '
              example: '1'
            QuestionOptions:
              description: Question Options list value
              allOf:
                - $ref: '#/components/schemas/ResultlstQuestionOptions'
      ResultlstQuestionOptions:
        description: Question options list
        type: array
        items:
          type: object
          properties:
            QuestionOptions:
              type: string
              description: QuestionOptions value
      GetBenefitByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to GetBenefitByEmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetBenefitByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetBenefitByEmployeeId
          EmployeeId:
            description: Employee id for get benefit by employee id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetByBenefitIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - BenefitId
        properties:
          APIKey:
            description: APIKey for employee api to GetBenefitByBenefitId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetBenefitByBenefitId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetBenefitByBenefitId
          EmployeeId:
            description: Employee Id for get benefit by benefit id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          BenefitId:
            description: Benefit id for get benefit by benefit id
            allOf:
              - $ref: '#/components/schemas/BenefitId'
      ResultGetByBenefitIdObject:
        description: ' Result Array'
        type: object
        properties:
          BenefitId:
            description: Benefit Id value
            type: number
            format: integer
            example: 378
          Benefit:
            description: Benefit value
            type: string
            example: Date Awarded
          DateAwarded:
            description: DateAwarded value
            type: string
            format: date
            example: '2017-03-07'
          ExpiryDate:
            description: ExpiryDate value
            type: string
            format: date
            example: '2018-03-07'
          Value:
            description: Value
            type: number
            format: decimal
            example: '1000.10'
          Comments:
            description: Comments value
            type: string
            example: Comments goes here
          RecoverOnTermination:
            description: RecoverOnTermination value
            type: string
            enum:
              - 'Yes'
              - 'No'
            example: 'Yes'
          Customfields:
            description: Customfields value
            allOf:
              - $ref: '#/components/schemas/CustomfieldArrayForEmployeeBenefit'
          Files:
            description: Files info.
            allOf:
              - $ref: '#/components/schemas/FileArrayForEmployeeBenefit'
      Result1GetCustomScreenDetail:
        description: Result Array
        type: array
        items:
          type: object
          required: []
          properties:
            ScreenId:
              description: ScreenId value
              type: integer
              example: 1014
            ScreenName:
              description: ScreenName value
              type: string
              example: Grievance
      Result1GetByCustomScreenByEmployeeId:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            TxnId:
              description: TxnId value
              type: integer
              example: 521
            Customfields:
              description: Customfields value
              allOf:
                - $ref: >-
                    #/components/schemas/CustomfieldsForGetCustomScreenDetailObject
            Files:
              description: Files value
              allOf:
                - $ref: >-
                    #/components/schemas/FilesForGetByCustomScreenTransactionIdObject
      Result1GetByCustomScreenTransactionIdObject:
        description: ' Result Array'
        type: object
        required: []
        properties:
          TxnId:
            description: TxnId value
            type: integer
            example: 521
          Customfields:
            description: Customfields value
            allOf:
              - $ref: '#/components/schemas/CustomfieldsForGetCustomScreenDetailObject'
          Files:
            description: Files value
            allOf:
              - $ref: >-
                  #/components/schemas/FilesForGetByCustomScreenTransactionIdObject
      Result1GetHoildayEntittlement:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            StartDate:
              description: StartDate value
              type: string
              format: date
              example: '2016-07-27'
            EndDate:
              description: ' EndDate value'
              type: string
              format: date
              example: '2017-07-27'
            MeasuredIn:
              description: MeasuredIn value
              type: string
              example: Days
            Entitlement:
              description: Entitlement value
              type: integer
              format: decimal
              example: '0.50'
      Result1GetNextYearHolidayEntitlement:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            StartDate:
              description: StartDate value
              type: string
              format: date
              example: '2016-07-27'
            EndDate:
              description: ' EndDate value'
              type: string
              format: date
              example: '2017-07-27'
            MeasuredIn:
              description: MeasuredIn value
              type: string
              example: Days
            Entitlement:
              description: Entitlement value
              type: integer
              format: decimal
              example: '0.50'
      Result1GetHistoryByEmployeeIdAndFieldName:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            JobRole:
              description: JobRole value
              type: string
              example: Software Enginner
            EffectiveDate:
              description: ' EffectiveDate value'
              type: string
              format: date
              example: '2014-01-01'
            ReasonForChange:
              description: ' ReasonForChange value'
              type: string
              example: New Starter
            ChangedOn:
              description: ChangedOn value
              type: string
              format: date
              example: '2017-07-13'
            CreatedBy:
              description: CreatedBy value
              type: string
              example: Vaibhavi Desai
      Result2GetHistoryByEmployeeIdAndFieldName:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            FieldData:
              description: FieldData value
              type: string
              example: Addy Mark
            EffectiveDate:
              description: ' EffectiveDate value'
              type: string
              format: date
              example: '2014-01-01'
            ReasonForChange:
              description: ' ReasonForChange value'
              type: string
              example: New Starter
            ChangedOn:
              description: ChangedOn value
              type: string
              format: date
              example: '2017-07-13'
            CreatedBy:
              description: CreatedBy value
              type: string
              example: Vaibhavi Desai
      Result3GetHistoryByEmployeeIdAndFieldName:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            OldValue:
              description: OldValue value
              type: string
              example: Dinklage
            NewValue:
              description: NewValue value
              type: string
              example: Jones
            ReasonForChange:
              description: ' ReasonForChange value'
              type: string
              example: New Starter
            ChangedOn:
              description: ChangedOn value
              type: string
              format: date
              example: '2017-07-13'
            CreatedBy:
              description: CreatedBy value
              type: string
              example: Vaibhavi Desai
      Result1GetQueryResult:
        description: ' Result Array'
        type: array
        items:
          type: object
          required: []
          properties:
            Employee Id:
              description: EmployeeId value
              type: string
              example: PW180
            First Name:
              description: ' First name value'
              type: string
              example: Bhumi
            Last Name:
              description: Last name value
              type: string
              example: Bapat
            Holiday Start Date:
              description: ' Holiday start date value'
              type: string
              format: date
              example: 28/08/2017
            Holiday End Date:
              description: Holiday end date value
              type: string
              format: date
              example: 28/08/2017
            Holiday Type:
              description: Holiday type value
              type: string
              example: Public Holiday Inclusive
            Holiday Duration Type:
              description: Holiday duration type value
              type: string
              example: Full day
            Part of the Day:
              description: Part of the day value
              type: string
              example: 'null'
            Holiday Duration (Days):
              description: Holiday duration (days) value
              type: string
              format: decimal
              example: 1.5
            Holiday Duration (Hrs):
              description: Holiday duration (hrs) value
              type: string
              example: '7:30'
            Holiday Comments:
              description: Holiday comments value
              type: string
              example: comment here
            Holiday Status:
              description: Holiday status value
              type: string
              example: Approved
      Result1GetQueryResultByQueryName:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            Employee Id:
              description: Employee id value
              type: string
              example: '180'
            First Name:
              description: ' First name value'
              type: string
              example: Bhumi
            Last Name:
              description: Last name value
              type: string
              example: Bapat
            Annual Leave Start Date:
              description: ' Annual leave start date value'
              type: string
              format: date
              example: 2014/04/01
            Annual Leave End Date:
              description: Annual leave end date value
              type: string
              format: date
              example: 2015/03/31
            Allowance Type:
              description: Allowance type value
              type: string
              example: Yearly
            Allowance (Days):
              description: Allowance (days) value
              type: string
              format: double
              example: 28.5
      GetBenefitByEmployeeIdArray:
        description: ' Result Array'
        type: array
        items:
          type: object
          properties:
            BenefitId:
              description: Benefit Id value
              type: integer
              example: 271
            Benefit:
              description: Benefit value
              type: string
              example: Pension
            DateAwarded:
              description: DateAwarded value
              type: string
              format: date
              example: '2016-06-01'
            ExpiryDate:
              description: ExpiryDate value
              type: string
              format: date
              example: '2026-06-30'
            Value:
              description: Value
              type: number
              format: decimal
              example: '1000.05'
            Comments:
              description: Comments value
              type: string
              example: Comments goes here
            RecoverOnTermination:
              description: RecoverOnTermination value
              type: string
              enum:
                - 'Yes'
                - 'No'
              example: 'Yes'
            Customfields:
              description: Customfields value
              allOf:
                - $ref: '#/components/schemas/CustomfieldArrayForEmployeeBenefit'
            Files:
              description: Files info.
              allOf:
                - $ref: '#/components/schemas/FileArrayForEmployeeBenefit'
      CustomfieldArrayForEmployeeBenefit:
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: Column Name
              type: string
              example: abc
            ColumnValue:
              description: column value
              type: string
              example: ''
      FileArrayForEmployeeBenefit:
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: 123.png
            Description:
              description: Description value
              type: string
              example: dsadsadasdasd
            FileUrl:
              description: File
              type: string
              format: url
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?89ed26fe-03cd-4c95-88f4-183fcdff0de4
            Category:
              description: category
              type: string
              example: catagory
            SignatureRequired:
              description: Signature Required
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      DeleteBenefitParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - BenefitId
        properties:
          APIKey:
            description: APIKey for employee api to DeleteBenefit
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteBenefit
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteBenefit
          EmployeeId:
            description: Employee Id for delete benefit
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          BenefitId:
            description: Benefit id for delete benefit
            allOf:
              - $ref: '#/components/schemas/BenefitId'
      GetCPDByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to get cpd by employee id
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetCPDByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetCPDByEmployeeId
          EmployeeId:
            description: Employeeid for get cpd by employee id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetByCPDIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - CPDId
        properties:
          APIKey:
            description: APIKey for get by cpd id
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByCPDId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByCPDId
          EmployeeId:
            description: Employeeid for get by cpd id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          CPDId:
            description: CPID for get by cpd id
            allOf:
              - $ref: '#/components/schemas/CPDId'
      AddnewCPDParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Activity
          - StartDate
          - CustomColumns
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to add CPD detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewCPD
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewCPD
          EmployeeId:
            description: Employeeid for add new CPD
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Activity:
            description: Activity for add new CPD
            allOf:
              - $ref: '#/components/schemas/Activity'
          StartDate:
            description: StartDate for add new CPD
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: EndDate for add new CPD
            allOf:
              - $ref: '#/components/schemas/EndDate'
          RollNumber:
            description: RollNumber for add new CPD
            allOf:
              - $ref: '#/components/schemas/RollNumber'
          DateAdmitted:
            description: DateAdmitted for add new CPD
            allOf:
              - $ref: '#/components/schemas/DateAdmitted'
          HoursRequired:
            description: HoursRequired for add new CPD
            allOf:
              - $ref: '#/components/schemas/HoursRequired'
          HoursAccredited:
            description: HoursAccredited for add new CPD
            allOf:
              - $ref: '#/components/schemas/HoursAccredited'
          Notes:
            description: Notes for add new CPD
            allOf:
              - $ref: '#/components/schemas/Notes'
            maxLength: '256'
          CustomColumns:
            description: CustomColumns for add new cpd
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForEmployeeCPD'
          AddFiles:
            description: AddFiles for add new cpd
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForEmployeeCPD'
      UpdateCPDParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - CPDId
          - Activity
          - StartDate
        properties:
          APIKey:
            description: APIKey for employee api to update CPD detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateCPD
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateCPD
          EmployeeId:
            description: Employeeid for update CPD
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          CPDId:
            description: CPID for update CPD
            allOf:
              - $ref: '#/components/schemas/CPDId'
          Activity:
            description: Activity for update CPD
            allOf:
              - $ref: '#/components/schemas/Activity'
          StartDate:
            description: StartDate for update CPD
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: EndDate for update CPD
            allOf:
              - $ref: '#/components/schemas/EndDate'
          RollNumber:
            description: RollNumber for update CPD
            allOf:
              - $ref: '#/components/schemas/RollNumber'
          DateAdmitted:
            description: DateAdmitted for update CPD
            allOf:
              - $ref: '#/components/schemas/DateAdmitted'
          HoursRequired:
            description: HoursRequired for update CPD
            allOf:
              - $ref: '#/components/schemas/HoursRequired'
          HoursAccredited:
            description: HoursAccredited for update CPD
            allOf:
              - $ref: '#/components/schemas/HoursAccredited'
          Notes:
            description: Notes for update CPD
            allOf:
              - $ref: '#/components/schemas/Notes'
            maxLength: '256'
          CustomColumns:
            description: CustomColumns for update CPD
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForEmployeeCPD'
          AddFiles:
            description: AddFiles for update CPD
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForEmployeeCPD'
      DeleteCPDParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - CPDId
        properties:
          APIKey:
            description: APIKey for employee api to delete CPD detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteCPD
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteCPD
          EmployeeId:
            description: Employeeid for delete CPD
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          CPDId:
            description: CPID for delete CPD
            allOf:
              - $ref: '#/components/schemas/CPDId'
      GetCustomScreenDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee custom screen api to GetCustomScreenDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetCustomScreenDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetCustomScreenDetail
      GetCustomScreenByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - ScreenId
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee custom screen api to GetCustomScreenByEmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetCustomScreenByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetCustomScreenByEmployeeId
          ScreenId:
            description: ScreenId for get custom screen by employeeId
            allOf:
              - $ref: '#/components/schemas/ScreenId'
          EmployeeId:
            description: EmployeeId for get custom screen by employeeId
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetByCustomScreenTransactionIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ScreenId
          - DocumentName
          - CustomScreenTransactionId
        properties:
          APIKey:
            description: >-
              APIKey for employee custom screen api to
              GetByCustomScreenTransactionId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByCustomScreenTransactionId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByCustomScreenTransactionId
          EmployeeId:
            description: EmployeeId for employee custom screen
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ScreenId:
            description: ScreenId for employee custom screen
            allOf:
              - $ref: '#/components/schemas/ScreenId'
          CustomScreenTransactionId:
            description: CustomScreenTransactionId for employee custom screen
            allOf:
              - $ref: '#/components/schemas/CustomScreenTransactionId'
      UpdateCustomScreenTransactionParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ScreenId
          - CustomScreenTransactionId
          - CustomColumns
          - AddFiles
          - DocumentName
          - File
          - Description
          - DocumentCategory
          - SignatureRequired
        properties:
          APIKey:
            description: >-
              APIKey for employee custom screen api to
              UpdateCustomScreenTransaction
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateCustomScreenTransaction
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateCustomScreenTransaction
          EmployeeId:
            description: EmployeeId for update custom screen transaction
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ScreenId:
            description: ScreenId for update custom screen transaction
            allOf:
              - $ref: '#/components/schemas/ScreenId'
          CustomScreenTransactionId:
            description: CustomScreenTransactionId for update custom screen transaction
            allOf:
              - $ref: '#/components/schemas/CustomScreenTransactionId'
          CustomColumns:
            description: CustomColumns for update custom screen transaction
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeCustomScreenObject'
          AddFiles:
            description: AddFiles for update custom screen transaction
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeCustomScreenObject'
      DeleteCustomScreenTransactionParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ScreenId
          - CustomScreenTransactionId
        properties:
          APIKey:
            description: >-
              APIKey for employee custom screen api to
              DeleteCustomScreenTransaction
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteCustomScreenTransaction
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteCustomScreenTransaction
          EmployeeId:
            description: EmployeeId for delete custom screen transaction
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ScreenId:
            description: ScreenId for delete custom screen transaction
            allOf:
              - $ref: '#/components/schemas/ScreenId'
          CustomScreenTransactionId:
            description: CustomScreenTransactionId for delete custom screen transaction
            allOf:
              - $ref: '#/components/schemas/CustomScreenTransactionId'
      GetHolidayEntitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for holiday entitlement api to GetHolidayEntitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetHolidayEntitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetHolidayEntitlement
          EmployeeId:
            description: Employeeid for get holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Startdate for get holiday entitlement
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: EndDate for get holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EndDate'
      GetNextYearHolidayEntitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for holiday entitlement api to GetNextYearHolidayEntitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetNextYearHolidayEntitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetNextYearHolidayEntitlement
          EmployeeId:
            description: EmployeeId for get next year holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      UpdateHolidayEntitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ReasonForChange
        properties:
          APIKey:
            description: APIKey for holiday entitlement api to UpdateHolidayEntitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateHolidayEntitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateHolidayEntitlement
          EmployeeId:
            description: EmployeeId for update holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          EntitlementThisYear:
            description: EntitlementThisYear for update holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EntitlementThisYear'
          ReasonForChange:
            description: ReasonForChange for update holiday entitlement
            allOf:
              - $ref: '#/components/schemas/ReasonForChange'
      UpdateNextYearHolidayEntitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ReasonForChange
        properties:
          APIKey:
            description: >-
              APIKey for holiday entitlement api to
              UpdateNextYearHolidayEntitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateNextYearHolidayEntitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateNextYearHolidayEntitlement
          EmployeeId:
            description: EmployeeId for update next year holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          EntitlementNextYear:
            description: EntitlementNextYear for update next year holiday entitlement
            allOf:
              - $ref: '#/components/schemas/EntitlementNextYear'
          ReasonForChange:
            description: ReasonForChange for update next year holiday entitlement
            allOf:
              - $ref: '#/components/schemas/ReasonForChange'
      GetHistoryByEmployeeIdAndFieldNameParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - FieldName
        properties:
          APIKey:
            description: APIKey for History to GetHistoryByEmployeeIdAndFieldName
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetHistoryByEmployeeIdAndFieldName
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetHistoryByEmployeeIdAndFieldName
          EmployeeId:
            description: EmployeeId for get history by employeeId and fieldName
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          FieldName:
            description: >-
              Field Name for get history by employeeId and fieldName As
              Follows:<br/> 1] EMPLOYEE_PERSONAL_TITLE<br/> 2]
              EMPLOYEE_PERSONAL_FIRST_NAME<br/> 3]
              EMPLOYEE_PERSONAL_LAST_NAME<br/> 4]
              EMPLOYEE_PERSONAL_OTHER_NAME<br/> 5] EMPLOYEE_PERSONAL_KNOWN_AS<br/>
              6] EMPLOYEE_PERSONAL_EMAIL<br/> 7] EMPLOYEE_PERSONAL_GENDER<br/> 8]
              EMPLOYEE_PERSONAL_DATE_OF_BIRTH<br/> 9]
              EMPLOYEE_PERSONAL_START_DATE<br/> 10]
              EMPLOYEE_PERSONAL_REPORTS_TO<br/> 11]
              EMPLOYEE_PERSONAL_JOB_ROLE<br/> 12] EMPLOYEE_PERSONAL_LOCATION<br/>
              13] EMPLOYEE_PERSONAL_DEPARTMENT<br/> 14]
              EMPLOYEE_PERSONAL_UNIQUE_ID<br/> 15]
              EMPLOYEE_PERSONAL_NATIONAL_INSURANCE_NUMBER<br/> 16]
              EMPLOYEE_PERSONAL_NATIONALITY<br/> 17]
              EMPLOYEE_PERSONAL_EMPLOYMENT_TYPE<br/> 18]
              EMPLOYEE_EMPLOYMENT_PROBATION_END_DATE<br/> 19]
              EMPLOYEE_EMPLOYMENT_NOTICE_PERIOD<br/> 20]
              EMPLOYEE_EMPLOYMENT_METHOD_OF_RECRUITMENT<br/> 21]
              EMPLOYEE_EMPLOYMENT_RECRUITMENT_COST<br/> 22]
              EMPLOYEE_CONTACT_INFORMATION_POST_CODE<br/> 23]
              EMPLOYEE_CONTACT_INFORMATION_ADDRESS<br/> 24]
              EMPLOYEE_CONTACT_INFORMATION_WORK_PHONE<br/> 25]
              EMPLOYEE_CONTACT_INFORMATION_PERSONAL_PHONE<br/> 26]
              EMPLOYEE_CONTACT_INFORMATION_BANK_NAME<br/> 27]
              EMPLOYEE_CONTACT_INFORMATION_BANK_CODE<br/> 28]
              EMPLOYEE_CONTACT_INFORMATION_ACCOUNT_NUMBER<br/>
              29]EMPLOYEE_CONTACT_INFORMATION_OTHER_ACCOUNT_INFORMATION<br/> 30]
              EMPLOYEE_CONTACT_INFORMATION_ACCOUNT_NAME<br/> 31]
              EMPLOYEE_CONTACT_INFORMATION_BANK_ADDRESS
            allOf:
              - $ref: '#/components/schemas/FieldName'
      GetQueryResultParameter:
        type: object
        required:
          - APIKey
          - Action
          - QueryName
        properties:
          APIKey:
            description: APIKey for Query api to GetQueryResult
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetQueryResult
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetQueryResult
          QueryName:
            description: QueryName for get query result
            allOf:
              - $ref: '#/components/schemas/QueryName'
      GetQueryResultByQueryNameParameter:
        type: object
        required:
          - APIKey
          - Action
          - QueryName
        properties:
          APIKey:
            description: APIKey for query api to GetQueryResultByQueryName
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetQueryResultByQueryName
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetQueryResultByQueryName
          QueryName:
            description: QueryName get query result by query name
            allOf:
              - $ref: '#/components/schemas/QueryName'
      AddNewCustomScreenTransactionParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ScreenId
          - CustomColumns
          - AddFiles
        properties:
          APIKey:
            description: >-
              APIKey for employee custom screen api to
              AddNewCustomScreenTransaction
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewCustomScreenTransaction
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewCustomScreenTransaction
          EmployeeId:
            description: EmployeeId for add new custom screen transaction
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ScreenId:
            description: ScreenId for add new custom screen transaction
            allOf:
              - $ref: '#/components/schemas/ScreenId'
          CustomColumns:
            description: CustomColumns for add new custom screen transaction
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeCustomScreenObject'
          AddFiles:
            description: AddFiles for add new custom screen transaction
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeCustomScreenObject'
      UpdateBenefitParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Benefit
          - BenefitId
          - DateAwarded
          - RecoverOnTermination
        properties:
          APIKey:
            description: APIKey for employee api to UpdateBenefit
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateBenefit
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateBenefit
          EmployeeId:
            description: Employee Id for update benefit
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Benefit:
            description: Benefit for update benefit
            allOf:
              - $ref: '#/components/schemas/Benefit'
          BenefitId:
            description: Benefit id for update benefit
            allOf:
              - $ref: '#/components/schemas/BenefitId'
          DateAwarded:
            description: DateAwarded for update benefit
            allOf:
              - $ref: '#/components/schemas/DateAwarded'
          ExpiryDate:
            description: ExpiryDate for update benefit
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Value:
            description: Value for update benefit
            allOf:
              - $ref: '#/components/schemas/Value'
          RecoverOnTermination:
            description: RecoverOnTermination for update benefit
            allOf:
              - $ref: '#/components/schemas/RecoverOnTermination'
          CustomColumns:
            description: CustomColumns contain column name and column value
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForAddNewBenefit'
          AddFiles:
            description: AddFiles contain file info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForUpdateBenefit'
      AddNewBenefitParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Benefit
          - DateAwarded
          - ExpiryDate
          - RecoverOnTermination
          - CustomColumns
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to AddNewBenefit
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewBenefit
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewBenefit
          EmployeeId:
            description: Employee Id for add new benefit
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Benefit:
            description: Benefit for add new benefit
            allOf:
              - $ref: '#/components/schemas/Benefit'
          DateAwarded:
            description: DateAwarded for add new benefit
            allOf:
              - $ref: '#/components/schemas/DateAwarded'
          ExpiryDate:
            description: ExpiryDate for add new benefit
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Value:
            description: Value for add new benefit
            allOf:
              - $ref: '#/components/schemas/Value'
          Comments:
            description: Comments for add new benefit
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          RecoverOnTermination:
            description: RecoverOnTermination for add new benefit
            allOf:
              - $ref: '#/components/schemas/RecoverOnTermination'
          CustomColumns:
            description: CustomColumns value
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForAddNewBenefit'
          AddFiles:
            description: AddFiles contain file info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAddNewBenefit'
      CustomColumnsArrayForAddNewBenefit:
        type: array
        items:
          required:
            - ColumnName
          type: object
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: abc
            ColumnValue:
              description: ColumnValue value
              type: string
              example: ''
      AddFilesArrayForUpdateBenefit:
        type: array
        items:
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              maxLength: '100'
              example: 123.png
            File:
              description: File base64 value
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              maxLength: '256'
              example: dsadsadasdasd
            DocumentCategory:
              type: string
              description: Document category value
              maxLength: '100'
              example: catagory
            SignatureRequired:
              description: Signature Required value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
      AddFilesArrayForAddNewBenefit:
        type: array
        items:
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              maxLength: '100'
              example: 123.png
            File:
              description: File base64 value
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              maxLength: '256'
              example: dsadsadasdasd
            DocumentCategory:
              type: string
              description: Document category value
              maxLength: '100'
              example: catagory
            SignatureRequired:
              description: Signature required value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
      EmailInboxParameter:
        type: object
        required:
          - Action
          - EmailFrom
          - EmailTo
          - EmailSubject
        properties:
          Action:
            description: Action name = EmailInbox
            allOf:
              - $ref: '#/components/schemas/Action'
            example: EmailInbox
          EmailFrom:
            description: Email From for Email Inbox
            allOf:
              - $ref: '#/components/schemas/EmailFrom'
          EmailTo:
            description: Email To for Email Inbox
            allOf:
              - $ref: '#/components/schemas/EmailToForEmailInbox'
          EmailCc:
            description: Email Cc for Email Inbox
            allOf:
              - $ref: '#/components/schemas/EmailCcForEmailInbox'
          EmailBcc:
            description: Email Bcc for Email Inbox
            allOf:
              - $ref: '#/components/schemas/EmailBccForEmailInbox'
          EmailSubject:
            description: Email Subject for Email Inbox
            allOf:
              - $ref: '#/components/schemas/EmailSubject'
          Attachment:
            description: Attachment for Email Inbox
            allOf:
              - $ref: '#/components/schemas/AttachmentForEmailInbox'
      AddNewRightToWorkDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DocumentName
          - File
        properties:
          APIKey:
            description: APIKey for right to work  api to addrighttoworkdetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = addrighttoworkdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: addrighttoworkdetail
          EmployeeId:
            description: Employee id for add right to work detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DocumentType:
            description: Document type for add right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentType'
          DocumentId:
            description: Document Id for add right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentId'
          ValidFrom:
            description: Valid From for add right to work detail
            allOf:
              - $ref: '#/components/schemas/ValidFrom'
          ValidTo:
            description: Valid To for add right to work detail
            allOf:
              - $ref: '#/components/schemas/ValidTo'
          Duration:
            description: Duration for add right to work detail
            allOf:
              - $ref: '#/components/schemas/Duration'
          DocumentName:
            description: Duration for add right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          File:
            description: File for add right to work detail
            allOf:
              - $ref: '#/components/schemas/File'
          Comments:
            description: Comments for add right to work detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      GetRightToWorkDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for right to work api to GetRightToWorkDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = getrighttoworkdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: getrighttoworkdetail
          EmployeeId:
            description: Employee id to get employee detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      updaterighttoworkdetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - RightToWorkTxnId
          - DocumentName
          - File
        properties:
          APIKey:
            description: APIKey for right to work api to updaterighttoworkdetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = updaterighttoworkdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: updaterighttoworkdetail
          EmployeeId:
            description: Employee id for update right to work detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          RightToWorkTxnId:
            description: Right To Work Txn Id for update right to work detail
            allOf:
              - $ref: '#/components/schemas/RightToWorkTxnId'
          DocumentType:
            description: Document Type for update right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentType'
          DocumentId:
            description: Document Id for update right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentId'
          ValidFrom:
            description: Valid From for update right to work detail
            allOf:
              - $ref: '#/components/schemas/ValidFrom'
          ValidTo:
            description: Valid To for update right to work detail
            allOf:
              - $ref: '#/components/schemas/ValidTo'
          Duration:
            description: Duration for update right to work detail
            allOf:
              - $ref: '#/components/schemas/Duration'
          DocumentName:
            description: Document Name for update right to work detail
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          File:
            description: File for update right to work detail
            allOf:
              - $ref: '#/components/schemas/File'
          Comments:
            description: Comments for update right to work detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      deleterighttoworkdetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - RightToWorkTxnId
        properties:
          APIKey:
            description: APIKey for right to work api to deleterighttoworkdetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = deleterighttoworkdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: deleterighttoworkdetail
          EmployeeId:
            description: Employee id for delete right to work detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          RightToWorkTxnId:
            description: Right To Work Txn Id for delete right to work detail
            allOf:
              - $ref: '#/components/schemas/RightToWorkTxnId'
      GetBackgroundCheckDetailByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: >-
              APIKey for background check api to Get Background Check Detail By
              EmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetBackgroundCheckDetailByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetBackgroundCheckDetailByEmployeeId
          EmployeeId:
            description: Employee id to Get Background Check Detail By EmployeeId
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      AddBackgroundCheckDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TypeOfCheck
          - DocumentName
          - File
        properties:
          APIKey:
            description: APIKey for background check api to AddBackgroundCheckDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddBackgroundCheckDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddBackgroundCheckDetail
          EmployeeId:
            description: Employee id for Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TypeOfCheck:
            description: Type Of Check for Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/TypeOfCheck'
          DateCompleted:
            description: Date Completed for Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/DateCompleted'
          ExpiryDate:
            description: Expiry Date for  Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          DocumentName:
            description: Document Name for  Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          File:
            description: File for Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/File'
          Comments:
            description: Comments for Add Background Check Detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '1024'
      UpdateBackgroundCheckDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - BackgroundCheckTxnId
          - TypeOfCheck
          - DocumentName
          - File
        properties:
          APIKey:
            description: APIKey for background check api to UpdateBackgroundCheckDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateBackgroundCheckDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateBackgroundCheckDetail
          EmployeeId:
            description: Employee id for Update Background Check Detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          BackgroundCheckTxnId:
            description: Background Check Txn Id  for update background check detail
            allOf:
              - $ref: '#/components/schemas/BackgroundCheckTxnId'
          TypeOfCheck:
            description: Type Of Check for update background check detail
            allOf:
              - $ref: '#/components/schemas/TypeOfCheck'
          DateCompleted:
            description: Date Completed for update background check detail
            allOf:
              - $ref: '#/components/schemas/DateCompleted'
          ExpiryDate:
            description: Expiry Date for update background check detail
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          DocumentName:
            description: Document Name for update background check detail
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          File:
            description: File for update background check detail
            allOf:
              - $ref: '#/components/schemas/File'
          Comments:
            description: Comments for update background check detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '1024'
      DeleteBackgroundCheckDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - BackgroundCheckTxnId
        properties:
          APIKey:
            description: APIKey for background check api to  delete background check detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteBackgroundCheckDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteBackgroundCheckDetail
          EmployeeId:
            description: Employee id for delete background check detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          BackgroundCheckTxnId:
            description: Background Check Txn Id for delete background check detail
            allOf:
              - $ref: '#/components/schemas/BackgroundCheckTxnId'
      getothereventdetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for other event api to getothereventdetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = getothereventdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: getothereventdetail
          EmployeeId:
            description: Employee id to get other event detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Start Date to get other event detail
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End Date to get other event detail
            allOf:
              - $ref: '#/components/schemas/EndDate'
      getotherevententitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for other event api to getotherevententitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = getotherevententitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: getotherevententitlement
          EmployeeId:
            description: Employee id to get other event entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      DeleteOtherEventParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - OtherLeaveTxnId
        properties:
          APIKey:
            description: APIKey for other event api to DeleteOtherEvent
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteOtherEvent
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteOtherEvent
          EmployeeId:
            description: Employee id for Delete Other Event
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          OtherLeaveTxnId:
            description: Other Leave Txn Id for Delete Other Event
            allOf:
              - $ref: '#/components/schemas/OtherLeaveTxnId'
      addothereventleaveParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DurationType
          - Other Event Reason
          - StartDate
          - EndDate
          - DurationInDays
        properties:
          APIKey:
            description: APIKey for other event api to add other event leave
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = addothereventleave
            allOf:
              - $ref: '#/components/schemas/Action'
            example: addothereventleave
          EmployeeId:
            description: Employee id for add other event leave
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DurationType:
            description: Duration type for add other event leave
            allOf:
              - $ref: '#/components/schemas/DurationType'
          Other Event Reason:
            description: Other event reason for add other event leave
            allOf:
              - $ref: '#/components/schemas/OtherEventReason'
          StartDate:
            description: Start date for add other event leave
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for add other event leave
            allOf:
              - $ref: '#/components/schemas/EndDate'
          StartTime:
            description: Start time for add other event leave
            allOf:
              - $ref: '#/components/schemas/StartTime'
          EndTime:
            description: End time for add other event leave
            allOf:
              - $ref: '#/components/schemas/EndTime'
          DurationInDays:
            description: Duration in days for add other event leave
            allOf:
              - $ref: '#/components/schemas/DurationInDays'
          Comments:
            description: Comments for add other event leave
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          AddFiles:
            description: Add files for add other event leave
            allOf:
              - $ref: '#/components/schemas/AddFilesForaddothereventleave'
      updateothereventleaveParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - OtherEventTxnId
          - DurationType
          - Other Event Reason
          - StartDate
          - EndDate
          - DurationInDays
        properties:
          APIKey:
            description: APIKey for other event api to update other event leave
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = updateothereventleave
            allOf:
              - $ref: '#/components/schemas/Action'
            example: updateothereventleave
          EmployeeId:
            description: Employee id for update other event leave
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          OtherEventTxnId:
            description: Other event txn Id for update other event leave
            allOf:
              - $ref: '#/components/schemas/OtherEventTxnId'
          DurationType:
            description: Duration Type for update other event leave
            allOf:
              - $ref: '#/components/schemas/DurationType'
          Other Event Reason:
            description: Other event reason for update other event leave
            allOf:
              - $ref: '#/components/schemas/OtherEventReason'
          StartDate:
            description: Start date for update other event leave
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for update other event leave
            allOf:
              - $ref: '#/components/schemas/EndDate'
          StartTime:
            description: Start Time for update other event leave
            allOf:
              - $ref: '#/components/schemas/StartTime'
          EndTime:
            description: End time for update other event leave
            allOf:
              - $ref: '#/components/schemas/EndTime'
          DurationInDays:
            description: Duration in days for update other event leave
            allOf:
              - $ref: '#/components/schemas/DurationInDays'
          Comments:
            description: Comments for update other event leave
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          AddFiles:
            description: Add Files for update other event leave
            allOf:
              - $ref: '#/components/schemas/AddFilesForupdateothereventleave'
      addotherevententitlementParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Other Event Reason
          - Entitlement RecordedIn
          - ThisYearEntitlement
          - NextYearEntitlement
        properties:
          APIKey:
            description: APIKey for other event api to addotherevententitlement
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = addotherevententitlement
            allOf:
              - $ref: '#/components/schemas/Action'
            example: addotherevententitlement
          EmployeeId:
            description: Employee id for add other event entitlement
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Other Event Reason:
            description: Other event reason for add other event entitlement
            allOf:
              - $ref: '#/components/schemas/OtherEventReason'
          Entitlement RecordedIn:
            description: Entitlement recorded in for add other event entitlement
            allOf:
              - $ref: '#/components/schemas/EntitlementRecordedIn'
          ThisYearEntitlement:
            description: This year entitlement for add other event entitlement
            allOf:
              - $ref: '#/components/schemas/ThisYearEntitlement'
          NextYearEntitlement:
            description: Next year entitlement add other event entitlement
            allOf:
              - $ref: '#/components/schemas/NextYearEntitlement'
      GetDrivingLicenseByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for get driving license by EmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetDrivingLicenseByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetDrivingLicenseByEmployeeId
          EmployeeId:
            description: Employeeid for get driving license by EmployeeId
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetDrivingLicenseByDrivingIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DrivingId
        properties:
          APIKey:
            description: APIKey for get driving license by drivingid
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetDrivingLicenseByDrivingId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetDrivingLicenseByDrivingId
          EmployeeId:
            description: EmployeeId for get driving license by drivingid
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DrivingId:
            description: Drivingid for get driving license by drivingid
            allOf:
              - $ref: '#/components/schemas/DrivingId'
      AddNewDrivingLicenseParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - LicenseNumber
        properties:
          APIKey:
            description: APIKey for add new driving license
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewDrivingLicense
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewDrivingLicense
          EmployeeId:
            description: EmployeeId for add new driving license
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          LicenseNumber:
            description: License number for add new driving license
            allOf:
              - $ref: '#/components/schemas/LicenseNumber'
          LicenseType:
            description: License type for add new driving license
            allOf:
              - $ref: '#/components/schemas/LicenseType'
          ExpiryDate:
            description: Expirydate for add new driving license
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Comments:
            description: Comments for add new driving license
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: Custom columns for add new driving license
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeDriving'
          AddFiles:
            description: Add files for add new driving license
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeDriving'
      UpdateDrivingLicenseParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DrivingId
          - LicenseNumber
        properties:
          APIKey:
            description: APIKey for update driving license
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateDrivingLicense
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateDrivingLicense
          EmployeeId:
            description: EmployeeId for update driving license
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DrivingId:
            description: License number for update driving license
            allOf:
              - $ref: '#/components/schemas/DrivingId'
          LicenseNumber:
            description: License number for update driving license
            allOf:
              - $ref: '#/components/schemas/LicenseNumber'
          LicenseType:
            description: License type for update driving license
            allOf:
              - $ref: '#/components/schemas/LicenseType'
          ExpiryDate:
            description: Expiry date for update driving license
            allOf:
              - $ref: '#/components/schemas/ExpiryDate'
          Comments:
            description: Comments for update driving license
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: Custom columns for update driving license
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeDriving'
          AddFiles:
            description: Add files for update driving license
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeDriving'
      DeleteDrivingLicenseParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DrivingId
        properties:
          APIKey:
            description: APIKey for delete driving license
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteDrivingLicense
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteDrivingLicense
          EmployeeId:
            description: Employeeid for delete driving license
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DrivingId:
            description: Drivingid for delete driving license
            allOf:
              - $ref: '#/components/schemas/DrivingId'
      AddTrainingDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TrainingType
          - Description
          - Importance
          - Status
          - Progress
        properties:
          APIKey:
            description: APIKey for add training detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddTrainingDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: addtrainingdetail
          EmployeeId:
            description: Employee id for add training detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TrainingType:
            description: Training type for add training detail
            allOf:
              - $ref: '#/components/schemas/TrainingType'
          Description:
            description: Description for add training detail
            allOf:
              - $ref: '#/components/schemas/Description'
            maxLength: '512'
          Importance:
            description: Importance for add training detail
            allOf:
              - $ref: '#/components/schemas/Importance'
          Status:
            description: Status for add training detail
            allOf:
              - $ref: '#/components/schemas/Status'
          InProgress:
            description: InProgress for add training detail
            allOf:
              - $ref: '#/components/schemas/InProgress'
          TrainingDate:
            description: Training date for add training detail
            allOf:
              - $ref: '#/components/schemas/TrainingDate'
          TrainindEndDate:
            description: Training end date for add training detail
            allOf:
              - $ref: '#/components/schemas/TrainingEndDate'
          TrainingExpiryDate:
            description: Training expiry date for add training detail
            allOf:
              - $ref: '#/components/schemas/TrainingExpiryDate'
          Cost:
            description: Cost for add training detail
            allOf:
              - $ref: '#/components/schemas/Cost'
          Provider:
            description: Provider for add training detail
            allOf:
              - $ref: '#/components/schemas/Provider'
          Notes:
            description: Notes for add training detail
            allOf:
              - $ref: '#/components/schemas/Notes'
            maxLength: '256'
          CustomColumns:
            description: Custom columns for add training detail
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeTraining'
          AddFiles:
            description: Add files for add training detail
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeTraining'
      UpdateTrainingDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TrainingId
          - TrainingType
          - Description
          - Importance
          - Status
          - Progress
        properties:
          APIKey:
            description: APIKey for update training detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = updatetrainingdetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: updatetrainingdetail
          EmployeeId:
            description: Employee id for update training detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TrainingType:
            description: Training type for update training detail
            allOf:
              - $ref: '#/components/schemas/TrainingType'
          Description:
            description: Description for update training detail
            allOf:
              - $ref: '#/components/schemas/Description'
            maxLength: '512'
          Importance:
            description: Importance for update training detail
            allOf:
              - $ref: '#/components/schemas/Importance'
          Status:
            description: Status for update training detail
            allOf:
              - $ref: '#/components/schemas/Status'
          InProgress:
            description: InProgress for update training detail
            allOf:
              - $ref: '#/components/schemas/InProgress'
          TrainingDate:
            description: Training date for update training detail
            allOf:
              - $ref: '#/components/schemas/TrainingDate'
          TrainindEndDate:
            description: Training end date for update training detail
            allOf:
              - $ref: '#/components/schemas/TrainingEndDate'
          TrainingExpiryDate:
            description: Training expiry date for update training detail
            allOf:
              - $ref: '#/components/schemas/TrainingExpiryDate'
          Cost:
            description: Cost for update training detail
            allOf:
              - $ref: '#/components/schemas/Cost'
          Provider:
            description: Provider for update training detail
            allOf:
              - $ref: '#/components/schemas/Provider'
          Notes:
            description: Notes for update training detail
            allOf:
              - $ref: '#/components/schemas/Notes'
            maxLength: '256'
          CustomColumns:
            description: Custom columns for update training detail
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeTraining'
          AddFiles:
            description: Add files for update training detail
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeTraining'
      GetTrainingDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for get training detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetTrainingDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetTrainingDetail
          EmployeeId:
            description: Employeeid for get training detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetQualificationByQualificationIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - QualificationId
        properties:
          APIKey:
            description: APIkey for get qualification by qualificationId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetQualificationByQualificationId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetQualificationByQualificationId
          EmployeeId:
            description: EmployeeId for get qualification by qualificationId
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          QualificationId:
            description: QualificationId for get qualification by qualificationId
            allOf:
              - $ref: '#/components/schemas/QualificationId'
      GetQualificationByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: API key for get qualification by employeeid
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetQualificationByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetQualificationByEmployeeId
          EmployeeId:
            description: Employeeid for get qualification by employeeid
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      AddNewVehicleDetailDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Registration
        properties:
          APIKey:
            description: APIKey to add employee's new vehicle detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewVehicleDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewVehicleDetail
          EmployeeId:
            description: Employee id to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Registration:
            description: Registration to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/Registration'
            maxLength: '100'
          Make:
            description: Make to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/Make'
            maxLength: '100'
          Model:
            description: Model to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/Model'
            maxLength: '100'
          Colour:
            description: Colour to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/Colour'
            maxLength: '50'
          EngineSize:
            description: EngineSize to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/EngineSize'
            maxLength: '50'
          FuelType:
            description: FuelType to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/FuelType'
            maxLength: '50'
          InsuranceCompany:
            description: InsuranceCompany to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/InsuranceCompany'
            maxLength: '100'
          PolicyNumber:
            description: PolicyNumber to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/PolicyNumber'
            maxLength: '100'
          MOTExpiryDate:
            description: MOTExpiryDate to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/MOTExpiryDate'
          InsuranceExpiryDate:
            description: InsuranceExpiryDate to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/InsuranceExpiryDate'
          Comments:
            description: Comments to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: CustomColumns to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeVehicleAddArray'
          AddFiles:
            description: AddFiles to add employee's new vehicle detail
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeVehicleAddArray'
      UpdateVehicleDetailDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Registration
        properties:
          APIKey:
            description: APIKey to update employee vehicle detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateVehicleDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateVehicleDetail
          EmployeeId:
            description: Employee id to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Registration:
            description: Registration to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/Registration'
            maxLength: '100'
          Make:
            description: Make to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/Make'
            maxLength: '100'
          Model:
            description: Model to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/Model'
            maxLength: '100'
          Colour:
            description: Colour to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/Colour'
            maxLength: '50'
          EngineSize:
            description: EngineSize to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/EngineSize'
            maxLength: '50'
          FuelType:
            description: FuelType to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/FuelType'
            maxLength: '50'
          InsuranceCompany:
            description: InsuranceCompany to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/InsuranceCompany'
            maxLength: '100'
          PolicyNumber:
            description: PolicyNumber to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/PolicyNumber'
            maxLength: '100'
          MOTExpiryDate:
            description: MOTExpiryDate to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/MOTExpiryDate'
          InsuranceExpiryDate:
            description: InsuranceExpiryDate to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/InsuranceExpiryDate'
          Comments:
            description: Comments to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
          CustomColumns:
            description: CustomColumns to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/CustomColumnsForEmployeeVehicleUpdateArray'
          AddFiles:
            description: AddFiles to update employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/AddFilesForEmployeeVehicleUpdateArray'
      DeleteVehicleDetailDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - VehicleId
        properties:
          APIKey:
            description: APIKey to delete employee vehicle detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteVehicleDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteVehicleDetail
          EmployeeId:
            description: Employee id to delete employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          VehicleId:
            description: Vehicle Id to delete employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/VehicleId'
      GetVehicleDetailByVehicleIdDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - VehicleId
        properties:
          APIKey:
            description: APIKey to get employee's vehicle detail by vehicle id
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByVehicleDetailId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByVehicleDetailId
          EmployeeId:
            description: Employee id to get employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          VehicleId:
            description: Vehicle Id to get employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/VehicleId'
      GetVehicleDetailByEmployeeIdDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey to get employee's vehicle detail by employee id
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetVehicleByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetVehicleByEmployeeId
          EmployeeId:
            description: Employee id to get employee's vehicle detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      CustomColumnsForGetEmployeeDriving:
        description: ' CustomColumns Result Array'
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: Columnname value
              type: string
              example: Vehicle 1
            ColumnValue:
              description: Columnvalue value
              type: string
              example: ABC
      AddFilesForGetEmployeeDriving:
        description: AddFiles Result Array
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: Document name value
              type: string
              example: my.txt
            FileUrl:
              description: FileUrl value
              type: string
              format: url
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
            Descriptions:
              description: Descriptions value
              type: string
              example: Descriptions goes here
            DocumentCategory:
              description: Document category value
              type: string
              example: Custom Catagory
            SignatureRequired:
              description: Signature required value
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      InvalidError:
        allOf:
          - $ref: '#/components/schemas/Error'
          - type: object
            properties:
              details:
                type: array
                items:
                  type: string
      ResourceId:
        type: string
        description: Resource Id. Defaults to UUID v4
        maxLength: 50
        example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
      APIKey:
        type: string
        description: The ApiKey. Defaults to UUID v4
        maxLength: 50
        example: 5127e153-2c80-492b-a9e4-fb3e50af61a8
      ActionId:
        type: string
        description: Action default value
        example: UpdateEmployeeId
      Action:
        type: string
        description: Action default value
      ActionForGetAllEmployeeDetail:
        type: string
        description: Action default value
        example: GetAllEmployeeDetail
      ReasonForChange:
        type: string
        description: 'ReasonForChange default value '
        maxLength: 256
        example: Reason for change
      OldEmployeeId:
        type: string
        description: 'Old Employee Id default value '
        maxLength: 15
        example: PW1
      NewEmployeeId:
        type: string
        description: 'New Employee Id default value '
        maxLength: 15
        example: PW2
      EmailAddress:
        type: string
        description: 'EmailAddress default value '
        format: email
        maxLength: 320
        example: ranjit@peoplehr.com
      Password:
        type: string
        description: 'Password default value '
        format: password
        maxLength: 88
        example: Password2
      EmployeeId:
        type: string
        description: 'EmployeeId default value '
        maxLength: 15
        example: PW180
      IncludeLeavers:
        type: boolean
        description: 'IncludeLeavers Default value '
        example: 'false'
        enum:
          - 'false'
          - 'true'
      ReasonforLeaving:
        type: string
        description: 'ReasonforLeaving default value '
        example: Reason for leaving employee
      AdditionalComments:
        type: string
        description: 'AdditionalComments default value '
        maxLength: 256
        example: Additional comments
      FinalEmploymentDate:
        type: string
        description: 'FinalEmploymentDate default value '
        format: date
        example: '2014-01-02'
      FinalWorkingDate:
        type: string
        description: 'FinalWorkingDate default value '
        example: '2014-01-02'
      MarkasLeaverImmediately:
        type: boolean
        description: 'MarkasLeaverImmediately default value '
        example: 'false'
      ReportsTo:
        type: string
        description: 'ReportsTo default value '
        format: email
        maxLength: 256
        example: firstname.lastname@itgurusssoftware.com
      ReEmployable:
        type: string
        description: 'ReEmployable default value '
        example: 'No'
      SupportingComments:
        type: string
        description: 'SupportingComments default value '
        maxLength: 256
        example: xyzfgfdgd
      EmployeeImageName:
        type: string
        description: 'EmployeeImageName default value '
        example: xyz.png
      EmployeeImage:
        type: string
        description: 'EmployeeImage default value '
        example: Pass base64 string
      Title:
        type: string
        description: 'Title default value '
        maxLength: 100
        example: Mr.
      FirstName:
        type: string
        description: 'First name default value '
        maxLength: 50
        example: Ranjit
      LastName:
        type: string
        description: 'Last name default value '
        maxLength: 50
        example: Johnson
      Email:
        type: string
        format: email
        description: 'Email default value '
        maxLength: 254
        example: vaibhavid@itgurussoftware.com
      EmailId2:
        type: object
        required:
          - Email
        properties:
          Email:
            description: Email
            type: string
            format: email
      Gender:
        type: boolean
        description: 'Gender default value '
        enum:
          - Female
          - Male
        example: female
      DateOfBirth:
        type: string
        description: 'DateOfBirth default value '
        format: date
        example: '1999-01-02'
      StartDate:
        type: string
        description: 'StartDate default value '
        format: date
        example: '2016-07-27'
      EndDate:
        type: string
        description: 'StartDate default value '
        format: date
        example: '2017-07-27'
      ReportsToEffectiveDate:
        type: string
        description: 'ReportsToEffectiveDate default value '
        format: date
        example: '2014-01-01'
      Company:
        type: string
        description: 'Company default value '
        maxLength: 100
        example: Company name
      CompanyEffectiveDate:
        type: string
        description: 'CompanyEffectiveDate default value '
        format: date
        example: '2014-01-01'
      JobRole:
        type: string
        description: 'JobRole default value '
        maxLength: 100
        example: Software Enginner
      JobRoleEffectiveDate:
        type: string
        description: 'JobRoleEffectiveDate default value '
        format: date
        example: '2014-01-01'
      Location:
        type: string
        description: 'Location default value '
        example: Mumbai
      LocationEffectiveDate:
        type: string
        description: 'LocationEffectiveDate default value '
        format: date
        example: '2014-01-01'
      Department:
        type: string
        description: 'Department default value '
        example: IT
      DepartmentEffectiveDate:
        type: string
        description: 'DepartmentEffectiveDate default value '
        format: date
        example: '2014-01-01'
      NationalInsuranceNumber:
        type: string
        description: 'NationalInsuranceNumber default value '
        maxLength: 30
        example: AAAAAAAAAAAAAAAAAAA
      Nationality:
        type: string
        description: 'Nationality default value '
        maxLength: 100
        example: Indian
      EmploymentType:
        type: string
        description: 'EmploymentType default value '
        maxLength: 100
        example: Full time
      EntitlementThisYear:
        type: string
        format: decimal
        description: 'Entitlement this year default value '
        example: '12.50'
      EntitlementNextYear:
        type: string
        format: decimal
        description: 'Entitlement next year default value '
        example: '0'
      EmploymentTypeEffectiveDate:
        type: string
        description: 'EmploymentTypeEffectiveDate default value '
        format: date
        example: '2014-01-01'
      Address:
        type: string
        description: 'Address default value '
        maxLength: '512'
        example: Shiv Colony, Thergaon - Pune
      PersonalPhoneNumber:
        type: string
        description: 'PersonalPhoneNumber default value '
        maxLength: 80
        example: '999890988772'
      PayrollCompany:
        type: string
        description: 'Payroll Company default value '
        maxLength: 200
        example: 'Your payroll company''s name '
      PayrollID:
        type: string
        description: 'Payroll ID default value '
        maxLength: 200
        example: Your Payroll ID
      RotaID:
        type: string
        description: 'RotaID default value '
        maxLength: 200
        example: Your Rota ID
      CRMID:
        type: string
        description: 'CRM ID default value '
        maxLength: 200
        example: Your CRM ID
      ATSID:
        type: string
        description: 'ATS ID default value '
        maxLength: 200
        example: Your ATS ID
      PerformanceID:
        type: string
        description: 'Performance ID default value '
        maxLength: 200
        example: Your Performance ID
      BenefitsID:
        type: string
        description: 'Benefits ID default value '
        maxLength: 200
        example: Your Benefits ID
      System1ID:
        type: string
        description: 'System1 ID default value '
        maxLength: 200
        example: Your System One ID
      System2ID:
        type: string
        description: 'System2 ID default value '
        maxLength: 200
        example: Your System Two ID
      System3ID:
        type: string
        description: 'System3 ID default value '
        maxLength: 200
        example: Your System Three ID
      APIColumn1:
        type: string
        description: 'APIColumn1 default value '
        example: APIColumn1 Value
      APIColumn2:
        type: string
        description: 'APIColumn2 default value '
        example: APIColumn2 Value
      APIColumn3:
        type: string
        description: 'APIColumn3 default value '
        example: APIColumn3 Value
      APIColumn4:
        type: string
        description: 'APIColumn4 default value '
        example: APIColumn4 Value
      APIColumn5:
        type: string
        description: 'APIColumn5 default value '
        example: APIColumn5 Value
      PersonalEmail:
        type: string
        description: 'PersonalEmail default value '
        format: email
        maxLength: 254
        example: abc@itgurussoftware.com
      MethodOfRecruitment:
        type: string
        description: 'MethodOfRecruitment default value '
        maxLength: 512
        example: Method Of Recruitment
      DisplayValue:
        type: string
        description: 'DisplayValue default value '
      LeavingDate:
        type: string
        description: 'LeavingDate default value '
        example: '2017-07-07'
      EmployeeImagePath:
        type: string
        description: 'Employee Image default value '
        example: 'don''t know please check '
      DurationType:
        type: byte
        description: 'Duration type default value '
        example: '1'
      DurationInDays:
        type: integer
        format: decimal
        description: 'Duration in days default value '
        example: '1'
      DurationInMinutes:
        type: integer
        description: 'Duration in minutes default value '
        example: '450'
      PartOfDay:
        type: string
        description: 'Part of day default value '
        enum:
          - AM
          - PM
        example: AM
      IsIncludeHistory:
        type: boolean
        description: 'IsIncludeHistory Default value '
        example: 'True'
      EffectiveFrom:
        type: string
        description: 'EffectiveFrom default value '
        example: '2014-01-01'
        format: date
      SalaryType:
        type: string
        description: 'SalaryType default value '
        enum:
          - Annual
          - Hourly
          - Daily
          - Weekly
          - Monthly
        example: Annual
      PaymentFrequency:
        type: string
        description: 'PaymentFrequency default value '
        enum:
          - Monthly
          - Fortnightly
          - Weekly
          - Four Weekly
          - Daily
          - Two Weekly
        example: Monthly
      SalaryAmount:
        type: integer
        description: 'SalaryAmount default value '
        example: '1000'
      CurrencyCode:
        type: string
        description: 'CurrencyCode default value '
        maxLength: '100'
        example: ASD
      ChangeReason:
        type: string
        description: 'ChangeReason default value '
        maxLength: '100'
        example: New Reason1
      Comments:
        type: string
        description: 'Comments default value '
        example: Comments goes here
      OldStartDate:
        type: string
        description: 'Old start date default value '
        format: date
        example: '2017-07-18'
      OldEndDate:
        type: string
        description: 'Old end date default value '
        format: date
        example: '2017-07-18'
      Category:
        type: string
        description: 'Category default value '
        maxLength: '100'
        example: Catagory
      EmployeeAccess:
        description: 'EmployeeAccess default value '
        type: boolean
        enum:
          - 'false'
          - 'true'
        example: 'true'
      ManagerAccess:
        description: 'ManagerAccess default value '
        type: boolean
        enum:
          - 'false'
          - 'true'
        example: 'true'
      SignatureRequired:
        description: 'SignatureRequired default value '
        type: boolean
        enum:
          - 'false'
          - 'true'
        example: 'true'
      DocumentName:
        type: string
        description: DocumentName value
        maxLength: '100'
        example: Abc.txt
      Description:
        type: string
        description: Description value
        maxLength: '256'
        example: Description here
      File:
        type: string
        description: File value
        example: Pass base64 string
      DocumentId:
        type: long integer
        description: 'DocumentId default value '
        example: '1'
      PartOfDayForUpdateAbsence:
        type: boolean
        description: 'Part of day value '
        enum:
          - AM
          - PM
        example: AM
      Reason:
        type: string
        description: 'Duration Default value '
        maxLength: '100'
        example: Resaon here
      PartOfDayForAddAbsence:
        type: string
        description: 'Part of day value '
        enum:
          - AM
          - PM
        example: AM
      Duration:
        type: integer
        description: 'Duration Default value '
        format: decimal
        example: '1.2'
      AbsencePaidStatus:
        type: byte
        description: 'AbsencePaidStatus default value '
        example: '1'
      EmergencyLeave:
        description: 'Emergency Leave default value '
        type: boolean
        enum:
          - 'false'
          - 'true'
        example: 'true'
      TimesheetDate:
        type: string
        format: date
        description: 'TimesheetDate default value '
        example: '2017-01-01'
      TimeIn1:
        type: string
        format: timespan
        example: '09:35'
      TimeIn2:
        type: string
        format: timespan
        description: TimeIn2 default value
        example: '09:45'
      TimeIn3:
        type: string
        format: timespan
        description: TimeIn3 default value
        example: '09:55'
      TimeIn4:
        type: string
        format: timespan
        description: TimeIn4 default value
        example: '10:00'
      TimeIn5:
        type: string
        format: timespan
        description: TimeIn5 default value
        example: '10:10'
      TimeIn6:
        type: string
        format: timespan
        description: TimeIn6 default value
        example: '10:30'
      TimeIn7:
        type: string
        format: timespan
        description: TimeIn7 default value
        example: '10:50'
      TimeIn8:
        type: string
        format: timespan
        description: TimeIn8 default value
        example: '11:10'
      TimeIn9:
        type: string
        format: timespan
        description: TimeIn9 default value
        example: '11:30'
      TimeIn10:
        type: string
        format: timespan
        description: TimeIn10 default value
        example: '11:50'
      TimeIn11:
        type: string
        format: timespan
        description: TimeIn11 default value
        example: '12:00'
      TimeIn12:
        type: string
        format: timespan
        description: TimeIn12 default value
        example: '12:30'
      TimeIn13:
        type: string
        format: timespan
        description: TimeIn13 default value
        example: '12:50'
      TimeIn14:
        type: string
        format: timespan
        description: TimeIn14 default value
        example: '3:00'
      TimeIn15:
        type: string
        format: timespan
        description: TimeIn15 default value
        example: '03:10'
      TimeOut1:
        type: string
        format: timespan
        description: TimeOut1 default value
        example: '04:00'
      TimeOut2:
        type: string
        format: timespan
        description: TimeOut2 default value
        example: '04:10'
      TimeOut3:
        type: string
        format: timespan
        description: TimeOut3 default value
        example: '04:20'
      TimeOut4:
        type: string
        format: timespan
        description: TimeOut4 default value
        example: '04:40'
      TimeOut5:
        type: string
        format: timespan
        description: TimeOut5 default value
        example: '04:50'
      TimeOut6:
        type: string
        format: timespan
        description: TimeOut6 default value
        example: '05:00'
      TimeOut7:
        type: string
        format: timespan
        description: TimeOut7 default value
        example: '05:10'
      TimeOut8:
        type: string
        format: timespan
        description: TimeOut8 default value
        example: '05:20'
      TimeOut9:
        type: string
        format: timespan
        description: TimeOut9 default value
        example: '05:30'
      TimeOut10:
        type: string
        format: timespan
        description: TimeOut10 default value
        example: '06:00'
      TimeOut11:
        type: string
        format: timespan
        description: TimeOut11 default value
        example: '06:10'
      TimeOut12:
        type: string
        format: timespan
        description: TimeOut12 default value
        example: '06:20'
      TimeOut13:
        type: string
        format: timespan
        description: TimeOut13 default value
        example: '06:30'
      TimeOut14:
        type: string
        format: timespan
        description: TimeOut14 default value
        example: '06:50'
      TimeOut15:
        type: string
        format: timespan
        description: TimeOut15 default value
        example: '7:00'
      IPAddressTimeIn1ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn2ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn3ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn4ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn5ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn6ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn7ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn8ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn9ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn10ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn11ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn12ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn13ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn14ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeIn15ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut1ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut2ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut3ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut4ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut5ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut6ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut7ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut8ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut9ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut10ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut11ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut12ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut13ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut14ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      IPAddressTimeOut15ForEmployeeTimesheet:
        type: string
        description: ''
        example: 192.168.0.156
      TotalTimeWorkedTodayInMinsForEmployeeTimesheet:
        type: string
        description: ''
        example: '405'
      TotalTimeWorkedThisWeekInMinsForEmployeeTimesheet:
        type: string
        description: ''
        example: '405'
      TotalTimeWorkedThisMonthInMinsForEmployeeTimesheet:
        type: string
        description: ''
        example: '405'
      TimesheetStateForEmployeeTimesheet:
        type: string
        description: ''
        example: Complete
      ChangedDateForEmployeeTimesheet:
        type: string
        format: date
        description: ''
        example: '2017-07-19'
      VacancyName:
        type: string
        description: 'Vacancy name default value '
        maxLength: '512'
        example: IT Programmer
      VacancyDescription:
        type: string
        description: 'Title default value '
        example: IT Programmer
      ClosingDate:
        type: string
        format: date
        description: 'ClosingDate default value '
        example: '2016-07-31'
      Reference:
        type: string
        description: 'Reference default value '
        example: VA4
      Comment:
        type: string
        description: 'Comment default value '
        maxLength: 1024
        example: Comment
      SalaryRange:
        type: string
        description: 'SalaryRange default value '
        maxLength: '100'
        example: '10000'
      JobDescription:
        type: string
        description: 'Job description default value '
        example: Job Description
      IsCoverLetterMandatory:
        type: boolean
        description: 'Is coverLetter mandatory default value '
        example: 'false'
        enum:
          - 'false'
          - 'true'
      IsResumeMandatory:
        type: boolean
        description: 'Is resume mandatory default value '
        example: 'false'
        enum:
          - 'false'
          - 'true'
      IsHideSalary:
        type: boolean
        description: 'Is hide salary default value '
        example: 'false'
        enum:
          - 'false'
          - 'true'
      VacancyType:
        type: string
        description: 'Is hide salary default value '
        example: Internal
        enum:
          - external
          - internal
          - both
      JobTitle:
        type: string
        description: 'Job title default value '
        example: Software Engineer
        maxLength: '512'
      City:
        type: string
        description: 'city default value '
        maxLength: '256'
        example: Mumbai
      Country:
        type: string
        description: 'Country default value '
        maxLength: '256'
        example: India
      Experience:
        type: string
        description: 'Experience default value '
        maxLength: '256'
        example: 4 Year
      VacancyReference:
        type: string
        description: 'VacancyReference default value '
        maxLength: '100'
        example: VA4
      CustomScreenTransactionId:
        type: integer
        description: Custom Screen Transaction Id
        example: '12345'
      ScreenId:
        type: integer
        description: Screen Id value
        example: '123'
      QueryName:
        type: string
        description: 'QueryName default value '
        example: Absence
      FieldName:
        type: string
        description: 'FieldName default value '
        example: EMPLOYEE_PERSONAL_FIRST_NAME
      CustomColumnsForEmployeeCustomScreenObject:
        type: array
        items:
          type: object
          required:
            - ColumnName
            - ColumnValue
          properties:
            ColumnName:
              description: 'ColumnName for employee custom screen '
              type: string
              maxLength: 100
              example: Column 1 Name
            ColumnValue:
              description: ColumnValue for employee custom screen
              type: string
              example: Abcd
      AddFilesForEmployeeCustomScreenObject:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName for employee custom screen
              type: string
              maxLength: 100
              example: 123.pdf
            File:
              description: File for employee custom screen
              type: string
              example: Pass base64 string
            Description:
              description: Description for employee custom screen
              type: string
              maxLength: 256
              example: File description
            DocumentCategory:
              description: DocumentCategory for employee custom screen
              type: string
              maxLength: 100
              example: Custom Category
            SignatureRequired:
              description: SignatureRequired for employee custom screen
              type: boolean
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: 'false'
      Benefit:
        type: string
        description: Benefit default value
        maxLength: '100'
        example: Date Awarded
      BenefitIdForAddNewBenefit:
        type: string
        description: Benefit id value
        example: '1'
      BenefitId:
        type: integer
        description: Benefit id default value
        example: '382'
      DateAwarded:
        type: String
        description: Date awarded default value
        format: date
        example: '2017-05-05'
      ExpiryDate:
        type: string
        format: date
        description: ExpiryDate default value
        example: '2018-07-07'
      CustomfieldsForGetCustomScreenDetailObject:
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: Text Field
            ColumnValue:
              description: ColumnValue value
              type: string
              example: '126'
      FilesForGetByCustomScreenTransactionIdObject:
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: 2.pdf
            Description:
              description: Description value
              type: string
              example: File description
            FileUrl:
              description: FileUrl value
              type: string
              format: url
              example: >-
                http://techinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?3489f8dc-629f-4830-b1de-fdc0f943596e
            Category:
              description: Document category value
              type: string
              example: Custom Category
            SignatureRequired:
              description: SignatureRequired value
              type: boolean
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      Value:
        type: string
        description: Value default value
        format: decimal
        example: '1000.10'
      RecoverOnTermination:
        type: string
        description: RecoverOnTermination
        enum:
          - 'yes'
          - 'No'
        example: 'yes'
      EmailFrom:
        type: string
        description: 'Email From default value '
        format: email
        maxLength: 254
        example: rajendra.petave@itgurussoftware.com
      EmailToForEmailInbox:
        allOf:
          - $ref: '#/components/schemas/Result1ForEmailToForEmailInbox'
      EmailCcForEmailInbox:
        allOf:
          - $ref: '#/components/schemas/Result1ForEmailCcForEmailInbox'
      EmailBccForEmailInbox:
        allOf:
          - $ref: '#/components/schemas/Result1ForEmailBccForEmailInbox'
      EmailSubject:
        type: string
        description: 'Email Subject default value '
        maxLength: 2147483647
        example: '[Recipient email address] Email Subject'
      AttachmentForEmailInbox:
        allOf:
          - $ref: '#/components/schemas/Result1ForAttachmentForEmailInbox'
      Result1ForEmailToForEmailInbox:
        type: array
        items:
          type: object
          required:
            - EmailId
          properties:
            EmailId:
              description: Email Id Value
              type: string
              format: email
              maxLength: 254
              example: raj@itgurus.com
      Result1ForEmailCcForEmailInbox:
        type: array
        items:
          type: object
          required:
            - EmailId
          properties:
            EmailId:
              description: Email Id Value
              type: string
              format: email
              maxLength: 254
              example: raj@itgurus.com
      Result1ForEmailBccForEmailInbox:
        type: array
        items:
          type: object
          required:
            - EmailId
          properties:
            EmailId:
              description: Email Id Value
              type: string
              format: email
              maxLength: 254
              example: raj@itgurus.com
      Result1ForAttachmentForEmailInbox:
        type: array
        items:
          type: object
          required:
            - FileName
            - Size
          properties:
            FileName:
              description: File Name Value
              type: string
              example: abc.doc
            Size:
              description: Size Value
              type: string
              maxLength: 15MB
              example: '15728640'
      DocumentType:
        type: string
        description: 'Document Type default value '
        maxLength: '100'
        example: Insurance Period
      ValidFrom:
        type: string
        format: date
        description: 'Valid From default value '
        example: '2014-04-01'
      ValidTo:
        type: string
        format: date
        description: 'Valid To default value '
        example: '2014-04-01'
      RightToWorkTxnId:
        type: integer
        description: RightToWorkTxnId default value
        example: '215'
      TypeOfCheck:
        type: string
        description: 'Type Of Check default value '
        maxLength: '100'
        example: DBS Enhanced
      DateCompleted:
        type: string
        format: date
        description: 'Date Completed default value '
        example: '2016-04-15'
      BackgroundCheckTxnId:
        type: integer
        description: 'BackgroundCheckTxnId default value '
        example: '1'
      OtherLeaveTxnId:
        type: integer
        description: 'Other Leave Txn Id default value '
        example: '1'
      OtherEventReason:
        type: string
        description: 'Other Event Reason default value '
        maxLength: '100'
        example: Jury Duty
      AddFilesForaddothereventleave:
        allOf:
          - $ref: '#/components/schemas/Result1Foraddothereventleave'
      Result1Foraddothereventleave:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
          properties:
            DocumentName:
              description: Document Name Value
              type: string
              example: 123.pdf
            File:
              description: File value
              type: string
              example: Pass base64 string
            Descriptions:
              description: Descriptions value
              type: string
              maxLength: 1024
              example: dsadsadasdasd
      OtherEventTxnId:
        type: integer
        description: 'OtherEventTxnId default value '
        example: '1'
      AddFilesForupdateothereventleave:
        allOf:
          - $ref: '#/components/schemas/Result1Forupdateothereventleave'
      Result1Forupdateothereventleave:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
          properties:
            DocumentName:
              description: Document Name Value
              type: string
              example: 123.pdf
            File:
              description: File value
              type: string
              example: Pass base64 string
            Descriptions:
              description: Descriptions value
              type: string
              maxLength: 1024
              example: dsadsadasdasd
      EntitlementRecordedIn:
        type: integer
        description: 'Entitlement Recorded In default value '
        example: '1'
      ThisYearEntitlement:
        type: number
        description: 'This Year Entitlement default value '
        maxLength: '4'
        format: decimal
        example: '0'
      NextYearEntitlement:
        type: number
        description: 'Next Year Entitlement default value '
        maxLength: '4'
        format: decimal
        example: '0'
      WorkPatternId:
        type: integer
        description: Work pattern id default value
        example: '2'
      WorkPatternName:
        type: string
        description: Work pattern name default value
        maxLength: '100'
        example: xyz
      PostCode:
        type: string
        description: Post code default value
        maxLength: 20
        example: '413608'
      PhoneNumber:
        type: string
        description: Phone number default value
        maxLength: '80'
        example: '8899556885'
      OtherContactDetails:
        type: string
        description: Other contact details default value
        maxLength: '1024'
        example: '8899556885'
      Source:
        type: string
        description: Source default value
        example: Facebook
      Skills:
        type: string
        description: Skills default value
        example: C#, Asp.net, JQuery
      RecruitmentCost:
        type: integer
        description: Recruitment cost default value
        example: '50'
      DateLastContacted:
        type: string
        format: date
        description: Date last contacted default value
        example: '2016-01-13'
      ApplicantId:
        type: bigint
        description: Applicant id default value
        maxLength: '15'
        example: '90'
      LateDate:
        type: string
        format: date
        description: 'Late Date default value '
        example: '2017-07-18'
      HowLate:
        type: integer
        description: 'How late default value '
        example: '10'
      AppraisalId:
        type: integer
        description: Appraisal id  default value
        example: '383'
      AppraisalReviewDate:
        type: string
        format: date
        description: 'AppraisalReviewDate Default value '
        example: '2017-05-01'
      Reviewer:
        type: string
        format: email
        description: 'Reviewer value '
        example: rajendra.petave@itgurussoftware.com
      Notes:
        type: string
        maxLength: '1024'
        example: notes goes here
      ActionPlan:
        type: string
        maxLength: '1024'
        example: '11'
      Objectives:
        type: string
        maxLength: '1024'
        example: '121'
      CustomColumnsArrayForAddNewAppraisal:
        type: array
        items:
          required:
            - ColumnName
            - ColumnValue
          type: object
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: 123.pdf
            ColumnValue:
              description: Column value
              type: string
              example: asddds
      AddFilesArrayForAddNewAppraisal:
        type: array
        items:
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: 123.pdf
              maxLength: '100'
            File:
              description: File
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              example: dsadsadasdasd
              maxLength: '256'
            DocumentCategory:
              description: Document category value
              type: string
              example: catagory
              maxLength: '100'
            SignatureRequired:
              description: Signature Required value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'false'
      CustomColumnsArrayForUpdateAppraisal:
        type: array
        items:
          required:
            - ColumnName
            - ColumnValue
          type: object
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: 123.pdf
            ColumnValue:
              description: Column value
              type: string
              example: adsdsd
      AddFilesArrayForUpdateAppraisal:
        type: array
        items:
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: 123.pdf
              maxLength: '100'
            File:
              description: File
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              example: dsadsadasdasd
              maxLength: '256'
            DocumentCategory:
              type: string
              description: Document category value
              example: catagory
              maxLength: '100'
            SignatureRequired:
              description: Signature Required value
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
      DrivingId:
        type: integer
        description: Driving id default value
        example: '2'
      LicenseNumber:
        type: string
        description: License number
        maxLength: 50
        example: Li555
      LicenseType:
        type: string
        description: License type
        maxLength: '100'
        example: 2 wheeler
      TrainingType:
        type: string
        description: Training type
        maxLength: '100'
        example: Java
      Importance:
        type: integer
        description: Importance default value
        example: '1'
      Status:
        type: integer
        description: Status default value
        example: '2'
      InProgress:
        type: byte
        description: InProgress default value
        example: '10'
      TrainingDate:
        type: string
        format: date
        description: Training date default value
        example: '2017-10-10'
      TrainingEndDate:
        type: string
        format: date
        description: Training end date default value
        example: '2015-10-11'
      TrainingExpiryDate:
        type: string
        format: date
        description: Training expiry date default value
        example: '2015-10-12'
      Cost:
        type: string
        format: decimal
        description: Cost default value
        example: '0.01'
      Provider:
        type: string
        description: Provider default value
        maxLength: '256'
        example: John
      QualificationId:
        type: integer
        description: Qualification id default value
        example: '1'
      Qualification:
        type: string
        description: Qualification
        maxLength: '100'
        example: MSC
      Subject:
        type: string
        description: Subject
        maxLength: '100'
        example: Computer science
      DatePassed:
        type: string
        format: date
        description: Date passed default value
        example: '2017-05-01'
      TrainingId:
        type: integer
        description: Training Id default value
        example: '1'
      Registration:
        type: string
        description: 'Registration default value '
        example: RG003
      Make:
        type: string
        description: 'Make default value '
        example: ABC
      Model:
        type: string
        description: 'Model default value '
        example: A123
      Colour:
        type: string
        description: 'Colour default value '
        example: Black
      EngineSize:
        type: string
        description: 'EngineSize default value '
        example: A101
      FuelType:
        type: string
        description: 'FuelType default value '
        example: DF001
      InsuranceCompany:
        type: string
        description: 'InsuranceCompany default value '
        example: DF001
      PolicyNumber:
        type: string
        description: 'PolicyNumber default value '
        example: 123456A
      MOTExpiryDate:
        type: string
        format: date
        description: 'MOTExpiryDate default value '
        example: '2017-01-01'
      InsuranceExpiryDate:
        type: string
        format: date
        description: 'InsuranceExpiryDate default value '
        example: '2017-01-01'
      VehicleId:
        type: integer
        description: 'VehicleId default value '
        example: 123
      MaternityPaternityTxnId:
        type: integer
        description: 'MaternityPaternityTxnId default value '
        example: '339'
      DueDate:
        type: string
        format: date
        description: Due Date default value
        example: '2017-05-20'
      ActualStartDate:
        type: string
        description: 'Actual start date default value '
        format: date
        example: '2017-05-20'
      ActualEndDate:
        type: string
        description: 'Actual end date default value '
        format: date
        example: '2017-05-21'
      TransactionId:
        type: integer
        description: 'TransactionId default value '
        example: '1'
      ProjectTimesheetDate:
        type: string
        description: 'ProjectTimesheetDate default value '
        format: date
        example: '2014-01-01'
      TimesheetProject:
        type: string
        description: 'TimesheetProject default value '
        maxLength: '100'
        example: Project name goes here
      TimesheetTask:
        type: string
        description: 'TimesheetTask default value '
        maxLength: '100'
        example: Time sheet tasks goes here
      TimesheetDetail:
        type: string
        description: 'TimesheetDetail default value '
        maxLength: '100'
        example: Time sheet details goes here
      StartTime:
        type: string
        description: 'StartTime default value '
        format: timespan
        example: '02:00'
      EndTime:
        type: string
        description: 'EndTime default value '
        format: timespan
        example: '04:00'
      TotalHours:
        type: string
        description: 'TotalHours default value '
        format: timespan
        example: '02:00'
      Quantity:
        type: integer
        description: 'Quantity default value '
        format: decimal
        example: '0.00'
      CPDId:
        type: integer
        description: 'CPDId default value '
        example: '148'
      Activity:
        type: string
        description: 'Activity default value '
        maxLength: '100'
        example: Activity name
      RollNumber:
        type: string
        description: 'Roll number default value '
        maxLength: '30'
        example: '45'
      DateAdmitted:
        type: string
        description: 'Date admitted default value '
        format: date
        example: '2017-01-01'
      HoursRequired:
        type: integer
        description: 'Hours required default value '
        example: '20'
      HoursAccredited:
        type: integer
        description: 'Hours accredited default value '
        example: '21'
      ProjectName:
        type: string
        description: 'ProjectName default value '
        maxLength: '100'
        example: Project Name
      InUse:
        type: string
        description: 'InUse default value '
        example: 'Yes'
      NewProjectName:
        type: string
        description: 'NewProjectName default value '
        maxLength: '100'
        example: updated Project Name
      ProjectTaskName:
        type: string
        description: 'ProjectTaskName default value '
        maxLength: 100
        example: ABC
      New_ProjectTaskName:
        type: string
        description: New_ProjectTaskName value
        maxLength: 100
        example: XYZ
      ProjectTaskDetailName:
        description: ProjectTaskDetailName value
        type: string
        maxLength: 100
        example: XYZ
      New_ProjectTaskDetailName:
        type: string
        description: 'New ProjectTaskDetailName default value '
        maxLength: '100'
        example: New Project Task Detail Name goes here
      CustomColumnsArrayForEmployeeCPD:
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName value
              type: string
              example: Column_Name
            ColumnValue:
              description: ColumnValue value
              type: string
              example: '29153'
      CustomColumnsForGetTrainingDetail:
        description: GetTrainingDetail Result Array
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: ColumnName for get training detail
              type: string
              example: Vehicle 1
            ColumnValue:
              description: ColumnValue for get training detail
              type: string
              example: ABC
      AddFilesArrayForEmployeeCPD:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              maxLength: 100
              example: DocumentName.pdf
            File:
              description: File value
              type: string
              maxLength: 50
              example: Base64 Data
            Description:
              description: Description value
              type: string
              maxLength: 256
              example: Description goes here
            DocumentCategory:
              description: Document category value
              type: string
              maxLength: 100
              example: Benefit
            SignatureRequired:
              description: Signature required value
              type: boolean
              enum:
                - 'false'
                - 'true'
      ResultEmployeeIdId:
        description: ' Result Array'
        type: object
        properties:
          EmployeeId:
            description: EmployeeId value
            type: string
            example: PW1
      EmployeeIdObject:
        type: array
        items:
          type: object
          properties:
            OldValue:
              description: OldValue value
              type: string
              example: Old value
            NewValue:
              description: NewValue value
              type: string
              example: New value
            ChangedOn:
              description: Changed On value
              type: string
              example: '2017-07-12'
            ReasonForChange:
              description: Reason for change
              type: string
              example: Reason for change
      FieldHistoryForJobRoleObject:
        type: array
        items:
          type: object
          properties:
            JobRole:
              description: Job role value
              type: string
              example: Software enginner
            EffectiveDate:
              description: Effective date value
              type: string
              format: date
              example: '2015-06-20'
            ChangedOn:
              description: Changed On value
              type: string
              format: date
              example: '2017-07-12'
            ReasonForChange:
              description: Reason for change
              type: string
              example: Reason for change
      FieldHistoryForEffectiveDateObject:
        type: array
        items:
          type: object
          properties:
            FieldData:
              description: Field data value
              type: string
              example: don't know
            EffectiveDate:
              description: Effective date value
              type: string
              format: date
              example: '2014-07-12'
            ChangedOn:
              description: Changed On value
              type: string
              format: date
              example: '2017-07-12'
            ReasonForChange:
              description: Reason for change
              type: string
              example: Reason for change
      DeductionsArray:
        type: array
        items:
          type: object
          required:
            - Deduction
            - DisplayAsAmountOrPercentage
            - Amount
            - IncludeInTotalSalary
          properties:
            Deduction:
              description: Deduction value
              type: string
              example: Social Club 1
            DisplayAsAmountOrPercentage:
              description: Display as amount or percentage
              type: boolean
              enum:
                - 'false'
                - 'true'
            Amount:
              description: ' contact last name'
              type: integer
              example: '100'
            Percentage:
              description: Percentage
              type: integer
              format: decimal
              example: '10.00'
            Comments:
              description: Comments
              type: string
              maxLength: '512'
              example: Comments for deduction social
            IncludeInTotalSalary:
              description: IncludeInTotalSalary
              type: boolean
              enum:
                - 'false'
                - 'true'
      EntitlementsArray:
        type: array
        items:
          type: object
          required:
            - Entitlement
            - DisplayAsAmountOrPercentage
            - Amount
            - IncludeInTotalSalary
          properties:
            Entitlement:
              description: Entitlement value
              type: string
              maxLength: '100'
            DisplayAsAmountOrPercentage:
              description: Display as amount or percentage
              type: boolean
              enum:
                - 'false'
                - 'true'
            Amount:
              description: ' contact last name'
              type: integer
              example: '100'
            Percentage:
              description: Percentage
              type: integer
              format: decimal
              example: '10.00'
            Comments:
              description: Comments
              type: string
              maxLength: '512'
              example: Comments for deduction social
            IncludeInTotalSalary:
              description: IncludeInTotalSalary
              type: boolean
              enum:
                - 'false'
                - 'true'
      GetAllDocumentArray:
        description: The get all document array
        type: array
        items:
          type: object
          properties:
            EmployeeId:
              description: ' employee id value'
              type: integer
              example: 22956
            DocumentId:
              description: ' document id value'
              type: long integer
              example: 129541
            DocumentName:
              description: ' document name value'
              type: string
              example: 123.pdf
            URL:
              type: string
              description: ' URL value'
              format: url
              example: >-
                http://itgpeoplehr.localhost.net:12345/Handlers/MyDocsViewer.ashx?177e5884-af67-44e6-af86-f9d19715b5cf
            Comments:
              description: ' comments value'
              type: string
              example: dsadsadasdasd
            EmployeeAccess:
              description: ' employee access value'
              type: boolean
              enum:
                - 'true'
                - 'false'
            ManagerAccess:
              description: ' manager access value'
              type: boolean
              enum:
                - 'true'
                - 'false'
            SignRequired:
              description: ' SignRequired '
              type: boolean
              enum:
                - 'true'
                - 'false'
            Category:
              description: Category
              type: string
              example: Absence
            AddedOn:
              description: Added On
              type: string
              example: Mon, 17 Jul 2017
      GetDocumentByIdArray:
        description: Get document by id document array
        type: array
        items:
          type: object
          properties:
            EmployeeId:
              description: ' employee id value'
              type: integer
              example: 22956
            DocumentId:
              description: ' document id value'
              type: integer
              example: 129556
            DocumentName:
              description: ' document name value'
              type: string
              example: bird1.png
            URL:
              type: string
              description: ' URL value'
              format: url
              example: >-
                http://itgpeoplehr.localhost.net:12345/Handlers/MyDocsViewer.ashx?d1537b64-55cf-429c-aaa0-1e0223fc2974
            Comments:
              description: ' comments value'
              type: string
              example: xyz
            EmployeeAccess:
              description: ' employee access value'
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
            ManagerAccess:
              description: ' manager access value'
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
            SignRequired:
              description: ' SignRequired '
              type: boolean
              enum:
                - 'false'
                - 'true'
              example: 'true'
            Category:
              description: Category
              type: string
              example: Category
            AddedOn:
              description: Added On
              type: string
              example: Tue, 18 Jul 2017
      CommentsArray:
        type: array
        items:
          type: object
          properties:
            Comments:
              description: Comments
              type: string
              example: Not feeling well
            PostedBy:
              description: Post by
              type: integer
              example: Vaibhav Desai
      AddCommentsArrayForAbsence:
        type: array
        items:
          type: object
          properties:
            Comment:
              description: Comment value
              type: string
              example: Comment goes here
              maxLength: '1024'
      AddFilesArrayForAbsence:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: bird1.png
            File:
              description: File value
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              example: Something write here
              maxLength: '1024'
      CustomColumnsForEmployeeDriving:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName for employee driving
              type: string
              maxLength: 100
              example: Vehicle 1
            ColumnValue:
              description: ColumnValue for employee driving
              type: string
              example: ABC
      AddFilesForEmployeeDriving:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName for employee driving
              type: string
              maxLength: 100
              example: my.txt
            File:
              description: File for employee driving
              type: string
              example: Base 64 code
            Descriptions:
              description: Descriptions for employee driving
              type: string
              maxLength: 256
              example: Descriptions goes here
            DocumentCategory:
              description: DocumentCategory for employee driving
              type: string
              maxLength: 100
              example: Custom Catagory
            SignatureRequired:
              description: SignatureRequired for employee driving
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: 'False'
      CustomColumnsForEmployeeTraining:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName for employee training
              type: string
              maxLength: 100
              example: Vehicle 1
            ColumnValue:
              description: ColumnValue for employee training
              type: string
              example: ABC
      AddFilesForEmployeeTraining:
        description: ' Result Array'
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName for employee training
              type: string
              maxLength: 100
              example: my.txt
            File:
              description: File for employee training
              type: string
              example: Base 64 code
            Descriptions:
              description: Descriptions for employee training
              type: string
              maxLength: 256
              example: Descriptions goes here
            DocumentCategory:
              description: DocumentCategory for employee training
              type: string
              maxLength: 100
              example: Custom Catagory
            SignatureRequired:
              description: SignatureRequired for employee training
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: 'False'
      CustomColumnsForGetEmployeeQualification:
        description: ' CustomColumns Result Array'
        type: array
        items:
          type: object
          properties:
            ColumnName:
              description: Columnname Value
              type: string
              example: Vehicle 1
            ColumnValue:
              description: Columnvalue value
              type: string
              example: ABC
      AddFilesForGetEmployeeQualification:
        description: AddFiles Result Array
        type: array
        items:
          type: object
          properties:
            DocumentName:
              description: Document name value
              type: string
              example: my.txt
            FileUrl:
              description: FileUrl value
              type: string
              format: Url
              example: >-
                http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
            Descriptions:
              description: Descriptions value
              type: string
              example: Descriptions goes here
            Category:
              description: Document category value
              type: string
              example: Custom Catagory
            SignatureRequired:
              description: Signature required value
              type: string
              format: boolean
              enum:
                - 'false'
                - 'true'
              example: false
      CustomColumnsForEmployeeVehicleAddArray:
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName to add employee's new vehicle detail
              type: string
              example: Demo
            ColumnValue:
              description: ColumnValue to add employee's new vehicle detail
              type: string
              example: ''
      CustomColumnsForEmployeeVehicleUpdateArray:
        type: array
        items:
          type: object
          required:
            - ColumnName
          properties:
            ColumnName:
              description: ColumnName to update employee's new vehicle detail
              type: string
              example: Demo
            ColumnValue:
              description: ColumnValue to update employee's new vehicle detail
              type: string
              example: ''
      AddFilesForEmployeeVehicleAddArray:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName to add employee's new vehicle detail
              type: string
              example: my.txt
            File:
              description: File to add employee's new vehicle detail
              type: string
              example: Pass base64 string
            Description:
              description: Description to add employee's new vehicle detail
              type: string
              example: XYZ
            DocumentCategory:
              description: DocumentCategory to add employee's new vehicle detail
              type: string
              example: XYZ
            SignatureRequired:
              description: SignatureRequired to add employee's new vehicle detail
              type: boolean
              enum:
                - 'false'
                - 'true'
      AddFilesForEmployeeVehicleUpdateArray:
        type: array
        items:
          type: object
          required:
            - DocumentName
            - File
            - DocumentCategory
            - SignatureRequired
          properties:
            DocumentName:
              description: DocumentName to update employee's new vehicle detail
              type: string
              example: my.txt
            File:
              description: File to add employee's new vehicle detail
              type: string
              example: Pass base64 string
            Description:
              description: Description to updtae employee's new vehicle detail
              type: string
              example: XYZ
            DocumentCategory:
              description: DocumentCategory to update employee's new vehicle detail
              type: string
              example: XYZ
            SignatureRequired:
              description: SignatureRequired to update employee's new vehicle detail
              type: boolean
              enum:
                - 'false'
                - 'true'
      RedirectUrls:
        type: object
        description: The redirect URIs
        required:
          - error
          - success
          - decline
          - cancel
        properties:
          error:
            type: string
            format: url
          success:
            type: string
            format: url
          decline:
            type: string
            format: url
          cancel:
            type: string
            format: url
      UserPermissions:
        type: array
        minItems: 1
        items:
          type: object
          properties:
            resourceName:
              type: string
              enum:
                - UpdateEmployeeId
                - CheckAuthentication
                - api-keys
                - api-tracking
                - authentication-tokens
                - bank-accounts
                - blacklists
                - checkout-pages
                - contacts
                - coupons
                - coupons-redemptions
                - credentials
                - custom-events
                - custom-fields
                - customers
                - disputes
                - events
                - gateway-accounts
                - invoices
                - layouts
                - lead-sources
                - lists
                - matched-rules
                - notes
                - oct-batch
                - organizations
                - password-tokens
                - payments
                - payment-cards
                - payment-cards-migrations
                - paypal-accounts
                - plans
                - reports
                - reset-sandbox
                - rulesets
                - sessions
                - subscriptions
                - subscription-tracking
                - tokens
                - transactions
                - users
                - webhook
                - webhook-tracking
                - websites
            methods:
              type: array
              minItems: 1
              items:
                type: string
                enum:
                  - HEAD
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - PATCH
            resourceIds:
              type: array
              items:
                $ref: '#/components/schemas/ResourceId'
        example:
          - resourceName: plans
            methods:
              - GET
              - POST
              - PUT
              - HEAD
              - DELETE
          - resourceName: invoices
            methods:
              - GET
              - HEAD
            resourceIds:
              - 4f6cf35x-2c4y-483z-a0a9-158621f77a21
              - 1586f35x-4f6c-483z-a0a9-2c4y21f77a21
          - resourceName: null
            methods: null
            resourceIds: null
      GenericRestriction:
        description: All restriction
        type: object
        discriminator:
          propertyName: type
        properties:
          type:
            description: Restriction type
            type: string
      ServerTimestamp:
        type: string
        description: Read-only timestamp, automatically assigned on back-end.
        format: date-time
        readOnly: true
      UpdateEmployeeId2:
        type: object
        required:
          - APIKey
          - Action
          - ReasonForChange
          - OldEmployeeId
          - NewEmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to updateEmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateEmployeeId
          ReasonForChange:
            description: Reason for change employee id
            allOf:
              - $ref: '#/components/schemas/ReasonForChange'
          OldEmployeeId:
            description: Old employee id for update employee data
            allOf:
              - $ref: '#/components/schemas/OldEmployeeId'
          NewEmployeeId:
            description: New employee id for update employee data
            allOf:
              - $ref: '#/components/schemas/NewEmployeeId'
      GetAllEmployeeDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - IncludeLeavers
        properties:
          APIKey:
            description: APIKey for GetAllEmployeeDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllEmployeeDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllEmployeeDetail
          IncludeLeavers:
            description: Include leavers for get all employee detail
            allOf:
              - $ref: '#/components/schemas/IncludeLeavers'
      GetEmployeeDetailByIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to GetEmployeeDetailById
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetEmployeeDetailById
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetEmployeeDetailById
          EmployeeId:
            description: Employee id to get employee detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      CreateEmployeeDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - FirstName
          - LastName
          - StartDate
          - JobRole
          - JobRoleEffectiveDate
          - Location
          - Department
        properties:
          APIKey:
            description: APIKey for employee api to createNewEmployee
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateNewEmployee
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateNewEmployee
          EmployeeId:
            description: Employee id for create new employee
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Title:
            description: Title for create new employee
            allOf:
              - $ref: '#/components/schemas/Title'
          FirstName:
            description: FirstName for create new employee
            allOf:
              - $ref: '#/components/schemas/FirstName'
          LastName:
            description: LastName for create new employee
            allOf:
              - $ref: '#/components/schemas/LastName'
          Email:
            description: Email for create new employee
            allOf:
              - $ref: '#/components/schemas/Email'
          Gender:
            description: Gender value for create new employee
            allOf:
              - $ref: '#/components/schemas/Gender'
            enum:
              - Female
              - Male
          StartDate:
            description: Start date for create new employee
            allOf:
              - $ref: '#/components/schemas/StartDate'
          DateOfBirth:
            description: Date of birth for create new employee
            allOf:
              - $ref: '#/components/schemas/DateOfBirth'
          ReportsTo:
            description: Reports To for create new employee
            allOf:
              - $ref: '#/components/schemas/ReportsTo'
          JobRole:
            description: Job role for create new employee
            allOf:
              - $ref: '#/components/schemas/JobRole'
          JobRoleEffectiveDate:
            description: Job role effective date for create new employee
            allOf:
              - $ref: '#/components/schemas/JobRoleEffectiveDate'
          Company:
            description: Company name for create new employee
            allOf:
              - $ref: '#/components/schemas/Company'
          Location:
            description: Location for create new employee
            allOf:
              - $ref: '#/components/schemas/Location'
          Department:
            description: Department for create new employee
            allOf:
              - $ref: '#/components/schemas/Department'
          NationalInsuranceNumber:
            description: National insurance number for create new employee
            allOf:
              - $ref: '#/components/schemas/NationalInsuranceNumber'
          Nationality:
            description: Nationality for create new employee
            allOf:
              - $ref: '#/components/schemas/Nationality'
          EmploymentType:
            description: Employment type for create new employee
            allOf:
              - $ref: '#/components/schemas/EmploymentType'
          EntitlementThisYear:
            description: Entitlement This Year for create new employee
            allOf:
              - $ref: '#/components/schemas/EntitlementThisYear'
          EntitlementNextYear:
            description: Entitlement Next Year for create new employee
            allOf:
              - $ref: '#/components/schemas/EntitlementNextYear'
          Address:
            description: Address for create new employee
            allOf:
              - $ref: '#/components/schemas/Address'
          PersonalPhoneNumber:
            description: PersonalPhoneNumber for create new employee
            allOf:
              - $ref: '#/components/schemas/PersonalPhoneNumber'
          Payroll Company:
            description: Payroll company for create new employee
            allOf:
              - $ref: '#/components/schemas/PayrollCompany'
          Payroll ID:
            description: Payroll id for create new employee
            allOf:
              - $ref: '#/components/schemas/PayrollID'
          Time & Attendance ID:
            description: Time & attendance id for create new employee
            allOf:
              - $ref: '#/components/schemas/Time_AttendanceID'
          Rota ID:
            description: Rota id for create new employee
            allOf:
              - $ref: '#/components/schemas/RotaID'
          CRM ID:
            description: CRM id for create new employee
            allOf:
              - $ref: '#/components/schemas/CRMID'
          ATS ID:
            description: ATS id for create new employee
            allOf:
              - $ref: '#/components/schemas/ATSID'
          Performance ID:
            description: Performance id for create new employee
            allOf:
              - $ref: '#/components/schemas/PerformanceID'
          Benefits ID:
            description: Benefits id for create new employee
            allOf:
              - $ref: '#/components/schemas/BenefitsID'
          System1 ID:
            description: System1 id for create new employee
            allOf:
              - $ref: '#/components/schemas/System1ID'
          System2 ID:
            description: System2 id for create new employee
            allOf:
              - $ref: '#/components/schemas/System2ID'
          System3 ID:
            description: System3 id for create new employee
            allOf:
              - $ref: '#/components/schemas/System3ID'
          APIColumn1:
            description: API column 1 for create new employee
            allOf:
              - $ref: '#/components/schemas/APIColumn1'
            maxLength: '1000'
          APIColumn2:
            description: API column 2 for create new employee
            allOf:
              - $ref: '#/components/schemas/APIColumn2'
            maxLength: '1000'
          APIColumn3:
            description: API column 3 for create new employee
            allOf:
              - $ref: '#/components/schemas/APIColumn3'
            maxLength: '1000'
          APIColumn4:
            description: API column 4 for create new employee
            allOf:
              - $ref: '#/components/schemas/APIColumn4'
            maxLength: '1000'
          APIColumn5:
            description: API column 5 for create new employee
            allOf:
              - $ref: '#/components/schemas/APIColumn5'
            maxLength: '1000'
          PersonalEmail:
            description: Personal email for create new employee
            allOf:
              - $ref: '#/components/schemas/PersonalEmail'
          MethodOfRecruitment:
            description: Method of recruitment for create new employee
            allOf:
              - $ref: '#/components/schemas/MethodOfRecruitment'
      UpdateEmployeeDetail3:
        type: object
        required:
          - APIKey
          - Action
          - ReasonForChange
          - EmployeeId
          - FirstName
          - LastName
          - Gender
          - StartDate
          - ReportsToEffectiveDate
          - CompanyEffectiveDate
          - JobRole
          - JobRoleEffectiveDate
          - Location
          - LocationEffectiveDate
          - Department
          - DepartmentEffectiveDate
          - EmploymentTypeEffectiveDate
        properties:
          APIKey:
            description: APIKey for employee api to updateEmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateEmployeeDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateEmployeeDetail
          ReasonForChange:
            description: Reason for change employee id
            allOf:
              - $ref: '#/components/schemas/ReasonForChange'
          EmployeeId:
            description: Employee id for update employee data
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Title:
            description: Title for update employee data
            allOf:
              - $ref: '#/components/schemas/Title'
          FirstName:
            description: FirstName for update employee data
            allOf:
              - $ref: '#/components/schemas/FirstName'
          LastName:
            description: LastName for update employee data
            allOf:
              - $ref: '#/components/schemas/LastName'
          Email:
            description: Email for update employee data
            allOf:
              - $ref: '#/components/schemas/Email'
          Gender:
            description: Gender value for update employee data
            allOf:
              - $ref: '#/components/schemas/Gender'
            enum:
              - Female
              - Male
          DateOfBirth:
            description: Date of birth for update employee data
            allOf:
              - $ref: '#/components/schemas/DateOfBirth'
          StartDate:
            description: Start date for update employee data
            allOf:
              - $ref: '#/components/schemas/StartDate'
          ReportsTo:
            description: Reports To for update employee data
            allOf:
              - $ref: '#/components/schemas/ReportsTo'
          ReportsToEffectiveDate:
            description: Reports to effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/ReportsToEffectiveDate'
          Company:
            description: Company name for update employee data
            allOf:
              - $ref: '#/components/schemas/Company'
          CompanyEffectiveDate:
            description: Company effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/CompanyEffectiveDate'
          JobRole:
            description: Job role for update employee data
            allOf:
              - $ref: '#/components/schemas/JobRole'
          JobRoleEffectiveDate:
            description: Job role effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/JobRoleEffectiveDate'
          Location:
            description: Location for update employee data
            allOf:
              - $ref: '#/components/schemas/Location'
          LocationEffectiveDate:
            description: Location effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/LocationEffectiveDate'
          Department:
            description: Department for update employee data
            allOf:
              - $ref: '#/components/schemas/Department'
          DepartmentEffectiveDate:
            description: Department effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/DepartmentEffectiveDate'
          NationalInsuranceNumber:
            description: National insurance number for update employee data
            allOf:
              - $ref: '#/components/schemas/NationalInsuranceNumber'
          Nationality:
            description: Nationality for update employee data
            allOf:
              - $ref: '#/components/schemas/Nationality'
          EmploymentType:
            description: Employment type for update employee data
            allOf:
              - $ref: '#/components/schemas/EmploymentType'
          EmploymentTypeEffectiveDate:
            description: Employment type effective date for update employee data
            allOf:
              - $ref: '#/components/schemas/EmploymentTypeEffectiveDate'
          Address:
            description: Address for update employee data
            allOf:
              - $ref: '#/components/schemas/Address'
          PersonalPhoneNumber:
            description: PersonalPhoneNumber for update employee data
            allOf:
              - $ref: '#/components/schemas/PersonalPhoneNumber'
          Payroll Company:
            description: Payroll company for update employee data
            allOf:
              - $ref: '#/components/schemas/PayrollCompany'
          Payroll ID:
            description: Payroll id for update employee data
            allOf:
              - $ref: '#/components/schemas/PayrollID'
          Time & Attendance ID:
            description: Time & attendance id for update employee data
            allOf:
              - $ref: '#/components/schemas/Time_AttendanceID'
          Rota ID:
            description: Rota id for update employee data
            allOf:
              - $ref: '#/components/schemas/RotaID'
          CRM ID:
            description: CRM id for update employee data
            allOf:
              - $ref: '#/components/schemas/CRMID'
          ATS ID:
            description: ATS id for update employee data
            allOf:
              - $ref: '#/components/schemas/ATSID'
          Performance ID:
            description: Performance id for update employee data
            allOf:
              - $ref: '#/components/schemas/PerformanceID'
          Benefits ID:
            description: Benefits id for update employee data
            allOf:
              - $ref: '#/components/schemas/BenefitsID'
          System1 ID:
            description: System1 id for update employee data"
            allOf:
              - $ref: '#/components/schemas/System1ID'
          System2 ID:
            description: System2 id for update employee data"
            allOf:
              - $ref: '#/components/schemas/System2ID'
          System3 ID:
            description: System3 id for update employee data"
            allOf:
              - $ref: '#/components/schemas/System3ID'
          APIColumn1:
            description: API column 1 for update employee data"
            allOf:
              - $ref: '#/components/schemas/APIColumn1'
            maxLength: '1000'
          APIColumn2:
            description: API column 2 for update employee data"
            allOf:
              - $ref: '#/components/schemas/APIColumn2'
            maxLength: '1000'
          APIColumn3:
            description: API column 3 for update employee data"
            allOf:
              - $ref: '#/components/schemas/APIColumn3'
            maxLength: '1000'
          APIColumn4:
            description: API column 4 for update employee data"
            allOf:
              - $ref: '#/components/schemas/APIColumn4'
            maxLength: '1000'
          APIColumn5:
            description: API column 5 for update employee data"
            allOf:
              - $ref: '#/components/schemas/APIColumn5'
            maxLength: '1000'
          PersonalEmail:
            description: Personal email for update employee data"
            allOf:
              - $ref: '#/components/schemas/PersonalEmail'
          MethodOfRecruitment:
            description: Method of recruitment for update employee data"
            allOf:
              - $ref: '#/components/schemas/MethodOfRecruitment'
      CheckAuthentication2:
        type: object
        required:
          - APIKey
          - Action
          - EmailAddress
          - Password
        properties:
          APIKey:
            description: APIKey for employee api to checkAuthentication
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CheckAuthentication
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CheckAuthentication
          EmailAddress:
            description: Email address of user
            allOf:
              - $ref: '#/components/schemas/EmailAddress'
          Password:
            description: Password of user
            allOf:
              - $ref: '#/components/schemas/Password'
      MarkAsLeaverById2:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - ReasonforLeaving
          - FinalEmploymentDate
        properties:
          APIKey:
            description: APIKey for employee api to markAsLeaverById
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = MarkAsLeaverById
            allOf:
              - $ref: '#/components/schemas/Action'
            example: MarkAsLeaverById
          EmployeeId:
            description: Employee id for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ReasonforLeaving:
            description: Reason for leaving employee
            allOf:
              - $ref: '#/components/schemas/ReasonforLeaving'
            maxLength: '100'
          AdditionalComments:
            description: Additional comments for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/AdditionalComments'
          FinalEmploymentDate:
            description: Final employment date for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/FinalEmploymentDate'
          FinalWorkingDate:
            description: Final working date for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/FinalWorkingDate'
          MarkasLeaverImmediately:
            description: Mark as leaver immediately for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/MarkasLeaverImmediately'
          ReportsTo:
            description: Reports to for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/ReportsTo'
          ReEmployable:
            description: Re employable for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/ReEmployable'
          SupportingComments:
            description: Supporting comments for mark as leaver by id
            allOf:
              - $ref: '#/components/schemas/SupportingComments'
      AddEmployeeImageById2:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - EmployeeImageName
          - EmployeeImage
        properties:
          APIKey:
            description: APIKey for employee api to AddEmployeeImage
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddEmployeeImage
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddEmployeeImage
          EmployeeId:
            description: 'Employee id for add employee image '
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          EmployeeImageName:
            description: Employee image name for add employee image
            allOf:
              - $ref: '#/components/schemas/EmployeeImageName'
            enum:
              - .jpeg
              - .jpg
              - .png
          EmployeeImage:
            description: Employee image for add employee image
            allOf:
              - $ref: '#/components/schemas/EmployeeImage'
      AddNewHolidayParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DurationType
          - StartDate
          - EndDate
          - DurationInDays
          - DurationInMinutes
        properties:
          APIKey:
            description: APIKey for employee holiday to AddNewHoliday
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewHoliday
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewHoliday
          EmployeeId:
            description: Employee id for add new holiday
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DurationType:
            description: Duration type for add new holiday
            allOf:
              - $ref: '#/components/schemas/DurationType'
          StartDate:
            description: StartDate for add new holiday
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for add new holiday
            allOf:
              - $ref: '#/components/schemas/EndDate'
          DurationInDays:
            description: Duration in days for add new holiday
            allOf:
              - $ref: '#/components/schemas/DurationInDays'
          DurationInMinutes:
            description: Duration in minutes for add new holiday
            allOf:
              - $ref: '#/components/schemas/DurationInMinutes'
          PartOfDay:
            description: Part of day for add new holiday
            allOf:
              - $ref: '#/components/schemas/PartOfDay'
          Comments:
            description: Comments for add new holiday
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      UpdateHolidayParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - OldStartDate
          - OldEndDate
          - DurationType
          - StartDate
          - EndDate
          - DurationInDays
          - DurationInMinutes
        properties:
          APIKey:
            description: APIKey for UpdateHoliday
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateHoliday
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateHoliday
          EmployeeId:
            description: Employee id for update holiday
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          OldStartDate:
            description: OldStartDate for update holiday
            allOf:
              - $ref: '#/components/schemas/OldStartDate'
          OldEndDate:
            description: OldEndDate for update holiday
            allOf:
              - $ref: '#/components/schemas/OldEndDate'
          DurationType:
            description: Duration type for update holiday
            allOf:
              - $ref: '#/components/schemas/DurationType'
          StartDate:
            description: StartDate for update holiday
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for update holiday
            allOf:
              - $ref: '#/components/schemas/EndDate'
          DurationInDays:
            description: Duration in days for update holiday
            allOf:
              - $ref: '#/components/schemas/DurationInDays'
          DurationInMinutes:
            description: Duration in minutes for update holiday
            allOf:
              - $ref: '#/components/schemas/DurationInMinutes'
          PartOfDay:
            description: Part of day for update holiday
            allOf:
              - $ref: '#/components/schemas/PartOfDay'
          Comments:
            description: Comments for update holiday
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      GetHolidayDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for GetHolidayDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetHolidayDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetHolidayDetail
          EmployeeId:
            description: Employee id for get holiday detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: StartDate for get holiday detail
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for get holiday detail
            allOf:
              - $ref: '#/components/schemas/EndDate'
      DeleteHolidayParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - StartDate
          - EndDate
        properties:
          APIKey:
            description: APIKey for DeleteHoliday
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteHoliday
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteHoliday
          EmployeeId:
            description: Employee Id for delete holiday
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Start date for delete holiday
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for delete holiday
            allOf:
              - $ref: '#/components/schemas/EndDate'
      GetAbsenceDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - StartDate
          - EndDate
        properties:
          APIKey:
            description: APIKey for employee api to GetAbsenceDetail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAbsenceDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAbsenceDetail
          EmployeeId:
            description: ' Employee id for get absence detail'
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Start date for get absence detail
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: 'End Date for get absence detail '
            allOf:
              - $ref: '#/components/schemas/EndDate'
      DeleteAbsenceOfEmployeeParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - StartDate
          - EndDate
        properties:
          APIKey:
            description: APIKey for employee api to delete absence
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteAbsence
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteAbsence
          EmployeeId:
            description: Employee Id for delete absence
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: StartDate for delete absence"
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: EndDate for delete absence
            allOf:
              - $ref: '#/components/schemas/EndDate'
      UpdateAbsenceDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - OldStartDate
          - OldEndDate
          - DurationType
          - Reason
          - StartDate
          - EndDate
          - Duration
          - AbsencePaidStatus
          - EmergencyLeave
        properties:
          APIKey:
            description: APIKey for employee api to UpdateAbsence
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateAbsence
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateAbsence
          EmployeeId:
            description: Employee Id for update absence
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          OldStartDate:
            description: OldStartDate for update absence
            allOf:
              - $ref: '#/components/schemas/OldStartDate'
          OldEndDate:
            description: Old End Date for update absence
            allOf:
              - $ref: '#/components/schemas/OldEndDate'
          DurationType:
            description: DurationType for update absence
            allOf:
              - $ref: '#/components/schemas/DurationType'
          Reason:
            description: Reason For update absence of user
            allOf:
              - $ref: '#/components/schemas/Reason'
          StartDate:
            description: Start Date for update absence
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End Date for update absence
            allOf:
              - $ref: '#/components/schemas/EndDate'
          PartOfDay:
            description: PartOfDay for update absence
            allOf:
              - $ref: '#/components/schemas/PartOfDayForUpdateAbsence'
          Duration:
            description: Duration for update absence
            allOf:
              - $ref: '#/components/schemas/Duration'
          AbsencePaidStatus:
            description: AbsencePaidStatus for update absence
            allOf:
              - $ref: '#/components/schemas/AbsencePaidStatus'
          EmergencyLeave:
            description: EmergencyLeave for update absence
            allOf:
              - $ref: '#/components/schemas/EmergencyLeave'
          AddComments:
            description: AddComments array list
            allOf:
              - $ref: '#/components/schemas/AddCommentsArrayForAbsence'
          AddFiles:
            description: AddFiles array list
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAbsence'
      AddAbsenceOfEmployeeParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DurationType
          - Reason
          - StartDate
          - EndDate
          - PartOfDay
          - Duration
          - AbsencePaidStatus
          - EmergencyLeave
        properties:
          APIKey:
            description: APIKey for employee api to checkAuthentication
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewAbsence
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewAbsence
          EmployeeId:
            description: Employee Id for add new absence
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DurationType:
            description: DurationType of user
            allOf:
              - $ref: '#/components/schemas/DurationType'
          Reason:
            description: Reason for add new absence
            allOf:
              - $ref: '#/components/schemas/Reason'
          StartDate:
            description: Start date for add new absence
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: EndDate for add new absence
            allOf:
              - $ref: '#/components/schemas/EndDate'
          PartOfDay:
            description: PartOfDay for add new absence
            allOf:
              - $ref: '#/components/schemas/PartOfDay'
          Duration:
            description: Duration for add new absence
            allOf:
              - $ref: '#/components/schemas/Duration'
          AbsencePaidStatus:
            description: AbsencePaidStatus for add new absence
            allOf:
              - $ref: '#/components/schemas/AbsencePaidStatus'
          EmergencyLeave:
            description: EmergencyLeave for add new absence
            allOf:
              - $ref: '#/components/schemas/EmergencyLeave'
          AddComments:
            description: AddComments array list
            allOf:
              - $ref: '#/components/schemas/AddCommentsArrayForAbsence'
          AddFiles:
            description: AddFiles array list
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAbsence'
      GetSalaryDetail2:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - IsIncludeHistory
        properties:
          APIKey:
            description: APIKey for GetSalaryDetail of employee
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetSalaryDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetSalaryDetail
          EmployeeId:
            description: Employee id for get salary detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          IsIncludeHistory:
            description: Include hostory for get salary detail
            allOf:
              - $ref: '#/components/schemas/IsIncludeHistory'
            enum:
              - 'false'
              - 'true'
      CreateNewSalaryParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - EffectiveFrom
          - SalaryType
          - PaymentFrequency
          - SalaryAmount
          - CurrencyCode
          - ChangeReason
          - Deductions
          - DisplayAsAmountOrPercentage
          - Amount
          - Percentage
          - IncludeInTotalSalary
          - Deduction
          - Entitlements
        properties:
          APIKey:
            description: 'APIKey for Create New Salary of employee '
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateNewSalary
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateNewSalary
          EmployeeId:
            description: Employee Id for create new salary
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          EffectiveFrom:
            description: EffectiveFrom for create new salary
            allOf:
              - $ref: '#/components/schemas/EffectiveFrom'
          SalaryType:
            description: SalaryType for create new salary
            allOf:
              - $ref: '#/components/schemas/SalaryType'
          PaymentFrequency:
            description: PaymentFrequency for create new salary
            allOf:
              - $ref: '#/components/schemas/PaymentFrequency'
          SalaryAmount:
            description: SalaryAmount for create new salary
            allOf:
              - $ref: '#/components/schemas/SalaryAmount'
          CurrencyCode:
            description: CurrencyCode for create new salary
            allOf:
              - $ref: '#/components/schemas/CurrencyCode'
          ChangeReason:
            description: ChangeReason for create new salary
            allOf:
              - $ref: '#/components/schemas/ChangeReason'
          Comments:
            description: Comments for create new salary
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '1024'
          Deductions:
            description: Deductions of user Array
            allOf:
              - $ref: '#/components/schemas/DeductionsArray'
          Entitlements:
            description: Entitlements of user
            allOf:
              - $ref: '#/components/schemas/EntitlementsArray'
      DeleteSalaryParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - EffectiveFrom
        properties:
          APIKey:
            description: APIKey for delete Salary of employee
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteSalary
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteSalary
          EmployeeId:
            description: Employee Id for delete salary
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          EffectiveFrom:
            description: EffectiveFrom for delete salary
            allOf:
              - $ref: '#/components/schemas/EffectiveFrom'
      UploadEmployeeDocumentParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Category
          - EmployeeAccess
          - ManagerAccess
          - SignatureRequired
          - DocumentName
          - Description
          - File
        properties:
          APIKey:
            description: APIKey for employee api to Upload Employee Document
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UploadEmployeeDocument
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UploadEmployeeDocument
          EmployeeId:
            description: ' Employee id for upload employee document'
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          Category:
            description: Category for upload employee document
            allOf:
              - $ref: '#/components/schemas/Category'
          EmployeeAccess:
            description: 'EmployeeAccess for upload employee document '
            allOf:
              - $ref: '#/components/schemas/EmployeeAccess'
          ManagerAccess:
            description: 'ManagerAccess for upload employee document '
            allOf:
              - $ref: '#/components/schemas/ManagerAccess'
          SignatureRequired:
            description: SignatureRequired for upload employee document
            allOf:
              - $ref: '#/components/schemas/SignatureRequired'
          DocumentName:
            description: DocumentName for upload employee document
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          Description:
            description: Description for upload employee document
            allOf:
              - $ref: '#/components/schemas/Description'
          File:
            description: File for upload employee document
            allOf:
              - $ref: '#/components/schemas/File'
      GetAllDocumentParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for get all document
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllDocument
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllDocument
          EmployeeId:
            description: 'Employee Id for get all document '
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
      GetDocumentByIDParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DocumentId
        properties:
          APIKey:
            description: APIKey for GetDocumentByID
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetDocumentById
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetDocumentById
          EmployeeId:
            description: Employee id for get document by id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DocumentId:
            description: DocumentId of user
            allOf:
              - $ref: '#/components/schemas/DocumentId'
      CreateNewTimesheetDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TimesheetDate
        properties:
          APIKey:
            description: APIKey for employee timesheet api to create employee's new timesheet
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateNewTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateNewTimesheet
          EmployeeId:
            description: Employee id to create new employee timesheet
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TimesheetDate:
            description: 'Employee Timesheet created date '
            allOf:
              - $ref: '#/components/schemas/TimesheetDate'
          TimeIn1:
            description: TimeIn1 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn1'
          TimeOut1:
            description: TimeOut1 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut1'
          TimeIn2:
            description: TimeIn2 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn2'
          TimeOut2:
            description: TimeOut2 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut2'
          TimeIn3:
            description: TimeIn3 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn3'
          TimeOut3:
            description: TimeOut3 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut3'
          TimeIn4:
            description: TimeIn4 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn4'
          TimeOut4:
            description: TimeOut4 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut4'
          TimeIn5:
            description: TimeIn5 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn5'
          TimeOut5:
            description: TimeOut5 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut5'
          TimeIn6:
            description: TimeIn6 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn6'
          TimeOut6:
            description: TimeOut6 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut6'
          TimeIn7:
            description: TimeIn7 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn7'
          TimeOut7:
            description: TimeOut7 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut7'
          TimeIn8:
            description: TimeIn8 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn8'
          TimeOut8:
            description: TimeOut8 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut8'
          TimeIn9:
            description: TimeIn9 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn9'
          TimeOut9:
            description: TimeOut9 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut9'
          TimeIn10:
            description: TimeIn10 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn10'
          TimeOut10:
            description: TimeOut10 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut10'
          TimeIn11:
            description: TimeIn11 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn11'
          TimeOut11:
            description: TimeOut11 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut11'
          TimeIn12:
            description: TimeIn12 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn12'
          TimeOut12:
            description: TimeOut12 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut12'
          TimeIn13:
            description: TimeIn13 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn13'
          TimeOut13:
            description: TimeOut13 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut13'
          TimeIn14:
            description: TimeIn14 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn14'
          TimeOut14:
            description: TimeOut14 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut14'
          TimeIn15:
            description: TimeIn15 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn15'
          TimeOut15:
            description: TimeOut15 value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut15'
          Comments:
            description: Comments value for create new timesheet
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '1024'
      UpdateTimesheetDefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TimesheetDate
        properties:
          APIKey:
            description: APIKey to update employee Timesheet
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateTimesheet
          EmployeeId:
            description: Employee id for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TimesheetDate:
            description: 'Employee timesheet date to update '
            allOf:
              - $ref: '#/components/schemas/TimesheetDate'
          TimeIn1:
            description: TimeIn1
            allOf:
              - $ref: '#/components/schemas/TimeIn1'
          TimeOut1:
            description: TimeOut1 value for for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut1'
          TimeIn2:
            description: TimeIn2 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn2'
          TimeOut2:
            description: TimeOut2 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut2'
          TimeIn3:
            description: TimeIn3 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn3'
          TimeOut3:
            description: TimeOut3 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut3'
          TimeIn4:
            description: TimeIn4 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn4'
          TimeOut4:
            description: TimeOut4 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut4'
          TimeIn5:
            description: TimeIn5 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn5'
          TimeOut5:
            description: TimeOut5 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut5'
          TimeIn6:
            description: TimeIn6 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn6'
          TimeOut6:
            description: TimeOut6 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut6'
          TimeIn7:
            description: TimeIn7 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn7'
          TimeOut7:
            description: TimeOut7 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut7'
          TimeIn8:
            description: TimeIn8 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn8'
          TimeOut8:
            description: TimeOut8 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut8'
          TimeIn9:
            description: TimeIn9 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn9'
          TimeOut9:
            description: TimeOut9 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut9'
          TimeIn10:
            description: TimeIn10 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn10'
          TimeOut10:
            description: TimeOut10 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut10'
          TimeIn11:
            description: TimeIn11 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn11'
          TimeOut11:
            description: TimeOut11 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut11'
          TimeIn12:
            description: TimeIn12 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn12'
          TimeOut12:
            description: TimeOut12 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut12'
          TimeIn13:
            description: TimeIn13 for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn13'
          TimeOut13:
            description: TimeOut13 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut13'
          TimeIn14:
            description: TimeIn14 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn14'
          TimeOut14:
            description: TimeOut14 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut14'
          TimeIn15:
            description: TimeIn15 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeIn15'
          TimeOut15:
            description: TimeOut15 value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/TimeOut15'
          Comments:
            description: Comments value for update employee timesheet
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '1024'
      DeleteTimesheetdefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - TimesheetDate
        properties:
          APIKey:
            description: APIKey for delete employee timesheet
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteTimesheet
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteTimesheet
          EmployeeId:
            description: Employee id for delete employee timesheet
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          TimesheetDate:
            description: 'Employee Timesheet Date to delete '
            allOf:
              - $ref: '#/components/schemas/TimesheetDate'
      GetTimesheetdefinition:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for get employee timesheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetTimesheetDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetTimesheetDetail
          EmployeeId:
            description: Employee id for get employee timesheet detail
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Start Date to get employee timesheet detail
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End Date to get employee timesheet detail
            allOf:
              - $ref: '#/components/schemas/EndDate'
      GetProjectTimesheetDetail:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to get project time sheet detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetProjectTimesheetDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetProjectTimesheetDetail
          EmployeeId:
            description: Employee id
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Employee project timesheet start date
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: Employee project timesheet end date
            allOf:
              - $ref: '#/components/schemas/EndDate'
      CreateVacancyDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - VacancyName
          - VacancyDescription
          - Reference
          - IsHideSalary
          - VacancyType
          - IsCoverLetterMandatory
          - IsResumeMandatory
        properties:
          APIKey:
            description: APIKey for vacancy api to create new vacancy
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateNewVacancy
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateNewVacancy
          VacancyName:
            description: Vacancy name for create new vacancy
            allOf:
              - $ref: '#/components/schemas/VacancyName'
          VacancyDescription:
            description: Vacancy description for create new vacancy
            allOf:
              - $ref: '#/components/schemas/VacancyDescription'
          Company:
            description: Company name for create new vacancy
            allOf:
              - $ref: '#/components/schemas/Company'
          Location:
            description: Location for create new vacancy
            allOf:
              - $ref: '#/components/schemas/Location'
            maxLength: '100'
          Department:
            description: Department for create new vacancy
            allOf:
              - $ref: '#/components/schemas/Department'
            maxLength: '100'
          ClosingDate:
            description: Closing date for create new vacancy
            allOf:
              - $ref: '#/components/schemas/ClosingDate'
          Reference:
            description: Reference for create new vacancy
            allOf:
              - $ref: '#/components/schemas/Reference'
            maxLength: '100'
          Comment:
            description: Comment for create new vacancy
            allOf:
              - $ref: '#/components/schemas/Comment'
          SalaryRange:
            description: Salary range for create new vacancy
            allOf:
              - $ref: '#/components/schemas/SalaryRange'
          JobDescription:
            description: Job description for create new vacancy
            allOf:
              - $ref: '#/components/schemas/JobDescription'
          IsCoverLetterMandatory:
            description: Is cover letter mandatory for create new vacancy
            allOf:
              - $ref: '#/components/schemas/IsCoverLetterMandatory'
          IsResumeMandatory:
            description: Is resume mandatory for create new vacancy
            allOf:
              - $ref: '#/components/schemas/IsResumeMandatory'
          IsHideSalary:
            description: Is hide salary for create new vacancy
            allOf:
              - $ref: '#/components/schemas/IsHideSalary'
          VacancyType:
            description: Vacancy type for create new vacancy
            allOf:
              - $ref: '#/components/schemas/VacancyType'
          JobTitle:
            description: Job title for create new vacancy
            allOf:
              - $ref: '#/components/schemas/JobTitle'
          City:
            description: City for create new vacancy
            allOf:
              - $ref: '#/components/schemas/City'
          Country:
            description: Country value
            allOf:
              - $ref: '#/components/schemas/Country'
          Experience:
            description: 'Experience '
            allOf:
              - $ref: '#/components/schemas/Experience'
      GetVacancyParameters:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - Reference
        properties:
          APIKey:
            description: APIKey for vacancy api to get vacancy
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetVacancy
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetVacancy
          VacancyReference:
            description: Vacancy reference for get vacancy
            allOf:
              - $ref: '#/components/schemas/VacancyReference'
      GetAllVacancyParameters:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for vacancy api to get all vacancy
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetAllVacancies
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetAllVacancies
      CreateApplicantDetailParameter:
        type: object
        required:
          - APIKey
          - Action
          - FirstName
          - LastName
          - QuestionId
          - Documents
          - Skills
        properties:
          APIKey:
            description: APIKey for applicant api to Create new applicant
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CreateNewApplicant
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CreateNewApplicant
          VacancyReference:
            description: Vacancy reference for create new applicant
            allOf:
              - $ref: '#/components/schemas/VacancyReference'
          FirstName:
            description: First name for create new applicant
            allOf:
              - $ref: '#/components/schemas/FirstName'
          LastName:
            description: Last name for create new applicant
            allOf:
              - $ref: '#/components/schemas/LastName'
          Email:
            description: Email for create new applicant
            allOf:
              - $ref: '#/components/schemas/Email'
          Gender:
            description: Gender for create new applicant
            allOf:
              - $ref: '#/components/schemas/Gender'
          DateOfBirth:
            description: Date of birth for create new applicant
            allOf:
              - $ref: '#/components/schemas/DateOfBirth'
          PostCode:
            description: Post code for create new applicant
            allOf:
              - $ref: '#/components/schemas/PostCode'
          Address:
            description: Address for create new applicant
            allOf:
              - $ref: '#/components/schemas/Address'
          PhoneNumber:
            description: PhoneNumber for create new applicant
            allOf:
              - $ref: '#/components/schemas/PhoneNumber'
          OtherContactDetails:
            description: Other contact details for create new applicant
            allOf:
              - $ref: '#/components/schemas/OtherContactDetails'
          Source:
            description: Source for create new applicant
            allOf:
              - $ref: '#/components/schemas/Source'
          AdditionalQuestions:
            description: Source for create new applicant
            allOf:
              - $ref: >-
                  #/components/schemas/AdditionalQuestionsForCreatenewApplicantArray
          InternalQuestions:
            description: Internal questions for create new applicant
            allOf:
              - $ref: '#/components/schemas/InternalQuestionsForCreateNewApplicantArray'
          Documents:
            description: Documents for create new applicant
            allOf:
              - $ref: '#/components/schemas/DocumentsForCreateNewApplicantArray'
          Skills:
            description: Skills for create new applicant
            allOf:
              - $ref: '#/components/schemas/Skills'
          RecruitmentCost:
            description: Recruitment cost for create new applicant
            allOf:
              - $ref: '#/components/schemas/RecruitmentCost'
          DateLastContacted:
            description: Date last contacted for create new applicant
            allOf:
              - $ref: '#/components/schemas/DateLastContacted'
      uploadapplicantdocumentParameter:
        type: object
        required:
          - APIKey
          - Action
          - ApplicantId
          - DocumentName
          - File
        properties:
          APIKey:
            description: APIKey for Employee late api to upload applicant document
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = uploadapplicantdocument
            allOf:
              - $ref: '#/components/schemas/Action'
            example: uploadapplicantdocument
          ApplicantId:
            description: ApplicantId for upload applicant document
            allOf:
              - $ref: '#/components/schemas/ApplicantId'
          DocumentName:
            description: Document name for upload applicant document
            allOf:
              - $ref: '#/components/schemas/DocumentName'
          Description:
            description: Description for upload applicant document
            allOf:
              - $ref: '#/components/schemas/Description'
          File:
            description: File for upload applicant document
            allOf:
              - $ref: '#/components/schemas/File'
      GetLateByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for Employee late api for Get late by employee
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetLateByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetLateByEmployeeId
          EmployeeId:
            description: Employee id for Get late by employee
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: Start date for Get late by employee
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End date for Get late by employee
            allOf:
              - $ref: '#/components/schemas/EndDate'
      AddNewLateParameters:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - LateDate
          - HowLate
          - Comments
        properties:
          APIKey:
            description: APIKey for Employee late to add new late
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewLate
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewLate
          EmployeeId:
            description: Employee id for add new late
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          LateDate:
            description: Late date for add new late
            allOf:
              - $ref: '#/components/schemas/LateDate'
          HowLate:
            description: How late for add new late
            allOf:
              - $ref: '#/components/schemas/HowLate'
          Comments:
            description: Comments for add new late
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      UpdateLateParameters:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - LateDate
          - HowLate
        properties:
          APIKey:
            description: APIKey for Employee late to update late
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateLate
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateLate
          EmployeeId:
            description: Employee id for update late
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          LateDate:
            description: Late date for update late
            allOf:
              - $ref: '#/components/schemas/LateDate'
          HowLate:
            description: How late for update late
            allOf:
              - $ref: '#/components/schemas/HowLate'
          Comments:
            description: Comments for update late
            allOf:
              - $ref: '#/components/schemas/Comments'
            maxLength: '256'
      EmployeedeletelateParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - LateDate
        properties:
          APIKey:
            description: APIKey for Employee late api to delete late record
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteLate
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteLate
          EmployeeId:
            description: Employee id for delete late record
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          LateDate:
            description: Late date for delete late record
            allOf:
              - $ref: '#/components/schemas/LateDate'
      CheckDuplicateApplicantParameter:
        type: object
        required:
          - APIKey
          - Action
          - FirstName
          - LastName
        properties:
          APIKey:
            description: APIKey for applicant api to check duplicate applicant
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = CheckDuplicateApplicant
            allOf:
              - $ref: '#/components/schemas/Action'
            example: CheckDuplicateApplicant
          VacancyReference:
            description: Vacancy reference for check duplicate applicant
            allOf:
              - $ref: '#/components/schemas/VacancyReference'
          FirstName:
            description: First name for check duplicate applicant
            allOf:
              - $ref: '#/components/schemas/FirstName'
          LastName:
            description: Last name for check duplicate applicant
            allOf:
              - $ref: '#/components/schemas/LastName'
          Email:
            description: Email for check duplicate applicant
            allOf:
              - $ref: '#/components/schemas/Email'
      WorkPatternParameter:
        type: object
        required:
          - APIKey
          - Action
          - WorkPatternId
        properties:
          APIKey:
            description: APIKey for applicant api to get Work pattern parameter detail
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetWorkPatternDetail
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetWorkPatternDetail
          WorkPatternId:
            description: Work patternId for get work pattern
            allOf:
              - $ref: '#/components/schemas/WorkPatternId'
          WorkPatternName:
            description: Work pattern name for get work pattern
            allOf:
              - $ref: '#/components/schemas/WorkPatternName'
      AdditionalQuestionsForCreatenewApplicantArray:
        type: array
        items:
          type: object
          properties:
            QuestionId:
              type: byte
              description: 'Question id default value '
              example: '2'
            Value:
              type: byte
              description: 'Value  default value '
              example: '1'
      InternalQuestionsForCreateNewApplicantArray:
        type: array
        items:
          type: object
          properties:
            QuestionId:
              type: byte
              description: 'Question id default value '
              example: '2'
            Value:
              type: byte
              description: 'Value  default value '
              example: '1'
      DocumentsForCreateNewApplicantArray:
        type: array
        items:
          type: object
          properties:
            DocumentName:
              type: string
              maxLength: '100 '
              description: 'Document name id default value '
              example: xyz.png
            Url:
              type: string
              format: url
              maxLength: '256'
              description: Doc2
              example: www.google.com/doc2.docx
      GetByEmployeeIdForEmployeeAppraisal:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for employee api to GetByEmployeeId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByEmployeeId
          EmployeeId:
            description: ' Employee id for get by employee id'
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          StartDate:
            description: 'Start date for get by employee id '
            allOf:
              - $ref: '#/components/schemas/StartDate'
          EndDate:
            description: End Date for get by employee id
            allOf:
              - $ref: '#/components/schemas/EndDate'
      GetByAppraisalIdForEmployeeAppraisal:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - AppraisalId
        properties:
          APIKey:
            description: APIKey for employee api to GetByAppraisalId
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByAppraisalId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByAppraisalId
          EmployeeId:
            description: ' Employee id for get by appraisal id'
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          AppraisalId:
            description: Appraisal id for get by appraisal id
            allOf:
              - $ref: '#/components/schemas/AppraisalId'
      AddNewAppraisalParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - AppraisalReviewDate
          - Reviewer
          - Notes
          - ActionPlan
          - Objectives
          - CustomColumns
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to AddNewAppraisal
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewAppraisal
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewAppraisal
          EmployeeId:
            description: Employee id for add new appraisal
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          AppraisalReviewDate:
            description: Appraisal review date for add new appraisal
            allOf:
              - $ref: '#/components/schemas/AppraisalReviewDate'
          Reviewer:
            description: Reviewer for add new appraisal
            allOf:
              - $ref: '#/components/schemas/Reviewer'
          Notes:
            description: Notes for add new appraisal
            allOf:
              - $ref: '#/components/schemas/Notes'
          ActionPlan:
            description: Action Plan for add new appraisal
            allOf:
              - $ref: '#/components/schemas/ActionPlan'
          Objectives:
            description: 'Objectives for add new appraisal '
            allOf:
              - $ref: '#/components/schemas/Objectives'
          CustomColumns:
            description: Custom columns
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForAddNewAppraisal'
          AddFiles:
            description: Add Files info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAddNewAppraisal'
      UpdateAppraisalParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - AppraisalId
          - AppraisalReviewDate
          - Reviewer
          - Notes
          - ActionPlan
          - Objectives
          - CustomColumns
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to UpdateAppraisal
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateAppraisal
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateAppraisal
          EmployeeId:
            description: Employee Id for update appraisal
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          AppraisalReviewDate:
            description: Appraisal review date  for update appraisal
            allOf:
              - $ref: '#/components/schemas/AppraisalReviewDate'
          Reviewer:
            description: Reviewer for update appraisal
            allOf:
              - $ref: '#/components/schemas/Reviewer'
          Notes:
            description: Notes for update appraisal
            allOf:
              - $ref: '#/components/schemas/Notes'
          ActionPlan:
            description: Action Plan for update appraisal
            allOf:
              - $ref: '#/components/schemas/ActionPlan'
          Objectives:
            description: Objectives for update appraisal
            allOf:
              - $ref: '#/components/schemas/Objectives'
          CustomColumns:
            description: Custom Columns of user
            allOf:
              - $ref: '#/components/schemas/CustomColumnsArrayForUpdateAppraisal'
          AddFiles:
            description: Add Files Info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForUpdateAppraisal'
      DeleteAppraisalParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - AppraisalId
        properties:
          APIKey:
            description: APIKey for employee api to DeleteAppraisal
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteAppraisal
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteAppraisal
          EmployeeId:
            description: Employee Id for delete appraisal
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          AppraisalId:
            description: Appraisal Id for delete appraisal
            allOf:
              - $ref: '#/components/schemas/AppraisalId'
      GetByMaternityPaternityParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - MaternityPaternityTxnId
        properties:
          APIKey:
            description: APIKey for get by maternity paternity
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetByMaternityPaternityId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetByMaternityPaternityId
          EmployeeId:
            description: Employeeid for get by maternity paternity
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          MaternityPaternityTxnId:
            description: CPID for get by maternity paternity
            allOf:
              - $ref: '#/components/schemas/MaternityPaternityTxnId'
      GetMaternityPaternityByEmployeeIdParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
        properties:
          APIKey:
            description: APIKey for get by maternity paternity by employeeid
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = GetMaternityPaternityByEmployeeId
            allOf:
              - $ref: '#/components/schemas/Action'
            example: GetMaternityPaternityByEmployeeId
          EmployeeId:
            description: Employeeid for get by maternity paternity by employeeid
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          ActualStartDate:
            description: CPID for get by maternity paternity by employee id
            allOf:
              - $ref: '#/components/schemas/ActualStartDate'
          ActualEndDate:
            description: CPID for get by maternity paternity by employee id
            allOf:
              - $ref: '#/components/schemas/ActualEndDate'
      AddNewMaternityPaternityParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - DueDate
          - ActualStartDate
          - ActualEndDate
          - AddComments
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to AddNewMaternityPaternity
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = AddNewMaternityPaternity
            allOf:
              - $ref: '#/components/schemas/Action'
            example: AddNewMaternityPaternity
          EmployeeId:
            description: Employee Id for add new maternity paternity
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          DueDate:
            description: DueDate for add new maternity paternity
            allOf:
              - $ref: '#/components/schemas/DueDate'
          ActualStartDate:
            description: Actual Start Date for add new maternity paternity
            allOf:
              - $ref: '#/components/schemas/ActualStartDate'
          ActualEndDate:
            description: Actual End Date for add new maternity paternity
            allOf:
              - $ref: '#/components/schemas/ActualEndDate'
          AddComments:
            description: AddComments value
            allOf:
              - $ref: '#/components/schemas/AddCommentsArrayForMaternityPaternity'
          AddFiles:
            description: AddFiles info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAddNewMaternityPaternity'
      AddCommentsArrayForMaternityPaternity:
        type: array
        items:
          required:
            - Comment
          type: object
          properties:
            Comment:
              description: Comments goes here
              type: string
              example: Comments goes here
              maxLength: '1024'
      AddFilesArrayForAddNewMaternityPaternity:
        type: array
        items:
          required:
            - DocumentName
            - File
          type: object
          properties:
            DocumentName:
              description: DocumentName value
              type: string
              example: 123.png
              maxLength: '100'
            File:
              description: File
              type: string
              example: pass base64 string
            Description:
              description: Description value
              type: string
              example: dsadsadasdasd
              maxLength: '256'
      UpdateMaternityPaternityParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - MaternityPaternityTxnId
          - DueDate
          - ActualStartDate
          - ActualEndDate
          - AddComments
          - AddFiles
        properties:
          APIKey:
            description: APIKey for employee api to UpdateMaternityPaternity
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = UpdateMaternityPaternity
            allOf:
              - $ref: '#/components/schemas/Action'
            example: UpdateMaternityPaternity
          EmployeeId:
            description: Employee Id for update maternity paternity
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          MaternityPaternityTxnId:
            description: MaternityPaternityTxnId for update maternity paternity
            allOf:
              - $ref: '#/components/schemas/MaternityPaternityTxnId'
          DueDate:
            description: DueDate for update maternity paternity
            allOf:
              - $ref: '#/components/schemas/DueDate'
          ActualStartDate:
            description: ActualStartDate for update maternity paternity
            allOf:
              - $ref: '#/components/schemas/ActualStartDate'
          ActualEndDate:
            description: ActualEndDate for update maternity paternity
            allOf:
              - $ref: '#/components/schemas/ActualEndDate'
          AddComments:
            description: AddComments
            allOf:
              - $ref: '#/components/schemas/AddCommentsArrayForMaternityPaternity'
          AddFiles:
            description: AddFiles info.
            allOf:
              - $ref: '#/components/schemas/AddFilesArrayForAddNewMaternityPaternity'
      DeleteMaternityPaternityParameter:
        type: object
        required:
          - APIKey
          - Action
          - EmployeeId
          - MaternityPaternityTxnId
        properties:
          APIKey:
            description: APIKey for employee api to DeleteMaternityPaternity
            type: string
            allOf:
              - $ref: '#/components/schemas/APIKey'
          Action:
            description: Action name = DeleteMaternityPaternity
            allOf:
              - $ref: '#/components/schemas/Action'
            example: DeleteMaternityPaternity
          EmployeeId:
            description: Employee Id value
            allOf:
              - $ref: '#/components/schemas/EmployeeId'
          MaternityPaternityTxnId:
            description: MaternityPaternityTxnId Value
            allOf:
              - $ref: '#/components/schemas/MaternityPaternityTxnId'
      Time_AttendanceID:
        type: string
        description: 'Time & Attendance ID default value '
        maxLength: 200
        example: Your Time & Attendance ID
konfigCliVersion: 1.38.61
