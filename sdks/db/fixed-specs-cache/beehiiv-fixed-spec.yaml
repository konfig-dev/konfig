publishJson:
  company: beehiiv
  serviceName: false
  sdkName: beehiiv-{language}-sdk
  clientName: Beehiiv
  metaDescription: >-
    beehiiv is a New York-based digital platform that enables users to write,
    monetize and distribute newsletters.
  apiStatusUrls: inherit
  homepage: beehiiv.com
  developerDocumentation: developers.beehiiv.com/docs/v2
  categories:
    - writing
    - newsletter
rawSpecString: |
  openapi: 3.1.0
  x-stoplight:
    id: o3elujhmkik1d
  info:
    title: Beehiiv API
    version: 2.0.1
    description: Swarm public API
    contact:
      email: support@beehiiv.com
      name: Support
      url: support.beehiiv.com
  servers:
    - url: https://api.beehiiv.com/v2
      description: Production server
  security:
    - bearerAuth: []
  components:
    headers:
      rate-limit-limit:
        description: The total number of requests allowed in a 60 second period
        schema:
          nullable: true
          type: integer
          example: 60
      rate-limit-remaining:
        description: The number of requests remaining
        schema:
          nullable: true
          type: integer
          example: 59
      rate-limit-reset:
        description: >-
          The time that the rate limit will be reset. Measured in seconds since
          the Unix epoch
        schema:
          nullable: true
          type: integer
          example: 1666800076
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: >-
          This Bearer token is the same as the API token created on your beehiiv
          account.
    schemas:
      CustomField:
        title: CustomField
        x-stoplight:
          id: rk9nka45rfxj4
        type: object
        x-internal: false
        properties:
          name:
            type: string
            description: The name of the existing custom field
          kind:
            type: string
            description: The type of value being stored in the custom field.
            enum:
              - string
              - integer
              - boolean
              - date
              - datetime
          value:
            type: string
            description: The value stored for the subscription
      CustomFieldValue:
        title: CustomFieldValue
        x-stoplight:
          id: nt2bm5zdr2m0j
        type: object
        description: The object required for setting custom field values on a subscription
        x-internal: false
        properties:
          name:
            type: string
            description: The name of the existing custom field
            example: first_name
          value:
            type: string
            description: The value stored for the subscription
            example: Bruce
      EmailBlast:
        title: EmailBlast
        x-stoplight:
          id: a2yvd323rnl4u
        type: object
        properties:
          id:
            type: string
            description: The prefixed email blast id
            example: blast_00000000-0000-0000-0000-000000000000
            pattern: ^(blast_)
          created:
            type: integer
            description: >-
              The time the blast was created. Measured in seconds since the Unix
              epoch
            example: 1666800076
          last_sent:
            type: integer
            x-stoplight:
              id: hpu58594krfo2
            description: >-
              The time the blast was last sent. Measured in seconds since the Unix
              epoch
            example: 1666800076
          status:
            type: string
            enum:
              - active
              - inactive
            default: inactive
            example: active
            description: >-
              The status of the blast.<br>`inactive` - not been
              scheduled.<br>`active` - The blast is scheduled to send.
          subject_line:
            type: string
            example: Check this out
            description: The email subject line.
          preview_text:
            type: string
            description: The email preview text
            example: More news on the horizon
          stats:
            $ref: '#/components/schemas/EmailBlastStats'
          content:
            $ref: '#/components/schemas/EmailBlastContent'
        required:
          - id
          - created
          - status
          - subject_line
          - preview_text
          - last_sent
      EmailBlastContent:
        title: EmailBlastContent
        x-stoplight:
          id: sj2a3n6m8k2p0
        type: object
        description: >-
          Optional html content for an email blast. Retrievable by including any
          of `expand: [free_email_content, premium_email_content]` in the post
          request body.


          **Note:** Generating HTML is slow. We recommend only requesting the HTML
          versions you need at the time.
        properties:
          email:
            type: object
            properties:
              free:
                type: string
                example: <HTML><body><h1>New Email Blast</h1></body></HTML>
              premium:
                type: string
                example: <HTML><body><h1>New Email Blast</h1></body></HTML>
      EmailBlastStats:
        title: EmailBlastStats
        x-stoplight:
          id: bdl7lkcvmkb35
        type: object
        description: >-
          Optional list of stats for an email blast. Retrievable by including
          `expand: [stats]` in the email blast request body.
        properties:
          email:
            type: object
            description: >-
              Stats scoped only to email recipients. Not relevant for posts
              published only to web
            properties:
              recipients:
                type: integer
                description: Total number of email recipients
                example: 100
                default: 0
              opens:
                type: integer
                description: Total number of email opens
                example: 50
                default: 0
              unique_opens:
                type: integer
                minimum: 0
                default: 0
                description: Total number of unique email opens
                example: 45
              open_rate:
                type: number
                default: 0
                minimum: 0
                format: float
                description: The percentage of emails that have been opened
              clicks:
                type: integer
                description: Total number of email clicks
                example: 10
                default: 0
              unique_clicks:
                type: integer
                description: Unique number of email clicks
                example: 8
                default: 0
              click_rate:
                type: number
                default: 0
                format: float
                description: The percentage of emails that have been clicked
              unsubscribes:
                type: integer
                description: Total number of email unsubscribes
                example: 1
                default: 0
              spam_reports:
                type: integer
                minimum: 0
                example: 1
                default: 0
                description: The number of subscribers that reported this post email as spam
          clicks:
            type: array
            description: An array of click statistics for each URL in the post
            items:
              type: object
              properties:
                url:
                  type: string
                  description: The URL the stats are for
                total_clicks:
                  type: integer
                  example: 10
                total_unique_clicks:
                  type: integer
                  example: 8
                total_click_through_rate:
                  type: number
                  description: >-
                    The percentage of clicks on the URL compared to the total
                    number of recipients and web views
                  example: 30
      Error:
        title: Error
        x-stoplight:
          id: ihtzzm7oqxiln
        type: object
        description: The top level error response.
        x-internal: false
        x-examples:
          example-1:
            status: '400'
            statusText: bad_request
            errors:
              - message: Email is invalid
                code: INVALID_EMAIL
        properties:
          status:
            type: string
            example: '400'
          statusText:
            type: string
            example: bad_request
          errors:
            type: array
            items:
              type: object
              required:
                - message
                - code
              properties:
                message:
                  type: string
                  example: Email is invalid
                code:
                  type: string
                  example: INVALID_EMAIL
        required:
          - status
          - statusText
          - errors
      Milestone:
        title: Milestone
        x-stoplight:
          id: mxazfwtbrjrh6
        type: object
        description: The milestone object.
        properties:
          id:
            type: string
            description: A unique prefixed id of the milestone.
            pattern: ^(mile_)
            example: mile_00000000-0000-0000-0000-000000000000
          auto_fulfill:
            type: boolean
            description: >-
              Only available with a promo code reward type. This indicates that an
              email will automatically be sent when the milestone is reached
              containing the reward promo code.
          num_referrals:
            type: integer
            description: The number of referrals needed to reach this milestone.
            minimum: 0
          reward:
            $ref: '#/components/schemas/MilestoneReward'
        required:
          - id
          - auto_fulfill
          - num_referrals
          - reward
      MilestoneReward:
        title: MilestoneReward
        x-stoplight:
          id: vqhircw5tltzd
        type: object
        description: The reward object.
        properties:
          id:
            type: string
            pattern: ^(rew_)
            example: rew_00000000-0000-0000-0000-000000000000
            description: A unique prefixed id of the reward.
          name:
            type: string
            description: The name given to the reward at creation.
          description:
            type: string
            description: The description given to the name at creation.
          image_url:
            type: string
            description: A URL of an image to be displayed with the reward.
          type:
            type: string
            enum:
              - physical
              - promo_code
            description: >-
              What type of reward this is.<br>`physical` - A product which must be
              sent to the subscriber.<br>`promo_code` - A code that is redeemable
              for goods or services.
        required:
          - id
          - name
          - description
          - image_url
          - type
      Subscription:
        title: Subscription
        x-stoplight:
          id: aydgk4ov4a8qu
        type: object
        x-examples:
          example-1:
            id: sub_00000000-0000-0000-0000-000000000000
            email: example@example.com
            status: active
            created: '1666793673'
            subscription_tier: string
            source: string
            medium: string
            channel: string
            embed_name: string
            referring_site: string
            stats:
              emails_received: string
              open_rate: 0
              click_through_rate: 0
            custom_fields:
              - name: string
                type: string
                value: string
        description: The subscription object
        properties:
          id:
            type: string
            description: The prefixed subscription id
            example: sub_00000000-0000-0000-0000-000000000000
          email:
            type: string
            example: example@example.com
            format: email
          status:
            type: string
            description: >-
              The status of the subscription.<br>`validating` - The email address
              is being validated.<br>`invalid` - The email address is
              invalid.<br>`pending` - The email address is valid, but the
              subscription is pending double opt-in.<br>`active` - The email was
              valid and the subscription is active.<br>`inactive` - The
              subscription was made inactive, possibly due to an
              unsubscribe.<br>`needs_attention` - The subscription requires
              approval or denial.
            example: active
            enum:
              - validating
              - invalid
              - pending
              - active
              - inactive
              - needs_attention
          created:
            type: integer
            description: >-
              The date the subscription was created. Measured in seconds since the
              Unix epoch
            example: 1666800076
          subscription_tier:
            type: string
            description: The current tier of the subscription.
            enum:
              - free
              - premium
            example: free
          utm_source:
            type: string
            description: The acquisition source; where the subscriber came from
            example: Twitter
          utm_medium:
            type: string
            description: The acquisition medium; how the subscriber got to your publication
            example: organic
          utm_channel:
            type: string
            description: The acquisition channel
            example: website
            enum:
              - ''
              - website
              - import
              - embed
              - api
              - referral
              - recommendation
              - magic_link
              - boost
              - boost_send
              - boost_direct_link
          utm_campaign:
            type: string
            description: The acquisition campaign
          referring_site:
            type: string
            description: The website that the subscriber was referred from
            example: https://www.blog.com
          referral_code:
            type: string
            description: >-
              The code associated to this subscriber to refer others. When a new
              subscription is created with this referral code, credit for the
              referral goes to this subscription.
          stripe_customer_id:
            type: string
            x-stoplight:
              id: z2832pkqve156
            description: The Customer ID associated with this subscription in Stripe
        required:
          - id
          - email
          - status
          - created
          - subscription_tier
          - utm_source
          - utm_medium
          - utm_channel
          - utm_campaign
          - referring_site
          - referral_code
      SubscriptionExpandedTags:
        title: Subscription
        x-stoplight:
          id: bwnc74sylov3m
        type: object
        x-examples:
          example-1:
            id: sub_00000000-0000-0000-0000-000000000000
            email: example@example.com
            status: active
            created: '1666793673'
            subscription_tier: string
            source: string
            medium: string
            channel: string
            embed_name: string
            referring_site: string
            stats:
              emails_received: string
              open_rate: 0
              click_through_rate: 0
            custom_fields:
              - name: string
                type: string
                value: string
        description: The subscription object
        properties:
          id:
            type: string
            description: The prefixed subscription id
            example: sub_00000000-0000-0000-0000-000000000000
          email:
            type: string
            example: example@example.com
            format: email
          status:
            type: string
            description: >-
              The status of the subscription.<br>`validating` - The email address
              is being validated.<br>`invalid` - The email address is
              invalid.<br>`pending` - The email address is valid, but the
              subscription is pending double opt-in.<br>`active` - The email was
              valid and the subscription is active.<br>`inactive` - The
              subscription was made inactive, possibly due to an
              unsubscribe.<br>`needs_attention` - The subscription requires
              approval or denial.
            example: active
            enum:
              - validating
              - invalid
              - pending
              - active
              - inactive
              - needs_attention
          created:
            type: integer
            description: >-
              The date the subscription was created. Measured in seconds since the
              Unix epoch
            example: 1666800076
          subscription_tier:
            type: string
            description: The current tier of the subscription.
            enum:
              - free
              - premium
            example: free
          utm_source:
            type: string
            description: The acquisition source; where the subscriber came from
            example: Twitter
          utm_medium:
            type: string
            description: The acquisition medium; how the subscriber got to your publication
            example: organic
          utm_channel:
            type: string
            description: The acquisition channel
            example: website
            enum:
              - ''
              - website
              - import
              - embed
              - api
              - referral
              - recommendation
              - magic_link
              - boost
              - boost_send
              - boost_direct_link
          utm_campaign:
            type: string
            description: The acquisition campaign
          referring_site:
            type: string
            description: The website that the subscriber was referred from
            example: https://www.blog.com
          referral_code:
            type: string
            description: >-
              The code associated to this subscriber to refer others. When a new
              subscription is created with this referral code, credit for the
              referral goes to this subscription.
          stripe_customer_id:
            type: string
            description: The Customer ID associated with this subscription in Stripe
          tags:
            $ref: '#/components/schemas/SubscriptionTags'
        required:
          - id
          - email
          - status
          - created
          - subscription_tier
          - utm_source
          - utm_medium
          - utm_channel
          - utm_campaign
          - referring_site
          - referral_code
      SubscriptionExpanded:
        title: Subscription
        x-stoplight:
          id: qwmzttzpepf0w
        type: object
        x-examples:
          example-1:
            id: sub_00000000-0000-0000-0000-000000000000
            email: example@example.com
            status: active
            created: '1666793673'
            subscription_tier: string
            source: string
            medium: string
            channel: string
            embed_name: string
            referring_site: string
            stats:
              emails_received: string
              open_rate: 0
              click_through_rate: 0
            custom_fields:
              - name: string
                type: string
                value: string
        description: The subscription object
        required:
          - id
          - email
          - status
          - created
          - subscription_tier
          - utm_source
          - utm_medium
          - utm_channel
          - utm_campaign
          - referring_site
          - referral_code
        properties:
          id:
            type: string
            description: The prefixed subscription id
            example: sub_00000000-0000-0000-0000-000000000000
          email:
            type: string
            example: example@example.com
            format: email
          status:
            type: string
            description: >-
              The status of the subscription.<br>`validating` - The email address
              is being validated.<br>`invalid` - The email address is
              invalid.<br>`pending` - The email address is valid, but the
              subscription is pending double opt-in.<br>`active` - The email was
              valid and the subscription is active.<br>`inactive` - The
              subscription was made inactive, possibly due to an
              unsubscribe.<br>`needs_attention` - The subscription requires
              approval or denial.
            example: active
            enum:
              - validating
              - invalid
              - pending
              - active
              - inactive
              - needs_attention
          created:
            type: integer
            description: >-
              The date the subscription was created. Measured in seconds since the
              Unix epoch
            example: 1666800076
          subscription_tier:
            type: string
            description: The current tier of the subscription.
            enum:
              - free
              - premium
            example: free
          utm_source:
            type: string
            description: The acquisition source; where the subscriber came from
            example: Twitter
          utm_medium:
            type: string
            description: The acquisition medium; how the subscriber got to your publication
            example: organic
          utm_channel:
            type: string
            description: The acquisition channel
            example: website
            enum:
              - ''
              - website
              - import
              - embed
              - api
              - referral
              - recommendation
              - magic_link
              - boost
              - boost_send
              - boost_direct_link
          utm_campaign:
            type: string
            description: The acquisition campaign
          referring_site:
            type: string
            description: The website that the subscriber was referred from
            example: https://www.blog.com
          referral_code:
            type: string
            description: >-
              The code associated to this subscriber to refer others. When a new
              subscription is created with this referral code, credit for the
              referral goes to this subscription.
          custom_fields:
            $ref: '#/components/schemas/SubscriptionCustomFields'
          stats:
            $ref: '#/components/schemas/SubscriptionStats'
          tags:
            $ref: '#/components/schemas/SubscriptionTags'
            x-stoplight:
              id: pxjb68anwzu3i
      SubscriptionCustomFields:
        title: SubscriptionCustomFields
        x-stoplight:
          id: tykiqw94yed5a
        type: array
        description: >-
          Optional list of custom fields for a subscription. Retrievable by
          including `expand: [custom_field]` in the request body.
        x-internal: false
        items:
          $ref: '#/components/schemas/CustomField'
      SubscriptionStats:
        title: SubscriptionStats
        x-stoplight:
          id: trtodo6yec1t9
        type: object
        description: >-
          Optional list of stats for a subscription. Retrievable by including
          `expand: [stats]` in the request body.
        x-internal: false
        properties:
          emails_received:
            type: integer
            description: The total number of emails that have been sent to this subscriber
            example: 25
          open_rate:
            type: number
            description: The percentage of emails that the subscriber has opened
            minimum: 0
            maximum: 100
            example: 60.1
          click_through_rate:
            type: number
            description: The percentage of emails that the subscriber has clicked a link in
            example: 25
            minimum: 0
            maximum: 100
      SubscriptionTags:
        title: SubscriptionTags
        x-stoplight:
          id: 2lfoiiactqerd
        type: array
        example:
          - Premium
          - Basic
          - Active
          - Engaged
        items:
          x-stoplight:
            id: v7lwpr9quql15
          type: string
          example: Premium
        description: >-
          Optional list of tags form a subscription. Retrievable by including
          `expand: [tags]` in the request body.

          Max limit of 100 unique tags per publication.
      Post:
        title: Post
        x-stoplight:
          id: w4yo4wkzjdd1v
        type: object
        required:
          - id
          - subtitle
          - title
          - authors
          - created
          - status
          - publish_date
          - displayed_date
          - split_tested
          - subject_line
          - preview_text
          - slug
          - thumbnail_url
          - web_url
          - audience
          - platform
          - content_tags
          - hidden_from_feed
        properties:
          id:
            type: string
            description: The prefixed post id
            example: post_00000000-0000-0000-0000-000000000000
            pattern: ^(post_)
          subtitle:
            type: string
            example: New post subtitle
            description: The subtitle displayed in web views
          title:
            type: string
            example: New Post Title
            description: The title displayed in web views
          authors:
            type: array
            description: An array of author names
            uniqueItems: true
            items:
              type: string
              example: Clark Kent
          created:
            type: integer
            description: >-
              The time the post was created. Measured in seconds since the Unix
              epoch
            example: 1666800076
          status:
            type: string
            enum:
              - draft
              - confirmed
              - archived
            default: draft
            example: confirmed
            description: >-
              The status of the post.<br>`draft` - not been
              scheduled.<br>`confirmed` - The post will be active after the
              `scheduled_at`.<br>`archived` - The post is no longer active.
          publish_date:
            type: integer
            example: 1666800076
            description: >-
              The time the post was set to be published. Measured in seconds since
              the Unix epoch
            nullable: true
          displayed_date:
            type: integer
            example: 1666800076
            description: >-
              The time displayed in place of the `publish_date`. Measured in
              seconds since the Unix epoch
            nullable: true
          split_tested:
            type: boolean
            description: >-
              A flag to indicate if a split test was done. Only applicable to
              email posts.
          subject_line:
            type: string
            example: Check this out
            description: >-
              The email subject line. In cases of A/B Testing, this will be
              adjusted to the winning subject line.
          preview_text:
            type: string
            description: The email preview text
            example: More news on the horizon
          slug:
            type: string
            description: The web slug where this post can be accessed.
          thumbnail_url:
            type: string
            description: >-
              The URL of the thumbnail. Defaults to the Publication logo if not
              set.
          web_url:
            type: string
            description: >-
              The full URL where this post can be accessed on the web. Only
              applicable if the platform is `web` or `both`.
          audience:
            type: string
            enum:
              - free
              - premium
              - both
            description: >-
              The audience that the post is available to on the web. Only
              applicable if the platform is `web` or `both`.
          platform:
            type: string
            enum:
              - web
              - email
              - both
            description: The platform that the post is or will be published to.
          content_tags:
            type: array
            description: All content tags that were associated with the post.
            items:
              type: string
          meta_default_description:
            type: string
            example: A post with great content
            description: >-
              Meta tag description for the post, called SEO Description in the
              admin UI
            nullable: true
          meta_default_title:
            type: string
            example: My great post
            description: meta tag title for the post, called SEO Title in the admin UI
            nullable: true
          content:
            $ref: '#/components/schemas/PostContent'
          stats:
            $ref: '#/components/schemas/PostStats'
          hidden_from_feed:
            type: boolean
            x-stoplight:
              id: peuj8ftkqndwz
            description: A flag to indicate if the post is hidden from the website feed.
            default: false
      PostClickStats:
        title: ClickStats
        x-stoplight:
          id: 36my8246m0elw
        type: object
        x-internal: false
        properties:
          url:
            type: string
            description: The URL the stats are for
          email:
            type: object
            description: >-
              URL stats scoped only to email recipients. Not relevant for posts
              published only to web
            properties:
              clicks:
                type: integer
                example: 10
              unique_clicks:
                type: integer
                example: 8
              click_through_rate:
                type: number
                example: 30
                description: >-
                  The percentage of email clicks on the URL compared to the total
                  number of recipients
          web:
            type: object
            description: >-
              Stats scoped only to web views. Not relevant for posts published
              only to email
            properties:
              clicks:
                type: integer
                example: 10
              unique_clicks:
                type: integer
                example: 8
              click_through_rate:
                type: number
                description: >-
                  The percentage of clicks on the URL compared to the total number
                  of web views
                example: 30
          total_clicks:
            type: integer
            example: 10
          total_unique_clicks:
            type: integer
            example: 8
          total_click_through_rate:
            type: number
            description: >-
              The percentage of clicks on the URL compared to the total number of
              recipients and web views
            example: 30
        description: Details about specific URL's click stats from a post.
      PostContent:
        title: PostContent
        x-stoplight:
          id: 8raevvy1qkjgq
        type: object
        description: >-
          Optional html content for a post. Retrievable by including any of
          `expand: [free_web_content, free_email_content, free_rss_content,
          premium_web_content, premium_email_content]` in the post request body.


          **Note:** Generating HTML is slow. We recommend only requesting the HTML
          versions you need at the time.
        x-internal: false
        properties:
          free:
            type: object
            description: The requested free post HTML. This HTML has paywalls enforced.
            properties:
              web:
                type: string
                description: The web HTML rendered to a free or annonomous reader.
                example: <HTML><body><h1>New Post</h1></body></HTML>
              email:
                type: string
                description: The email HTML rendered to a free reader.
                example: <HTML><body><h1>New Post</h1></body></HTML>
              rss:
                type: string
                description: The HTML that is rendered in RSS feeds.
                example: <HTML><body><h1>New Post</h1></body></HTML>
          premium:
            type: object
            description: >-
              The requested premium post HTML. This HTML does not have paywalls
              enforced.
            properties:
              web:
                type: string
                description: The website HTML rendered to a free reader
                example: <HTML><body><h1>New Post</h1></body></HTML>
              email:
                type: string
                description: The email HTML rendered to a premium reader
                example: <HTML><body><h1>New Post</h1></body></HTML>
      PostStats:
        title: PostStats
        x-stoplight:
          id: 3ai4n60s897re
        type: object
        description: >-
          Optional list of stats for a post. Retrievable by including `expand:
          [stats]` in the post request body.
        x-internal: false
        properties:
          email:
            type: object
            description: >-
              Stats scoped only to email recipients. Not relevant for posts
              published only to web
            properties:
              recipients:
                type: integer
                description: Total number of email recipients
                example: 100
                default: 0
              opens:
                type: integer
                description: Total number of email opens
                example: 50
                default: 0
              unique_opens:
                type: integer
                minimum: 0
                default: 0
                description: Total number of unique email opens
                example: 45
              open_rate:
                type: number
                default: 0
                minimum: 0
                format: float
                description: The percentage of emails that have been opened
              clicks:
                type: integer
                description: Total number of email clicks
                example: 10
                default: 0
              unique_clicks:
                type: integer
                description: Unique number of email clicks
                example: 8
                default: 0
              click_rate:
                type: number
                default: 0
                format: float
                description: The percentage of emails that have been clicked
              unsubscribes:
                type: integer
                description: Total number of email unsubscribes
                example: 1
                default: 0
              spam_reports:
                type: integer
                minimum: 0
                example: 1
                default: 0
                description: The number of subscribers that reported this post email as spam
          web:
            type: object
            description: >-
              Stats scoped only to web views. Not relevant for posts published
              only to email
            properties:
              views:
                type: integer
                description: Total number of web views
                example: 200
                default: 0
              clicks:
                type: integer
                description: Total number of web clicks
                example: 40
                default: 0
          clicks:
            type: array
            description: An array of click statistics for each URL in the post
            items:
              $ref: '#/components/schemas/PostClickStats'
      Publication:
        type: object
        example:
          id: pub_00000000-0000-0000-0000-000000000000
          name: Example publication
          referral_program_enabled: false
          created: 1694198809
        properties:
          id:
            type: string
            description: A unique prefixed id of the publication
            example: pub_00000000-0000-0000-0000-000000000000
            format: regex
            pattern: ^(pub_)
          name:
            type: string
            description: The name of the publication
            example: The Daily Letter
          referral_program_enabled:
            type: boolean
            description: >-
              A boolean field indicating whether the referral program is active
              for this publication.
          created:
            type: number
            x-stoplight:
              id: 3lggayd0zn3hg
            example: 1694198809
            description: >-
              The time that the publication was created. Measured in seconds since
              the Unix epoch
          stats:
            $ref: '#/components/schemas/PublicationStats'
        required:
          - id
          - name
          - referral_program_enabled
          - created
      PublicationStats:
        title: PublicationStats
        x-stoplight:
          id: 8efq99tljxgch
        type: object
        x-internal: false
        description: >-
          Optional list of stats for a publication. Retrievable by including an
          `expand` array in the publication request body. Add `"stats"` to the
          array to retrieve all, or add individual stats (prefaced with `stat_`)
          to only retrieve specific ones.


          Examples:

          {
            "expand": ["stats"]
          }


          {
            "expand": ["stat_active_subscriptions", "stat_average_click_rate"]
          }
        properties:
          active_subscriptions:
            type:
              - integer
              - boolean
            example: 100
            description: Total number of active free and premium subscriptions
          active_premium_subscriptions:
            type:
              - integer
              - boolean
            example: 20
            description: Total number of active premium/paid subscriptions
          active_free_subscriptions:
            type:
              - integer
              - boolean
            example: 80
            description: Total number of active free subscriptions
          average_open_rate:
            type:
              - number
              - boolean
            example: 60.1
            description: The publications historical average open rate
          average_click_rate:
            type:
              - number
              - boolean
            example: 25
            description: The publications historical average click through rate
          total_sent:
            type:
              - integer
              - boolean
            description: Total number of emails sent
            example: 25000
          total_unique_opened:
            type:
              - integer
              - boolean
            description: >-
              Total number of uniquely opened emails. Only counts the first open
              for each subscriber.
            example: 15025
          total_clicked:
            type:
              - integer
              - boolean
            description: The total number of links clicked from emails.
            example: 6250
      Segment:
        title: Segment
        x-stoplight:
          id: e2rieygnd511w
        type: object
        description: The segment object. To expand results, see the results endpoint.
        properties:
          id:
            type: string
            example: seg_00000000-0000-0000-0000-000000000000
            description: The prefixed ID of the Segment object.
            pattern: ^(seg_)
          name:
            type: string
            description: The name of the segment.
          type:
            type: string
            enum:
              - dynamic
              - static
              - manual
            example: dynamic
            description: >-
              The type of segment.<br>`dynamic` - The segment is recalculated at
              set intervals.<br>`static` - The segment is calculated once at
              creation.<br>`manual` - The segment is not calculated at all. The
              results are created via CSV.
          last_calculated:
            type: integer
            description: >-
              The time the Segment was last calculated. Measured in seconds since
              the Unix epoch
            example: 1666800076
            nullable: true
          total_results:
            type: integer
            example: 15
            description: >-
              The total number of subscriptions that belong in the segment from
              the last calculation.
          status:
            type: string
            description: >-
              The status of the segment's most recent calculation.<br>`pending` -
              The segment has not been calculated yet.<br>`processing` - The
              calculation is in progress, and has not completed.<br>`completed` -
              The calculation was successful.<br>`failed` - Something went wrong
              during the calculation.
            enum:
              - pending
              - processing
              - completed
              - failed
            example: completed
          active:
            type: boolean
            description: >-
              Dynamic segments are marked inactive if they haven't been used in a
              specific period of time. Inactive segments will not automatically be
              recalculated.
        required:
          - id
          - name
          - type
          - last_calculated
          - total_results
          - status
          - active
      Automation:
        title: Automation
        x-stoplight:
          id: yzoyh47yxfabe
        type: object
        required:
          - id
          - status
          - name
        properties:
          id:
            type: string
            x-stoplight:
              id: t8f9ghq7awgc1
            pattern: ^(aut_)
            example: aut_00000000-0000-0000-0000-000000000000
            format: regex
            description: A unique prefixed id of the automation
            readOnly: true
          status:
            x-stoplight:
              id: 9z10mue7z62mn
            enum:
              - running
              - finishing
              - inactive
            readOnly: true
          name:
            type: string
            x-stoplight:
              id: gcmqw0herz7sj
            example: Custom welcome series
            readOnly: true
          description:
            type: string
            x-stoplight:
              id: 9cxbm2gsp5rs7
            example: Sends 2 days after signing up
            readOnly: true
      AutomationJourney:
        title: AutomationJourney
        x-stoplight:
          id: 5mi355v7syqid
        type: object
        description: A subscribers' journey through an automation flow.
        required:
          - id
          - automation_id
          - subscription_id
          - status
        properties:
          id:
            type: string
            x-stoplight:
              id: 55x0t7vx6e8bi
            format: regex
            pattern: ^(aj_)
            example: aj_00000000-0000-0000-0000-000000000000
            description: The prefixed automation journey id
            readOnly: true
          automation_id:
            type: string
            x-stoplight:
              id: p02nikcuv5hd7
            description: |
              The prefixed automation id
            pattern: ^(aut_)
            format: regex
            readOnly: true
          subscription_id:
            type: string
            x-stoplight:
              id: vs55s7or62svd
            description: The prefixed subscription id
            pattern: ^(sub_)
            format: regex
            readOnly: true
          status:
            x-stoplight:
              id: jpfc5uzxt2dx7
            enum:
              - initiated
              - running
              - completed
              - failed
            readOnly: true
          started_at:
            type: integer
            x-stoplight:
              id: zesvr00yamd92
            description: >-
              The time that the subscriber started their flow through the
              automation. Measured in seconds since the Unix epoch.
            example: 1706532562
            readOnly: true
          completed_at:
            type: integer
            x-stoplight:
              id: 82ignyptz7w44
            description: >-
              The time that the subscriber finished their flow through the
              automation. Measured in seconds since the Unix epoch.
            example: 1706541627
            readOnly: true
    responses:
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        headers:
          RateLimit-Limit:
            $ref: '#/components/headers/rate-limit-limit'
          RateLimit-Remaining:
            $ref: '#/components/headers/rate-limit-remaining'
          RateLimit-Reset:
            $ref: '#/components/headers/rate-limit-reset'
      '404':
        description: Resource Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        headers:
          RateLimit-Limit:
            $ref: '#/components/headers/rate-limit-limit'
          RateLimit-Remaining:
            $ref: '#/components/headers/rate-limit-remaining'
          RateLimit-Reset:
            $ref: '#/components/headers/rate-limit-reset'
      '429':
        description: Rate Limit Exceeded
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        headers:
          RateLimit-Limit:
            $ref: '#/components/headers/rate-limit-limit'
          RateLimit-Remaining:
            $ref: '#/components/headers/rate-limit-remaining'
          RateLimit-Reset:
            $ref: '#/components/headers/rate-limit-reset'
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        headers:
          RateLimit-Limit:
            $ref: '#/components/headers/rate-limit-limit'
          RateLimit-Remaining:
            $ref: '#/components/headers/rate-limit-remaining'
          RateLimit-Reset:
            $ref: '#/components/headers/rate-limit-reset'
    requestBodies:
      CreateSubscription:
        content:
          application/json:
            schema:
              type: object
              example:
                email: bruce.wayne@wayneenterprise.com
                reactivate_existing: false
                send_welcome_email: false
                utm_source: WayneEnterprise
                utm_campaign: fall_2022_promotion
                utm_medium: organic
                referring_site: www.wayneenterprise.com/blog
                custom_fields:
                  - name: First Name
                    value: Bruce
                  - name: Last Name
                    value: Wayne
              required:
                - email
              properties:
                email:
                  type: string
                  description: The email address of the subscription.
                  format: email
                  example: bruce.wayne@wayneenterprise.com
                reactivate_existing:
                  type: boolean
                  default: false
                  description: >-
                    Whether or not to reactivate the subscription if they have
                    already unsubscribed. This option should be used only if the
                    subscriber is knowingly resubscribing.
                send_welcome_email:
                  type: boolean
                  default: false
                utm_source:
                  type: string
                  description: The source of the subscription.
                  example: twitter
                utm_medium:
                  type: string
                  description: The medium of the subscription
                  example: organic
                utm_campaign:
                  type: string
                  description: The acquisition campaign of the subscription
                  example: fall_2022
                referring_site:
                  type: string
                  description: The website that the subscriber was referred from
                  example: https://google.com
                referral_code:
                  type: string
                  description: >-
                    This should be a subscribers referral_code. This gives
                    referral credit for the new subscription.
                custom_fields:
                  type: array
                  description: >-
                    The custom fields must already exist for the publication. Any
                    new custom fields here will be discarded.
                  items:
                    $ref: '#/components/schemas/CustomFieldValue'
                double_opt_override:
                  x-stoplight:
                    id: 2f6ewbrexb1cn
                  enum:
                    - 'on'
                    - 'off'
                    - not_set
                  description: >-
                    Override publication double-opt settings for this
                    subscription.
                tier:
                  type: string
                  enum:
                    - free
                    - premium
                  description: The tier for this subscription.
                stripe_customer_id:
                  type: string
                  description: The Stripe customer ID for this subscription.
                automation_ids:
                  type: array
                  x-stoplight:
                    id: u38luaheibmto
                  description: >-
                    Enroll the subscriber into automations after their
                    subscription has been created. Requires the automations to
                    have an active *Add by API* trigger.
                  items:
                    x-stoplight:
                      id: a7h1jnxi796g8
                    type: string
                    format: regex
                    example: aut_00000000-0000-0000-0000-000000000000
                    pattern: ^(aut_)
        description: ''
        required: true
      UpdateSubscription:
        content:
          application/json:
            schema:
              type: object
              example:
                tier: premium
                stripe_customer_id: cus_AbcDef123987xY
                unsubscribe: false
                custom_fields:
                  - name: First Name
                    value: JOHN
                  - name: Birthday
                    delete: true
              properties:
                tier:
                  type: string
                  enum:
                    - free
                    - premium
                  description: Optional parameter to set the tier for this subscription.
                stripe_customer_id:
                  type: string
                  description: >-
                    Optional parameter to set the Stripe customer ID on this
                    subscription.
                unsubscribe:
                  type: boolean
                  default: false
                  example: false
                  description: >-
                    Optional parameter to unsubscribe the subscriber. If they are
                    a premium subscription, this will also end their billing.
                custom_fields:
                  type: array
                  description: >-
                    The custom fields must already exist for the publication. Any
                    new custom fields here will be discarded.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the existing custom field
                      value:
                        type: string
                        description: >-
                          The value to stored for the subscription. Will be
                          ignored if `delete: true` is included.
                      delete:
                        type: boolean
                        default: false
                        description: >-
                          Optionally delete any value stored. If true, any passed
                          in `value` attribute will be ignored.
        description: ''
        required: true
      CreateAutomationJourney:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  x-stoplight:
                    id: ppo283h4f9ic5
                  example: example@example.com
                  description: The email address associated with the subscription.
                subscription_id:
                  type: string
                  x-stoplight:
                    id: 50w0lj0pv89q9
                  description: The prefixed ID of the subscription.
                  example: sub_00000000-0000-0000-0000-000000000000
                  pattern: ^(sub_)
                double_opt_override:
                  x-stoplight:
                    id: 2fh2c53550b97
                  enum:
                    - 'on'
                    - 'off'
                    - not_set
                  description: >-
                    Override publication double-opt settings for this
                    subscription.
        description: |-
          Required: specify either the `email` or `subscription_id` parameter.
          If both are given, the `subscription_id` will take precedence.
    parameters:
      postId:
        name: postId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(post_)
          example: post_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the post object
      publicationId:
        name: publicationId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(pub_)
          example: pub_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the publication object
      subscriptionId:
        name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(sub_)
          example: sub_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the subscription object
      subscriberId:
        name: subscriberId
        in: path
        required: true
        schema:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        description: The ID of the subscriber object
      expandPost:
        name: expand[]
        in: query
        explode: true
        style: form
        description: >-
          Optional list of expandable objects.<br>`stats` - Returns statistics
          about the post(s)<br> `free_web_content` - Returns the web HTML rendered
          to a free reader<br> `free_email_content` - Returns the email HTML
          rendered to a free reader<br> `free_rss_content` - Returns the RSS feed
          HTML<br> `premium_web_content` - Returns the web HTML rendered to a
          premium reader<br> `premium_email_content` - Returns the email HTML
          rendered to a premium reader
        required: false
        example:
          - stats
          - free_web_content
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - stats
              - free_web_content
              - free_email_content
              - free_rss_content
              - premium_web_content
              - premium_email_content
      expandPublication:
        name: expand[]
        in: query
        explode: true
        style: form
        description: >-
          Optional list of expandable objects.<br>`stats` - Returns all statistics
          about the publication(s)<br>`stat_active_subscriptions` - Total number
          of active free and premium
          subscriptions<br>`stat_active_premium_subscriptions` - Total number of
          active premium/paid subscriptions<br>`stat_active_free_subscriptions` -
          Total number of active free subscriptions<br>`stat_average_open_rate` -
          The publications historical average open
          rate<br>`stat_average_click_rate` - The publications historical average
          click through rate<br>`stat_total_sent` - Total number of emails
          sent<br>`stat_total_unique_opened` - Total number of uniquely opened
          emails. Only counts the first open for each
          subscriber.<br>`stat_total_clicked` - The total number of links clicked
          from emails.
        required: false
        example:
          - stats
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - stats
      expandSubscription:
        name: expand[]
        in: query
        explode: true
        style: form
        description: >-
          Optional list of expandable objects.<br>`stats` - Returns statistics
          about the subscription(s).<br>`custom_fields` - Returns an array of
          custom field values that have been set on the
          subscription.<br>`referrals` - Returns an array of subscriptions with
          limited data - `id`, `email`, and `status`. These are the subscriptions
          that were referred by this subscription.
        required: false
        example:
          - stats
          - custom_fields
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - stats
              - custom_fields
              - referrals
      filterSubscriptionsStatus:
        name: status
        in: query
        required: false
        schema:
          type: string
          default: all
          enum:
            - validating
            - invalid
            - pending
            - active
            - inactive
            - all
        description: Optionally filter the results by a status
      filterPostAudience:
        name: audience
        in: query
        required: false
        schema:
          type: string
          enum:
            - free
            - premium
            - all
          default: all
        example: all
        description: Optionally filter the results by audience
      filterPostPlatform:
        name: platform
        in: query
        required: false
        schema:
          type: string
          enum:
            - web
            - email
            - both
            - all
          default: all
        example: all
        description: >-
          Optionally filter the results by platform.<br>`web` - Posts only
          published to web.<br>`email` - Posts only published to email.<br>`both`
          - Posts published to email and web.<br>`all` - Does not restrict results
          by platform.
      filterPostStatus:
        name: status
        in: query
        required: false
        schema:
          type: string
          enum:
            - draft
            - confirmed
            - archived
            - all
          default: all
        example: all
        description: >-
          Optionally filter the results by the status of the post.<br>`draft` -
          not been scheduled.<br>`confirmed` - The post will be active after the
          `scheduled_at`.<br>`archived` - The post is no longer active.<br>`all` -
          Does not restrict results by status.
      filterSubscriptionsTier:
        name: tier
        in: query
        required: false
        schema:
          type: string
          enum:
            - free
            - premium
            - all
          default: all
        example: all
        description: Optionally filter the results by a their tier
      segmentId:
        name: segmentId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(seg_)
          example: seg_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the segment object
      limit:
        name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 10
        description: >-
          A limit on the number of objects to be returned. The limit can range
          between 1 and 100, and the default is 10.
      page:
        name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: >-
          Pagination returns the results in pages. Each page contains the number
          of results specified by the `limit` (default: 10).<br>If not specified,
          results 1-10 from page 1 will be returned.
      filterSegmentType:
        name: type
        in: query
        required: false
        schema:
          type: string
          enum:
            - dynamic
            - static
            - manual
            - all
          example: dynamic
          default: all
        description: Optionally filter the results by the segment's type.
      filterSegmentStatus:
        name: status
        in: query
        required: false
        schema:
          type: string
          enum:
            - pending
            - processing
            - completed
            - failed
            - all
          example: completed
          default: all
        description: Optionally filter the results by the segment's status.
      email:
        name: email
        in: path
        required: true
        schema:
          type: string
          example: work@example.com
        description: The ID of the subscriber object
      emailBlastId:
        name: emailBlastId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(blast_)
          example: blast_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the email blast object
      expandEmailBlast:
        name: expand[]
        in: query
        explode: true
        style: form
        description: >-
          Optional list of expandable objects.<br>`stats` - Returns statistics
          about the email blast(s)<br> `free_email_content` - Returns the email
          HTML rendered to a free reader<br> `premium_email_content` - Returns the
          email HTML rendered to a premium reader
        required: false
        example:
          - stats
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - stats
              - free_email_content
              - premium_email_content
      filterPostContentTags:
        name: content_tags[]
        in: query
        style: form
        description: >-
          Optionally filter posts by content_tags. Adding a content tag will
          return any post with that content tag associated to it.<br>Example:
          Filtering for `content_tags: ["sales","closing"]` will return results of
          posts that have *either* sales or closing content_tags.
        required: false
        schema:
          type: array
          uniqueItems: true
          items:
            type: string
      filterSubscriptionEmail:
        name: email
        in: query
        required: false
        schema:
          type: string
          format: email
          example: clark@dailyplanet.com
        description: >-
          Optional email address to find a subscription.<br>This param must be an
          exact match and is case insensitive.
      direction:
        name: direction
        in: query
        required: false
        schema:
          type: string
          default: asc
          enum:
            - asc
            - desc
        description: >-
          The direction that the results are sorted in. Defaults to asc<br> `asc`
          - Ascending, sorts from smallest to largest.<br> `desc` - Descending,
          sorts from largest to smallest.
      publicationOrderBy:
        name: order_by
        in: query
        required: false
        schema:
          type: string
          enum:
            - created
            - name
          example: name
          default: created
        description: >-
          The field that the results are sorted by. Defaults to created<br>
          `created` - The time in which the publication was first created.<br>
          `name` - The name of the publication.
      postOrderBy:
        name: order_by
        in: query
        required: false
        schema:
          type: string
          enum:
            - created
            - publish_date
            - displayed_date
          example: displayed_date
          default: created
        description: >-
          The field that the results are sorted by. Defaults to created<br>
          `created` - The time in which the post was first created.<br>
          `publish_date` - The time the post was set to be published.<br>
          `displayed_date` - The time displayed in place of the `publish_date`. If
          no `displayed_date` was set, it will default to the `publish_date`
      subscriptionOrderBy:
        name: order_by
        in: query
        required: false
        schema:
          type: string
          enum:
            - created
            - email
          example: email
          default: created
        description: >-
          The field that the results are sorted by. Defaults to created<br>
          `created` - The time in which the subscription was first created.<br>
          `email` - The email address of the subscription.
      segmentOrderBy:
        name: order_by
        in: query
        required: false
        schema:
          type: string
          enum:
            - created
            - last_calculated
          example: last_calculated
          default: created
        description: >-
          The field that the results are sorted by. Defaults to created<br>
          `created` - The time in which the segment was first created.<br>
          `last_calculated` - The time that the segment last completed
          calculation. Measured in seconds since the Unix epoch.
      emailBlastOrderBy:
        name: order_by
        in: query
        required: false
        schema:
          type: string
          enum:
            - created
            - last_sent
          example: last_sent
          default: created
        description: >-
          The field that the results are sorted by. Defaults to created<br>
          `created` - The time in which the segment was first created.<br>
          `last_sent` - The time the blast was last sent. Measured in seconds
          since the Unix epoch.
      automationId:
        name: automationId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(aut_)
          example: aut_00000000-0000-0000-0000-000000000000
        description: The prefixed ID of the automation object
      automationJourneyId:
        name: automationJourneyId
        in: path
        required: true
        schema:
          type: string
          pattern: ^(aj_)
          example: aj_00000000-0000-0000-0000-000000000000
        description: The prefixed automation journey id
      filterAutomationJourneyStatus:
        name: status
        in: query
        schema:
          type: string
          enum:
            - in_progress
            - completed
            - exited_early
            - all
          default: all
          example: all
        description: Optionally filter the results by a status
        allowEmptyValue: true
      filterAutomationJourneySubscriptionId:
        name: subscription_id
        in: query
        required: false
        schema:
          type: string
          example: sub_00000000-0000-0000-0000-000000000000
          pattern: ^(sub_)
          format: regex
        description: Optionally filter the results by a subscription id
      filterAutomationJourneySubscriptionEmail:
        name: email
        in: query
        required: false
        schema:
          type: string
          format: email
          example: clark@dailyplanet.com
        description: >-
          Optionally filter the results by a subscription email address.<br>This
          param must be an exact match and is case insensitive.
      filterPostHiddenFromFeed:
        name: hidden_from_feed
        in: query
        required: false
        schema:
          type: string
          enum:
            - all
            - 'true'
            - 'false'
          default: all
        description: >-
          Optionally filter the results by the `hidden_from_feed` attribute of the
          post.<br>`all` - Does not restrict results by
          `hidden_from_feed`.<br>`true` - Only return posts hidden from the
          feed.<br>`false` - Only return posts that are visible on the feed.
  paths:
    /publications:
      get:
        summary: Index
        description: Retrieve all publications associated with your API key.
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Publication'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
                examples:
                  example-1:
                    value:
                      data:
                        - id: pub_00000000-0000-0000-0000-000000000000
                          name: The Daily Letter
                          referral_program_enabled: false
                          created: 1694198809
                      limit: 10
                      page: 1
                      total_results: 1
                      total_pages: 1
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        parameters:
          - $ref: '#/components/parameters/expandPublication'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/direction'
          - $ref: '#/components/parameters/publicationOrderBy'
        operationId: get-publications
        tags:
          - Publications
    /publications/{publicationId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Publication'
                  required:
                    - data
                examples: {}
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId
        parameters:
          - $ref: '#/components/parameters/expandPublication'
        description: Retrieve a single publication
        tags:
          - Publications
    /publications/{publicationId}/posts:
      get:
        summary: Index
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/Post'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-posts
        description: Retrieve all posts belonging to a specific publication
        parameters:
          - $ref: '#/components/parameters/expandPost'
          - $ref: '#/components/parameters/filterPostAudience'
          - $ref: '#/components/parameters/filterPostPlatform'
          - $ref: '#/components/parameters/filterPostStatus'
          - $ref: '#/components/parameters/filterPostContentTags'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/postOrderBy'
          - $ref: '#/components/parameters/direction'
          - $ref: '#/components/parameters/filterPostHiddenFromFeed'
        tags:
          - Posts
      parameters:
        - $ref: '#/components/parameters/publicationId'
    /publications/{publicationId}/posts/{postId}:
      parameters:
        - $ref: '#/components/parameters/postId'
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Post'
                  required:
                    - data
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-posts-postId
        parameters:
          - $ref: '#/components/parameters/expandPost'
        description: Retreive a single Post belonging to a specific publication
        tags:
          - Posts
      delete:
        summary: Destroy
        operationId: delete-posts-postId
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        description: >-
          Delete or Archive a post. Any post that has been confirmed will have
          it's status changed to `archived`. Posts in the `draft` status will be
          permenantly deleted.
        tags:
          - Posts
    /publications/{publicationId}/subscriptions:
      post:
        summary: Create
        requestBody:
          $ref: '#/components/requestBodies/CreateSubscription'
        responses:
          '200':
            description: Subscription created
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Subscription'
                  required:
                    - data
                examples: {}
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        description: Create new subscriptions for a publication.
        operationId: post-subscriptions
        tags:
          - Subscriptions
        parameters:
          - schema:
              type: string
            in: query
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Index
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/SubscriptionExpanded'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
                examples: {}
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-subscriptions
        description: Retrieve all subscriptions belonging to a specific publication
        parameters:
          - $ref: '#/components/parameters/expandSubscription'
          - $ref: '#/components/parameters/filterSubscriptionsStatus'
          - $ref: '#/components/parameters/filterSubscriptionsTier'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/filterSubscriptionEmail'
          - $ref: '#/components/parameters/subscriptionOrderBy'
          - $ref: '#/components/parameters/direction'
        tags:
          - Subscriptions
      put:
        summary: Bulk Update Status
        operationId: put-subscriptions-bulk-update-status
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      x-stoplight:
                        id: k57xx4p7cq6i3
                      type: object
                      required:
                        - subscription_update_id
                      properties:
                        subscription_update_id:
                          x-stoplight:
                            id: k98dvczd0e785
                          type: string
                          description: >-
                            The ID of the Subscription Update object responsible
                            for handling the update job
                  required:
                    - data
          '400':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '404':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '429':
            description: ''
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: ''
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        x-stoplight:
          id: on6udpkj61oa2
        description: Bulk update subscriptions' Status value
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription_ids:
                    type: array
                    x-stoplight:
                      id: 7k5m1tzztoek6
                    description: An array of prefixed subscription IDs
                    items:
                      x-stoplight:
                        id: 2gdvxlnw5ifm1
                      type: string
                  new_status:
                    x-stoplight:
                      id: yzo26m9whbsex
                    enum:
                      - active
                      - inactive
                    description: The new status value to apply to these subscription IDs
                required:
                  - subscription_ids
                  - new_status
        tags:
          - Subscriptions
      patch:
        summary: Bulk Update Status
        operationId: patch-subscriptions-bulk-update-status
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      required:
                        - subscription_update_id
                      properties:
                        subscription_update_id:
                          type: string
                          description: >-
                            The ID of the Subscription Update object responsible
                            for handling the update job
                  required:
                    - data
          '400':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '404':
            description: ''
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '429':
            description: ''
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: ''
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        description: Bulk update subscriptions' Status value
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription_ids:
                    type: array
                    description: An array of prefixed subscription IDs
                    items:
                      type: string
                  new_status:
                    enum:
                      - active
                      - inactive
                    description: The new status value to apply to these subscription IDs
                required:
                  - subscription_ids
                  - new_status
        tags:
          - Subscriptions
    /publications/{publicationId}/subscriptions/{subscriptionId}:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  description: The requested subscription object
                  properties:
                    data:
                      $ref: '#/components/schemas/SubscriptionExpanded'
                  required:
                    - data
                examples: {}
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-subscriptions-subscriptionId
        description: Retrieve a single subscription belonging to a specific publication
        parameters:
          - $ref: '#/components/parameters/expandSubscription'
        x-extension-1: null
        tags:
          - Subscriptions
      put:
        summary: Update
        operationId: put-subscriptions-subscriptionId
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  description: The updated subscription object
                  properties:
                    data:
                      $ref: '#/components/schemas/Subscription'
                  required:
                    - data
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSubscription'
        description: Update a subscriber
        tags:
          - Subscriptions
      patch:
        summary: Update
        operationId: 1patch-subscriptions-subscriptionId
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  description: The updated subscription object
                  properties:
                    data:
                      $ref: '#/components/schemas/Subscription'
                  required:
                    - data
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        requestBody:
          $ref: '#/components/requestBodies/UpdateSubscription'
        description: Update a subscriber
        tags:
          - Subscriptions
      delete:
        summary: Delete
        operationId: delete-subscriptions-subscriptionId
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  type: object
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        description: >-
          Delete a subscription.


          **This cannot be undone** All data associated with the subscription will
          also be deleted. We recommend unsubscribing when possible instead of
          deleting.


          If a premium subscription is deleted they will no longer be billed.
        tags:
          - Subscriptions
    /publications/{publicationId}/subscriptions/by_subscriber_id/{subscriberId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/subscriberId'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  description: The requested subscription object
                  properties:
                    data:
                      $ref: '#/components/schemas/SubscriptionExpanded'
                  required:
                    - data
                examples: {}
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-subscriptions-subscriberId
        description: >-
          Retrieve a single subscription belonging to a specific subscriber in a
          specific publication
        parameters:
          - $ref: '#/components/parameters/expandSubscription'
        x-extension-1: null
        tags:
          - Subscriptions
    /publications/{publicationId}/subscriptions/by_email/{email}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/email'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  description: The requested subscription object
                  properties:
                    data:
                      $ref: '#/components/schemas/SubscriptionExpanded'
                  required:
                    - data
                examples: {}
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-subscriptions-email
        description: >-
          Retrieve a single subscription belonging to a specific email address in
          a specific publication
        parameters:
          - $ref: '#/components/parameters/expandSubscription'
        x-extension-1: null
        tags:
          - Subscriptions
    /publications/{publicationId}/subscriptions/bulk_actions:
      put:
        summary: Bulk Update
        operationId: put-subscriptions-bulk-actions-bulk-update
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        subscription_update_id:
                          x-stoplight:
                            id: 3wryi6tn9zd4q
                          type: string
                          description: >-
                            The ID of the Subscription Update object responsible
                            for handling the update job
                  required:
                    - data
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '429':
            description: Too Many Requests
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal Server Error
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        description: >-
          Bulk update subscriptions' field values (standard fields and custom
          fields)
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    x-stoplight:
                      id: s9y6xaxv7krdd
                    description: >-
                      An array of objects representing the subscriptions to be
                      updated
                    items:
                      x-stoplight:
                        id: ppp6qqxftqlrj
                      type: object
                      properties:
                        subscription_id:
                          type: string
                          x-stoplight:
                            id: dzuevcz6n6eka
                          description: The prefixed subscription ID
                        tier:
                          x-stoplight:
                            id: bat4ia3t0j7na
                          enum:
                            - free
                            - premium
                          description: The Tier of the Subscription (not required)
                        stripe_customer_id:
                          type: string
                          x-stoplight:
                            id: 59ze7ad6zup94
                          description: >-
                            The Stripe Customer ID of the subscription (not
                            required)
                        unsubscribe:
                          type: boolean
                          x-stoplight:
                            id: oxn0gpgtb1kie
                          description: >-
                            A boolean value specifying whether to unsubscribe this
                            subscription from the publication (not required)
                        custom_fields:
                          type: array
                          x-stoplight:
                            id: ugk6m5arzih3r
                          description: An array of custom field objects to update
                          items:
                            x-stoplight:
                              id: 3hbu15odjkx7m
                            type: object
                            properties:
                              display:
                                type: string
                                x-stoplight:
                                  id: fut7qxlkmvpn4
                                description: The display value of the custom field
                              value:
                                type: string
                                x-stoplight:
                                  id: ypiajjjr46069
                                description: The value of the custom field
                              delete:
                                type: boolean
                                x-stoplight:
                                  id: zda9gshmp0u4d
                                description: >-
                                  A boolean value to specify whether to delete
                                  this custom field entry from the subscription
                      required:
                        - subscription_id
        tags:
          - Subscriptions
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
          description: The prefixed ID of the publication object
      patch:
        summary: Bulk Update
        operationId: patch-subscriptions-bulk-actions-bulk-update
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        subscription_update_id:
                          x-stoplight:
                            id: hbsrfcjhpldby
                          type: string
                          description: >-
                            The ID of the Subscription Update object responsible
                            for handling the update job
                  required:
                    - data
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '429':
            description: Too Many Requests
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal Server Error
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        description: >-
          Bulk update subscriptions' field values (standard fields and custom
          fields)
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    x-stoplight:
                      id: 5lkkm715bdcq4
                    description: >-
                      An array of objects representing the subscriptions to be
                      updated
                    items:
                      x-stoplight:
                        id: 9waw25ks35mke
                      type: object
                      properties:
                        subscription_id:
                          type: string
                          x-stoplight:
                            id: hzticzv9wdqjh
                          description: The prefixed subscription ID
                        tier:
                          x-stoplight:
                            id: o5x4hj5k7ljlp
                          enum:
                            - free
                            - premium
                          description: The Tier of the Subscription (not required)
                        stripe_customer_id:
                          type: string
                          x-stoplight:
                            id: alsqmitbaif1q
                          description: >-
                            The Stripe Customer ID of the subscription (not
                            required)
                        unsubscribe:
                          type: boolean
                          x-stoplight:
                            id: zsglxmqfy45mk
                          description: >-
                            A boolean value specifying whether to unsubscribe this
                            subscription from the publication (not required)
                        custom_fields:
                          type: array
                          x-stoplight:
                            id: 6d9bhqiuvy3qy
                          description: An array of custom field objects to update
                          items:
                            x-stoplight:
                              id: qx3j1qlz0o8pn
                            type: object
                            properties:
                              display:
                                type: string
                                x-stoplight:
                                  id: 1fe6q183uswhb
                                description: The display value of the custom field
                              value:
                                type: string
                                x-stoplight:
                                  id: dgzgi9u15rrr6
                                description: The value of the custom field
                              delete:
                                type: boolean
                                x-stoplight:
                                  id: nrxynbhipzx5j
                                description: >-
                                  A boolean value to specify whether to delete
                                  this custom field entry from the subscription
                      required:
                        - subscription_id
        tags:
          - Subscriptions
    /publications/{publicationId}/segments:
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Index
        tags:
          - Segments
        operationId: get-publications-publicationId-segments
        description: >-
          Retrieve information about all segments belonging to a specific
          publication
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      description: An array of all segments.
                      type: array
                      items:
                        $ref: '#/components/schemas/Segment'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        parameters:
          - $ref: '#/components/parameters/filterSegmentType'
          - $ref: '#/components/parameters/filterSegmentStatus'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/segmentOrderBy'
          - $ref: '#/components/parameters/direction'
    /publications/{publicationId}/segments/{segmentId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/segmentId'
      get:
        summary: Show
        tags:
          - Segments
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Segment'
                  required:
                    - data
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-segments-segmentId
        description: Retrieve a single segment belonging to a specific publication
      delete:
        summary: Delete
        operationId: delete-publications-publicationId-segments-segmentId
        responses:
          '204':
            description: No Content
            content:
              application/json:
                schema:
                  type: object
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '404':
            description: Not Found
            headers: {}
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '429':
            $ref: '#/components/responses/429'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        description: >-
          Delete a segment. Deleting the segment does not effect the subscriptions
          in the segment.
        tags:
          - Segments
    /publications/{publicationId}/segments/{segmentId}/results:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/segmentId'
      get:
        summary: Expand Results
        tags:
          - Segments
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      description: An array of subscription ids
                      example:
                        - sub_00000000-0000-0000-0000-000000000000
                        - sub_00000000-1111-1111-1111-111111111111
                      items:
                        type: string
                        description: The prefixed subscription id
                        pattern: ^(sub_)
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-segments-segmentId-results
        description: >-
          List the Subscriber Ids from the most recent calculation of a specific
          publication.
        parameters:
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
    /publications/{publicationId}/email_blasts:
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Index
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/EmailBlast'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-email_blasts
        description: Retrieve all Email Blasts
        tags:
          - Email Blasts
        parameters:
          - $ref: '#/components/parameters/expandEmailBlast'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/direction'
          - $ref: '#/components/parameters/emailBlastOrderBy'
    /publications/{publicationId}/email_blasts/{emailBlastId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/emailBlastId'
      get:
        summary: Show
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/EmailBlast'
                  required:
                    - data
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-email_blasts-emailBlastId
        description: Retrieve an Email Blast
        tags:
          - Email Blasts
        parameters:
          - $ref: '#/components/parameters/expandEmailBlast'
    /publications/{publicationId}/referral_program:
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Show
        tags:
          - Referral Program
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      description: >-
                        A list of the milestones related to this publication's
                        referral program.
                      items:
                        $ref: '#/components/schemas/Milestone'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-public-referral_program
        description: >-
          Retrieve details about the publication's referral program, including
          milestones and rewards.
        parameters:
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
    /publications/{publicationId}/custom_fields:
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
          description: The prefixed ID of the publication object
      get:
        summary: Index
        tags:
          - Custom Fields
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      x-stoplight:
                        id: xgqir8wmsgweu
                      type: array
                      items:
                        x-stoplight:
                          id: l9tbmy41je34n
                        type: object
                        properties:
                          id:
                            type: string
                            x-stoplight:
                              id: dbt4deqvrucbh
                          kind:
                            x-stoplight:
                              id: 44t4qsjaz6qt6
                            enum:
                              - string
                              - integer
                              - boolean
                              - date
                              - datetime
                          display:
                            type: string
                            x-stoplight:
                              id: rp06xgqs2vwzt
                          created:
                            type: integer
                            x-stoplight:
                              id: hfn37l8waq65f
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-custom_fields
        x-stoplight:
          id: ksq3i3er86jmw
        description: Retrieve all custom fields belonging to a specific publication
      post:
        summary: Create
        tags:
          - Custom Fields
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      x-stoplight:
                        id: 4romfiyvkx3ge
                      properties:
                        id:
                          type: string
                          x-stoplight:
                            id: sj09d7tyi314n
                        kind:
                          x-stoplight:
                            id: 8spknd648i56s
                          enum:
                            - string
                            - integer
                            - boolean
                            - date
                            - datetime
                        display:
                          type: string
                          x-stoplight:
                            id: n82zmtd49hjrz
                        created:
                          type: integer
                          x-stoplight:
                            id: ds98r91chqlop
                      required:
                        - id
                        - kind
                        - display
                        - created
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: post-publications-publicationId-custom_fields
        x-stoplight:
          id: d99hkfb2ns67e
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    x-stoplight:
                      id: tqnncf3dp1ak6
                    enum:
                      - string
                      - integer
                      - boolean
                      - date
                      - datetime
                  display:
                    type: string
                    x-stoplight:
                      id: p0975jdaqv2qi
                required:
                  - kind
                  - display
        description: Create a custom field on a publication, for use in subscriptions
    /publications/{publicationId}/custom_fields/{id}:
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
          description: The prefixed ID of the publication object
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: The ID of the Custom Fields object
      put:
        summary: Update
        tags:
          - Custom Fields
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      x-stoplight:
                        id: etg6yofrt8pbc
                      properties:
                        id:
                          type: string
                          x-stoplight:
                            id: huepwawxj29qk
                        display:
                          type: string
                          x-stoplight:
                            id: 52mp1yl84nljs
                        kind:
                          x-stoplight:
                            id: xxeszbu9kbtm2
                          enum:
                            - string
                            - integer
                            - boolean
                            - date
                            - datetime
                        created:
                          type: integer
                          x-stoplight:
                            id: laf29u1fe818q
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: put-publications-publicationId-custom_fields-id
        x-stoplight:
          id: 9dz8q1w84wjjg
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  display:
                    type: string
                    x-stoplight:
                      id: vystzvcwv5671
        description: Update a custom field on a publication
      patch:
        summary: Update
        tags:
          - Custom Fields
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                        display:
                          type: string
                        kind:
                          enum:
                            - string
                            - integer
                            - boolean
                            - date
                            - datetime
                        created:
                          type: integer
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: patch-publications-publicationId-custom_fields-id
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  display:
                    type: string
        description: Update a custom field on a publication
      delete:
        summary: Delete
        tags:
          - Custom Fields
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      x-stoplight:
                        id: y9i4exziqmhyy
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: delete-publications-publicationId-custom_fields
        x-stoplight:
          id: smd0qte1wydk8
        description: Delete a custom field from a publication
      get:
        summary: Show
        operationId: get-publications-publicationId-custom_fields-id
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      x-stoplight:
                        id: yxnx7ckirz6lh
                      properties:
                        id:
                          type: string
                          x-stoplight:
                            id: l3pcff8cpq5oz
                        display:
                          type: string
                          x-stoplight:
                            id: p8yaui0t620ey
                        kind:
                          x-stoplight:
                            id: kaovowm5r2n1c
                          enum:
                            - string
                            - integer
                            - boolean
                            - date
                            - datetime
                        created:
                          type: integer
                          x-stoplight:
                            id: rxqge0k9yvfg7
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        x-stoplight:
          id: hm2wm7397xf3b
        tags:
          - Custom Fields
        description: View a specific custom field on a publication
    /publications/{publicationId}/bulk_subscription_updates:
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
          description: The prefixed ID of the publication object
      get:
        summary: Index
        tags:
          - Bulk Subscription Updates
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      description: An array of Subscription Update objects
                      items:
                        x-stoplight:
                          id: 2hylp5cn6st6z
                        type: object
                        properties:
                          id:
                            type: string
                            x-stoplight:
                              id: 81nj1bfmod87v
                            description: The ID of the update object
                          type:
                            x-stoplight:
                              id: hvk3w4oqizjrt
                            enum:
                              - status
                              - bulk
                            description: The type of update (status or bulk)
                          params:
                            type: string
                            x-stoplight:
                              id: v9z0n1ihuc9nq
                            description: The parameters passed in for the update
                          status:
                            x-stoplight:
                              id: ho959em1j7sbn
                            enum:
                              - pending
                              - processing
                              - complete
                              - failed
                            description: The status of the update
                          publication_id:
                            type: string
                            x-stoplight:
                              id: aguqyix0i78tk
                            description: The publication ID associated with this update
                          failure_reason:
                            type:
                              - string
                            x-stoplight:
                              id: 9e84903h41jj8
                            description: >-
                              If the job as a whole fails, this will detail the
                              errors encountered
                          completed:
                            type:
                              - integer
                            x-stoplight:
                              id: v34g2oimnp3mj
                            description: The timestamp of the job's completion
                          created:
                            type: integer
                            x-stoplight:
                              id: xygdtlnbbf4ji
                            description: The timestamp of the job's creation
                          updated:
                            type: integer
                            x-stoplight:
                              id: qy2nzr2x7mvq1
                            description: The timestamp of the job's update
                          error_log:
                            type: array
                            x-stoplight:
                              id: uk2ghw9lxa49i
                            description: >-
                              An array of errors encountered for individual
                              updates within the job
                            items:
                              x-stoplight:
                                id: q7h55451iwxyt
                              type: string
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-subcription_updates
        description: Returns a list of Subscription Update objects for a publication
        x-stoplight:
          id: exabcp4mv3x8b
    /publications/{publicationId}/bulk_subscription_updates/{id}:
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
          description: The prefixed ID of the publication object
        - schema:
            type: string
          name: id
          in: path
          required: true
          description: The ID of the Subscription Update object
      get:
        summary: Show
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      x-stoplight:
                        id: 5kldmu0lv1bxp
                      properties:
                        id:
                          type: string
                          x-stoplight:
                            id: 6e8qo09j7fr1e
                          description: The ID of the update object
                        type:
                          x-stoplight:
                            id: 93ul0uy0une2s
                          enum:
                            - bulk
                            - status
                          description: The type of update (status or bulk)
                        params:
                          type: string
                          x-stoplight:
                            id: xh9fmwrxr8r22
                          description: The parameters passed in for the update
                        status:
                          x-stoplight:
                            id: mtxjoaefx7y2o
                          enum:
                            - pending
                            - processing
                            - complete
                            - failed
                          description: The status of the update
                        publication_id:
                          type: string
                          x-stoplight:
                            id: a8ec7kaw1es2g
                          description: The publication ID associated with this update
                        failure_reason:
                          type: string
                          x-stoplight:
                            id: ro5hb1r9u80fq
                          description: >-
                            If the job as a whole fails, this will detail the
                            errors encountered
                        completed:
                          type: integer
                          x-stoplight:
                            id: m36gvnka9dhl8
                          description: The timestamp of the job's completion
                        created:
                          type: integer
                          x-stoplight:
                            id: fmt13c2ekhd1k
                          description: The timestamp of the job's creation
                        updated:
                          type: integer
                          x-stoplight:
                            id: q96k4ev6qkxgn
                          description: The timestamp of the job's update
                        error_log:
                          type: array
                          x-stoplight:
                            id: b8pcvkbvkw8mn
                          description: >-
                            An array of errors encountered for individual updates
                            within the job
                          items:
                            x-stoplight:
                              id: l1xfspj0s0bg3
                            type: string
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-subcription_updates-id
        x-stoplight:
          id: 6jnppj12wq33m
        description: Returns a single Subscription Update object for a publication
        tags:
          - Bulk Subscription Updates
    /publications/{publicationId}/automations/{automationId}/journeys:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/automationId'
      post:
        summary: Create
        tags:
          - Automation Journeys
        operationId: post-publications-publicationId-automations-automationId_journeys
        responses:
          '201':
            description: Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AutomationJourney'
                      x-stoplight:
                        id: ix2rjbjovitpy
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        x-stoplight:
          id: na2fbzu7ltfw7
        description: >-
          Add an existing subscription to an automation flow. Requires the
          automation to have an active *Add by API* trigger.


          The specified `email` or `subscription_id` will be matched against your
          existing subscribers.

          If an existing subscriber is found, they will be enrolled immediately.


          Looking to enroll new subscribers? Use the **[Subscriptions
          Create](https://beehiiv.stoplight.io/docs/v2/1a77a563675ee-create)**
          endpoint instead and specify the `automation_ids` param.
        requestBody:
          $ref: '#/components/requestBodies/CreateAutomationJourney'
      get:
        summary: Index
        tags:
          - Automation Journeys
        responses:
          '200':
            description: OK
            headers:
              RateLimit-Limit:
                $ref: '#/components/headers/rate-limit-limit'
              RateLimit-Remaining:
                $ref: '#/components/headers/rate-limit-remaining'
              RateLimit-Reset:
                $ref: '#/components/headers/rate-limit-reset'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/AutomationJourney'
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
                  required:
                    - data
                    - limit
                    - page
                    - total_results
                    - total_pages
                examples: {}
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-automations-automationId-journeys
        description: >-
          Retrieve all automation journeys associated with an automation that
          belongs to a specific publication
        parameters:
          - $ref: '#/components/parameters/filterAutomationJourneyStatus'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
          - $ref: '#/components/parameters/filterAutomationJourneySubscriptionId'
          - $ref: '#/components/parameters/filterAutomationJourneySubscriptionEmail'
    /publications/{publicationId}/automations/{automationId}/journeys/{automationJourneyId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/automationId'
        - $ref: '#/components/parameters/automationJourneyId'
      get:
        summary: Show
        tags:
          - Automation Journeys
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AutomationJourney'
                      x-stoplight:
                        id: ib4gb4w1iyqx9
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: >-
          get-publications-publicationId-automations-automationId-journeys-automationJourneyId
        x-stoplight:
          id: 4vb2k1whqwnl5
    /publications/{publicationId}/automations:
      parameters:
        - $ref: '#/components/parameters/publicationId'
      get:
        summary: Index
        tags:
          - Automations
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      x-stoplight:
                        id: bxzhq3esdy3w5
                      items:
                        $ref: '#/components/schemas/Automation'
                        x-stoplight:
                          id: tuy24yfr54msa
                    limit:
                      type: integer
                      description: >-
                        The limit placed on the results. If no limit was specified
                        in the request,this defaults to 10.
                    page:
                      type: integer
                      default: 1
                      minimum: 0
                      description: >-
                        The page number the results are from. If no page was
                        specified in the request, this defaults to page 1.
                    total_results:
                      type: integer
                      description: The total number of results from all pages.
                    total_pages:
                      type: integer
                      description: The total number of pages.
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        x-stoplight:
          id: 0v6ymt65zcu5p
        operationId: get-publications-publicationId-automations
        parameters:
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/page'
    /publications/{publicationId}/automations/{automationId}:
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/automationId'
      get:
        summary: Show
        tags:
          - Automations
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Automation'
                      x-stoplight:
                        id: g31i1j8uubg2d
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: get-publications-publicationId-automations-automationId
        x-stoplight:
          id: nj6rwamvddsga
    /publications/{publicationId}/subscriptions/{subscriptionId}/tags:
      parameters:
        - schema:
            type: string
          name: publicationId
          in: path
          required: true
        - schema:
            type: string
          name: subscriptionId
          in: path
          required: true
      post:
        summary: Post
        tags:
          - Subscription Tags
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/SubscriptionExpandedTags'
                      x-stoplight:
                        id: uzkkps7tsduon
          '400':
            $ref: '#/components/responses/400'
          '404':
            $ref: '#/components/responses/404'
          '429':
            $ref: '#/components/responses/429'
          '500':
            $ref: '#/components/responses/500'
        operationId: post-publications-publicationId-subscriptions-subscriptionId-tags
        x-stoplight:
          id: yol8vozgcmtzp
        description: >-
          Create new subscription tags for a subscription. If the tag does not
          exist on the publication, it will be created automatically.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    x-stoplight:
                      id: rkvymu3epmdh2
                    description: Tags that can be used to group subscribers
                    example:
                      - Premium
                      - Basic
                      - Active
                      - Engaged
                    items:
                      x-stoplight:
                        id: ummnvdmw4stxe
                      type: string
                      example: Premium
          description: >-
            Tags are only added through the `create` action. If the tag already
            exists, it will be ignored.
  tags:
    - name: Automations
    - name: Automation Journeys
    - name: Bulk Subscription Updates
    - name: Custom Fields
    - name: Email Blasts
    - name: Posts
    - name: Publications
    - name: Referral Program
    - name: Segments
    - name: Subscriptions
    - name: Subscription Tags
konfigCliVersion: 1.38.37
